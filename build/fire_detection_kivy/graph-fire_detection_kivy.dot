digraph G {
charset="UTF-8";
	rankdir="LR";
	concentrate="true";
	"<PyiModuleGraph>" [label="<PyiModuleGraph>"];
	"urllib3.packages.six.moves.urllib" [label="<f0> AliasNode| <f1> urllib3.packages.six.moves.urllib",shape="record"];
	"urllib3.packages.six.moves" [label="<f0> RuntimePackage| <f1> urllib3.packages.six.moves",shape="record"];
	"urllib3.packages.six.moves.queue" [label="<f0> AliasNode| <f1> urllib3.packages.six.moves.queue",shape="record"];
	"urllib3.packages.six" [label="<f0> SourceModule| <f1> urllib3.packages.six",shape="record"];
	"urllib3.packages" [label="<f0> Package| <f1> urllib3.packages",shape="record"];
	"urllib3" [label="<f0> Package| <f1> urllib3",shape="record"];
	"urllib3.util.url" [label="<f0> SourceModule| <f1> urllib3.util.url",shape="record"];
	"urllib3.util" [label="<f0> Package| <f1> urllib3.util",shape="record"];
	"urllib3.util.wait" [label="<f0> SourceModule| <f1> urllib3.util.wait",shape="record"];
	"select" [label="<f0> Extension| <f1> select",shape="record"];
	"errno" [label="<f0> BuiltinModule| <f1> errno",shape="record"];
	"urllib3.util.ssl_" [label="<f0> SourceModule| <f1> urllib3.util.ssl_",shape="record"];
	"urllib3.util.ssltransport" [label="<f0> SourceModule| <f1> urllib3.util.ssltransport",shape="record"];
	"socket" [label="<f0> SourceModule| <f1> socket",shape="record"];
	"array" [label="<f0> Extension| <f1> array",shape="record"];
	"selectors" [label="<f0> SourceModule| <f1> selectors",shape="record"];
	"math" [label="<f0> Extension| <f1> math",shape="record"];
	"_socket" [label="<f0> Extension| <f1> _socket",shape="record"];
	"ssl" [label="<f0> SourceModule| <f1> ssl",shape="record"];
	"calendar" [label="<f0> SourceModule| <f1> calendar",shape="record"];
	"argparse" [label="<f0> SourceModule| <f1> argparse",shape="record"];
	"textwrap" [label="<f0> SourceModule| <f1> textwrap",shape="record"];
	"shutil" [label="<f0> SourceModule| <f1> shutil",shape="record"];
	"zipfile" [label="<f0> SourceModule| <f1> zipfile",shape="record"];
	"py_compile" [label="<f0> SourceModule| <f1> py_compile",shape="record"];
	"os.path" [label="<f0> AliasNode| <f1> os.path",shape="record"];
	"importlib.machinery" [label="<f0> SourceModule| <f1> importlib.machinery",shape="record"];
	"importlib" [label="<f0> Package| <f1> importlib",shape="record"];
	"importlib._common" [label="<f0> SourceModule| <f1> importlib._common",shape="record"];
	"tempfile" [label="<f0> SourceModule| <f1> tempfile",shape="record"];
	"random" [label="<f0> SourceModule| <f1> random",shape="record"];
	"statistics" [label="<f0> SourceModule| <f1> statistics",shape="record"];
	"_statistics" [label="<f0> Extension| <f1> _statistics",shape="record"];
	"decimal" [label="<f0> SourceModule| <f1> decimal",shape="record"];
	"_pydecimal" [label="<f0> SourceModule| <f1> _pydecimal",shape="record"];
	"contextvars" [label="<f0> SourceModule| <f1> contextvars",shape="record"];
	"_contextvars" [label="<f0> Extension| <f1> _contextvars",shape="record"];
	"_decimal" [label="<f0> Extension| <f1> _decimal",shape="record"];
	"fractions" [label="<f0> SourceModule| <f1> fractions",shape="record"];
	"numbers" [label="<f0> SourceModule| <f1> numbers",shape="record"];
	"_sha512" [label="<f0> Extension| <f1> _sha512",shape="record"];
	"_random" [label="<f0> Extension| <f1> _random",shape="record"];
	"bisect" [label="<f0> SourceModule| <f1> bisect",shape="record"];
	"_bisect" [label="<f0> Extension| <f1> _bisect",shape="record"];
	"pathlib" [label="<f0> SourceModule| <f1> pathlib",shape="record"];
	"urllib.parse" [label="<f0> SourceModule| <f1> urllib.parse",shape="record"];
	"urllib" [label="<f0> Package| <f1> urllib",shape="record"];
	"urllib.pathname2url" [label="<f0> MissingModule| <f1> urllib.pathname2url",shape="record"];
	"urllib.urlencode" [label="<f0> MissingModule| <f1> urllib.urlencode",shape="record"];
	"unicodedata" [label="<f0> Extension| <f1> unicodedata",shape="record"];
	"_frozen_importlib_external" [label="<f0> MissingModule| <f1> _frozen_importlib_external",shape="record"];
	"_frozen_importlib" [label="<f0> ExcludedModule| <f1> _frozen_importlib",shape="record"];
	"importlib._bootstrap" [label="<f0> SourceModule| <f1> importlib._bootstrap",shape="record"];
	"_imp" [label="<f0> BuiltinModule| <f1> _imp",shape="record"];
	"importlib._bootstrap_external" [label="<f0> SourceModule| <f1> importlib._bootstrap_external",shape="record"];
	"importlib.metadata" [label="<f0> SourceModule| <f1> importlib.metadata",shape="record"];
	"pep517" [label="<f0> MissingModule| <f1> pep517",shape="record"];
	"importlib.abc" [label="<f0> SourceModule| <f1> importlib.abc",shape="record"];
	"typing" [label="<f0> SourceModule| <f1> typing",shape="record"];
	"configparser" [label="<f0> SourceModule| <f1> configparser",shape="record"];
	"email" [label="<f0> Package| <f1> email",shape="record"];
	"email.parser" [label="<f0> SourceModule| <f1> email.parser",shape="record"];
	"email._policybase" [label="<f0> SourceModule| <f1> email._policybase",shape="record"];
	"email.utils" [label="<f0> SourceModule| <f1> email.utils",shape="record"];
	"email._parseaddr" [label="<f0> SourceModule| <f1> email._parseaddr",shape="record"];
	"email.feedparser" [label="<f0> SourceModule| <f1> email.feedparser",shape="record"];
	"email.message" [label="<f0> SourceModule| <f1> email.message",shape="record"];
	"email.policy" [label="<f0> SourceModule| <f1> email.policy",shape="record"];
	"email.contentmanager" [label="<f0> SourceModule| <f1> email.contentmanager",shape="record"];
	"email.quoprimime" [label="<f0> SourceModule| <f1> email.quoprimime",shape="record"];
	"string" [label="<f0> SourceModule| <f1> string",shape="record"];
	"_string" [label="<f0> BuiltinModule| <f1> _string",shape="record"];
	"email.headerregistry" [label="<f0> SourceModule| <f1> email.headerregistry",shape="record"];
	"email.iterators" [label="<f0> SourceModule| <f1> email.iterators",shape="record"];
	"email.generator" [label="<f0> SourceModule| <f1> email.generator",shape="record"];
	"email._encoded_words" [label="<f0> SourceModule| <f1> email._encoded_words",shape="record"];
	"quopri" [label="<f0> SourceModule| <f1> quopri",shape="record"];
	"getopt" [label="<f0> SourceModule| <f1> getopt",shape="record"];
	"uu" [label="<f0> SourceModule| <f1> uu",shape="record"];
	"optparse" [label="<f0> SourceModule| <f1> optparse",shape="record"];
	"email._header_value_parser" [label="<f0> SourceModule| <f1> email._header_value_parser",shape="record"];
	"email.header" [label="<f0> SourceModule| <f1> email.header",shape="record"];
	"email.base64mime" [label="<f0> SourceModule| <f1> email.base64mime",shape="record"];
	"email.charset" [label="<f0> SourceModule| <f1> email.charset",shape="record"];
	"email.encoders" [label="<f0> SourceModule| <f1> email.encoders",shape="record"];
	"email.errors" [label="<f0> SourceModule| <f1> email.errors",shape="record"];
	"csv" [label="<f0> SourceModule| <f1> csv",shape="record"];
	"_csv" [label="<f0> Extension| <f1> _csv",shape="record"];
	"tokenize" [label="<f0> SourceModule| <f1> tokenize",shape="record"];
	"token" [label="<f0> SourceModule| <f1> token",shape="record"];
	"builtins" [label="<f0> BuiltinModule| <f1> builtins",shape="record"];
	"winreg" [label="<f0> MissingModule| <f1> winreg",shape="record"];
	"marshal" [label="<f0> BuiltinModule| <f1> marshal",shape="record"];
	"_warnings" [label="<f0> BuiltinModule| <f1> _warnings",shape="record"];
	"_io" [label="<f0> BuiltinModule| <f1> _io",shape="record"];
	"contextlib" [label="<f0> SourceModule| <f1> contextlib",shape="record"];
	"threading" [label="<f0> SourceModule| <f1> threading",shape="record"];
	"_threading_local" [label="<f0> SourceModule| <f1> _threading_local",shape="record"];
	"_collections" [label="<f0> BuiltinModule| <f1> _collections",shape="record"];
	"tarfile" [label="<f0> SourceModule| <f1> tarfile",shape="record"];
	"gzip" [label="<f0> SourceModule| <f1> gzip",shape="record"];
	"_compression" [label="<f0> SourceModule| <f1> _compression",shape="record"];
	"nt" [label="<f0> MissingModule| <f1> nt",shape="record"];
	"grp" [label="<f0> Extension| <f1> grp",shape="record"];
	"pwd" [label="<f0> BuiltinModule| <f1> pwd",shape="record"];
	"lzma" [label="<f0> SourceModule| <f1> lzma",shape="record"];
	"_lzma" [label="<f0> Extension| <f1> _lzma",shape="record"];
	"bz2" [label="<f0> SourceModule| <f1> bz2",shape="record"];
	"_bz2" [label="<f0> Extension| <f1> _bz2",shape="record"];
	"zlib" [label="<f0> Extension| <f1> zlib",shape="record"];
	"fnmatch" [label="<f0> SourceModule| <f1> fnmatch",shape="record"];
	"copy" [label="<f0> SourceModule| <f1> copy",shape="record"];
	"'org.python'" [label="<f0> MissingModule| <f1> 'org.python'",shape="record"];
	"gettext" [label="<f0> SourceModule| <f1> gettext",shape="record"];
	"base64" [label="<f0> SourceModule| <f1> base64",shape="record"];
	"hashlib" [label="<f0> SourceModule| <f1> hashlib",shape="record"];
	"_hashlib" [label="<f0> Extension| <f1> _hashlib",shape="record"];
	"_sha3" [label="<f0> Extension| <f1> _sha3",shape="record"];
	"_blake2" [label="<f0> Extension| <f1> _blake2",shape="record"];
	"_sha256" [label="<f0> Extension| <f1> _sha256",shape="record"];
	"_md5" [label="<f0> Extension| <f1> _md5",shape="record"];
	"_sha1" [label="<f0> Extension| <f1> _sha1",shape="record"];
	"binascii" [label="<f0> Extension| <f1> binascii",shape="record"];
	"hmac" [label="<f0> SourceModule| <f1> hmac",shape="record"];
	"_operator" [label="<f0> BuiltinModule| <f1> _operator",shape="record"];
	"urllib3.util.response" [label="<f0> SourceModule| <f1> urllib3.util.response",shape="record"];
	"urllib3.packages.six.moves.http_client" [label="<f0> AliasNode| <f1> urllib3.packages.six.moves.http_client",shape="record"];
	"urllib3.util.connection" [label="<f0> SourceModule| <f1> urllib3.util.connection",shape="record"];
	"urllib3.contrib._appengine_environ" [label="<f0> SourceModule| <f1> urllib3.contrib._appengine_environ",shape="record"];
	"urllib3.contrib" [label="<f0> Package| <f1> urllib3.contrib",shape="record"];
	"urllib3.contrib.pyopenssl" [label="<f0> SourceModule| <f1> urllib3.contrib.pyopenssl",shape="record"];
	"'OpenSSL.crypto'" [label="<f0> MissingModule| <f1> 'OpenSSL.crypto'",shape="record"];
	"urllib3.packages.backports.makefile" [label="<f0> SourceModule| <f1> urllib3.packages.backports.makefile",shape="record"];
	"urllib3.packages.backports" [label="<f0> Package| <f1> urllib3.packages.backports",shape="record"];
	"'cryptography.x509'" [label="<f0> MissingModule| <f1> 'cryptography.x509'",shape="record"];
	"'cryptography.hazmat'" [label="<f0> MissingModule| <f1> 'cryptography.hazmat'",shape="record"];
	"cryptography" [label="<f0> MissingModule| <f1> cryptography",shape="record"];
	"OpenSSL" [label="<f0> MissingModule| <f1> OpenSSL",shape="record"];
	"idna" [label="<f0> Package| <f1> idna",shape="record"];
	"idna.intranges" [label="<f0> SourceModule| <f1> idna.intranges",shape="record"];
	"idna.core" [label="<f0> SourceModule| <f1> idna.core",shape="record"];
	"idna.uts46data" [label="<f0> SourceModule| <f1> idna.uts46data",shape="record"];
	"idna.idnadata" [label="<f0> SourceModule| <f1> idna.idnadata",shape="record"];
	"idna.package_data" [label="<f0> SourceModule| <f1> idna.package_data",shape="record"];
	"urllib3.util.timeout" [label="<f0> SourceModule| <f1> urllib3.util.timeout",shape="record"];
	"urllib3.util.retry" [label="<f0> SourceModule| <f1> urllib3.util.retry",shape="record"];
	"urllib3.util.request" [label="<f0> SourceModule| <f1> urllib3.util.request",shape="record"];
	"brotli" [label="<f0> MissingModule| <f1> brotli",shape="record"];
	"urllib3.response" [label="<f0> SourceModule| <f1> urllib3.response",shape="record"];
	"urllib3.connection" [label="<f0> SourceModule| <f1> urllib3.connection",shape="record"];
	"urllib3.util.proxy" [label="<f0> SourceModule| <f1> urllib3.util.proxy",shape="record"];
	"urllib3._collections" [label="<f0> SourceModule| <f1> urllib3._collections",shape="record"];
	"collections.MutableMapping" [label="<f0> MissingModule| <f1> collections.MutableMapping",shape="record"];
	"collections.Mapping" [label="<f0> MissingModule| <f1> collections.Mapping",shape="record"];
	"urllib3.poolmanager" [label="<f0> SourceModule| <f1> urllib3.poolmanager",shape="record"];
	"urllib3.request" [label="<f0> SourceModule| <f1> urllib3.request",shape="record"];
	"'urllib3.packages.six.moves.urllib.parse'" [label="<f0> MissingModule| <f1> 'urllib3.packages.six.moves.urllib.parse'",shape="record"];
	"urllib3.filepost" [label="<f0> SourceModule| <f1> urllib3.filepost",shape="record"];
	"urllib3.fields" [label="<f0> SourceModule| <f1> urllib3.fields",shape="record"];
	"mimetypes" [label="<f0> SourceModule| <f1> mimetypes",shape="record"];
	"urllib3.connectionpool" [label="<f0> SourceModule| <f1> urllib3.connectionpool",shape="record"];
	"urllib3.util.queue" [label="<f0> SourceModule| <f1> urllib3.util.queue",shape="record"];
	"Queue" [label="<f0> MissingModule| <f1> Queue",shape="record"];
	"urllib3._version" [label="<f0> SourceModule| <f1> urllib3._version",shape="record"];
	"urllib3.exceptions" [label="<f0> SourceModule| <f1> urllib3.exceptions",shape="record"];
	"logging" [label="<f0> Package| <f1> logging",shape="record"];
	"atexit" [label="<f0> BuiltinModule| <f1> atexit",shape="record"];
	"pickle" [label="<f0> SourceModule| <f1> pickle",shape="record"];
	"pprint" [label="<f0> SourceModule| <f1> pprint",shape="record"];
	"org" [label="<f0> MissingModule| <f1> org",shape="record"];
	"_compat_pickle" [label="<f0> SourceModule| <f1> _compat_pickle",shape="record"];
	"urllib3.packages.ssl_match_hostname" [label="<f0> Package| <f1> urllib3.packages.ssl_match_hostname",shape="record"];
	"urllib3.packages.ssl_match_hostname._implementation" [label="<f0> SourceModule| <f1> urllib3.packages.ssl_match_hostname._implementation",shape="record"];
	"ipaddress" [label="<f0> SourceModule| <f1> ipaddress",shape="record"];
	"'backports.ssl_match_hostname'" [label="<f0> MissingModule| <f1> 'backports.ssl_match_hostname'",shape="record"];
	"StringIO" [label="<f0> MissingModule| <f1> StringIO",shape="record"];
	"struct" [label="<f0> SourceModule| <f1> struct",shape="record"];
	"_struct" [label="<f0> Extension| <f1> _struct",shape="record"];
	"importlib.util" [label="<f0> SourceModule| <f1> importlib.util",shape="record"];
	"sys" [label="<f0> BuiltinModule| <f1> sys",shape="record"];
	"itertools" [label="<f0> BuiltinModule| <f1> itertools",shape="record"];
	"__future__" [label="<f0> SourceModule| <f1> __future__",shape="record"];
	"queue" [label="<f0> SourceModule| <f1> queue",shape="record"];
	"_queue" [label="<f0> Extension| <f1> _queue",shape="record"];
	"http.client" [label="<f0> SourceModule| <f1> http.client",shape="record"];
	"http" [label="<f0> Package| <f1> http",shape="record"];
	"_thread" [label="<f0> BuiltinModule| <f1> _thread",shape="record"];
	"_elementtree" [label="<f0> Extension| <f1> _elementtree",shape="record"];
	"xml.etree.cElementTree" [label="<f0> SourceModule| <f1> xml.etree.cElementTree",shape="record"];
	"xml.etree" [label="<f0> Package| <f1> xml.etree",shape="record"];
	"xml" [label="<f0> Package| <f1> xml",shape="record"];
	"xml.sax.expatreader" [label="<f0> SourceModule| <f1> xml.sax.expatreader",shape="record"];
	"_weakref" [label="<f0> BuiltinModule| <f1> _weakref",shape="record"];
	"xml.sax.saxutils" [label="<f0> SourceModule| <f1> xml.sax.saxutils",shape="record"];
	"urllib.request" [label="<f0> SourceModule| <f1> urllib.request",shape="record"];
	"_scproxy" [label="<f0> Extension| <f1> _scproxy",shape="record"];
	"getpass" [label="<f0> SourceModule| <f1> getpass",shape="record"];
	"msvcrt" [label="<f0> MissingModule| <f1> msvcrt",shape="record"];
	"termios" [label="<f0> Extension| <f1> termios",shape="record"];
	"nturl2path" [label="<f0> SourceModule| <f1> nturl2path",shape="record"];
	"ftplib" [label="<f0> SourceModule| <f1> ftplib",shape="record"];
	"netrc" [label="<f0> SourceModule| <f1> netrc",shape="record"];
	"shlex" [label="<f0> SourceModule| <f1> shlex",shape="record"];
	"http.cookiejar" [label="<f0> SourceModule| <f1> http.cookiejar",shape="record"];
	"urllib.response" [label="<f0> SourceModule| <f1> urllib.response",shape="record"];
	"urllib.error" [label="<f0> SourceModule| <f1> urllib.error",shape="record"];
	"xml.sax" [label="<f0> Package| <f1> xml.sax",shape="record"];
	"xml.parsers.expat" [label="<f0> SourceModule| <f1> xml.parsers.expat",shape="record"];
	"xml.parsers" [label="<f0> Package| <f1> xml.parsers",shape="record"];
	"xml.sax.handler" [label="<f0> SourceModule| <f1> xml.sax.handler",shape="record"];
	"xml.sax._exceptions" [label="<f0> SourceModule| <f1> xml.sax._exceptions",shape="record"];
	"'java.lang'" [label="<f0> MissingModule| <f1> 'java.lang'",shape="record"];
	"xml.sax.xmlreader" [label="<f0> SourceModule| <f1> xml.sax.xmlreader",shape="record"];
	"xml.etree.ElementTree" [label="<f0> SourceModule| <f1> xml.etree.ElementTree",shape="record"];
	"xml.etree.ElementPath" [label="<f0> SourceModule| <f1> xml.etree.ElementPath",shape="record"];
	"xml.etree.ElementInclude" [label="<f0> SourceModule| <f1> xml.etree.ElementInclude",shape="record"];
	"pyexpat" [label="<f0> Extension| <f1> pyexpat",shape="record"];
	"_curses" [label="<f0> Extension| <f1> _curses",shape="record"];
	"curses" [label="<f0> Package| <f1> curses",shape="record"];
	"curses.has_key" [label="<f0> SourceModule| <f1> curses.has_key",shape="record"];
	"_json" [label="<f0> Extension| <f1> _json",shape="record"];
	"json.decoder" [label="<f0> SourceModule| <f1> json.decoder",shape="record"];
	"json.scanner" [label="<f0> SourceModule| <f1> json.scanner",shape="record"];
	"json" [label="<f0> Package| <f1> json",shape="record"];
	"json.encoder" [label="<f0> SourceModule| <f1> json.encoder",shape="record"];
	"_ssl" [label="<f0> Extension| <f1> _ssl",shape="record"];
	"zipimport" [label="<f0> SourceModule| <f1> zipimport",shape="record"];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" [label="<f0> Script| <f1> /Users/andik/Downloads/fire_service/fire_detection_kivy.py",shape="record"];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_gstreamer.py" [label="<f0> Script| <f1> /Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_gstreamer.py",shape="record"];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_kivy.py" [label="<f0> Script| <f1> /Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_kivy.py",shape="record"];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_setuptools.py" [label="<f0> Script| <f1> /Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_setuptools.py",shape="record"];
	"_distutils_hack" [label="<f0> Package| <f1> _distutils_hack",shape="record"];
	"setuptools" [label="<f0> Package| <f1> setuptools",shape="record"];
	"setuptools._vendor.pyparsing" [label="<f0> SourceModule| <f1> setuptools._vendor.pyparsing",shape="record"];
	"uuid" [label="<f0> SourceModule| <f1> uuid",shape="record"];
	"_uuid" [label="<f0> Extension| <f1> _uuid",shape="record"];
	"subprocess" [label="<f0> SourceModule| <f1> subprocess",shape="record"];
	"_winapi" [label="<f0> MissingModule| <f1> _winapi",shape="record"];
	"signal" [label="<f0> SourceModule| <f1> signal",shape="record"];
	"_signal" [label="<f0> BuiltinModule| <f1> _signal",shape="record"];
	"platform" [label="<f0> SourceModule| <f1> platform",shape="record"];
	"vms_lib" [label="<f0> MissingModule| <f1> vms_lib",shape="record"];
	"java" [label="<f0> MissingModule| <f1> java",shape="record"];
	"plistlib" [label="<f0> SourceModule| <f1> plistlib",shape="record"];
	"_winreg" [label="<f0> MissingModule| <f1> _winreg",shape="record"];
	"pdb" [label="<f0> SourceModule| <f1> pdb",shape="record"];
	"pydoc" [label="<f0> SourceModule| <f1> pydoc",shape="record"];
	"webbrowser" [label="<f0> SourceModule| <f1> webbrowser",shape="record"];
	"http.server" [label="<f0> SourceModule| <f1> http.server",shape="record"];
	"socketserver" [label="<f0> SourceModule| <f1> socketserver",shape="record"];
	"html" [label="<f0> Package| <f1> html",shape="record"];
	"html.entities" [label="<f0> SourceModule| <f1> html.entities",shape="record"];
	"pydoc_data.topics" [label="<f0> SourceModule| <f1> pydoc_data.topics",shape="record"];
	"pydoc_data" [label="<f0> Package| <f1> pydoc_data",shape="record"];
	"tty" [label="<f0> SourceModule| <f1> tty",shape="record"];
	"sysconfig" [label="<f0> SourceModule| <f1> sysconfig",shape="record"];
	"_sysconfigdata__darwin_darwin" [label="<f0> SourceModule| <f1> _sysconfigdata__darwin_darwin",shape="record"];
	"_aix_support" [label="<f0> SourceModule| <f1> _aix_support",shape="record"];
	"_bootsubprocess" [label="<f0> SourceModule| <f1> _bootsubprocess",shape="record"];
	"_osx_support" [label="<f0> SourceModule| <f1> _osx_support",shape="record"];
	"pkgutil" [label="<f0> SourceModule| <f1> pkgutil",shape="record"];
	"runpy" [label="<f0> SourceModule| <f1> runpy",shape="record"];
	"readline" [label="<f0> Extension| <f1> readline",shape="record"];
	"inspect" [label="<f0> SourceModule| <f1> inspect",shape="record"];
	"ast" [label="<f0> SourceModule| <f1> ast",shape="record"];
	"_ast" [label="<f0> BuiltinModule| <f1> _ast",shape="record"];
	"glob" [label="<f0> SourceModule| <f1> glob",shape="record"];
	"code" [label="<f0> SourceModule| <f1> code",shape="record"];
	"codeop" [label="<f0> SourceModule| <f1> codeop",shape="record"];
	"dis" [label="<f0> SourceModule| <f1> dis",shape="record"];
	"opcode" [label="<f0> SourceModule| <f1> opcode",shape="record"];
	"_opcode" [label="<f0> Extension| <f1> _opcode",shape="record"];
	"bdb" [label="<f0> SourceModule| <f1> bdb",shape="record"];
	"cmd" [label="<f0> SourceModule| <f1> cmd",shape="record"];
	"__builtin__" [label="<f0> MissingModule| <f1> __builtin__",shape="record"];
	"ordereddict" [label="<f0> MissingModule| <f1> ordereddict",shape="record"];
	"collections.Iterable" [label="<f0> MissingModule| <f1> collections.Iterable",shape="record"];
	"setuptools._vendor.packaging.version" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.version",shape="record"];
	"setuptools._vendor.packaging.utils" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.utils",shape="record"];
	"setuptools._vendor.packaging.tags" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.tags",shape="record"];
	"ctypes" [label="<f0> Package| <f1> ctypes",shape="record"];
	"ctypes._endian" [label="<f0> SourceModule| <f1> ctypes._endian",shape="record"];
	"_ctypes" [label="<f0> Extension| <f1> _ctypes",shape="record"];
	"_manylinux" [label="<f0> MissingModule| <f1> _manylinux",shape="record"];
	"imp" [label="<f0> SourceModule| <f1> imp",shape="record"];
	"setuptools._vendor.packaging.specifiers" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.specifiers",shape="record"];
	"setuptools._vendor.packaging.requirements" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.requirements",shape="record"];
	"'setuptools.extern.pyparsing'" [label="<f0> MissingModule| <f1> 'setuptools.extern.pyparsing'",shape="record"];
	"setuptools._vendor.packaging.markers" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.markers",shape="record"];
	"setuptools._vendor.packaging._typing" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._typing",shape="record"];
	"setuptools._vendor.packaging._structures" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._structures",shape="record"];
	"setuptools._vendor.packaging._compat" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging._compat",shape="record"];
	"setuptools._vendor.packaging.__about__" [label="<f0> SourceModule| <f1> setuptools._vendor.packaging.__about__",shape="record"];
	"setuptools._vendor.packaging" [label="<f0> Package| <f1> setuptools._vendor.packaging",shape="record"];
	"setuptools._vendor.ordered_set" [label="<f0> SourceModule| <f1> setuptools._vendor.ordered_set",shape="record"];
	"collections.Sequence" [label="<f0> MissingModule| <f1> collections.Sequence",shape="record"];
	"collections.MutableSet" [label="<f0> MissingModule| <f1> collections.MutableSet",shape="record"];
	"setuptools._vendor.more_itertools.recipes" [label="<f0> SourceModule| <f1> setuptools._vendor.more_itertools.recipes",shape="record"];
	"setuptools._vendor.more_itertools.more" [label="<f0> SourceModule| <f1> setuptools._vendor.more_itertools.more",shape="record"];
	"concurrent.futures" [label="<f0> Package| <f1> concurrent.futures",shape="record"];
	"concurrent.futures.thread" [label="<f0> SourceModule| <f1> concurrent.futures.thread",shape="record"];
	"concurrent.futures.process" [label="<f0> SourceModule| <f1> concurrent.futures.process",shape="record"];
	"multiprocessing.queues" [label="<f0> SourceModule| <f1> multiprocessing.queues",shape="record"];
	"multiprocessing.synchronize" [label="<f0> SourceModule| <f1> multiprocessing.synchronize",shape="record"];
	"multiprocessing.heap" [label="<f0> SourceModule| <f1> multiprocessing.heap",shape="record"];
	"mmap" [label="<f0> Extension| <f1> mmap",shape="record"];
	"multiprocessing.resource_tracker" [label="<f0> SourceModule| <f1> multiprocessing.resource_tracker",shape="record"];
	"_posixshmem" [label="<f0> Extension| <f1> _posixshmem",shape="record"];
	"multiprocessing.spawn" [label="<f0> SourceModule| <f1> multiprocessing.spawn",shape="record"];
	"multiprocessing.set_start_method" [label="<f0> MissingModule| <f1> multiprocessing.set_start_method",shape="record"];
	"multiprocessing.get_start_method" [label="<f0> MissingModule| <f1> multiprocessing.get_start_method",shape="record"];
	"multiprocessing.process" [label="<f0> SourceModule| <f1> multiprocessing.process",shape="record"];
	"multiprocessing.util" [label="<f0> SourceModule| <f1> multiprocessing.util",shape="record"];
	"multiprocessing.forkserver" [label="<f0> SourceModule| <f1> multiprocessing.forkserver",shape="record"];
	"multiprocessing.context" [label="<f0> SourceModule| <f1> multiprocessing.context",shape="record"];
	"multiprocessing.popen_spawn_win32" [label="<f0> SourceModule| <f1> multiprocessing.popen_spawn_win32",shape="record"];
	"multiprocessing.popen_forkserver" [label="<f0> SourceModule| <f1> multiprocessing.popen_forkserver",shape="record"];
	"multiprocessing.popen_spawn_posix" [label="<f0> SourceModule| <f1> multiprocessing.popen_spawn_posix",shape="record"];
	"multiprocessing.popen_fork" [label="<f0> SourceModule| <f1> multiprocessing.popen_fork",shape="record"];
	"multiprocessing.sharedctypes" [label="<f0> SourceModule| <f1> multiprocessing.sharedctypes",shape="record"];
	"multiprocessing.get_context" [label="<f0> MissingModule| <f1> multiprocessing.get_context",shape="record"];
	"multiprocessing.pool" [label="<f0> SourceModule| <f1> multiprocessing.pool",shape="record"];
	"multiprocessing.dummy" [label="<f0> Package| <f1> multiprocessing.dummy",shape="record"];
	"multiprocessing.dummy.connection" [label="<f0> SourceModule| <f1> multiprocessing.dummy.connection",shape="record"];
	"multiprocessing.TimeoutError" [label="<f0> MissingModule| <f1> multiprocessing.TimeoutError",shape="record"];
	"multiprocessing.managers" [label="<f0> SourceModule| <f1> multiprocessing.managers",shape="record"];
	"multiprocessing.shared_memory" [label="<f0> SourceModule| <f1> multiprocessing.shared_memory",shape="record"];
	"secrets" [label="<f0> SourceModule| <f1> secrets",shape="record"];
	"multiprocessing.reduction" [label="<f0> SourceModule| <f1> multiprocessing.reduction",shape="record"];
	"multiprocessing.resource_sharer" [label="<f0> SourceModule| <f1> multiprocessing.resource_sharer",shape="record"];
	"_multiprocessing" [label="<f0> Extension| <f1> _multiprocessing",shape="record"];
	"multiprocessing.connection" [label="<f0> SourceModule| <f1> multiprocessing.connection",shape="record"];
	"xmlrpc.client" [label="<f0> SourceModule| <f1> xmlrpc.client",shape="record"];
	"xmlrpc" [label="<f0> Package| <f1> xmlrpc",shape="record"];
	"xmlrpc.server" [label="<f0> SourceModule| <f1> xmlrpc.server",shape="record"];
	"fcntl" [label="<f0> Extension| <f1> fcntl",shape="record"];
	"multiprocessing.BufferTooShort" [label="<f0> MissingModule| <f1> multiprocessing.BufferTooShort",shape="record"];
	"multiprocessing.AuthenticationError" [label="<f0> MissingModule| <f1> multiprocessing.AuthenticationError",shape="record"];
	"multiprocessing" [label="<f0> Package| <f1> multiprocessing",shape="record"];
	"multiprocessing.cpu_count" [label="<f0> MissingModule| <f1> multiprocessing.cpu_count",shape="record"];
	"multiprocessing.Pool" [label="<f0> MissingModule| <f1> multiprocessing.Pool",shape="record"];
	"multiprocessing.RLock" [label="<f0> MissingModule| <f1> multiprocessing.RLock",shape="record"];
	"multiprocessing.Process" [label="<f0> MissingModule| <f1> multiprocessing.Process",shape="record"];
	"multiprocessing.freeze_support" [label="<f0> MissingModule| <f1> multiprocessing.freeze_support",shape="record"];
	"multiprocessing.Manager" [label="<f0> MissingModule| <f1> multiprocessing.Manager",shape="record"];
	"concurrent.futures._base" [label="<f0> SourceModule| <f1> concurrent.futures._base",shape="record"];
	"concurrent" [label="<f0> Package| <f1> concurrent",shape="record"];
	"setuptools._vendor.more_itertools" [label="<f0> Package| <f1> setuptools._vendor.more_itertools",shape="record"];
	"setuptools._vendor" [label="<f0> Package| <f1> setuptools._vendor",shape="record"];
	"syslog" [label="<f0> Extension| <f1> syslog",shape="record"];
	"setuptools.msvc" [label="<f0> SourceModule| <f1> setuptools.msvc",shape="record"];
	"distutils.msvc9compiler" [label="<f0> SourceModule| <f1> distutils.msvc9compiler",shape="record"];
	"distutils.log" [label="<f0> SourceModule| <f1> distutils.log",shape="record"];
	"distutils" [label="<f0> Package| <f1> distutils",shape="record"];
	"distutils.archive_util" [label="<f0> SourceModule| <f1> distutils.archive_util",shape="record"];
	"distutils.dir_util" [label="<f0> SourceModule| <f1> distutils.dir_util",shape="record"];
	"distutils.file_util" [label="<f0> SourceModule| <f1> distutils.file_util",shape="record"];
	"distutils.dep_util" [label="<f0> SourceModule| <f1> distutils.dep_util",shape="record"];
	"distutils.spawn" [label="<f0> SourceModule| <f1> distutils.spawn",shape="record"];
	"distutils.debug" [label="<f0> SourceModule| <f1> distutils.debug",shape="record"];
	"distutils.sysconfig" [label="<f0> SourceModule| <f1> distutils.sysconfig",shape="record"];
	"distutils.text_file" [label="<f0> SourceModule| <f1> distutils.text_file",shape="record"];
	"distutils.ccompiler" [label="<f0> SourceModule| <f1> distutils.ccompiler",shape="record"];
	"distutils.fancy_getopt" [label="<f0> SourceModule| <f1> distutils.fancy_getopt",shape="record"];
	"'setuptools.extern.more_itertools'" [label="<f0> MissingModule| <f1> 'setuptools.extern.more_itertools'",shape="record"];
	"'setuptools.extern.packaging.version'" [label="<f0> MissingModule| <f1> 'setuptools.extern.packaging.version'",shape="record"];
	"distutils.command.build_ext" [label="<f0> SourceModule| <f1> distutils.command.build_ext",shape="record"];
	"distutils.command" [label="<f0> Package| <f1> distutils.command",shape="record"];
	"distutils._msvccompiler" [label="<f0> SourceModule| <f1> distutils._msvccompiler",shape="record"];
	"site" [label="<f0> SourceModule| <f1> site",shape="record"];
	"usercustomize" [label="<f0> MissingModule| <f1> usercustomize",shape="record"];
	"sitecustomize" [label="<f0> MissingModule| <f1> sitecustomize",shape="record"];
	"rlcompleter" [label="<f0> SourceModule| <f1> rlcompleter",shape="record"];
	"_sitebuiltins" [label="<f0> SourceModule| <f1> _sitebuiltins",shape="record"];
	"distutils.extension" [label="<f0> SourceModule| <f1> distutils.extension",shape="record"];
	"setuptools.monkey" [label="<f0> SourceModule| <f1> setuptools.monkey",shape="record"];
	"distutils.filelist" [label="<f0> SourceModule| <f1> distutils.filelist",shape="record"];
	"setuptools.depends" [label="<f0> SourceModule| <f1> setuptools.depends",shape="record"];
	"setuptools._imp" [label="<f0> SourceModule| <f1> setuptools._imp",shape="record"];
	"setuptools.py34compat" [label="<f0> SourceModule| <f1> setuptools.py34compat",shape="record"];
	"distutils.version" [label="<f0> SourceModule| <f1> distutils.version",shape="record"];
	"setuptools.dist" [label="<f0> SourceModule| <f1> setuptools.dist",shape="record"];
	"setuptools.installer" [label="<f0> SourceModule| <f1> setuptools.installer",shape="record"];
	"setuptools.wheel" [label="<f0> SourceModule| <f1> setuptools.wheel",shape="record"];
	"setuptools.command.egg_info" [label="<f0> SourceModule| <f1> setuptools.command.egg_info",shape="record"];
	"setuptools.glob" [label="<f0> SourceModule| <f1> setuptools.glob",shape="record"];
	"setuptools.unicode_utils" [label="<f0> SourceModule| <f1> setuptools.unicode_utils",shape="record"];
	"setuptools.command.bdist_egg" [label="<f0> SourceModule| <f1> setuptools.command.bdist_egg",shape="record"];
	"setuptools.command.setopt" [label="<f0> SourceModule| <f1> setuptools.command.setopt",shape="record"];
	"setuptools.command.sdist" [label="<f0> SourceModule| <f1> setuptools.command.sdist",shape="record"];
	"setuptools.command.py36compat" [label="<f0> SourceModule| <f1> setuptools.command.py36compat",shape="record"];
	"distutils.command.sdist" [label="<f0> SourceModule| <f1> distutils.command.sdist",shape="record"];
	"'setuptools.extern.packaging.utils'" [label="<f0> MissingModule| <f1> 'setuptools.extern.packaging.utils'",shape="record"];
	"'setuptools.extern.packaging.tags'" [label="<f0> MissingModule| <f1> 'setuptools.extern.packaging.tags'",shape="record"];
	"pkg_resources" [label="<f0> Package| <f1> pkg_resources",shape="record"];
	"packaging.version" [label="<f0> SourceModule| <f1> packaging.version",shape="record"];
	"packaging.utils" [label="<f0> SourceModule| <f1> packaging.utils",shape="record"];
	"packaging.tags" [label="<f0> SourceModule| <f1> packaging.tags",shape="record"];
	"packaging.specifiers" [label="<f0> SourceModule| <f1> packaging.specifiers",shape="record"];
	"packaging.requirements" [label="<f0> SourceModule| <f1> packaging.requirements",shape="record"];
	"packaging.metadata" [label="<f0> SourceModule| <f1> packaging.metadata",shape="record"];
	"packaging.markers" [label="<f0> SourceModule| <f1> packaging.markers",shape="record"];
	"packaging.licenses._spdx" [label="<f0> SourceModule| <f1> packaging.licenses._spdx",shape="record"];
	"packaging.licenses" [label="<f0> Package| <f1> packaging.licenses",shape="record"];
	"packaging._tokenizer" [label="<f0> SourceModule| <f1> packaging._tokenizer",shape="record"];
	"dataclasses" [label="<f0> SourceModule| <f1> dataclasses",shape="record"];
	"packaging._structures" [label="<f0> SourceModule| <f1> packaging._structures",shape="record"];
	"packaging._parser" [label="<f0> SourceModule| <f1> packaging._parser",shape="record"];
	"packaging._musllinux" [label="<f0> SourceModule| <f1> packaging._musllinux",shape="record"];
	"packaging._manylinux" [label="<f0> SourceModule| <f1> packaging._manylinux",shape="record"];
	"packaging._elffile" [label="<f0> SourceModule| <f1> packaging._elffile",shape="record"];
	"packaging" [label="<f0> Package| <f1> packaging",shape="record"];
	"pkg_resources._vendor.pyparsing" [label="<f0> SourceModule| <f1> pkg_resources._vendor.pyparsing",shape="record"];
	"pkg_resources._vendor.packaging.version" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.version",shape="record"];
	"pkg_resources._vendor.packaging.utils" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.utils",shape="record"];
	"pkg_resources._vendor.packaging.tags" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.tags",shape="record"];
	"pkg_resources._vendor.packaging.specifiers" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.specifiers",shape="record"];
	"pkg_resources._vendor.packaging.requirements" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.requirements",shape="record"];
	"'pkg_resources.extern.pyparsing'" [label="<f0> MissingModule| <f1> 'pkg_resources.extern.pyparsing'",shape="record"];
	"pkg_resources._vendor.packaging.markers" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.markers",shape="record"];
	"pkg_resources._vendor.packaging._typing" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging._typing",shape="record"];
	"pkg_resources._vendor.packaging._structures" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging._structures",shape="record"];
	"pkg_resources._vendor.packaging._compat" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging._compat",shape="record"];
	"pkg_resources._vendor.packaging.__about__" [label="<f0> SourceModule| <f1> pkg_resources._vendor.packaging.__about__",shape="record"];
	"pkg_resources._vendor.packaging" [label="<f0> Package| <f1> pkg_resources._vendor.packaging",shape="record"];
	"pkg_resources._vendor.appdirs" [label="<f0> SourceModule| <f1> pkg_resources._vendor.appdirs",shape="record"];
	"'win32com.shell'" [label="<f0> MissingModule| <f1> 'win32com.shell'",shape="record"];
	"'com.sun'" [label="<f0> MissingModule| <f1> 'com.sun'",shape="record"];
	"com" [label="<f0> MissingModule| <f1> com",shape="record"];
	"win32api" [label="<f0> MissingModule| <f1> win32api",shape="record"];
	"win32com" [label="<f0> MissingModule| <f1> win32com",shape="record"];
	"pkg_resources._vendor" [label="<f0> Package| <f1> pkg_resources._vendor",shape="record"];
	"pkg_resources.extern.packaging" [label="<f0> MissingModule| <f1> pkg_resources.extern.packaging",shape="record"];
	"pkg_resources.extern.appdirs" [label="<f0> MissingModule| <f1> pkg_resources.extern.appdirs",shape="record"];
	"pkg_resources.extern" [label="<f0> Package| <f1> pkg_resources.extern",shape="record"];
	"setuptools.config" [label="<f0> SourceModule| <f1> setuptools.config",shape="record"];
	"'setuptools.extern.packaging.specifiers'" [label="<f0> MissingModule| <f1> 'setuptools.extern.packaging.specifiers'",shape="record"];
	"setuptools.command" [label="<f0> Package| <f1> setuptools.command",shape="record"];
	"distutils.command.bdist" [label="<f0> SourceModule| <f1> distutils.command.bdist",shape="record"];
	"setuptools.extern.ordered_set" [label="<f0> MissingModule| <f1> setuptools.extern.ordered_set",shape="record"];
	"setuptools.extern.packaging" [label="<f0> MissingModule| <f1> setuptools.extern.packaging",shape="record"];
	"setuptools.extern" [label="<f0> Package| <f1> setuptools.extern",shape="record"];
	"distutils.dist" [label="<f0> SourceModule| <f1> distutils.dist",shape="record"];
	"distutils.versionpredicate" [label="<f0> SourceModule| <f1> distutils.versionpredicate",shape="record"];
	"distutils.cmd" [label="<f0> SourceModule| <f1> distutils.cmd",shape="record"];
	"setuptools.windows_support" [label="<f0> SourceModule| <f1> setuptools.windows_support",shape="record"];
	"setuptools.extension" [label="<f0> SourceModule| <f1> setuptools.extension",shape="record"];
	"setuptools.version" [label="<f0> SourceModule| <f1> setuptools.version",shape="record"];
	"setuptools._deprecation_warning" [label="<f0> SourceModule| <f1> setuptools._deprecation_warning",shape="record"];
	"distutils.util" [label="<f0> SourceModule| <f1> distutils.util",shape="record"];
	"distutils.errors" [label="<f0> SourceModule| <f1> distutils.errors",shape="record"];
	"distutils.core" [label="<f0> SourceModule| <f1> distutils.core",shape="record"];
	"distutils.config" [label="<f0> SourceModule| <f1> distutils.config",shape="record"];
	"cgi" [label="<f0> SourceModule| <f1> cgi",shape="record"];
	"_distutils_hack.override" [label="<f0> SourceModule| <f1> _distutils_hack.override",shape="record"];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth__tkinter.py" [label="<f0> Script| <f1> /Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth__tkinter.py",shape="record"];
	"/Users/andik/flask_env/lib/python3.9/site-packages/_pyinstaller_hooks_contrib/rthooks/pyi_rth_traitlets.py" [label="<f0> Script| <f1> /Users/andik/flask_env/lib/python3.9/site-packages/_pyinstaller_hooks_contrib/rthooks/pyi_rth_traitlets.py",shape="record"];
	"traitlets.traitlets" [label="<f0> SourceModule| <f1> traitlets.traitlets",shape="record"];
	"traitlets" [label="<f0> Package| <f1> traitlets",shape="record"];
	"traitlets.utils.decorators" [label="<f0> SourceModule| <f1> traitlets.utils.decorators",shape="record"];
	"traitlets.utils" [label="<f0> Package| <f1> traitlets.utils",shape="record"];
	"traitlets._version" [label="<f0> SourceModule| <f1> traitlets._version",shape="record"];
	"typing_extensions" [label="<f0> SourceModule| <f1> typing_extensions",shape="record"];
	"asyncio.coroutines" [label="<f0> SourceModule| <f1> asyncio.coroutines",shape="record"];
	"asyncio.log" [label="<f0> SourceModule| <f1> asyncio.log",shape="record"];
	"asyncio.format_helpers" [label="<f0> SourceModule| <f1> asyncio.format_helpers",shape="record"];
	"asyncio.constants" [label="<f0> SourceModule| <f1> asyncio.constants",shape="record"];
	"asyncio.base_futures" [label="<f0> SourceModule| <f1> asyncio.base_futures",shape="record"];
	"asyncio" [label="<f0> Package| <f1> asyncio",shape="record"];
	"asyncio.Runner" [label="<f0> MissingModule| <f1> asyncio.Runner",shape="record"];
	"asyncio.timeout" [label="<f0> MissingModule| <f1> asyncio.timeout",shape="record"];
	"asyncio.unix_events" [label="<f0> SourceModule| <f1> asyncio.unix_events",shape="record"];
	"asyncio.windows_events" [label="<f0> SourceModule| <f1> asyncio.windows_events",shape="record"];
	"_overlapped" [label="<f0> MissingModule| <f1> _overlapped",shape="record"];
	"asyncio.windows_utils" [label="<f0> SourceModule| <f1> asyncio.windows_utils",shape="record"];
	"asyncio.selector_events" [label="<f0> SourceModule| <f1> asyncio.selector_events",shape="record"];
	"asyncio.proactor_events" [label="<f0> SourceModule| <f1> asyncio.proactor_events",shape="record"];
	"asyncio.base_subprocess" [label="<f0> SourceModule| <f1> asyncio.base_subprocess",shape="record"];
	"asyncio.threads" [label="<f0> SourceModule| <f1> asyncio.threads",shape="record"];
	"asyncio.subprocess" [label="<f0> SourceModule| <f1> asyncio.subprocess",shape="record"];
	"asyncio.streams" [label="<f0> SourceModule| <f1> asyncio.streams",shape="record"];
	"asyncio.queues" [label="<f0> SourceModule| <f1> asyncio.queues",shape="record"];
	"asyncio.runners" [label="<f0> SourceModule| <f1> asyncio.runners",shape="record"];
	"asyncio.base_events" [label="<f0> SourceModule| <f1> asyncio.base_events",shape="record"];
	"asyncio.trsock" [label="<f0> SourceModule| <f1> asyncio.trsock",shape="record"];
	"asyncio.staggered" [label="<f0> SourceModule| <f1> asyncio.staggered",shape="record"];
	"asyncio.tasks" [label="<f0> SourceModule| <f1> asyncio.tasks",shape="record"];
	"_asyncio" [label="<f0> Extension| <f1> _asyncio",shape="record"];
	"asyncio.base_tasks" [label="<f0> SourceModule| <f1> asyncio.base_tasks",shape="record"];
	"asyncio.locks" [label="<f0> SourceModule| <f1> asyncio.locks",shape="record"];
	"asyncio.sslproto" [label="<f0> SourceModule| <f1> asyncio.sslproto",shape="record"];
	"asyncio.transports" [label="<f0> SourceModule| <f1> asyncio.transports",shape="record"];
	"asyncio.protocols" [label="<f0> SourceModule| <f1> asyncio.protocols",shape="record"];
	"asyncio.futures" [label="<f0> SourceModule| <f1> asyncio.futures",shape="record"];
	"asyncio.exceptions" [label="<f0> SourceModule| <f1> asyncio.exceptions",shape="record"];
	"asyncio.events" [label="<f0> SourceModule| <f1> asyncio.events",shape="record"];
	"asyncio.DefaultEventLoopPolicy" [label="<f0> MissingModule| <f1> asyncio.DefaultEventLoopPolicy",shape="record"];
	"traitlets.utils.warnings" [label="<f0> SourceModule| <f1> traitlets.utils.warnings",shape="record"];
	"traitlets.utils.sentinel" [label="<f0> SourceModule| <f1> traitlets.utils.sentinel",shape="record"];
	"traitlets.utils.importstring" [label="<f0> SourceModule| <f1> traitlets.utils.importstring",shape="record"];
	"traitlets.utils.getargspec" [label="<f0> SourceModule| <f1> traitlets.utils.getargspec",shape="record"];
	"traitlets.utils.descriptions" [label="<f0> SourceModule| <f1> traitlets.utils.descriptions",shape="record"];
	"traitlets.utils.bunch" [label="<f0> SourceModule| <f1> traitlets.utils.bunch",shape="record"];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py" [label="<f0> Script| <f1> /Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py",shape="record"];
	"pyimod02_importers" [label="<f0> MissingModule| <f1> pyimod02_importers",shape="record"];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_inspect.py" [label="<f0> Script| <f1> /Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_inspect.py",shape="record"];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_multiprocessing.py" [label="<f0> Script| <f1> /Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_multiprocessing.py",shape="record"];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgutil.py" [label="<f0> Script| <f1> /Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgutil.py",shape="record"];
	"ai_agent" [label="<f0> SourceModule| <f1> ai_agent",shape="record"];
	"pyDatalog.pyDatalog" [label="<f0> SourceModule| <f1> pyDatalog.pyDatalog",shape="record"];
	"sqlalchemy.orm.attributes" [label="<f0> SourceModule| <f1> sqlalchemy.orm.attributes",shape="record"];
	"sqlalchemy.sql.selectable" [label="<f0> SourceModule| <f1> sqlalchemy.sql.selectable",shape="record"];
	"sqlalchemy.sql.schema" [label="<f0> SourceModule| <f1> sqlalchemy.sql.schema",shape="record"];
	"sqlalchemy.engine.reflection" [label="<f0> SourceModule| <f1> sqlalchemy.engine.reflection",shape="record"];
	"sqlalchemy.util.topological" [label="<f0> SourceModule| <f1> sqlalchemy.util.topological",shape="record"];
	"sqlalchemy.engine.base" [label="<f0> SourceModule| <f1> sqlalchemy.engine.base",shape="record"];
	"sqlalchemy.pool" [label="<f0> Package| <f1> sqlalchemy.pool",shape="record"];
	"sqlalchemy.pool.impl" [label="<f0> SourceModule| <f1> sqlalchemy.pool.impl",shape="record"];
	"sqlalchemy.util.queue" [label="<f0> SourceModule| <f1> sqlalchemy.util.queue",shape="record"];
	"sqlalchemy.util.langhelpers" [label="<f0> SourceModule| <f1> sqlalchemy.util.langhelpers",shape="record"];
	"annotationlib" [label="<f0> MissingModule| <f1> annotationlib",shape="record"];
	"sqlalchemy.util._has_cy" [label="<f0> SourceModule| <f1> sqlalchemy.util._has_cy",shape="record"];
	"sqlalchemy.cyextension.util" [label="<f0> Extension| <f1> sqlalchemy.cyextension.util",shape="record"];
	"sqlalchemy.cyextension.resultproxy" [label="<f0> Extension| <f1> sqlalchemy.cyextension.resultproxy",shape="record"];
	"sqlalchemy.cyextension.processors" [label="<f0> Extension| <f1> sqlalchemy.cyextension.processors",shape="record"];
	"sqlalchemy.cyextension.immutabledict" [label="<f0> Extension| <f1> sqlalchemy.cyextension.immutabledict",shape="record"];
	"sqlalchemy.cyextension.collections" [label="<f0> Extension| <f1> sqlalchemy.cyextension.collections",shape="record"];
	"sqlalchemy.cyextension" [label="<f0> Package| <f1> sqlalchemy.cyextension",shape="record"];
	"sqlalchemy.util.compat" [label="<f0> SourceModule| <f1> sqlalchemy.util.compat",shape="record"];
	"importlib_metadata" [label="<f0> Package| <f1> importlib_metadata",shape="record"];
	"zipp.compat.overlay" [label="<f0> SourceModule| <f1> zipp.compat.overlay",shape="record"];
	"zipp.compat" [label="<f0> Package| <f1> zipp.compat",shape="record"];
	"zipp" [label="<f0> Package| <f1> zipp",shape="record"];
	"zipp._functools" [label="<f0> SourceModule| <f1> zipp._functools",shape="record"];
	"zipp.glob" [label="<f0> SourceModule| <f1> zipp.glob",shape="record"];
	"zipp.compat.py310" [label="<f0> SourceModule| <f1> zipp.compat.py310",shape="record"];
	"importlib_metadata._adapters" [label="<f0> SourceModule| <f1> importlib_metadata._adapters",shape="record"];
	"importlib_metadata._text" [label="<f0> SourceModule| <f1> importlib_metadata._text",shape="record"];
	"importlib_metadata.compat.py311" [label="<f0> SourceModule| <f1> importlib_metadata.compat.py311",shape="record"];
	"importlib_metadata.compat.py39" [label="<f0> SourceModule| <f1> importlib_metadata.compat.py39",shape="record"];
	"importlib_metadata.compat" [label="<f0> Package| <f1> importlib_metadata.compat",shape="record"];
	"importlib_metadata._typing" [label="<f0> SourceModule| <f1> importlib_metadata._typing",shape="record"];
	"importlib_metadata._itertools" [label="<f0> SourceModule| <f1> importlib_metadata._itertools",shape="record"];
	"importlib_metadata._functools" [label="<f0> SourceModule| <f1> importlib_metadata._functools",shape="record"];
	"importlib_metadata._compat" [label="<f0> SourceModule| <f1> importlib_metadata._compat",shape="record"];
	"importlib_metadata._collections" [label="<f0> SourceModule| <f1> importlib_metadata._collections",shape="record"];
	"importlib_metadata._meta" [label="<f0> SourceModule| <f1> importlib_metadata._meta",shape="record"];
	"sqlalchemy.util._collections" [label="<f0> SourceModule| <f1> sqlalchemy.util._collections",shape="record"];
	"sqlalchemy.util._py_collections" [label="<f0> SourceModule| <f1> sqlalchemy.util._py_collections",shape="record"];
	"sqlalchemy.util.concurrency" [label="<f0> SourceModule| <f1> sqlalchemy.util.concurrency",shape="record"];
	"sqlalchemy.util._concurrency_py3k" [label="<f0> SourceModule| <f1> sqlalchemy.util._concurrency_py3k",shape="record"];
	"greenlet" [label="<f0> MissingModule| <f1> greenlet",shape="record"];
	"sqlalchemy.pool.base" [label="<f0> SourceModule| <f1> sqlalchemy.pool.base",shape="record"];
	"sqlalchemy.pool.events" [label="<f0> SourceModule| <f1> sqlalchemy.pool.events",shape="record"];
	"sqlalchemy.engine.url" [label="<f0> SourceModule| <f1> sqlalchemy.engine.url",shape="record"];
	"sqlalchemy.dialects" [label="<f0> Package| <f1> sqlalchemy.dialects",shape="record"];
	"sqlalchemy.sql.util" [label="<f0> SourceModule| <f1> sqlalchemy.sql.util",shape="record"];
	"sqlalchemy.engine.row" [label="<f0> SourceModule| <f1> sqlalchemy.engine.row",shape="record"];
	"sqlalchemy.engine.result" [label="<f0> SourceModule| <f1> sqlalchemy.engine.result",shape="record"];
	"sqlalchemy.engine._py_row" [label="<f0> SourceModule| <f1> sqlalchemy.engine._py_row",shape="record"];
	"sqlalchemy.log" [label="<f0> SourceModule| <f1> sqlalchemy.log",shape="record"];
	"sqlalchemy.engine.util" [label="<f0> SourceModule| <f1> sqlalchemy.engine.util",shape="record"];
	"sqlalchemy.engine._py_util" [label="<f0> SourceModule| <f1> sqlalchemy.engine._py_util",shape="record"];
	"sqlalchemy.engine.interfaces" [label="<f0> SourceModule| <f1> sqlalchemy.engine.interfaces",shape="record"];
	"sqlalchemy.engine.cursor" [label="<f0> SourceModule| <f1> sqlalchemy.engine.cursor",shape="record"];
	"sqlalchemy.engine.default" [label="<f0> SourceModule| <f1> sqlalchemy.engine.default",shape="record"];
	"sqlalchemy.sql.expression" [label="<f0> SourceModule| <f1> sqlalchemy.sql.expression",shape="record"];
	"sqlalchemy.sql.lambdas" [label="<f0> SourceModule| <f1> sqlalchemy.sql.lambdas",shape="record"];
	"sqlalchemy.sql._selectable_constructors" [label="<f0> SourceModule| <f1> sqlalchemy.sql._selectable_constructors",shape="record"];
	"sqlalchemy.sql._elements_constructors" [label="<f0> SourceModule| <f1> sqlalchemy.sql._elements_constructors",shape="record"];
	"sqlalchemy.sql._dml_constructors" [label="<f0> SourceModule| <f1> sqlalchemy.sql._dml_constructors",shape="record"];
	"sqlalchemy.engine.characteristics" [label="<f0> SourceModule| <f1> sqlalchemy.engine.characteristics",shape="record"];
	"sqlalchemy.engine" [label="<f0> Package| <f1> sqlalchemy.engine",shape="record"];
	"sqlalchemy.engine.mock" [label="<f0> SourceModule| <f1> sqlalchemy.engine.mock",shape="record"];
	"sqlalchemy.engine.create" [label="<f0> SourceModule| <f1> sqlalchemy.engine.create",shape="record"];
	"sqlalchemy.engine.events" [label="<f0> SourceModule| <f1> sqlalchemy.engine.events",shape="record"];
	"sqlalchemy.engine.processors" [label="<f0> SourceModule| <f1> sqlalchemy.engine.processors",shape="record"];
	"sqlalchemy.engine._py_processors" [label="<f0> SourceModule| <f1> sqlalchemy.engine._py_processors",shape="record"];
	"sqlalchemy.sql.ddl" [label="<f0> SourceModule| <f1> sqlalchemy.sql.ddl",shape="record"];
	"sqlalchemy.sql.functions" [label="<f0> SourceModule| <f1> sqlalchemy.sql.functions",shape="record"];
	"sqlalchemy.sql.dml" [label="<f0> SourceModule| <f1> sqlalchemy.sql.dml",shape="record"];
	"sqlalchemy.sql.compiler" [label="<f0> SourceModule| <f1> sqlalchemy.sql.compiler",shape="record"];
	"sqlalchemy.sql.crud" [label="<f0> SourceModule| <f1> sqlalchemy.sql.crud",shape="record"];
	"sqlalchemy.sql.sqltypes" [label="<f0> SourceModule| <f1> sqlalchemy.sql.sqltypes",shape="record"];
	"sqlalchemy.sql.type_api" [label="<f0> SourceModule| <f1> sqlalchemy.sql.type_api",shape="record"];
	"sqlalchemy.sql.traversals" [label="<f0> SourceModule| <f1> sqlalchemy.sql.traversals",shape="record"];
	"sqlalchemy.sql.operators" [label="<f0> SourceModule| <f1> sqlalchemy.sql.operators",shape="record"];
	"sqlalchemy.sql.elements" [label="<f0> SourceModule| <f1> sqlalchemy.sql.elements",shape="record"];
	"sqlalchemy.sql.annotation" [label="<f0> SourceModule| <f1> sqlalchemy.sql.annotation",shape="record"];
	"sqlalchemy.sql._typing" [label="<f0> SourceModule| <f1> sqlalchemy.sql._typing",shape="record"];
	"sqlalchemy.event.base" [label="<f0> SourceModule| <f1> sqlalchemy.event.base",shape="record"];
	"sqlalchemy.event.registry" [label="<f0> SourceModule| <f1> sqlalchemy.event.registry",shape="record"];
	"sqlalchemy.event.attr" [label="<f0> SourceModule| <f1> sqlalchemy.event.attr",shape="record"];
	"sqlalchemy.event.legacy" [label="<f0> SourceModule| <f1> sqlalchemy.event.legacy",shape="record"];
	"sqlalchemy.orm.writeonly" [label="<f0> SourceModule| <f1> sqlalchemy.orm.writeonly",shape="record"];
	"sqlalchemy.orm.mapper" [label="<f0> SourceModule| <f1> sqlalchemy.orm.mapper",shape="record"];
	"sqlalchemy.orm.events" [label="<f0> SourceModule| <f1> sqlalchemy.orm.events",shape="record"];
	"sqlalchemy.orm.context" [label="<f0> SourceModule| <f1> sqlalchemy.orm.context",shape="record"];
	"sqlalchemy.future" [label="<f0> Package| <f1> sqlalchemy.future",shape="record"];
	"sqlalchemy.future.engine" [label="<f0> SourceModule| <f1> sqlalchemy.future.engine",shape="record"];
	"sqlalchemy.orm.unitofwork" [label="<f0> SourceModule| <f1> sqlalchemy.orm.unitofwork",shape="record"];
	"sqlalchemy.orm.session" [label="<f0> SourceModule| <f1> sqlalchemy.orm.session",shape="record"];
	"sqlalchemy.orm.state_changes" [label="<f0> SourceModule| <f1> sqlalchemy.orm.state_changes",shape="record"];
	"sqlalchemy.orm.identity" [label="<f0> SourceModule| <f1> sqlalchemy.orm.identity",shape="record"];
	"sqlalchemy.orm.bulk_persistence" [label="<f0> SourceModule| <f1> sqlalchemy.orm.bulk_persistence",shape="record"];
	"sqlalchemy.orm.persistence" [label="<f0> SourceModule| <f1> sqlalchemy.orm.persistence",shape="record"];
	"sqlalchemy.orm.sync" [label="<f0> SourceModule| <f1> sqlalchemy.orm.sync",shape="record"];
	"sqlalchemy.orm.evaluator" [label="<f0> SourceModule| <f1> sqlalchemy.orm.evaluator",shape="record"];
	"sqlalchemy.orm.scoping" [label="<f0> SourceModule| <f1> sqlalchemy.orm.scoping",shape="record"];
	"sqlalchemy.orm.query" [label="<f0> SourceModule| <f1> sqlalchemy.orm.query",shape="record"];
	"sqlalchemy.orm.descriptor_props" [label="<f0> SourceModule| <f1> sqlalchemy.orm.descriptor_props",shape="record"];
	"sqlalchemy.orm.decl_base" [label="<f0> SourceModule| <f1> sqlalchemy.orm.decl_base",shape="record"];
	"sqlalchemy.orm.clsregistry" [label="<f0> SourceModule| <f1> sqlalchemy.orm.clsregistry",shape="record"];
	"sqlalchemy.orm.dependency" [label="<f0> SourceModule| <f1> sqlalchemy.orm.dependency",shape="record"];
	"sqlalchemy.orm.decl_api" [label="<f0> SourceModule| <f1> sqlalchemy.orm.decl_api",shape="record"];
	"sqlalchemy.orm._orm_constructors" [label="<f0> SourceModule| <f1> sqlalchemy.orm._orm_constructors",shape="record"];
	"sqlalchemy.schema" [label="<f0> SourceModule| <f1> sqlalchemy.schema",shape="record"];
	"sqlalchemy.sql.naming" [label="<f0> SourceModule| <f1> sqlalchemy.sql.naming",shape="record"];
	"sqlalchemy.sql.events" [label="<f0> SourceModule| <f1> sqlalchemy.sql.events",shape="record"];
	"sqlalchemy.orm.path_registry" [label="<f0> SourceModule| <f1> sqlalchemy.orm.path_registry",shape="record"];
	"sqlalchemy.orm.properties" [label="<f0> SourceModule| <f1> sqlalchemy.orm.properties",shape="record"];
	"sqlalchemy.orm.strategy_options" [label="<f0> SourceModule| <f1> sqlalchemy.orm.strategy_options",shape="record"];
	"sqlalchemy.orm.loading" [label="<f0> SourceModule| <f1> sqlalchemy.orm.loading",shape="record"];
	"sqlalchemy.orm.instrumentation" [label="<f0> SourceModule| <f1> sqlalchemy.orm.instrumentation",shape="record"];
	"sqlalchemy.orm.strategies" [label="<f0> SourceModule| <f1> sqlalchemy.orm.strategies",shape="record"];
	"sqlalchemy.orm.util" [label="<f0> SourceModule| <f1> sqlalchemy.orm.util",shape="record"];
	"sqlalchemy.orm.state" [label="<f0> SourceModule| <f1> sqlalchemy.orm.state",shape="record"];
	"sqlalchemy.ext.asyncio.session" [label="<f0> SourceModule| <f1> sqlalchemy.ext.asyncio.session",shape="record"];
	"sqlalchemy.ext.asyncio.result" [label="<f0> SourceModule| <f1> sqlalchemy.ext.asyncio.result",shape="record"];
	"sqlalchemy.ext.asyncio.exc" [label="<f0> SourceModule| <f1> sqlalchemy.ext.asyncio.exc",shape="record"];
	"sqlalchemy.ext.asyncio.base" [label="<f0> SourceModule| <f1> sqlalchemy.ext.asyncio.base",shape="record"];
	"sqlalchemy.ext.asyncio.engine" [label="<f0> SourceModule| <f1> sqlalchemy.ext.asyncio.engine",shape="record"];
	"sqlalchemy.ext.asyncio" [label="<f0> Package| <f1> sqlalchemy.ext.asyncio",shape="record"];
	"sqlalchemy.ext" [label="<f0> Package| <f1> sqlalchemy.ext",shape="record"];
	"sqlalchemy.ext.asyncio.scoping" [label="<f0> SourceModule| <f1> sqlalchemy.ext.asyncio.scoping",shape="record"];
	"sqlalchemy.orm.relationships" [label="<f0> SourceModule| <f1> sqlalchemy.orm.relationships",shape="record"];
	"sqlalchemy.util.typing" [label="<f0> SourceModule| <f1> sqlalchemy.util.typing",shape="record"];
	"sqlalchemy.sql.visitors" [label="<f0> SourceModule| <f1> sqlalchemy.sql.visitors",shape="record"];
	"sqlalchemy.sql._py_util" [label="<f0> SourceModule| <f1> sqlalchemy.sql._py_util",shape="record"];
	"sqlalchemy.sql.roles" [label="<f0> SourceModule| <f1> sqlalchemy.sql.roles",shape="record"];
	"sqlalchemy.sql.coercions" [label="<f0> SourceModule| <f1> sqlalchemy.sql.coercions",shape="record"];
	"sqlalchemy.sql.cache_key" [label="<f0> SourceModule| <f1> sqlalchemy.sql.cache_key",shape="record"];
	"sqlalchemy.sql.base" [label="<f0> SourceModule| <f1> sqlalchemy.sql.base",shape="record"];
	"sqlalchemy.sql._orm_types" [label="<f0> SourceModule| <f1> sqlalchemy.sql._orm_types",shape="record"];
	"sqlalchemy.sql" [label="<f0> Package| <f1> sqlalchemy.sql",shape="record"];
	"sqlalchemy.sql.default_comparator" [label="<f0> SourceModule| <f1> sqlalchemy.sql.default_comparator",shape="record"];
	"sqlalchemy.util" [label="<f0> Package| <f1> sqlalchemy.util",shape="record"];
	"sqlalchemy.util.deprecations" [label="<f0> SourceModule| <f1> sqlalchemy.util.deprecations",shape="record"];
	"sqlalchemy.util.preloaded" [label="<f0> SourceModule| <f1> sqlalchemy.util.preloaded",shape="record"];
	"sqlalchemy.inspection" [label="<f0> SourceModule| <f1> sqlalchemy.inspection",shape="record"];
	"sqlalchemy.exc" [label="<f0> SourceModule| <f1> sqlalchemy.exc",shape="record"];
	"sqlalchemy.event" [label="<f0> Package| <f1> sqlalchemy.event",shape="record"];
	"sqlalchemy.event.api" [label="<f0> SourceModule| <f1> sqlalchemy.event.api",shape="record"];
	"sqlalchemy" [label="<f0> Package| <f1> sqlalchemy",shape="record"];
	"sqlalchemy.dialects.sqlite" [label="<f0> Package| <f1> sqlalchemy.dialects.sqlite",shape="record"];
	"sqlalchemy.dialects.sqlite.dml" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.sqlite.dml",shape="record"];
	"sqlalchemy.dialects._typing" [label="<f0> SourceModule| <f1> sqlalchemy.dialects._typing",shape="record"];
	"sqlalchemy.dialects.sqlite.pysqlite" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.sqlite.pysqlite",shape="record"];
	"sqlite3.dbapi2" [label="<f0> SourceModule| <f1> sqlite3.dbapi2",shape="record"];
	"_sqlite3" [label="<f0> Extension| <f1> _sqlite3",shape="record"];
	"sqlite3" [label="<f0> Package| <f1> sqlite3",shape="record"];
	"sqlite3.dump" [label="<f0> SourceModule| <f1> sqlite3.dump",shape="record"];
	"sqlalchemy.dialects.sqlite.pysqlcipher" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.sqlite.pysqlcipher",shape="record"];
	"pysqlcipher3" [label="<f0> MissingModule| <f1> pysqlcipher3",shape="record"];
	"sqlcipher3" [label="<f0> MissingModule| <f1> sqlcipher3",shape="record"];
	"sqlalchemy.dialects.sqlite.base" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.sqlite.base",shape="record"];
	"sqlalchemy.dialects.sqlite.json" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.sqlite.json",shape="record"];
	"sqlalchemy.dialects.sqlite.aiosqlite" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.sqlite.aiosqlite",shape="record"];
	"sqlalchemy.dialects.postgresql" [label="<f0> Package| <f1> sqlalchemy.dialects.postgresql",shape="record"];
	"sqlalchemy.dialects.postgresql.types" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.types",shape="record"];
	"sqlalchemy.dialects.postgresql.named_types" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.named_types",shape="record"];
	"sqlalchemy.dialects.postgresql.hstore" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.hstore",shape="record"];
	"sqlalchemy.dialects.postgresql.operators" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.operators",shape="record"];
	"sqlalchemy.dialects.postgresql.ext" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.ext",shape="record"];
	"sqlalchemy.dialects.postgresql.dml" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.dml",shape="record"];
	"sqlalchemy.dialects.postgresql.psycopg2cffi" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.psycopg2cffi",shape="record"];
	"sqlalchemy.dialects.postgresql.psycopg2" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.psycopg2",shape="record"];
	"sqlalchemy.dialects.postgresql._psycopg_common" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql._psycopg_common",shape="record"];
	"sqlalchemy.dialects.postgresql.psycopg" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.psycopg",shape="record"];
	"'psycopg.pq'" [label="<f0> MissingModule| <f1> 'psycopg.pq'",shape="record"];
	"'psycopg.types'" [label="<f0> MissingModule| <f1> 'psycopg.types'",shape="record"];
	"'psycopg.adapt'" [label="<f0> MissingModule| <f1> 'psycopg.adapt'",shape="record"];
	"psycopg" [label="<f0> MissingModule| <f1> psycopg",shape="record"];
	"sqlalchemy.dialects.postgresql.pg8000" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.pg8000",shape="record"];
	"sqlalchemy.dialects.postgresql.base" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.base",shape="record"];
	"sqlalchemy.dialects.postgresql.asyncpg" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.asyncpg",shape="record"];
	"asyncpg" [label="<f0> MissingModule| <f1> asyncpg",shape="record"];
	"sqlalchemy.dialects.postgresql.pg_catalog" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.pg_catalog",shape="record"];
	"sqlalchemy.dialects.postgresql.ranges" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.ranges",shape="record"];
	"sqlalchemy.dialects.postgresql.json" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.json",shape="record"];
	"sqlalchemy.dialects.postgresql.array" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.postgresql.array",shape="record"];
	"sqlalchemy.dialects.oracle" [label="<f0> Package| <f1> sqlalchemy.dialects.oracle",shape="record"];
	"sqlalchemy.dialects.oracle.vector" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.oracle.vector",shape="record"];
	"sqlalchemy.dialects.oracle.oracledb" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.oracle.oracledb",shape="record"];
	"oracledb" [label="<f0> MissingModule| <f1> oracledb",shape="record"];
	"sqlalchemy.connectors.asyncio" [label="<f0> SourceModule| <f1> sqlalchemy.connectors.asyncio",shape="record"];
	"sqlalchemy.connectors" [label="<f0> Package| <f1> sqlalchemy.connectors",shape="record"];
	"sqlalchemy.dialects.oracle.cx_oracle" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.oracle.cx_oracle",shape="record"];
	"cx_Oracle" [label="<f0> MissingModule| <f1> cx_Oracle",shape="record"];
	"sqlalchemy.dialects.oracle.types" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.oracle.types",shape="record"];
	"sqlalchemy.dialects.oracle.base" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.oracle.base",shape="record"];
	"sqlalchemy.dialects.oracle.dictionary" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.oracle.dictionary",shape="record"];
	"sqlalchemy.dialects.mysql" [label="<f0> Package| <f1> sqlalchemy.dialects.mysql",shape="record"];
	"sqlalchemy.dialects.mysql.mariadb" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.mariadb",shape="record"];
	"sqlalchemy.dialects.mysql.expression" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.expression",shape="record"];
	"sqlalchemy.dialects.mysql.dml" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.dml",shape="record"];
	"sqlalchemy.dialects.mysql.pyodbc" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.pyodbc",shape="record"];
	"sqlalchemy.connectors.pyodbc" [label="<f0> SourceModule| <f1> sqlalchemy.connectors.pyodbc",shape="record"];
	"sqlalchemy.dialects.mysql.types" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.types",shape="record"];
	"sqlalchemy.dialects.mysql.pymysql" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.pymysql",shape="record"];
	"sqlalchemy.dialects.mysql.mysqldb" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.mysqldb",shape="record"];
	"sqlalchemy.dialects.mysql.mysqlconnector" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.mysqlconnector",shape="record"];
	"'mysql.connector'" [label="<f0> MissingModule| <f1> 'mysql.connector'",shape="record"];
	"mysql" [label="<f0> MissingModule| <f1> mysql",shape="record"];
	"sqlalchemy.dialects.mysql.mariadbconnector" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.mariadbconnector",shape="record"];
	"sqlalchemy.dialects.mysql.cymysql" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.cymysql",shape="record"];
	"sqlalchemy.dialects.mysql.base" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.base",shape="record"];
	"sqlalchemy.dialects.mysql.reserved_words" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.reserved_words",shape="record"];
	"sqlalchemy.dialects.mysql.json" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.json",shape="record"];
	"sqlalchemy.dialects.mysql.enumerated" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.enumerated",shape="record"];
	"sqlalchemy.dialects.mysql.asyncmy" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.asyncmy",shape="record"];
	"asyncmy" [label="<f0> MissingModule| <f1> asyncmy",shape="record"];
	"sqlalchemy.dialects.mysql.aiomysql" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.aiomysql",shape="record"];
	"'pymysql.constants'" [label="<f0> MissingModule| <f1> 'pymysql.constants'",shape="record"];
	"sqlalchemy.dialects.mysql.reflection" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mysql.reflection",shape="record"];
	"sqlalchemy.dialects.mssql" [label="<f0> Package| <f1> sqlalchemy.dialects.mssql",shape="record"];
	"sqlalchemy.dialects.mssql.pyodbc" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mssql.pyodbc",shape="record"];
	"sqlalchemy.dialects.mssql.json" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mssql.json",shape="record"];
	"sqlalchemy.dialects.mssql.pymssql" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mssql.pymssql",shape="record"];
	"sqlalchemy.dialects.mssql.aioodbc" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mssql.aioodbc",shape="record"];
	"sqlalchemy.connectors.aioodbc" [label="<f0> SourceModule| <f1> sqlalchemy.connectors.aioodbc",shape="record"];
	"sqlalchemy.dialects.mssql.information_schema" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mssql.information_schema",shape="record"];
	"sqlalchemy.ext.compiler" [label="<f0> SourceModule| <f1> sqlalchemy.ext.compiler",shape="record"];
	"sqlalchemy.dialects.mssql.base" [label="<f0> SourceModule| <f1> sqlalchemy.dialects.mssql.base",shape="record"];
	"sqlalchemy.ext.baked" [label="<f0> SourceModule| <f1> sqlalchemy.ext.baked",shape="record"];
	"psycopg2" [label="<f0> MissingModule| <f1> psycopg2",shape="record"];
	"sqlalchemy.types" [label="<f0> SourceModule| <f1> sqlalchemy.types",shape="record"];
	"sqlalchemy.orm.base" [label="<f0> SourceModule| <f1> sqlalchemy.orm.base",shape="record"];
	"sqlalchemy.orm.dynamic" [label="<f0> SourceModule| <f1> sqlalchemy.orm.dynamic",shape="record"];
	"sqlalchemy.orm._typing" [label="<f0> SourceModule| <f1> sqlalchemy.orm._typing",shape="record"];
	"sqlalchemy.orm.interfaces" [label="<f0> SourceModule| <f1> sqlalchemy.orm.interfaces",shape="record"];
	"sqlalchemy.orm.exc" [label="<f0> SourceModule| <f1> sqlalchemy.orm.exc",shape="record"];
	"sqlalchemy.orm.collections" [label="<f0> SourceModule| <f1> sqlalchemy.orm.collections",shape="record"];
	"sqlalchemy.orm.mapped_collection" [label="<f0> SourceModule| <f1> sqlalchemy.orm.mapped_collection",shape="record"];
	"sqlalchemy.orm" [label="<f0> Package| <f1> sqlalchemy.orm",shape="record"];
	"sqlalchemy.ext.declarative" [label="<f0> Package| <f1> sqlalchemy.ext.declarative",shape="record"];
	"sqlalchemy.ext.declarative.extensions" [label="<f0> SourceModule| <f1> sqlalchemy.ext.declarative.extensions",shape="record"];
	"pyDatalog.util" [label="<f0> SourceModule| <f1> pyDatalog.util",shape="record"];
	"pyDatalog.pyParser" [label="<f0> SourceModule| <f1> pyDatalog.pyParser",shape="record"];
	"pyDatalog.Aggregate" [label="<f0> SourceModule| <f1> pyDatalog.Aggregate",shape="record"];
	"pyDatalog.UserList" [label="<f0> SourceModule| <f1> pyDatalog.UserList",shape="record"];
	"pyDatalog.pyEngine" [label="<f0> Extension| <f1> pyDatalog.pyEngine",shape="record"];
	"pyDatalog.Logic" [label="<f0> SourceModule| <f1> pyDatalog.Logic",shape="record"];
	"pyDatalog.version" [label="<f0> SourceModule| <f1> pyDatalog.version",shape="record"];
	"pyDatalog" [label="<f0> Package| <f1> pyDatalog",shape="record"];
	"langchain_core.messages" [label="<f0> Package| <f1> langchain_core.messages",shape="record"];
	"langchain_core.messages.utils" [label="<f0> SourceModule| <f1> langchain_core.messages.utils",shape="record"];
	"langchain_core.runnables.base" [label="<f0> SourceModule| <f1> langchain_core.runnables.base",shape="record"];
	"langchain_core.beta.runnables.context" [label="<f0> SourceModule| <f1> langchain_core.beta.runnables.context",shape="record"];
	"langchain_core.beta.runnables" [label="<f0> Package| <f1> langchain_core.beta.runnables",shape="record"];
	"langchain_core.beta" [label="<f0> Package| <f1> langchain_core.beta",shape="record"];
	"langchain_core.runnables.configurable" [label="<f0> SourceModule| <f1> langchain_core.runnables.configurable",shape="record"];
	"langchain_core.tracers._streaming" [label="<f0> SourceModule| <f1> langchain_core.tracers._streaming",shape="record"];
	"langchain_core.tracers" [label="<f0> Package| <f1> langchain_core.tracers",shape="record"];
	"langchain_core.tracers.stdout" [label="<f0> SourceModule| <f1> langchain_core.tracers.stdout",shape="record"];
	"langchain_core.utils.input" [label="<f0> SourceModule| <f1> langchain_core.utils.input",shape="record"];
	"langchain_core.utils" [label="<f0> Package| <f1> langchain_core.utils",shape="record"];
	"langchain_core.utils.mustache" [label="<f0> SourceModule| <f1> langchain_core.utils.mustache",shape="record"];
	"langchain_core.utils.utils" [label="<f0> SourceModule| <f1> langchain_core.utils.utils",shape="record"];
	"requests" [label="<f0> Package| <f1> requests",shape="record"];
	"requests.status_codes" [label="<f0> SourceModule| <f1> requests.status_codes",shape="record"];
	"requests.structures" [label="<f0> SourceModule| <f1> requests.structures",shape="record"];
	"requests.compat" [label="<f0> SourceModule| <f1> requests.compat",shape="record"];
	"http.cookies" [label="<f0> SourceModule| <f1> http.cookies",shape="record"];
	"simplejson" [label="<f0> MissingModule| <f1> simplejson",shape="record"];
	"requests.models" [label="<f0> SourceModule| <f1> requests.models",shape="record"];
	"requests.hooks" [label="<f0> SourceModule| <f1> requests.hooks",shape="record"];
	"requests.cookies" [label="<f0> SourceModule| <f1> requests.cookies",shape="record"];
	"dummy_threading" [label="<f0> MissingModule| <f1> dummy_threading",shape="record"];
	"requests.auth" [label="<f0> SourceModule| <f1> requests.auth",shape="record"];
	"requests._internal_utils" [label="<f0> SourceModule| <f1> requests._internal_utils",shape="record"];
	"requests.api" [label="<f0> SourceModule| <f1> requests.api",shape="record"];
	"requests.sessions" [label="<f0> SourceModule| <f1> requests.sessions",shape="record"];
	"requests.adapters" [label="<f0> SourceModule| <f1> requests.adapters",shape="record"];
	"urllib3.contrib.socks" [label="<f0> SourceModule| <f1> urllib3.contrib.socks",shape="record"];
	"socks" [label="<f0> MissingModule| <f1> socks",shape="record"];
	"requests.__version__" [label="<f0> SourceModule| <f1> requests.__version__",shape="record"];
	"requests.utils" [label="<f0> SourceModule| <f1> requests.utils",shape="record"];
	"requests.certs" [label="<f0> SourceModule| <f1> requests.certs",shape="record"];
	"certifi" [label="<f0> Package| <f1> certifi",shape="record"];
	"certifi.core" [label="<f0> SourceModule| <f1> certifi.core",shape="record"];
	"importlib.resources" [label="<f0> SourceModule| <f1> importlib.resources",shape="record"];
	"'typing.io'" [label="<f0> MissingModule| <f1> 'typing.io'",shape="record"];
	"requests.packages" [label="<f0> SourceModule| <f1> requests.packages",shape="record"];
	"chardet" [label="<f0> MissingModule| <f1> chardet",shape="record"];
	"charset_normalizer" [label="<f0> Package| <f1> charset_normalizer",shape="record"];
	"charset_normalizer.md__mypyc" [label="<f0> Extension| <f1> charset_normalizer.md__mypyc",shape="record"];
	"charset_normalizer.version" [label="<f0> SourceModule| <f1> charset_normalizer.version",shape="record"];
	"charset_normalizer.utils" [label="<f0> SourceModule| <f1> charset_normalizer.utils",shape="record"];
	"charset_normalizer.constant" [label="<f0> SourceModule| <f1> charset_normalizer.constant",shape="record"];
	"_multibytecodec" [label="<f0> Extension| <f1> _multibytecodec",shape="record"];
	"charset_normalizer.models" [label="<f0> SourceModule| <f1> charset_normalizer.models",shape="record"];
	"charset_normalizer.cd" [label="<f0> SourceModule| <f1> charset_normalizer.cd",shape="record"];
	"charset_normalizer.md" [label="<f0> Extension| <f1> charset_normalizer.md",shape="record"];
	"charset_normalizer.legacy" [label="<f0> SourceModule| <f1> charset_normalizer.legacy",shape="record"];
	"charset_normalizer.api" [label="<f0> SourceModule| <f1> charset_normalizer.api",shape="record"];
	"requests.exceptions" [label="<f0> SourceModule| <f1> requests.exceptions",shape="record"];
	"langchain_core.utils.strings" [label="<f0> SourceModule| <f1> langchain_core.utils.strings",shape="record"];
	"langchain_core.utils.loading" [label="<f0> SourceModule| <f1> langchain_core.utils.loading",shape="record"];
	"langchain_core._api.deprecation" [label="<f0> SourceModule| <f1> langchain_core._api.deprecation",shape="record"];
	"langchain_core._api.internal" [label="<f0> SourceModule| <f1> langchain_core._api.internal",shape="record"];
	"langchain_core.utils.formatting" [label="<f0> SourceModule| <f1> langchain_core.utils.formatting",shape="record"];
	"langchain_core.utils.env" [label="<f0> SourceModule| <f1> langchain_core.utils.env",shape="record"];
	"langchain_core.utils.image" [label="<f0> SourceModule| <f1> langchain_core.utils.image",shape="record"];
	"langchain_core.tracers.evaluation" [label="<f0> SourceModule| <f1> langchain_core.tracers.evaluation",shape="record"];
	"langchain_core.tracers.context" [label="<f0> SourceModule| <f1> langchain_core.tracers.context",shape="record"];
	"langchain_core.callbacks.base" [label="<f0> SourceModule| <f1> langchain_core.callbacks.base",shape="record"];
	"langchain_core.outputs" [label="<f0> Package| <f1> langchain_core.outputs",shape="record"];
	"langchain_core.outputs.run_info" [label="<f0> SourceModule| <f1> langchain_core.outputs.run_info",shape="record"];
	"langchain_core.outputs.llm_result" [label="<f0> SourceModule| <f1> langchain_core.outputs.llm_result",shape="record"];
	"langchain_core.outputs.generation" [label="<f0> SourceModule| <f1> langchain_core.outputs.generation",shape="record"];
	"langchain_core.utils._merge" [label="<f0> SourceModule| <f1> langchain_core.utils._merge",shape="record"];
	"langchain_core.load" [label="<f0> Package| <f1> langchain_core.load",shape="record"];
	"langchain_core.load.dump" [label="<f0> SourceModule| <f1> langchain_core.load.dump",shape="record"];
	"langchain_core.load.load" [label="<f0> SourceModule| <f1> langchain_core.load.load",shape="record"];
	"langchain_core.load.mapping" [label="<f0> SourceModule| <f1> langchain_core.load.mapping",shape="record"];
	"langchain_core.outputs.chat_result" [label="<f0> SourceModule| <f1> langchain_core.outputs.chat_result",shape="record"];
	"langchain_core.outputs.chat_generation" [label="<f0> SourceModule| <f1> langchain_core.outputs.chat_generation",shape="record"];
	"langchain_core.documents" [label="<f0> Package| <f1> langchain_core.documents",shape="record"];
	"langchain_core.documents.transformers" [label="<f0> SourceModule| <f1> langchain_core.documents.transformers",shape="record"];
	"langchain_core.documents.compressor" [label="<f0> SourceModule| <f1> langchain_core.documents.compressor",shape="record"];
	"langchain_core.documents.base" [label="<f0> SourceModule| <f1> langchain_core.documents.base",shape="record"];
	"langchain_core.agents" [label="<f0> SourceModule| <f1> langchain_core.agents",shape="record"];
	"langchain_core.callbacks" [label="<f0> Package| <f1> langchain_core.callbacks",shape="record"];
	"langchain_core.callbacks.usage" [label="<f0> SourceModule| <f1> langchain_core.callbacks.usage",shape="record"];
	"langchain_core.callbacks.streaming_stdout" [label="<f0> SourceModule| <f1> langchain_core.callbacks.streaming_stdout",shape="record"];
	"langchain_core.callbacks.stdout" [label="<f0> SourceModule| <f1> langchain_core.callbacks.stdout",shape="record"];
	"langchain_core.callbacks.file" [label="<f0> SourceModule| <f1> langchain_core.callbacks.file",shape="record"];
	"tenacity" [label="<f0> Package| <f1> tenacity",shape="record"];
	"tenacity.tornadoweb" [label="<f0> SourceModule| <f1> tenacity.tornadoweb",shape="record"];
	"tornado.concurrent" [label="<f0> SourceModule| <f1> tornado.concurrent",shape="record"];
	"tornado.ioloop" [label="<f0> SourceModule| <f1> tornado.ioloop",shape="record"];
	"tornado.process" [label="<f0> SourceModule| <f1> tornado.process",shape="record"];
	"tornado.iostream" [label="<f0> SourceModule| <f1> tornado.iostream",shape="record"];
	"doctest" [label="<f0> SourceModule| <f1> doctest",shape="record"];
	"unittest" [label="<f0> Package| <f1> unittest",shape="record"];
	"unittest.async_case" [label="<f0> SourceModule| <f1> unittest.async_case",shape="record"];
	"unittest.signals" [label="<f0> SourceModule| <f1> unittest.signals",shape="record"];
	"unittest.main" [label="<f0> SourceModule| <f1> unittest.main",shape="record"];
	"unittest.runner" [label="<f0> SourceModule| <f1> unittest.runner",shape="record"];
	"unittest.loader" [label="<f0> SourceModule| <f1> unittest.loader",shape="record"];
	"unittest.suite" [label="<f0> SourceModule| <f1> unittest.suite",shape="record"];
	"unittest.case" [label="<f0> SourceModule| <f1> unittest.case",shape="record"];
	"unittest._log" [label="<f0> SourceModule| <f1> unittest._log",shape="record"];
	"unittest.result" [label="<f0> SourceModule| <f1> unittest.result",shape="record"];
	"unittest.util" [label="<f0> SourceModule| <f1> unittest.util",shape="record"];
	"difflib" [label="<f0> SourceModule| <f1> difflib",shape="record"];
	"tornado.netutil" [label="<f0> SourceModule| <f1> tornado.netutil",shape="record"];
	"tornado.platform.asyncio" [label="<f0> SourceModule| <f1> tornado.platform.asyncio",shape="record"];
	"tornado.platform" [label="<f0> Package| <f1> tornado.platform",shape="record"];
	"tornado.util" [label="<f0> SourceModule| <f1> tornado.util",shape="record"];
	"tornado.speedups" [label="<f0> Extension| <f1> tornado.speedups",shape="record"];
	"tornado.log" [label="<f0> SourceModule| <f1> tornado.log",shape="record"];
	"tornado.options" [label="<f0> SourceModule| <f1> tornado.options",shape="record"];
	"colorama" [label="<f0> MissingModule| <f1> colorama",shape="record"];
	"tornado.escape" [label="<f0> SourceModule| <f1> tornado.escape",shape="record"];
	"logging.handlers" [label="<f0> SourceModule| <f1> logging.handlers",shape="record"];
	"win32evtlog" [label="<f0> MissingModule| <f1> win32evtlog",shape="record"];
	"win32evtlogutil" [label="<f0> MissingModule| <f1> win32evtlogutil",shape="record"];
	"smtplib" [label="<f0> SourceModule| <f1> smtplib",shape="record"];
	"tornado.gen" [label="<f0> SourceModule| <f1> tornado.gen",shape="record"];
	"tenacity.asyncio" [label="<f0> Package| <f1> tenacity.asyncio",shape="record"];
	"sniffio" [label="<f0> Package| <f1> sniffio",shape="record"];
	"sniffio._impl" [label="<f0> SourceModule| <f1> sniffio._impl",shape="record"];
	"'curio.meta'" [label="<f0> MissingModule| <f1> 'curio.meta'",shape="record"];
	"sniffio._version" [label="<f0> SourceModule| <f1> sniffio._version",shape="record"];
	"trio" [label="<f0> MissingModule| <f1> trio",shape="record"];
	"tenacity.asyncio.retry" [label="<f0> SourceModule| <f1> tenacity.asyncio.retry",shape="record"];
	"tornado" [label="<f0> Package| <f1> tornado",shape="record"];
	"tornado.autoreload" [label="<f0> SourceModule| <f1> tornado.autoreload",shape="record"];
	"tornado.template" [label="<f0> SourceModule| <f1> tornado.template",shape="record"];
	"tornado.locale" [label="<f0> SourceModule| <f1> tornado.locale",shape="record"];
	"tornado._locale_data" [label="<f0> SourceModule| <f1> tornado._locale_data",shape="record"];
	"tenacity.before_sleep" [label="<f0> SourceModule| <f1> tenacity.before_sleep",shape="record"];
	"tenacity.after" [label="<f0> SourceModule| <f1> tenacity.after",shape="record"];
	"tenacity.before" [label="<f0> SourceModule| <f1> tenacity.before",shape="record"];
	"tenacity.wait" [label="<f0> SourceModule| <f1> tenacity.wait",shape="record"];
	"tenacity.stop" [label="<f0> SourceModule| <f1> tenacity.stop",shape="record"];
	"tenacity.nap" [label="<f0> SourceModule| <f1> tenacity.nap",shape="record"];
	"tenacity.retry" [label="<f0> SourceModule| <f1> tenacity.retry",shape="record"];
	"tenacity._utils" [label="<f0> SourceModule| <f1> tenacity._utils",shape="record"];
	"langchain_core.tracers.run_collector" [label="<f0> SourceModule| <f1> langchain_core.tracers.run_collector",shape="record"];
	"langsmith.utils" [label="<f0> SourceModule| <f1> langsmith.utils",shape="record"];
	"langsmith._internal._patch" [label="<f0> SourceModule| <f1> langsmith._internal._patch",shape="record"];
	"langsmith._internal" [label="<f0> Package| <f1> langsmith._internal",shape="record"];
	"langsmith._internal._orjson" [label="<f0> SourceModule| <f1> langsmith._internal._orjson",shape="record"];
	"orjson.loads" [label="<f0> MissingModule| <f1> orjson.loads",shape="record"];
	"orjson.dumps" [label="<f0> MissingModule| <f1> orjson.dumps",shape="record"];
	"orjson.JSONDecodeError" [label="<f0> MissingModule| <f1> orjson.JSONDecodeError",shape="record"];
	"orjson.Fragment" [label="<f0> MissingModule| <f1> orjson.Fragment",shape="record"];
	"orjson.OPT_SERIALIZE_UUID" [label="<f0> MissingModule| <f1> orjson.OPT_SERIALIZE_UUID",shape="record"];
	"orjson.OPT_SERIALIZE_NUMPY" [label="<f0> MissingModule| <f1> orjson.OPT_SERIALIZE_NUMPY",shape="record"];
	"orjson.OPT_SERIALIZE_DATACLASS" [label="<f0> MissingModule| <f1> orjson.OPT_SERIALIZE_DATACLASS",shape="record"];
	"orjson.OPT_NON_STR_KEYS" [label="<f0> MissingModule| <f1> orjson.OPT_NON_STR_KEYS",shape="record"];
	"orjson" [label="<f0> Package| <f1> orjson",shape="record"];
	"zoneinfo" [label="<f0> Package| <f1> zoneinfo",shape="record"];
	"zoneinfo._zoneinfo" [label="<f0> SourceModule| <f1> zoneinfo._zoneinfo",shape="record"];
	"_zoneinfo" [label="<f0> Extension| <f1> _zoneinfo",shape="record"];
	"zoneinfo._common" [label="<f0> SourceModule| <f1> zoneinfo._common",shape="record"];
	"zoneinfo._tzpath" [label="<f0> SourceModule| <f1> zoneinfo._tzpath",shape="record"];
	"orjson.orjson" [label="<f0> Extension| <f1> orjson.orjson",shape="record"];
	"langsmith._internal._aiter" [label="<f0> SourceModule| <f1> langsmith._internal._aiter",shape="record"];
	"vcr" [label="<f0> MissingModule| <f1> vcr",shape="record"];
	"langsmith.schemas" [label="<f0> SourceModule| <f1> langsmith.schemas",shape="record"];
	"pydantic.v1" [label="<f0> Package| <f1> pydantic.v1",shape="record"];
	"pydantic.v1.version" [label="<f0> SourceModule| <f1> pydantic.v1.version",shape="record"];
	"cython" [label="<f0> MissingModule| <f1> cython",shape="record"];
	"pydantic.v1.types" [label="<f0> SourceModule| <f1> pydantic.v1.types",shape="record"];
	"pydantic.v1.typing" [label="<f0> SourceModule| <f1> pydantic.v1.typing",shape="record"];
	"pydantic.v1.validators" [label="<f0> SourceModule| <f1> pydantic.v1.validators",shape="record"];
	"pydantic.v1.utils" [label="<f0> SourceModule| <f1> pydantic.v1.utils",shape="record"];
	"pydantic.v1.datetime_parse" [label="<f0> SourceModule| <f1> pydantic.v1.datetime_parse",shape="record"];
	"pydantic.v1.tools" [label="<f0> SourceModule| <f1> pydantic.v1.tools",shape="record"];
	"pydantic.v1.parse" [label="<f0> SourceModule| <f1> pydantic.v1.parse",shape="record"];
	"pydantic.v1.networks" [label="<f0> SourceModule| <f1> pydantic.v1.networks",shape="record"];
	"email_validator" [label="<f0> MissingModule| <f1> email_validator",shape="record"];
	"pydantic.v1.main" [label="<f0> SourceModule| <f1> pydantic.v1.main",shape="record"];
	"pydantic.v1.schema" [label="<f0> SourceModule| <f1> pydantic.v1.schema",shape="record"];
	"pydantic.v1.json" [label="<f0> SourceModule| <f1> pydantic.v1.json",shape="record"];
	"pydantic.v1.color" [label="<f0> SourceModule| <f1> pydantic.v1.color",shape="record"];
	"colorsys" [label="<f0> SourceModule| <f1> colorsys",shape="record"];
	"pydantic.v1.fields" [label="<f0> SourceModule| <f1> pydantic.v1.fields",shape="record"];
	"pydantic.v1.error_wrappers" [label="<f0> SourceModule| <f1> pydantic.v1.error_wrappers",shape="record"];
	"pydantic.v1.env_settings" [label="<f0> SourceModule| <f1> pydantic.v1.env_settings",shape="record"];
	"pydantic.v1.decorator" [label="<f0> SourceModule| <f1> pydantic.v1.decorator",shape="record"];
	"pydantic.v1.config" [label="<f0> SourceModule| <f1> pydantic.v1.config",shape="record"];
	"pydantic.v1.class_validators" [label="<f0> SourceModule| <f1> pydantic.v1.class_validators",shape="record"];
	"pydantic.v1.annotated_types" [label="<f0> SourceModule| <f1> pydantic.v1.annotated_types",shape="record"];
	"pydantic.v1.dataclasses" [label="<f0> SourceModule| <f1> pydantic.v1.dataclasses",shape="record"];
	"pydantic.v1.errors" [label="<f0> SourceModule| <f1> pydantic.v1.errors",shape="record"];
	"httpx" [label="<f0> Package| <f1> httpx",shape="record"];
	"httpx._main" [label="<f0> SourceModule| <f1> httpx._main",shape="record"];
	"rich.table" [label="<f0> SourceModule| <f1> rich.table",shape="record"];
	"rich._timer" [label="<f0> SourceModule| <f1> rich._timer",shape="record"];
	"rich.highlighter" [label="<f0> SourceModule| <f1> rich.highlighter",shape="record"];
	"rich.text" [label="<f0> SourceModule| <f1> rich.text",shape="record"];
	"rich.ansi" [label="<f0> SourceModule| <f1> rich.ansi",shape="record"];
	"pty" [label="<f0> SourceModule| <f1> pty",shape="record"];
	"rich.color" [label="<f0> SourceModule| <f1> rich.color",shape="record"];
	"rich.terminal_theme" [label="<f0> SourceModule| <f1> rich.terminal_theme",shape="record"];
	"rich.palette" [label="<f0> SourceModule| <f1> rich.palette",shape="record"];
	"rich.repr" [label="<f0> SourceModule| <f1> rich.repr",shape="record"];
	"rich.color_triplet" [label="<f0> SourceModule| <f1> rich.color_triplet",shape="record"];
	"rich._palettes" [label="<f0> SourceModule| <f1> rich._palettes",shape="record"];
	"rich.emoji" [label="<f0> SourceModule| <f1> rich.emoji",shape="record"];
	"rich.columns" [label="<f0> SourceModule| <f1> rich.columns",shape="record"];
	"rich.constrain" [label="<f0> SourceModule| <f1> rich.constrain",shape="record"];
	"rich._emoji_replace" [label="<f0> SourceModule| <f1> rich._emoji_replace",shape="record"];
	"rich._emoji_codes" [label="<f0> SourceModule| <f1> rich._emoji_codes",shape="record"];
	"rich.control" [label="<f0> SourceModule| <f1> rich.control",shape="record"];
	"rich.containers" [label="<f0> SourceModule| <f1> rich.containers",shape="record"];
	"rich.cells" [label="<f0> SourceModule| <f1> rich.cells",shape="record"];
	"rich._cell_widths" [label="<f0> SourceModule| <f1> rich._cell_widths",shape="record"];
	"rich._wrap" [label="<f0> SourceModule| <f1> rich._wrap",shape="record"];
	"rich.style" [label="<f0> SourceModule| <f1> rich.style",shape="record"];
	"rich.segment" [label="<f0> SourceModule| <f1> rich.segment",shape="record"];
	"rich.protocol" [label="<f0> SourceModule| <f1> rich.protocol",shape="record"];
	"rich.padding" [label="<f0> SourceModule| <f1> rich.padding",shape="record"];
	"rich.measure" [label="<f0> SourceModule| <f1> rich.measure",shape="record"];
	"rich.jupyter" [label="<f0> SourceModule| <f1> rich.jupyter",shape="record"];
	"IPython.display" [label="<f0> SourceModule| <f1> IPython.display",shape="record"];
	"IPython.lib.display" [label="<f0> SourceModule| <f1> IPython.lib.display",shape="record"];
	"IPython.lib" [label="<f0> Package| <f1> IPython.lib",shape="record"];
	"pygments.formatters.LatexFormatter" [label="<f0> MissingModule| <f1> pygments.formatters.LatexFormatter",shape="record"];
	"pygments.formatters.HtmlFormatter" [label="<f0> MissingModule| <f1> pygments.formatters.HtmlFormatter",shape="record"];
	"pygments.formatters" [label="<f0> Package| <f1> pygments.formatters",shape="record"];
	"pygments.formatters.BBCodeFormatter" [label="<f0> MissingModule| <f1> pygments.formatters.BBCodeFormatter",shape="record"];
	"pygments.plugin" [label="<f0> SourceModule| <f1> pygments.plugin",shape="record"];
	"pygments.formatters._mapping" [label="<f0> SourceModule| <f1> pygments.formatters._mapping",shape="record"];
	"pygments" [label="<f0> Package| <f1> pygments",shape="record"];
	"pygments.styles.zenburn" [label="<f0> SourceModule| <f1> pygments.styles.zenburn",shape="record"];
	"pygments.token" [label="<f0> SourceModule| <f1> pygments.token",shape="record"];
	"pygments.style" [label="<f0> SourceModule| <f1> pygments.style",shape="record"];
	"pygments.styles.xcode" [label="<f0> SourceModule| <f1> pygments.styles.xcode",shape="record"];
	"pygments.styles.vs" [label="<f0> SourceModule| <f1> pygments.styles.vs",shape="record"];
	"pygments.styles.vim" [label="<f0> SourceModule| <f1> pygments.styles.vim",shape="record"];
	"pygments.styles.trac" [label="<f0> SourceModule| <f1> pygments.styles.trac",shape="record"];
	"pygments.styles.tango" [label="<f0> SourceModule| <f1> pygments.styles.tango",shape="record"];
	"pygments.styles.stata_light" [label="<f0> SourceModule| <f1> pygments.styles.stata_light",shape="record"];
	"pygments.styles.stata_dark" [label="<f0> SourceModule| <f1> pygments.styles.stata_dark",shape="record"];
	"pygments.styles.staroffice" [label="<f0> SourceModule| <f1> pygments.styles.staroffice",shape="record"];
	"pygments.styles.solarized" [label="<f0> SourceModule| <f1> pygments.styles.solarized",shape="record"];
	"pygments.styles.sas" [label="<f0> SourceModule| <f1> pygments.styles.sas",shape="record"];
	"pygments.styles.rrt" [label="<f0> SourceModule| <f1> pygments.styles.rrt",shape="record"];
	"pygments.styles.rainbow_dash" [label="<f0> SourceModule| <f1> pygments.styles.rainbow_dash",shape="record"];
	"pygments.styles.perldoc" [label="<f0> SourceModule| <f1> pygments.styles.perldoc",shape="record"];
	"pygments.styles.pastie" [label="<f0> SourceModule| <f1> pygments.styles.pastie",shape="record"];
	"pygments.styles.paraiso_light" [label="<f0> SourceModule| <f1> pygments.styles.paraiso_light",shape="record"];
	"pygments.styles.paraiso_dark" [label="<f0> SourceModule| <f1> pygments.styles.paraiso_dark",shape="record"];
	"pygments.styles.onedark" [label="<f0> SourceModule| <f1> pygments.styles.onedark",shape="record"];
	"pygments.styles.nord" [label="<f0> SourceModule| <f1> pygments.styles.nord",shape="record"];
	"pygments.styles.native" [label="<f0> SourceModule| <f1> pygments.styles.native",shape="record"];
	"pygments.styles.murphy" [label="<f0> SourceModule| <f1> pygments.styles.murphy",shape="record"];
	"pygments.styles.monokai" [label="<f0> SourceModule| <f1> pygments.styles.monokai",shape="record"];
	"pygments.styles.material" [label="<f0> SourceModule| <f1> pygments.styles.material",shape="record"];
	"pygments.styles.manni" [label="<f0> SourceModule| <f1> pygments.styles.manni",shape="record"];
	"pygments.styles.lovelace" [label="<f0> SourceModule| <f1> pygments.styles.lovelace",shape="record"];
	"pygments.styles.lilypond" [label="<f0> SourceModule| <f1> pygments.styles.lilypond",shape="record"];
	"pygments.styles.lightbulb" [label="<f0> SourceModule| <f1> pygments.styles.lightbulb",shape="record"];
	"pygments.styles.inkpot" [label="<f0> SourceModule| <f1> pygments.styles.inkpot",shape="record"];
	"pygments.styles.igor" [label="<f0> SourceModule| <f1> pygments.styles.igor",shape="record"];
	"pygments.styles.gruvbox" [label="<f0> SourceModule| <f1> pygments.styles.gruvbox",shape="record"];
	"pygments.styles.gh_dark" [label="<f0> SourceModule| <f1> pygments.styles.gh_dark",shape="record"];
	"pygments.styles.fruity" [label="<f0> SourceModule| <f1> pygments.styles.fruity",shape="record"];
	"pygments.styles.friendly_grayscale" [label="<f0> SourceModule| <f1> pygments.styles.friendly_grayscale",shape="record"];
	"pygments.styles.friendly" [label="<f0> SourceModule| <f1> pygments.styles.friendly",shape="record"];
	"pygments.styles.emacs" [label="<f0> SourceModule| <f1> pygments.styles.emacs",shape="record"];
	"pygments.styles.dracula" [label="<f0> SourceModule| <f1> pygments.styles.dracula",shape="record"];
	"pygments.styles.default" [label="<f0> SourceModule| <f1> pygments.styles.default",shape="record"];
	"pygments.styles.colorful" [label="<f0> SourceModule| <f1> pygments.styles.colorful",shape="record"];
	"pygments.styles.coffee" [label="<f0> SourceModule| <f1> pygments.styles.coffee",shape="record"];
	"pygments.styles.bw" [label="<f0> SourceModule| <f1> pygments.styles.bw",shape="record"];
	"pygments.styles.borland" [label="<f0> SourceModule| <f1> pygments.styles.borland",shape="record"];
	"pygments.styles.autumn" [label="<f0> SourceModule| <f1> pygments.styles.autumn",shape="record"];
	"pygments.styles.arduino" [label="<f0> SourceModule| <f1> pygments.styles.arduino",shape="record"];
	"pygments.styles.algol_nu" [label="<f0> SourceModule| <f1> pygments.styles.algol_nu",shape="record"];
	"pygments.styles.algol" [label="<f0> SourceModule| <f1> pygments.styles.algol",shape="record"];
	"pygments.styles.abap" [label="<f0> SourceModule| <f1> pygments.styles.abap",shape="record"];
	"pygments.styles._mapping" [label="<f0> SourceModule| <f1> pygments.styles._mapping",shape="record"];
	"pygments.styles" [label="<f0> Package| <f1> pygments.styles",shape="record"];
	"pygments.lexers.zig" [label="<f0> SourceModule| <f1> pygments.lexers.zig",shape="record"];
	"pygments.lexers.yara" [label="<f0> SourceModule| <f1> pygments.lexers.yara",shape="record"];
	"pygments.lexers.yang" [label="<f0> SourceModule| <f1> pygments.lexers.yang",shape="record"];
	"pygments.lexers.xorg" [label="<f0> SourceModule| <f1> pygments.lexers.xorg",shape="record"];
	"pygments.lexers.x10" [label="<f0> SourceModule| <f1> pygments.lexers.x10",shape="record"];
	"pygments.lexers.wren" [label="<f0> SourceModule| <f1> pygments.lexers.wren",shape="record"];
	"pygments.lexers.wowtoc" [label="<f0> SourceModule| <f1> pygments.lexers.wowtoc",shape="record"];
	"pygments.lexers.whiley" [label="<f0> SourceModule| <f1> pygments.lexers.whiley",shape="record"];
	"pygments.lexers.wgsl" [label="<f0> SourceModule| <f1> pygments.lexers.wgsl",shape="record"];
	"pygments.lexers.webmisc" [label="<f0> SourceModule| <f1> pygments.lexers.webmisc",shape="record"];
	"pygments.lexers.webidl" [label="<f0> SourceModule| <f1> pygments.lexers.webidl",shape="record"];
	"pygments.lexers.webassembly" [label="<f0> SourceModule| <f1> pygments.lexers.webassembly",shape="record"];
	"pygments.lexers.web" [label="<f0> SourceModule| <f1> pygments.lexers.web",shape="record"];
	"pygments.lexers.vyper" [label="<f0> SourceModule| <f1> pygments.lexers.vyper",shape="record"];
	"pygments.lexers.vip" [label="<f0> SourceModule| <f1> pygments.lexers.vip",shape="record"];
	"pygments.lexers.verifpal" [label="<f0> SourceModule| <f1> pygments.lexers.verifpal",shape="record"];
	"pygments.lexers.verification" [label="<f0> SourceModule| <f1> pygments.lexers.verification",shape="record"];
	"pygments.lexers.varnish" [label="<f0> SourceModule| <f1> pygments.lexers.varnish",shape="record"];
	"pygments.lexers.usd" [label="<f0> SourceModule| <f1> pygments.lexers.usd",shape="record"];
	"pygments.lexers.urbi" [label="<f0> SourceModule| <f1> pygments.lexers.urbi",shape="record"];
	"pygments.lexers.unicon" [label="<f0> SourceModule| <f1> pygments.lexers.unicon",shape="record"];
	"pygments.lexers.ul4" [label="<f0> SourceModule| <f1> pygments.lexers.ul4",shape="record"];
	"pygments.lexers.typst" [label="<f0> SourceModule| <f1> pygments.lexers.typst",shape="record"];
	"pygments.lexers.typoscript" [label="<f0> SourceModule| <f1> pygments.lexers.typoscript",shape="record"];
	"pygments.lexers.trafficscript" [label="<f0> SourceModule| <f1> pygments.lexers.trafficscript",shape="record"];
	"pygments.lexers.tnt" [label="<f0> SourceModule| <f1> pygments.lexers.tnt",shape="record"];
	"pygments.lexers.tls" [label="<f0> SourceModule| <f1> pygments.lexers.tls",shape="record"];
	"pygments.lexers.tlb" [label="<f0> SourceModule| <f1> pygments.lexers.tlb",shape="record"];
	"pygments.lexers.thingsdb" [label="<f0> SourceModule| <f1> pygments.lexers.thingsdb",shape="record"];
	"pygments.lexers.theorem" [label="<f0> SourceModule| <f1> pygments.lexers.theorem",shape="record"];
	"pygments.lexers.textfmts" [label="<f0> SourceModule| <f1> pygments.lexers.textfmts",shape="record"];
	"pygments.lexers.textedit" [label="<f0> SourceModule| <f1> pygments.lexers.textedit",shape="record"];
	"pygments.lexers.text" [label="<f0> SourceModule| <f1> pygments.lexers.text",shape="record"];
	"pygments.lexers.testing" [label="<f0> SourceModule| <f1> pygments.lexers.testing",shape="record"];
	"pygments.lexers.teraterm" [label="<f0> SourceModule| <f1> pygments.lexers.teraterm",shape="record"];
	"pygments.lexers.templates" [label="<f0> SourceModule| <f1> pygments.lexers.templates",shape="record"];
	"pygments.lexers.teal" [label="<f0> SourceModule| <f1> pygments.lexers.teal",shape="record"];
	"pygments.lexers.tcl" [label="<f0> SourceModule| <f1> pygments.lexers.tcl",shape="record"];
	"pygments.lexers.tal" [label="<f0> SourceModule| <f1> pygments.lexers.tal",shape="record"];
	"pygments.lexers.tact" [label="<f0> SourceModule| <f1> pygments.lexers.tact",shape="record"];
	"pygments.lexers.tablegen" [label="<f0> SourceModule| <f1> pygments.lexers.tablegen",shape="record"];
	"pygments.lexers.supercollider" [label="<f0> SourceModule| <f1> pygments.lexers.supercollider",shape="record"];
	"pygments.lexers.stata" [label="<f0> SourceModule| <f1> pygments.lexers.stata",shape="record"];
	"pygments.lexers.srcinfo" [label="<f0> SourceModule| <f1> pygments.lexers.srcinfo",shape="record"];
	"pygments.lexers.sql" [label="<f0> SourceModule| <f1> pygments.lexers.sql",shape="record"];
	"pygments.lexers.spice" [label="<f0> SourceModule| <f1> pygments.lexers.spice",shape="record"];
	"pygments.lexers.special" [label="<f0> SourceModule| <f1> pygments.lexers.special",shape="record"];
	"pygments.lexers.sophia" [label="<f0> SourceModule| <f1> pygments.lexers.sophia",shape="record"];
	"pygments.lexers.soong" [label="<f0> SourceModule| <f1> pygments.lexers.soong",shape="record"];
	"pygments.lexers.solidity" [label="<f0> SourceModule| <f1> pygments.lexers.solidity",shape="record"];
	"pygments.lexers.snobol" [label="<f0> SourceModule| <f1> pygments.lexers.snobol",shape="record"];
	"pygments.lexers.smv" [label="<f0> SourceModule| <f1> pygments.lexers.smv",shape="record"];
	"pygments.lexers.smithy" [label="<f0> SourceModule| <f1> pygments.lexers.smithy",shape="record"];
	"pygments.lexers.smalltalk" [label="<f0> SourceModule| <f1> pygments.lexers.smalltalk",shape="record"];
	"pygments.lexers.slash" [label="<f0> SourceModule| <f1> pygments.lexers.slash",shape="record"];
	"pygments.lexers.sieve" [label="<f0> SourceModule| <f1> pygments.lexers.sieve",shape="record"];
	"pygments.lexers.shell" [label="<f0> SourceModule| <f1> pygments.lexers.shell",shape="record"];
	"pygments.lexers.sgf" [label="<f0> SourceModule| <f1> pygments.lexers.sgf",shape="record"];
	"pygments.lexers.scripting" [label="<f0> SourceModule| <f1> pygments.lexers.scripting",shape="record"];
	"pygments.lexers.scdoc" [label="<f0> SourceModule| <f1> pygments.lexers.scdoc",shape="record"];
	"pygments.lexers.savi" [label="<f0> SourceModule| <f1> pygments.lexers.savi",shape="record"];
	"pygments.lexers.sas" [label="<f0> SourceModule| <f1> pygments.lexers.sas",shape="record"];
	"pygments.lexers.rust" [label="<f0> SourceModule| <f1> pygments.lexers.rust",shape="record"];
	"pygments.lexers.ruby" [label="<f0> SourceModule| <f1> pygments.lexers.ruby",shape="record"];
	"pygments.lexers.robotframework" [label="<f0> SourceModule| <f1> pygments.lexers.robotframework",shape="record"];
	"pygments.lexers.roboconf" [label="<f0> SourceModule| <f1> pygments.lexers.roboconf",shape="record"];
	"pygments.lexers.rnc" [label="<f0> SourceModule| <f1> pygments.lexers.rnc",shape="record"];
	"pygments.lexers.rita" [label="<f0> SourceModule| <f1> pygments.lexers.rita",shape="record"];
	"pygments.lexers.ride" [label="<f0> SourceModule| <f1> pygments.lexers.ride",shape="record"];
	"pygments.lexers.resource" [label="<f0> SourceModule| <f1> pygments.lexers.resource",shape="record"];
	"pygments.lexers.rego" [label="<f0> SourceModule| <f1> pygments.lexers.rego",shape="record"];
	"pygments.lexers.rebol" [label="<f0> SourceModule| <f1> pygments.lexers.rebol",shape="record"];
	"pygments.lexers.rdf" [label="<f0> SourceModule| <f1> pygments.lexers.rdf",shape="record"];
	"pygments.lexers.r" [label="<f0> SourceModule| <f1> pygments.lexers.r",shape="record"];
	"pygments.lexers.qvt" [label="<f0> SourceModule| <f1> pygments.lexers.qvt",shape="record"];
	"pygments.lexers.qlik" [label="<f0> SourceModule| <f1> pygments.lexers.qlik",shape="record"];
	"pygments.lexers.q" [label="<f0> SourceModule| <f1> pygments.lexers.q",shape="record"];
	"pygments.lexers.python" [label="<f0> SourceModule| <f1> pygments.lexers.python",shape="record"];
	"pygments.lexers.ptx" [label="<f0> SourceModule| <f1> pygments.lexers.ptx",shape="record"];
	"pygments.lexers.prql" [label="<f0> SourceModule| <f1> pygments.lexers.prql",shape="record"];
	"pygments.lexers.promql" [label="<f0> SourceModule| <f1> pygments.lexers.promql",shape="record"];
	"pygments.lexers.prolog" [label="<f0> SourceModule| <f1> pygments.lexers.prolog",shape="record"];
	"pygments.lexers.procfile" [label="<f0> SourceModule| <f1> pygments.lexers.procfile",shape="record"];
	"pygments.lexers.praat" [label="<f0> SourceModule| <f1> pygments.lexers.praat",shape="record"];
	"pygments.lexers.pony" [label="<f0> SourceModule| <f1> pygments.lexers.pony",shape="record"];
	"pygments.lexers.pointless" [label="<f0> SourceModule| <f1> pygments.lexers.pointless",shape="record"];
	"pygments.lexers.php" [label="<f0> SourceModule| <f1> pygments.lexers.php",shape="record"];
	"pygments.lexers.phix" [label="<f0> SourceModule| <f1> pygments.lexers.phix",shape="record"];
	"pygments.lexers.perl" [label="<f0> SourceModule| <f1> pygments.lexers.perl",shape="record"];
	"pygments.lexers.pddl" [label="<f0> SourceModule| <f1> pygments.lexers.pddl",shape="record"];
	"pygments.lexers.pawn" [label="<f0> SourceModule| <f1> pygments.lexers.pawn",shape="record"];
	"pygments.lexers.pascal" [label="<f0> SourceModule| <f1> pygments.lexers.pascal",shape="record"];
	"pygments.scanner" [label="<f0> SourceModule| <f1> pygments.scanner",shape="record"];
	"pygments.lexers.parsers" [label="<f0> SourceModule| <f1> pygments.lexers.parsers",shape="record"];
	"pygments.lexers.parasail" [label="<f0> SourceModule| <f1> pygments.lexers.parasail",shape="record"];
	"pygments.lexers.other" [label="<f0> SourceModule| <f1> pygments.lexers.other",shape="record"];
	"pygments.lexers.openscad" [label="<f0> SourceModule| <f1> pygments.lexers.openscad",shape="record"];
	"pygments.lexers.ooc" [label="<f0> SourceModule| <f1> pygments.lexers.ooc",shape="record"];
	"pygments.lexers.objective" [label="<f0> SourceModule| <f1> pygments.lexers.objective",shape="record"];
	"pygments.lexers.oberon" [label="<f0> SourceModule| <f1> pygments.lexers.oberon",shape="record"];
	"pygments.lexers.numbair" [label="<f0> SourceModule| <f1> pygments.lexers.numbair",shape="record"];
	"pygments.lexers.nix" [label="<f0> SourceModule| <f1> pygments.lexers.nix",shape="record"];
	"pygments.lexers.nit" [label="<f0> SourceModule| <f1> pygments.lexers.nit",shape="record"];
	"pygments.lexers.nimrod" [label="<f0> SourceModule| <f1> pygments.lexers.nimrod",shape="record"];
	"pygments.lexers.ncl" [label="<f0> SourceModule| <f1> pygments.lexers.ncl",shape="record"];
	"pygments.lexers.mosel" [label="<f0> SourceModule| <f1> pygments.lexers.mosel",shape="record"];
	"pygments.lexers.monte" [label="<f0> SourceModule| <f1> pygments.lexers.monte",shape="record"];
	"pygments.lexers.mojo" [label="<f0> SourceModule| <f1> pygments.lexers.mojo",shape="record"];
	"pygments.lexers.modula2" [label="<f0> SourceModule| <f1> pygments.lexers.modula2",shape="record"];
	"pygments.lexers.modeling" [label="<f0> SourceModule| <f1> pygments.lexers.modeling",shape="record"];
	"pygments.lexers.ml" [label="<f0> SourceModule| <f1> pygments.lexers.ml",shape="record"];
	"pygments.lexers.mips" [label="<f0> SourceModule| <f1> pygments.lexers.mips",shape="record"];
	"pygments.lexers.minecraft" [label="<f0> SourceModule| <f1> pygments.lexers.minecraft",shape="record"];
	"pygments.lexers.mime" [label="<f0> SourceModule| <f1> pygments.lexers.mime",shape="record"];
	"pygments.lexers.meson" [label="<f0> SourceModule| <f1> pygments.lexers.meson",shape="record"];
	"pygments.lexers.maxima" [label="<f0> SourceModule| <f1> pygments.lexers.maxima",shape="record"];
	"pygments.lexers.matlab" [label="<f0> SourceModule| <f1> pygments.lexers.matlab",shape="record"];
	"pygments.lexers.math" [label="<f0> SourceModule| <f1> pygments.lexers.math",shape="record"];
	"pygments.lexers.markup" [label="<f0> SourceModule| <f1> pygments.lexers.markup",shape="record"];
	"pygments.lexers.maple" [label="<f0> SourceModule| <f1> pygments.lexers.maple",shape="record"];
	"pygments.lexers.make" [label="<f0> SourceModule| <f1> pygments.lexers.make",shape="record"];
	"pygments.lexers.macaulay2" [label="<f0> SourceModule| <f1> pygments.lexers.macaulay2",shape="record"];
	"pygments.lexers.lisp" [label="<f0> SourceModule| <f1> pygments.lexers.lisp",shape="record"];
	"pygments.lexers.lilypond" [label="<f0> SourceModule| <f1> pygments.lexers.lilypond",shape="record"];
	"pygments.lexers.lean" [label="<f0> SourceModule| <f1> pygments.lexers.lean",shape="record"];
	"pygments.lexers.ldap" [label="<f0> SourceModule| <f1> pygments.lexers.ldap",shape="record"];
	"pygments.lexers.kusto" [label="<f0> SourceModule| <f1> pygments.lexers.kusto",shape="record"];
	"pygments.lexers.kuin" [label="<f0> SourceModule| <f1> pygments.lexers.kuin",shape="record"];
	"pygments.lexers.jvm" [label="<f0> SourceModule| <f1> pygments.lexers.jvm",shape="record"];
	"pygments.lexers.julia" [label="<f0> SourceModule| <f1> pygments.lexers.julia",shape="record"];
	"pygments.lexers.jsx" [label="<f0> SourceModule| <f1> pygments.lexers.jsx",shape="record"];
	"pygments.lexers.jsonnet" [label="<f0> SourceModule| <f1> pygments.lexers.jsonnet",shape="record"];
	"pygments.lexers.json5" [label="<f0> SourceModule| <f1> pygments.lexers.json5",shape="record"];
	"pygments.lexers.jslt" [label="<f0> SourceModule| <f1> pygments.lexers.jslt",shape="record"];
	"pygments.lexers.jmespath" [label="<f0> SourceModule| <f1> pygments.lexers.jmespath",shape="record"];
	"pygments.lexers.javascript" [label="<f0> SourceModule| <f1> pygments.lexers.javascript",shape="record"];
	"pygments.lexers.j" [label="<f0> SourceModule| <f1> pygments.lexers.j",shape="record"];
	"pygments.lexers.iolang" [label="<f0> SourceModule| <f1> pygments.lexers.iolang",shape="record"];
	"pygments.lexers.int_fiction" [label="<f0> SourceModule| <f1> pygments.lexers.int_fiction",shape="record"];
	"pygments.lexers.installers" [label="<f0> SourceModule| <f1> pygments.lexers.installers",shape="record"];
	"pygments.lexers.inferno" [label="<f0> SourceModule| <f1> pygments.lexers.inferno",shape="record"];
	"pygments.lexers.igor" [label="<f0> SourceModule| <f1> pygments.lexers.igor",shape="record"];
	"pygments.lexers.idl" [label="<f0> SourceModule| <f1> pygments.lexers.idl",shape="record"];
	"pygments.lexers.html" [label="<f0> SourceModule| <f1> pygments.lexers.html",shape="record"];
	"pygments.lexers.hexdump" [label="<f0> SourceModule| <f1> pygments.lexers.hexdump",shape="record"];
	"pygments.lexers.hdl" [label="<f0> SourceModule| <f1> pygments.lexers.hdl",shape="record"];
	"pygments.lexers.haxe" [label="<f0> SourceModule| <f1> pygments.lexers.haxe",shape="record"];
	"pygments.lexers.haskell" [label="<f0> SourceModule| <f1> pygments.lexers.haskell",shape="record"];
	"pygments.lexers.hare" [label="<f0> SourceModule| <f1> pygments.lexers.hare",shape="record"];
	"pygments.lexers.gsql" [label="<f0> SourceModule| <f1> pygments.lexers.gsql",shape="record"];
	"pygments.lexers.graphviz" [label="<f0> SourceModule| <f1> pygments.lexers.graphviz",shape="record"];
	"pygments.lexers.graphql" [label="<f0> SourceModule| <f1> pygments.lexers.graphql",shape="record"];
	"pygments.lexers.graphics" [label="<f0> SourceModule| <f1> pygments.lexers.graphics",shape="record"];
	"pygments.lexers.graph" [label="<f0> SourceModule| <f1> pygments.lexers.graph",shape="record"];
	"pygments.lexers.grammar_notation" [label="<f0> SourceModule| <f1> pygments.lexers.grammar_notation",shape="record"];
	"pygments.lexers.go" [label="<f0> SourceModule| <f1> pygments.lexers.go",shape="record"];
	"pygments.lexers.gleam" [label="<f0> SourceModule| <f1> pygments.lexers.gleam",shape="record"];
	"pygments.lexers.gdscript" [label="<f0> SourceModule| <f1> pygments.lexers.gdscript",shape="record"];
	"pygments.lexers.gcodelexer" [label="<f0> SourceModule| <f1> pygments.lexers.gcodelexer",shape="record"];
	"pygments.lexers.futhark" [label="<f0> SourceModule| <f1> pygments.lexers.futhark",shape="record"];
	"pygments.lexers.functional" [label="<f0> SourceModule| <f1> pygments.lexers.functional",shape="record"];
	"pygments.lexers.func" [label="<f0> SourceModule| <f1> pygments.lexers.func",shape="record"];
	"pygments.lexers.freefem" [label="<f0> SourceModule| <f1> pygments.lexers.freefem",shape="record"];
	"pygments.lexers.foxpro" [label="<f0> SourceModule| <f1> pygments.lexers.foxpro",shape="record"];
	"pygments.lexers.fortran" [label="<f0> SourceModule| <f1> pygments.lexers.fortran",shape="record"];
	"pygments.lexers.forth" [label="<f0> SourceModule| <f1> pygments.lexers.forth",shape="record"];
	"pygments.lexers.floscript" [label="<f0> SourceModule| <f1> pygments.lexers.floscript",shape="record"];
	"pygments.lexers.fift" [label="<f0> SourceModule| <f1> pygments.lexers.fift",shape="record"];
	"pygments.lexers.felix" [label="<f0> SourceModule| <f1> pygments.lexers.felix",shape="record"];
	"pygments.lexers.fantom" [label="<f0> SourceModule| <f1> pygments.lexers.fantom",shape="record"];
	"pygments.lexers.factor" [label="<f0> SourceModule| <f1> pygments.lexers.factor",shape="record"];
	"pygments.lexers.ezhil" [label="<f0> SourceModule| <f1> pygments.lexers.ezhil",shape="record"];
	"pygments.lexers.esoteric" [label="<f0> SourceModule| <f1> pygments.lexers.esoteric",shape="record"];
	"pygments.lexers.erlang" [label="<f0> SourceModule| <f1> pygments.lexers.erlang",shape="record"];
	"pygments.lexers.email" [label="<f0> SourceModule| <f1> pygments.lexers.email",shape="record"];
	"pygments.lexers.elpi" [label="<f0> SourceModule| <f1> pygments.lexers.elpi",shape="record"];
	"pygments.lexers.elm" [label="<f0> SourceModule| <f1> pygments.lexers.elm",shape="record"];
	"pygments.lexers.eiffel" [label="<f0> SourceModule| <f1> pygments.lexers.eiffel",shape="record"];
	"pygments.lexers.ecl" [label="<f0> SourceModule| <f1> pygments.lexers.ecl",shape="record"];
	"pygments.lexers.dylan" [label="<f0> SourceModule| <f1> pygments.lexers.dylan",shape="record"];
	"pygments.lexers.dsls" [label="<f0> SourceModule| <f1> pygments.lexers.dsls",shape="record"];
	"pygments.lexers.dotnet" [label="<f0> SourceModule| <f1> pygments.lexers.dotnet",shape="record"];
	"pygments.lexers.dns" [label="<f0> SourceModule| <f1> pygments.lexers.dns",shape="record"];
	"pygments.lexers.diff" [label="<f0> SourceModule| <f1> pygments.lexers.diff",shape="record"];
	"pygments.lexers.devicetree" [label="<f0> SourceModule| <f1> pygments.lexers.devicetree",shape="record"];
	"pygments.lexers.dax" [label="<f0> SourceModule| <f1> pygments.lexers.dax",shape="record"];
	"pygments.lexers.data" [label="<f0> SourceModule| <f1> pygments.lexers.data",shape="record"];
	"pygments.lexers.dalvik" [label="<f0> SourceModule| <f1> pygments.lexers.dalvik",shape="record"];
	"pygments.lexers.d" [label="<f0> SourceModule| <f1> pygments.lexers.d",shape="record"];
	"pygments.lexers.css" [label="<f0> SourceModule| <f1> pygments.lexers.css",shape="record"];
	"pygments.lexers.csound" [label="<f0> SourceModule| <f1> pygments.lexers.csound",shape="record"];
	"pygments.lexers.crystal" [label="<f0> SourceModule| <f1> pygments.lexers.crystal",shape="record"];
	"pygments.lexers.cplint" [label="<f0> SourceModule| <f1> pygments.lexers.cplint",shape="record"];
	"pygments.lexers.PrologLexer" [label="<f0> MissingModule| <f1> pygments.lexers.PrologLexer",shape="record"];
	"pygments.lexers.console" [label="<f0> SourceModule| <f1> pygments.lexers.console",shape="record"];
	"pygments.lexers.configs" [label="<f0> SourceModule| <f1> pygments.lexers.configs",shape="record"];
	"pygments.lexers.compiled" [label="<f0> SourceModule| <f1> pygments.lexers.compiled",shape="record"];
	"pygments.lexers.comal" [label="<f0> SourceModule| <f1> pygments.lexers.comal",shape="record"];
	"pygments.lexers.codeql" [label="<f0> SourceModule| <f1> pygments.lexers.codeql",shape="record"];
	"pygments.lexers.clean" [label="<f0> SourceModule| <f1> pygments.lexers.clean",shape="record"];
	"pygments.lexers.chapel" [label="<f0> SourceModule| <f1> pygments.lexers.chapel",shape="record"];
	"pygments.lexers.cddl" [label="<f0> SourceModule| <f1> pygments.lexers.cddl",shape="record"];
	"pygments.lexers.carbon" [label="<f0> SourceModule| <f1> pygments.lexers.carbon",shape="record"];
	"pygments.lexers.capnproto" [label="<f0> SourceModule| <f1> pygments.lexers.capnproto",shape="record"];
	"pygments.lexers.c_like" [label="<f0> SourceModule| <f1> pygments.lexers.c_like",shape="record"];
	"pygments.lexers.c_cpp" [label="<f0> SourceModule| <f1> pygments.lexers.c_cpp",shape="record"];
	"pygments.lexers.business" [label="<f0> SourceModule| <f1> pygments.lexers.business",shape="record"];
	"pygments.lexers.bqn" [label="<f0> SourceModule| <f1> pygments.lexers.bqn",shape="record"];
	"pygments.lexers.boa" [label="<f0> SourceModule| <f1> pygments.lexers.boa",shape="record"];
	"pygments.lexers.blueprint" [label="<f0> SourceModule| <f1> pygments.lexers.blueprint",shape="record"];
	"pygments.lexers.bibtex" [label="<f0> SourceModule| <f1> pygments.lexers.bibtex",shape="record"];
	"pygments.lexers.berry" [label="<f0> SourceModule| <f1> pygments.lexers.berry",shape="record"];
	"pygments.lexers.bdd" [label="<f0> SourceModule| <f1> pygments.lexers.bdd",shape="record"];
	"pygments.lexers.basic" [label="<f0> SourceModule| <f1> pygments.lexers.basic",shape="record"];
	"pygments.lexers.bare" [label="<f0> SourceModule| <f1> pygments.lexers.bare",shape="record"];
	"pygments.lexers.automation" [label="<f0> SourceModule| <f1> pygments.lexers.automation",shape="record"];
	"pygments.lexers.asn1" [label="<f0> SourceModule| <f1> pygments.lexers.asn1",shape="record"];
	"pygments.lexers.asm" [label="<f0> SourceModule| <f1> pygments.lexers.asm",shape="record"];
	"pygments.lexers.asc" [label="<f0> SourceModule| <f1> pygments.lexers.asc",shape="record"];
	"pygments.lexers.arturo" [label="<f0> SourceModule| <f1> pygments.lexers.arturo",shape="record"];
	"pygments.lexers.arrow" [label="<f0> SourceModule| <f1> pygments.lexers.arrow",shape="record"];
	"pygments.lexers.archetype" [label="<f0> SourceModule| <f1> pygments.lexers.archetype",shape="record"];
	"pygments.lexers.apl" [label="<f0> SourceModule| <f1> pygments.lexers.apl",shape="record"];
	"pygments.lexers.apdlexer" [label="<f0> SourceModule| <f1> pygments.lexers.apdlexer",shape="record"];
	"pygments.lexers.ampl" [label="<f0> SourceModule| <f1> pygments.lexers.ampl",shape="record"];
	"pygments.lexers.amdgpu" [label="<f0> SourceModule| <f1> pygments.lexers.amdgpu",shape="record"];
	"pygments.lexers.ambient" [label="<f0> SourceModule| <f1> pygments.lexers.ambient",shape="record"];
	"pygments.lexers.algebra" [label="<f0> SourceModule| <f1> pygments.lexers.algebra",shape="record"];
	"pygments.lexers.agile" [label="<f0> SourceModule| <f1> pygments.lexers.agile",shape="record"];
	"pygments.lexers.ada" [label="<f0> SourceModule| <f1> pygments.lexers.ada",shape="record"];
	"pygments.lexers.actionscript" [label="<f0> SourceModule| <f1> pygments.lexers.actionscript",shape="record"];
	"pygments.lexers._vim_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._vim_builtins",shape="record"];
	"pygments.lexers._vbscript_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._vbscript_builtins",shape="record"];
	"pygments.lexers._usd_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._usd_builtins",shape="record"];
	"pygments.lexers._tsql_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._tsql_builtins",shape="record"];
	"pygments.lexers._stata_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._stata_builtins",shape="record"];
	"pygments.lexers._stan_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._stan_builtins",shape="record"];
	"pygments.lexers._sourcemod_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._sourcemod_builtins",shape="record"];
	"pygments.lexers._scilab_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._scilab_builtins",shape="record"];
	"pygments.lexers._scheme_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._scheme_builtins",shape="record"];
	"pygments.lexers._qlik_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._qlik_builtins",shape="record"];
	"pygments.lexers._postgres_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._postgres_builtins",shape="record"];
	"pygments.lexers._php_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._php_builtins",shape="record"];
	"pygments.lexers._openedge_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._openedge_builtins",shape="record"];
	"pygments.lexers._mysql_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._mysql_builtins",shape="record"];
	"pygments.lexers._mql_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._mql_builtins",shape="record"];
	"pygments.lexers._mapping" [label="<f0> SourceModule| <f1> pygments.lexers._mapping",shape="record"];
	"pygments.lexers._luau_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._luau_builtins",shape="record"];
	"pygments.lexers._lua_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._lua_builtins",shape="record"];
	"pygments.lexers._lilypond_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._lilypond_builtins",shape="record"];
	"pygments.lexers._lasso_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._lasso_builtins",shape="record"];
	"pygments.lexers._julia_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._julia_builtins",shape="record"];
	"pygments.lexers._googlesql_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._googlesql_builtins",shape="record"];
	"pygments.lexers._css_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._css_builtins",shape="record"];
	"pygments.lexers._csound_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._csound_builtins",shape="record"];
	"pygments.lexers._cocoa_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._cocoa_builtins",shape="record"];
	"pygments.lexers._cl_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._cl_builtins",shape="record"];
	"pygments.lexers._asy_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._asy_builtins",shape="record"];
	"pygments.lexers._ada_builtins" [label="<f0> SourceModule| <f1> pygments.lexers._ada_builtins",shape="record"];
	"pygments.formatters.terminal256" [label="<f0> SourceModule| <f1> pygments.formatters.terminal256",shape="record"];
	"pygments.console" [label="<f0> SourceModule| <f1> pygments.console",shape="record"];
	"pygments.formatters.terminal" [label="<f0> SourceModule| <f1> pygments.formatters.terminal",shape="record"];
	"pygments.formatters.svg" [label="<f0> SourceModule| <f1> pygments.formatters.svg",shape="record"];
	"pygments.formatters.rtf" [label="<f0> SourceModule| <f1> pygments.formatters.rtf",shape="record"];
	"pygments.formatters.pangomarkup" [label="<f0> SourceModule| <f1> pygments.formatters.pangomarkup",shape="record"];
	"pygments.formatters.other" [label="<f0> SourceModule| <f1> pygments.formatters.other",shape="record"];
	"pygments.formatters.latex" [label="<f0> SourceModule| <f1> pygments.formatters.latex",shape="record"];
	"pygments.formatters.irc" [label="<f0> SourceModule| <f1> pygments.formatters.irc",shape="record"];
	"pygments.formatters.img" [label="<f0> SourceModule| <f1> pygments.formatters.img",shape="record"];
	"PIL.ImageFont" [label="<f0> SourceModule| <f1> PIL.ImageFont",shape="record"];
	"PIL._imagingft" [label="<f0> Extension| <f1> PIL._imagingft",shape="record"];
	"PIL._imaging" [label="<f0> Extension| <f1> PIL._imaging",shape="record"];
	"PIL.ImageFile" [label="<f0> SourceModule| <f1> PIL.ImageFile",shape="record"];
	"PIL.TiffImagePlugin" [label="<f0> SourceModule| <f1> PIL.TiffImagePlugin",shape="record"];
	"PIL._binary" [label="<f0> SourceModule| <f1> PIL._binary",shape="record"];
	"PIL.TiffTags" [label="<f0> SourceModule| <f1> PIL.TiffTags",shape="record"];
	"PIL.ImagePalette" [label="<f0> SourceModule| <f1> PIL.ImagePalette",shape="record"];
	"PIL.PaletteFile" [label="<f0> SourceModule| <f1> PIL.PaletteFile",shape="record"];
	"PIL.ImageColor" [label="<f0> SourceModule| <f1> PIL.ImageColor",shape="record"];
	"PIL.GimpPaletteFile" [label="<f0> SourceModule| <f1> PIL.GimpPaletteFile",shape="record"];
	"PIL.GimpGradientFile" [label="<f0> SourceModule| <f1> PIL.GimpGradientFile",shape="record"];
	"PIL.ImageOps" [label="<f0> SourceModule| <f1> PIL.ImageOps",shape="record"];
	"PIL._deprecate" [label="<f0> SourceModule| <f1> PIL._deprecate",shape="record"];
	"PIL.ExifTags" [label="<f0> SourceModule| <f1> PIL.ExifTags",shape="record"];
	"PIL._util" [label="<f0> SourceModule| <f1> PIL._util",shape="record"];
	"PIL._typing" [label="<f0> SourceModule| <f1> PIL._typing",shape="record"];
	"numpy.typing" [label="<f0> Package| <f1> numpy.typing",shape="record"];
	"numpy._pytesttester" [label="<f0> SourceModule| <f1> numpy._pytesttester",shape="record"];
	"numpy.testing" [label="<f0> Package| <f1> numpy.testing",shape="record"];
	"numpy.testing.overrides" [label="<f0> SourceModule| <f1> numpy.testing.overrides",shape="record"];
	"numpy.lib.recfunctions" [label="<f0> SourceModule| <f1> numpy.lib.recfunctions",shape="record"];
	"numpy.lib._iotools" [label="<f0> SourceModule| <f1> numpy.lib._iotools",shape="record"];
	"numpy._utils" [label="<f0> Package| <f1> numpy._utils",shape="record"];
	"numpy._utils._convertions" [label="<f0> SourceModule| <f1> numpy._utils._convertions",shape="record"];
	"numpy._core.numeric" [label="<f0> SourceModule| <f1> numpy._core.numeric",shape="record"];
	"numpy._core._asarray" [label="<f0> SourceModule| <f1> numpy._core._asarray",shape="record"];
	"numpy._core.arrayprint" [label="<f0> SourceModule| <f1> numpy._core.arrayprint",shape="record"];
	"_dummy_thread" [label="<f0> MissingModule| <f1> _dummy_thread",shape="record"];
	"numpy._core.fromnumeric" [label="<f0> SourceModule| <f1> numpy._core.fromnumeric",shape="record"];
	"numpy._core._methods" [label="<f0> SourceModule| <f1> numpy._core._methods",shape="record"];
	"numpy.lib._stride_tricks_impl" [label="<f0> SourceModule| <f1> numpy.lib._stride_tricks_impl",shape="record"];
	"numpy._globals" [label="<f0> SourceModule| <f1> numpy._globals",shape="record"];
	"numpy._core._exceptions" [label="<f0> SourceModule| <f1> numpy._core._exceptions",shape="record"];
	"numpy._core._multiarray_umath" [label="<f0> Extension| <f1> numpy._core._multiarray_umath",shape="record"];
	"numpy._core._ufunc_config" [label="<f0> SourceModule| <f1> numpy._core._ufunc_config",shape="record"];
	"numpy.exceptions" [label="<f0> SourceModule| <f1> numpy.exceptions",shape="record"];
	"numpy._core.shape_base" [label="<f0> SourceModule| <f1> numpy._core.shape_base",shape="record"];
	"numpy._core.numerictypes" [label="<f0> SourceModule| <f1> numpy._core.numerictypes",shape="record"];
	"numpy._core._dtype" [label="<f0> SourceModule| <f1> numpy._core._dtype",shape="record"];
	"numpy._core._type_aliases" [label="<f0> SourceModule| <f1> numpy._core._type_aliases",shape="record"];
	"numpy._core._string_helpers" [label="<f0> SourceModule| <f1> numpy._core._string_helpers",shape="record"];
	"numpy._core.multiarray" [label="<f0> SourceModule| <f1> numpy._core.multiarray",shape="record"];
	"numpy._core" [label="<f0> Package| <f1> numpy._core",shape="record"];
	"numpy._core.void" [label="<f0> MissingModule| <f1> numpy._core.void",shape="record"];
	"numpy._core.ushort" [label="<f0> MissingModule| <f1> numpy._core.ushort",shape="record"];
	"numpy._core.unsignedinteger" [label="<f0> MissingModule| <f1> numpy._core.unsignedinteger",shape="record"];
	"numpy._core.ulonglong" [label="<f0> MissingModule| <f1> numpy._core.ulonglong",shape="record"];
	"numpy._core.ulong" [label="<f0> MissingModule| <f1> numpy._core.ulong",shape="record"];
	"numpy._core.uintp" [label="<f0> MissingModule| <f1> numpy._core.uintp",shape="record"];
	"numpy._core.uintc" [label="<f0> MissingModule| <f1> numpy._core.uintc",shape="record"];
	"numpy._core.uint64" [label="<f0> MissingModule| <f1> numpy._core.uint64",shape="record"];
	"numpy._core.uint32" [label="<f0> MissingModule| <f1> numpy._core.uint32",shape="record"];
	"numpy._core.uint16" [label="<f0> MissingModule| <f1> numpy._core.uint16",shape="record"];
	"numpy._core.uint" [label="<f0> MissingModule| <f1> numpy._core.uint",shape="record"];
	"numpy._core.ubyte" [label="<f0> MissingModule| <f1> numpy._core.ubyte",shape="record"];
	"numpy._core.trunc" [label="<f0> MissingModule| <f1> numpy._core.trunc",shape="record"];
	"numpy._core.true_divide" [label="<f0> MissingModule| <f1> numpy._core.true_divide",shape="record"];
	"numpy._core.timedelta64" [label="<f0> MissingModule| <f1> numpy._core.timedelta64",shape="record"];
	"numpy._core.tanh" [label="<f0> MissingModule| <f1> numpy._core.tanh",shape="record"];
	"numpy._core.tan" [label="<f0> MissingModule| <f1> numpy._core.tan",shape="record"];
	"numpy._core.subtract" [label="<f0> MissingModule| <f1> numpy._core.subtract",shape="record"];
	"numpy._core.str_" [label="<f0> MissingModule| <f1> numpy._core.str_",shape="record"];
	"numpy._core.square" [label="<f0> MissingModule| <f1> numpy._core.square",shape="record"];
	"numpy._core.spacing" [label="<f0> MissingModule| <f1> numpy._core.spacing",shape="record"];
	"numpy._core.sinh" [label="<f0> MissingModule| <f1> numpy._core.sinh",shape="record"];
	"numpy._core.signedinteger" [label="<f0> MissingModule| <f1> numpy._core.signedinteger",shape="record"];
	"numpy._core.short" [label="<f0> MissingModule| <f1> numpy._core.short",shape="record"];
	"numpy._core.rint" [label="<f0> MissingModule| <f1> numpy._core.rint",shape="record"];
	"numpy._core.right_shift" [label="<f0> MissingModule| <f1> numpy._core.right_shift",shape="record"];
	"numpy._core.remainder" [label="<f0> MissingModule| <f1> numpy._core.remainder",shape="record"];
	"numpy._core.radians" [label="<f0> MissingModule| <f1> numpy._core.radians",shape="record"];
	"numpy._core.rad2deg" [label="<f0> MissingModule| <f1> numpy._core.rad2deg",shape="record"];
	"numpy._core.power" [label="<f0> MissingModule| <f1> numpy._core.power",shape="record"];
	"numpy._core.positive" [label="<f0> MissingModule| <f1> numpy._core.positive",shape="record"];
	"numpy._core.pi" [label="<f0> MissingModule| <f1> numpy._core.pi",shape="record"];
	"numpy._core.not_equal" [label="<f0> MissingModule| <f1> numpy._core.not_equal",shape="record"];
	"numpy._core.negative" [label="<f0> MissingModule| <f1> numpy._core.negative",shape="record"];
	"numpy._core.modf" [label="<f0> MissingModule| <f1> numpy._core.modf",shape="record"];
	"numpy._core.mod" [label="<f0> MissingModule| <f1> numpy._core.mod",shape="record"];
	"numpy._core.minimum" [label="<f0> MissingModule| <f1> numpy._core.minimum",shape="record"];
	"numpy._core.maximum" [label="<f0> MissingModule| <f1> numpy._core.maximum",shape="record"];
	"numpy._core.longdouble" [label="<f0> MissingModule| <f1> numpy._core.longdouble",shape="record"];
	"numpy._core.long" [label="<f0> MissingModule| <f1> numpy._core.long",shape="record"];
	"numpy._core.logical_xor" [label="<f0> MissingModule| <f1> numpy._core.logical_xor",shape="record"];
	"numpy._core.logical_or" [label="<f0> MissingModule| <f1> numpy._core.logical_or",shape="record"];
	"numpy._core.logical_not" [label="<f0> MissingModule| <f1> numpy._core.logical_not",shape="record"];
	"numpy._core.logical_and" [label="<f0> MissingModule| <f1> numpy._core.logical_and",shape="record"];
	"numpy._core.logaddexp2" [label="<f0> MissingModule| <f1> numpy._core.logaddexp2",shape="record"];
	"numpy._core.logaddexp" [label="<f0> MissingModule| <f1> numpy._core.logaddexp",shape="record"];
	"numpy._core.log2" [label="<f0> MissingModule| <f1> numpy._core.log2",shape="record"];
	"numpy._core.log1p" [label="<f0> MissingModule| <f1> numpy._core.log1p",shape="record"];
	"numpy._core.log" [label="<f0> MissingModule| <f1> numpy._core.log",shape="record"];
	"numpy._core.less_equal" [label="<f0> MissingModule| <f1> numpy._core.less_equal",shape="record"];
	"numpy._core.less" [label="<f0> MissingModule| <f1> numpy._core.less",shape="record"];
	"numpy._core.left_shift" [label="<f0> MissingModule| <f1> numpy._core.left_shift",shape="record"];
	"numpy._core.ldexp" [label="<f0> MissingModule| <f1> numpy._core.ldexp",shape="record"];
	"numpy._core.lcm" [label="<f0> MissingModule| <f1> numpy._core.lcm",shape="record"];
	"numpy._core.integer" [label="<f0> MissingModule| <f1> numpy._core.integer",shape="record"];
	"numpy._core.int8" [label="<f0> MissingModule| <f1> numpy._core.int8",shape="record"];
	"numpy._core.int64" [label="<f0> MissingModule| <f1> numpy._core.int64",shape="record"];
	"numpy._core.int32" [label="<f0> MissingModule| <f1> numpy._core.int32",shape="record"];
	"numpy._core.int16" [label="<f0> MissingModule| <f1> numpy._core.int16",shape="record"];
	"numpy._core.hypot" [label="<f0> MissingModule| <f1> numpy._core.hypot",shape="record"];
	"numpy._core.heaviside" [label="<f0> MissingModule| <f1> numpy._core.heaviside",shape="record"];
	"numpy._core.half" [label="<f0> MissingModule| <f1> numpy._core.half",shape="record"];
	"numpy._core.greater_equal" [label="<f0> MissingModule| <f1> numpy._core.greater_equal",shape="record"];
	"numpy._core.greater" [label="<f0> MissingModule| <f1> numpy._core.greater",shape="record"];
	"numpy._core.gcd" [label="<f0> MissingModule| <f1> numpy._core.gcd",shape="record"];
	"numpy._core.frompyfunc" [label="<f0> MissingModule| <f1> numpy._core.frompyfunc",shape="record"];
	"numpy._core.frexp" [label="<f0> MissingModule| <f1> numpy._core.frexp",shape="record"];
	"numpy._core.fmod" [label="<f0> MissingModule| <f1> numpy._core.fmod",shape="record"];
	"numpy._core.fmin" [label="<f0> MissingModule| <f1> numpy._core.fmin",shape="record"];
	"numpy._core.fmax" [label="<f0> MissingModule| <f1> numpy._core.fmax",shape="record"];
	"numpy._core.floor_divide" [label="<f0> MissingModule| <f1> numpy._core.floor_divide",shape="record"];
	"numpy._core.floor" [label="<f0> MissingModule| <f1> numpy._core.floor",shape="record"];
	"numpy._core.floating" [label="<f0> MissingModule| <f1> numpy._core.floating",shape="record"];
	"numpy._core.float_power" [label="<f0> MissingModule| <f1> numpy._core.float_power",shape="record"];
	"numpy._core.float16" [label="<f0> MissingModule| <f1> numpy._core.float16",shape="record"];
	"numpy._core.fabs" [label="<f0> MissingModule| <f1> numpy._core.fabs",shape="record"];
	"numpy._core.expm1" [label="<f0> MissingModule| <f1> numpy._core.expm1",shape="record"];
	"numpy._core.exp" [label="<f0> MissingModule| <f1> numpy._core.exp",shape="record"];
	"numpy._core.euler_gamma" [label="<f0> MissingModule| <f1> numpy._core.euler_gamma",shape="record"];
	"numpy._core.equal" [label="<f0> MissingModule| <f1> numpy._core.equal",shape="record"];
	"numpy._core.e" [label="<f0> MissingModule| <f1> numpy._core.e",shape="record"];
	"numpy._core.divmod" [label="<f0> MissingModule| <f1> numpy._core.divmod",shape="record"];
	"numpy._core.degrees" [label="<f0> MissingModule| <f1> numpy._core.degrees",shape="record"];
	"numpy._core.deg2rad" [label="<f0> MissingModule| <f1> numpy._core.deg2rad",shape="record"];
	"numpy._core.datetime64" [label="<f0> MissingModule| <f1> numpy._core.datetime64",shape="record"];
	"numpy._core.cosh" [label="<f0> MissingModule| <f1> numpy._core.cosh",shape="record"];
	"numpy._core.cos" [label="<f0> MissingModule| <f1> numpy._core.cos",shape="record"];
	"numpy._core.copysign" [label="<f0> MissingModule| <f1> numpy._core.copysign",shape="record"];
	"numpy._core.conjugate" [label="<f0> MissingModule| <f1> numpy._core.conjugate",shape="record"];
	"numpy._core.conj" [label="<f0> MissingModule| <f1> numpy._core.conj",shape="record"];
	"numpy._core.complex64" [label="<f0> MissingModule| <f1> numpy._core.complex64",shape="record"];
	"numpy._core.clongdouble" [label="<f0> MissingModule| <f1> numpy._core.clongdouble",shape="record"];
	"numpy._core.character" [label="<f0> MissingModule| <f1> numpy._core.character",shape="record"];
	"numpy._core.ceil" [label="<f0> MissingModule| <f1> numpy._core.ceil",shape="record"];
	"numpy._core.cbrt" [label="<f0> MissingModule| <f1> numpy._core.cbrt",shape="record"];
	"numpy._core.bytes_" [label="<f0> MissingModule| <f1> numpy._core.bytes_",shape="record"];
	"numpy._core.byte" [label="<f0> MissingModule| <f1> numpy._core.byte",shape="record"];
	"numpy._core.bool_" [label="<f0> MissingModule| <f1> numpy._core.bool_",shape="record"];
	"numpy._core.bitwise_xor" [label="<f0> MissingModule| <f1> numpy._core.bitwise_xor",shape="record"];
	"numpy._core.bitwise_or" [label="<f0> MissingModule| <f1> numpy._core.bitwise_or",shape="record"];
	"numpy._core.bitwise_count" [label="<f0> MissingModule| <f1> numpy._core.bitwise_count",shape="record"];
	"numpy._core.bitwise_and" [label="<f0> MissingModule| <f1> numpy._core.bitwise_and",shape="record"];
	"numpy._core.arctanh" [label="<f0> MissingModule| <f1> numpy._core.arctanh",shape="record"];
	"numpy._core.arctan2" [label="<f0> MissingModule| <f1> numpy._core.arctan2",shape="record"];
	"numpy._core.arctan" [label="<f0> MissingModule| <f1> numpy._core.arctan",shape="record"];
	"numpy._core.arcsinh" [label="<f0> MissingModule| <f1> numpy._core.arcsinh",shape="record"];
	"numpy._core.arcsin" [label="<f0> MissingModule| <f1> numpy._core.arcsin",shape="record"];
	"numpy._core.arccosh" [label="<f0> MissingModule| <f1> numpy._core.arccosh",shape="record"];
	"numpy._core.arccos" [label="<f0> MissingModule| <f1> numpy._core.arccos",shape="record"];
	"numpy._core._internal" [label="<f0> SourceModule| <f1> numpy._core._internal",shape="record"];
	"numpy._core._dtype_ctypes" [label="<f0> SourceModule| <f1> numpy._core._dtype_ctypes",shape="record"];
	"numpy._core._add_newdocs_scalars" [label="<f0> SourceModule| <f1> numpy._core._add_newdocs_scalars",shape="record"];
	"numpy._core._add_newdocs" [label="<f0> SourceModule| <f1> numpy._core._add_newdocs",shape="record"];
	"numpy._core.einsumfunc" [label="<f0> SourceModule| <f1> numpy._core.einsumfunc",shape="record"];
	"numpy._core._machar" [label="<f0> SourceModule| <f1> numpy._core._machar",shape="record"];
	"numpy._core.function_base" [label="<f0> SourceModule| <f1> numpy._core.function_base",shape="record"];
	"numpy._core.memmap" [label="<f0> SourceModule| <f1> numpy._core.memmap",shape="record"];
	"numpy._core.ones" [label="<f0> MissingModule| <f1> numpy._core.ones",shape="record"];
	"numpy._core.hstack" [label="<f0> MissingModule| <f1> numpy._core.hstack",shape="record"];
	"numpy._core.atleast_1d" [label="<f0> MissingModule| <f1> numpy._core.atleast_1d",shape="record"];
	"numpy._core.atleast_3d" [label="<f0> MissingModule| <f1> numpy._core.atleast_3d",shape="record"];
	"numpy._core.vstack" [label="<f0> MissingModule| <f1> numpy._core.vstack",shape="record"];
	"numpy._core.getlimits" [label="<f0> SourceModule| <f1> numpy._core.getlimits",shape="record"];
	"numpy._core.linspace" [label="<f0> MissingModule| <f1> numpy._core.linspace",shape="record"];
	"numpy._core.result_type" [label="<f0> MissingModule| <f1> numpy._core.result_type",shape="record"];
	"numpy._core.number" [label="<f0> MissingModule| <f1> numpy._core.number",shape="record"];
	"numpy._core.max" [label="<f0> MissingModule| <f1> numpy._core.max",shape="record"];
	"numpy._core.array2string" [label="<f0> MissingModule| <f1> numpy._core.array2string",shape="record"];
	"numpy._core.signbit" [label="<f0> MissingModule| <f1> numpy._core.signbit",shape="record"];
	"numpy._core.isscalar" [label="<f0> MissingModule| <f1> numpy._core.isscalar",shape="record"];
	"numpy._core.isnat" [label="<f0> MissingModule| <f1> numpy._core.isnat",shape="record"];
	"numpy._core.array_repr" [label="<f0> MissingModule| <f1> numpy._core.array_repr",shape="record"];
	"numpy._core.arange" [label="<f0> MissingModule| <f1> numpy._core.arange",shape="record"];
	"numpy._core.float32" [label="<f0> MissingModule| <f1> numpy._core.float32",shape="record"];
	"numpy._core.vecdot" [label="<f0> MissingModule| <f1> numpy._core.vecdot",shape="record"];
	"numpy._core.matrix_transpose" [label="<f0> MissingModule| <f1> numpy._core.matrix_transpose",shape="record"];
	"numpy._core.tensordot" [label="<f0> MissingModule| <f1> numpy._core.tensordot",shape="record"];
	"numpy._core.outer" [label="<f0> MissingModule| <f1> numpy._core.outer",shape="record"];
	"numpy._core.cross" [label="<f0> MissingModule| <f1> numpy._core.cross",shape="record"];
	"numpy._core.trace" [label="<f0> MissingModule| <f1> numpy._core.trace",shape="record"];
	"numpy._core.diagonal" [label="<f0> MissingModule| <f1> numpy._core.diagonal",shape="record"];
	"numpy._core.reciprocal" [label="<f0> MissingModule| <f1> numpy._core.reciprocal",shape="record"];
	"numpy._core.sort" [label="<f0> MissingModule| <f1> numpy._core.sort",shape="record"];
	"numpy._core.argsort" [label="<f0> MissingModule| <f1> numpy._core.argsort",shape="record"];
	"numpy._core.sign" [label="<f0> MissingModule| <f1> numpy._core.sign",shape="record"];
	"numpy._core.isnan" [label="<f0> MissingModule| <f1> numpy._core.isnan",shape="record"];
	"numpy._core.count_nonzero" [label="<f0> MissingModule| <f1> numpy._core.count_nonzero",shape="record"];
	"numpy._core.divide" [label="<f0> MissingModule| <f1> numpy._core.divide",shape="record"];
	"numpy._core.swapaxes" [label="<f0> MissingModule| <f1> numpy._core.swapaxes",shape="record"];
	"numpy._core.matmul" [label="<f0> MissingModule| <f1> numpy._core.matmul",shape="record"];
	"numpy._core.object_" [label="<f0> MissingModule| <f1> numpy._core.object_",shape="record"];
	"numpy._core.asanyarray" [label="<f0> MissingModule| <f1> numpy._core.asanyarray",shape="record"];
	"numpy._core.intp" [label="<f0> MissingModule| <f1> numpy._core.intp",shape="record"];
	"numpy._core.atleast_2d" [label="<f0> MissingModule| <f1> numpy._core.atleast_2d",shape="record"];
	"numpy._core.prod" [label="<f0> MissingModule| <f1> numpy._core.prod",shape="record"];
	"numpy._core.amax" [label="<f0> MissingModule| <f1> numpy._core.amax",shape="record"];
	"numpy._core.amin" [label="<f0> MissingModule| <f1> numpy._core.amin",shape="record"];
	"numpy._core.moveaxis" [label="<f0> MissingModule| <f1> numpy._core.moveaxis",shape="record"];
	"numpy._core.errstate" [label="<f0> MissingModule| <f1> numpy._core.errstate",shape="record"];
	"numpy._core.finfo" [label="<f0> MissingModule| <f1> numpy._core.finfo",shape="record"];
	"numpy._core.isfinite" [label="<f0> MissingModule| <f1> numpy._core.isfinite",shape="record"];
	"numpy._core.sum" [label="<f0> MissingModule| <f1> numpy._core.sum",shape="record"];
	"numpy._core.sqrt" [label="<f0> MissingModule| <f1> numpy._core.sqrt",shape="record"];
	"numpy._core.multiply" [label="<f0> MissingModule| <f1> numpy._core.multiply",shape="record"];
	"numpy._core.add" [label="<f0> MissingModule| <f1> numpy._core.add",shape="record"];
	"numpy._core.dot" [label="<f0> MissingModule| <f1> numpy._core.dot",shape="record"];
	"numpy._core.inf" [label="<f0> MissingModule| <f1> numpy._core.inf",shape="record"];
	"numpy._core.all" [label="<f0> MissingModule| <f1> numpy._core.all",shape="record"];
	"numpy._core.newaxis" [label="<f0> MissingModule| <f1> numpy._core.newaxis",shape="record"];
	"numpy._core.complexfloating" [label="<f0> MissingModule| <f1> numpy._core.complexfloating",shape="record"];
	"numpy._core.inexact" [label="<f0> MissingModule| <f1> numpy._core.inexact",shape="record"];
	"numpy._core.cdouble" [label="<f0> MissingModule| <f1> numpy._core.cdouble",shape="record"];
	"numpy._core.csingle" [label="<f0> MissingModule| <f1> numpy._core.csingle",shape="record"];
	"numpy._core.double" [label="<f0> MissingModule| <f1> numpy._core.double",shape="record"];
	"numpy._core.single" [label="<f0> MissingModule| <f1> numpy._core.single",shape="record"];
	"numpy._core.intc" [label="<f0> MissingModule| <f1> numpy._core.intc",shape="record"];
	"numpy._core.empty_like" [label="<f0> MissingModule| <f1> numpy._core.empty_like",shape="record"];
	"numpy._core.empty" [label="<f0> MissingModule| <f1> numpy._core.empty",shape="record"];
	"numpy._core.zeros" [label="<f0> MissingModule| <f1> numpy._core.zeros",shape="record"];
	"numpy._core.array" [label="<f0> MissingModule| <f1> numpy._core.array",shape="record"];
	"numpy._core.iinfo" [label="<f0> MissingModule| <f1> numpy._core.iinfo",shape="record"];
	"numpy._core.transpose" [label="<f0> MissingModule| <f1> numpy._core.transpose",shape="record"];
	"numpy._core.ndarray" [label="<f0> MissingModule| <f1> numpy._core.ndarray",shape="record"];
	"numpy._core.asarray" [label="<f0> MissingModule| <f1> numpy._core.asarray",shape="record"];
	"numpy.version" [label="<f0> SourceModule| <f1> numpy.version",shape="record"];
	"numpy._core.records" [label="<f0> SourceModule| <f1> numpy._core.records",shape="record"];
	"numpy.ma.mrecords" [label="<f0> SourceModule| <f1> numpy.ma.mrecords",shape="record"];
	"numpy.ma" [label="<f0> Package| <f1> numpy.ma",shape="record"];
	"numpy.ma.extras" [label="<f0> SourceModule| <f1> numpy.ma.extras",shape="record"];
	"numpy.lib._index_tricks_impl" [label="<f0> SourceModule| <f1> numpy.lib._index_tricks_impl",shape="record"];
	"numpy.lib.stride_tricks" [label="<f0> SourceModule| <f1> numpy.lib.stride_tricks",shape="record"];
	"numpy.matrixlib" [label="<f0> Package| <f1> numpy.matrixlib",shape="record"];
	"numpy.matrixlib.defmatrix" [label="<f0> SourceModule| <f1> numpy.matrixlib.defmatrix",shape="record"];
	"numpy.linalg" [label="<f0> Package| <f1> numpy.linalg",shape="record"];
	"numpy.linalg.linalg" [label="<f0> SourceModule| <f1> numpy.linalg.linalg",shape="record"];
	"numpy.linalg._linalg" [label="<f0> SourceModule| <f1> numpy.linalg._linalg",shape="record"];
	"numpy.lib._twodim_base_impl" [label="<f0> SourceModule| <f1> numpy.lib._twodim_base_impl",shape="record"];
	"numpy.linalg._umath_linalg" [label="<f0> Extension| <f1> numpy.linalg._umath_linalg",shape="record"];
	"numpy.lib._function_base_impl" [label="<f0> SourceModule| <f1> numpy.lib._function_base_impl",shape="record"];
	"numpy.lib._histograms_impl" [label="<f0> SourceModule| <f1> numpy.lib._histograms_impl",shape="record"];
	"numpy.lib.array_utils" [label="<f0> SourceModule| <f1> numpy.lib.array_utils",shape="record"];
	"numpy.lib._array_utils_impl" [label="<f0> SourceModule| <f1> numpy.lib._array_utils_impl",shape="record"];
	"numpy.ma.core" [label="<f0> SourceModule| <f1> numpy.ma.core",shape="record"];
	"numpy._utils._inspect" [label="<f0> SourceModule| <f1> numpy._utils._inspect",shape="record"];
	"numpy.lib" [label="<f0> Package| <f1> numpy.lib",shape="record"];
	"numpy.lib._version" [label="<f0> SourceModule| <f1> numpy.lib._version",shape="record"];
	"numpy.lib._arraypad_impl" [label="<f0> SourceModule| <f1> numpy.lib._arraypad_impl",shape="record"];
	"numpy.lib._arrayterator_impl" [label="<f0> SourceModule| <f1> numpy.lib._arrayterator_impl",shape="record"];
	"numpy.lib._npyio_impl" [label="<f0> SourceModule| <f1> numpy.lib._npyio_impl",shape="record"];
	"numpy.lib._datasource" [label="<f0> SourceModule| <f1> numpy.lib._datasource",shape="record"];
	"numpy.lib._polynomial_impl" [label="<f0> SourceModule| <f1> numpy.lib._polynomial_impl",shape="record"];
	"numpy.lib._arraysetops_impl" [label="<f0> SourceModule| <f1> numpy.lib._arraysetops_impl",shape="record"];
	"numpy.lib._utils_impl" [label="<f0> SourceModule| <f1> numpy.lib._utils_impl",shape="record"];
	"threadpoolctl" [label="<f0> MissingModule| <f1> threadpoolctl",shape="record"];
	"numpy.lib._ufunclike_impl" [label="<f0> SourceModule| <f1> numpy.lib._ufunclike_impl",shape="record"];
	"numpy.lib._shape_base_impl" [label="<f0> SourceModule| <f1> numpy.lib._shape_base_impl",shape="record"];
	"numpy.lib._nanfunctions_impl" [label="<f0> SourceModule| <f1> numpy.lib._nanfunctions_impl",shape="record"];
	"numpy.lib._type_check_impl" [label="<f0> SourceModule| <f1> numpy.lib._type_check_impl",shape="record"];
	"numpy.lib.scimath" [label="<f0> SourceModule| <f1> numpy.lib.scimath",shape="record"];
	"numpy.lib._scimath_impl" [label="<f0> SourceModule| <f1> numpy.lib._scimath_impl",shape="record"];
	"numpy.lib.npyio" [label="<f0> SourceModule| <f1> numpy.lib.npyio",shape="record"];
	"numpy.lib.format" [label="<f0> SourceModule| <f1> numpy.lib.format",shape="record"];
	"numpy.lib.mixins" [label="<f0> SourceModule| <f1> numpy.lib.mixins",shape="record"];
	"numpy.lib.introspect" [label="<f0> SourceModule| <f1> numpy.lib.introspect",shape="record"];
	"numpy._core.umath" [label="<f0> SourceModule| <f1> numpy._core.umath",shape="record"];
	"numpy._core.overrides" [label="<f0> SourceModule| <f1> numpy._core.overrides",shape="record"];
	"numpy.testing._private.extbuild" [label="<f0> SourceModule| <f1> numpy.testing._private.extbuild",shape="record"];
	"numpy.testing._private.utils" [label="<f0> SourceModule| <f1> numpy.testing._private.utils",shape="record"];
	"psutil" [label="<f0> Package| <f1> psutil",shape="record"];
	"psutil._psosx" [label="<f0> SourceModule| <f1> psutil._psosx",shape="record"];
	"psutil._psutil_posix" [label="<f0> Extension| <f1> psutil._psutil_posix",shape="record"];
	"psutil._psposix" [label="<f0> SourceModule| <f1> psutil._psposix",shape="record"];
	"psutil._psutil_osx" [label="<f0> Extension| <f1> psutil._psutil_osx",shape="record"];
	"psutil._psutil_windows" [label="<f0> MissingModule| <f1> psutil._psutil_windows",shape="record"];
	"psutil._common" [label="<f0> SourceModule| <f1> psutil._common",shape="record"];
	"win32pdh" [label="<f0> MissingModule| <f1> win32pdh",shape="record"];
	"numpy.testing._private" [label="<f0> Package| <f1> numpy.testing._private",shape="record"];
	"numpy._typing._add_docstring" [label="<f0> SourceModule| <f1> numpy._typing._add_docstring",shape="record"];
	"numpy._typing._array_like" [label="<f0> SourceModule| <f1> numpy._typing._array_like",shape="record"];
	"numpy._typing._nested_sequence" [label="<f0> SourceModule| <f1> numpy._typing._nested_sequence",shape="record"];
	"numpy._typing" [label="<f0> Package| <f1> numpy._typing",shape="record"];
	"numpy._typing._ufunc" [label="<f0> MissingModule| <f1> numpy._typing._ufunc",shape="record"];
	"numpy._typing._dtype_like" [label="<f0> SourceModule| <f1> numpy._typing._dtype_like",shape="record"];
	"numpy._typing._shape" [label="<f0> SourceModule| <f1> numpy._typing._shape",shape="record"];
	"numpy._typing._scalars" [label="<f0> SourceModule| <f1> numpy._typing._scalars",shape="record"];
	"numpy._typing._char_codes" [label="<f0> SourceModule| <f1> numpy._typing._char_codes",shape="record"];
	"numpy._typing._nbit" [label="<f0> SourceModule| <f1> numpy._typing._nbit",shape="record"];
	"PIL.features" [label="<f0> SourceModule| <f1> PIL.features",shape="record"];
	"PIL.ImageDraw" [label="<f0> SourceModule| <f1> PIL.ImageDraw",shape="record"];
	"PIL.ImageDraw2" [label="<f0> SourceModule| <f1> PIL.ImageDraw2",shape="record"];
	"PIL.ImagePath" [label="<f0> SourceModule| <f1> PIL.ImagePath",shape="record"];
	"pygments.formatters.html" [label="<f0> SourceModule| <f1> pygments.formatters.html",shape="record"];
	"ctags" [label="<f0> MissingModule| <f1> ctags",shape="record"];
	"pygments.formatters.groff" [label="<f0> SourceModule| <f1> pygments.formatters.groff",shape="record"];
	"pygments.formatters.bbcode" [label="<f0> SourceModule| <f1> pygments.formatters.bbcode",shape="record"];
	"pygments.unistring" [label="<f0> SourceModule| <f1> pygments.unistring",shape="record"];
	"pygments.formatter" [label="<f0> SourceModule| <f1> pygments.formatter",shape="record"];
	"pygments.lexer" [label="<f0> SourceModule| <f1> pygments.lexer",shape="record"];
	"pygments.regexopt" [label="<f0> SourceModule| <f1> pygments.regexopt",shape="record"];
	"pygments.filters" [label="<f0> Package| <f1> pygments.filters",shape="record"];
	"pygments.filter" [label="<f0> SourceModule| <f1> pygments.filter",shape="record"];
	"numpy" [label="<f0> Package| <f1> numpy",shape="record"];
	"numpy._core._multiarray_tests" [label="<f0> Extension| <f1> numpy._core._multiarray_tests",shape="record"];
	"numpy.byte_bounds" [label="<f0> MissingModule| <f1> numpy.byte_bounds",shape="record"];
	"numpy.strings" [label="<f0> Package| <f1> numpy.strings",shape="record"];
	"numpy._core.strings" [label="<f0> SourceModule| <f1> numpy._core.strings",shape="record"];
	"numpy.core" [label="<f0> Package| <f1> numpy.core",shape="record"];
	"numpy.core._utils" [label="<f0> SourceModule| <f1> numpy.core._utils",shape="record"];
	"numpy.char" [label="<f0> Package| <f1> numpy.char",shape="record"];
	"numpy._core.defchararray" [label="<f0> SourceModule| <f1> numpy._core.defchararray",shape="record"];
	"numpy.rec" [label="<f0> Package| <f1> numpy.rec",shape="record"];
	"numpy.f2py" [label="<f0> Package| <f1> numpy.f2py",shape="record"];
	"numpy.f2py.diagnose" [label="<f0> SourceModule| <f1> numpy.f2py.diagnose",shape="record"];
	"'numpy_distutils.cpuinfo'" [label="<f0> MissingModule| <f1> 'numpy_distutils.cpuinfo'",shape="record"];
	"'numpy_distutils.fcompiler'" [label="<f0> MissingModule| <f1> 'numpy_distutils.fcompiler'",shape="record"];
	"'numpy_distutils.command'" [label="<f0> MissingModule| <f1> 'numpy_distutils.command'",shape="record"];
	"numpy_distutils" [label="<f0> MissingModule| <f1> numpy_distutils",shape="record"];
	"numpy.f2py.f2py2e" [label="<f0> SourceModule| <f1> numpy.f2py.f2py2e",shape="record"];
	"numpy.f2py._backends" [label="<f0> Package| <f1> numpy.f2py._backends",shape="record"];
	"numpy.f2py._backends._distutils" [label="<f0> SourceModule| <f1> numpy.f2py._backends._distutils",shape="record"];
	"numpy.f2py._backends._backend" [label="<f0> SourceModule| <f1> numpy.f2py._backends._backend",shape="record"];
	"numpy.f2py._backends._meson" [label="<f0> SourceModule| <f1> numpy.f2py._backends._meson",shape="record"];
	"numpy.f2py.auxfuncs" [label="<f0> SourceModule| <f1> numpy.f2py.auxfuncs",shape="record"];
	"numpy.f2py.f90mod_rules" [label="<f0> SourceModule| <f1> numpy.f2py.f90mod_rules",shape="record"];
	"numpy.f2py.rules" [label="<f0> SourceModule| <f1> numpy.f2py.rules",shape="record"];
	"numpy.f2py.use_rules" [label="<f0> SourceModule| <f1> numpy.f2py.use_rules",shape="record"];
	"numpy.f2py.common_rules" [label="<f0> SourceModule| <f1> numpy.f2py.common_rules",shape="record"];
	"numpy.f2py.func2subr" [label="<f0> SourceModule| <f1> numpy.f2py.func2subr",shape="record"];
	"numpy.f2py._isocbind" [label="<f0> SourceModule| <f1> numpy.f2py._isocbind",shape="record"];
	"numpy.f2py.crackfortran" [label="<f0> SourceModule| <f1> numpy.f2py.crackfortran",shape="record"];
	"fileinput" [label="<f0> SourceModule| <f1> fileinput",shape="record"];
	"numpy.f2py.symbolic" [label="<f0> SourceModule| <f1> numpy.f2py.symbolic",shape="record"];
	"numpy.f2py.cb_rules" [label="<f0> SourceModule| <f1> numpy.f2py.cb_rules",shape="record"];
	"numpy.f2py.capi_maps" [label="<f0> SourceModule| <f1> numpy.f2py.capi_maps",shape="record"];
	"numpy.f2py.cfuncs" [label="<f0> SourceModule| <f1> numpy.f2py.cfuncs",shape="record"];
	"numpy.f2py.__version__" [label="<f0> SourceModule| <f1> numpy.f2py.__version__",shape="record"];
	"numpy.matlib" [label="<f0> SourceModule| <f1> numpy.matlib",shape="record"];
	"numpy.ctypeslib" [label="<f0> SourceModule| <f1> numpy.ctypeslib",shape="record"];
	"numpy.polynomial" [label="<f0> Package| <f1> numpy.polynomial",shape="record"];
	"numpy.polynomial._polybase" [label="<f0> SourceModule| <f1> numpy.polynomial._polybase",shape="record"];
	"numpy.polynomial.laguerre" [label="<f0> SourceModule| <f1> numpy.polynomial.laguerre",shape="record"];
	"numpy.polynomial.hermite_e" [label="<f0> SourceModule| <f1> numpy.polynomial.hermite_e",shape="record"];
	"numpy.polynomial.hermite" [label="<f0> SourceModule| <f1> numpy.polynomial.hermite",shape="record"];
	"numpy.polynomial.legendre" [label="<f0> SourceModule| <f1> numpy.polynomial.legendre",shape="record"];
	"numpy.polynomial.chebyshev" [label="<f0> SourceModule| <f1> numpy.polynomial.chebyshev",shape="record"];
	"numpy.polynomial.polynomial" [label="<f0> SourceModule| <f1> numpy.polynomial.polynomial",shape="record"];
	"numpy.polynomial.polyutils" [label="<f0> SourceModule| <f1> numpy.polynomial.polyutils",shape="record"];
	"numpy.random" [label="<f0> Package| <f1> numpy.random",shape="record"];
	"numpy.random.mtrand" [label="<f0> Extension| <f1> numpy.random.mtrand",shape="record"];
	"numpy.random._sfc64" [label="<f0> Extension| <f1> numpy.random._sfc64",shape="record"];
	"numpy.random._philox" [label="<f0> Extension| <f1> numpy.random._philox",shape="record"];
	"numpy.random._pcg64" [label="<f0> Extension| <f1> numpy.random._pcg64",shape="record"];
	"numpy.random._mt19937" [label="<f0> Extension| <f1> numpy.random._mt19937",shape="record"];
	"numpy.random.bit_generator" [label="<f0> Extension| <f1> numpy.random.bit_generator",shape="record"];
	"numpy.random._generator" [label="<f0> Extension| <f1> numpy.random._generator",shape="record"];
	"numpy.random._bounded_integers" [label="<f0> Extension| <f1> numpy.random._bounded_integers",shape="record"];
	"numpy.random._common" [label="<f0> Extension| <f1> numpy.random._common",shape="record"];
	"numpy.random._pickle" [label="<f0> SourceModule| <f1> numpy.random._pickle",shape="record"];
	"numpy.dtypes" [label="<f0> SourceModule| <f1> numpy.dtypes",shape="record"];
	"numpy.fft" [label="<f0> Package| <f1> numpy.fft",shape="record"];
	"numpy.fft.helper" [label="<f0> SourceModule| <f1> numpy.fft.helper",shape="record"];
	"numpy.fft._helper" [label="<f0> SourceModule| <f1> numpy.fft._helper",shape="record"];
	"numpy.fft._pocketfft" [label="<f0> SourceModule| <f1> numpy.fft._pocketfft",shape="record"];
	"numpy.fft._pocketfft_umath" [label="<f0> Extension| <f1> numpy.fft._pocketfft_umath",shape="record"];
	"numpy.__config__" [label="<f0> SourceModule| <f1> numpy.__config__",shape="record"];
	"yaml" [label="<f0> Package| <f1> yaml",shape="record"];
	"yaml.cyaml" [label="<f0> SourceModule| <f1> yaml.cyaml",shape="record"];
	"yaml.resolver" [label="<f0> SourceModule| <f1> yaml.resolver",shape="record"];
	"yaml.representer" [label="<f0> SourceModule| <f1> yaml.representer",shape="record"];
	"yaml.serializer" [label="<f0> SourceModule| <f1> yaml.serializer",shape="record"];
	"yaml.constructor" [label="<f0> SourceModule| <f1> yaml.constructor",shape="record"];
	"yaml._yaml" [label="<f0> Extension| <f1> yaml._yaml",shape="record"];
	"yaml.dumper" [label="<f0> SourceModule| <f1> yaml.dumper",shape="record"];
	"yaml.emitter" [label="<f0> SourceModule| <f1> yaml.emitter",shape="record"];
	"yaml.loader" [label="<f0> SourceModule| <f1> yaml.loader",shape="record"];
	"yaml.composer" [label="<f0> SourceModule| <f1> yaml.composer",shape="record"];
	"yaml.parser" [label="<f0> SourceModule| <f1> yaml.parser",shape="record"];
	"yaml.scanner" [label="<f0> SourceModule| <f1> yaml.scanner",shape="record"];
	"yaml.reader" [label="<f0> SourceModule| <f1> yaml.reader",shape="record"];
	"yaml.nodes" [label="<f0> SourceModule| <f1> yaml.nodes",shape="record"];
	"yaml.events" [label="<f0> SourceModule| <f1> yaml.events",shape="record"];
	"yaml.tokens" [label="<f0> SourceModule| <f1> yaml.tokens",shape="record"];
	"yaml.error" [label="<f0> SourceModule| <f1> yaml.error",shape="record"];
	"numpy._distributor_init" [label="<f0> SourceModule| <f1> numpy._distributor_init",shape="record"];
	"numpy._distributor_init_local" [label="<f0> MissingModule| <f1> numpy._distributor_init_local",shape="record"];
	"numpy._expired_attrs_2_0" [label="<f0> SourceModule| <f1> numpy._expired_attrs_2_0",shape="record"];
	"wave" [label="<f0> SourceModule| <f1> wave",shape="record"];
	"audioop" [label="<f0> Extension| <f1> audioop",shape="record"];
	"chunk" [label="<f0> SourceModule| <f1> chunk",shape="record"];
	"IPython.core.display" [label="<f0> SourceModule| <f1> IPython.core.display",shape="record"];
	"matplotlib_inline.backend_inline" [label="<f0> SourceModule| <f1> matplotlib_inline.backend_inline",shape="record"];
	"matplotlib_inline.config" [label="<f0> SourceModule| <f1> matplotlib_inline.config",shape="record"];
	"traitlets.config.configurable" [label="<f0> SourceModule| <f1> traitlets.config.configurable",shape="record"];
	"traitlets.config" [label="<f0> Package| <f1> traitlets.config",shape="record"];
	"traitlets.config.application" [label="<f0> SourceModule| <f1> traitlets.config.application",shape="record"];
	"traitlets.utils.nested_update" [label="<f0> SourceModule| <f1> traitlets.utils.nested_update",shape="record"];
	"logging.config" [label="<f0> SourceModule| <f1> logging.config",shape="record"];
	"traitlets.config.argcomplete_config" [label="<f0> SourceModule| <f1> traitlets.config.argcomplete_config",shape="record"];
	"argcomplete" [label="<f0> MissingModule| <f1> argcomplete",shape="record"];
	"traitlets.config.Application" [label="<f0> MissingModule| <f1> traitlets.config.Application",shape="record"];
	"traitlets.log" [label="<f0> SourceModule| <f1> traitlets.log",shape="record"];
	"traitlets.config.loader" [label="<f0> SourceModule| <f1> traitlets.config.loader",shape="record"];
	"traitlets.utils.text" [label="<f0> SourceModule| <f1> traitlets.utils.text",shape="record"];
	"IPython.core.pylabtools" [label="<f0> SourceModule| <f1> IPython.core.pylabtools",shape="record"];
	"IPython.utils.decorators" [label="<f0> SourceModule| <f1> IPython.utils.decorators",shape="record"];
	"IPython.utils" [label="<f0> Package| <f1> IPython.utils",shape="record"];
	"IPython.utils.io" [label="<f0> SourceModule| <f1> IPython.utils.io",shape="record"];
	"IPython.utils.capture" [label="<f0> SourceModule| <f1> IPython.utils.capture",shape="record"];
	"IPython.core.displayhook" [label="<f0> SourceModule| <f1> IPython.core.displayhook",shape="record"];
	"IPython.core.displaypub" [label="<f0> SourceModule| <f1> IPython.core.displaypub",shape="record"];
	"IPython.utils._sysinfo" [label="<f0> SourceModule| <f1> IPython.utils._sysinfo",shape="record"];
	"IPython.utils.generics" [label="<f0> SourceModule| <f1> IPython.utils.generics",shape="record"];
	"IPython.core.error" [label="<f0> SourceModule| <f1> IPython.core.error",shape="record"];
	"IPython.utils.tokenutil" [label="<f0> SourceModule| <f1> IPython.utils.tokenutil",shape="record"];
	"IPython.utils.openpy" [label="<f0> SourceModule| <f1> IPython.utils.openpy",shape="record"];
	"IPython.utils.PyColorize" [label="<f0> SourceModule| <f1> IPython.utils.PyColorize",shape="record"];
	"IPython.utils.colorable" [label="<f0> SourceModule| <f1> IPython.utils.colorable",shape="record"];
	"IPython.utils.coloransi" [label="<f0> SourceModule| <f1> IPython.utils.coloransi",shape="record"];
	"IPython.utils.ipstruct" [label="<f0> SourceModule| <f1> IPython.utils.ipstruct",shape="record"];
	"IPython.utils.docs" [label="<f0> SourceModule| <f1> IPython.utils.docs",shape="record"];
	"matplotlib_inline" [label="<f0> Package| <f1> matplotlib_inline",shape="record"];
	"IPython.core.getipython" [label="<f0> SourceModule| <f1> IPython.core.getipython",shape="record"];
	"IPython.core.interactiveshell" [label="<f0> SourceModule| <f1> IPython.core.interactiveshell",shape="record"];
	"nbformat" [label="<f0> Package| <f1> nbformat",shape="record"];
	"nbformat.notebooknode" [label="<f0> SourceModule| <f1> nbformat.notebooknode",shape="record"];
	"nbformat._struct" [label="<f0> SourceModule| <f1> nbformat._struct",shape="record"];
	"nbformat.converter" [label="<f0> SourceModule| <f1> nbformat.converter",shape="record"];
	"nbformat.reader" [label="<f0> SourceModule| <f1> nbformat.reader",shape="record"];
	"nbformat.sentinel" [label="<f0> SourceModule| <f1> nbformat.sentinel",shape="record"];
	"nbformat._version" [label="<f0> SourceModule| <f1> nbformat._version",shape="record"];
	"nbformat.v4" [label="<f0> Package| <f1> nbformat.v4",shape="record"];
	"nbformat.v4.nbjson" [label="<f0> SourceModule| <f1> nbformat.v4.nbjson",shape="record"];
	"nbformat.v4.rwbase" [label="<f0> SourceModule| <f1> nbformat.v4.rwbase",shape="record"];
	"nbformat.v4.nbbase" [label="<f0> SourceModule| <f1> nbformat.v4.nbbase",shape="record"];
	"nbformat.corpus.words" [label="<f0> SourceModule| <f1> nbformat.corpus.words",shape="record"];
	"nbformat.corpus" [label="<f0> Package| <f1> nbformat.corpus",shape="record"];
	"nbformat.v4.convert" [label="<f0> SourceModule| <f1> nbformat.v4.convert",shape="record"];
	"nbformat.validator" [label="<f0> SourceModule| <f1> nbformat.validator",shape="record"];
	"nbformat.warnings" [label="<f0> SourceModule| <f1> nbformat.warnings",shape="record"];
	"nbformat.json_compat" [label="<f0> SourceModule| <f1> nbformat.json_compat",shape="record"];
	"jsonschema.exceptions" [label="<f0> SourceModule| <f1> jsonschema.exceptions",shape="record"];
	"jsonschema._types" [label="<f0> SourceModule| <f1> jsonschema._types",shape="record"];
	"rpds.HashTrieMap" [label="<f0> MissingModule| <f1> rpds.HashTrieMap",shape="record"];
	"rpds" [label="<f0> Package| <f1> rpds",shape="record"];
	"rpds.List" [label="<f0> MissingModule| <f1> rpds.List",shape="record"];
	"rpds.HashTrieSet" [label="<f0> MissingModule| <f1> rpds.HashTrieSet",shape="record"];
	"rpds.rpds" [label="<f0> Extension| <f1> rpds.rpds",shape="record"];
	"jsonschema._utils" [label="<f0> SourceModule| <f1> jsonschema._utils",shape="record"];
	"referencing.exceptions" [label="<f0> SourceModule| <f1> referencing.exceptions",shape="record"];
	"referencing.typing" [label="<f0> SourceModule| <f1> referencing.typing",shape="record"];
	"referencing._core" [label="<f0> SourceModule| <f1> referencing._core",shape="record"];
	"referencing.jsonschema" [label="<f0> SourceModule| <f1> referencing.jsonschema",shape="record"];
	"referencing" [label="<f0> Package| <f1> referencing",shape="record"];
	"referencing._attrs" [label="<f0> SourceModule| <f1> referencing._attrs",shape="record"];
	"attrs" [label="<f0> Package| <f1> attrs",shape="record"];
	"attrs.validators" [label="<f0> SourceModule| <f1> attrs.validators",shape="record"];
	"attr.validators" [label="<f0> SourceModule| <f1> attr.validators",shape="record"];
	"attr.exceptions" [label="<f0> SourceModule| <f1> attr.exceptions",shape="record"];
	"attr.converters" [label="<f0> SourceModule| <f1> attr.converters",shape="record"];
	"attr._compat" [label="<f0> SourceModule| <f1> attr._compat",shape="record"];
	"attr._make" [label="<f0> SourceModule| <f1> attr._make",shape="record"];
	"attr.setters" [label="<f0> SourceModule| <f1> attr.setters",shape="record"];
	"attr._config" [label="<f0> SourceModule| <f1> attr._config",shape="record"];
	"attrs.setters" [label="<f0> SourceModule| <f1> attrs.setters",shape="record"];
	"attrs.filters" [label="<f0> SourceModule| <f1> attrs.filters",shape="record"];
	"attr.filters" [label="<f0> SourceModule| <f1> attr.filters",shape="record"];
	"attrs.exceptions" [label="<f0> SourceModule| <f1> attrs.exceptions",shape="record"];
	"attrs.converters" [label="<f0> SourceModule| <f1> attrs.converters",shape="record"];
	"attr._next_gen" [label="<f0> SourceModule| <f1> attr._next_gen",shape="record"];
	"attr._funcs" [label="<f0> SourceModule| <f1> attr._funcs",shape="record"];
	"attr" [label="<f0> Package| <f1> attr",shape="record"];
	"attr._version_info" [label="<f0> SourceModule| <f1> attr._version_info",shape="record"];
	"attr._cmp" [label="<f0> SourceModule| <f1> attr._cmp",shape="record"];
	"jsonschema" [label="<f0> Package| <f1> jsonschema",shape="record"];
	"jsonschema.protocols" [label="<f0> SourceModule| <f1> jsonschema.protocols",shape="record"];
	"jsonschema.validators" [label="<f0> SourceModule| <f1> jsonschema.validators",shape="record"];
	"jsonschema_specifications" [label="<f0> Package| <f1> jsonschema_specifications",shape="record"];
	"jsonschema_specifications._core" [label="<f0> SourceModule| <f1> jsonschema_specifications._core",shape="record"];
	"importlib_resources" [label="<f0> MissingModule| <f1> importlib_resources",shape="record"];
	"jsonschema._typing" [label="<f0> SourceModule| <f1> jsonschema._typing",shape="record"];
	"jsonschema._legacy_keywords" [label="<f0> SourceModule| <f1> jsonschema._legacy_keywords",shape="record"];
	"jsonschema._keywords" [label="<f0> SourceModule| <f1> jsonschema._keywords",shape="record"];
	"jsonschema._format" [label="<f0> SourceModule| <f1> jsonschema._format",shape="record"];
	"isoduration" [label="<f0> Package| <f1> isoduration",shape="record"];
	"isoduration.parser.exceptions" [label="<f0> SourceModule| <f1> isoduration.parser.exceptions",shape="record"];
	"isoduration.parser" [label="<f0> Package| <f1> isoduration.parser",shape="record"];
	"isoduration.types" [label="<f0> SourceModule| <f1> isoduration.types",shape="record"];
	"isoduration.operations" [label="<f0> Package| <f1> isoduration.operations",shape="record"];
	"isoduration.operations.util" [label="<f0> SourceModule| <f1> isoduration.operations.util",shape="record"];
	"isoduration.parser.util" [label="<f0> SourceModule| <f1> isoduration.parser.util",shape="record"];
	"isoduration.constants" [label="<f0> SourceModule| <f1> isoduration.constants",shape="record"];
	"isoduration.parser.parsing" [label="<f0> SourceModule| <f1> isoduration.parser.parsing",shape="record"];
	"arrow" [label="<f0> Package| <f1> arrow",shape="record"];
	"arrow.factory" [label="<f0> SourceModule| <f1> arrow.factory",shape="record"];
	"arrow.util" [label="<f0> SourceModule| <f1> arrow.util",shape="record"];
	"dateutil.rrule" [label="<f0> SourceModule| <f1> dateutil.rrule",shape="record"];
	"dateutil.parser" [label="<f0> Package| <f1> dateutil.parser",shape="record"];
	"dateutil.parser.isoparser" [label="<f0> SourceModule| <f1> dateutil.parser.isoparser",shape="record"];
	"dateutil.parser._parser" [label="<f0> SourceModule| <f1> dateutil.parser._parser",shape="record"];
	"dateutil.relativedelta" [label="<f0> SourceModule| <f1> dateutil.relativedelta",shape="record"];
	"dateutil.easter" [label="<f0> SourceModule| <f1> dateutil.easter",shape="record"];
	"dateutil._common" [label="<f0> SourceModule| <f1> dateutil._common",shape="record"];
	"six.moves.range" [label="<f0> MissingModule| <f1> six.moves.range",shape="record"];
	"six.moves._thread" [label="<f0> AliasNode| <f1> six.moves._thread",shape="record"];
	"six.moves" [label="<f0> RuntimePackage| <f1> six.moves",shape="record"];
	"six.moves.winreg" [label="<f0> MissingModule| <f1> six.moves.winreg",shape="record"];
	"six" [label="<f0> SourceModule| <f1> six",shape="record"];
	"arrow.constants" [label="<f0> SourceModule| <f1> arrow.constants",shape="record"];
	"dateutil.tz" [label="<f0> Package| <f1> dateutil.tz",shape="record"];
	"dateutil.tz.tz" [label="<f0> SourceModule| <f1> dateutil.tz.tz",shape="record"];
	"dateutil.zoneinfo" [label="<f0> Package| <f1> dateutil.zoneinfo",shape="record"];
	"dateutil.tz.win" [label="<f0> SourceModule| <f1> dateutil.tz.win",shape="record"];
	"ctypes.wintypes" [label="<f0> SourceModule| <f1> ctypes.wintypes",shape="record"];
	"dateutil.tz._factories" [label="<f0> SourceModule| <f1> dateutil.tz._factories",shape="record"];
	"dateutil.tz._common" [label="<f0> SourceModule| <f1> dateutil.tz._common",shape="record"];
	"dateutil.tz.tzfile" [label="<f0> MissingModule| <f1> dateutil.tz.tzfile",shape="record"];
	"dateutil" [label="<f0> Package| <f1> dateutil",shape="record"];
	"dateutil._version" [label="<f0> SourceModule| <f1> dateutil._version",shape="record"];
	"arrow.arrow" [label="<f0> SourceModule| <f1> arrow.arrow",shape="record"];
	"arrow.api" [label="<f0> SourceModule| <f1> arrow.api",shape="record"];
	"arrow.parser" [label="<f0> SourceModule| <f1> arrow.parser",shape="record"];
	"arrow.formatter" [label="<f0> SourceModule| <f1> arrow.formatter",shape="record"];
	"arrow.locales" [label="<f0> SourceModule| <f1> arrow.locales",shape="record"];
	"arrow._version" [label="<f0> SourceModule| <f1> arrow._version",shape="record"];
	"isoduration.formatter.exceptions" [label="<f0> SourceModule| <f1> isoduration.formatter.exceptions",shape="record"];
	"isoduration.formatter" [label="<f0> Package| <f1> isoduration.formatter",shape="record"];
	"isoduration.formatter.formatting" [label="<f0> SourceModule| <f1> isoduration.formatter.formatting",shape="record"];
	"isoduration.formatter.checking" [label="<f0> SourceModule| <f1> isoduration.formatter.checking",shape="record"];
	"uri_template" [label="<f0> Package| <f1> uri_template",shape="record"];
	"uri_template.variable" [label="<f0> SourceModule| <f1> uri_template.variable",shape="record"];
	"uri_template.charset" [label="<f0> SourceModule| <f1> uri_template.charset",shape="record"];
	"uri_template.uritemplate" [label="<f0> SourceModule| <f1> uri_template.uritemplate",shape="record"];
	"uri_template.expansions" [label="<f0> SourceModule| <f1> uri_template.expansions",shape="record"];
	"jsonpointer" [label="<f0> SourceModule| <f1> jsonpointer",shape="record"];
	"webcolors" [label="<f0> Package| <f1> webcolors",shape="record"];
	"webcolors._types" [label="<f0> SourceModule| <f1> webcolors._types",shape="record"];
	"webcolors._normalization" [label="<f0> SourceModule| <f1> webcolors._normalization",shape="record"];
	"webcolors._html5" [label="<f0> SourceModule| <f1> webcolors._html5",shape="record"];
	"webcolors._definitions" [label="<f0> SourceModule| <f1> webcolors._definitions",shape="record"];
	"webcolors._conversion" [label="<f0> SourceModule| <f1> webcolors._conversion",shape="record"];
	"rfc3339_validator" [label="<f0> SourceModule| <f1> rfc3339_validator",shape="record"];
	"rfc3986_validator" [label="<f0> SourceModule| <f1> rfc3986_validator",shape="record"];
	"rfc3987" [label="<f0> MissingModule| <f1> rfc3987",shape="record"];
	"fqdn" [label="<f0> Package| <f1> fqdn",shape="record"];
	"fqdn._compat" [label="<f0> SourceModule| <f1> fqdn._compat",shape="record"];
	"cached_property" [label="<f0> MissingModule| <f1> cached_property",shape="record"];
	"fastjsonschema" [label="<f0> Package| <f1> fastjsonschema",shape="record"];
	"fastjsonschema.version" [label="<f0> SourceModule| <f1> fastjsonschema.version",shape="record"];
	"fastjsonschema.ref_resolver" [label="<f0> SourceModule| <f1> fastjsonschema.ref_resolver",shape="record"];
	"fastjsonschema.exceptions" [label="<f0> SourceModule| <f1> fastjsonschema.exceptions",shape="record"];
	"fastjsonschema.draft07" [label="<f0> SourceModule| <f1> fastjsonschema.draft07",shape="record"];
	"fastjsonschema.draft06" [label="<f0> SourceModule| <f1> fastjsonschema.draft06",shape="record"];
	"fastjsonschema.generator" [label="<f0> SourceModule| <f1> fastjsonschema.generator",shape="record"];
	"fastjsonschema.indent" [label="<f0> SourceModule| <f1> fastjsonschema.indent",shape="record"];
	"fastjsonschema.draft04" [label="<f0> SourceModule| <f1> fastjsonschema.draft04",shape="record"];
	"nbformat._imports" [label="<f0> SourceModule| <f1> nbformat._imports",shape="record"];
	"nbformat.v3" [label="<f0> Package| <f1> nbformat.v3",shape="record"];
	"nbformat.v3.nbpy" [label="<f0> SourceModule| <f1> nbformat.v3.nbpy",shape="record"];
	"nbformat.v3.rwbase" [label="<f0> SourceModule| <f1> nbformat.v3.rwbase",shape="record"];
	"nbformat.v3.nbjson" [label="<f0> SourceModule| <f1> nbformat.v3.nbjson",shape="record"];
	"nbformat.v3.nbbase" [label="<f0> SourceModule| <f1> nbformat.v3.nbbase",shape="record"];
	"nbformat.v3.convert" [label="<f0> SourceModule| <f1> nbformat.v3.convert",shape="record"];
	"nbformat.v2" [label="<f0> Package| <f1> nbformat.v2",shape="record"];
	"nbformat.v2.nbxml" [label="<f0> SourceModule| <f1> nbformat.v2.nbxml",shape="record"];
	"nbformat.v2.nbpy" [label="<f0> SourceModule| <f1> nbformat.v2.nbpy",shape="record"];
	"nbformat.v2.rwbase" [label="<f0> SourceModule| <f1> nbformat.v2.rwbase",shape="record"];
	"nbformat.v2.nbjson" [label="<f0> SourceModule| <f1> nbformat.v2.nbjson",shape="record"];
	"nbformat.v2.nbbase" [label="<f0> SourceModule| <f1> nbformat.v2.nbbase",shape="record"];
	"nbformat.v2.convert" [label="<f0> SourceModule| <f1> nbformat.v2.convert",shape="record"];
	"nbformat.v1" [label="<f0> Package| <f1> nbformat.v1",shape="record"];
	"nbformat.v1.nbjson" [label="<f0> SourceModule| <f1> nbformat.v1.nbjson",shape="record"];
	"nbformat.v1.rwbase" [label="<f0> SourceModule| <f1> nbformat.v1.rwbase",shape="record"];
	"nbformat.v1.nbbase" [label="<f0> SourceModule| <f1> nbformat.v1.nbbase",shape="record"];
	"nbformat.v1.convert" [label="<f0> SourceModule| <f1> nbformat.v1.convert",shape="record"];
	"IPython.utils._process_win32" [label="<f0> SourceModule| <f1> IPython.utils._process_win32",shape="record"];
	"IPython.utils.encoding" [label="<f0> SourceModule| <f1> IPython.utils.encoding",shape="record"];
	"IPython.utils._process_common" [label="<f0> SourceModule| <f1> IPython.utils._process_common",shape="record"];
	"IPython.core.magics" [label="<f0> Package| <f1> IPython.core.magics",shape="record"];
	"IPython.core.magics.script" [label="<f0> SourceModule| <f1> IPython.core.magics.script",shape="record"];
	"IPython.core.magic_arguments" [label="<f0> SourceModule| <f1> IPython.core.magic_arguments",shape="record"];
	"IPython.core.magics.pylab" [label="<f0> SourceModule| <f1> IPython.core.magics.pylab",shape="record"];
	"IPython.core.magics.packaging" [label="<f0> SourceModule| <f1> IPython.core.magics.packaging",shape="record"];
	"IPython.core.magics.osm" [label="<f0> SourceModule| <f1> IPython.core.magics.osm",shape="record"];
	"IPython.utils.terminal" [label="<f0> SourceModule| <f1> IPython.utils.terminal",shape="record"];
	"IPython.core.magics.namespace" [label="<f0> SourceModule| <f1> IPython.core.magics.namespace",shape="record"];
	"IPython.core.magics.logging" [label="<f0> SourceModule| <f1> IPython.core.magics.logging",shape="record"];
	"IPython.core.magics.history" [label="<f0> SourceModule| <f1> IPython.core.magics.history",shape="record"];
	"IPython.core.magics.extension" [label="<f0> SourceModule| <f1> IPython.core.magics.extension",shape="record"];
	"IPython.core.magics.execution" [label="<f0> SourceModule| <f1> IPython.core.magics.execution",shape="record"];
	"IPython.core.magics.ast_mod" [label="<f0> SourceModule| <f1> IPython.core.magics.ast_mod",shape="record"];
	"IPython.utils.timing" [label="<f0> SourceModule| <f1> IPython.utils.timing",shape="record"];
	"resource" [label="<f0> Extension| <f1> resource",shape="record"];
	"IPython.utils.module_paths" [label="<f0> SourceModule| <f1> IPython.utils.module_paths",shape="record"];
	"IPython.utils.contexts" [label="<f0> SourceModule| <f1> IPython.utils.contexts",shape="record"];
	"timeit" [label="<f0> SourceModule| <f1> timeit",shape="record"];
	"pstats" [label="<f0> SourceModule| <f1> pstats",shape="record"];
	"cProfile" [label="<f0> SourceModule| <f1> cProfile",shape="record"];
	"profile" [label="<f0> SourceModule| <f1> profile",shape="record"];
	"_lsprof" [label="<f0> Extension| <f1> _lsprof",shape="record"];
	"IPython.core.magics.display" [label="<f0> SourceModule| <f1> IPython.core.magics.display",shape="record"];
	"IPython.core.magics.config" [label="<f0> SourceModule| <f1> IPython.core.magics.config",shape="record"];
	"IPython.core.magics.code" [label="<f0> SourceModule| <f1> IPython.core.magics.code",shape="record"];
	"IPython.core.release" [label="<f0> SourceModule| <f1> IPython.core.release",shape="record"];
	"IPython.core.magics.basic" [label="<f0> SourceModule| <f1> IPython.core.magics.basic",shape="record"];
	"IPython.core.magics.auto" [label="<f0> SourceModule| <f1> IPython.core.magics.auto",shape="record"];
	"IPython.core.completerlib" [label="<f0> SourceModule| <f1> IPython.core.completerlib",shape="record"];
	"IPython.core.completer" [label="<f0> SourceModule| <f1> IPython.core.completer",shape="record"];
	"jedi.api.classes" [label="<f0> SourceModule| <f1> jedi.api.classes",shape="record"];
	"jedi.api.completion_cache" [label="<f0> SourceModule| <f1> jedi.api.completion_cache",shape="record"];
	"jedi.api" [label="<f0> Package| <f1> jedi.api",shape="record"];
	"jedi.inference.gradual.utils" [label="<f0> SourceModule| <f1> jedi.inference.gradual.utils",shape="record"];
	"jedi.inference.gradual" [label="<f0> Package| <f1> jedi.inference.gradual",shape="record"];
	"jedi.inference.gradual.typeshed" [label="<f0> SourceModule| <f1> jedi.inference.gradual.typeshed",shape="record"];
	"jedi.inference.value.iterable" [label="<f0> SourceModule| <f1> jedi.inference.value.iterable",shape="record"];
	"jedi.inference.gradual.base" [label="<f0> SourceModule| <f1> jedi.inference.gradual.base",shape="record"];
	"jedi.inference.gradual.annotation" [label="<f0> SourceModule| <f1> jedi.inference.gradual.annotation",shape="record"];
	"jedi.inference.param" [label="<f0> SourceModule| <f1> jedi.inference.param",shape="record"];
	"jedi.inference.gradual.type_var" [label="<f0> SourceModule| <f1> jedi.inference.gradual.type_var",shape="record"];
	"jedi.inference.gradual.typing" [label="<f0> SourceModule| <f1> jedi.inference.gradual.typing",shape="record"];
	"jedi.inference.compiled.value" [label="<f0> SourceModule| <f1> jedi.inference.compiled.value",shape="record"];
	"jedi.inference.docstrings" [label="<f0> SourceModule| <f1> jedi.inference.docstrings",shape="record"];
	"jedi.inference.docstring_utils" [label="<f0> SourceModule| <f1> jedi.inference.docstring_utils",shape="record"];
	"numpydoc" [label="<f0> MissingModule| <f1> numpydoc",shape="record"];
	"jedi.inference.signature" [label="<f0> SourceModule| <f1> jedi.inference.signature",shape="record"];
	"jedi.inference.star_args" [label="<f0> SourceModule| <f1> jedi.inference.star_args",shape="record"];
	"jedi.inference.compiled.access" [label="<f0> SourceModule| <f1> jedi.inference.compiled.access",shape="record"];
	"jedi.inference.compiled.getattr_static" [label="<f0> SourceModule| <f1> jedi.inference.compiled.getattr_static",shape="record"];
	"jedi.inference.value.klass" [label="<f0> SourceModule| <f1> jedi.inference.value.klass",shape="record"];
	"jedi.plugins" [label="<f0> Package| <f1> jedi.plugins",shape="record"];
	"jedi.plugins.registry" [label="<f0> SourceModule| <f1> jedi.plugins.registry",shape="record"];
	"jedi.plugins.django" [label="<f0> SourceModule| <f1> jedi.plugins.django",shape="record"];
	"jedi.inference.value.instance" [label="<f0> SourceModule| <f1> jedi.inference.value.instance",shape="record"];
	"jedi.plugins.pytest" [label="<f0> SourceModule| <f1> jedi.plugins.pytest",shape="record"];
	"jedi.plugins.flask" [label="<f0> SourceModule| <f1> jedi.plugins.flask",shape="record"];
	"jedi.plugins.stdlib" [label="<f0> SourceModule| <f1> jedi.plugins.stdlib",shape="record"];
	"jedi.inference.value.function" [label="<f0> SourceModule| <f1> jedi.inference.value.function",shape="record"];
	"jedi.inference.parser_cache" [label="<f0> SourceModule| <f1> jedi.inference.parser_cache",shape="record"];
	"jedi.inference.flow_analysis" [label="<f0> SourceModule| <f1> jedi.inference.flow_analysis",shape="record"];
	"jedi.inference.recursion" [label="<f0> SourceModule| <f1> jedi.inference.recursion",shape="record"];
	"jedi.inference.gradual.generics" [label="<f0> SourceModule| <f1> jedi.inference.gradual.generics",shape="record"];
	"jedi.inference.value.dynamic_arrays" [label="<f0> SourceModule| <f1> jedi.inference.value.dynamic_arrays",shape="record"];
	"jedi.inference.context" [label="<f0> SourceModule| <f1> jedi.inference.context",shape="record"];
	"jedi.inference.finder" [label="<f0> SourceModule| <f1> jedi.inference.finder",shape="record"];
	"jedi.inference.filters" [label="<f0> SourceModule| <f1> jedi.inference.filters",shape="record"];
	"jedi.inference.cache" [label="<f0> SourceModule| <f1> jedi.inference.cache",shape="record"];
	"jedi.inference.lazy_value" [label="<f0> SourceModule| <f1> jedi.inference.lazy_value",shape="record"];
	"jedi.common" [label="<f0> SourceModule| <f1> jedi.common",shape="record"];
	"jedi.inference.analysis" [label="<f0> SourceModule| <f1> jedi.inference.analysis",shape="record"];
	"jedi.inference.compiled" [label="<f0> Package| <f1> jedi.inference.compiled",shape="record"];
	"jedi.inference.value" [label="<f0> Package| <f1> jedi.inference.value",shape="record"];
	"jedi.inference.value.module" [label="<f0> SourceModule| <f1> jedi.inference.value.module",shape="record"];
	"jedi.inference.syntax_tree" [label="<f0> SourceModule| <f1> jedi.inference.syntax_tree",shape="record"];
	"jedi.inference.value.decorator" [label="<f0> SourceModule| <f1> jedi.inference.value.decorator",shape="record"];
	"jedi.inference.sys_path" [label="<f0> SourceModule| <f1> jedi.inference.sys_path",shape="record"];
	"jedi.inference.helpers" [label="<f0> SourceModule| <f1> jedi.inference.helpers",shape="record"];
	"jedi.inference.arguments" [label="<f0> SourceModule| <f1> jedi.inference.arguments",shape="record"];
	"jedi.inference.references" [label="<f0> SourceModule| <f1> jedi.inference.references",shape="record"];
	"jedi.inference.imports" [label="<f0> SourceModule| <f1> jedi.inference.imports",shape="record"];
	"jedi.inference.value.namespace" [label="<f0> SourceModule| <f1> jedi.inference.value.namespace",shape="record"];
	"jedi.inference.compiled.subprocess.functions" [label="<f0> SourceModule| <f1> jedi.inference.compiled.subprocess.functions",shape="record"];
	"jedi.inference.compiled.subprocess" [label="<f0> Package| <f1> jedi.inference.compiled.subprocess",shape="record"];
	"jedi.api.exceptions" [label="<f0> SourceModule| <f1> jedi.api.exceptions",shape="record"];
	"jedi._compatibility" [label="<f0> SourceModule| <f1> jedi._compatibility",shape="record"];
	"jedi.inference" [label="<f0> Package| <f1> jedi.inference",shape="record"];
	"jedi.api.refactoring.extract" [label="<f0> SourceModule| <f1> jedi.api.refactoring.extract",shape="record"];
	"jedi.api.refactoring" [label="<f0> Package| <f1> jedi.api.refactoring",shape="record"];
	"jedi.api.errors" [label="<f0> SourceModule| <f1> jedi.api.errors",shape="record"];
	"jedi.api.project" [label="<f0> SourceModule| <f1> jedi.api.project",shape="record"];
	"jedi.api.environment" [label="<f0> SourceModule| <f1> jedi.api.environment",shape="record"];
	"filecmp" [label="<f0> SourceModule| <f1> filecmp",shape="record"];
	"jedi.api.completion" [label="<f0> SourceModule| <f1> jedi.api.completion",shape="record"];
	"jedi.api.file_name" [label="<f0> SourceModule| <f1> jedi.api.file_name",shape="record"];
	"jedi.api.strings" [label="<f0> SourceModule| <f1> jedi.api.strings",shape="record"];
	"parso.python.token" [label="<f0> SourceModule| <f1> parso.python.token",shape="record"];
	"jedi.api.interpreter" [label="<f0> SourceModule| <f1> jedi.api.interpreter",shape="record"];
	"jedi.file_io" [label="<f0> SourceModule| <f1> jedi.file_io",shape="record"];
	"parso.file_io" [label="<f0> SourceModule| <f1> parso.file_io",shape="record"];
	"jedi.parser_utils" [label="<f0> SourceModule| <f1> jedi.parser_utils",shape="record"];
	"parso.cache" [label="<f0> SourceModule| <f1> parso.cache",shape="record"];
	"parso.python.tree" [label="<f0> SourceModule| <f1> parso.python.tree",shape="record"];
	"parso.utils" [label="<f0> SourceModule| <f1> parso.utils",shape="record"];
	"parso.python.prefix" [label="<f0> SourceModule| <f1> parso.python.prefix",shape="record"];
	"parso.python.tokenize" [label="<f0> SourceModule| <f1> parso.python.tokenize",shape="record"];
	"parso.python" [label="<f0> Package| <f1> parso.python",shape="record"];
	"parso.python.pep8" [label="<f0> SourceModule| <f1> parso.python.pep8",shape="record"];
	"parso.normalizer" [label="<f0> SourceModule| <f1> parso.normalizer",shape="record"];
	"parso.python.errors" [label="<f0> SourceModule| <f1> parso.python.errors",shape="record"];
	"parso" [label="<f0> Package| <f1> parso",shape="record"];
	"parso.grammar" [label="<f0> SourceModule| <f1> parso.grammar",shape="record"];
	"parso.python.parser" [label="<f0> SourceModule| <f1> parso.python.parser",shape="record"];
	"parso.python.diff" [label="<f0> SourceModule| <f1> parso.python.diff",shape="record"];
	"parso.pgen2" [label="<f0> Package| <f1> parso.pgen2",shape="record"];
	"parso.pgen2.generator" [label="<f0> SourceModule| <f1> parso.pgen2.generator",shape="record"];
	"parso.pgen2.grammar_parser" [label="<f0> SourceModule| <f1> parso.pgen2.grammar_parser",shape="record"];
	"parso._compatibility" [label="<f0> SourceModule| <f1> parso._compatibility",shape="record"];
	"parso.parser" [label="<f0> SourceModule| <f1> parso.parser",shape="record"];
	"jedi.api.keywords" [label="<f0> SourceModule| <f1> jedi.api.keywords",shape="record"];
	"jedi.inference.base_value" [label="<f0> SourceModule| <f1> jedi.inference.base_value",shape="record"];
	"jedi.inference.gradual.conversion" [label="<f0> SourceModule| <f1> jedi.inference.gradual.conversion",shape="record"];
	"jedi.inference.gradual.stub_value" [label="<f0> SourceModule| <f1> jedi.inference.gradual.stub_value",shape="record"];
	"jedi.inference.names" [label="<f0> SourceModule| <f1> jedi.inference.names",shape="record"];
	"jedi.inference.dynamic_params" [label="<f0> SourceModule| <f1> jedi.inference.dynamic_params",shape="record"];
	"jedi.inference.compiled.mixed" [label="<f0> SourceModule| <f1> jedi.inference.compiled.mixed",shape="record"];
	"jedi.cache" [label="<f0> SourceModule| <f1> jedi.cache",shape="record"];
	"jedi.inference.utils" [label="<f0> SourceModule| <f1> jedi.inference.utils",shape="record"];
	"jedi.debug" [label="<f0> SourceModule| <f1> jedi.debug",shape="record"];
	"jedi.settings" [label="<f0> SourceModule| <f1> jedi.settings",shape="record"];
	"parso.tree" [label="<f0> SourceModule| <f1> parso.tree",shape="record"];
	"jedi.api.helpers" [label="<f0> SourceModule| <f1> jedi.api.helpers",shape="record"];
	"jedi" [label="<f0> Package| <f1> jedi",shape="record"];
	"IPython.utils.dir2" [label="<f0> SourceModule| <f1> IPython.utils.dir2",shape="record"];
	"IPython.core.latex_symbols" [label="<f0> SourceModule| <f1> IPython.core.latex_symbols",shape="record"];
	"IPython.core.guarded_eval" [label="<f0> SourceModule| <f1> IPython.core.guarded_eval",shape="record"];
	"IPython.core.async_helpers" [label="<f0> SourceModule| <f1> IPython.core.async_helpers",shape="record"];
	"curio" [label="<f0> MissingModule| <f1> curio",shape="record"];
	"exceptiongroup" [label="<f0> Package| <f1> exceptiongroup",shape="record"];
	"exceptiongroup._suppress" [label="<f0> SourceModule| <f1> exceptiongroup._suppress",shape="record"];
	"exceptiongroup._formatting" [label="<f0> SourceModule| <f1> exceptiongroup._formatting",shape="record"];
	"apport_python_hook" [label="<f0> MissingModule| <f1> apport_python_hook",shape="record"];
	"exceptiongroup._exceptions" [label="<f0> SourceModule| <f1> exceptiongroup._exceptions",shape="record"];
	"exceptiongroup._version" [label="<f0> SourceModule| <f1> exceptiongroup._version",shape="record"];
	"exceptiongroup._catch" [label="<f0> SourceModule| <f1> exceptiongroup._catch",shape="record"];
	"docrepr" [label="<f0> MissingModule| <f1> docrepr",shape="record"];
	"IPython.utils.text" [label="<f0> SourceModule| <f1> IPython.utils.text",shape="record"];
	"IPython.utils.syspathcontext" [label="<f0> SourceModule| <f1> IPython.utils.syspathcontext",shape="record"];
	"IPython.utils.strdispatch" [label="<f0> SourceModule| <f1> IPython.utils.strdispatch",shape="record"];
	"IPython.utils.process" [label="<f0> SourceModule| <f1> IPython.utils.process",shape="record"];
	"IPython.utils._process_posix" [label="<f0> SourceModule| <f1> IPython.utils._process_posix",shape="record"];
	"pexpect" [label="<f0> Package| <f1> pexpect",shape="record"];
	"pexpect.run" [label="<f0> SourceModule| <f1> pexpect.run",shape="record"];
	"pexpect.pty_spawn" [label="<f0> SourceModule| <f1> pexpect.pty_spawn",shape="record"];
	"pexpect.spawnbase" [label="<f0> SourceModule| <f1> pexpect.spawnbase",shape="record"];
	"pexpect._async" [label="<f0> SourceModule| <f1> pexpect._async",shape="record"];
	"pexpect._async_pre_await" [label="<f0> SourceModule| <f1> pexpect._async_pre_await",shape="record"];
	"pexpect._async_w_await" [label="<f0> SourceModule| <f1> pexpect._async_w_await",shape="record"];
	"ptyprocess.ptyprocess" [label="<f0> SourceModule| <f1> ptyprocess.ptyprocess",shape="record"];
	"ptyprocess._fork_pty" [label="<f0> SourceModule| <f1> ptyprocess._fork_pty",shape="record"];
	"ptyprocess.util" [label="<f0> SourceModule| <f1> ptyprocess.util",shape="record"];
	"ptyprocess" [label="<f0> Package| <f1> ptyprocess",shape="record"];
	"pexpect.expect" [label="<f0> SourceModule| <f1> pexpect.expect",shape="record"];
	"pexpect.utils" [label="<f0> SourceModule| <f1> pexpect.utils",shape="record"];
	"pexpect.exceptions" [label="<f0> SourceModule| <f1> pexpect.exceptions",shape="record"];
	"IPython.utils._process_cli" [label="<f0> SourceModule| <f1> IPython.utils._process_cli",shape="record"];
	"System" [label="<f0> MissingModule| <f1> System",shape="record"];
	"clr" [label="<f0> MissingModule| <f1> clr",shape="record"];
	"IPython.utils.path" [label="<f0> SourceModule| <f1> IPython.utils.path",shape="record"];
	"IPython.paths" [label="<f0> SourceModule| <f1> IPython.paths",shape="record"];
	"IPython.utils.importstring" [label="<f0> SourceModule| <f1> IPython.utils.importstring",shape="record"];
	"IPython.core.usage" [label="<f0> SourceModule| <f1> IPython.core.usage",shape="record"];
	"IPython.core.profiledir" [label="<f0> SourceModule| <f1> IPython.core.profiledir",shape="record"];
	"IPython.core.payload" [label="<f0> SourceModule| <f1> IPython.core.payload",shape="record"];
	"IPython.core.macro" [label="<f0> SourceModule| <f1> IPython.core.macro",shape="record"];
	"IPython.core.logger" [label="<f0> SourceModule| <f1> IPython.core.logger",shape="record"];
	"IPython.core.inputtransformer2" [label="<f0> SourceModule| <f1> IPython.core.inputtransformer2",shape="record"];
	"IPython.core.history" [label="<f0> SourceModule| <f1> IPython.core.history",shape="record"];
	"decorator" [label="<f0> SourceModule| <f1> decorator",shape="record"];
	"IPython.core.formatters" [label="<f0> SourceModule| <f1> IPython.core.formatters",shape="record"];
	"IPython.lib.pretty" [label="<f0> SourceModule| <f1> IPython.lib.pretty",shape="record"];
	"IPython.utils.sentinel" [label="<f0> SourceModule| <f1> IPython.utils.sentinel",shape="record"];
	"IPython.core.extensions" [label="<f0> SourceModule| <f1> IPython.core.extensions",shape="record"];
	"IPython.core.events" [label="<f0> SourceModule| <f1> IPython.core.events",shape="record"];
	"IPython.core.display_trap" [label="<f0> SourceModule| <f1> IPython.core.display_trap",shape="record"];
	"IPython.core.debugger" [label="<f0> SourceModule| <f1> IPython.core.debugger",shape="record"];
	"IPython.terminal.interactiveshell" [label="<f0> SourceModule| <f1> IPython.terminal.interactiveshell",shape="record"];
	"'yapf.yapflib'" [label="<f0> MissingModule| <f1> 'yapf.yapflib'",shape="record"];
	"yapf" [label="<f0> MissingModule| <f1> yapf",shape="record"];
	"black" [label="<f0> ExtensionPackage| <f1> black",shape="record"];
	"blib2to3.pygram" [label="<f0> Extension| <f1> blib2to3.pygram",shape="record"];
	"blib2to3.pgen2.tokenize" [label="<f0> Extension| <f1> blib2to3.pgen2.tokenize",shape="record"];
	"blib2to3.pgen2.pgen" [label="<f0> Extension| <f1> blib2to3.pgen2.pgen",shape="record"];
	"blib2to3.pgen2.parse" [label="<f0> Extension| <f1> blib2to3.pgen2.parse",shape="record"];
	"blib2to3.pgen2.literals" [label="<f0> Extension| <f1> blib2to3.pgen2.literals",shape="record"];
	"blib2to3.pgen2.grammar" [label="<f0> Extension| <f1> blib2to3.pgen2.grammar",shape="record"];
	"blib2to3.pgen2.driver" [label="<f0> Extension| <f1> blib2to3.pgen2.driver",shape="record"];
	"blib2to3.pgen2.conv" [label="<f0> Extension| <f1> blib2to3.pgen2.conv",shape="record"];
	"pgen2" [label="<f0> MissingModule| <f1> pgen2",shape="record"];
	"blib2to3" [label="<f0> Package| <f1> blib2to3",shape="record"];
	"30fcd23745efe32ce681__mypyc" [label="<f0> Extension| <f1> 30fcd23745efe32ce681__mypyc",shape="record"];
	"black.trans" [label="<f0> Extension| <f1> black.trans",shape="record"];
	"black.strings" [label="<f0> Extension| <f1> black.strings",shape="record"];
	"black.schema" [label="<f0> Extension| <f1> black.schema",shape="record"];
	"black.rusty" [label="<f0> Extension| <f1> black.rusty",shape="record"];
	"black.resources" [label="<f0> ExtensionPackage| <f1> black.resources",shape="record"];
	"black.numerics" [label="<f0> Extension| <f1> black.numerics",shape="record"];
	"black.debug" [label="<f0> SourceModule| <f1> black.debug",shape="record"];
	"black.brackets" [label="<f0> Extension| <f1> black.brackets",shape="record"];
	"black._width_table" [label="<f0> Extension| <f1> black._width_table",shape="record"];
	"black.__main__" [label="<f0> SourceModule| <f1> black.__main__",shape="record"];
	"platformdirs" [label="<f0> Package| <f1> platformdirs",shape="record"];
	"platformdirs.android" [label="<f0> SourceModule| <f1> platformdirs.android",shape="record"];
	"jnius" [label="<f0> MissingModule| <f1> jnius",shape="record"];
	"android" [label="<f0> MissingModule| <f1> android",shape="record"];
	"platformdirs.unix" [label="<f0> SourceModule| <f1> platformdirs.unix",shape="record"];
	"platformdirs.macos" [label="<f0> SourceModule| <f1> platformdirs.macos",shape="record"];
	"platformdirs.windows" [label="<f0> SourceModule| <f1> platformdirs.windows",shape="record"];
	"platformdirs.version" [label="<f0> SourceModule| <f1> platformdirs.version",shape="record"];
	"platformdirs.api" [label="<f0> SourceModule| <f1> platformdirs.api",shape="record"];
	"black.concurrency" [label="<f0> SourceModule| <f1> black.concurrency",shape="record"];
	"uvloop" [label="<f0> MissingModule| <f1> uvloop",shape="record"];
	"blib2to3.pytree" [label="<f0> Extension| <f1> blib2to3.pytree",shape="record"];
	"blib2to3.pgen2.token" [label="<f0> Extension| <f1> blib2to3.pgen2.token",shape="record"];
	"blib2to3.pgen2" [label="<f0> Package| <f1> blib2to3.pgen2",shape="record"];
	"black.report" [label="<f0> SourceModule| <f1> black.report",shape="record"];
	"black.ranges" [label="<f0> Extension| <f1> black.ranges",shape="record"];
	"black.parsing" [label="<f0> Extension| <f1> black.parsing",shape="record"];
	"black.output" [label="<f0> SourceModule| <f1> black.output",shape="record"];
	"black.nodes" [label="<f0> Extension| <f1> black.nodes",shape="record"];
	"black.mode" [label="<f0> Extension| <f1> black.mode",shape="record"];
	"black.lines" [label="<f0> Extension| <f1> black.lines",shape="record"];
	"black.linegen" [label="<f0> Extension| <f1> black.linegen",shape="record"];
	"black.handle_ipynb_magics" [label="<f0> Extension| <f1> black.handle_ipynb_magics",shape="record"];
	"tokenize_rt" [label="<f0> MissingModule| <f1> tokenize_rt",shape="record"];
	"black.files" [label="<f0> SourceModule| <f1> black.files",shape="record"];
	"'colorama.initialise'" [label="<f0> MissingModule| <f1> 'colorama.initialise'",shape="record"];
	"tomli" [label="<f0> Package| <f1> tomli",shape="record"];
	"tomli._parser" [label="<f0> SourceModule| <f1> tomli._parser",shape="record"];
	"tomli._types" [label="<f0> SourceModule| <f1> tomli._types",shape="record"];
	"tomli._re" [label="<f0> SourceModule| <f1> tomli._re",shape="record"];
	"tomllib" [label="<f0> MissingModule| <f1> tomllib",shape="record"];
	"black.const" [label="<f0> Extension| <f1> black.const",shape="record"];
	"black.comments" [label="<f0> Extension| <f1> black.comments",shape="record"];
	"black.cache" [label="<f0> Extension| <f1> black.cache",shape="record"];
	"_black_version" [label="<f0> SourceModule| <f1> _black_version",shape="record"];
	"pathspec.patterns.gitwildmatch" [label="<f0> SourceModule| <f1> pathspec.patterns.gitwildmatch",shape="record"];
	"pathspec.patterns" [label="<f0> Package| <f1> pathspec.patterns",shape="record"];
	"pathspec.pattern" [label="<f0> SourceModule| <f1> pathspec.pattern",shape="record"];
	"pathspec.util" [label="<f0> SourceModule| <f1> pathspec.util",shape="record"];
	"pathspec" [label="<f0> Package| <f1> pathspec",shape="record"];
	"pathspec._meta" [label="<f0> SourceModule| <f1> pathspec._meta",shape="record"];
	"pathspec.pathspec" [label="<f0> SourceModule| <f1> pathspec.pathspec",shape="record"];
	"pathspec.gitignore" [label="<f0> SourceModule| <f1> pathspec.gitignore",shape="record"];
	"mypy_extensions" [label="<f0> SourceModule| <f1> mypy_extensions",shape="record"];
	"click.core" [label="<f0> SourceModule| <f1> click.core",shape="record"];
	"click.decorators" [label="<f0> SourceModule| <f1> click.decorators",shape="record"];
	"click.shell_completion" [label="<f0> SourceModule| <f1> click.shell_completion",shape="record"];
	"click.utils" [label="<f0> SourceModule| <f1> click.utils",shape="record"];
	"click._compat" [label="<f0> SourceModule| <f1> click._compat",shape="record"];
	"click._winconsole" [label="<f0> SourceModule| <f1> click._winconsole",shape="record"];
	"click.termui" [label="<f0> SourceModule| <f1> click.termui",shape="record"];
	"click._termui_impl" [label="<f0> SourceModule| <f1> click._termui_impl",shape="record"];
	"click.parser" [label="<f0> SourceModule| <f1> click.parser",shape="record"];
	"click.globals" [label="<f0> SourceModule| <f1> click.globals",shape="record"];
	"click.formatting" [label="<f0> SourceModule| <f1> click.formatting",shape="record"];
	"click._textwrap" [label="<f0> SourceModule| <f1> click._textwrap",shape="record"];
	"click.exceptions" [label="<f0> SourceModule| <f1> click.exceptions",shape="record"];
	"click.types" [label="<f0> SourceModule| <f1> click.types",shape="record"];
	"IPython.terminal.shortcuts.auto_suggest" [label="<f0> SourceModule| <f1> IPython.terminal.shortcuts.auto_suggest",shape="record"];
	"prompt_toolkit.document" [label="<f0> SourceModule| <f1> prompt_toolkit.document",shape="record"];
	"prompt_toolkit.selection" [label="<f0> SourceModule| <f1> prompt_toolkit.selection",shape="record"];
	"prompt_toolkit.filters.vi_mode" [label="<f0> MissingModule| <f1> prompt_toolkit.filters.vi_mode",shape="record"];
	"prompt_toolkit.clipboard" [label="<f0> Package| <f1> prompt_toolkit.clipboard",shape="record"];
	"prompt_toolkit.clipboard.in_memory" [label="<f0> SourceModule| <f1> prompt_toolkit.clipboard.in_memory",shape="record"];
	"prompt_toolkit.clipboard.base" [label="<f0> SourceModule| <f1> prompt_toolkit.clipboard.base",shape="record"];
	"prompt_toolkit.key_binding.bindings.named_commands" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.bindings.named_commands",shape="record"];
	"prompt_toolkit.application.run_in_terminal" [label="<f0> SourceModule| <f1> prompt_toolkit.application.run_in_terminal",shape="record"];
	"prompt_toolkit.application" [label="<f0> Package| <f1> prompt_toolkit.application",shape="record"];
	"prompt_toolkit.application.dummy" [label="<f0> SourceModule| <f1> prompt_toolkit.application.dummy",shape="record"];
	"prompt_toolkit.input" [label="<f0> Package| <f1> prompt_toolkit.input",shape="record"];
	"prompt_toolkit.input.defaults" [label="<f0> SourceModule| <f1> prompt_toolkit.input.defaults",shape="record"];
	"prompt_toolkit.input.posix_pipe" [label="<f0> SourceModule| <f1> prompt_toolkit.input.posix_pipe",shape="record"];
	"prompt_toolkit.utils" [label="<f0> SourceModule| <f1> prompt_toolkit.utils",shape="record"];
	"prompt_toolkit.output.windows10" [label="<f0> SourceModule| <f1> prompt_toolkit.output.windows10",shape="record"];
	"prompt_toolkit.output.win32" [label="<f0> SourceModule| <f1> prompt_toolkit.output.win32",shape="record"];
	"prompt_toolkit.cursor_shapes" [label="<f0> SourceModule| <f1> prompt_toolkit.cursor_shapes",shape="record"];
	"prompt_toolkit.key_binding.vi_state" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.vi_state",shape="record"];
	"'prompt_toolkit.key_binding.key_bindings.vi'" [label="<f0> MissingModule| <f1> 'prompt_toolkit.key_binding.key_bindings.vi'",shape="record"];
	"prompt_toolkit.output.vt100" [label="<f0> SourceModule| <f1> prompt_toolkit.output.vt100",shape="record"];
	"prompt_toolkit.output.flush_stdout" [label="<f0> SourceModule| <f1> prompt_toolkit.output.flush_stdout",shape="record"];
	"prompt_toolkit.output.color_depth" [label="<f0> SourceModule| <f1> prompt_toolkit.output.color_depth",shape="record"];
	"prompt_toolkit.output.defaults" [label="<f0> SourceModule| <f1> prompt_toolkit.output.defaults",shape="record"];
	"prompt_toolkit.output.conemu" [label="<f0> SourceModule| <f1> prompt_toolkit.output.conemu",shape="record"];
	"prompt_toolkit.output.plain_text" [label="<f0> SourceModule| <f1> prompt_toolkit.output.plain_text",shape="record"];
	"prompt_toolkit.output.base" [label="<f0> SourceModule| <f1> prompt_toolkit.output.base",shape="record"];
	"prompt_toolkit.win32_types" [label="<f0> SourceModule| <f1> prompt_toolkit.win32_types",shape="record"];
	"prompt_toolkit.data_structures" [label="<f0> SourceModule| <f1> prompt_toolkit.data_structures",shape="record"];
	"wcwidth.wcwidth" [label="<f0> SourceModule| <f1> wcwidth.wcwidth",shape="record"];
	"backports" [label="<f0> MissingModule| <f1> backports",shape="record"];
	"wcwidth.unicode_versions" [label="<f0> SourceModule| <f1> wcwidth.unicode_versions",shape="record"];
	"wcwidth.table_zero" [label="<f0> SourceModule| <f1> wcwidth.table_zero",shape="record"];
	"wcwidth.table_wide" [label="<f0> SourceModule| <f1> wcwidth.table_wide",shape="record"];
	"wcwidth.table_vs16" [label="<f0> SourceModule| <f1> wcwidth.table_vs16",shape="record"];
	"wcwidth" [label="<f0> Package| <f1> wcwidth",shape="record"];
	"prompt_toolkit.input.win32_pipe" [label="<f0> SourceModule| <f1> prompt_toolkit.input.win32_pipe",shape="record"];
	"prompt_toolkit.input.vt100_parser" [label="<f0> SourceModule| <f1> prompt_toolkit.input.vt100_parser",shape="record"];
	"prompt_toolkit.input.ansi_escape_sequences" [label="<f0> SourceModule| <f1> prompt_toolkit.input.ansi_escape_sequences",shape="record"];
	"prompt_toolkit.eventloop.win32" [label="<f0> SourceModule| <f1> prompt_toolkit.eventloop.win32",shape="record"];
	"prompt_toolkit.input.vt100" [label="<f0> SourceModule| <f1> prompt_toolkit.input.vt100",shape="record"];
	"prompt_toolkit.input.posix_utils" [label="<f0> SourceModule| <f1> prompt_toolkit.input.posix_utils",shape="record"];
	"prompt_toolkit.input.win32" [label="<f0> SourceModule| <f1> prompt_toolkit.input.win32",shape="record"];
	"prompt_toolkit.mouse_events" [label="<f0> SourceModule| <f1> prompt_toolkit.mouse_events",shape="record"];
	"prompt_toolkit.input.base" [label="<f0> SourceModule| <f1> prompt_toolkit.input.base",shape="record"];
	"prompt_toolkit.application.application" [label="<f0> SourceModule| <f1> prompt_toolkit.application.application",shape="record"];
	"prompt_toolkit.renderer" [label="<f0> SourceModule| <f1> prompt_toolkit.renderer",shape="record"];
	"prompt_toolkit.layout.screen" [label="<f0> SourceModule| <f1> prompt_toolkit.layout.screen",shape="record"];
	"prompt_toolkit.layout" [label="<f0> Package| <f1> prompt_toolkit.layout",shape="record"];
	"prompt_toolkit.layout.scrollable_pane" [label="<f0> SourceModule| <f1> prompt_toolkit.layout.scrollable_pane",shape="record"];
	"prompt_toolkit.layout.menus" [label="<f0> SourceModule| <f1> prompt_toolkit.layout.menus",shape="record"];
	"prompt_toolkit.layout.utils" [label="<f0> SourceModule| <f1> prompt_toolkit.layout.utils",shape="record"];
	"prompt_toolkit.formatted_text.base" [label="<f0> SourceModule| <f1> prompt_toolkit.formatted_text.base",shape="record"];
	"prompt_toolkit.filters.is_done" [label="<f0> MissingModule| <f1> prompt_toolkit.filters.is_done",shape="record"];
	"prompt_toolkit.filters.has_completions" [label="<f0> MissingModule| <f1> prompt_toolkit.filters.has_completions",shape="record"];
	"prompt_toolkit.completion" [label="<f0> Package| <f1> prompt_toolkit.completion",shape="record"];
	"prompt_toolkit.completion.word_completer" [label="<f0> SourceModule| <f1> prompt_toolkit.completion.word_completer",shape="record"];
	"prompt_toolkit.completion.nested" [label="<f0> SourceModule| <f1> prompt_toolkit.completion.nested",shape="record"];
	"prompt_toolkit.completion.fuzzy_completer" [label="<f0> SourceModule| <f1> prompt_toolkit.completion.fuzzy_completer",shape="record"];
	"prompt_toolkit.completion.filesystem" [label="<f0> SourceModule| <f1> prompt_toolkit.completion.filesystem",shape="record"];
	"prompt_toolkit.completion.deduplicate" [label="<f0> SourceModule| <f1> prompt_toolkit.completion.deduplicate",shape="record"];
	"prompt_toolkit.completion.base" [label="<f0> SourceModule| <f1> prompt_toolkit.completion.base",shape="record"];
	"prompt_toolkit.layout.margins" [label="<f0> SourceModule| <f1> prompt_toolkit.layout.margins",shape="record"];
	"prompt_toolkit.layout.dimension" [label="<f0> SourceModule| <f1> prompt_toolkit.layout.dimension",shape="record"];
	"prompt_toolkit.layout.mouse_handlers" [label="<f0> SourceModule| <f1> prompt_toolkit.layout.mouse_handlers",shape="record"];
	"prompt_toolkit.layout.layout" [label="<f0> SourceModule| <f1> prompt_toolkit.layout.layout",shape="record"];
	"prompt_toolkit.layout.dummy" [label="<f0> SourceModule| <f1> prompt_toolkit.layout.dummy",shape="record"];
	"prompt_toolkit.layout.containers" [label="<f0> SourceModule| <f1> prompt_toolkit.layout.containers",shape="record"];
	"prompt_toolkit.formatted_text.utils" [label="<f0> SourceModule| <f1> prompt_toolkit.formatted_text.utils",shape="record"];
	"prompt_toolkit.filters.vi_insert_mode" [label="<f0> MissingModule| <f1> prompt_toolkit.filters.vi_insert_mode",shape="record"];
	"prompt_toolkit.filters.emacs_insert_mode" [label="<f0> MissingModule| <f1> prompt_toolkit.filters.emacs_insert_mode",shape="record"];
	"prompt_toolkit.key_binding.emacs_state" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.emacs_state",shape="record"];
	"prompt_toolkit.key_binding.defaults" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.defaults",shape="record"];
	"prompt_toolkit.key_binding.bindings.vi" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.bindings.vi",shape="record"];
	"prompt_toolkit.key_binding.bindings.search" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.bindings.search",shape="record"];
	"prompt_toolkit.key_binding.digraphs" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.digraphs",shape="record"];
	"prompt_toolkit.filters.app" [label="<f0> SourceModule| <f1> prompt_toolkit.filters.app",shape="record"];
	"prompt_toolkit.filters.base" [label="<f0> SourceModule| <f1> prompt_toolkit.filters.base",shape="record"];
	"prompt_toolkit.filters.is_searching" [label="<f0> MissingModule| <f1> prompt_toolkit.filters.is_searching",shape="record"];
	"prompt_toolkit.key_binding.bindings.mouse" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.bindings.mouse",shape="record"];
	"prompt_toolkit.key_binding.bindings.emacs" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.bindings.emacs",shape="record"];
	"prompt_toolkit.key_binding.bindings.cpr" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.bindings.cpr",shape="record"];
	"prompt_toolkit.key_binding.bindings.basic" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.bindings.basic",shape="record"];
	"prompt_toolkit.key_binding.bindings.page_navigation" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.bindings.page_navigation",shape="record"];
	"prompt_toolkit.key_binding.bindings.scroll" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.bindings.scroll",shape="record"];
	"prompt_toolkit.input.typeahead" [label="<f0> SourceModule| <f1> prompt_toolkit.input.typeahead",shape="record"];
	"prompt_toolkit.eventloop.utils" [label="<f0> SourceModule| <f1> prompt_toolkit.eventloop.utils",shape="record"];
	"prompt_toolkit.cache" [label="<f0> SourceModule| <f1> prompt_toolkit.cache",shape="record"];
	"prompt_toolkit.application.current" [label="<f0> SourceModule| <f1> prompt_toolkit.application.current",shape="record"];
	"prompt_toolkit.eventloop" [label="<f0> Package| <f1> prompt_toolkit.eventloop",shape="record"];
	"prompt_toolkit.eventloop.inputhook" [label="<f0> SourceModule| <f1> prompt_toolkit.eventloop.inputhook",shape="record"];
	"_typeshed" [label="<f0> MissingModule| <f1> _typeshed",shape="record"];
	"prompt_toolkit.eventloop.async_generator" [label="<f0> SourceModule| <f1> prompt_toolkit.eventloop.async_generator",shape="record"];
	"prompt_toolkit.key_binding.bindings.completion" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.bindings.completion",shape="record"];
	"prompt_toolkit.shortcuts.prompt" [label="<f0> SourceModule| <f1> prompt_toolkit.shortcuts.prompt",shape="record"];
	"prompt_toolkit.widgets.toolbars" [label="<f0> SourceModule| <f1> prompt_toolkit.widgets.toolbars",shape="record"];
	"prompt_toolkit.widgets" [label="<f0> Package| <f1> prompt_toolkit.widgets",shape="record"];
	"prompt_toolkit.widgets.menus" [label="<f0> SourceModule| <f1> prompt_toolkit.widgets.menus",shape="record"];
	"prompt_toolkit.widgets.dialogs" [label="<f0> SourceModule| <f1> prompt_toolkit.widgets.dialogs",shape="record"];
	"prompt_toolkit.key_binding.bindings.focus" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.bindings.focus",shape="record"];
	"prompt_toolkit.widgets.base" [label="<f0> SourceModule| <f1> prompt_toolkit.widgets.base",shape="record"];
	"prompt_toolkit.validation" [label="<f0> SourceModule| <f1> prompt_toolkit.validation",shape="record"];
	"prompt_toolkit.lexers" [label="<f0> Package| <f1> prompt_toolkit.lexers",shape="record"];
	"prompt_toolkit.lexers.pygments" [label="<f0> SourceModule| <f1> prompt_toolkit.lexers.pygments",shape="record"];
	"prompt_toolkit.lexers.base" [label="<f0> SourceModule| <f1> prompt_toolkit.lexers.base",shape="record"];
	"prompt_toolkit.key_binding.bindings.open_in_editor" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.bindings.open_in_editor",shape="record"];
	"prompt_toolkit.key_binding.bindings.auto_suggest" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.bindings.auto_suggest",shape="record"];
	"prompt_toolkit.search" [label="<f0> SourceModule| <f1> prompt_toolkit.search",shape="record"];
	"prompt_toolkit.layout.controls" [label="<f0> SourceModule| <f1> prompt_toolkit.layout.controls",shape="record"];
	"prompt_toolkit.keys" [label="<f0> SourceModule| <f1> prompt_toolkit.keys",shape="record"];
	"prompt_toolkit.key_binding.key_processor" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.key_processor",shape="record"];
	"prompt_toolkit.key_binding.key_bindings" [label="<f0> SourceModule| <f1> prompt_toolkit.key_binding.key_bindings",shape="record"];
	"prompt_toolkit.key_binding.bindings" [label="<f0> Package| <f1> prompt_toolkit.key_binding.bindings",shape="record"];
	"prompt_toolkit.key_binding" [label="<f0> Package| <f1> prompt_toolkit.key_binding",shape="record"];
	"prompt_toolkit.buffer" [label="<f0> SourceModule| <f1> prompt_toolkit.buffer",shape="record"];
	"IPython.terminal.shortcuts.filters" [label="<f0> SourceModule| <f1> IPython.terminal.shortcuts.filters",shape="record"];
	"IPython.terminal.shortcuts" [label="<f0> Package| <f1> IPython.terminal.shortcuts",shape="record"];
	"IPython.lib.clipboard" [label="<f0> SourceModule| <f1> IPython.lib.clipboard",shape="record"];
	"win32clipboard" [label="<f0> MissingModule| <f1> win32clipboard",shape="record"];
	"IPython.terminal.shortcuts.auto_match" [label="<f0> SourceModule| <f1> IPython.terminal.shortcuts.auto_match",shape="record"];
	"IPython.terminal.ptutils" [label="<f0> SourceModule| <f1> IPython.terminal.ptutils",shape="record"];
	"IPython.terminal.prompts" [label="<f0> SourceModule| <f1> IPython.terminal.prompts",shape="record"];
	"IPython.terminal.pt_inputhooks" [label="<f0> Package| <f1> IPython.terminal.pt_inputhooks",shape="record"];
	"IPython.external.qt_for_kernel" [label="<f0> SourceModule| <f1> IPython.external.qt_for_kernel",shape="record"];
	"IPython.external" [label="<f0> Package| <f1> IPython.external",shape="record"];
	"IPython.external.qt_loaders" [label="<f0> SourceModule| <f1> IPython.external.qt_loaders",shape="record"];
	"sip" [label="<f0> MissingModule| <f1> sip",shape="record"];
	"IPython.terminal.magics" [label="<f0> SourceModule| <f1> IPython.terminal.magics",shape="record"];
	"IPython.terminal.debugger" [label="<f0> SourceModule| <f1> IPython.terminal.debugger",shape="record"];
	"IPython.terminal.embed" [label="<f0> SourceModule| <f1> IPython.terminal.embed",shape="record"];
	"IPython.terminal.ipapp" [label="<f0> SourceModule| <f1> IPython.terminal.ipapp",shape="record"];
	"IPython.extensions.storemagic" [label="<f0> SourceModule| <f1> IPython.extensions.storemagic",shape="record"];
	"IPython.extensions" [label="<f0> Package| <f1> IPython.extensions",shape="record"];
	"IPython.core.shellapp" [label="<f0> SourceModule| <f1> IPython.core.shellapp",shape="record"];
	"IPython.core.application" [label="<f0> SourceModule| <f1> IPython.core.application",shape="record"];
	"IPython.core.crashhandler" [label="<f0> SourceModule| <f1> IPython.core.crashhandler",shape="record"];
	"IPython.utils.sysinfo" [label="<f0> SourceModule| <f1> IPython.utils.sysinfo",shape="record"];
	"IPython.terminal" [label="<f0> Package| <f1> IPython.terminal",shape="record"];
	"prompt_toolkit" [label="<f0> Package| <f1> prompt_toolkit",shape="record"];
	"prompt_toolkit.styles.pygments" [label="<f0> SourceModule| <f1> prompt_toolkit.styles.pygments",shape="record"];
	"prompt_toolkit.styles.style" [label="<f0> SourceModule| <f1> prompt_toolkit.styles.style",shape="record"];
	"prompt_toolkit.styles.named_colors" [label="<f0> SourceModule| <f1> prompt_toolkit.styles.named_colors",shape="record"];
	"prompt_toolkit.styles.base" [label="<f0> SourceModule| <f1> prompt_toolkit.styles.base",shape="record"];
	"prompt_toolkit.styles" [label="<f0> Package| <f1> prompt_toolkit.styles",shape="record"];
	"prompt_toolkit.styles.style_transformation" [label="<f0> SourceModule| <f1> prompt_toolkit.styles.style_transformation",shape="record"];
	"prompt_toolkit.styles.defaults" [label="<f0> SourceModule| <f1> prompt_toolkit.styles.defaults",shape="record"];
	"prompt_toolkit.shortcuts" [label="<f0> Package| <f1> prompt_toolkit.shortcuts",shape="record"];
	"prompt_toolkit.shortcuts.utils" [label="<f0> SourceModule| <f1> prompt_toolkit.shortcuts.utils",shape="record"];
	"prompt_toolkit.shortcuts.progress_bar" [label="<f0> Package| <f1> prompt_toolkit.shortcuts.progress_bar",shape="record"];
	"prompt_toolkit.shortcuts.progress_bar.formatters" [label="<f0> SourceModule| <f1> prompt_toolkit.shortcuts.progress_bar.formatters",shape="record"];
	"prompt_toolkit.shortcuts.progress_bar.base" [label="<f0> SourceModule| <f1> prompt_toolkit.shortcuts.progress_bar.base",shape="record"];
	"prompt_toolkit.shortcuts.dialogs" [label="<f0> SourceModule| <f1> prompt_toolkit.shortcuts.dialogs",shape="record"];
	"prompt_toolkit.patch_stdout" [label="<f0> SourceModule| <f1> prompt_toolkit.patch_stdout",shape="record"];
	"prompt_toolkit.output" [label="<f0> Package| <f1> prompt_toolkit.output",shape="record"];
	"prompt_toolkit.layout.processors" [label="<f0> SourceModule| <f1> prompt_toolkit.layout.processors",shape="record"];
	"prompt_toolkit.filters.vi_insert_multiple_mode" [label="<f0> MissingModule| <f1> prompt_toolkit.filters.vi_insert_multiple_mode",shape="record"];
	"prompt_toolkit.history" [label="<f0> SourceModule| <f1> prompt_toolkit.history",shape="record"];
	"prompt_toolkit.formatted_text" [label="<f0> Package| <f1> prompt_toolkit.formatted_text",shape="record"];
	"prompt_toolkit.formatted_text.pygments" [label="<f0> SourceModule| <f1> prompt_toolkit.formatted_text.pygments",shape="record"];
	"prompt_toolkit.formatted_text.html" [label="<f0> SourceModule| <f1> prompt_toolkit.formatted_text.html",shape="record"];
	"prompt_toolkit.formatted_text.ansi" [label="<f0> SourceModule| <f1> prompt_toolkit.formatted_text.ansi",shape="record"];
	"prompt_toolkit.filters" [label="<f0> Package| <f1> prompt_toolkit.filters",shape="record"];
	"prompt_toolkit.filters.utils" [label="<f0> SourceModule| <f1> prompt_toolkit.filters.utils",shape="record"];
	"prompt_toolkit.filters.cli" [label="<f0> SourceModule| <f1> prompt_toolkit.filters.cli",shape="record"];
	"prompt_toolkit.enums" [label="<f0> SourceModule| <f1> prompt_toolkit.enums",shape="record"];
	"prompt_toolkit.auto_suggest" [label="<f0> SourceModule| <f1> prompt_toolkit.auto_suggest",shape="record"];
	"IPython.core.excolors" [label="<f0> SourceModule| <f1> IPython.core.excolors",shape="record"];
	"IPython.core.compilerop" [label="<f0> SourceModule| <f1> IPython.core.compilerop",shape="record"];
	"IPython.core.builtin_trap" [label="<f0> SourceModule| <f1> IPython.core.builtin_trap",shape="record"];
	"IPython.core.autocall" [label="<f0> SourceModule| <f1> IPython.core.autocall",shape="record"];
	"IPython.core.alias" [label="<f0> SourceModule| <f1> IPython.core.alias",shape="record"];
	"IPython.core.ultratb" [label="<f0> SourceModule| <f1> IPython.core.ultratb",shape="record"];
	"stack_data" [label="<f0> Package| <f1> stack_data",shape="record"];
	"stack_data.version" [label="<f0> SourceModule| <f1> stack_data.version",shape="record"];
	"stack_data.serializing" [label="<f0> SourceModule| <f1> stack_data.serializing",shape="record"];
	"stack_data.utils" [label="<f0> SourceModule| <f1> stack_data.utils",shape="record"];
	"asttokens" [label="<f0> Package| <f1> asttokens",shape="record"];
	"asttokens.asttokens" [label="<f0> SourceModule| <f1> asttokens.asttokens",shape="record"];
	"asttokens.mark_tokens" [label="<f0> SourceModule| <f1> asttokens.mark_tokens",shape="record"];
	"asttokens.astroid_compat" [label="<f0> SourceModule| <f1> asttokens.astroid_compat",shape="record"];
	"'astroid.node_classes'" [label="<f0> MissingModule| <f1> 'astroid.node_classes'",shape="record"];
	"'astroid.nodes'" [label="<f0> MissingModule| <f1> 'astroid.nodes'",shape="record"];
	"astroid" [label="<f0> MissingModule| <f1> astroid",shape="record"];
	"asttokens.util" [label="<f0> SourceModule| <f1> asttokens.util",shape="record"];
	"asttokens.line_numbers" [label="<f0> SourceModule| <f1> asttokens.line_numbers",shape="record"];
	"stack_data.formatting" [label="<f0> SourceModule| <f1> stack_data.formatting",shape="record"];
	"stack_data.core" [label="<f0> SourceModule| <f1> stack_data.core",shape="record"];
	"pure_eval" [label="<f0> Package| <f1> pure_eval",shape="record"];
	"pure_eval.version" [label="<f0> SourceModule| <f1> pure_eval.version",shape="record"];
	"pure_eval.my_getattr_static" [label="<f0> SourceModule| <f1> pure_eval.my_getattr_static",shape="record"];
	"pure_eval.utils" [label="<f0> SourceModule| <f1> pure_eval.utils",shape="record"];
	"pure_eval.core" [label="<f0> SourceModule| <f1> pure_eval.core",shape="record"];
	"executing" [label="<f0> Package| <f1> executing",shape="record"];
	"executing.version" [label="<f0> SourceModule| <f1> executing.version",shape="record"];
	"executing._pytest_utils" [label="<f0> SourceModule| <f1> executing._pytest_utils",shape="record"];
	"pytest" [label="<f0> MissingModule| <f1> pytest",shape="record"];
	"executing.executing" [label="<f0> SourceModule| <f1> executing.executing",shape="record"];
	"executing._position_node_finder" [label="<f0> SourceModule| <f1> executing._position_node_finder",shape="record"];
	"executing._exceptions" [label="<f0> SourceModule| <f1> executing._exceptions",shape="record"];
	"IPython.core.prefilter" [label="<f0> SourceModule| <f1> IPython.core.prefilter",shape="record"];
	"IPython.core.splitinput" [label="<f0> SourceModule| <f1> IPython.core.splitinput",shape="record"];
	"IPython.core.page" [label="<f0> SourceModule| <f1> IPython.core.page",shape="record"];
	"IPython.utils.data" [label="<f0> SourceModule| <f1> IPython.utils.data",shape="record"];
	"IPython.core.oinspect" [label="<f0> SourceModule| <f1> IPython.core.oinspect",shape="record"];
	"pygments.lexers.PythonLexer" [label="<f0> MissingModule| <f1> pygments.lexers.PythonLexer",shape="record"];
	"IPython.utils.wildcard" [label="<f0> SourceModule| <f1> IPython.utils.wildcard",shape="record"];
	"IPython.core.magic" [label="<f0> SourceModule| <f1> IPython.core.magic",shape="record"];
	"IPython.core.hooks" [label="<f0> SourceModule| <f1> IPython.core.hooks",shape="record"];
	"pickleshare" [label="<f0> MissingModule| <f1> pickleshare",shape="record"];
	"'matplotlib.figure'" [label="<f0> MissingModule| <f1> 'matplotlib.figure'",shape="record"];
	"'matplotlib._pylab_helpers'" [label="<f0> MissingModule| <f1> 'matplotlib._pylab_helpers'",shape="record"];
	"'matplotlib.backends'" [label="<f0> MissingModule| <f1> 'matplotlib.backends'",shape="record"];
	"matplotlib" [label="<f0> MissingModule| <f1> matplotlib",shape="record"];
	"xml.dom.minidom" [label="<f0> SourceModule| <f1> xml.dom.minidom",shape="record"];
	"xml.dom.pulldom" [label="<f0> SourceModule| <f1> xml.dom.pulldom",shape="record"];
	"xml.dom.expatbuilder" [label="<f0> SourceModule| <f1> xml.dom.expatbuilder",shape="record"];
	"xml.dom.NodeFilter" [label="<f0> SourceModule| <f1> xml.dom.NodeFilter",shape="record"];
	"xml.dom.xmlbuilder" [label="<f0> SourceModule| <f1> xml.dom.xmlbuilder",shape="record"];
	"xml.dom.minicompat" [label="<f0> SourceModule| <f1> xml.dom.minicompat",shape="record"];
	"xml.dom.domreg" [label="<f0> SourceModule| <f1> xml.dom.domreg",shape="record"];
	"xml.dom" [label="<f0> Package| <f1> xml.dom",shape="record"];
	"IPython.core" [label="<f0> Package| <f1> IPython.core",shape="record"];
	"IPython.core.payloadpage" [label="<f0> SourceModule| <f1> IPython.core.payloadpage",shape="record"];
	"IPython.testing.skipdoctest" [label="<f0> SourceModule| <f1> IPython.testing.skipdoctest",shape="record"];
	"IPython.testing" [label="<f0> Package| <f1> IPython.testing",shape="record"];
	"IPython.utils.py3compat" [label="<f0> SourceModule| <f1> IPython.utils.py3compat",shape="record"];
	"IPython" [label="<f0> Package| <f1> IPython",shape="record"];
	"ipykernel.kernelapp" [label="<f0> SourceModule| <f1> ipykernel.kernelapp",shape="record"];
	"ipykernel" [label="<f0> Package| <f1> ipykernel",shape="record"];
	"ipykernel.serialize" [label="<f0> SourceModule| <f1> ipykernel.serialize",shape="record"];
	"ipykernel.pickleutil" [label="<f0> SourceModule| <f1> ipykernel.pickleutil",shape="record"];
	"cloudpickle" [label="<f0> Package| <f1> cloudpickle",shape="record"];
	"cloudpickle.cloudpickle_fast" [label="<f0> SourceModule| <f1> cloudpickle.cloudpickle_fast",shape="record"];
	"cloudpickle.cloudpickle" [label="<f0> SourceModule| <f1> cloudpickle.cloudpickle",shape="record"];
	"dill" [label="<f0> Package| <f1> dill",shape="record"];
	"dill._objects" [label="<f0> SourceModule| <f1> dill._objects",shape="record"];
	"symtable" [label="<f0> SourceModule| <f1> symtable",shape="record"];
	"_symtable" [label="<f0> BuiltinModule| <f1> _symtable",shape="record"];
	"xdrlib" [label="<f0> SourceModule| <f1> xdrlib",shape="record"];
	"_pyio" [label="<f0> SourceModule| <f1> _pyio",shape="record"];
	"dbm.ndbm" [label="<f0> SourceModule| <f1> dbm.ndbm",shape="record"];
	"_dbm" [label="<f0> Extension| <f1> _dbm",shape="record"];
	"shelve" [label="<f0> SourceModule| <f1> shelve",shape="record"];
	"dbm.gnu" [label="<f0> SourceModule| <f1> dbm.gnu",shape="record"];
	"_gdbm" [label="<f0> MissingModule| <f1> _gdbm",shape="record"];
	"dbm.dumb" [label="<f0> SourceModule| <f1> dbm.dumb",shape="record"];
	"dbm" [label="<f0> Package| <f1> dbm",shape="record"];
	"dill.objtypes" [label="<f0> SourceModule| <f1> dill.objtypes",shape="record"];
	"dill.settings" [label="<f0> SourceModule| <f1> dill.settings",shape="record"];
	"dill.temp" [label="<f0> SourceModule| <f1> dill.temp",shape="record"];
	"dill.source" [label="<f0> SourceModule| <f1> dill.source",shape="record"];
	"dill.logger" [label="<f0> SourceModule| <f1> dill.logger",shape="record"];
	"dill.detect" [label="<f0> SourceModule| <f1> dill.detect",shape="record"];
	"dill.pointers" [label="<f0> SourceModule| <f1> dill.pointers",shape="record"];
	"dill.session" [label="<f0> SourceModule| <f1> dill.session",shape="record"];
	"pickletools" [label="<f0> SourceModule| <f1> pickletools",shape="record"];
	"dill._dill" [label="<f0> SourceModule| <f1> dill._dill",shape="record"];
	"diff" [label="<f0> MissingModule| <f1> diff",shape="record"];
	"dill.diff" [label="<f0> MissingModule| <f1> dill.diff",shape="record"];
	"dill._shims" [label="<f0> SourceModule| <f1> dill._shims",shape="record"];
	"version" [label="<f0> MissingModule| <f1> version",shape="record"];
	"dill.__info__" [label="<f0> SourceModule| <f1> dill.__info__",shape="record"];
	"'ipyparallel.serialize'" [label="<f0> MissingModule| <f1> 'ipyparallel.serialize'",shape="record"];
	"ipykernel.get_connection_info" [label="<f0> MissingModule| <f1> ipykernel.get_connection_info",shape="record"];
	"ipykernel.get_connection_file" [label="<f0> MissingModule| <f1> ipykernel.get_connection_file",shape="record"];
	"ipykernel.connect_qtconsole" [label="<f0> MissingModule| <f1> ipykernel.connect_qtconsole",shape="record"];
	"ipykernel._version" [label="<f0> SourceModule| <f1> ipykernel._version",shape="record"];
	"ipykernel.trio_runner" [label="<f0> SourceModule| <f1> ipykernel.trio_runner",shape="record"];
	"faulthandler" [label="<f0> BuiltinModule| <f1> faulthandler",shape="record"];
	"ipykernel.zmqshell" [label="<f0> SourceModule| <f1> ipykernel.zmqshell",shape="record"];
	"ipykernel.eventloops" [label="<f0> SourceModule| <f1> ipykernel.eventloops",shape="record"];
	"IPython.lib.guisupport" [label="<f0> SourceModule| <f1> IPython.lib.guisupport",shape="record"];
	"PySide6" [label="<f0> MissingModule| <f1> PySide6",shape="record"];
	"PyQt6" [label="<f0> MissingModule| <f1> PyQt6",shape="record"];
	"PySide2" [label="<f0> MissingModule| <f1> PySide2",shape="record"];
	"PyQt5" [label="<f0> MissingModule| <f1> PyQt5",shape="record"];
	"ipykernel._eventloop_macos" [label="<f0> SourceModule| <f1> ipykernel._eventloop_macos",shape="record"];
	"ctypes.util" [label="<f0> SourceModule| <f1> ctypes.util",shape="record"];
	"ctypes._aix" [label="<f0> SourceModule| <f1> ctypes._aix",shape="record"];
	"ctypes.macholib.dyld" [label="<f0> SourceModule| <f1> ctypes.macholib.dyld",shape="record"];
	"ctypes.macholib" [label="<f0> Package| <f1> ctypes.macholib",shape="record"];
	"ctypes.macholib.dylib" [label="<f0> SourceModule| <f1> ctypes.macholib.dylib",shape="record"];
	"ctypes.macholib.framework" [label="<f0> SourceModule| <f1> ctypes.macholib.framework",shape="record"];
	"ipykernel.gui.gtk3embed" [label="<f0> SourceModule| <f1> ipykernel.gui.gtk3embed",shape="record"];
	"ipykernel.gui" [label="<f0> Package| <f1> ipykernel.gui",shape="record"];
	"'gi.repository'" [label="<f0> MissingModule| <f1> 'gi.repository'",shape="record"];
	"gi" [label="<f0> MissingModule| <f1> gi",shape="record"];
	"ipykernel.gui.gtkembed" [label="<f0> SourceModule| <f1> ipykernel.gui.gtkembed",shape="record"];
	"gtk" [label="<f0> MissingModule| <f1> gtk",shape="record"];
	"gobject" [label="<f0> MissingModule| <f1> gobject",shape="record"];
	"nest_asyncio" [label="<f0> SourceModule| <f1> nest_asyncio",shape="record"];
	"tkinter" [label="<f0> Package| <f1> tkinter",shape="record"];
	"tkinter.constants" [label="<f0> SourceModule| <f1> tkinter.constants",shape="record"];
	"_tkinter" [label="<f0> Extension| <f1> _tkinter",shape="record"];
	"wx" [label="<f0> MissingModule| <f1> wx",shape="record"];
	"ipyparallel" [label="<f0> MissingModule| <f1> ipyparallel",shape="record"];
	"ipykernel.jsonutil" [label="<f0> SourceModule| <f1> ipykernel.jsonutil",shape="record"];
	"jupyter_client._version" [label="<f0> SourceModule| <f1> jupyter_client._version",shape="record"];
	"jupyter_client" [label="<f0> Package| <f1> jupyter_client",shape="record"];
	"jupyter_client.provisioning" [label="<f0> Package| <f1> jupyter_client.provisioning",shape="record"];
	"jupyter_client.provisioning.provisioner_base" [label="<f0> SourceModule| <f1> jupyter_client.provisioning.provisioner_base",shape="record"];
	"jupyter_client.provisioning.local_provisioner" [label="<f0> SourceModule| <f1> jupyter_client.provisioning.local_provisioner",shape="record"];
	"jupyter_client.win_interrupt" [label="<f0> SourceModule| <f1> jupyter_client.win_interrupt",shape="record"];
	"jupyter_client.localinterfaces" [label="<f0> SourceModule| <f1> jupyter_client.localinterfaces",shape="record"];
	"netifaces" [label="<f0> MissingModule| <f1> netifaces",shape="record"];
	"jupyter_client.provisioning.factory" [label="<f0> SourceModule| <f1> jupyter_client.provisioning.factory",shape="record"];
	"jupyter_client.multikernelmanager" [label="<f0> SourceModule| <f1> jupyter_client.multikernelmanager",shape="record"];
	"jupyter_client.utils" [label="<f0> SourceModule| <f1> jupyter_client.utils",shape="record"];
	"jupyter_core.utils" [label="<f0> Package| <f1> jupyter_core.utils",shape="record"];
	"jupyter_core" [label="<f0> Package| <f1> jupyter_core",shape="record"];
	"jupyter_core.version" [label="<f0> SourceModule| <f1> jupyter_core.version",shape="record"];
	"jupyter_client.manager" [label="<f0> SourceModule| <f1> jupyter_client.manager",shape="record"];
	"jupyter_client.managerabc" [label="<f0> SourceModule| <f1> jupyter_client.managerabc",shape="record"];
	"jupyter_client.launcher" [label="<f0> SourceModule| <f1> jupyter_client.launcher",shape="record"];
	"_subprocess" [label="<f0> MissingModule| <f1> _subprocess",shape="record"];
	"jupyter_client.client" [label="<f0> SourceModule| <f1> jupyter_client.client",shape="record"];
	"jupyter_client.clientabc" [label="<f0> SourceModule| <f1> jupyter_client.clientabc",shape="record"];
	"jupyter_client.channelsabc" [label="<f0> SourceModule| <f1> jupyter_client.channelsabc",shape="record"];
	"jupyter_client.channels" [label="<f0> SourceModule| <f1> jupyter_client.channels",shape="record"];
	"zmq.asyncio" [label="<f0> SourceModule| <f1> zmq.asyncio",shape="record"];
	"zmq._future" [label="<f0> SourceModule| <f1> zmq._future",shape="record"];
	"jupyter_client.blocking" [label="<f0> Package| <f1> jupyter_client.blocking",shape="record"];
	"jupyter_client.blocking.client" [label="<f0> SourceModule| <f1> jupyter_client.blocking.client",shape="record"];
	"jupyter_client.asynchronous" [label="<f0> Package| <f1> jupyter_client.asynchronous",shape="record"];
	"jupyter_client.asynchronous.client" [label="<f0> SourceModule| <f1> jupyter_client.asynchronous.client",shape="record"];
	"jupyter_client.kernelspec" [label="<f0> SourceModule| <f1> jupyter_client.kernelspec",shape="record"];
	"ipykernel.kernelspec" [label="<f0> SourceModule| <f1> ipykernel.kernelspec",shape="record"];
	"ipykernel.displayhook" [label="<f0> SourceModule| <f1> ipykernel.displayhook",shape="record"];
	"ipykernel.parentpoller" [label="<f0> SourceModule| <f1> ipykernel.parentpoller",shape="record"];
	"ipykernel.ipkernel" [label="<f0> SourceModule| <f1> ipykernel.ipkernel",shape="record"];
	"appnope" [label="<f0> Package| <f1> appnope",shape="record"];
	"appnope._nope" [label="<f0> SourceModule| <f1> appnope._nope",shape="record"];
	"appnope._dummy" [label="<f0> SourceModule| <f1> appnope._dummy",shape="record"];
	"ipykernel.debugger" [label="<f0> SourceModule| <f1> ipykernel.debugger",shape="record"];
	"'_pydevd_bundle.pydevd_api'" [label="<f0> MissingModule| <f1> '_pydevd_bundle.pydevd_api'",shape="record"];
	"'_pydevd_bundle.pydevd_suspended_frames'" [label="<f0> MissingModule| <f1> '_pydevd_bundle.pydevd_suspended_frames'",shape="record"];
	"_pydevd_bundle" [label="<f0> MissingModule| <f1> _pydevd_bundle",shape="record"];
	"debugpy.server.api" [label="<f0> SourceModule| <f1> debugpy.server.api",shape="record"];
	"debugpy.common.util" [label="<f0> SourceModule| <f1> debugpy.common.util",shape="record"];
	"pydevd_file_utils" [label="<f0> MissingModule| <f1> pydevd_file_utils",shape="record"];
	"'_pydevd_bundle.pydevd_constants'" [label="<f0> MissingModule| <f1> '_pydevd_bundle.pydevd_constants'",shape="record"];
	"debugpy.common.sockets" [label="<f0> SourceModule| <f1> debugpy.common.sockets",shape="record"];
	"debugpy.common.log" [label="<f0> SourceModule| <f1> debugpy.common.log",shape="record"];
	"debugpy.common.timestamp" [label="<f0> SourceModule| <f1> debugpy.common.timestamp",shape="record"];
	"debugpy.common.json" [label="<f0> SourceModule| <f1> debugpy.common.json",shape="record"];
	"debugpy.common" [label="<f0> Package| <f1> debugpy.common",shape="record"];
	"debugpy.adapter" [label="<f0> Package| <f1> debugpy.adapter",shape="record"];
	"debugpy" [label="<f0> Package| <f1> debugpy",shape="record"];
	"debugpy.public_api" [label="<f0> SourceModule| <f1> debugpy.public_api",shape="record"];
	"debugpy._version" [label="<f0> SourceModule| <f1> debugpy._version",shape="record"];
	"pydevd" [label="<f0> MissingModule| <f1> pydevd",shape="record"];
	"debugpy.server" [label="<f0> Package| <f1> debugpy.server",shape="record"];
	"debugpy._vendored.force_pydevd" [label="<f0> SourceModule| <f1> debugpy._vendored.force_pydevd",shape="record"];
	"debugpy._vendored" [label="<f0> Package| <f1> debugpy._vendored",shape="record"];
	"debugpy._vendored._util" [label="<f0> SourceModule| <f1> debugpy._vendored._util",shape="record"];
	"jupyter_client.jsonutil" [label="<f0> SourceModule| <f1> jupyter_client.jsonutil",shape="record"];
	"zmq.utils.jsonapi" [label="<f0> SourceModule| <f1> zmq.utils.jsonapi",shape="record"];
	"zmq.utils" [label="<f0> Package| <f1> zmq.utils",shape="record"];
	"tornado.queues" [label="<f0> SourceModule| <f1> tornado.queues",shape="record"];
	"tornado.locks" [label="<f0> SourceModule| <f1> tornado.locks",shape="record"];
	"ipykernel.kernelbase" [label="<f0> SourceModule| <f1> ipykernel.kernelbase",shape="record"];
	"ipykernel.compiler" [label="<f0> SourceModule| <f1> ipykernel.compiler",shape="record"];
	"ipykernel.comm.manager" [label="<f0> SourceModule| <f1> ipykernel.comm.manager",shape="record"];
	"ipykernel.comm" [label="<f0> Package| <f1> ipykernel.comm",shape="record"];
	"comm.base_comm" [label="<f0> SourceModule| <f1> comm.base_comm",shape="record"];
	"ipykernel.comm.comm" [label="<f0> SourceModule| <f1> ipykernel.comm.comm",shape="record"];
	"comm" [label="<f0> Package| <f1> comm",shape="record"];
	"ipykernel.iostream" [label="<f0> SourceModule| <f1> ipykernel.iostream",shape="record"];
	"ipykernel.heartbeat" [label="<f0> SourceModule| <f1> ipykernel.heartbeat",shape="record"];
	"ipykernel.control" [label="<f0> SourceModule| <f1> ipykernel.control",shape="record"];
	"ipykernel.connect" [label="<f0> SourceModule| <f1> ipykernel.connect",shape="record"];
	"zmq.eventloop.zmqstream" [label="<f0> SourceModule| <f1> zmq.eventloop.zmqstream",shape="record"];
	"zmq.eventloop" [label="<f0> Package| <f1> zmq.eventloop",shape="record"];
	"jupyter_core.paths" [label="<f0> SourceModule| <f1> jupyter_core.paths",shape="record"];
	"win32security" [label="<f0> MissingModule| <f1> win32security",shape="record"];
	"ntsecuritycon" [label="<f0> MissingModule| <f1> ntsecuritycon",shape="record"];
	"jupyter_client.session" [label="<f0> SourceModule| <f1> jupyter_client.session",shape="record"];
	"jupyter_client.adapter" [label="<f0> SourceModule| <f1> jupyter_client.adapter",shape="record"];
	"jupyter_client.connect" [label="<f0> SourceModule| <f1> jupyter_client.connect",shape="record"];
	"jupyter_client.ssh.tunnel" [label="<f0> SourceModule| <f1> jupyter_client.ssh.tunnel",shape="record"];
	"jupyter_client.ssh.forward" [label="<f0> SourceModule| <f1> jupyter_client.ssh.forward",shape="record"];
	"paramiko" [label="<f0> MissingModule| <f1> paramiko",shape="record"];
	"jupyter_client.ssh" [label="<f0> Package| <f1> jupyter_client.ssh",shape="record"];
	"zmq" [label="<f0> Package| <f1> zmq",shape="record"];
	"zmq.backend.cython._zmq" [label="<f0> Extension| <f1> zmq.backend.cython._zmq",shape="record"];
	"'cython.cimports'" [label="<f0> MissingModule| <f1> 'cython.cimports'",shape="record"];
	"zmq.backend.cython" [label="<f0> Package| <f1> zmq.backend.cython",shape="record"];
	"zmq.utils.garbage" [label="<f0> SourceModule| <f1> zmq.utils.garbage",shape="record"];
	"zmq.green" [label="<f0> Package| <f1> zmq.green",shape="record"];
	"zmq.green.device" [label="<f0> SourceModule| <f1> zmq.green.device",shape="record"];
	"zmq.green.poll" [label="<f0> SourceModule| <f1> zmq.green.poll",shape="record"];
	"gevent" [label="<f0> MissingModule| <f1> gevent",shape="record"];
	"zmq.green.core" [label="<f0> SourceModule| <f1> zmq.green.core",shape="record"];
	"'gevent.core'" [label="<f0> MissingModule| <f1> 'gevent.core'",shape="record"];
	"'gevent.hub'" [label="<f0> MissingModule| <f1> 'gevent.hub'",shape="record"];
	"'gevent.event'" [label="<f0> MissingModule| <f1> 'gevent.event'",shape="record"];
	"zmq.sugar" [label="<f0> Package| <f1> zmq.sugar",shape="record"];
	"zmq.sugar.stopwatch" [label="<f0> SourceModule| <f1> zmq.sugar.stopwatch",shape="record"];
	"zmq.sugar.version" [label="<f0> SourceModule| <f1> zmq.sugar.version",shape="record"];
	"zmq.backend.zmq_version_info" [label="<f0> MissingModule| <f1> zmq.backend.zmq_version_info",shape="record"];
	"zmq.sugar.tracker" [label="<f0> SourceModule| <f1> zmq.sugar.tracker",shape="record"];
	"zmq.backend.Frame" [label="<f0> MissingModule| <f1> zmq.backend.Frame",shape="record"];
	"zmq.sugar.socket" [label="<f0> SourceModule| <f1> zmq.sugar.socket",shape="record"];
	"zmq.sugar.attrsettr" [label="<f0> SourceModule| <f1> zmq.sugar.attrsettr",shape="record"];
	"zmq.utils.interop" [label="<f0> SourceModule| <f1> zmq.utils.interop",shape="record"];
	"cffi" [label="<f0> Package| <f1> cffi",shape="record"];
	"cffi.error" [label="<f0> SourceModule| <f1> cffi.error",shape="record"];
	"cffi.api" [label="<f0> SourceModule| <f1> cffi.api",shape="record"];
	"cffi.recompiler" [label="<f0> SourceModule| <f1> cffi.recompiler",shape="record"];
	"cffi.cffi_opcode" [label="<f0> SourceModule| <f1> cffi.cffi_opcode",shape="record"];
	"cffi._shimmed_dist_utils" [label="<f0> SourceModule| <f1> cffi._shimmed_dist_utils",shape="record"];
	"cffi.verifier" [label="<f0> SourceModule| <f1> cffi.verifier",shape="record"];
	"_cffi_backend" [label="<f0> Extension| <f1> _cffi_backend",shape="record"];
	"collections.Callable" [label="<f0> MissingModule| <f1> collections.Callable",shape="record"];
	"cffi.lock" [label="<f0> SourceModule| <f1> cffi.lock",shape="record"];
	"dummy_thread" [label="<f0> MissingModule| <f1> dummy_thread",shape="record"];
	"thread" [label="<f0> MissingModule| <f1> thread",shape="record"];
	"cffi.pkgconfig" [label="<f0> SourceModule| <f1> cffi.pkgconfig",shape="record"];
	"cffi.vengine_cpy" [label="<f0> SourceModule| <f1> cffi.vengine_cpy",shape="record"];
	"cffi._imp_emulation" [label="<f0> SourceModule| <f1> cffi._imp_emulation",shape="record"];
	"cffi.vengine_gen" [label="<f0> SourceModule| <f1> cffi.vengine_gen",shape="record"];
	"cffi.ffiplatform" [label="<f0> SourceModule| <f1> cffi.ffiplatform",shape="record"];
	"cStringIO" [label="<f0> MissingModule| <f1> cStringIO",shape="record"];
	"cffi.cparser" [label="<f0> SourceModule| <f1> cffi.cparser",shape="record"];
	"pycparser.lextab" [label="<f0> SourceModule| <f1> pycparser.lextab",shape="record"];
	"pycparser.yacctab" [label="<f0> SourceModule| <f1> pycparser.yacctab",shape="record"];
	"pycparser" [label="<f0> Package| <f1> pycparser",shape="record"];
	"pycparser.c_parser" [label="<f0> SourceModule| <f1> pycparser.c_parser",shape="record"];
	"pycparser.ast_transforms" [label="<f0> SourceModule| <f1> pycparser.ast_transforms",shape="record"];
	"pycparser.plyparser" [label="<f0> SourceModule| <f1> pycparser.plyparser",shape="record"];
	"pycparser.c_lexer" [label="<f0> SourceModule| <f1> pycparser.c_lexer",shape="record"];
	"pycparser.ply.lex" [label="<f0> SourceModule| <f1> pycparser.ply.lex",shape="record"];
	"pycparser.ply.yacc" [label="<f0> SourceModule| <f1> pycparser.ply.yacc",shape="record"];
	"cPickle" [label="<f0> MissingModule| <f1> cPickle",shape="record"];
	"pycparser.ply" [label="<f0> Package| <f1> pycparser.ply",shape="record"];
	"pycparser.c_ast" [label="<f0> SourceModule| <f1> pycparser.c_ast",shape="record"];
	"cffi.commontypes" [label="<f0> SourceModule| <f1> cffi.commontypes",shape="record"];
	"cffi._pycparser" [label="<f0> MissingModule| <f1> cffi._pycparser",shape="record"];
	"cffi.model" [label="<f0> SourceModule| <f1> cffi.model",shape="record"];
	"zmq.backend.Socket" [label="<f0> MissingModule| <f1> zmq.backend.Socket",shape="record"];
	"zmq._typing" [label="<f0> SourceModule| <f1> zmq._typing",shape="record"];
	"zmq.sugar.poll" [label="<f0> SourceModule| <f1> zmq.sugar.poll",shape="record"];
	"zmq.backend.zmq_poll" [label="<f0> MissingModule| <f1> zmq.backend.zmq_poll",shape="record"];
	"zmq.sugar.frame" [label="<f0> SourceModule| <f1> zmq.sugar.frame",shape="record"];
	"zmq.sugar.context" [label="<f0> SourceModule| <f1> zmq.sugar.context",shape="record"];
	"pyczmq" [label="<f0> MissingModule| <f1> pyczmq",shape="record"];
	"zmq.backend.Context" [label="<f0> MissingModule| <f1> zmq.backend.Context",shape="record"];
	"zmq.backend.proxy" [label="<f0> MissingModule| <f1> zmq.backend.proxy",shape="record"];
	"zmq.ZMQError" [label="<f0> MissingModule| <f1> zmq.ZMQError",shape="record"];
	"zmq.error" [label="<f0> SourceModule| <f1> zmq.error",shape="record"];
	"zmq.backend.zmq_errno" [label="<f0> MissingModule| <f1> zmq.backend.zmq_errno",shape="record"];
	"zmq.backend.strerror" [label="<f0> MissingModule| <f1> zmq.backend.strerror",shape="record"];
	"zmq.zmq_version_info" [label="<f0> MissingModule| <f1> zmq.zmq_version_info",shape="record"];
	"zmq.zmq_version" [label="<f0> MissingModule| <f1> zmq.zmq_version",shape="record"];
	"zmq.constants" [label="<f0> SourceModule| <f1> zmq.constants",shape="record"];
	"zmq.backend" [label="<f0> Package| <f1> zmq.backend",shape="record"];
	"zmq.backend.select" [label="<f0> SourceModule| <f1> zmq.backend.select",shape="record"];
	"ipykernel.embed" [label="<f0> SourceModule| <f1> ipykernel.embed",shape="record"];
	"IPython.utils.frame" [label="<f0> SourceModule| <f1> IPython.utils.frame",shape="record"];
	"IPython.core.display_functions" [label="<f0> SourceModule| <f1> IPython.core.display_functions",shape="record"];
	"rich.align" [label="<f0> SourceModule| <f1> rich.align",shape="record"];
	"rich.panel" [label="<f0> SourceModule| <f1> rich.panel",shape="record"];
	"rich._ratio" [label="<f0> SourceModule| <f1> rich._ratio",shape="record"];
	"rich._pick" [label="<f0> SourceModule| <f1> rich._pick",shape="record"];
	"rich._loop" [label="<f0> SourceModule| <f1> rich._loop",shape="record"];
	"rich.errors" [label="<f0> SourceModule| <f1> rich.errors",shape="record"];
	"rich.box" [label="<f0> SourceModule| <f1> rich.box",shape="record"];
	"rich" [label="<f0> Package| <f1> rich",shape="record"];
	"rich.filesize" [label="<f0> SourceModule| <f1> rich.filesize",shape="record"];
	"rich._inspect" [label="<f0> SourceModule| <f1> rich._inspect",shape="record"];
	"rich.pretty" [label="<f0> SourceModule| <f1> rich.pretty",shape="record"];
	"rich.abc" [label="<f0> SourceModule| <f1> rich.abc",shape="record"];
	"rich._extension" [label="<f0> SourceModule| <f1> rich._extension",shape="record"];
	"rich.traceback" [label="<f0> SourceModule| <f1> rich.traceback",shape="record"];
	"rich.theme" [label="<f0> SourceModule| <f1> rich.theme",shape="record"];
	"rich.default_styles" [label="<f0> SourceModule| <f1> rich.default_styles",shape="record"];
	"rich.scope" [label="<f0> SourceModule| <f1> rich.scope",shape="record"];
	"rich.themes" [label="<f0> SourceModule| <f1> rich.themes",shape="record"];
	"rich.syntax" [label="<f0> SourceModule| <f1> rich.syntax",shape="record"];
	"rich.progress" [label="<f0> SourceModule| <f1> rich.progress",shape="record"];
	"rich.rule" [label="<f0> SourceModule| <f1> rich.rule",shape="record"];
	"rich.spinner" [label="<f0> SourceModule| <f1> rich.spinner",shape="record"];
	"rich._spinners" [label="<f0> SourceModule| <f1> rich._spinners",shape="record"];
	"rich.progress_bar" [label="<f0> SourceModule| <f1> rich.progress_bar",shape="record"];
	"rich.live" [label="<f0> SourceModule| <f1> rich.live",shape="record"];
	"ipywidgets" [label="<f0> Package| <f1> ipywidgets",shape="record"];
	"ipywidgets.widgets" [label="<f0> Package| <f1> ipywidgets.widgets",shape="record"];
	"ipywidgets.widgets.widget_upload" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_upload",shape="record"];
	"ipywidgets.widgets.widget_description" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_description",shape="record"];
	"ipywidgets.widgets.utils" [label="<f0> SourceModule| <f1> ipywidgets.widgets.utils",shape="record"];
	"ipywidgets.widgets.widget_templates" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_templates",shape="record"];
	"ipywidgets.widgets.docutils" [label="<f0> SourceModule| <f1> ipywidgets.widgets.docutils",shape="record"];
	"ipywidgets.widgets.widget_style" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_style",shape="record"];
	"ipywidgets.widgets.widget_tagsinput" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_tagsinput",shape="record"];
	"ipywidgets.widgets.widget_media" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_media",shape="record"];
	"ipywidgets.widgets.widget_layout" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_layout",shape="record"];
	"ipywidgets.widgets.widget_link" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_link",shape="record"];
	"ipywidgets.widgets.interaction" [label="<f0> SourceModule| <f1> ipywidgets.widgets.interaction",shape="record"];
	"ipywidgets.widgets.widget_controller" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_controller",shape="record"];
	"ipywidgets.widgets.widget_string" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_string",shape="record"];
	"ipywidgets.widgets.widget_selectioncontainer" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_selectioncontainer",shape="record"];
	"ipywidgets.widgets.widget_selection" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_selection",shape="record"];
	"ipywidgets.widgets.widget_output" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_output",shape="record"];
	"ipywidgets.widgets.widget_time" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_time",shape="record"];
	"ipywidgets.widgets.widget_datetime" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_datetime",shape="record"];
	"ipywidgets.widgets.widget_date" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_date",shape="record"];
	"ipywidgets.widgets.widget_color" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_color",shape="record"];
	"ipywidgets.widgets.widget_int" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_int",shape="record"];
	"ipywidgets.widgets.widget_float" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_float",shape="record"];
	"ipywidgets.widgets.widget_box" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_box",shape="record"];
	"ipywidgets.widgets.widget_button" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_button",shape="record"];
	"ipywidgets.widgets.widget_bool" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_bool",shape="record"];
	"ipywidgets.widgets.widget_core" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget_core",shape="record"];
	"ipywidgets.widgets.trait_types" [label="<f0> SourceModule| <f1> ipywidgets.widgets.trait_types",shape="record"];
	"ipywidgets.widgets.valuewidget" [label="<f0> SourceModule| <f1> ipywidgets.widgets.valuewidget",shape="record"];
	"ipywidgets.widgets.domwidget" [label="<f0> SourceModule| <f1> ipywidgets.widgets.domwidget",shape="record"];
	"ipywidgets.widgets.widget" [label="<f0> SourceModule| <f1> ipywidgets.widgets.widget",shape="record"];
	"ipywidgets.comm" [label="<f0> SourceModule| <f1> ipywidgets.comm",shape="record"];
	"ipywidgets._version" [label="<f0> SourceModule| <f1> ipywidgets._version",shape="record"];
	"rich.screen" [label="<f0> SourceModule| <f1> rich.screen",shape="record"];
	"rich.live_render" [label="<f0> SourceModule| <f1> rich.live_render",shape="record"];
	"rich.file_proxy" [label="<f0> SourceModule| <f1> rich.file_proxy",shape="record"];
	"rich.markup" [label="<f0> SourceModule| <f1> rich.markup",shape="record"];
	"rich.console" [label="<f0> SourceModule| <f1> rich.console",shape="record"];
	"rich._windows_renderer" [label="<f0> SourceModule| <f1> rich._windows_renderer",shape="record"];
	"rich._win32_console" [label="<f0> SourceModule| <f1> rich._win32_console",shape="record"];
	"rich.json" [label="<f0> SourceModule| <f1> rich.json",shape="record"];
	"rich.status" [label="<f0> SourceModule| <f1> rich.status",shape="record"];
	"rich._windows" [label="<f0> SourceModule| <f1> rich._windows",shape="record"];
	"rich.styled" [label="<f0> SourceModule| <f1> rich.styled",shape="record"];
	"rich.region" [label="<f0> SourceModule| <f1> rich.region",shape="record"];
	"rich.pager" [label="<f0> SourceModule| <f1> rich.pager",shape="record"];
	"rich.__main__" [label="<f0> SourceModule| <f1> rich.__main__",shape="record"];
	"rich.markdown" [label="<f0> SourceModule| <f1> rich.markdown",shape="record"];
	"rich._stack" [label="<f0> SourceModule| <f1> rich._stack",shape="record"];
	"markdown_it.token" [label="<f0> SourceModule| <f1> markdown_it.token",shape="record"];
	"markdown_it._compat" [label="<f0> SourceModule| <f1> markdown_it._compat",shape="record"];
	"markdown_it" [label="<f0> Package| <f1> markdown_it",shape="record"];
	"markdown_it.main" [label="<f0> SourceModule| <f1> markdown_it.main",shape="record"];
	"linkify_it" [label="<f0> MissingModule| <f1> linkify_it",shape="record"];
	"markdown_it.utils" [label="<f0> SourceModule| <f1> markdown_it.utils",shape="record"];
	"markdown_it.rules_core.state_core" [label="<f0> SourceModule| <f1> markdown_it.rules_core.state_core",shape="record"];
	"markdown_it.rules_core" [label="<f0> Package| <f1> markdown_it.rules_core",shape="record"];
	"markdown_it.rules_core.text_join" [label="<f0> SourceModule| <f1> markdown_it.rules_core.text_join",shape="record"];
	"markdown_it.rules_core.smartquotes" [label="<f0> SourceModule| <f1> markdown_it.rules_core.smartquotes",shape="record"];
	"markdown_it.rules_core.replacements" [label="<f0> SourceModule| <f1> markdown_it.rules_core.replacements",shape="record"];
	"markdown_it.rules_core.normalize" [label="<f0> SourceModule| <f1> markdown_it.rules_core.normalize",shape="record"];
	"markdown_it.rules_core.linkify" [label="<f0> SourceModule| <f1> markdown_it.rules_core.linkify",shape="record"];
	"markdown_it.rules_core.inline" [label="<f0> SourceModule| <f1> markdown_it.rules_core.inline",shape="record"];
	"markdown_it.rules_core.block" [label="<f0> SourceModule| <f1> markdown_it.rules_core.block",shape="record"];
	"markdown_it.ruler" [label="<f0> SourceModule| <f1> markdown_it.ruler",shape="record"];
	"markdown_it.renderer" [label="<f0> SourceModule| <f1> markdown_it.renderer",shape="record"];
	"markdown_it.parser_inline" [label="<f0> SourceModule| <f1> markdown_it.parser_inline",shape="record"];
	"markdown_it.rules_inline.state_inline" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.state_inline",shape="record"];
	"markdown_it.rules_inline" [label="<f0> Package| <f1> markdown_it.rules_inline",shape="record"];
	"markdown_it.rules_inline.text" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.text",shape="record"];
	"markdown_it.rules_inline.newline" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.newline",shape="record"];
	"markdown_it.rules_inline.linkify" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.linkify",shape="record"];
	"markdown_it.rules_inline.link" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.link",shape="record"];
	"markdown_it.rules_inline.image" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.image",shape="record"];
	"markdown_it.rules_inline.html_inline" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.html_inline",shape="record"];
	"markdown_it.common.html_re" [label="<f0> SourceModule| <f1> markdown_it.common.html_re",shape="record"];
	"markdown_it.rules_inline.fragments_join" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.fragments_join",shape="record"];
	"markdown_it.rules_inline.escape" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.escape",shape="record"];
	"markdown_it.rules_inline.entity" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.entity",shape="record"];
	"markdown_it.common.entities" [label="<f0> SourceModule| <f1> markdown_it.common.entities",shape="record"];
	"markdown_it.rules_inline.balance_pairs" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.balance_pairs",shape="record"];
	"markdown_it.rules_inline.backticks" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.backticks",shape="record"];
	"markdown_it.rules_inline.autolink" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.autolink",shape="record"];
	"markdown_it.rules_inline.strikethrough" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.strikethrough",shape="record"];
	"markdown_it.rules_inline.emphasis" [label="<f0> SourceModule| <f1> markdown_it.rules_inline.emphasis",shape="record"];
	"markdown_it.parser_core" [label="<f0> SourceModule| <f1> markdown_it.parser_core",shape="record"];
	"markdown_it.parser_block" [label="<f0> SourceModule| <f1> markdown_it.parser_block",shape="record"];
	"markdown_it.rules_block.state_block" [label="<f0> SourceModule| <f1> markdown_it.rules_block.state_block",shape="record"];
	"markdown_it.common.utils" [label="<f0> SourceModule| <f1> markdown_it.common.utils",shape="record"];
	"markdown_it.common.normalize_url" [label="<f0> SourceModule| <f1> markdown_it.common.normalize_url",shape="record"];
	"mdurl" [label="<f0> Package| <f1> mdurl",shape="record"];
	"mdurl._url" [label="<f0> SourceModule| <f1> mdurl._url",shape="record"];
	"mdurl._parse" [label="<f0> SourceModule| <f1> mdurl._parse",shape="record"];
	"mdurl._format" [label="<f0> SourceModule| <f1> mdurl._format",shape="record"];
	"mdurl._encode" [label="<f0> SourceModule| <f1> mdurl._encode",shape="record"];
	"mdurl._decode" [label="<f0> SourceModule| <f1> mdurl._decode",shape="record"];
	"markdown_it.common" [label="<f0> Package| <f1> markdown_it.common",shape="record"];
	"markdown_it.rules_block" [label="<f0> Package| <f1> markdown_it.rules_block",shape="record"];
	"markdown_it.rules_block.table" [label="<f0> SourceModule| <f1> markdown_it.rules_block.table",shape="record"];
	"markdown_it.rules_block.reference" [label="<f0> SourceModule| <f1> markdown_it.rules_block.reference",shape="record"];
	"markdown_it.rules_block.paragraph" [label="<f0> SourceModule| <f1> markdown_it.rules_block.paragraph",shape="record"];
	"markdown_it.rules_block.list" [label="<f0> SourceModule| <f1> markdown_it.rules_block.list",shape="record"];
	"markdown_it.rules_block.lheading" [label="<f0> SourceModule| <f1> markdown_it.rules_block.lheading",shape="record"];
	"markdown_it.rules_block.html_block" [label="<f0> SourceModule| <f1> markdown_it.rules_block.html_block",shape="record"];
	"markdown_it.common.html_blocks" [label="<f0> SourceModule| <f1> markdown_it.common.html_blocks",shape="record"];
	"markdown_it.rules_block.hr" [label="<f0> SourceModule| <f1> markdown_it.rules_block.hr",shape="record"];
	"markdown_it.rules_block.heading" [label="<f0> SourceModule| <f1> markdown_it.rules_block.heading",shape="record"];
	"markdown_it.rules_block.fence" [label="<f0> SourceModule| <f1> markdown_it.rules_block.fence",shape="record"];
	"markdown_it.rules_block.code" [label="<f0> SourceModule| <f1> markdown_it.rules_block.code",shape="record"];
	"markdown_it.rules_block.blockquote" [label="<f0> SourceModule| <f1> markdown_it.rules_block.blockquote",shape="record"];
	"markdown_it._punycode" [label="<f0> SourceModule| <f1> markdown_it._punycode",shape="record"];
	"markdown_it.presets" [label="<f0> Package| <f1> markdown_it.presets",shape="record"];
	"markdown_it.presets.zero" [label="<f0> SourceModule| <f1> markdown_it.presets.zero",shape="record"];
	"markdown_it.presets.default" [label="<f0> SourceModule| <f1> markdown_it.presets.default",shape="record"];
	"markdown_it.presets.commonmark" [label="<f0> SourceModule| <f1> markdown_it.presets.commonmark",shape="record"];
	"markdown_it.helpers" [label="<f0> Package| <f1> markdown_it.helpers",shape="record"];
	"markdown_it.helpers.parse_link_title" [label="<f0> SourceModule| <f1> markdown_it.helpers.parse_link_title",shape="record"];
	"markdown_it.helpers.parse_link_label" [label="<f0> SourceModule| <f1> markdown_it.helpers.parse_link_label",shape="record"];
	"markdown_it.helpers.parse_link_destination" [label="<f0> SourceModule| <f1> markdown_it.helpers.parse_link_destination",shape="record"];
	"rich._log_render" [label="<f0> SourceModule| <f1> rich._log_render",shape="record"];
	"rich._fileno" [label="<f0> SourceModule| <f1> rich._fileno",shape="record"];
	"rich._export_format" [label="<f0> SourceModule| <f1> rich._export_format",shape="record"];
	"rich._null_file" [label="<f0> SourceModule| <f1> rich._null_file",shape="record"];
	"pygments.util" [label="<f0> SourceModule| <f1> pygments.util",shape="record"];
	"pygments.lexers" [label="<f0> Package| <f1> pygments.lexers",shape="record"];
	"pygments.modeline" [label="<f0> SourceModule| <f1> pygments.modeline",shape="record"];
	"httpcore" [label="<f0> Package| <f1> httpcore",shape="record"];
	"httpcore._backends.trio" [label="<f0> SourceModule| <f1> httpcore._backends.trio",shape="record"];
	"httpcore._backends" [label="<f0> Package| <f1> httpcore._backends",shape="record"];
	"httpcore._backends.anyio" [label="<f0> SourceModule| <f1> httpcore._backends.anyio",shape="record"];
	"httpcore._utils" [label="<f0> SourceModule| <f1> httpcore._utils",shape="record"];
	"anyio" [label="<f0> Package| <f1> anyio",shape="record"];
	"anyio._backends._trio" [label="<f0> SourceModule| <f1> anyio._backends._trio",shape="record"];
	"'trio.testing'" [label="<f0> MissingModule| <f1> 'trio.testing'",shape="record"];
	"anyio.streams.memory" [label="<f0> SourceModule| <f1> anyio.streams.memory",shape="record"];
	"anyio.streams" [label="<f0> Package| <f1> anyio.streams",shape="record"];
	"anyio.lowlevel" [label="<f0> SourceModule| <f1> anyio.lowlevel",shape="record"];
	"anyio.abc._eventloop" [label="<f0> SourceModule| <f1> anyio.abc._eventloop",shape="record"];
	"anyio.abc._testing" [label="<f0> SourceModule| <f1> anyio.abc._testing",shape="record"];
	"anyio.abc._tasks" [label="<f0> SourceModule| <f1> anyio.abc._tasks",shape="record"];
	"anyio.abc._subprocesses" [label="<f0> SourceModule| <f1> anyio.abc._subprocesses",shape="record"];
	"anyio.abc._streams" [label="<f0> SourceModule| <f1> anyio.abc._streams",shape="record"];
	"anyio.abc._resources" [label="<f0> SourceModule| <f1> anyio.abc._resources",shape="record"];
	"anyio.abc._sockets" [label="<f0> SourceModule| <f1> anyio.abc._sockets",shape="record"];
	"anyio.from_thread" [label="<f0> SourceModule| <f1> anyio.from_thread",shape="record"];
	"anyio._core" [label="<f0> Package| <f1> anyio._core",shape="record"];
	"anyio.abc" [label="<f0> Package| <f1> anyio.abc",shape="record"];
	"'trio.to_thread'" [label="<f0> MissingModule| <f1> 'trio.to_thread'",shape="record"];
	"'trio.socket'" [label="<f0> MissingModule| <f1> 'trio.socket'",shape="record"];
	"outcome" [label="<f0> MissingModule| <f1> outcome",shape="record"];
	"'trio.lowlevel'" [label="<f0> MissingModule| <f1> 'trio.lowlevel'",shape="record"];
	"'trio.from_thread'" [label="<f0> MissingModule| <f1> 'trio.from_thread'",shape="record"];
	"anyio._backends._asyncio" [label="<f0> SourceModule| <f1> anyio._backends._asyncio",shape="record"];
	"anyio._backends" [label="<f0> Package| <f1> anyio._backends",shape="record"];
	"anyio._core._typedattr" [label="<f0> SourceModule| <f1> anyio._core._typedattr",shape="record"];
	"anyio._core._testing" [label="<f0> SourceModule| <f1> anyio._core._testing",shape="record"];
	"anyio._core._tasks" [label="<f0> SourceModule| <f1> anyio._core._tasks",shape="record"];
	"anyio._core._synchronization" [label="<f0> SourceModule| <f1> anyio._core._synchronization",shape="record"];
	"anyio._core._subprocesses" [label="<f0> SourceModule| <f1> anyio._core._subprocesses",shape="record"];
	"anyio._core._streams" [label="<f0> SourceModule| <f1> anyio._core._streams",shape="record"];
	"anyio._core._sockets" [label="<f0> SourceModule| <f1> anyio._core._sockets",shape="record"];
	"anyio.streams.tls" [label="<f0> SourceModule| <f1> anyio.streams.tls",shape="record"];
	"anyio.streams.stapled" [label="<f0> SourceModule| <f1> anyio.streams.stapled",shape="record"];
	"anyio._core._signals" [label="<f0> SourceModule| <f1> anyio._core._signals",shape="record"];
	"anyio._core._resources" [label="<f0> SourceModule| <f1> anyio._core._resources",shape="record"];
	"anyio._core._fileio" [label="<f0> SourceModule| <f1> anyio._core._fileio",shape="record"];
	"anyio._core._exceptions" [label="<f0> SourceModule| <f1> anyio._core._exceptions",shape="record"];
	"anyio._core._eventloop" [label="<f0> SourceModule| <f1> anyio._core._eventloop",shape="record"];
	"anyio.to_thread" [label="<f0> SourceModule| <f1> anyio.to_thread",shape="record"];
	"httpcore._sync" [label="<f0> Package| <f1> httpcore._sync",shape="record"];
	"httpcore._sync.socks_proxy" [label="<f0> SourceModule| <f1> httpcore._sync.socks_proxy",shape="record"];
	"httpcore._trace" [label="<f0> SourceModule| <f1> httpcore._trace",shape="record"];
	"httpcore._synchronization" [label="<f0> SourceModule| <f1> httpcore._synchronization",shape="record"];
	"socksio" [label="<f0> MissingModule| <f1> socksio",shape="record"];
	"httpcore._sync.http2" [label="<f0> SourceModule| <f1> httpcore._sync.http2",shape="record"];
	"'h2.settings'" [label="<f0> MissingModule| <f1> 'h2.settings'",shape="record"];
	"'h2.exceptions'" [label="<f0> MissingModule| <f1> 'h2.exceptions'",shape="record"];
	"'h2.events'" [label="<f0> MissingModule| <f1> 'h2.events'",shape="record"];
	"'h2.connection'" [label="<f0> MissingModule| <f1> 'h2.connection'",shape="record"];
	"h2" [label="<f0> MissingModule| <f1> h2",shape="record"];
	"httpcore._sync.interfaces" [label="<f0> SourceModule| <f1> httpcore._sync.interfaces",shape="record"];
	"httpcore._sync.http_proxy" [label="<f0> SourceModule| <f1> httpcore._sync.http_proxy",shape="record"];
	"httpcore._sync.http11" [label="<f0> SourceModule| <f1> httpcore._sync.http11",shape="record"];
	"h11" [label="<f0> Package| <f1> h11",shape="record"];
	"h11._version" [label="<f0> SourceModule| <f1> h11._version",shape="record"];
	"h11._util" [label="<f0> SourceModule| <f1> h11._util",shape="record"];
	"h11._state" [label="<f0> SourceModule| <f1> h11._state",shape="record"];
	"h11._events" [label="<f0> SourceModule| <f1> h11._events",shape="record"];
	"h11._headers" [label="<f0> SourceModule| <f1> h11._headers",shape="record"];
	"h11._abnf" [label="<f0> SourceModule| <f1> h11._abnf",shape="record"];
	"h11._connection" [label="<f0> SourceModule| <f1> h11._connection",shape="record"];
	"h11._writers" [label="<f0> SourceModule| <f1> h11._writers",shape="record"];
	"h11._receivebuffer" [label="<f0> SourceModule| <f1> h11._receivebuffer",shape="record"];
	"h11._readers" [label="<f0> SourceModule| <f1> h11._readers",shape="record"];
	"httpcore._sync.connection_pool" [label="<f0> SourceModule| <f1> httpcore._sync.connection_pool",shape="record"];
	"httpcore._sync.connection" [label="<f0> SourceModule| <f1> httpcore._sync.connection",shape="record"];
	"httpcore._ssl" [label="<f0> SourceModule| <f1> httpcore._ssl",shape="record"];
	"httpcore._models" [label="<f0> SourceModule| <f1> httpcore._models",shape="record"];
	"httpcore._exceptions" [label="<f0> SourceModule| <f1> httpcore._exceptions",shape="record"];
	"httpcore._backends.sync" [label="<f0> SourceModule| <f1> httpcore._backends.sync",shape="record"];
	"httpcore._backends.mock" [label="<f0> SourceModule| <f1> httpcore._backends.mock",shape="record"];
	"httpcore._backends.base" [label="<f0> SourceModule| <f1> httpcore._backends.base",shape="record"];
	"httpcore._async" [label="<f0> Package| <f1> httpcore._async",shape="record"];
	"httpcore._async.socks_proxy" [label="<f0> SourceModule| <f1> httpcore._async.socks_proxy",shape="record"];
	"httpcore._backends.auto" [label="<f0> SourceModule| <f1> httpcore._backends.auto",shape="record"];
	"httpcore._async.http2" [label="<f0> SourceModule| <f1> httpcore._async.http2",shape="record"];
	"'h2.config'" [label="<f0> MissingModule| <f1> 'h2.config'",shape="record"];
	"httpcore._async.interfaces" [label="<f0> SourceModule| <f1> httpcore._async.interfaces",shape="record"];
	"httpcore._async.http_proxy" [label="<f0> SourceModule| <f1> httpcore._async.http_proxy",shape="record"];
	"httpcore._async.http11" [label="<f0> SourceModule| <f1> httpcore._async.http11",shape="record"];
	"httpcore._async.connection_pool" [label="<f0> SourceModule| <f1> httpcore._async.connection_pool",shape="record"];
	"httpcore._async.connection" [label="<f0> SourceModule| <f1> httpcore._async.connection",shape="record"];
	"httpcore._api" [label="<f0> SourceModule| <f1> httpcore._api",shape="record"];
	"click" [label="<f0> Package| <f1> click",shape="record"];
	"httpx._urls" [label="<f0> SourceModule| <f1> httpx._urls",shape="record"];
	"httpx._utils" [label="<f0> SourceModule| <f1> httpx._utils",shape="record"];
	"httpx._urlparse" [label="<f0> SourceModule| <f1> httpx._urlparse",shape="record"];
	"httpx._types" [label="<f0> SourceModule| <f1> httpx._types",shape="record"];
	"httpx._transports.wsgi" [label="<f0> SourceModule| <f1> httpx._transports.wsgi",shape="record"];
	"httpx._transports" [label="<f0> Package| <f1> httpx._transports",shape="record"];
	"'_typeshed.wsgi'" [label="<f0> MissingModule| <f1> '_typeshed.wsgi'",shape="record"];
	"httpx._transports.mock" [label="<f0> SourceModule| <f1> httpx._transports.mock",shape="record"];
	"httpx._transports.default" [label="<f0> SourceModule| <f1> httpx._transports.default",shape="record"];
	"httpx._transports.base" [label="<f0> SourceModule| <f1> httpx._transports.base",shape="record"];
	"httpx._transports.asgi" [label="<f0> SourceModule| <f1> httpx._transports.asgi",shape="record"];
	"httpx._status_codes" [label="<f0> SourceModule| <f1> httpx._status_codes",shape="record"];
	"httpx._models" [label="<f0> SourceModule| <f1> httpx._models",shape="record"];
	"httpx._multipart" [label="<f0> SourceModule| <f1> httpx._multipart",shape="record"];
	"httpx._decoders" [label="<f0> SourceModule| <f1> httpx._decoders",shape="record"];
	"httpx._compat" [label="<f0> SourceModule| <f1> httpx._compat",shape="record"];
	"brotlicffi" [label="<f0> MissingModule| <f1> brotlicffi",shape="record"];
	"httpx._exceptions" [label="<f0> SourceModule| <f1> httpx._exceptions",shape="record"];
	"httpx._content" [label="<f0> SourceModule| <f1> httpx._content",shape="record"];
	"httpx._config" [label="<f0> SourceModule| <f1> httpx._config",shape="record"];
	"httpx._client" [label="<f0> SourceModule| <f1> httpx._client",shape="record"];
	"httpx._auth" [label="<f0> SourceModule| <f1> httpx._auth",shape="record"];
	"httpx._api" [label="<f0> SourceModule| <f1> httpx._api",shape="record"];
	"httpx.__version__" [label="<f0> SourceModule| <f1> httpx.__version__",shape="record"];
	"langsmith.run_helpers" [label="<f0> SourceModule| <f1> langsmith.run_helpers",shape="record"];
	"langsmith.env._runtime_env" [label="<f0> SourceModule| <f1> langsmith.env._runtime_env",shape="record"];
	"langchain" [label="<f0> Package| <f1> langchain",shape="record"];
	"langchain.globals" [label="<f0> SourceModule| <f1> langchain.globals",shape="record"];
	"langchain_core.caches" [label="<f0> SourceModule| <f1> langchain_core.caches",shape="record"];
	"langchain_community.vectorstores" [label="<f0> Package| <f1> langchain_community.vectorstores",shape="record"];
	"langchain_community.vectorstores.zilliz" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.zilliz",shape="record"];
	"pymilvus" [label="<f0> MissingModule| <f1> pymilvus",shape="record"];
	"langchain_core.embeddings" [label="<f0> Package| <f1> langchain_core.embeddings",shape="record"];
	"langchain_core.embeddings.fake" [label="<f0> SourceModule| <f1> langchain_core.embeddings.fake",shape="record"];
	"langchain_core.embeddings.embeddings" [label="<f0> SourceModule| <f1> langchain_core.embeddings.embeddings",shape="record"];
	"langchain_community.vectorstores.zep_cloud" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.zep_cloud",shape="record"];
	"'zep_cloud.client'" [label="<f0> MissingModule| <f1> 'zep_cloud.client'",shape="record"];
	"zep_cloud" [label="<f0> MissingModule| <f1> zep_cloud",shape="record"];
	"langchain_community.vectorstores.zep" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.zep",shape="record"];
	"zep_python" [label="<f0> MissingModule| <f1> zep_python",shape="record"];
	"'zep_python.document'" [label="<f0> MissingModule| <f1> 'zep_python.document'",shape="record"];
	"langchain_community.vectorstores.yellowbrick" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.yellowbrick",shape="record"];
	"'psycopg2.extras'" [label="<f0> MissingModule| <f1> 'psycopg2.extras'",shape="record"];
	"'psycopg2.extensions'" [label="<f0> MissingModule| <f1> 'psycopg2.extensions'",shape="record"];
	"langchain_community.docstore.document" [label="<f0> SourceModule| <f1> langchain_community.docstore.document",shape="record"];
	"langchain_community.vectorstores.weaviate" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.weaviate",shape="record"];
	"'weaviate.util'" [label="<f0> MissingModule| <f1> 'weaviate.util'",shape="record"];
	"weaviate" [label="<f0> MissingModule| <f1> weaviate",shape="record"];
	"langchain_community.vectorstores.utils" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.utils",shape="record"];
	"langchain_community.utils.math" [label="<f0> SourceModule| <f1> langchain_community.utils.math",shape="record"];
	"langchain_community.utils" [label="<f0> Package| <f1> langchain_community.utils",shape="record"];
	"simsimd" [label="<f0> MissingModule| <f1> simsimd",shape="record"];
	"langchain_community.vectorstores.vlite" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.vlite",shape="record"];
	"'vlite.utils'" [label="<f0> MissingModule| <f1> 'vlite.utils'",shape="record"];
	"vlite" [label="<f0> MissingModule| <f1> vlite",shape="record"];
	"langchain_community.vectorstores.vespa" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.vespa",shape="record"];
	"'vespa.application'" [label="<f0> MissingModule| <f1> 'vespa.application'",shape="record"];
	"langchain_community.vectorstores.vectara" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.vectara",shape="record"];
	"langchain_community.vectorstores.vearch" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.vearch",shape="record"];
	"vearch_cluster" [label="<f0> MissingModule| <f1> vearch_cluster",shape="record"];
	"vearch" [label="<f0> MissingModule| <f1> vearch",shape="record"];
	"langchain_community.vectorstores.vdms" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.vdms",shape="record"];
	"vdms" [label="<f0> MissingModule| <f1> vdms",shape="record"];
	"langchain_community.vectorstores.vald" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.vald",shape="record"];
	"'vald.v1'" [label="<f0> MissingModule| <f1> 'vald.v1'",shape="record"];
	"vald" [label="<f0> MissingModule| <f1> vald",shape="record"];
	"grpc" [label="<f0> Package| <f1> grpc",shape="record"];
	"grpc.aio" [label="<f0> Package| <f1> grpc.aio",shape="record"];
	"grpc.aio._typing" [label="<f0> SourceModule| <f1> grpc.aio._typing",shape="record"];
	"grpc.aio._server" [label="<f0> SourceModule| <f1> grpc.aio._server",shape="record"];
	"grpc.aio._metadata" [label="<f0> SourceModule| <f1> grpc.aio._metadata",shape="record"];
	"grpc.aio._interceptor" [label="<f0> SourceModule| <f1> grpc.aio._interceptor",shape="record"];
	"grpc.aio._utils" [label="<f0> SourceModule| <f1> grpc.aio._utils",shape="record"];
	"grpc.aio._channel" [label="<f0> SourceModule| <f1> grpc.aio._channel",shape="record"];
	"grpc.aio._call" [label="<f0> SourceModule| <f1> grpc.aio._call",shape="record"];
	"grpc.aio._base_server" [label="<f0> SourceModule| <f1> grpc.aio._base_server",shape="record"];
	"grpc.aio._base_channel" [label="<f0> SourceModule| <f1> grpc.aio._base_channel",shape="record"];
	"grpc.aio._base_call" [label="<f0> SourceModule| <f1> grpc.aio._base_call",shape="record"];
	"grpc_reflection" [label="<f0> MissingModule| <f1> grpc_reflection",shape="record"];
	"grpc_health" [label="<f0> MissingModule| <f1> grpc_health",shape="record"];
	"grpc_tools" [label="<f0> MissingModule| <f1> grpc_tools",shape="record"];
	"grpc._server" [label="<f0> SourceModule| <f1> grpc._server",shape="record"];
	"grpc._typing" [label="<f0> SourceModule| <f1> grpc._typing",shape="record"];
	"grpc.experimental" [label="<f0> Package| <f1> grpc.experimental",shape="record"];
	"grpc.experimental.aio" [label="<f0> Package| <f1> grpc.experimental.aio",shape="record"];
	"grpc._simple_stubs" [label="<f0> SourceModule| <f1> grpc._simple_stubs",shape="record"];
	"grpc._channel" [label="<f0> SourceModule| <f1> grpc._channel",shape="record"];
	"grpc._auth" [label="<f0> SourceModule| <f1> grpc._auth",shape="record"];
	"grpc._plugin_wrapping" [label="<f0> SourceModule| <f1> grpc._plugin_wrapping",shape="record"];
	"grpc._utilities" [label="<f0> SourceModule| <f1> grpc._utilities",shape="record"];
	"grpc._grpcio_metadata" [label="<f0> SourceModule| <f1> grpc._grpcio_metadata",shape="record"];
	"grpc._runtime_protos" [label="<f0> SourceModule| <f1> grpc._runtime_protos",shape="record"];
	"'grpc_tools.protoc'" [label="<f0> MissingModule| <f1> 'grpc_tools.protoc'",shape="record"];
	"grpc._cython.cygrpc" [label="<f0> Extension| <f1> grpc._cython.cygrpc",shape="record"];
	"grpc._cython" [label="<f0> Package| <f1> grpc._cython",shape="record"];
	"grpc._observability" [label="<f0> SourceModule| <f1> grpc._observability",shape="record"];
	"grpc._interceptor" [label="<f0> SourceModule| <f1> grpc._interceptor",shape="record"];
	"grpc._compression" [label="<f0> SourceModule| <f1> grpc._compression",shape="record"];
	"grpc._common" [label="<f0> SourceModule| <f1> grpc._common",shape="record"];
	"langchain_community.vectorstores.usearch" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.usearch",shape="record"];
	"langchain_community.docstore.in_memory" [label="<f0> SourceModule| <f1> langchain_community.docstore.in_memory",shape="record"];
	"langchain_community.docstore.base" [label="<f0> SourceModule| <f1> langchain_community.docstore.base",shape="record"];
	"langchain_community.vectorstores.upstash" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.upstash",shape="record"];
	"'upstash_vector.types'" [label="<f0> MissingModule| <f1> 'upstash_vector.types'",shape="record"];
	"upstash_vector" [label="<f0> MissingModule| <f1> upstash_vector",shape="record"];
	"langchain_community.vectorstores.typesense" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.typesense",shape="record"];
	"'typesense.exceptions'" [label="<f0> MissingModule| <f1> 'typesense.exceptions'",shape="record"];
	"'typesense.collection'" [label="<f0> MissingModule| <f1> 'typesense.collection'",shape="record"];
	"typesense" [label="<f0> MissingModule| <f1> typesense",shape="record"];
	"langchain_community.vectorstores.timescalevector" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.timescalevector",shape="record"];
	"timescale_vector" [label="<f0> MissingModule| <f1> timescale_vector",shape="record"];
	"langchain_community.vectorstores.tiledb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.tiledb",shape="record"];
	"langchain_community.vectorstores.tigris" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.tigris",shape="record"];
	"'tigrisdb.types'" [label="<f0> MissingModule| <f1> 'tigrisdb.types'",shape="record"];
	"tigrisdb" [label="<f0> MissingModule| <f1> tigrisdb",shape="record"];
	"langchain_community.vectorstores.tidb_vector" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.tidb_vector",shape="record"];
	"'tidb_vector.integrations'" [label="<f0> MissingModule| <f1> 'tidb_vector.integrations'",shape="record"];
	"tidb_vector" [label="<f0> MissingModule| <f1> tidb_vector",shape="record"];
	"langchain_community.vectorstores.thirdai_neuraldb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.thirdai_neuraldb",shape="record"];
	"pandas" [label="<f0> Package| <f1> pandas",shape="record"];
	"cmath" [label="<f0> Extension| <f1> cmath",shape="record"];
	"pandas._libs.writers" [label="<f0> Extension| <f1> pandas._libs.writers",shape="record"];
	"pandas._typing" [label="<f0> SourceModule| <f1> pandas._typing",shape="record"];
	"pandas.tseries.holiday" [label="<f0> SourceModule| <f1> pandas.tseries.holiday",shape="record"];
	"pandas.io.formats.format" [label="<f0> SourceModule| <f1> pandas.io.formats.format",shape="record"];
	"pandas.io.formats.csvs" [label="<f0> SourceModule| <f1> pandas.io.formats.csvs",shape="record"];
	"pandas.core.dtypes.generic" [label="<f0> SourceModule| <f1> pandas.core.dtypes.generic",shape="record"];
	"pandas.core.dtypes" [label="<f0> Package| <f1> pandas.core.dtypes",shape="record"];
	"pandas.core" [label="<f0> Package| <f1> pandas.core",shape="record"];
	"pandas.core.arraylike" [label="<f0> SourceModule| <f1> pandas.core.arraylike",shape="record"];
	"pandas.core.ops.common" [label="<f0> SourceModule| <f1> pandas.core.ops.common",shape="record"];
	"pandas.core.ops" [label="<f0> Package| <f1> pandas.core.ops",shape="record"];
	"pandas.core.ops.mask_ops" [label="<f0> SourceModule| <f1> pandas.core.ops.mask_ops",shape="record"];
	"pandas.core.ops.invalid" [label="<f0> SourceModule| <f1> pandas.core.ops.invalid",shape="record"];
	"pandas.core.ops.docstrings" [label="<f0> SourceModule| <f1> pandas.core.ops.docstrings",shape="record"];
	"pandas.core.ops.array_ops" [label="<f0> SourceModule| <f1> pandas.core.ops.array_ops",shape="record"];
	"pandas.core.ops.dispatch" [label="<f0> SourceModule| <f1> pandas.core.ops.dispatch",shape="record"];
	"pandas.core.computation.expressions" [label="<f0> SourceModule| <f1> pandas.core.computation.expressions",shape="record"];
	"numexpr" [label="<f0> MissingModule| <f1> numexpr",shape="record"];
	"pandas.core.computation.check" [label="<f0> SourceModule| <f1> pandas.core.computation.check",shape="record"];
	"pandas.compat._optional" [label="<f0> SourceModule| <f1> pandas.compat._optional",shape="record"];
	"pandas.util.version" [label="<f0> Package| <f1> pandas.util.version",shape="record"];
	"pandas.util" [label="<f0> Package| <f1> pandas.util",shape="record"];
	"pandas.core.util.hashing" [label="<f0> SourceModule| <f1> pandas.core.util.hashing",shape="record"];
	"pandas.core.util" [label="<f0> Package| <f1> pandas.core.util",shape="record"];
	"pandas.core.computation" [label="<f0> Package| <f1> pandas.core.computation",shape="record"];
	"pandas.core.computation.expr" [label="<f0> SourceModule| <f1> pandas.core.computation.expr",shape="record"];
	"pandas.core.computation.scope" [label="<f0> SourceModule| <f1> pandas.core.computation.scope",shape="record"];
	"pandas.core.computation.parsing" [label="<f0> SourceModule| <f1> pandas.core.computation.parsing",shape="record"];
	"pandas.core.computation.ops" [label="<f0> SourceModule| <f1> pandas.core.computation.ops",shape="record"];
	"pandas.core.computation.eval" [label="<f0> SourceModule| <f1> pandas.core.computation.eval",shape="record"];
	"pandas.core.computation.engines" [label="<f0> SourceModule| <f1> pandas.core.computation.engines",shape="record"];
	"pandas.core.computation.align" [label="<f0> SourceModule| <f1> pandas.core.computation.align",shape="record"];
	"pandas.util._validators" [label="<f0> SourceModule| <f1> pandas.util._validators",shape="record"];
	"pandas.core.computation.common" [label="<f0> SourceModule| <f1> pandas.core.computation.common",shape="record"];
	"pandas.core.dtypes.cast" [label="<f0> SourceModule| <f1> pandas.core.dtypes.cast",shape="record"];
	"pandas.core.arrays.timedeltas" [label="<f0> SourceModule| <f1> pandas.core.arrays.timedeltas",shape="record"];
	"pandas.core.arrays._ranges" [label="<f0> SourceModule| <f1> pandas.core.arrays._ranges",shape="record"];
	"pandas.core.arrays.datetimelike" [label="<f0> SourceModule| <f1> pandas.core.arrays.datetimelike",shape="record"];
	"pandas.core.groupby.ops" [label="<f0> SourceModule| <f1> pandas.core.groupby.ops",shape="record"];
	"pandas.core.sorting" [label="<f0> SourceModule| <f1> pandas.core.sorting",shape="record"];
	"pandas.core.groupby.grouper" [label="<f0> SourceModule| <f1> pandas.core.groupby.grouper",shape="record"];
	"pandas.core.groupby.categorical" [label="<f0> SourceModule| <f1> pandas.core.groupby.categorical",shape="record"];
	"pandas.core.arrays.categorical" [label="<f0> SourceModule| <f1> pandas.core.arrays.categorical",shape="record"];
	"pandas.core.dtypes.concat" [label="<f0> SourceModule| <f1> pandas.core.dtypes.concat",shape="record"];
	"pandas.core.dtypes.astype" [label="<f0> SourceModule| <f1> pandas.core.dtypes.astype",shape="record"];
	"pandas.core.strings.object_array" [label="<f0> SourceModule| <f1> pandas.core.strings.object_array",shape="record"];
	"pandas.core.strings" [label="<f0> Package| <f1> pandas.core.strings",shape="record"];
	"pandas.core.strings.base" [label="<f0> SourceModule| <f1> pandas.core.strings.base",shape="record"];
	"pandas.core.accessor" [label="<f0> SourceModule| <f1> pandas.core.accessor",shape="record"];
	"pandas.core.groupby" [label="<f0> Package| <f1> pandas.core.groupby",shape="record"];
	"pandas.core.groupby.PanelGroupBy" [label="<f0> MissingModule| <f1> pandas.core.groupby.PanelGroupBy",shape="record"];
	"pandas.core.groupby.groupby" [label="<f0> SourceModule| <f1> pandas.core.groupby.groupby",shape="record"];
	"pandas.core._numba.kernels" [label="<f0> Package| <f1> pandas.core._numba.kernels",shape="record"];
	"pandas.core._numba.kernels.var_" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.var_",shape="record"];
	"pandas.core._numba.kernels.shared" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.shared",shape="record"];
	"numba" [label="<f0> MissingModule| <f1> numba",shape="record"];
	"pandas.core._numba.kernels.sum_" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.sum_",shape="record"];
	"'numba.extending'" [label="<f0> MissingModule| <f1> 'numba.extending'",shape="record"];
	"pandas.core._numba.kernels.min_max_" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.min_max_",shape="record"];
	"pandas.core._numba.kernels.mean_" [label="<f0> SourceModule| <f1> pandas.core._numba.kernels.mean_",shape="record"];
	"pandas.core.window" [label="<f0> Package| <f1> pandas.core.window",shape="record"];
	"pandas.core.window._Rolling_and_Expanding" [label="<f0> MissingModule| <f1> pandas.core.window._Rolling_and_Expanding",shape="record"];
	"pandas.core.window.expanding" [label="<f0> SourceModule| <f1> pandas.core.window.expanding",shape="record"];
	"pandas.core.window.doc" [label="<f0> SourceModule| <f1> pandas.core.window.doc",shape="record"];
	"pandas.core.shared_docs" [label="<f0> SourceModule| <f1> pandas.core.shared_docs",shape="record"];
	"pandas.core.indexers.objects" [label="<f0> SourceModule| <f1> pandas.core.indexers.objects",shape="record"];
	"pandas.core.window.ewm" [label="<f0> SourceModule| <f1> pandas.core.window.ewm",shape="record"];
	"pandas.core.window.online" [label="<f0> SourceModule| <f1> pandas.core.window.online",shape="record"];
	"pandas.core.window.numba_" [label="<f0> SourceModule| <f1> pandas.core.window.numba_",shape="record"];
	"pandas.core.window.common" [label="<f0> SourceModule| <f1> pandas.core.window.common",shape="record"];
	"pandas.core.util.numba_" [label="<f0> SourceModule| <f1> pandas.core.util.numba_",shape="record"];
	"pandas.core.internals.blocks" [label="<f0> SourceModule| <f1> pandas.core.internals.blocks",shape="record"];
	"pandas.core.array_algos.transforms" [label="<f0> SourceModule| <f1> pandas.core.array_algos.transforms",shape="record"];
	"pandas.core.array_algos.replace" [label="<f0> SourceModule| <f1> pandas.core.array_algos.replace",shape="record"];
	"pandas.core.array_algos.quantile" [label="<f0> SourceModule| <f1> pandas.core.array_algos.quantile",shape="record"];
	"pandas.core.array_algos.putmask" [label="<f0> SourceModule| <f1> pandas.core.array_algos.putmask",shape="record"];
	"pandas.core.groupby.indexing" [label="<f0> SourceModule| <f1> pandas.core.groupby.indexing",shape="record"];
	"pandas.core.arrays.string_arrow" [label="<f0> SourceModule| <f1> pandas.core.arrays.string_arrow",shape="record"];
	"pandas.core.arrays.masked" [label="<f0> SourceModule| <f1> pandas.core.arrays.masked",shape="record"];
	"pandas.core.arrays._utils" [label="<f0> SourceModule| <f1> pandas.core.arrays._utils",shape="record"];
	"pandas.core.array_algos.masked_reductions" [label="<f0> SourceModule| <f1> pandas.core.array_algos.masked_reductions",shape="record"];
	"pandas.core.array_algos.masked_accumulations" [label="<f0> SourceModule| <f1> pandas.core.array_algos.masked_accumulations",shape="record"];
	"pandas.core.dtypes.base" [label="<f0> SourceModule| <f1> pandas.core.dtypes.base",shape="record"];
	"pandas.core.arrays.arrow._arrow_utils" [label="<f0> SourceModule| <f1> pandas.core.arrays.arrow._arrow_utils",shape="record"];
	"pyarrow.compute" [label="<f0> SourceModule| <f1> pyarrow.compute",shape="record"];
	"pyarrow.vendored.docscrape" [label="<f0> SourceModule| <f1> pyarrow.vendored.docscrape",shape="record"];
	"sphinx" [label="<f0> MissingModule| <f1> sphinx",shape="record"];
	"pyarrow.vendored" [label="<f0> Package| <f1> pyarrow.vendored",shape="record"];
	"pyarrow._compute_docstrings" [label="<f0> SourceModule| <f1> pyarrow._compute_docstrings",shape="record"];
	"pyarrow._compute" [label="<f0> Extension| <f1> pyarrow._compute",shape="record"];
	"pandas.core.arrays.numeric" [label="<f0> SourceModule| <f1> pandas.core.arrays.numeric",shape="record"];
	"pandas.core.tools.numeric" [label="<f0> SourceModule| <f1> pandas.core.tools.numeric",shape="record"];
	"pandas.core.tools" [label="<f0> Package| <f1> pandas.core.tools",shape="record"];
	"pandas.core.arrays.boolean" [label="<f0> SourceModule| <f1> pandas.core.arrays.boolean",shape="record"];
	"pandas.core.arrays.arrow" [label="<f0> Package| <f1> pandas.core.arrays.arrow",shape="record"];
	"pandas.core.arrays.arrow.accessors" [label="<f0> SourceModule| <f1> pandas.core.arrays.arrow.accessors",shape="record"];
	"pandas.core.arrays._arrow_string_mixins" [label="<f0> SourceModule| <f1> pandas.core.arrays._arrow_string_mixins",shape="record"];
	"pandas.core.apply" [label="<f0> SourceModule| <f1> pandas.core.apply",shape="record"];
	"pandas.core._numba.extensions" [label="<f0> SourceModule| <f1> pandas.core._numba.extensions",shape="record"];
	"'numba.typed'" [label="<f0> MissingModule| <f1> 'numba.typed'",shape="record"];
	"'numba.core'" [label="<f0> MissingModule| <f1> 'numba.core'",shape="record"];
	"pandas.core._numba.executor" [label="<f0> SourceModule| <f1> pandas.core._numba.executor",shape="record"];
	"pandas.core._numba" [label="<f0> Package| <f1> pandas.core._numba",shape="record"];
	"pandas.core.groupby.numba_" [label="<f0> SourceModule| <f1> pandas.core.groupby.numba_",shape="record"];
	"pandas.core.groupby.base" [label="<f0> SourceModule| <f1> pandas.core.groupby.base",shape="record"];
	"pandas.core.arrays.period" [label="<f0> SourceModule| <f1> pandas.core.arrays.period",shape="record"];
	"pandas.core.arrays.arrow.extension_types" [label="<f0> SourceModule| <f1> pandas.core.arrays.arrow.extension_types",shape="record"];
	"pandas.core.arrays.interval" [label="<f0> SourceModule| <f1> pandas.core.arrays.interval",shape="record"];
	"pandas.tseries.frequencies" [label="<f0> SourceModule| <f1> pandas.tseries.frequencies",shape="record"];
	"pandas.core.indexers" [label="<f0> Package| <f1> pandas.core.indexers",shape="record"];
	"pandas.core.indexers.utils" [label="<f0> SourceModule| <f1> pandas.core.indexers.utils",shape="record"];
	"pandas.core.arrays._mixins" [label="<f0> SourceModule| <f1> pandas.core.arrays._mixins",shape="record"];
	"pandas.core.array_algos.datetimelike_accumulations" [label="<f0> SourceModule| <f1> pandas.core.array_algos.datetimelike_accumulations",shape="record"];
	"pandas.core.array_algos" [label="<f0> Package| <f1> pandas.core.array_algos",shape="record"];
	"pandas.compat.numpy.function" [label="<f0> SourceModule| <f1> pandas.compat.numpy.function",shape="record"];
	"pandas.compat.numpy" [label="<f0> Package| <f1> pandas.compat.numpy",shape="record"];
	"pandas.core.arrays.datetimes" [label="<f0> SourceModule| <f1> pandas.core.arrays.datetimes",shape="record"];
	"pyarrow" [label="<f0> Package| <f1> pyarrow",shape="record"];
	"pyarrow.vendored.version" [label="<f0> SourceModule| <f1> pyarrow.vendored.version",shape="record"];
	"pyarrow.substrait" [label="<f0> SourceModule| <f1> pyarrow.substrait",shape="record"];
	"pyarrow.parquet.encryption" [label="<f0> SourceModule| <f1> pyarrow.parquet.encryption",shape="record"];
	"pyarrow.parquet.core" [label="<f0> SourceModule| <f1> pyarrow.parquet.core",shape="record"];
	"pyarrow.parquet" [label="<f0> Package| <f1> pyarrow.parquet",shape="record"];
	"pyarrow.pandas_compat" [label="<f0> SourceModule| <f1> pyarrow.pandas_compat",shape="record"];
	"'pandas.api.internals'" [label="<f0> MissingModule| <f1> 'pandas.api.internals'",shape="record"];
	"pyarrow.orc" [label="<f0> SourceModule| <f1> pyarrow.orc",shape="record"];
	"pyarrow.jvm" [label="<f0> SourceModule| <f1> pyarrow.jvm",shape="record"];
	"pyarrow.json" [label="<f0> SourceModule| <f1> pyarrow.json",shape="record"];
	"pyarrow.interchange.from_dataframe" [label="<f0> SourceModule| <f1> pyarrow.interchange.from_dataframe",shape="record"];
	"pyarrow.interchange.dataframe" [label="<f0> SourceModule| <f1> pyarrow.interchange.dataframe",shape="record"];
	"pyarrow.interchange.column" [label="<f0> SourceModule| <f1> pyarrow.interchange.column",shape="record"];
	"pyarrow.interchange.buffer" [label="<f0> SourceModule| <f1> pyarrow.interchange.buffer",shape="record"];
	"pyarrow.interchange" [label="<f0> Package| <f1> pyarrow.interchange",shape="record"];
	"pyarrow.flight" [label="<f0> SourceModule| <f1> pyarrow.flight",shape="record"];
	"pyarrow.dataset" [label="<f0> SourceModule| <f1> pyarrow.dataset",shape="record"];
	"pyarrow.cuda" [label="<f0> SourceModule| <f1> pyarrow.cuda",shape="record"];
	"'pyarrow._cuda'" [label="<f0> MissingModule| <f1> 'pyarrow._cuda'",shape="record"];
	"pyarrow.conftest" [label="<f0> SourceModule| <f1> pyarrow.conftest",shape="record"];
	"'pyarrow.gandiva'" [label="<f0> MissingModule| <f1> 'pyarrow.gandiva'",shape="record"];
	"fastparquet" [label="<f0> MissingModule| <f1> fastparquet",shape="record"];
	"pyarrow.tests.util" [label="<f0> SourceModule| <f1> pyarrow.tests.util",shape="record"];
	"pyarrow.tests" [label="<f0> Package| <f1> pyarrow.tests",shape="record"];
	"pyarrow.cffi" [label="<f0> SourceModule| <f1> pyarrow.cffi",shape="record"];
	"pyarrow.benchmark" [label="<f0> SourceModule| <f1> pyarrow.benchmark",shape="record"];
	"pyarrow.acero" [label="<f0> SourceModule| <f1> pyarrow.acero",shape="record"];
	"pyarrow._substrait" [label="<f0> Extension| <f1> pyarrow._substrait",shape="record"];
	"pyarrow._s3fs" [label="<f0> Extension| <f1> pyarrow._s3fs",shape="record"];
	"pyarrow._parquet_encryption" [label="<f0> Extension| <f1> pyarrow._parquet_encryption",shape="record"];
	"pyarrow._parquet" [label="<f0> Extension| <f1> pyarrow._parquet",shape="record"];
	"pyarrow._orc" [label="<f0> Extension| <f1> pyarrow._orc",shape="record"];
	"pyarrow._json" [label="<f0> Extension| <f1> pyarrow._json",shape="record"];
	"pyarrow._hdfs" [label="<f0> Extension| <f1> pyarrow._hdfs",shape="record"];
	"pyarrow._gcsfs" [label="<f0> Extension| <f1> pyarrow._gcsfs",shape="record"];
	"pyarrow._fs" [label="<f0> Extension| <f1> pyarrow._fs",shape="record"];
	"pyarrow._flight" [label="<f0> Extension| <f1> pyarrow._flight",shape="record"];
	"pyarrow._dataset_parquet_encryption" [label="<f0> Extension| <f1> pyarrow._dataset_parquet_encryption",shape="record"];
	"pyarrow._dataset_parquet" [label="<f0> Extension| <f1> pyarrow._dataset_parquet",shape="record"];
	"pyarrow._dataset_orc" [label="<f0> Extension| <f1> pyarrow._dataset_orc",shape="record"];
	"pyarrow._dataset" [label="<f0> Extension| <f1> pyarrow._dataset",shape="record"];
	"pyarrow._csv" [label="<f0> Extension| <f1> pyarrow._csv",shape="record"];
	"pyarrow._azurefs" [label="<f0> Extension| <f1> pyarrow._azurefs",shape="record"];
	"pyarrow._acero" [label="<f0> Extension| <f1> pyarrow._acero",shape="record"];
	"pyarrow.csv" [label="<f0> SourceModule| <f1> pyarrow.csv",shape="record"];
	"pyarrow.feather" [label="<f0> SourceModule| <f1> pyarrow.feather",shape="record"];
	"pyarrow._feather" [label="<f0> Extension| <f1> pyarrow._feather",shape="record"];
	"pyarrow.util" [label="<f0> SourceModule| <f1> pyarrow.util",shape="record"];
	"pyarrow.types" [label="<f0> SourceModule| <f1> pyarrow.types",shape="record"];
	"pyarrow.ipc" [label="<f0> SourceModule| <f1> pyarrow.ipc",shape="record"];
	"pyarrow.fs" [label="<f0> SourceModule| <f1> pyarrow.fs",shape="record"];
	"fsspec" [label="<f0> Package| <f1> fsspec",shape="record"];
	"fsspec.utils" [label="<f0> SourceModule| <f1> fsspec.utils",shape="record"];
	"fsspec.transaction" [label="<f0> SourceModule| <f1> fsspec.transaction",shape="record"];
	"distributed" [label="<f0> MissingModule| <f1> distributed",shape="record"];
	"fsspec.parquet" [label="<f0> SourceModule| <f1> fsspec.parquet",shape="record"];
	"fsspec.json" [label="<f0> SourceModule| <f1> fsspec.json",shape="record"];
	"fsspec.implementations.zip" [label="<f0> SourceModule| <f1> fsspec.implementations.zip",shape="record"];
	"fsspec.implementations.webhdfs" [label="<f0> SourceModule| <f1> fsspec.implementations.webhdfs",shape="record"];
	"requests_kerberos" [label="<f0> MissingModule| <f1> requests_kerberos",shape="record"];
	"fsspec.implementations.tar" [label="<f0> SourceModule| <f1> fsspec.implementations.tar",shape="record"];
	"fsspec.implementations.smb" [label="<f0> SourceModule| <f1> fsspec.implementations.smb",shape="record"];
	"smbprotocol" [label="<f0> MissingModule| <f1> smbprotocol",shape="record"];
	"smbclient" [label="<f0> MissingModule| <f1> smbclient",shape="record"];
	"fsspec.implementations.sftp" [label="<f0> SourceModule| <f1> fsspec.implementations.sftp",shape="record"];
	"fsspec.implementations.reference" [label="<f0> SourceModule| <f1> fsspec.implementations.reference",shape="record"];
	"jinja2" [label="<f0> Package| <f1> jinja2",shape="record"];
	"jinja2.ext" [label="<f0> SourceModule| <f1> jinja2.ext",shape="record"];
	"jinja2.parser" [label="<f0> SourceModule| <f1> jinja2.parser",shape="record"];
	"jinja2.lexer" [label="<f0> SourceModule| <f1> jinja2.lexer",shape="record"];
	"jinja2._identifier" [label="<f0> SourceModule| <f1> jinja2._identifier",shape="record"];
	"jinja2.defaults" [label="<f0> SourceModule| <f1> jinja2.defaults",shape="record"];
	"jinja2.tests" [label="<f0> SourceModule| <f1> jinja2.tests",shape="record"];
	"jinja2.filters" [label="<f0> SourceModule| <f1> jinja2.filters",shape="record"];
	"jinja2.sandbox" [label="<f0> SourceModule| <f1> jinja2.sandbox",shape="record"];
	"jinja2.async_utils" [label="<f0> SourceModule| <f1> jinja2.async_utils",shape="record"];
	"markupsafe" [label="<f0> Package| <f1> markupsafe",shape="record"];
	"markupsafe._native" [label="<f0> SourceModule| <f1> markupsafe._native",shape="record"];
	"markupsafe._speedups" [label="<f0> Extension| <f1> markupsafe._speedups",shape="record"];
	"jinja2.meta" [label="<f0> SourceModule| <f1> jinja2.meta",shape="record"];
	"jinja2.compiler" [label="<f0> SourceModule| <f1> jinja2.compiler",shape="record"];
	"jinja2.visitor" [label="<f0> SourceModule| <f1> jinja2.visitor",shape="record"];
	"jinja2.optimizer" [label="<f0> SourceModule| <f1> jinja2.optimizer",shape="record"];
	"jinja2.idtracking" [label="<f0> SourceModule| <f1> jinja2.idtracking",shape="record"];
	"jinja2.utils" [label="<f0> SourceModule| <f1> jinja2.utils",shape="record"];
	"jinja2.constants" [label="<f0> SourceModule| <f1> jinja2.constants",shape="record"];
	"jinja2.runtime" [label="<f0> SourceModule| <f1> jinja2.runtime",shape="record"];
	"jinja2.loaders" [label="<f0> SourceModule| <f1> jinja2.loaders",shape="record"];
	"jinja2.exceptions" [label="<f0> SourceModule| <f1> jinja2.exceptions",shape="record"];
	"jinja2.environment" [label="<f0> SourceModule| <f1> jinja2.environment",shape="record"];
	"jinja2.debug" [label="<f0> SourceModule| <f1> jinja2.debug",shape="record"];
	"jinja2.bccache" [label="<f0> SourceModule| <f1> jinja2.bccache",shape="record"];
	"jinja2.nodes" [label="<f0> SourceModule| <f1> jinja2.nodes",shape="record"];
	"kerchunk" [label="<f0> MissingModule| <f1> kerchunk",shape="record"];
	"ujson" [label="<f0> Extension| <f1> ujson",shape="record"];
	"fsspec.implementations.memory" [label="<f0> SourceModule| <f1> fsspec.implementations.memory",shape="record"];
	"fsspec.implementations.local" [label="<f0> SourceModule| <f1> fsspec.implementations.local",shape="record"];
	"fsspec.implementations.libarchive" [label="<f0> SourceModule| <f1> fsspec.implementations.libarchive",shape="record"];
	"'libarchive.ffi'" [label="<f0> MissingModule| <f1> 'libarchive.ffi'",shape="record"];
	"libarchive" [label="<f0> MissingModule| <f1> libarchive",shape="record"];
	"fsspec.implementations.jupyter" [label="<f0> SourceModule| <f1> fsspec.implementations.jupyter",shape="record"];
	"fsspec.implementations.http_sync" [label="<f0> SourceModule| <f1> fsspec.implementations.http_sync",shape="record"];
	"js" [label="<f0> MissingModule| <f1> js",shape="record"];
	"yarl" [label="<f0> Package| <f1> yarl",shape="record"];
	"yarl._url" [label="<f0> SourceModule| <f1> yarl._url",shape="record"];
	"yarl._quoters" [label="<f0> SourceModule| <f1> yarl._quoters",shape="record"];
	"yarl._quoting" [label="<f0> SourceModule| <f1> yarl._quoting",shape="record"];
	"yarl._quoting_c" [label="<f0> Extension| <f1> yarl._quoting_c",shape="record"];
	"yarl._quoting_py" [label="<f0> SourceModule| <f1> yarl._quoting_py",shape="record"];
	"yarl._path" [label="<f0> SourceModule| <f1> yarl._path",shape="record"];
	"yarl._parse" [label="<f0> SourceModule| <f1> yarl._parse",shape="record"];
	"propcache.api" [label="<f0> SourceModule| <f1> propcache.api",shape="record"];
	"propcache" [label="<f0> Package| <f1> propcache",shape="record"];
	"propcache._helpers" [label="<f0> SourceModule| <f1> propcache._helpers",shape="record"];
	"propcache._helpers_c" [label="<f0> Extension| <f1> propcache._helpers_c",shape="record"];
	"propcache._helpers_py" [label="<f0> SourceModule| <f1> propcache._helpers_py",shape="record"];
	"multidict" [label="<f0> Package| <f1> multidict",shape="record"];
	"multidict._multidict_py" [label="<f0> SourceModule| <f1> multidict._multidict_py",shape="record"];
	"multidict._compat" [label="<f0> SourceModule| <f1> multidict._compat",shape="record"];
	"multidict._multidict" [label="<f0> Extension| <f1> multidict._multidict",shape="record"];
	"multidict._abc" [label="<f0> SourceModule| <f1> multidict._abc",shape="record"];
	"yarl._query" [label="<f0> SourceModule| <f1> yarl._query",shape="record"];
	"fsspec.implementations.http" [label="<f0> SourceModule| <f1> fsspec.implementations.http",shape="record"];
	"aiohttp" [label="<f0> Package| <f1> aiohttp",shape="record"];
	"aiohttp.worker" [label="<f0> SourceModule| <f1> aiohttp.worker",shape="record"];
	"aiohttp.web_log" [label="<f0> SourceModule| <f1> aiohttp.web_log",shape="record"];
	"aiohttp.web_response" [label="<f0> SourceModule| <f1> aiohttp.web_response",shape="record"];
	"aiohttp.typedefs" [label="<f0> SourceModule| <f1> aiohttp.typedefs",shape="record"];
	"aiohttp.compression_utils" [label="<f0> SourceModule| <f1> aiohttp.compression_utils",shape="record"];
	"aiohttp.web_request" [label="<f0> SourceModule| <f1> aiohttp.web_request",shape="record"];
	"aiohttp.web_urldispatcher" [label="<f0> SourceModule| <f1> aiohttp.web_urldispatcher",shape="record"];
	"aiohttp.web_routedef" [label="<f0> SourceModule| <f1> aiohttp.web_routedef",shape="record"];
	"aiohttp.web_fileresponse" [label="<f0> SourceModule| <f1> aiohttp.web_fileresponse",shape="record"];
	"aiohttp.web_protocol" [label="<f0> SourceModule| <f1> aiohttp.web_protocol",shape="record"];
	"aiohttp.web_server" [label="<f0> SourceModule| <f1> aiohttp.web_server",shape="record"];
	"aiohttp.tcp_helpers" [label="<f0> SourceModule| <f1> aiohttp.tcp_helpers",shape="record"];
	"aiohttp.log" [label="<f0> SourceModule| <f1> aiohttp.log",shape="record"];
	"aiohttp.http_exceptions" [label="<f0> SourceModule| <f1> aiohttp.http_exceptions",shape="record"];
	"aiohttp.base_protocol" [label="<f0> SourceModule| <f1> aiohttp.base_protocol",shape="record"];
	"aiohttp.client_exceptions" [label="<f0> SourceModule| <f1> aiohttp.client_exceptions",shape="record"];
	"aiohttp.client_reqrep" [label="<f0> SourceModule| <f1> aiohttp.client_reqrep",shape="record"];
	"aiohttp.connector" [label="<f0> SourceModule| <f1> aiohttp.connector",shape="record"];
	"aiohttp.client_proto" [label="<f0> SourceModule| <f1> aiohttp.client_proto",shape="record"];
	"aiohappyeyeballs" [label="<f0> Package| <f1> aiohappyeyeballs",shape="record"];
	"aiohappyeyeballs.utils" [label="<f0> SourceModule| <f1> aiohappyeyeballs.utils",shape="record"];
	"aiohappyeyeballs.types" [label="<f0> SourceModule| <f1> aiohappyeyeballs.types",shape="record"];
	"aiohappyeyeballs.impl" [label="<f0> SourceModule| <f1> aiohappyeyeballs.impl",shape="record"];
	"aiohappyeyeballs._staggered" [label="<f0> SourceModule| <f1> aiohappyeyeballs._staggered",shape="record"];
	"aiohttp.web_exceptions" [label="<f0> SourceModule| <f1> aiohttp.web_exceptions",shape="record"];
	"aiohttp.http_writer" [label="<f0> SourceModule| <f1> aiohttp.http_writer",shape="record"];
	"aiohttp._http_writer" [label="<f0> Extension| <f1> aiohttp._http_writer",shape="record"];
	"aiohttp.http_parser" [label="<f0> SourceModule| <f1> aiohttp.http_parser",shape="record"];
	"aiohttp._http_parser" [label="<f0> Extension| <f1> aiohttp._http_parser",shape="record"];
	"aiohttp.abc" [label="<f0> SourceModule| <f1> aiohttp.abc",shape="record"];
	"aiohttp.web_app" [label="<f0> SourceModule| <f1> aiohttp.web_app",shape="record"];
	"aiohttp.web_middlewares" [label="<f0> SourceModule| <f1> aiohttp.web_middlewares",shape="record"];
	"frozenlist" [label="<f0> Package| <f1> frozenlist",shape="record"];
	"frozenlist._frozenlist" [label="<f0> Extension| <f1> frozenlist._frozenlist",shape="record"];
	"aiosignal" [label="<f0> Package| <f1> aiosignal",shape="record"];
	"aiohttp.web" [label="<f0> SourceModule| <f1> aiohttp.web",shape="record"];
	"aiohttp.web_ws" [label="<f0> SourceModule| <f1> aiohttp.web_ws",shape="record"];
	"async_timeout" [label="<f0> Package| <f1> async_timeout",shape="record"];
	"aiohttp.http_websocket" [label="<f0> SourceModule| <f1> aiohttp.http_websocket",shape="record"];
	"aiohttp._websocket.models" [label="<f0> SourceModule| <f1> aiohttp._websocket.models",shape="record"];
	"aiohttp._websocket" [label="<f0> Package| <f1> aiohttp._websocket",shape="record"];
	"aiohttp._websocket.helpers" [label="<f0> SourceModule| <f1> aiohttp._websocket.helpers",shape="record"];
	"aiohttp._websocket.mask" [label="<f0> Extension| <f1> aiohttp._websocket.mask",shape="record"];
	"aiohttp._websocket.writer" [label="<f0> SourceModule| <f1> aiohttp._websocket.writer",shape="record"];
	"aiohttp._websocket.reader" [label="<f0> SourceModule| <f1> aiohttp._websocket.reader",shape="record"];
	"aiohttp._websocket.reader_c" [label="<f0> Extension| <f1> aiohttp._websocket.reader_c",shape="record"];
	"aiohttp._websocket.reader_py" [label="<f0> SourceModule| <f1> aiohttp._websocket.reader_py",shape="record"];
	"aiohttp.web_runner" [label="<f0> SourceModule| <f1> aiohttp.web_runner",shape="record"];
	"'gunicorn.workers'" [label="<f0> MissingModule| <f1> 'gunicorn.workers'",shape="record"];
	"gunicorn" [label="<f0> MissingModule| <f1> gunicorn",shape="record"];
	"aiohttp.tracing" [label="<f0> SourceModule| <f1> aiohttp.tracing",shape="record"];
	"aiohttp.streams" [label="<f0> SourceModule| <f1> aiohttp.streams",shape="record"];
	"aiohttp.resolver" [label="<f0> SourceModule| <f1> aiohttp.resolver",shape="record"];
	"aiodns" [label="<f0> MissingModule| <f1> aiodns",shape="record"];
	"aiohttp.payload_streamer" [label="<f0> SourceModule| <f1> aiohttp.payload_streamer",shape="record"];
	"aiohttp.payload" [label="<f0> SourceModule| <f1> aiohttp.payload",shape="record"];
	"aiohttp.helpers" [label="<f0> SourceModule| <f1> aiohttp.helpers",shape="record"];
	"aiohttp.formdata" [label="<f0> SourceModule| <f1> aiohttp.formdata",shape="record"];
	"aiohttp.cookiejar" [label="<f0> SourceModule| <f1> aiohttp.cookiejar",shape="record"];
	"aiohttp.client" [label="<f0> SourceModule| <f1> aiohttp.client",shape="record"];
	"aiohttp.client_ws" [label="<f0> SourceModule| <f1> aiohttp.client_ws",shape="record"];
	"aiohttp.multipart" [label="<f0> SourceModule| <f1> aiohttp.multipart",shape="record"];
	"aiohttp.http" [label="<f0> SourceModule| <f1> aiohttp.http",shape="record"];
	"aiohttp.hdrs" [label="<f0> SourceModule| <f1> aiohttp.hdrs",shape="record"];
	"fsspec.implementations.github" [label="<f0> SourceModule| <f1> fsspec.implementations.github",shape="record"];
	"fsspec.implementations.git" [label="<f0> SourceModule| <f1> fsspec.implementations.git",shape="record"];
	"pygit2" [label="<f0> MissingModule| <f1> pygit2",shape="record"];
	"fsspec.implementations.ftp" [label="<f0> SourceModule| <f1> fsspec.implementations.ftp",shape="record"];
	"fsspec.implementations.dirfs" [label="<f0> SourceModule| <f1> fsspec.implementations.dirfs",shape="record"];
	"fsspec.implementations.dbfs" [label="<f0> SourceModule| <f1> fsspec.implementations.dbfs",shape="record"];
	"fsspec.implementations.data" [label="<f0> SourceModule| <f1> fsspec.implementations.data",shape="record"];
	"fsspec.implementations.dask" [label="<f0> SourceModule| <f1> fsspec.implementations.dask",shape="record"];
	"'distributed.worker'" [label="<f0> MissingModule| <f1> 'distributed.worker'",shape="record"];
	"'distributed.client'" [label="<f0> MissingModule| <f1> 'distributed.client'",shape="record"];
	"dask" [label="<f0> MissingModule| <f1> dask",shape="record"];
	"fsspec.implementations.cached" [label="<f0> SourceModule| <f1> fsspec.implementations.cached",shape="record"];
	"fsspec.implementations.cache_metadata" [label="<f0> SourceModule| <f1> fsspec.implementations.cache_metadata",shape="record"];
	"fsspec.implementations.cache_mapper" [label="<f0> SourceModule| <f1> fsspec.implementations.cache_mapper",shape="record"];
	"fsspec.implementations.asyn_wrapper" [label="<f0> SourceModule| <f1> fsspec.implementations.asyn_wrapper",shape="record"];
	"fsspec.implementations.arrow" [label="<f0> SourceModule| <f1> fsspec.implementations.arrow",shape="record"];
	"fsspec.implementations" [label="<f0> Package| <f1> fsspec.implementations",shape="record"];
	"fsspec.gui" [label="<f0> SourceModule| <f1> fsspec.gui",shape="record"];
	"panel" [label="<f0> MissingModule| <f1> panel",shape="record"];
	"fsspec.generic" [label="<f0> SourceModule| <f1> fsspec.generic",shape="record"];
	"fsspec.fuse" [label="<f0> SourceModule| <f1> fsspec.fuse",shape="record"];
	"fuse" [label="<f0> MissingModule| <f1> fuse",shape="record"];
	"fsspec.dircache" [label="<f0> SourceModule| <f1> fsspec.dircache",shape="record"];
	"fsspec.conftest" [label="<f0> SourceModule| <f1> fsspec.conftest",shape="record"];
	"fsspec.config" [label="<f0> SourceModule| <f1> fsspec.config",shape="record"];
	"fsspec.asyn" [label="<f0> SourceModule| <f1> fsspec.asyn",shape="record"];
	"fsspec.archive" [label="<f0> SourceModule| <f1> fsspec.archive",shape="record"];
	"fsspec.spec" [label="<f0> SourceModule| <f1> fsspec.spec",shape="record"];
	"fsspec.registry" [label="<f0> SourceModule| <f1> fsspec.registry",shape="record"];
	"fsspec.mapping" [label="<f0> SourceModule| <f1> fsspec.mapping",shape="record"];
	"fsspec.exceptions" [label="<f0> SourceModule| <f1> fsspec.exceptions",shape="record"];
	"fsspec.core" [label="<f0> SourceModule| <f1> fsspec.core",shape="record"];
	"fsspec.compression" [label="<f0> SourceModule| <f1> fsspec.compression",shape="record"];
	"zstandard" [label="<f0> Package| <f1> zstandard",shape="record"];
	"zstandard.backend_rust" [label="<f0> MissingModule| <f1> zstandard.backend_rust",shape="record"];
	"zstandard.backend_cffi" [label="<f0> SourceModule| <f1> zstandard.backend_cffi",shape="record"];
	"zstandard._cffi" [label="<f0> Extension| <f1> zstandard._cffi",shape="record"];
	"zstandard.backend_c" [label="<f0> Extension| <f1> zstandard.backend_c",shape="record"];
	"lz4" [label="<f0> MissingModule| <f1> lz4",shape="record"];
	"snappy" [label="<f0> MissingModule| <f1> snappy",shape="record"];
	"lzmaffi" [label="<f0> MissingModule| <f1> lzmaffi",shape="record"];
	"isal" [label="<f0> MissingModule| <f1> isal",shape="record"];
	"fsspec.callbacks" [label="<f0> SourceModule| <f1> fsspec.callbacks",shape="record"];
	"tqdm" [label="<f0> Package| <f1> tqdm",shape="record"];
	"tqdm.notebook" [label="<f0> SourceModule| <f1> tqdm.notebook",shape="record"];
	"'IPython.html'" [label="<f0> MissingModule| <f1> 'IPython.html'",shape="record"];
	"tqdm.version" [label="<f0> SourceModule| <f1> tqdm.version",shape="record"];
	"tqdm._dist_ver" [label="<f0> SourceModule| <f1> tqdm._dist_ver",shape="record"];
	"tqdm.std" [label="<f0> SourceModule| <f1> tqdm.std",shape="record"];
	"tqdm.utils" [label="<f0> SourceModule| <f1> tqdm.utils",shape="record"];
	"tqdm.gui" [label="<f0> SourceModule| <f1> tqdm.gui",shape="record"];
	"'matplotlib.pyplot'" [label="<f0> MissingModule| <f1> 'matplotlib.pyplot'",shape="record"];
	"tqdm.cli" [label="<f0> SourceModule| <f1> tqdm.cli",shape="record"];
	"tqdm._tqdm_pandas" [label="<f0> SourceModule| <f1> tqdm._tqdm_pandas",shape="record"];
	"tqdm._monitor" [label="<f0> SourceModule| <f1> tqdm._monitor",shape="record"];
	"fsspec._version" [label="<f0> SourceModule| <f1> fsspec._version",shape="record"];
	"fsspec.caching" [label="<f0> SourceModule| <f1> fsspec.caching",shape="record"];
	"pyarrow.lib" [label="<f0> Extension| <f1> pyarrow.lib",shape="record"];
	"'setuptools_scm.git'" [label="<f0> MissingModule| <f1> 'setuptools_scm.git'",shape="record"];
	"setuptools_scm" [label="<f0> MissingModule| <f1> setuptools_scm",shape="record"];
	"pyarrow._generated_version" [label="<f0> SourceModule| <f1> pyarrow._generated_version",shape="record"];
	"pandas.core.arrays.arrow.array" [label="<f0> SourceModule| <f1> pandas.core.arrays.arrow.array",shape="record"];
	"pandas.core.tools.times" [label="<f0> SourceModule| <f1> pandas.core.tools.times",shape="record"];
	"pandas.core.tools.timedeltas" [label="<f0> SourceModule| <f1> pandas.core.tools.timedeltas",shape="record"];
	"pandas.core.tools.datetimes" [label="<f0> SourceModule| <f1> pandas.core.tools.datetimes",shape="record"];
	"pandas.core.arrays.floating" [label="<f0> SourceModule| <f1> pandas.core.arrays.floating",shape="record"];
	"pandas.core.arrays.integer" [label="<f0> SourceModule| <f1> pandas.core.arrays.integer",shape="record"];
	"pandas.io._util" [label="<f0> SourceModule| <f1> pandas.io._util",shape="record"];
	"pandas.core.dtypes.inference" [label="<f0> SourceModule| <f1> pandas.core.dtypes.inference",shape="record"];
	"pandas.util._exceptions" [label="<f0> SourceModule| <f1> pandas.util._exceptions",shape="record"];
	"pandas.core.ops.missing" [label="<f0> SourceModule| <f1> pandas.core.ops.missing",shape="record"];
	"pandas.core.construction" [label="<f0> SourceModule| <f1> pandas.core.construction",shape="record"];
	"pandas.core.algorithms" [label="<f0> SourceModule| <f1> pandas.core.algorithms",shape="record"];
	"pandas.core.internals.construction" [label="<f0> SourceModule| <f1> pandas.core.internals.construction",shape="record"];
	"pandas.core.internals.managers" [label="<f0> SourceModule| <f1> pandas.core.internals.managers",shape="record"];
	"pandas.api.extensions" [label="<f0> Package| <f1> pandas.api.extensions",shape="record"];
	"pandas.core.internals.ops" [label="<f0> SourceModule| <f1> pandas.core.internals.ops",shape="record"];
	"pandas.core.internals.base" [label="<f0> SourceModule| <f1> pandas.core.internals.base",shape="record"];
	"pandas.core.internals.array_manager" [label="<f0> SourceModule| <f1> pandas.core.internals.array_manager",shape="record"];
	"pandas.core.reshape.tile" [label="<f0> SourceModule| <f1> pandas.core.reshape.tile",shape="record"];
	"pandas.core.reshape" [label="<f0> Package| <f1> pandas.core.reshape",shape="record"];
	"pandas.core.array_algos.take" [label="<f0> SourceModule| <f1> pandas.core.array_algos.take",shape="record"];
	"pandas.core.sample" [label="<f0> SourceModule| <f1> pandas.core.sample",shape="record"];
	"pandas.core.indexing" [label="<f0> SourceModule| <f1> pandas.core.indexing",shape="record"];
	"pandas.core.nanops" [label="<f0> SourceModule| <f1> pandas.core.nanops",shape="record"];
	"'scipy.stats'" [label="<f0> MissingModule| <f1> 'scipy.stats'",shape="record"];
	"pandas.core.missing" [label="<f0> SourceModule| <f1> pandas.core.missing",shape="record"];
	"scipy" [label="<f0> MissingModule| <f1> scipy",shape="record"];
	"pandas.core.roperator" [label="<f0> SourceModule| <f1> pandas.core.roperator",shape="record"];
	"pandas.util._decorators" [label="<f0> SourceModule| <f1> pandas.util._decorators",shape="record"];
	"pandas.io.formats.string" [label="<f0> SourceModule| <f1> pandas.io.formats.string",shape="record"];
	"pandas.io.formats.html" [label="<f0> SourceModule| <f1> pandas.io.formats.html",shape="record"];
	"pandas.core.indexes.multi" [label="<f0> SourceModule| <f1> pandas.core.indexes.multi",shape="record"];
	"pandas.core.indexes" [label="<f0> Package| <f1> pandas.core.indexes",shape="record"];
	"pandas.core.reshape.util" [label="<f0> SourceModule| <f1> pandas.core.reshape.util",shape="record"];
	"pandas.core.indexes.frozen" [label="<f0> SourceModule| <f1> pandas.core.indexes.frozen",shape="record"];
	"pandas.io.formats.console" [label="<f0> SourceModule| <f1> pandas.io.formats.console",shape="record"];
	"pandas.io.formats.printing" [label="<f0> SourceModule| <f1> pandas.io.formats.printing",shape="record"];
	"pandas.io.formats" [label="<f0> Package| <f1> pandas.io.formats",shape="record"];
	"pandas.io.formats.style" [label="<f0> SourceModule| <f1> pandas.io.formats.style",shape="record"];
	"pandas.io.formats.excel" [label="<f0> SourceModule| <f1> pandas.io.formats.excel",shape="record"];
	"pandas.io.excel" [label="<f0> Package| <f1> pandas.io.excel",shape="record"];
	"pandas.io.excel._xlsxwriter" [label="<f0> SourceModule| <f1> pandas.io.excel._xlsxwriter",shape="record"];
	"xlsxwriter" [label="<f0> MissingModule| <f1> xlsxwriter",shape="record"];
	"pandas.io.excel._util" [label="<f0> SourceModule| <f1> pandas.io.excel._util",shape="record"];
	"pandas.io.excel._openpyxl" [label="<f0> SourceModule| <f1> pandas.io.excel._openpyxl",shape="record"];
	"'openpyxl.cell'" [label="<f0> MissingModule| <f1> 'openpyxl.cell'",shape="record"];
	"'openpyxl.styles'" [label="<f0> MissingModule| <f1> 'openpyxl.styles'",shape="record"];
	"'openpyxl.workbook'" [label="<f0> MissingModule| <f1> 'openpyxl.workbook'",shape="record"];
	"'openpyxl.descriptors'" [label="<f0> MissingModule| <f1> 'openpyxl.descriptors'",shape="record"];
	"openpyxl" [label="<f0> MissingModule| <f1> openpyxl",shape="record"];
	"pandas.io.excel._odswriter" [label="<f0> SourceModule| <f1> pandas.io.excel._odswriter",shape="record"];
	"'odf.config'" [label="<f0> MissingModule| <f1> 'odf.config'",shape="record"];
	"'odf.style'" [label="<f0> MissingModule| <f1> 'odf.style'",shape="record"];
	"'odf.text'" [label="<f0> MissingModule| <f1> 'odf.text'",shape="record"];
	"'odf.table'" [label="<f0> MissingModule| <f1> 'odf.table'",shape="record"];
	"'odf.opendocument'" [label="<f0> MissingModule| <f1> 'odf.opendocument'",shape="record"];
	"pandas.io.excel._base" [label="<f0> SourceModule| <f1> pandas.io.excel._base",shape="record"];
	"xlrd" [label="<f0> MissingModule| <f1> xlrd",shape="record"];
	"pandas.io.excel._xlrd" [label="<f0> SourceModule| <f1> pandas.io.excel._xlrd",shape="record"];
	"pandas.io.excel._pyxlsb" [label="<f0> SourceModule| <f1> pandas.io.excel._pyxlsb",shape="record"];
	"pyxlsb" [label="<f0> MissingModule| <f1> pyxlsb",shape="record"];
	"pandas.io.excel._odfreader" [label="<f0> SourceModule| <f1> pandas.io.excel._odfreader",shape="record"];
	"'odf.office'" [label="<f0> MissingModule| <f1> 'odf.office'",shape="record"];
	"'odf.element'" [label="<f0> MissingModule| <f1> 'odf.element'",shape="record"];
	"'odf.namespaces'" [label="<f0> MissingModule| <f1> 'odf.namespaces'",shape="record"];
	"odf" [label="<f0> MissingModule| <f1> odf",shape="record"];
	"pandas.io.excel._calamine" [label="<f0> SourceModule| <f1> pandas.io.excel._calamine",shape="record"];
	"python_calamine" [label="<f0> MissingModule| <f1> python_calamine",shape="record"];
	"pandas.io.parsers.readers" [label="<f0> SourceModule| <f1> pandas.io.parsers.readers",shape="record"];
	"pandas.io.parsers.python_parser" [label="<f0> SourceModule| <f1> pandas.io.parsers.python_parser",shape="record"];
	"pandas.io.parsers.c_parser_wrapper" [label="<f0> SourceModule| <f1> pandas.io.parsers.c_parser_wrapper",shape="record"];
	"pandas.io.parsers.base_parser" [label="<f0> SourceModule| <f1> pandas.io.parsers.base_parser",shape="record"];
	"pandas.io.parsers.arrow_parser_wrapper" [label="<f0> SourceModule| <f1> pandas.io.parsers.arrow_parser_wrapper",shape="record"];
	"pandas.io.parsers" [label="<f0> Package| <f1> pandas.io.parsers",shape="record"];
	"pandas.io.formats.css" [label="<f0> SourceModule| <f1> pandas.io.formats.css",shape="record"];
	"pandas.io.formats._color_data" [label="<f0> SourceModule| <f1> pandas.io.formats._color_data",shape="record"];
	"'matplotlib.colors'" [label="<f0> MissingModule| <f1> 'matplotlib.colors'",shape="record"];
	"pandas.io.formats.style_render" [label="<f0> SourceModule| <f1> pandas.io.formats.style_render",shape="record"];
	"pandas.api.types" [label="<f0> Package| <f1> pandas.api.types",shape="record"];
	"pandas.core.dtypes.api" [label="<f0> SourceModule| <f1> pandas.core.dtypes.api",shape="record"];
	"pandas.io.common" [label="<f0> SourceModule| <f1> pandas.io.common",shape="record"];
	"botocore" [label="<f0> MissingModule| <f1> botocore",shape="record"];
	"pandas.core.reshape.concat" [label="<f0> SourceModule| <f1> pandas.core.reshape.concat",shape="record"];
	"pandas.core.indexes.timedeltas" [label="<f0> SourceModule| <f1> pandas.core.indexes.timedeltas",shape="record"];
	"pandas.core.indexes.extension" [label="<f0> SourceModule| <f1> pandas.core.indexes.extension",shape="record"];
	"pandas.core.indexes.datetimelike" [label="<f0> SourceModule| <f1> pandas.core.indexes.datetimelike",shape="record"];
	"pandas.core.indexes.range" [label="<f0> SourceModule| <f1> pandas.core.indexes.range",shape="record"];
	"pandas.core.indexes.datetimes" [label="<f0> SourceModule| <f1> pandas.core.indexes.datetimes",shape="record"];
	"pytz" [label="<f0> Package| <f1> pytz",shape="record"];
	"pytz.tzfile" [label="<f0> SourceModule| <f1> pytz.tzfile",shape="record"];
	"pytz.tzinfo" [label="<f0> SourceModule| <f1> pytz.tzinfo",shape="record"];
	"sets" [label="<f0> MissingModule| <f1> sets",shape="record"];
	"pytz.lazy" [label="<f0> SourceModule| <f1> pytz.lazy",shape="record"];
	"UserDict" [label="<f0> MissingModule| <f1> UserDict",shape="record"];
	"pytz.exceptions" [label="<f0> SourceModule| <f1> pytz.exceptions",shape="record"];
	"pandas.core.indexes.api" [label="<f0> SourceModule| <f1> pandas.core.indexes.api",shape="record"];
	"pandas.core.indexes.period" [label="<f0> SourceModule| <f1> pandas.core.indexes.period",shape="record"];
	"pandas.core.indexes.interval" [label="<f0> SourceModule| <f1> pandas.core.indexes.interval",shape="record"];
	"pandas.core.indexes.category" [label="<f0> SourceModule| <f1> pandas.core.indexes.category",shape="record"];
	"pandas.core.common" [label="<f0> SourceModule| <f1> pandas.core.common",shape="record"];
	"pandas.core.base" [label="<f0> SourceModule| <f1> pandas.core.base",shape="record"];
	"pandas.core.arrays.string_" [label="<f0> SourceModule| <f1> pandas.core.arrays.string_",shape="record"];
	"pandas.core.arrays.numpy_" [label="<f0> SourceModule| <f1> pandas.core.arrays.numpy_",shape="record"];
	"pandas.core.arrays" [label="<f0> Package| <f1> pandas.core.arrays",shape="record"];
	"pandas.core.arrays.sparse" [label="<f0> Package| <f1> pandas.core.arrays.sparse",shape="record"];
	"pandas.core.arrays.sparse.array" [label="<f0> SourceModule| <f1> pandas.core.arrays.sparse.array",shape="record"];
	"'scipy.sparse'" [label="<f0> MissingModule| <f1> 'scipy.sparse'",shape="record"];
	"pandas.core.arrays.sparse.accessor" [label="<f0> SourceModule| <f1> pandas.core.arrays.sparse.accessor",shape="record"];
	"pandas.core.arrays.sparse.scipy_sparse" [label="<f0> SourceModule| <f1> pandas.core.arrays.sparse.scipy_sparse",shape="record"];
	"pandas.core.dtypes.missing" [label="<f0> SourceModule| <f1> pandas.core.dtypes.missing",shape="record"];
	"pandas.core.dtypes.common" [label="<f0> SourceModule| <f1> pandas.core.dtypes.common",shape="record"];
	"pandas._config.config" [label="<f0> SourceModule| <f1> pandas._config.config",shape="record"];
	"pandas.core.window.rolling" [label="<f0> SourceModule| <f1> pandas.core.window.rolling",shape="record"];
	"pandas.core.series" [label="<f0> SourceModule| <f1> pandas.core.series",shape="record"];
	"pandas.core.reshape.reshape" [label="<f0> SourceModule| <f1> pandas.core.reshape.reshape",shape="record"];
	"pandas.io.formats.info" [label="<f0> SourceModule| <f1> pandas.io.formats.info",shape="record"];
	"pandas.core.strings.accessor" [label="<f0> SourceModule| <f1> pandas.core.strings.accessor",shape="record"];
	"pandas.core.methods.selectn" [label="<f0> SourceModule| <f1> pandas.core.methods.selectn",shape="record"];
	"pandas.core.methods" [label="<f0> Package| <f1> pandas.core.methods",shape="record"];
	"pandas.core.indexes.accessors" [label="<f0> SourceModule| <f1> pandas.core.indexes.accessors",shape="record"];
	"pandas.compat._constants" [label="<f0> SourceModule| <f1> pandas.compat._constants",shape="record"];
	"pandas.core.resample" [label="<f0> SourceModule| <f1> pandas.core.resample",shape="record"];
	"pandas.core.internals" [label="<f0> Package| <f1> pandas.core.internals",shape="record"];
	"pandas.core.internals.concat" [label="<f0> SourceModule| <f1> pandas.core.internals.concat",shape="record"];
	"pandas.core.internals.api" [label="<f0> SourceModule| <f1> pandas.core.internals.api",shape="record"];
	"pandas.core.internals.Block" [label="<f0> MissingModule| <f1> pandas.core.internals.Block",shape="record"];
	"pandas.core.indexes.base" [label="<f0> SourceModule| <f1> pandas.core.indexes.base",shape="record"];
	"pandas.core.reshape.merge" [label="<f0> SourceModule| <f1> pandas.core.reshape.merge",shape="record"];
	"pandas.core.groupby.generic" [label="<f0> SourceModule| <f1> pandas.core.groupby.generic",shape="record"];
	"pandas.core.generic" [label="<f0> SourceModule| <f1> pandas.core.generic",shape="record"];
	"pandas.io.clipboards" [label="<f0> SourceModule| <f1> pandas.io.clipboards",shape="record"];
	"pandas.io.clipboard" [label="<f0> Package| <f1> pandas.io.clipboard",shape="record"];
	"Foundation" [label="<f0> MissingModule| <f1> Foundation",shape="record"];
	"AppKit" [label="<f0> MissingModule| <f1> AppKit",shape="record"];
	"PyQt4" [label="<f0> MissingModule| <f1> PyQt4",shape="record"];
	"qtpy" [label="<f0> MissingModule| <f1> qtpy",shape="record"];
	"pandas.io.pickle" [label="<f0> SourceModule| <f1> pandas.io.pickle",shape="record"];
	"pandas.compat.pickle_compat" [label="<f0> SourceModule| <f1> pandas.compat.pickle_compat",shape="record"];
	"pandas.io.sql" [label="<f0> SourceModule| <f1> pandas.io.sql",shape="record"];
	"pandas.io.pytables" [label="<f0> SourceModule| <f1> pandas.io.pytables",shape="record"];
	"tables" [label="<f0> MissingModule| <f1> tables",shape="record"];
	"pandas.core.computation.pytables" [label="<f0> SourceModule| <f1> pandas.core.computation.pytables",shape="record"];
	"pandas.io.json" [label="<f0> Package| <f1> pandas.io.json",shape="record"];
	"pandas.io.json._table_schema" [label="<f0> SourceModule| <f1> pandas.io.json._table_schema",shape="record"];
	"pandas.io.json._json" [label="<f0> SourceModule| <f1> pandas.io.json._json",shape="record"];
	"pandas.core.methods.describe" [label="<f0> SourceModule| <f1> pandas.core.methods.describe",shape="record"];
	"pandas.core.flags" [label="<f0> SourceModule| <f1> pandas.core.flags",shape="record"];
	"pandas.core.frame" [label="<f0> SourceModule| <f1> pandas.core.frame",shape="record"];
	"pandas.core.reshape.pivot" [label="<f0> SourceModule| <f1> pandas.core.reshape.pivot",shape="record"];
	"pandas.io.formats.xml" [label="<f0> SourceModule| <f1> pandas.io.formats.xml",shape="record"];
	"'lxml.etree'" [label="<f0> MissingModule| <f1> 'lxml.etree'",shape="record"];
	"pandas.io.xml" [label="<f0> SourceModule| <f1> pandas.io.xml",shape="record"];
	"lxml" [label="<f0> MissingModule| <f1> lxml",shape="record"];
	"pandas.io.orc" [label="<f0> SourceModule| <f1> pandas.io.orc",shape="record"];
	"pandas.io.parquet" [label="<f0> SourceModule| <f1> pandas.io.parquet",shape="record"];
	"pandas.io.feather_format" [label="<f0> SourceModule| <f1> pandas.io.feather_format",shape="record"];
	"pandas.io.stata" [label="<f0> SourceModule| <f1> pandas.io.stata",shape="record"];
	"pandas.io.gbq" [label="<f0> SourceModule| <f1> pandas.io.gbq",shape="record"];
	"google.auth.credentials" [label="<f0> SourceModule| <f1> google.auth.credentials",shape="record"];
	"google.auth._refresh_worker" [label="<f0> SourceModule| <f1> google.auth._refresh_worker",shape="record"];
	"google.auth._credentials_base" [label="<f0> SourceModule| <f1> google.auth._credentials_base",shape="record"];
	"google.auth.metrics" [label="<f0> SourceModule| <f1> google.auth.metrics",shape="record"];
	"google.auth.version" [label="<f0> SourceModule| <f1> google.auth.version",shape="record"];
	"google.auth.exceptions" [label="<f0> SourceModule| <f1> google.auth.exceptions",shape="record"];
	"google.auth.environment_vars" [label="<f0> SourceModule| <f1> google.auth.environment_vars",shape="record"];
	"google.auth._helpers" [label="<f0> SourceModule| <f1> google.auth._helpers",shape="record"];
	"google.auth" [label="<f0> Package| <f1> google.auth",shape="record"];
	"google.auth._default" [label="<f0> SourceModule| <f1> google.auth._default",shape="record"];
	"google.oauth2.gdch_credentials" [label="<f0> SourceModule| <f1> google.oauth2.gdch_credentials",shape="record"];
	"google.oauth2._client" [label="<f0> SourceModule| <f1> google.oauth2._client",shape="record"];
	"google.auth.transport" [label="<f0> Package| <f1> google.auth.transport",shape="record"];
	"google.auth.transport.mtls" [label="<f0> SourceModule| <f1> google.auth.transport.mtls",shape="record"];
	"google.auth.transport._mtls_helper" [label="<f0> SourceModule| <f1> google.auth.transport._mtls_helper",shape="record"];
	"google.auth.transport._custom_tls_signer" [label="<f0> SourceModule| <f1> google.auth.transport._custom_tls_signer",shape="record"];
	"google.auth._exponential_backoff" [label="<f0> SourceModule| <f1> google.auth._exponential_backoff",shape="record"];
	"google.oauth2.service_account" [label="<f0> SourceModule| <f1> google.oauth2.service_account",shape="record"];
	"google.oauth2.credentials" [label="<f0> SourceModule| <f1> google.oauth2.credentials",shape="record"];
	"google.oauth2.reauth" [label="<f0> SourceModule| <f1> google.oauth2.reauth",shape="record"];
	"google.oauth2.challenges" [label="<f0> SourceModule| <f1> google.oauth2.challenges",shape="record"];
	"'pyu2f.model'" [label="<f0> MissingModule| <f1> 'pyu2f.model'",shape="record"];
	"'pyu2f.errors'" [label="<f0> MissingModule| <f1> 'pyu2f.errors'",shape="record"];
	"pyu2f" [label="<f0> MissingModule| <f1> pyu2f",shape="record"];
	"google.oauth2.webauthn_types" [label="<f0> SourceModule| <f1> google.oauth2.webauthn_types",shape="record"];
	"google.oauth2.webauthn_handler_factory" [label="<f0> SourceModule| <f1> google.oauth2.webauthn_handler_factory",shape="record"];
	"google.oauth2.webauthn_handler" [label="<f0> SourceModule| <f1> google.oauth2.webauthn_handler",shape="record"];
	"google.oauth2" [label="<f0> Package| <f1> google.oauth2",shape="record"];
	"google.oauth2.sts" [label="<f0> SourceModule| <f1> google.oauth2.sts",shape="record"];
	"google.oauth2.utils" [label="<f0> SourceModule| <f1> google.oauth2.utils",shape="record"];
	"google.auth.transport.requests" [label="<f0> SourceModule| <f1> google.auth.transport.requests",shape="record"];
	"'requests.packages.urllib3'" [label="<f0> MissingModule| <f1> 'requests.packages.urllib3'",shape="record"];
	"google.auth.compute_engine._metadata" [label="<f0> SourceModule| <f1> google.auth.compute_engine._metadata",shape="record"];
	"google.auth.app_engine" [label="<f0> SourceModule| <f1> google.auth.app_engine",shape="record"];
	"'google.appengine'" [label="<f0> MissingModule| <f1> 'google.appengine'",shape="record"];
	"google.auth.transport._http_client" [label="<f0> SourceModule| <f1> google.auth.transport._http_client",shape="record"];
	"google.auth.api_key" [label="<f0> SourceModule| <f1> google.auth.api_key",shape="record"];
	"google.auth.identity_pool" [label="<f0> SourceModule| <f1> google.auth.identity_pool",shape="record"];
	"google.auth.pluggable" [label="<f0> SourceModule| <f1> google.auth.pluggable",shape="record"];
	"google.auth.aws" [label="<f0> SourceModule| <f1> google.auth.aws",shape="record"];
	"google.auth.external_account" [label="<f0> SourceModule| <f1> google.auth.external_account",shape="record"];
	"google.auth.impersonated_credentials" [label="<f0> SourceModule| <f1> google.auth.impersonated_credentials",shape="record"];
	"google.auth.external_account_authorized_user" [label="<f0> SourceModule| <f1> google.auth.external_account_authorized_user",shape="record"];
	"google.auth.compute_engine" [label="<f0> Package| <f1> google.auth.compute_engine",shape="record"];
	"google.auth.compute_engine.credentials" [label="<f0> SourceModule| <f1> google.auth.compute_engine.credentials",shape="record"];
	"google.auth.jwt" [label="<f0> SourceModule| <f1> google.auth.jwt",shape="record"];
	"google.auth.crypt.es256" [label="<f0> SourceModule| <f1> google.auth.crypt.es256",shape="record"];
	"google.auth.crypt.base" [label="<f0> SourceModule| <f1> google.auth.crypt.base",shape="record"];
	"'cryptography.exceptions'" [label="<f0> MissingModule| <f1> 'cryptography.exceptions'",shape="record"];
	"cachetools" [label="<f0> Package| <f1> cachetools",shape="record"];
	"cachetools._decorators" [label="<f0> SourceModule| <f1> cachetools._decorators",shape="record"];
	"cachetools.keys" [label="<f0> SourceModule| <f1> cachetools.keys",shape="record"];
	"google.auth._service_account_info" [label="<f0> SourceModule| <f1> google.auth._service_account_info",shape="record"];
	"google.auth.iam" [label="<f0> SourceModule| <f1> google.auth.iam",shape="record"];
	"google.auth.crypt" [label="<f0> Package| <f1> google.auth.crypt",shape="record"];
	"google.auth.crypt.rsa" [label="<f0> SourceModule| <f1> google.auth.crypt.rsa",shape="record"];
	"google.auth.crypt._python_rsa" [label="<f0> SourceModule| <f1> google.auth.crypt._python_rsa",shape="record"];
	"rsa" [label="<f0> Package| <f1> rsa",shape="record"];
	"rsa.pkcs1" [label="<f0> SourceModule| <f1> rsa.pkcs1",shape="record"];
	"rsa.core" [label="<f0> SourceModule| <f1> rsa.core",shape="record"];
	"rsa.common" [label="<f0> SourceModule| <f1> rsa.common",shape="record"];
	"rsa.key" [label="<f0> SourceModule| <f1> rsa.key",shape="record"];
	"pyasn1.type.namedtype" [label="<f0> SourceModule| <f1> pyasn1.type.namedtype",shape="record"];
	"pyasn1.type.tagmap" [label="<f0> SourceModule| <f1> pyasn1.type.tagmap",shape="record"];
	"pyasn1.type.tag" [label="<f0> SourceModule| <f1> pyasn1.type.tag",shape="record"];
	"pyasn1.error" [label="<f0> SourceModule| <f1> pyasn1.error",shape="record"];
	"pyasn1" [label="<f0> Package| <f1> pyasn1",shape="record"];
	"pyasn1.debug" [label="<f0> SourceModule| <f1> pyasn1.debug",shape="record"];
	"pyasn1.type.univ" [label="<f0> SourceModule| <f1> pyasn1.type.univ",shape="record"];
	"pyasn1.type.namedval" [label="<f0> SourceModule| <f1> pyasn1.type.namedval",shape="record"];
	"pyasn1.type.constraint" [label="<f0> SourceModule| <f1> pyasn1.type.constraint",shape="record"];
	"pyasn1.type.error" [label="<f0> SourceModule| <f1> pyasn1.type.error",shape="record"];
	"pyasn1.type.base" [label="<f0> SourceModule| <f1> pyasn1.type.base",shape="record"];
	"pyasn1.compat.integer" [label="<f0> SourceModule| <f1> pyasn1.compat.integer",shape="record"];
	"pyasn1.compat" [label="<f0> Package| <f1> pyasn1.compat",shape="record"];
	"pyasn1.codec.ber.eoo" [label="<f0> SourceModule| <f1> pyasn1.codec.ber.eoo",shape="record"];
	"pyasn1.codec.ber" [label="<f0> Package| <f1> pyasn1.codec.ber",shape="record"];
	"pyasn1.codec.ber.encoder" [label="<f0> SourceModule| <f1> pyasn1.codec.ber.encoder",shape="record"];
	"pyasn1.type.useful" [label="<f0> SourceModule| <f1> pyasn1.type.useful",shape="record"];
	"pyasn1.type.char" [label="<f0> SourceModule| <f1> pyasn1.type.char",shape="record"];
	"pyasn1.codec.ber.decoder" [label="<f0> SourceModule| <f1> pyasn1.codec.ber.decoder",shape="record"];
	"pyasn1.codec.streaming" [label="<f0> SourceModule| <f1> pyasn1.codec.streaming",shape="record"];
	"pyasn1.codec" [label="<f0> Package| <f1> pyasn1.codec",shape="record"];
	"pyasn1.type" [label="<f0> Package| <f1> pyasn1.type",shape="record"];
	"pyasn1.type.opentype" [label="<f0> SourceModule| <f1> pyasn1.type.opentype",shape="record"];
	"pyasn1.codec.der.encoder" [label="<f0> SourceModule| <f1> pyasn1.codec.der.encoder",shape="record"];
	"pyasn1.codec.cer.encoder" [label="<f0> SourceModule| <f1> pyasn1.codec.cer.encoder",shape="record"];
	"pyasn1.codec.cer" [label="<f0> Package| <f1> pyasn1.codec.cer",shape="record"];
	"pyasn1.codec.cer.decoder" [label="<f0> SourceModule| <f1> pyasn1.codec.cer.decoder",shape="record"];
	"rsa.asn1" [label="<f0> SourceModule| <f1> rsa.asn1",shape="record"];
	"rsa.randnum" [label="<f0> SourceModule| <f1> rsa.randnum",shape="record"];
	"rsa.pem" [label="<f0> SourceModule| <f1> rsa.pem",shape="record"];
	"rsa.prime" [label="<f0> SourceModule| <f1> rsa.prime",shape="record"];
	"rsa.parallel" [label="<f0> SourceModule| <f1> rsa.parallel",shape="record"];
	"rsa.transform" [label="<f0> SourceModule| <f1> rsa.transform",shape="record"];
	"pyasn1_modules.rfc5208" [label="<f0> SourceModule| <f1> pyasn1_modules.rfc5208",shape="record"];
	"pyasn1_modules.rfc2251" [label="<f0> SourceModule| <f1> pyasn1_modules.rfc2251",shape="record"];
	"pyasn1_modules.rfc2459" [label="<f0> SourceModule| <f1> pyasn1_modules.rfc2459",shape="record"];
	"pyasn1_modules.pem" [label="<f0> SourceModule| <f1> pyasn1_modules.pem",shape="record"];
	"pyasn1_modules" [label="<f0> Package| <f1> pyasn1_modules",shape="record"];
	"pyasn1.codec.der.decoder" [label="<f0> SourceModule| <f1> pyasn1.codec.der.decoder",shape="record"];
	"pyasn1.codec.der" [label="<f0> Package| <f1> pyasn1.codec.der",shape="record"];
	"google.auth.crypt._cryptography_rsa" [label="<f0> SourceModule| <f1> google.auth.crypt._cryptography_rsa",shape="record"];
	"google.auth._cloud_sdk" [label="<f0> SourceModule| <f1> google.auth._cloud_sdk",shape="record"];
	"google" [label="<f0> NamespacePackage| <f1> google",shape="record"];
	"pandas.core.methods.to_dict" [label="<f0> SourceModule| <f1> pandas.core.methods.to_dict",shape="record"];
	"pandas.core.interchange.dataframe" [label="<f0> SourceModule| <f1> pandas.core.interchange.dataframe",shape="record"];
	"pandas.core.interchange" [label="<f0> Package| <f1> pandas.core.interchange",shape="record"];
	"pandas.core.interchange.utils" [label="<f0> SourceModule| <f1> pandas.core.interchange.utils",shape="record"];
	"pandas.core.interchange.column" [label="<f0> SourceModule| <f1> pandas.core.interchange.column",shape="record"];
	"pandas.core.interchange.buffer" [label="<f0> SourceModule| <f1> pandas.core.interchange.buffer",shape="record"];
	"pandas.core.interchange.dataframe_protocol" [label="<f0> SourceModule| <f1> pandas.core.interchange.dataframe_protocol",shape="record"];
	"pandas.core.reshape.melt" [label="<f0> SourceModule| <f1> pandas.core.reshape.melt",shape="record"];
	"pandas.core.arrays.base" [label="<f0> SourceModule| <f1> pandas.core.arrays.base",shape="record"];
	"pandas._libs.window.indexers" [label="<f0> Extension| <f1> pandas._libs.window.indexers",shape="record"];
	"pandas._libs.window.aggregations" [label="<f0> Extension| <f1> pandas._libs.window.aggregations",shape="record"];
	"pandas._libs.window" [label="<f0> Package| <f1> pandas._libs.window",shape="record"];
	"pandas._libs.tslibs.vectorized" [label="<f0> Extension| <f1> pandas._libs.tslibs.vectorized",shape="record"];
	"pandas._libs.tslibs.tzconversion" [label="<f0> Extension| <f1> pandas._libs.tslibs.tzconversion",shape="record"];
	"pandas._libs.tslibs.timezones" [label="<f0> Extension| <f1> pandas._libs.tslibs.timezones",shape="record"];
	"pandas._libs.tslibs.timestamps" [label="<f0> Extension| <f1> pandas._libs.tslibs.timestamps",shape="record"];
	"pandas._libs.tslibs.timedeltas" [label="<f0> Extension| <f1> pandas._libs.tslibs.timedeltas",shape="record"];
	"pandas._libs.tslibs.strptime" [label="<f0> Extension| <f1> pandas._libs.tslibs.strptime",shape="record"];
	"pandas._libs.tslibs.period" [label="<f0> Extension| <f1> pandas._libs.tslibs.period",shape="record"];
	"pandas._libs.tslibs.parsing" [label="<f0> Extension| <f1> pandas._libs.tslibs.parsing",shape="record"];
	"pandas._libs.tslibs.offsets" [label="<f0> Extension| <f1> pandas._libs.tslibs.offsets",shape="record"];
	"pandas._libs.tslibs.np_datetime" [label="<f0> Extension| <f1> pandas._libs.tslibs.np_datetime",shape="record"];
	"pandas._libs.tslibs.nattype" [label="<f0> Extension| <f1> pandas._libs.tslibs.nattype",shape="record"];
	"pandas._libs.tslibs.fields" [label="<f0> Extension| <f1> pandas._libs.tslibs.fields",shape="record"];
	"pandas._libs.tslibs.dtypes" [label="<f0> Extension| <f1> pandas._libs.tslibs.dtypes",shape="record"];
	"pandas._libs.tslibs.conversion" [label="<f0> Extension| <f1> pandas._libs.tslibs.conversion",shape="record"];
	"pandas._libs.tslibs.ccalendar" [label="<f0> Extension| <f1> pandas._libs.tslibs.ccalendar",shape="record"];
	"pandas._libs.tslibs.base" [label="<f0> Extension| <f1> pandas._libs.tslibs.base",shape="record"];
	"pandas._libs.tslibs" [label="<f0> Package| <f1> pandas._libs.tslibs",shape="record"];
	"pandas._libs.tslib" [label="<f0> Extension| <f1> pandas._libs.tslib",shape="record"];
	"pandas._libs.testing" [label="<f0> Extension| <f1> pandas._libs.testing",shape="record"];
	"pandas._libs.sparse" [label="<f0> Extension| <f1> pandas._libs.sparse",shape="record"];
	"pandas._libs.sas" [label="<f0> Extension| <f1> pandas._libs.sas",shape="record"];
	"pandas.io.sas.sas7bdat" [label="<f0> SourceModule| <f1> pandas.io.sas.sas7bdat",shape="record"];
	"pandas.io.sas.sasreader" [label="<f0> SourceModule| <f1> pandas.io.sas.sasreader",shape="record"];
	"pandas.io.sas.sas_xport" [label="<f0> SourceModule| <f1> pandas.io.sas.sas_xport",shape="record"];
	"pandas.io.sas.sas_constants" [label="<f0> SourceModule| <f1> pandas.io.sas.sas_constants",shape="record"];
	"pandas.io.sas" [label="<f0> Package| <f1> pandas.io.sas",shape="record"];
	"pandas._libs.reshape" [label="<f0> Extension| <f1> pandas._libs.reshape",shape="record"];
	"pandas._libs.properties" [label="<f0> Extension| <f1> pandas._libs.properties",shape="record"];
	"pandas._libs.parsers" [label="<f0> Extension| <f1> pandas._libs.parsers",shape="record"];
	"pandas._libs.pandas_parser" [label="<f0> Extension| <f1> pandas._libs.pandas_parser",shape="record"];
	"pandas._libs.pandas_datetime" [label="<f0> Extension| <f1> pandas._libs.pandas_datetime",shape="record"];
	"pandas._libs.ops_dispatch" [label="<f0> Extension| <f1> pandas._libs.ops_dispatch",shape="record"];
	"pandas._libs.ops" [label="<f0> Extension| <f1> pandas._libs.ops",shape="record"];
	"pandas._libs.missing" [label="<f0> Extension| <f1> pandas._libs.missing",shape="record"];
	"pandas._libs.lib" [label="<f0> Extension| <f1> pandas._libs.lib",shape="record"];
	"pandas._libs.json" [label="<f0> Extension| <f1> pandas._libs.json",shape="record"];
	"pandas._libs.join" [label="<f0> Extension| <f1> pandas._libs.join",shape="record"];
	"pandas._libs.interval" [label="<f0> Extension| <f1> pandas._libs.interval",shape="record"];
	"pandas._libs.internals" [label="<f0> Extension| <f1> pandas._libs.internals",shape="record"];
	"pandas._libs.indexing" [label="<f0> Extension| <f1> pandas._libs.indexing",shape="record"];
	"pandas._libs.index" [label="<f0> Extension| <f1> pandas._libs.index",shape="record"];
	"pandas._libs.hashtable" [label="<f0> Extension| <f1> pandas._libs.hashtable",shape="record"];
	"pandas._libs.hashing" [label="<f0> Extension| <f1> pandas._libs.hashing",shape="record"];
	"pandas._libs.groupby" [label="<f0> Extension| <f1> pandas._libs.groupby",shape="record"];
	"pandas._libs.byteswap" [label="<f0> Extension| <f1> pandas._libs.byteswap",shape="record"];
	"pandas._libs.arrays" [label="<f0> Extension| <f1> pandas._libs.arrays",shape="record"];
	"pandas._libs.algos" [label="<f0> Extension| <f1> pandas._libs.algos",shape="record"];
	"pandas._libs" [label="<f0> Package| <f1> pandas._libs",shape="record"];
	"pandas.Panel" [label="<f0> MissingModule| <f1> pandas.Panel",shape="record"];
	"pandas._version" [label="<f0> SourceModule| <f1> pandas._version",shape="record"];
	"pandas._version_meson" [label="<f0> SourceModule| <f1> pandas._version_meson",shape="record"];
	"pandas.util._tester" [label="<f0> SourceModule| <f1> pandas.util._tester",shape="record"];
	"pandas.io.json._normalize" [label="<f0> SourceModule| <f1> pandas.io.json._normalize",shape="record"];
	"pandas.io.api" [label="<f0> SourceModule| <f1> pandas.io.api",shape="record"];
	"pandas.io.spss" [label="<f0> SourceModule| <f1> pandas.io.spss",shape="record"];
	"pandas.io.html" [label="<f0> SourceModule| <f1> pandas.io.html",shape="record"];
	"'lxml.html'" [label="<f0> MissingModule| <f1> 'lxml.html'",shape="record"];
	"bs4" [label="<f0> Package| <f1> bs4",shape="record"];
	"bs4._warnings" [label="<f0> SourceModule| <f1> bs4._warnings",shape="record"];
	"bs4.exceptions" [label="<f0> SourceModule| <f1> bs4.exceptions",shape="record"];
	"bs4._typing" [label="<f0> SourceModule| <f1> bs4._typing",shape="record"];
	"bs4.filter" [label="<f0> SourceModule| <f1> bs4.filter",shape="record"];
	"bs4.formatter" [label="<f0> SourceModule| <f1> bs4.formatter",shape="record"];
	"bs4.element" [label="<f0> SourceModule| <f1> bs4.element",shape="record"];
	"bs4._deprecation" [label="<f0> SourceModule| <f1> bs4._deprecation",shape="record"];
	"bs4.css" [label="<f0> SourceModule| <f1> bs4.css",shape="record"];
	"soupsieve" [label="<f0> Package| <f1> soupsieve",shape="record"];
	"soupsieve.css_parser" [label="<f0> SourceModule| <f1> soupsieve.css_parser",shape="record"];
	"soupsieve.css_match" [label="<f0> SourceModule| <f1> soupsieve.css_match",shape="record"];
	"soupsieve.css_types" [label="<f0> SourceModule| <f1> soupsieve.css_types",shape="record"];
	"soupsieve.pretty" [label="<f0> SourceModule| <f1> soupsieve.pretty",shape="record"];
	"soupsieve.util" [label="<f0> SourceModule| <f1> soupsieve.util",shape="record"];
	"soupsieve.__meta__" [label="<f0> SourceModule| <f1> soupsieve.__meta__",shape="record"];
	"bs4.dammit" [label="<f0> SourceModule| <f1> bs4.dammit",shape="record"];
	"cchardet" [label="<f0> MissingModule| <f1> cchardet",shape="record"];
	"bs4.builder._htmlparser" [label="<f0> SourceModule| <f1> bs4.builder._htmlparser",shape="record"];
	"html.parser" [label="<f0> SourceModule| <f1> html.parser",shape="record"];
	"_markupbase" [label="<f0> SourceModule| <f1> _markupbase",shape="record"];
	"bs4.builder" [label="<f0> Package| <f1> bs4.builder",shape="record"];
	"bs4.builder._lxml" [label="<f0> SourceModule| <f1> bs4.builder._lxml",shape="record"];
	"bs4.builder._html5lib" [label="<f0> SourceModule| <f1> bs4.builder._html5lib",shape="record"];
	"'html5lib.treebuilders'" [label="<f0> MissingModule| <f1> 'html5lib.treebuilders'",shape="record"];
	"'html5lib.constants'" [label="<f0> MissingModule| <f1> 'html5lib.constants'",shape="record"];
	"html5lib" [label="<f0> MissingModule| <f1> html5lib",shape="record"];
	"pandas.util._print_versions" [label="<f0> SourceModule| <f1> pandas.util._print_versions",shape="record"];
	"pandas.testing" [label="<f0> SourceModule| <f1> pandas.testing",shape="record"];
	"pandas._testing" [label="<f0> Package| <f1> pandas._testing",shape="record"];
	"pandas._testing.contexts" [label="<f0> SourceModule| <f1> pandas._testing.contexts",shape="record"];
	"pandas._testing.compat" [label="<f0> SourceModule| <f1> pandas._testing.compat",shape="record"];
	"pandas._testing.asserters" [label="<f0> SourceModule| <f1> pandas._testing.asserters",shape="record"];
	"'matplotlib.axes'" [label="<f0> MissingModule| <f1> 'matplotlib.axes'",shape="record"];
	"'matplotlib.artist'" [label="<f0> MissingModule| <f1> 'matplotlib.artist'",shape="record"];
	"pandas._testing._warnings" [label="<f0> SourceModule| <f1> pandas._testing._warnings",shape="record"];
	"pandas._testing._io" [label="<f0> SourceModule| <f1> pandas._testing._io",shape="record"];
	"pandas._config.localization" [label="<f0> SourceModule| <f1> pandas._config.localization",shape="record"];
	"pandas.plotting" [label="<f0> Package| <f1> pandas.plotting",shape="record"];
	"pandas.plotting._misc" [label="<f0> SourceModule| <f1> pandas.plotting._misc",shape="record"];
	"'matplotlib.table'" [label="<f0> MissingModule| <f1> 'matplotlib.table'",shape="record"];
	"pandas.plotting._core" [label="<f0> SourceModule| <f1> pandas.plotting._core",shape="record"];
	"pandas.io" [label="<f0> Package| <f1> pandas.io",shape="record"];
	"pandas.errors" [label="<f0> Package| <f1> pandas.errors",shape="record"];
	"pandas.arrays" [label="<f0> Package| <f1> pandas.arrays",shape="record"];
	"pandas.api" [label="<f0> Package| <f1> pandas.api",shape="record"];
	"pandas.api.typing" [label="<f0> Package| <f1> pandas.api.typing",shape="record"];
	"pandas.api.interchange" [label="<f0> Package| <f1> pandas.api.interchange",shape="record"];
	"pandas.core.interchange.from_dataframe" [label="<f0> SourceModule| <f1> pandas.core.interchange.from_dataframe",shape="record"];
	"pandas.api.indexers" [label="<f0> Package| <f1> pandas.api.indexers",shape="record"];
	"pandas.core.reshape.api" [label="<f0> SourceModule| <f1> pandas.core.reshape.api",shape="record"];
	"pandas.core.reshape.encoding" [label="<f0> SourceModule| <f1> pandas.core.reshape.encoding",shape="record"];
	"pandas.core.computation.api" [label="<f0> SourceModule| <f1> pandas.core.computation.api",shape="record"];
	"pandas.tseries.offsets" [label="<f0> SourceModule| <f1> pandas.tseries.offsets",shape="record"];
	"pandas.tseries" [label="<f0> Package| <f1> pandas.tseries",shape="record"];
	"pandas.tseries.api" [label="<f0> SourceModule| <f1> pandas.tseries.api",shape="record"];
	"pandas.core.dtypes.dtypes" [label="<f0> SourceModule| <f1> pandas.core.dtypes.dtypes",shape="record"];
	"pandas.core.api" [label="<f0> SourceModule| <f1> pandas.core.api",shape="record"];
	"pandas.core.config_init" [label="<f0> SourceModule| <f1> pandas.core.config_init",shape="record"];
	"pandas._config" [label="<f0> Package| <f1> pandas._config",shape="record"];
	"pandas._config.display" [label="<f0> SourceModule| <f1> pandas._config.display",shape="record"];
	"pandas._config.dates" [label="<f0> SourceModule| <f1> pandas._config.dates",shape="record"];
	"pandas.compat" [label="<f0> Package| <f1> pandas.compat",shape="record"];
	"pandas.compat.pyarrow" [label="<f0> SourceModule| <f1> pandas.compat.pyarrow",shape="record"];
	"pandas.compat.compressors" [label="<f0> SourceModule| <f1> pandas.compat.compressors",shape="record"];
	"thirdai" [label="<f0> MissingModule| <f1> thirdai",shape="record"];
	"langchain_community.vectorstores.tencentvectordb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.tencentvectordb",shape="record"];
	"langchain_core.structured_query" [label="<f0> SourceModule| <f1> langchain_core.structured_query",shape="record"];
	"langchain.retrievers.self_query.tencentvectordb" [label="<f0> SourceModule| <f1> langchain.retrievers.self_query.tencentvectordb",shape="record"];
	"langchain.retrievers.self_query" [label="<f0> Package| <f1> langchain.retrievers.self_query",shape="record"];
	"langchain.retrievers" [label="<f0> Package| <f1> langchain.retrievers",shape="record"];
	"langchain_community.retrievers" [label="<f0> Package| <f1> langchain_community.retrievers",shape="record"];
	"langchain_community.retrievers.zilliz" [label="<f0> SourceModule| <f1> langchain_community.retrievers.zilliz",shape="record"];
	"langchain_core.retrievers" [label="<f0> SourceModule| <f1> langchain_core.retrievers",shape="record"];
	"langchain_community.retrievers.zep_cloud" [label="<f0> SourceModule| <f1> langchain_community.retrievers.zep_cloud",shape="record"];
	"langchain_community.retrievers.zep" [label="<f0> SourceModule| <f1> langchain_community.retrievers.zep",shape="record"];
	"'zep_python.memory'" [label="<f0> MissingModule| <f1> 'zep_python.memory'",shape="record"];
	"langchain_community.retrievers.you" [label="<f0> SourceModule| <f1> langchain_community.retrievers.you",shape="record"];
	"langchain_community.retrievers.wikipedia" [label="<f0> SourceModule| <f1> langchain_community.retrievers.wikipedia",shape="record"];
	"langchain_community.utilities.wikipedia" [label="<f0> SourceModule| <f1> langchain_community.utilities.wikipedia",shape="record"];
	"wikipedia" [label="<f0> MissingModule| <f1> wikipedia",shape="record"];
	"langchain_community.retrievers.web_research" [label="<f0> SourceModule| <f1> langchain_community.retrievers.web_research",shape="record"];
	"langchain_community.document_transformers" [label="<f0> Package| <f1> langchain_community.document_transformers",shape="record"];
	"langchain_community.document_transformers.openai_functions" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.openai_functions",shape="record"];
	"langchain.chains.openai_functions" [label="<f0> Package| <f1> langchain.chains.openai_functions",shape="record"];
	"langchain.chains.structured_output.base" [label="<f0> SourceModule| <f1> langchain.chains.structured_output.base",shape="record"];
	"langchain.chains.structured_output" [label="<f0> Package| <f1> langchain.chains.structured_output",shape="record"];
	"langchain_core.output_parsers.openai_tools" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.openai_tools",shape="record"];
	"langchain_core.utils.json" [label="<f0> SourceModule| <f1> langchain_core.utils.json",shape="record"];
	"langchain_core.output_parsers.transform" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.transform",shape="record"];
	"langchain_core.output_parsers.base" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.base",shape="record"];
	"langchain_core.output_parsers.openai_functions" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.openai_functions",shape="record"];
	"langchain_core.output_parsers.json" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.json",shape="record"];
	"langchain_core.output_parsers.format_instructions" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.format_instructions",shape="record"];
	"jsonpatch" [label="<f0> SourceModule| <f1> jsonpatch",shape="record"];
	"collections.MutableSequence" [label="<f0> MissingModule| <f1> collections.MutableSequence",shape="record"];
	"langchain.chains.openai_functions.tagging" [label="<f0> SourceModule| <f1> langchain.chains.openai_functions.tagging",shape="record"];
	"langchain.chains.openai_functions.utils" [label="<f0> SourceModule| <f1> langchain.chains.openai_functions.utils",shape="record"];
	"langchain.chains.llm" [label="<f0> SourceModule| <f1> langchain.chains.llm",shape="record"];
	"langchain.chains.base" [label="<f0> SourceModule| <f1> langchain.chains.base",shape="record"];
	"langchain.schema" [label="<f0> Package| <f1> langchain.schema",shape="record"];
	"langchain_core.stores" [label="<f0> SourceModule| <f1> langchain_core.stores",shape="record"];
	"langchain_core.chat_history" [label="<f0> SourceModule| <f1> langchain_core.chat_history",shape="record"];
	"langchain_core.memory" [label="<f0> SourceModule| <f1> langchain_core.memory",shape="record"];
	"langchain.chains.openai_functions.qa_with_structure" [label="<f0> SourceModule| <f1> langchain.chains.openai_functions.qa_with_structure",shape="record"];
	"langchain_core.prompts.chat" [label="<f0> SourceModule| <f1> langchain_core.prompts.chat",shape="record"];
	"langchain_core.utils.interactive_env" [label="<f0> SourceModule| <f1> langchain_core.utils.interactive_env",shape="record"];
	"langchain_core.prompts.string" [label="<f0> SourceModule| <f1> langchain_core.prompts.string",shape="record"];
	"langchain_core.prompts.prompt" [label="<f0> SourceModule| <f1> langchain_core.prompts.prompt",shape="record"];
	"langchain_core.prompts.message" [label="<f0> SourceModule| <f1> langchain_core.prompts.message",shape="record"];
	"langchain_core.prompts.image" [label="<f0> SourceModule| <f1> langchain_core.prompts.image",shape="record"];
	"langchain_core.prompts.dict" [label="<f0> SourceModule| <f1> langchain_core.prompts.dict",shape="record"];
	"langchain.chains.openai_functions.extraction" [label="<f0> SourceModule| <f1> langchain.chains.openai_functions.extraction",shape="record"];
	"langchain.chains.openai_functions.citation_fuzzy_match" [label="<f0> SourceModule| <f1> langchain.chains.openai_functions.citation_fuzzy_match",shape="record"];
	"regex" [label="<f0> Package| <f1> regex",shape="record"];
	"regex.regex" [label="<f0> SourceModule| <f1> regex.regex",shape="record"];
	"regex._regex" [label="<f0> Extension| <f1> regex._regex",shape="record"];
	"regex._regex_core" [label="<f0> SourceModule| <f1> regex._regex_core",shape="record"];
	"regex.DEFAULT_VERSION" [label="<f0> MissingModule| <f1> regex.DEFAULT_VERSION",shape="record"];
	"langchain.chains.openai_functions.base" [label="<f0> SourceModule| <f1> langchain.chains.openai_functions.base",shape="record"];
	"langchain_core.utils.function_calling" [label="<f0> SourceModule| <f1> langchain_core.utils.function_calling",shape="record"];
	"langchain_core.tools.simple" [label="<f0> SourceModule| <f1> langchain_core.tools.simple",shape="record"];
	"langchain_core.tools.base" [label="<f0> SourceModule| <f1> langchain_core.tools.base",shape="record"];
	"pydantic.validate_arguments" [label="<f0> MissingModule| <f1> pydantic.validate_arguments",shape="record"];
	"langchain_core.utils.json_schema" [label="<f0> SourceModule| <f1> langchain_core.utils.json_schema",shape="record"];
	"langchain_community.document_transformers.nuclia_text_transform" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.nuclia_text_transform",shape="record"];
	"langchain_community.tools.nuclia.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.nuclia.tool",shape="record"];
	"langchain_community.tools.nuclia" [label="<f0> Package| <f1> langchain_community.tools.nuclia",shape="record"];
	"langchain_community.tools" [label="<f0> Package| <f1> langchain_community.tools",shape="record"];
	"langchain_community.tools.zenguard.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.zenguard.tool",shape="record"];
	"langchain_community.tools.zenguard" [label="<f0> Package| <f1> langchain_community.tools.zenguard",shape="record"];
	"langchain_community.tools.zapier.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.zapier.tool",shape="record"];
	"langchain_community.tools.zapier" [label="<f0> Package| <f1> langchain_community.tools.zapier",shape="record"];
	"langchain_community.utilities.zapier" [label="<f0> SourceModule| <f1> langchain_community.utilities.zapier",shape="record"];
	"langchain_community.tools.zapier.prompt" [label="<f0> SourceModule| <f1> langchain_community.tools.zapier.prompt",shape="record"];
	"langchain_community.tools.youtube.search" [label="<f0> SourceModule| <f1> langchain_community.tools.youtube.search",shape="record"];
	"langchain_community.tools.youtube" [label="<f0> Package| <f1> langchain_community.tools.youtube",shape="record"];
	"youtube_search" [label="<f0> MissingModule| <f1> youtube_search",shape="record"];
	"langchain_community.tools.you.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.you.tool",shape="record"];
	"langchain_community.tools.you" [label="<f0> Package| <f1> langchain_community.tools.you",shape="record"];
	"langchain_community.utilities.you" [label="<f0> SourceModule| <f1> langchain_community.utilities.you",shape="record"];
	"langchain_community.tools.yahoo_finance_news" [label="<f0> SourceModule| <f1> langchain_community.tools.yahoo_finance_news",shape="record"];
	"yfinance" [label="<f0> MissingModule| <f1> yfinance",shape="record"];
	"langchain_community.document_loaders.web_base" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.web_base",shape="record"];
	"tqdm.asyncio" [label="<f0> SourceModule| <f1> tqdm.asyncio",shape="record"];
	"fake_useragent" [label="<f0> MissingModule| <f1> fake_useragent",shape="record"];
	"langchain_community.utils.user_agent" [label="<f0> SourceModule| <f1> langchain_community.utils.user_agent",shape="record"];
	"langchain_community.document_loaders.base" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.base",shape="record"];
	"langchain_core.document_loaders" [label="<f0> Package| <f1> langchain_core.document_loaders",shape="record"];
	"langchain_core.document_loaders.langsmith" [label="<f0> SourceModule| <f1> langchain_core.document_loaders.langsmith",shape="record"];
	"langchain_core.document_loaders.blob_loaders" [label="<f0> SourceModule| <f1> langchain_core.document_loaders.blob_loaders",shape="record"];
	"langchain_core.document_loaders.base" [label="<f0> SourceModule| <f1> langchain_core.document_loaders.base",shape="record"];
	"langchain_community.tools.wolfram_alpha.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.wolfram_alpha.tool",shape="record"];
	"langchain_community.tools.wolfram_alpha" [label="<f0> Package| <f1> langchain_community.tools.wolfram_alpha",shape="record"];
	"langchain_community.utilities.wolfram_alpha" [label="<f0> SourceModule| <f1> langchain_community.utilities.wolfram_alpha",shape="record"];
	"wolframalpha" [label="<f0> MissingModule| <f1> wolframalpha",shape="record"];
	"langchain_community.tools.wikipedia.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.wikipedia.tool",shape="record"];
	"langchain_community.tools.wikipedia" [label="<f0> Package| <f1> langchain_community.tools.wikipedia",shape="record"];
	"langchain_community.tools.vectorstore.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.vectorstore.tool",shape="record"];
	"langchain_community.tools.vectorstore" [label="<f0> Package| <f1> langchain_community.tools.vectorstore",shape="record"];
	"langchain.chains.qa_with_sources.retrieval" [label="<f0> SourceModule| <f1> langchain.chains.qa_with_sources.retrieval",shape="record"];
	"langchain.chains.qa_with_sources" [label="<f0> Package| <f1> langchain.chains.qa_with_sources",shape="record"];
	"langchain.chains.qa_with_sources.loading" [label="<f0> SourceModule| <f1> langchain.chains.qa_with_sources.loading",shape="record"];
	"langchain.chains.question_answering.map_rerank_prompt" [label="<f0> SourceModule| <f1> langchain.chains.question_answering.map_rerank_prompt",shape="record"];
	"langchain.chains.question_answering" [label="<f0> Package| <f1> langchain.chains.question_answering",shape="record"];
	"langchain.chains.question_answering.chain" [label="<f0> SourceModule| <f1> langchain.chains.question_answering.chain",shape="record"];
	"langchain.chains.ReduceDocumentsChain" [label="<f0> MissingModule| <f1> langchain.chains.ReduceDocumentsChain",shape="record"];
	"langchain.chains.question_answering.stuff_prompt" [label="<f0> SourceModule| <f1> langchain.chains.question_answering.stuff_prompt",shape="record"];
	"langchain.chains.question_answering.refine_prompts" [label="<f0> SourceModule| <f1> langchain.chains.question_answering.refine_prompts",shape="record"];
	"langchain.chains.question_answering.map_reduce_prompt" [label="<f0> SourceModule| <f1> langchain.chains.question_answering.map_reduce_prompt",shape="record"];
	"langchain.output_parsers.regex" [label="<f0> SourceModule| <f1> langchain.output_parsers.regex",shape="record"];
	"langchain.output_parsers" [label="<f0> Package| <f1> langchain.output_parsers",shape="record"];
	"langchain_community.output_parsers.rail_parser" [label="<f0> SourceModule| <f1> langchain_community.output_parsers.rail_parser",shape="record"];
	"langchain_community.output_parsers" [label="<f0> Package| <f1> langchain_community.output_parsers",shape="record"];
	"guardrails" [label="<f0> MissingModule| <f1> guardrails",shape="record"];
	"langchain.output_parsers.yaml" [label="<f0> SourceModule| <f1> langchain.output_parsers.yaml",shape="record"];
	"langchain.output_parsers.format_instructions" [label="<f0> SourceModule| <f1> langchain.output_parsers.format_instructions",shape="record"];
	"langchain.output_parsers.structured" [label="<f0> SourceModule| <f1> langchain.output_parsers.structured",shape="record"];
	"langchain.output_parsers.retry" [label="<f0> SourceModule| <f1> langchain.output_parsers.retry",shape="record"];
	"langchain.output_parsers.regex_dict" [label="<f0> SourceModule| <f1> langchain.output_parsers.regex_dict",shape="record"];
	"langchain.output_parsers.pandas_dataframe" [label="<f0> SourceModule| <f1> langchain.output_parsers.pandas_dataframe",shape="record"];
	"langchain.output_parsers.fix" [label="<f0> SourceModule| <f1> langchain.output_parsers.fix",shape="record"];
	"langchain.output_parsers.prompts" [label="<f0> SourceModule| <f1> langchain.output_parsers.prompts",shape="record"];
	"langchain.output_parsers.enum" [label="<f0> SourceModule| <f1> langchain.output_parsers.enum",shape="record"];
	"langchain.output_parsers.datetime" [label="<f0> SourceModule| <f1> langchain.output_parsers.datetime",shape="record"];
	"langchain.output_parsers.combining" [label="<f0> SourceModule| <f1> langchain.output_parsers.combining",shape="record"];
	"langchain.output_parsers.boolean" [label="<f0> SourceModule| <f1> langchain.output_parsers.boolean",shape="record"];
	"langchain.chains.combine_documents.refine" [label="<f0> SourceModule| <f1> langchain.chains.combine_documents.refine",shape="record"];
	"langchain.chains.combine_documents" [label="<f0> Package| <f1> langchain.chains.combine_documents",shape="record"];
	"langchain.chains.combine_documents.reduce" [label="<f0> SourceModule| <f1> langchain.chains.combine_documents.reduce",shape="record"];
	"langchain.chains.combine_documents.map_rerank" [label="<f0> SourceModule| <f1> langchain.chains.combine_documents.map_rerank",shape="record"];
	"langchain.chains.combine_documents.map_reduce" [label="<f0> SourceModule| <f1> langchain.chains.combine_documents.map_reduce",shape="record"];
	"langchain.chains.combine_documents.base" [label="<f0> SourceModule| <f1> langchain.chains.combine_documents.base",shape="record"];
	"langchain.chains.qa_with_sources.stuff_prompt" [label="<f0> SourceModule| <f1> langchain.chains.qa_with_sources.stuff_prompt",shape="record"];
	"langchain.chains.qa_with_sources.refine_prompts" [label="<f0> SourceModule| <f1> langchain.chains.qa_with_sources.refine_prompts",shape="record"];
	"langchain.chains.qa_with_sources.map_reduce_prompt" [label="<f0> SourceModule| <f1> langchain.chains.qa_with_sources.map_reduce_prompt",shape="record"];
	"langchain.chains.qa_with_sources.base" [label="<f0> SourceModule| <f1> langchain.chains.qa_with_sources.base",shape="record"];
	"langchain.chains.combine_documents.stuff" [label="<f0> SourceModule| <f1> langchain.chains.combine_documents.stuff",shape="record"];
	"langchain.chains.retrieval_qa.base" [label="<f0> SourceModule| <f1> langchain.chains.retrieval_qa.base",shape="record"];
	"langchain.chains.retrieval_qa" [label="<f0> Package| <f1> langchain.chains.retrieval_qa",shape="record"];
	"langchain_community.llms.openai" [label="<f0> SourceModule| <f1> langchain_community.llms.openai",shape="record"];
	"tiktoken" [label="<f0> Package| <f1> tiktoken",shape="record"];
	"tiktoken.registry" [label="<f0> SourceModule| <f1> tiktoken.registry",shape="record"];
	"tiktoken_ext" [label="<f0> NamespacePackage| <f1> tiktoken_ext",shape="record"];
	"tiktoken.model" [label="<f0> SourceModule| <f1> tiktoken.model",shape="record"];
	"tiktoken.core" [label="<f0> SourceModule| <f1> tiktoken.core",shape="record"];
	"tiktoken._tiktoken" [label="<f0> Extension| <f1> tiktoken._tiktoken",shape="record"];
	"openai" [label="<f0> Package| <f1> openai",shape="record"];
	"openai._module_client" [label="<f0> SourceModule| <f1> openai._module_client",shape="record"];
	"openai.resources" [label="<f0> Package| <f1> openai.resources",shape="record"];
	"openai.resources.vector_stores" [label="<f0> Package| <f1> openai.resources.vector_stores",shape="record"];
	"openai.resources.vector_stores.vector_stores" [label="<f0> SourceModule| <f1> openai.resources.vector_stores.vector_stores",shape="record"];
	"openai.types.vector_store_search_response" [label="<f0> SourceModule| <f1> openai.types.vector_store_search_response",shape="record"];
	"openai.types.file_chunking_strategy_param" [label="<f0> SourceModule| <f1> openai.types.file_chunking_strategy_param",shape="record"];
	"openai.types.static_file_chunking_strategy_object_param" [label="<f0> SourceModule| <f1> openai.types.static_file_chunking_strategy_object_param",shape="record"];
	"openai.types.static_file_chunking_strategy_param" [label="<f0> SourceModule| <f1> openai.types.static_file_chunking_strategy_param",shape="record"];
	"openai.types.auto_file_chunking_strategy_param" [label="<f0> SourceModule| <f1> openai.types.auto_file_chunking_strategy_param",shape="record"];
	"openai.types.shared_params.metadata" [label="<f0> SourceModule| <f1> openai.types.shared_params.metadata",shape="record"];
	"openai.types.shared_params" [label="<f0> Package| <f1> openai.types.shared_params",shape="record"];
	"openai.types.shared_params.response_format_json_schema" [label="<f0> SourceModule| <f1> openai.types.shared_params.response_format_json_schema",shape="record"];
	"openai.types.shared_params.response_format_json_object" [label="<f0> SourceModule| <f1> openai.types.shared_params.response_format_json_object",shape="record"];
	"openai.types.shared_params.response_format_text" [label="<f0> SourceModule| <f1> openai.types.shared_params.response_format_text",shape="record"];
	"openai.types.shared_params.function_parameters" [label="<f0> SourceModule| <f1> openai.types.shared_params.function_parameters",shape="record"];
	"openai.types.shared_params.function_definition" [label="<f0> SourceModule| <f1> openai.types.shared_params.function_definition",shape="record"];
	"openai.types.shared_params.comparison_filter" [label="<f0> SourceModule| <f1> openai.types.shared_params.comparison_filter",shape="record"];
	"openai.types.shared_params.reasoning_effort" [label="<f0> SourceModule| <f1> openai.types.shared_params.reasoning_effort",shape="record"];
	"openai.types.shared_params.responses_model" [label="<f0> SourceModule| <f1> openai.types.shared_params.responses_model",shape="record"];
	"openai.types.shared.chat_model" [label="<f0> SourceModule| <f1> openai.types.shared.chat_model",shape="record"];
	"openai.types.shared" [label="<f0> Package| <f1> openai.types.shared",shape="record"];
	"openai.types.shared.response_format_json_schema" [label="<f0> SourceModule| <f1> openai.types.shared.response_format_json_schema",shape="record"];
	"openai.types.shared.response_format_json_object" [label="<f0> SourceModule| <f1> openai.types.shared.response_format_json_object",shape="record"];
	"openai.types.shared.response_format_text" [label="<f0> SourceModule| <f1> openai.types.shared.response_format_text",shape="record"];
	"openai.types.shared.function_parameters" [label="<f0> SourceModule| <f1> openai.types.shared.function_parameters",shape="record"];
	"openai.types.shared.function_definition" [label="<f0> SourceModule| <f1> openai.types.shared.function_definition",shape="record"];
	"openai.types.shared.comparison_filter" [label="<f0> SourceModule| <f1> openai.types.shared.comparison_filter",shape="record"];
	"openai.types.shared.reasoning_effort" [label="<f0> SourceModule| <f1> openai.types.shared.reasoning_effort",shape="record"];
	"openai.types.shared.responses_model" [label="<f0> SourceModule| <f1> openai.types.shared.responses_model",shape="record"];
	"openai.types.shared.compound_filter" [label="<f0> SourceModule| <f1> openai.types.shared.compound_filter",shape="record"];
	"openai.types.shared.error_object" [label="<f0> SourceModule| <f1> openai.types.shared.error_object",shape="record"];
	"openai.types.shared.all_models" [label="<f0> SourceModule| <f1> openai.types.shared.all_models",shape="record"];
	"openai.types.shared.reasoning" [label="<f0> SourceModule| <f1> openai.types.shared.reasoning",shape="record"];
	"openai.types.shared.metadata" [label="<f0> SourceModule| <f1> openai.types.shared.metadata",shape="record"];
	"openai.types.shared_params.compound_filter" [label="<f0> SourceModule| <f1> openai.types.shared_params.compound_filter",shape="record"];
	"openai.types.shared_params.chat_model" [label="<f0> SourceModule| <f1> openai.types.shared_params.chat_model",shape="record"];
	"openai.types.shared_params.reasoning" [label="<f0> SourceModule| <f1> openai.types.shared_params.reasoning",shape="record"];
	"openai.types.vector_store_deleted" [label="<f0> SourceModule| <f1> openai.types.vector_store_deleted",shape="record"];
	"openai.types.vector_store" [label="<f0> SourceModule| <f1> openai.types.vector_store",shape="record"];
	"openai.pagination" [label="<f0> SourceModule| <f1> openai.pagination",shape="record"];
	"openai._resource" [label="<f0> SourceModule| <f1> openai._resource",shape="record"];
	"openai._compat" [label="<f0> SourceModule| <f1> openai._compat",shape="record"];
	"pydantic.generics" [label="<f0> SourceModule| <f1> pydantic.generics",shape="record"];
	"pydantic._migration" [label="<f0> SourceModule| <f1> pydantic._migration",shape="record"];
	"pydantic._internal._validators" [label="<f0> SourceModule| <f1> pydantic._internal._validators",shape="record"];
	"pydantic._internal" [label="<f0> Package| <f1> pydantic._internal",shape="record"];
	"pydantic._internal._decorators_v1" [label="<f0> SourceModule| <f1> pydantic._internal._decorators_v1",shape="record"];
	"pydantic._internal._utils" [label="<f0> SourceModule| <f1> pydantic._internal._utils",shape="record"];
	"pydantic.main" [label="<f0> SourceModule| <f1> pydantic.main",shape="record"];
	"pydantic.deprecated.json" [label="<f0> SourceModule| <f1> pydantic.deprecated.json",shape="record"];
	"pydantic.warnings" [label="<f0> SourceModule| <f1> pydantic.warnings",shape="record"];
	"pydantic.types" [label="<f0> SourceModule| <f1> pydantic.types",shape="record"];
	"typing_inspection.introspection" [label="<f0> SourceModule| <f1> typing_inspection.introspection",shape="record"];
	"annotated_types" [label="<f0> Package| <f1> annotated_types",shape="record"];
	"pydantic.networks" [label="<f0> SourceModule| <f1> pydantic.networks",shape="record"];
	"pydantic.type_adapter" [label="<f0> SourceModule| <f1> pydantic.type_adapter",shape="record"];
	"pydantic._internal._generate_schema" [label="<f0> SourceModule| <f1> pydantic._internal._generate_schema",shape="record"];
	"pydantic.dataclasses" [label="<f0> SourceModule| <f1> pydantic.dataclasses",shape="record"];
	"pydantic._internal._serializers" [label="<f0> SourceModule| <f1> pydantic._internal._serializers",shape="record"];
	"pydantic._internal._dataclasses" [label="<f0> SourceModule| <f1> pydantic._internal._dataclasses",shape="record"];
	"pydantic._internal._signature" [label="<f0> SourceModule| <f1> pydantic._internal._signature",shape="record"];
	"pydantic._internal._schema_gather" [label="<f0> SourceModule| <f1> pydantic._internal._schema_gather",shape="record"];
	"pydantic._internal._docs_extraction" [label="<f0> SourceModule| <f1> pydantic._internal._docs_extraction",shape="record"];
	"pydantic._internal._core_utils" [label="<f0> SourceModule| <f1> pydantic._internal._core_utils",shape="record"];
	"pydantic.functional_validators" [label="<f0> SourceModule| <f1> pydantic.functional_validators",shape="record"];
	"pydantic.PydanticSchemaGenerationError" [label="<f0> MissingModule| <f1> pydantic.PydanticSchemaGenerationError",shape="record"];
	"pydantic._internal._schema_generation_shared" [label="<f0> SourceModule| <f1> pydantic._internal._schema_generation_shared",shape="record"];
	"pydantic.color" [label="<f0> SourceModule| <f1> pydantic.color",shape="record"];
	"pydantic.deprecated.copy_internals" [label="<f0> SourceModule| <f1> pydantic.deprecated.copy_internals",shape="record"];
	"pydantic.deprecated" [label="<f0> Package| <f1> pydantic.deprecated",shape="record"];
	"pydantic.deprecated.parse" [label="<f0> SourceModule| <f1> pydantic.deprecated.parse",shape="record"];
	"pydantic.plugin._schema_validator" [label="<f0> SourceModule| <f1> pydantic.plugin._schema_validator",shape="record"];
	"pydantic.plugin._loader" [label="<f0> SourceModule| <f1> pydantic.plugin._loader",shape="record"];
	"pydantic.plugin" [label="<f0> Package| <f1> pydantic.plugin",shape="record"];
	"pydantic.json_schema" [label="<f0> SourceModule| <f1> pydantic.json_schema",shape="record"];
	"pydantic.root_model" [label="<f0> SourceModule| <f1> pydantic.root_model",shape="record"];
	"pydantic.PydanticUserError" [label="<f0> MissingModule| <f1> pydantic.PydanticUserError",shape="record"];
	"pydantic.config" [label="<f0> SourceModule| <f1> pydantic.config",shape="record"];
	"pydantic.annotated_handlers" [label="<f0> SourceModule| <f1> pydantic.annotated_handlers",shape="record"];
	"pydantic.aliases" [label="<f0> SourceModule| <f1> pydantic.aliases",shape="record"];
	"pydantic._internal._namespace_utils" [label="<f0> SourceModule| <f1> pydantic._internal._namespace_utils",shape="record"];
	"pydantic._internal._validate_call" [label="<f0> SourceModule| <f1> pydantic._internal._validate_call",shape="record"];
	"pydantic._internal._known_annotated_metadata" [label="<f0> SourceModule| <f1> pydantic._internal._known_annotated_metadata",shape="record"];
	"pydantic._internal._discriminated_union" [label="<f0> SourceModule| <f1> pydantic._internal._discriminated_union",shape="record"];
	"pydantic._internal._model_construction" [label="<f0> SourceModule| <f1> pydantic._internal._model_construction",shape="record"];
	"pydantic._internal._mock_val_ser" [label="<f0> SourceModule| <f1> pydantic._internal._mock_val_ser",shape="record"];
	"pydantic._internal._forward_ref" [label="<f0> SourceModule| <f1> pydantic._internal._forward_ref",shape="record"];
	"pydantic._internal._fields" [label="<f0> SourceModule| <f1> pydantic._internal._fields",shape="record"];
	"pydantic._internal._generics" [label="<f0> SourceModule| <f1> pydantic._internal._generics",shape="record"];
	"pydantic._internal._decorators" [label="<f0> SourceModule| <f1> pydantic._internal._decorators",shape="record"];
	"pydantic._internal._core_metadata" [label="<f0> SourceModule| <f1> pydantic._internal._core_metadata",shape="record"];
	"pydantic._internal._config" [label="<f0> SourceModule| <f1> pydantic._internal._config",shape="record"];
	"pydantic._internal._internal_dataclass" [label="<f0> SourceModule| <f1> pydantic._internal._internal_dataclass",shape="record"];
	"pydantic._internal._typing_extra" [label="<f0> SourceModule| <f1> pydantic._internal._typing_extra",shape="record"];
	"eval_type_backport" [label="<f0> MissingModule| <f1> eval_type_backport",shape="record"];
	"pydantic._internal._repr" [label="<f0> SourceModule| <f1> pydantic._internal._repr",shape="record"];
	"pydantic._internal._git" [label="<f0> SourceModule| <f1> pydantic._internal._git",shape="record"];
	"pydantic._internal._import_utils" [label="<f0> SourceModule| <f1> pydantic._internal._import_utils",shape="record"];
	"typing_inspection.typing_objects" [label="<f0> SourceModule| <f1> typing_inspection.typing_objects",shape="record"];
	"typing_inspection" [label="<f0> Package| <f1> typing_inspection",shape="record"];
	"pydantic_core._pydantic_core" [label="<f0> Extension| <f1> pydantic_core._pydantic_core",shape="record"];
	"pydantic_core.core_schema" [label="<f0> SourceModule| <f1> pydantic_core.core_schema",shape="record"];
	"pydantic.errors" [label="<f0> SourceModule| <f1> pydantic.errors",shape="record"];
	"pydantic.version" [label="<f0> SourceModule| <f1> pydantic.version",shape="record"];
	"pydantic_core" [label="<f0> Package| <f1> pydantic_core",shape="record"];
	"pydantic.datetime_parse" [label="<f0> SourceModule| <f1> pydantic.datetime_parse",shape="record"];
	"pydantic.typing" [label="<f0> SourceModule| <f1> pydantic.typing",shape="record"];
	"pydantic.fields" [label="<f0> SourceModule| <f1> pydantic.fields",shape="record"];
	"openai.types.vector_store_update_params" [label="<f0> SourceModule| <f1> openai.types.vector_store_update_params",shape="record"];
	"openai.types.vector_store_search_params" [label="<f0> SourceModule| <f1> openai.types.vector_store_search_params",shape="record"];
	"openai.types.vector_store_create_params" [label="<f0> SourceModule| <f1> openai.types.vector_store_create_params",shape="record"];
	"openai.types.vector_store_list_params" [label="<f0> SourceModule| <f1> openai.types.vector_store_list_params",shape="record"];
	"openai.resources.vector_stores.file_batches" [label="<f0> SourceModule| <f1> openai.resources.vector_stores.file_batches",shape="record"];
	"openai.types.vector_stores.vector_store_file_batch" [label="<f0> SourceModule| <f1> openai.types.vector_stores.vector_store_file_batch",shape="record"];
	"openai.types.vector_stores.vector_store_file" [label="<f0> SourceModule| <f1> openai.types.vector_stores.vector_store_file",shape="record"];
	"openai.types.file_chunking_strategy" [label="<f0> SourceModule| <f1> openai.types.file_chunking_strategy",shape="record"];
	"openai.types.static_file_chunking_strategy_object" [label="<f0> SourceModule| <f1> openai.types.static_file_chunking_strategy_object",shape="record"];
	"openai.types.static_file_chunking_strategy" [label="<f0> SourceModule| <f1> openai.types.static_file_chunking_strategy",shape="record"];
	"openai.types.other_file_chunking_strategy_object" [label="<f0> SourceModule| <f1> openai.types.other_file_chunking_strategy_object",shape="record"];
	"openai.types.vector_stores.file_batch_list_files_params" [label="<f0> SourceModule| <f1> openai.types.vector_stores.file_batch_list_files_params",shape="record"];
	"openai.types.vector_stores.file_batch_create_params" [label="<f0> SourceModule| <f1> openai.types.vector_stores.file_batch_create_params",shape="record"];
	"openai.types.vector_stores" [label="<f0> Package| <f1> openai.types.vector_stores",shape="record"];
	"openai.types.vector_stores.vector_store_file_deleted" [label="<f0> SourceModule| <f1> openai.types.vector_stores.vector_store_file_deleted",shape="record"];
	"openai.types.vector_stores.file_content_response" [label="<f0> SourceModule| <f1> openai.types.vector_stores.file_content_response",shape="record"];
	"openai.types.vector_stores.file_update_params" [label="<f0> SourceModule| <f1> openai.types.vector_stores.file_update_params",shape="record"];
	"openai.types.vector_stores.file_create_params" [label="<f0> SourceModule| <f1> openai.types.vector_stores.file_create_params",shape="record"];
	"openai.types.vector_stores.file_list_params" [label="<f0> SourceModule| <f1> openai.types.vector_stores.file_list_params",shape="record"];
	"openai.types.file_object" [label="<f0> SourceModule| <f1> openai.types.file_object",shape="record"];
	"openai.resources.vector_stores.files" [label="<f0> SourceModule| <f1> openai.resources.vector_stores.files",shape="record"];
	"openai.resources.moderations" [label="<f0> SourceModule| <f1> openai.resources.moderations",shape="record"];
	"openai.types.moderation_multi_modal_input_param" [label="<f0> SourceModule| <f1> openai.types.moderation_multi_modal_input_param",shape="record"];
	"openai.types.moderation_image_url_input_param" [label="<f0> SourceModule| <f1> openai.types.moderation_image_url_input_param",shape="record"];
	"openai.types.moderation_text_input_param" [label="<f0> SourceModule| <f1> openai.types.moderation_text_input_param",shape="record"];
	"openai.types.moderation_create_response" [label="<f0> SourceModule| <f1> openai.types.moderation_create_response",shape="record"];
	"openai.types.moderation" [label="<f0> SourceModule| <f1> openai.types.moderation",shape="record"];
	"openai.types.moderation_model" [label="<f0> SourceModule| <f1> openai.types.moderation_model",shape="record"];
	"openai.types.moderation_create_params" [label="<f0> SourceModule| <f1> openai.types.moderation_create_params",shape="record"];
	"openai.resources.fine_tuning" [label="<f0> Package| <f1> openai.resources.fine_tuning",shape="record"];
	"openai.resources.fine_tuning.fine_tuning" [label="<f0> SourceModule| <f1> openai.resources.fine_tuning.fine_tuning",shape="record"];
	"openai.resources.fine_tuning.checkpoints.checkpoints" [label="<f0> SourceModule| <f1> openai.resources.fine_tuning.checkpoints.checkpoints",shape="record"];
	"openai.resources.fine_tuning.checkpoints.permissions" [label="<f0> SourceModule| <f1> openai.resources.fine_tuning.checkpoints.permissions",shape="record"];
	"openai.types.fine_tuning.checkpoints.permission_retrieve_response" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.checkpoints.permission_retrieve_response",shape="record"];
	"openai.types.fine_tuning.checkpoints.permission_delete_response" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.checkpoints.permission_delete_response",shape="record"];
	"openai.types.fine_tuning.checkpoints.permission_create_response" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.checkpoints.permission_create_response",shape="record"];
	"openai.types.fine_tuning.checkpoints.permission_retrieve_params" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.checkpoints.permission_retrieve_params",shape="record"];
	"openai.types.fine_tuning.checkpoints.permission_create_params" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.checkpoints.permission_create_params",shape="record"];
	"openai.types.fine_tuning.checkpoints" [label="<f0> Package| <f1> openai.types.fine_tuning.checkpoints",shape="record"];
	"openai.types.fine_tuning" [label="<f0> Package| <f1> openai.types.fine_tuning",shape="record"];
	"openai.types.fine_tuning.fine_tuning_job_wandb_integration_object" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.fine_tuning_job_wandb_integration_object",shape="record"];
	"openai.types.fine_tuning.fine_tuning_job_wandb_integration" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.fine_tuning_job_wandb_integration",shape="record"];
	"openai.types.fine_tuning.fine_tuning_job_integration" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.fine_tuning_job_integration",shape="record"];
	"openai.types.fine_tuning.job_list_events_params" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.job_list_events_params",shape="record"];
	"openai.types.fine_tuning.fine_tuning_job_event" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.fine_tuning_job_event",shape="record"];
	"openai.types.fine_tuning.job_create_params" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.job_create_params",shape="record"];
	"openai.types.fine_tuning.job_list_params" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.job_list_params",shape="record"];
	"openai.types.fine_tuning.fine_tuning_job" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.fine_tuning_job",shape="record"];
	"openai.resources.fine_tuning.jobs.jobs" [label="<f0> SourceModule| <f1> openai.resources.fine_tuning.jobs.jobs",shape="record"];
	"openai.resources.fine_tuning.jobs.checkpoints" [label="<f0> SourceModule| <f1> openai.resources.fine_tuning.jobs.checkpoints",shape="record"];
	"openai.types.fine_tuning.jobs.fine_tuning_job_checkpoint" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.jobs.fine_tuning_job_checkpoint",shape="record"];
	"openai.types.fine_tuning.jobs.checkpoint_list_params" [label="<f0> SourceModule| <f1> openai.types.fine_tuning.jobs.checkpoint_list_params",shape="record"];
	"openai.types.fine_tuning.jobs" [label="<f0> Package| <f1> openai.types.fine_tuning.jobs",shape="record"];
	"openai.resources.fine_tuning.checkpoints" [label="<f0> Package| <f1> openai.resources.fine_tuning.checkpoints",shape="record"];
	"openai.resources.fine_tuning.jobs" [label="<f0> Package| <f1> openai.resources.fine_tuning.jobs",shape="record"];
	"openai.resources.completions" [label="<f0> SourceModule| <f1> openai.resources.completions",shape="record"];
	"openai.types.chat.chat_completion_stream_options_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_stream_options_param",shape="record"];
	"openai.types.chat" [label="<f0> Package| <f1> openai.types.chat",shape="record"];
	"openai.types.chat.chat_completion_content_part_input_audio_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_content_part_input_audio_param",shape="record"];
	"openai.types.chat.chat_completion_function_call_option_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_function_call_option_param",shape="record"];
	"openai.types.chat.chat_completion_content_part_refusal_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_content_part_refusal_param",shape="record"];
	"openai.types.chat.chat_completion_tool_choice_option_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_tool_choice_option_param",shape="record"];
	"openai.types.chat.chat_completion_prediction_content_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_prediction_content_param",shape="record"];
	"openai.types.chat.chat_completion_content_part_image_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_content_part_image_param",shape="record"];
	"openai.types.chat.chat_completion_named_tool_choice_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_named_tool_choice_param",shape="record"];
	"openai.types.chat.chat_completion_message_tool_call_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_message_tool_call_param",shape="record"];
	"openai.types.chat.chat_completion_developer_message_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_developer_message_param",shape="record"];
	"openai.types.chat.chat_completion_content_part_text_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_content_part_text_param",shape="record"];
	"openai.types.chat.chat_completion_assistant_message_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_assistant_message_param",shape="record"];
	"openai.types.chat.chat_completion_function_message_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_function_message_param",shape="record"];
	"openai.types.chat.chat_completion_system_message_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_system_message_param",shape="record"];
	"openai.types.chat.chat_completion_user_message_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_user_message_param",shape="record"];
	"openai.types.chat.chat_completion_tool_message_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_tool_message_param",shape="record"];
	"openai.types.chat.chat_completion_content_part_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_content_part_param",shape="record"];
	"openai.types.chat.chat_completion_message_tool_call" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_message_tool_call",shape="record"];
	"openai.types.chat.chat_completion_reasoning_effort" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_reasoning_effort",shape="record"];
	"openai.types.chat.chat_completion_token_logprob" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_token_logprob",shape="record"];
	"openai.types.chat.chat_completion_store_message" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_store_message",shape="record"];
	"openai.types.chat.chat_completion_message_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_message_param",shape="record"];
	"openai.types.chat.chat_completion_audio_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_audio_param",shape="record"];
	"openai.types.chat.chat_completion_tool_param" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_tool_param",shape="record"];
	"openai.types.chat.parsed_function_tool_call" [label="<f0> SourceModule| <f1> openai.types.chat.parsed_function_tool_call",shape="record"];
	"openai.types.chat.completion_update_params" [label="<f0> SourceModule| <f1> openai.types.chat.completion_update_params",shape="record"];
	"openai.types.chat.completion_create_params" [label="<f0> SourceModule| <f1> openai.types.chat.completion_create_params",shape="record"];
	"openai.types.chat.chat_completion_modality" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_modality",shape="record"];
	"openai.types.chat.chat_completion_message" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_message",shape="record"];
	"openai.types.chat.chat_completion_deleted" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_deleted",shape="record"];
	"openai.types.chat.parsed_chat_completion" [label="<f0> SourceModule| <f1> openai.types.chat.parsed_chat_completion",shape="record"];
	"openai.types.chat.completion_list_params" [label="<f0> SourceModule| <f1> openai.types.chat.completion_list_params",shape="record"];
	"openai.types.chat.chat_completion_chunk" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_chunk",shape="record"];
	"openai.types.completion_usage" [label="<f0> SourceModule| <f1> openai.types.completion_usage",shape="record"];
	"openai.types.chat.chat_completion_audio" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_audio",shape="record"];
	"openai.types.chat.chat_completion_role" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion_role",shape="record"];
	"openai.types.chat.chat_completion" [label="<f0> SourceModule| <f1> openai.types.chat.chat_completion",shape="record"];
	"openai.types.completion" [label="<f0> SourceModule| <f1> openai.types.completion",shape="record"];
	"openai.types.completion_choice" [label="<f0> SourceModule| <f1> openai.types.completion_choice",shape="record"];
	"openai._streaming" [label="<f0> SourceModule| <f1> openai._streaming",shape="record"];
	"openai.types.completion_create_params" [label="<f0> SourceModule| <f1> openai.types.completion_create_params",shape="record"];
	"openai.resources.embeddings" [label="<f0> SourceModule| <f1> openai.resources.embeddings",shape="record"];
	"openai.types.create_embedding_response" [label="<f0> SourceModule| <f1> openai.types.create_embedding_response",shape="record"];
	"openai.types.embedding" [label="<f0> SourceModule| <f1> openai.types.embedding",shape="record"];
	"openai.types.embedding_model" [label="<f0> SourceModule| <f1> openai.types.embedding_model",shape="record"];
	"openai._extras" [label="<f0> Package| <f1> openai._extras",shape="record"];
	"openai._extras.sounddevice_proxy" [label="<f0> SourceModule| <f1> openai._extras.sounddevice_proxy",shape="record"];
	"sounddevice" [label="<f0> MissingModule| <f1> sounddevice",shape="record"];
	"openai._extras._common" [label="<f0> SourceModule| <f1> openai._extras._common",shape="record"];
	"openai._extras.pandas_proxy" [label="<f0> SourceModule| <f1> openai._extras.pandas_proxy",shape="record"];
	"openai._extras.numpy_proxy" [label="<f0> SourceModule| <f1> openai._extras.numpy_proxy",shape="record"];
	"openai.types.embedding_create_params" [label="<f0> SourceModule| <f1> openai.types.embedding_create_params",shape="record"];
	"openai.resources.responses" [label="<f0> Package| <f1> openai.resources.responses",shape="record"];
	"openai.resources.responses.input_items" [label="<f0> SourceModule| <f1> openai.resources.responses.input_items",shape="record"];
	"openai.types.responses.response_includable" [label="<f0> SourceModule| <f1> openai.types.responses.response_includable",shape="record"];
	"openai.types.responses.response_item" [label="<f0> SourceModule| <f1> openai.types.responses.response_item",shape="record"];
	"openai.types.responses.response_function_tool_call_output_item" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_tool_call_output_item",shape="record"];
	"openai.types.responses.response_computer_tool_call_output_item" [label="<f0> SourceModule| <f1> openai.types.responses.response_computer_tool_call_output_item",shape="record"];
	"openai.types.responses.response_computer_tool_call_output_screenshot" [label="<f0> SourceModule| <f1> openai.types.responses.response_computer_tool_call_output_screenshot",shape="record"];
	"openai.types.responses.response_function_tool_call_item" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_tool_call_item",shape="record"];
	"openai.types.responses.response_function_tool_call" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_tool_call",shape="record"];
	"openai.types.responses.response_file_search_tool_call" [label="<f0> SourceModule| <f1> openai.types.responses.response_file_search_tool_call",shape="record"];
	"openai.types.responses.response_function_web_search" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_web_search",shape="record"];
	"openai.types.responses.response_input_message_item" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_message_item",shape="record"];
	"openai.types.responses.response_input_message_content_list" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_message_content_list",shape="record"];
	"openai.types.responses.response_input_content" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_content",shape="record"];
	"openai.types.responses.response_input_image" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_image",shape="record"];
	"openai.types.responses.response_input_text" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_text",shape="record"];
	"openai.types.responses.response_input_file" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_file",shape="record"];
	"openai.types.responses.response_computer_tool_call" [label="<f0> SourceModule| <f1> openai.types.responses.response_computer_tool_call",shape="record"];
	"openai.types.responses.response_output_message" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_message",shape="record"];
	"openai.types.responses.response_output_refusal" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_refusal",shape="record"];
	"openai.types.responses.response_output_text" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_text",shape="record"];
	"openai.types.responses.input_item_list_params" [label="<f0> SourceModule| <f1> openai.types.responses.input_item_list_params",shape="record"];
	"openai.types.responses" [label="<f0> Package| <f1> openai.types.responses",shape="record"];
	"openai.types.responses.response_computer_tool_call_output_screenshot_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_computer_tool_call_output_screenshot_param",shape="record"];
	"openai.types.responses.response_code_interpreter_call_interpreting_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_code_interpreter_call_interpreting_event",shape="record"];
	"openai.types.responses.response_code_interpreter_call_in_progress_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_code_interpreter_call_in_progress_event",shape="record"];
	"openai.types.responses.response_code_interpreter_call_code_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_code_interpreter_call_code_delta_event",shape="record"];
	"openai.types.responses.response_code_interpreter_call_completed_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_code_interpreter_call_completed_event",shape="record"];
	"openai.types.responses.response_code_interpreter_call_code_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_code_interpreter_call_code_done_event",shape="record"];
	"openai.types.responses.response_format_text_json_schema_config_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_format_text_json_schema_config_param",shape="record"];
	"openai.types.responses.response_function_call_arguments_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_call_arguments_delta_event",shape="record"];
	"openai.types.responses.response_function_call_arguments_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_call_arguments_done_event",shape="record"];
	"openai.types.responses.response_file_search_call_in_progress_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_file_search_call_in_progress_event",shape="record"];
	"openai.types.responses.response_web_search_call_in_progress_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_web_search_call_in_progress_event",shape="record"];
	"openai.types.responses.response_input_message_content_list_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_message_content_list_param",shape="record"];
	"openai.types.responses.response_file_search_call_searching_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_file_search_call_searching_event",shape="record"];
	"openai.types.responses.response_file_search_call_completed_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_file_search_call_completed_event",shape="record"];
	"openai.types.responses.response_web_search_call_searching_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_web_search_call_searching_event",shape="record"];
	"openai.types.responses.response_web_search_call_completed_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_web_search_call_completed_event",shape="record"];
	"openai.types.responses.response_format_text_json_schema_config" [label="<f0> SourceModule| <f1> openai.types.responses.response_format_text_json_schema_config",shape="record"];
	"openai.types.responses.response_audio_transcript_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_audio_transcript_delta_event",shape="record"];
	"openai.types.responses.response_text_annotation_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_text_annotation_delta_event",shape="record"];
	"openai.types.responses.response_file_search_tool_call_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_file_search_tool_call_param",shape="record"];
	"openai.types.responses.response_audio_transcript_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_audio_transcript_done_event",shape="record"];
	"openai.types.responses.response_code_interpreter_tool_call" [label="<f0> SourceModule| <f1> openai.types.responses.response_code_interpreter_tool_call",shape="record"];
	"openai.types.responses.response_function_web_search_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_web_search_param",shape="record"];
	"openai.types.responses.response_function_tool_call_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_function_tool_call_param",shape="record"];
	"openai.types.responses.response_format_text_config_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_format_text_config_param",shape="record"];
	"openai.types.responses.response_content_part_added_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_content_part_added_event",shape="record"];
	"openai.types.responses.response_computer_tool_call_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_computer_tool_call_param",shape="record"];
	"openai.types.responses.response_output_item_added_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_item_added_event",shape="record"];
	"openai.types.responses.response_content_part_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_content_part_done_event",shape="record"];
	"openai.types.responses.response_output_item_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_item_done_event",shape="record"];
	"openai.types.responses.response_reasoning_item_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_reasoning_item_param",shape="record"];
	"openai.types.responses.response_output_refusal_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_refusal_param",shape="record"];
	"openai.types.responses.response_output_message_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_message_param",shape="record"];
	"openai.types.responses.response_refusal_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_refusal_delta_event",shape="record"];
	"openai.types.responses.response_input_content_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_content_param",shape="record"];
	"openai.types.responses.response_refusal_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_refusal_done_event",shape="record"];
	"openai.types.responses.response_format_text_config" [label="<f0> SourceModule| <f1> openai.types.responses.response_format_text_config",shape="record"];
	"openai.types.responses.tool_choice_function_param" [label="<f0> SourceModule| <f1> openai.types.responses.tool_choice_function_param",shape="record"];
	"openai.types.responses.response_text_config_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_text_config_param",shape="record"];
	"openai.types.responses.response_output_text_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_text_param",shape="record"];
	"openai.types.responses.response_input_image_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_image_param",shape="record"];
	"openai.types.responses.response_in_progress_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_in_progress_event",shape="record"];
	"openai.types.responses.response_audio_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_audio_delta_event",shape="record"];
	"openai.types.responses.response_text_delta_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_text_delta_event",shape="record"];
	"openai.types.responses.response_input_text_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_text_param",shape="record"];
	"openai.types.responses.response_input_item_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_item_param",shape="record"];
	"openai.types.responses.response_input_file_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_file_param",shape="record"];
	"openai.types.responses.response_incomplete_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_incomplete_event",shape="record"];
	"openai.types.responses.response_audio_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_audio_done_event",shape="record"];
	"openai.types.responses.response_text_done_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_text_done_event",shape="record"];
	"openai.types.responses.response_retrieve_params" [label="<f0> SourceModule| <f1> openai.types.responses.response_retrieve_params",shape="record"];
	"openai.types.responses.response_completed_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_completed_event",shape="record"];
	"openai.types.responses.easy_input_message_param" [label="<f0> SourceModule| <f1> openai.types.responses.easy_input_message_param",shape="record"];
	"openai.types.responses.tool_choice_types_param" [label="<f0> SourceModule| <f1> openai.types.responses.tool_choice_types_param",shape="record"];
	"openai.types.responses.response_reasoning_item" [label="<f0> SourceModule| <f1> openai.types.responses.response_reasoning_item",shape="record"];
	"openai.types.responses.response_created_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_created_event",shape="record"];
	"openai.types.responses.response_create_params" [label="<f0> SourceModule| <f1> openai.types.responses.response_create_params",shape="record"];
	"openai.types.responses.file_search_tool_param" [label="<f0> SourceModule| <f1> openai.types.responses.file_search_tool_param",shape="record"];
	"openai.types.responses.web_search_tool_param" [label="<f0> SourceModule| <f1> openai.types.responses.web_search_tool_param",shape="record"];
	"openai.types.responses.response_stream_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_stream_event",shape="record"];
	"openai.types.responses.response_failed_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_failed_event",shape="record"];
	"openai.types.responses.tool_choice_function" [label="<f0> SourceModule| <f1> openai.types.responses.tool_choice_function",shape="record"];
	"openai.types.responses.response_text_config" [label="<f0> SourceModule| <f1> openai.types.responses.response_text_config",shape="record"];
	"openai.types.responses.response_output_item" [label="<f0> SourceModule| <f1> openai.types.responses.response_output_item",shape="record"];
	"openai.types.responses.response_input_param" [label="<f0> SourceModule| <f1> openai.types.responses.response_input_param",shape="record"];
	"openai.types.responses.response_error_event" [label="<f0> SourceModule| <f1> openai.types.responses.response_error_event",shape="record"];
	"openai.types.responses.tool_choice_options" [label="<f0> SourceModule| <f1> openai.types.responses.tool_choice_options",shape="record"];
	"openai.types.responses.function_tool_param" [label="<f0> SourceModule| <f1> openai.types.responses.function_tool_param",shape="record"];
	"openai.types.responses.computer_tool_param" [label="<f0> SourceModule| <f1> openai.types.responses.computer_tool_param",shape="record"];
	"openai.types.responses.response_item_list" [label="<f0> SourceModule| <f1> openai.types.responses.response_item_list",shape="record"];
	"openai.types.responses.tool_choice_types" [label="<f0> SourceModule| <f1> openai.types.responses.tool_choice_types",shape="record"];
	"openai.types.responses.file_search_tool" [label="<f0> SourceModule| <f1> openai.types.responses.file_search_tool",shape="record"];
	"openai.types.responses.web_search_tool" [label="<f0> SourceModule| <f1> openai.types.responses.web_search_tool",shape="record"];
	"openai.types.responses.response_status" [label="<f0> SourceModule| <f1> openai.types.responses.response_status",shape="record"];
	"openai.types.responses.parsed_response" [label="<f0> SourceModule| <f1> openai.types.responses.parsed_response",shape="record"];
	"openai._utils._transform" [label="<f0> SourceModule| <f1> openai._utils._transform",shape="record"];
	"openai._utils._typing" [label="<f0> SourceModule| <f1> openai._utils._typing",shape="record"];
	"openai._files" [label="<f0> SourceModule| <f1> openai._files",shape="record"];
	"openai._utils._utils" [label="<f0> SourceModule| <f1> openai._utils._utils",shape="record"];
	"openai.types.responses.response_usage" [label="<f0> SourceModule| <f1> openai.types.responses.response_usage",shape="record"];
	"openai.types.responses.response_error" [label="<f0> SourceModule| <f1> openai.types.responses.response_error",shape="record"];
	"openai.types.responses.function_tool" [label="<f0> SourceModule| <f1> openai.types.responses.function_tool",shape="record"];
	"openai.types.responses.computer_tool" [label="<f0> SourceModule| <f1> openai.types.responses.computer_tool",shape="record"];
	"openai.types.responses.tool_param" [label="<f0> SourceModule| <f1> openai.types.responses.tool_param",shape="record"];
	"openai.types.responses.response" [label="<f0> SourceModule| <f1> openai.types.responses.response",shape="record"];
	"openai.types.responses.tool" [label="<f0> SourceModule| <f1> openai.types.responses.tool",shape="record"];
	"openai.resources.responses.responses" [label="<f0> SourceModule| <f1> openai.resources.responses.responses",shape="record"];
	"openai.lib.streaming.responses._responses" [label="<f0> SourceModule| <f1> openai.lib.streaming.responses._responses",shape="record"];
	"openai.lib.streaming.responses" [label="<f0> Package| <f1> openai.lib.streaming.responses",shape="record"];
	"openai.lib.streaming.responses._events" [label="<f0> SourceModule| <f1> openai.lib.streaming.responses._events",shape="record"];
	"openai.lib.streaming.responses._types" [label="<f0> SourceModule| <f1> openai.lib.streaming.responses._types",shape="record"];
	"openai.lib._parsing._responses" [label="<f0> SourceModule| <f1> openai.lib._parsing._responses",shape="record"];
	"openai.lib._parsing" [label="<f0> Package| <f1> openai.lib._parsing",shape="record"];
	"openai.lib._parsing._completions" [label="<f0> SourceModule| <f1> openai.lib._parsing._completions",shape="record"];
	"openai.lib._pydantic" [label="<f0> SourceModule| <f1> openai.lib._pydantic",shape="record"];
	"openai.lib._tools" [label="<f0> SourceModule| <f1> openai.lib._tools",shape="record"];
	"openai.resources.uploads" [label="<f0> Package| <f1> openai.resources.uploads",shape="record"];
	"openai.resources.uploads.uploads" [label="<f0> SourceModule| <f1> openai.resources.uploads.uploads",shape="record"];
	"openai.types.file_purpose" [label="<f0> SourceModule| <f1> openai.types.file_purpose",shape="record"];
	"openai.types.upload" [label="<f0> SourceModule| <f1> openai.types.upload",shape="record"];
	"openai.types.upload_complete_params" [label="<f0> SourceModule| <f1> openai.types.upload_complete_params",shape="record"];
	"openai.types.upload_create_params" [label="<f0> SourceModule| <f1> openai.types.upload_create_params",shape="record"];
	"openai.resources.uploads.parts" [label="<f0> SourceModule| <f1> openai.resources.uploads.parts",shape="record"];
	"openai.types.uploads.upload_part" [label="<f0> SourceModule| <f1> openai.types.uploads.upload_part",shape="record"];
	"openai.types.uploads.part_create_params" [label="<f0> SourceModule| <f1> openai.types.uploads.part_create_params",shape="record"];
	"openai.types.uploads" [label="<f0> Package| <f1> openai.types.uploads",shape="record"];
	"openai.resources.batches" [label="<f0> SourceModule| <f1> openai.resources.batches",shape="record"];
	"openai.types.batch" [label="<f0> SourceModule| <f1> openai.types.batch",shape="record"];
	"openai.types.batch_request_counts" [label="<f0> SourceModule| <f1> openai.types.batch_request_counts",shape="record"];
	"openai.types.batch_error" [label="<f0> SourceModule| <f1> openai.types.batch_error",shape="record"];
	"openai.types.batch_create_params" [label="<f0> SourceModule| <f1> openai.types.batch_create_params",shape="record"];
	"openai.types.batch_list_params" [label="<f0> SourceModule| <f1> openai.types.batch_list_params",shape="record"];
	"openai.resources.models" [label="<f0> SourceModule| <f1> openai.resources.models",shape="record"];
	"openai.types.model_deleted" [label="<f0> SourceModule| <f1> openai.types.model_deleted",shape="record"];
	"openai.types.model" [label="<f0> SourceModule| <f1> openai.types.model",shape="record"];
	"openai.resources.images" [label="<f0> SourceModule| <f1> openai.resources.images",shape="record"];
	"openai.types.images_response" [label="<f0> SourceModule| <f1> openai.types.images_response",shape="record"];
	"openai.types.image" [label="<f0> SourceModule| <f1> openai.types.image",shape="record"];
	"openai.types.image_model" [label="<f0> SourceModule| <f1> openai.types.image_model",shape="record"];
	"openai.types.image_create_variation_params" [label="<f0> SourceModule| <f1> openai.types.image_create_variation_params",shape="record"];
	"openai.types.image_generate_params" [label="<f0> SourceModule| <f1> openai.types.image_generate_params",shape="record"];
	"openai.types.image_edit_params" [label="<f0> SourceModule| <f1> openai.types.image_edit_params",shape="record"];
	"openai.resources.files" [label="<f0> SourceModule| <f1> openai.resources.files",shape="record"];
	"openai.types.file_deleted" [label="<f0> SourceModule| <f1> openai.types.file_deleted",shape="record"];
	"openai.types.file_create_params" [label="<f0> SourceModule| <f1> openai.types.file_create_params",shape="record"];
	"openai.types.file_list_params" [label="<f0> SourceModule| <f1> openai.types.file_list_params",shape="record"];
	"openai.resources.evals" [label="<f0> Package| <f1> openai.resources.evals",shape="record"];
	"openai.resources.evals.evals" [label="<f0> SourceModule| <f1> openai.resources.evals.evals",shape="record"];
	"openai.types.eval_retrieve_response" [label="<f0> SourceModule| <f1> openai.types.eval_retrieve_response",shape="record"];
	"openai.types.eval_stored_completions_data_source_config" [label="<f0> SourceModule| <f1> openai.types.eval_stored_completions_data_source_config",shape="record"];
	"openai.types.eval_custom_data_source_config" [label="<f0> SourceModule| <f1> openai.types.eval_custom_data_source_config",shape="record"];
	"openai.types.eval_text_similarity_grader" [label="<f0> SourceModule| <f1> openai.types.eval_text_similarity_grader",shape="record"];
	"openai.types.eval_string_check_grader" [label="<f0> SourceModule| <f1> openai.types.eval_string_check_grader",shape="record"];
	"openai.types.eval_label_model_grader" [label="<f0> SourceModule| <f1> openai.types.eval_label_model_grader",shape="record"];
	"openai.types.eval_update_response" [label="<f0> SourceModule| <f1> openai.types.eval_update_response",shape="record"];
	"openai.types.eval_delete_response" [label="<f0> SourceModule| <f1> openai.types.eval_delete_response",shape="record"];
	"openai.types.eval_create_response" [label="<f0> SourceModule| <f1> openai.types.eval_create_response",shape="record"];
	"openai.types.eval_list_response" [label="<f0> SourceModule| <f1> openai.types.eval_list_response",shape="record"];
	"openai.resources.evals.runs.runs" [label="<f0> SourceModule| <f1> openai.resources.evals.runs.runs",shape="record"];
	"openai.types.evals.run_retrieve_response" [label="<f0> SourceModule| <f1> openai.types.evals.run_retrieve_response",shape="record"];
	"openai.types.evals.create_eval_completions_run_data_source" [label="<f0> SourceModule| <f1> openai.types.evals.create_eval_completions_run_data_source",shape="record"];
	"openai.types.evals.create_eval_jsonl_run_data_source" [label="<f0> SourceModule| <f1> openai.types.evals.create_eval_jsonl_run_data_source",shape="record"];
	"openai.types.evals.eval_api_error" [label="<f0> SourceModule| <f1> openai.types.evals.eval_api_error",shape="record"];
	"openai.types.evals.run_delete_response" [label="<f0> SourceModule| <f1> openai.types.evals.run_delete_response",shape="record"];
	"openai.types.evals.run_create_response" [label="<f0> SourceModule| <f1> openai.types.evals.run_create_response",shape="record"];
	"openai.types.evals.run_cancel_response" [label="<f0> SourceModule| <f1> openai.types.evals.run_cancel_response",shape="record"];
	"openai.types.evals.run_list_response" [label="<f0> SourceModule| <f1> openai.types.evals.run_list_response",shape="record"];
	"openai.types.evals.run_create_params" [label="<f0> SourceModule| <f1> openai.types.evals.run_create_params",shape="record"];
	"openai.types.evals.create_eval_completions_run_data_source_param" [label="<f0> SourceModule| <f1> openai.types.evals.create_eval_completions_run_data_source_param",shape="record"];
	"openai.types.evals.create_eval_jsonl_run_data_source_param" [label="<f0> SourceModule| <f1> openai.types.evals.create_eval_jsonl_run_data_source_param",shape="record"];
	"openai.types.evals.run_list_params" [label="<f0> SourceModule| <f1> openai.types.evals.run_list_params",shape="record"];
	"openai.types.evals" [label="<f0> Package| <f1> openai.types.evals",shape="record"];
	"openai.resources.evals.runs.output_items" [label="<f0> SourceModule| <f1> openai.resources.evals.runs.output_items",shape="record"];
	"openai.types.evals.runs.output_item_retrieve_response" [label="<f0> SourceModule| <f1> openai.types.evals.runs.output_item_retrieve_response",shape="record"];
	"openai.types.evals.runs.output_item_list_response" [label="<f0> SourceModule| <f1> openai.types.evals.runs.output_item_list_response",shape="record"];
	"openai.types.evals.runs.output_item_list_params" [label="<f0> SourceModule| <f1> openai.types.evals.runs.output_item_list_params",shape="record"];
	"openai.types.evals.runs" [label="<f0> Package| <f1> openai.types.evals.runs",shape="record"];
	"openai.types.eval_update_params" [label="<f0> SourceModule| <f1> openai.types.eval_update_params",shape="record"];
	"openai.types.eval_create_params" [label="<f0> SourceModule| <f1> openai.types.eval_create_params",shape="record"];
	"openai.types.eval_text_similarity_grader_param" [label="<f0> SourceModule| <f1> openai.types.eval_text_similarity_grader_param",shape="record"];
	"openai.types.eval_string_check_grader_param" [label="<f0> SourceModule| <f1> openai.types.eval_string_check_grader_param",shape="record"];
	"openai.types.eval_list_params" [label="<f0> SourceModule| <f1> openai.types.eval_list_params",shape="record"];
	"openai.resources.evals.runs" [label="<f0> Package| <f1> openai.resources.evals.runs",shape="record"];
	"openai.resources.audio" [label="<f0> Package| <f1> openai.resources.audio",shape="record"];
	"openai.resources.audio.transcriptions" [label="<f0> SourceModule| <f1> openai.resources.audio.transcriptions",shape="record"];
	"openai.types.audio.transcription_create_response" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_create_response",shape="record"];
	"openai.types.audio.transcription_stream_event" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_stream_event",shape="record"];
	"openai.types.audio.transcription_text_delta_event" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_text_delta_event",shape="record"];
	"openai.types.audio.transcription_text_done_event" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_text_done_event",shape="record"];
	"openai.types.audio.transcription_verbose" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_verbose",shape="record"];
	"openai.types.audio.transcription_segment" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_segment",shape="record"];
	"openai.types.audio.transcription_word" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_word",shape="record"];
	"openai.types.audio.transcription_include" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_include",shape="record"];
	"openai.types.audio_response_format" [label="<f0> SourceModule| <f1> openai.types.audio_response_format",shape="record"];
	"openai.types.audio.transcription" [label="<f0> SourceModule| <f1> openai.types.audio.transcription",shape="record"];
	"openai.types.audio_model" [label="<f0> SourceModule| <f1> openai.types.audio_model",shape="record"];
	"openai.types.audio.transcription_create_params" [label="<f0> SourceModule| <f1> openai.types.audio.transcription_create_params",shape="record"];
	"openai.types.audio" [label="<f0> Package| <f1> openai.types.audio",shape="record"];
	"openai.types.audio.translation_create_response" [label="<f0> SourceModule| <f1> openai.types.audio.translation_create_response",shape="record"];
	"openai.types.audio.translation_create_params" [label="<f0> SourceModule| <f1> openai.types.audio.translation_create_params",shape="record"];
	"openai.types.audio.speech_create_params" [label="<f0> SourceModule| <f1> openai.types.audio.speech_create_params",shape="record"];
	"openai.types.audio.translation_verbose" [label="<f0> SourceModule| <f1> openai.types.audio.translation_verbose",shape="record"];
	"openai.types.audio.speech_model" [label="<f0> SourceModule| <f1> openai.types.audio.speech_model",shape="record"];
	"openai.types.audio.translation" [label="<f0> SourceModule| <f1> openai.types.audio.translation",shape="record"];
	"openai.resources.audio.translations" [label="<f0> SourceModule| <f1> openai.resources.audio.translations",shape="record"];
	"openai.resources.audio.speech" [label="<f0> SourceModule| <f1> openai.resources.audio.speech",shape="record"];
	"openai.resources.audio.audio" [label="<f0> SourceModule| <f1> openai.resources.audio.audio",shape="record"];
	"openai.resources.chat" [label="<f0> Package| <f1> openai.resources.chat",shape="record"];
	"openai.resources.chat.completions" [label="<f0> Package| <f1> openai.resources.chat.completions",shape="record"];
	"openai.resources.chat.completions.completions" [label="<f0> SourceModule| <f1> openai.resources.chat.completions.completions",shape="record"];
	"openai.resources.chat.completions.messages" [label="<f0> SourceModule| <f1> openai.resources.chat.completions.messages",shape="record"];
	"openai.types.chat.completions.message_list_params" [label="<f0> SourceModule| <f1> openai.types.chat.completions.message_list_params",shape="record"];
	"openai.types.chat.completions" [label="<f0> Package| <f1> openai.types.chat.completions",shape="record"];
	"openai.resources.chat.chat" [label="<f0> SourceModule| <f1> openai.resources.chat.chat",shape="record"];
	"openai.resources.beta" [label="<f0> Package| <f1> openai.resources.beta",shape="record"];
	"openai.resources.beta.assistants" [label="<f0> SourceModule| <f1> openai.resources.beta.assistants",shape="record"];
	"openai.types.beta.assistant_response_format_option_param" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_response_format_option_param",shape="record"];
	"openai.types.beta.assistant_tool_param" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool_param",shape="record"];
	"openai.types.beta.code_interpreter_tool_param" [label="<f0> SourceModule| <f1> openai.types.beta.code_interpreter_tool_param",shape="record"];
	"openai.types.beta.file_search_tool_param" [label="<f0> SourceModule| <f1> openai.types.beta.file_search_tool_param",shape="record"];
	"openai.types.beta.function_tool_param" [label="<f0> SourceModule| <f1> openai.types.beta.function_tool_param",shape="record"];
	"openai.types.beta.assistant_deleted" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_deleted",shape="record"];
	"openai.types.beta.assistant" [label="<f0> SourceModule| <f1> openai.types.beta.assistant",shape="record"];
	"openai.types.beta.assistant_response_format_option" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_response_format_option",shape="record"];
	"openai.types.beta.assistant_tool" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool",shape="record"];
	"openai.types.beta.code_interpreter_tool" [label="<f0> SourceModule| <f1> openai.types.beta.code_interpreter_tool",shape="record"];
	"openai.types.beta.file_search_tool" [label="<f0> SourceModule| <f1> openai.types.beta.file_search_tool",shape="record"];
	"openai.types.beta.function_tool" [label="<f0> SourceModule| <f1> openai.types.beta.function_tool",shape="record"];
	"openai.types.beta.assistant_update_params" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_update_params",shape="record"];
	"openai.types.beta.assistant_create_params" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_create_params",shape="record"];
	"openai.types.beta.assistant_list_params" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_list_params",shape="record"];
	"openai.types.beta" [label="<f0> Package| <f1> openai.types.beta",shape="record"];
	"openai.types.beta.assistant_tool_choice_function_param" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool_choice_function_param",shape="record"];
	"openai.types.beta.assistant_tool_choice_option_param" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool_choice_option_param",shape="record"];
	"openai.types.beta.assistant_tool_choice_function" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool_choice_function",shape="record"];
	"openai.types.beta.thread_create_and_run_params" [label="<f0> SourceModule| <f1> openai.types.beta.thread_create_and_run_params",shape="record"];
	"openai.types.beta.threads.message_content_part_param" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_content_part_param",shape="record"];
	"openai.types.beta.threads" [label="<f0> Package| <f1> openai.types.beta.threads",shape="record"];
	"openai.types.beta.threads.required_action_function_tool_call" [label="<f0> SourceModule| <f1> openai.types.beta.threads.required_action_function_tool_call",shape="record"];
	"openai.types.beta.threads.run_submit_tool_outputs_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.run_submit_tool_outputs_params",shape="record"];
	"openai.types.beta.threads.file_citation_delta_annotation" [label="<f0> SourceModule| <f1> openai.types.beta.threads.file_citation_delta_annotation",shape="record"];
	"openai.types.beta.threads.file_path_delta_annotation" [label="<f0> SourceModule| <f1> openai.types.beta.threads.file_path_delta_annotation",shape="record"];
	"openai.types.beta.threads.image_file_content_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_file_content_block",shape="record"];
	"openai.types.beta.threads.file_citation_annotation" [label="<f0> SourceModule| <f1> openai.types.beta.threads.file_citation_annotation",shape="record"];
	"openai.types.beta.threads.image_url_content_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_url_content_block",shape="record"];
	"openai.types.beta.threads.image_file_delta_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_file_delta_block",shape="record"];
	"openai.types.beta.threads.refusal_content_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.refusal_content_block",shape="record"];
	"openai.types.beta.threads.message_update_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_update_params",shape="record"];
	"openai.types.beta.threads.message_create_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_create_params",shape="record"];
	"openai.types.beta.threads.message_content_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_content_delta",shape="record"];
	"openai.types.beta.threads.image_url_delta_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_url_delta_block",shape="record"];
	"openai.types.beta.threads.file_path_annotation" [label="<f0> SourceModule| <f1> openai.types.beta.threads.file_path_annotation",shape="record"];
	"openai.types.beta.threads.refusal_delta_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.refusal_delta_block",shape="record"];
	"openai.types.beta.threads.message_list_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_list_params",shape="record"];
	"openai.types.beta.threads.message_delta_event" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_delta_event",shape="record"];
	"openai.types.beta.threads.text_content_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.text_content_block",shape="record"];
	"openai.types.beta.threads.run_update_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.run_update_params",shape="record"];
	"openai.types.beta.threads.run_create_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.run_create_params",shape="record"];
	"openai.types.beta.threads.runs.run_step_include" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.run_step_include",shape="record"];
	"openai.types.beta.threads.runs" [label="<f0> Package| <f1> openai.types.beta.threads.runs",shape="record"];
	"openai.types.beta.threads.runs.code_interpreter_tool_call_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.code_interpreter_tool_call_delta",shape="record"];
	"openai.types.beta.threads.runs.message_creation_step_details" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.message_creation_step_details",shape="record"];
	"openai.types.beta.threads.runs.code_interpreter_output_image" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.code_interpreter_output_image",shape="record"];
	"openai.types.beta.threads.runs.run_step_delta_message_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.run_step_delta_message_delta",shape="record"];
	"openai.types.beta.threads.runs.file_search_tool_call_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.file_search_tool_call_delta",shape="record"];
	"openai.types.beta.threads.runs.code_interpreter_tool_call" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.code_interpreter_tool_call",shape="record"];
	"openai.types.beta.threads.runs.function_tool_call_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.function_tool_call_delta",shape="record"];
	"openai.types.beta.threads.runs.tool_calls_step_details" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.tool_calls_step_details",shape="record"];
	"openai.types.beta.threads.runs.tool_call_delta_object" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.tool_call_delta_object",shape="record"];
	"openai.types.beta.threads.runs.file_search_tool_call" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.file_search_tool_call",shape="record"];
	"openai.types.beta.threads.runs.code_interpreter_logs" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.code_interpreter_logs",shape="record"];
	"openai.types.beta.threads.runs.step_retrieve_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.step_retrieve_params",shape="record"];
	"openai.types.beta.threads.runs.run_step_delta_event" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.run_step_delta_event",shape="record"];
	"openai.types.beta.threads.runs.function_tool_call" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.function_tool_call",shape="record"];
	"openai.types.beta.threads.runs.step_list_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.step_list_params",shape="record"];
	"openai.types.beta.threads.runs.tool_call_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.tool_call_delta",shape="record"];
	"openai.types.beta.threads.runs.run_step_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.run_step_delta",shape="record"];
	"openai.types.beta.threads.runs.tool_call" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.tool_call",shape="record"];
	"openai.types.beta.threads.runs.run_step" [label="<f0> SourceModule| <f1> openai.types.beta.threads.runs.run_step",shape="record"];
	"openai.types.beta.threads.text_delta_block" [label="<f0> SourceModule| <f1> openai.types.beta.threads.text_delta_block",shape="record"];
	"openai.types.beta.threads.image_file_param" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_file_param",shape="record"];
	"openai.types.beta.threads.image_file_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_file_delta",shape="record"];
	"openai.types.beta.threads.annotation_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.annotation_delta",shape="record"];
	"openai.types.beta.threads.run_list_params" [label="<f0> SourceModule| <f1> openai.types.beta.threads.run_list_params",shape="record"];
	"openai.types.beta.threads.message_deleted" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_deleted",shape="record"];
	"openai.types.beta.threads.message_content" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_content",shape="record"];
	"openai.types.beta.threads.image_url_param" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_url_param",shape="record"];
	"openai.types.beta.threads.image_url_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_url_delta",shape="record"];
	"openai.types.beta.threads.message_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message_delta",shape="record"];
	"openai.types.beta.threads.text_delta" [label="<f0> SourceModule| <f1> openai.types.beta.threads.text_delta",shape="record"];
	"openai.types.beta.threads.run_status" [label="<f0> SourceModule| <f1> openai.types.beta.threads.run_status",shape="record"];
	"openai.types.beta.threads.image_file" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_file",shape="record"];
	"openai.types.beta.threads.annotation" [label="<f0> SourceModule| <f1> openai.types.beta.threads.annotation",shape="record"];
	"openai.types.beta.threads.image_url" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_url",shape="record"];
	"openai.types.beta.threads.message" [label="<f0> SourceModule| <f1> openai.types.beta.threads.message",shape="record"];
	"openai.types.beta.threads.text" [label="<f0> SourceModule| <f1> openai.types.beta.threads.text",shape="record"];
	"openai.types.beta.threads.run" [label="<f0> SourceModule| <f1> openai.types.beta.threads.run",shape="record"];
	"openai.types.beta.threads.image_file_content_block_param" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_file_content_block_param",shape="record"];
	"openai.types.beta.threads.image_url_content_block_param" [label="<f0> SourceModule| <f1> openai.types.beta.threads.image_url_content_block_param",shape="record"];
	"openai.types.beta.threads.text_content_block_param" [label="<f0> SourceModule| <f1> openai.types.beta.threads.text_content_block_param",shape="record"];
	"openai.types.beta.assistant_tool_choice_option" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool_choice_option",shape="record"];
	"openai.types.beta.assistant_tool_choice_param" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool_choice_param",shape="record"];
	"openai.types.beta.assistant_stream_event" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_stream_event",shape="record"];
	"openai.types.beta.assistant_tool_choice" [label="<f0> SourceModule| <f1> openai.types.beta.assistant_tool_choice",shape="record"];
	"openai.types.beta.thread_update_params" [label="<f0> SourceModule| <f1> openai.types.beta.thread_update_params",shape="record"];
	"openai.types.beta.thread_create_params" [label="<f0> SourceModule| <f1> openai.types.beta.thread_create_params",shape="record"];
	"openai.types.beta.thread_deleted" [label="<f0> SourceModule| <f1> openai.types.beta.thread_deleted",shape="record"];
	"openai.types.beta.thread" [label="<f0> SourceModule| <f1> openai.types.beta.thread",shape="record"];
	"openai.resources.beta.threads" [label="<f0> Package| <f1> openai.resources.beta.threads",shape="record"];
	"openai.resources.beta.threads.messages" [label="<f0> SourceModule| <f1> openai.resources.beta.threads.messages",shape="record"];
	"openai.resources.beta.threads.threads" [label="<f0> SourceModule| <f1> openai.resources.beta.threads.threads",shape="record"];
	"openai.resources.beta.threads.runs.runs" [label="<f0> SourceModule| <f1> openai.resources.beta.threads.runs.runs",shape="record"];
	"openai.resources.beta.threads.runs.steps" [label="<f0> SourceModule| <f1> openai.resources.beta.threads.runs.steps",shape="record"];
	"openai.resources.beta.threads.runs" [label="<f0> Package| <f1> openai.resources.beta.threads.runs",shape="record"];
	"openai.resources.beta.beta" [label="<f0> SourceModule| <f1> openai.resources.beta.beta",shape="record"];
	"openai.resources.beta.realtime.realtime" [label="<f0> SourceModule| <f1> openai.resources.beta.realtime.realtime",shape="record"];
	"openai.resources.beta.realtime" [label="<f0> Package| <f1> openai.resources.beta.realtime",shape="record"];
	"'websockets.exceptions'" [label="<f0> MissingModule| <f1> 'websockets.exceptions'",shape="record"];
	"'websockets.asyncio'" [label="<f0> MissingModule| <f1> 'websockets.asyncio'",shape="record"];
	"'websockets.sync'" [label="<f0> MissingModule| <f1> 'websockets.sync'",shape="record"];
	"openai.types.beta.realtime.realtime_client_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.realtime_client_event_param",shape="record"];
	"openai.types.beta.realtime.conversation_item_truncate_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_truncate_event_param",shape="record"];
	"openai.types.beta.realtime.conversation_item_retrieve_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_retrieve_event_param",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_commit_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_commit_event_param",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_append_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_append_event_param",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_clear_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_clear_event_param",shape="record"];
	"openai.types.beta.realtime.conversation_item_delete_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_delete_event_param",shape="record"];
	"openai.types.beta.realtime.conversation_item_create_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_create_event_param",shape="record"];
	"openai.types.beta.realtime.response_cancel_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_cancel_event_param",shape="record"];
	"openai.types.beta.realtime.conversation_item_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_param",shape="record"];
	"openai.types.beta.realtime.conversation_item_content_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_content_param",shape="record"];
	"openai.types.beta.realtime.realtime_server_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.realtime_server_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_completed_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_input_audio_transcription_completed_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_failed_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_input_audio_transcription_failed_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_delta_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_input_audio_transcription_delta_event",shape="record"];
	"openai.types.beta.realtime.response_function_call_arguments_delta_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_function_call_arguments_delta_event",shape="record"];
	"openai.types.beta.realtime.response_function_call_arguments_done_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_function_call_arguments_done_event",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_speech_stopped_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_speech_stopped_event",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_speech_started_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_speech_started_event",shape="record"];
	"openai.types.beta.realtime.response_audio_transcript_delta_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_audio_transcript_delta_event",shape="record"];
	"openai.types.beta.realtime.response_audio_transcript_done_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_audio_transcript_done_event",shape="record"];
	"openai.types.beta.realtime.transcription_session_updated_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.transcription_session_updated_event",shape="record"];
	"openai.types.beta.realtime.transcription_session" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.transcription_session",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_committed_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_committed_event",shape="record"];
	"openai.types.beta.realtime.response_content_part_added_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_content_part_added_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_truncated_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_truncated_event",shape="record"];
	"openai.types.beta.realtime.response_output_item_added_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_output_item_added_event",shape="record"];
	"openai.types.beta.realtime.response_content_part_done_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_content_part_done_event",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_cleared_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_cleared_event",shape="record"];
	"openai.types.beta.realtime.response_output_item_done_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_output_item_done_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_deleted_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_deleted_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_created_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_created_event",shape="record"];
	"openai.types.beta.realtime.response_audio_delta_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_audio_delta_event",shape="record"];
	"openai.types.beta.realtime.conversation_created_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_created_event",shape="record"];
	"openai.types.beta.realtime.response_text_delta_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_text_delta_event",shape="record"];
	"openai.types.beta.realtime.response_audio_done_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_audio_done_event",shape="record"];
	"openai.types.beta.realtime.rate_limits_updated_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.rate_limits_updated_event",shape="record"];
	"openai.types.beta.realtime.response_text_done_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_text_done_event",shape="record"];
	"openai.types.beta.realtime.response_created_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_created_event",shape="record"];
	"openai.types.beta.realtime.realtime_response" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.realtime_response",shape="record"];
	"openai.types.beta.realtime.realtime_response_status" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.realtime_response_status",shape="record"];
	"openai.types.beta.realtime.realtime_response_usage" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.realtime_response_usage",shape="record"];
	"openai.types.beta.realtime.session_updated_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.session_updated_event",shape="record"];
	"openai.types.beta.realtime.session" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.session",shape="record"];
	"openai.types.beta.realtime.session_created_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.session_created_event",shape="record"];
	"openai.types.beta.realtime.response_done_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_done_event",shape="record"];
	"openai.types.beta.realtime.conversation_item" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item",shape="record"];
	"openai.types.beta.realtime.conversation_item_content" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_content",shape="record"];
	"openai.types.beta.realtime.error_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.error_event",shape="record"];
	"openai.types.beta.realtime.realtime_client_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.realtime_client_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_truncate_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_truncate_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_retrieve_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_retrieve_event",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_commit_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_commit_event",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_append_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_append_event",shape="record"];
	"openai.types.beta.realtime.input_audio_buffer_clear_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.input_audio_buffer_clear_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_delete_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_delete_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_create_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_create_event",shape="record"];
	"openai.types.beta.realtime.transcription_session_update" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.transcription_session_update",shape="record"];
	"openai.types.beta.realtime.response_create_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_create_event",shape="record"];
	"openai.types.beta.realtime.conversation_item_with_reference" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_with_reference",shape="record"];
	"openai.types.beta.realtime.response_cancel_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_cancel_event",shape="record"];
	"openai.types.beta.realtime.session_update_event" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.session_update_event",shape="record"];
	"openai.types.websocket_connection_options" [label="<f0> SourceModule| <f1> openai.types.websocket_connection_options",shape="record"];
	"'websockets.extensions'" [label="<f0> MissingModule| <f1> 'websockets.extensions'",shape="record"];
	"websockets" [label="<f0> MissingModule| <f1> websockets",shape="record"];
	"openai.resources.beta.realtime.transcription_sessions" [label="<f0> SourceModule| <f1> openai.resources.beta.realtime.transcription_sessions",shape="record"];
	"openai.types.beta.realtime.transcription_session_create_params" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.transcription_session_create_params",shape="record"];
	"openai.types.beta.realtime.transcription_session_update_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.transcription_session_update_param",shape="record"];
	"openai.types.beta.realtime.response_create_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.response_create_event_param",shape="record"];
	"openai.types.beta.realtime.conversation_item_with_reference_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.conversation_item_with_reference_param",shape="record"];
	"openai.types.beta.realtime.session_update_event_param" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.session_update_event_param",shape="record"];
	"openai.types.beta.realtime" [label="<f0> Package| <f1> openai.types.beta.realtime",shape="record"];
	"openai.types.beta.realtime.session_create_response" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.session_create_response",shape="record"];
	"openai.types.beta.realtime.realtime_connect_params" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.realtime_connect_params",shape="record"];
	"openai.types.beta.realtime.session_create_params" [label="<f0> SourceModule| <f1> openai.types.beta.realtime.session_create_params",shape="record"];
	"openai.resources.beta.realtime.sessions" [label="<f0> SourceModule| <f1> openai.resources.beta.realtime.sessions",shape="record"];
	"openai.resources.beta.chat.chat" [label="<f0> SourceModule| <f1> openai.resources.beta.chat.chat",shape="record"];
	"openai.resources.beta.chat" [label="<f0> Package| <f1> openai.resources.beta.chat",shape="record"];
	"openai.resources.beta.chat.completions" [label="<f0> SourceModule| <f1> openai.resources.beta.chat.completions",shape="record"];
	"openai.lib.streaming.chat" [label="<f0> Package| <f1> openai.lib.streaming.chat",shape="record"];
	"openai.lib.streaming.chat._completions" [label="<f0> SourceModule| <f1> openai.lib.streaming.chat._completions",shape="record"];
	"openai.lib.streaming._deltas" [label="<f0> SourceModule| <f1> openai.lib.streaming._deltas",shape="record"];
	"jiter.from_json" [label="<f0> MissingModule| <f1> jiter.from_json",shape="record"];
	"jiter" [label="<f0> Package| <f1> jiter",shape="record"];
	"jiter.jiter" [label="<f0> Extension| <f1> jiter.jiter",shape="record"];
	"openai.lib.streaming.chat._events" [label="<f0> SourceModule| <f1> openai.lib.streaming.chat._events",shape="record"];
	"openai.lib.streaming.chat._types" [label="<f0> SourceModule| <f1> openai.lib.streaming.chat._types",shape="record"];
	"openai.types.chat_model" [label="<f0> SourceModule| <f1> openai.types.chat_model",shape="record"];
	"openai.lib.streaming" [label="<f0> Package| <f1> openai.lib.streaming",shape="record"];
	"openai.lib.streaming._assistants" [label="<f0> SourceModule| <f1> openai.lib.streaming._assistants",shape="record"];
	"openai.lib._old_api" [label="<f0> SourceModule| <f1> openai.lib._old_api",shape="record"];
	"openai.version" [label="<f0> SourceModule| <f1> openai.version",shape="record"];
	"openai.lib.azure" [label="<f0> SourceModule| <f1> openai.lib.azure",shape="record"];
	"openai.lib" [label="<f0> Package| <f1> openai.lib",shape="record"];
	"openai._utils._logs" [label="<f0> SourceModule| <f1> openai._utils._logs",shape="record"];
	"openai._base_client" [label="<f0> SourceModule| <f1> openai._base_client",shape="record"];
	"openai._qs" [label="<f0> SourceModule| <f1> openai._qs",shape="record"];
	"distro" [label="<f0> Package| <f1> distro",shape="record"];
	"distro.distro" [label="<f0> SourceModule| <f1> distro.distro",shape="record"];
	"openai._exceptions" [label="<f0> SourceModule| <f1> openai._exceptions",shape="record"];
	"openai._constants" [label="<f0> SourceModule| <f1> openai._constants",shape="record"];
	"openai._response" [label="<f0> SourceModule| <f1> openai._response",shape="record"];
	"openai._version" [label="<f0> SourceModule| <f1> openai._version",shape="record"];
	"openai._models" [label="<f0> SourceModule| <f1> openai._models",shape="record"];
	"openai._client" [label="<f0> SourceModule| <f1> openai._client",shape="record"];
	"openai._utils" [label="<f0> Package| <f1> openai._utils",shape="record"];
	"openai._utils._reflection" [label="<f0> SourceModule| <f1> openai._utils._reflection",shape="record"];
	"openai._utils._streams" [label="<f0> SourceModule| <f1> openai._utils._streams",shape="record"];
	"openai._utils._proxy" [label="<f0> SourceModule| <f1> openai._utils._proxy",shape="record"];
	"openai._utils._sync" [label="<f0> SourceModule| <f1> openai._utils._sync",shape="record"];
	"openai._types" [label="<f0> SourceModule| <f1> openai._types",shape="record"];
	"openai.types" [label="<f0> Package| <f1> openai.types",shape="record"];
	"openai.types.file_content" [label="<f0> SourceModule| <f1> openai.types.file_content",shape="record"];
	"openai._legacy_response" [label="<f0> SourceModule| <f1> openai._legacy_response",shape="record"];
	"langchain_community.utils.openai" [label="<f0> SourceModule| <f1> langchain_community.utils.openai",shape="record"];
	"langchain_core.language_models.llms" [label="<f0> SourceModule| <f1> langchain_core.language_models.llms",shape="record"];
	"langchain_core.language_models.base" [label="<f0> SourceModule| <f1> langchain_core.language_models.base",shape="record"];
	"transformers" [label="<f0> MissingModule| <f1> transformers",shape="record"];
	"langchain_core.globals" [label="<f0> SourceModule| <f1> langchain_core.globals",shape="record"];
	"langchain_community.tools.tavily_search" [label="<f0> Package| <f1> langchain_community.tools.tavily_search",shape="record"];
	"langchain_community.tools.tavily_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.tavily_search.tool",shape="record"];
	"langchain_community.utilities.tavily_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.tavily_search",shape="record"];
	"langchain_community.tools.steamship_image_generation" [label="<f0> Package| <f1> langchain_community.tools.steamship_image_generation",shape="record"];
	"langchain_community.tools.steamship_image_generation.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.steamship_image_generation.tool",shape="record"];
	"steamship" [label="<f0> MissingModule| <f1> steamship",shape="record"];
	"langchain_community.tools.steamship_image_generation.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.steamship_image_generation.utils",shape="record"];
	"'steamship.utils'" [label="<f0> MissingModule| <f1> 'steamship.utils'",shape="record"];
	"'steamship.data'" [label="<f0> MissingModule| <f1> 'steamship.data'",shape="record"];
	"langchain_community.tools.steam.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.steam.tool",shape="record"];
	"langchain_community.tools.steam" [label="<f0> Package| <f1> langchain_community.tools.steam",shape="record"];
	"langchain_community.utilities.steam" [label="<f0> SourceModule| <f1> langchain_community.utilities.steam",shape="record"];
	"steamspypi" [label="<f0> MissingModule| <f1> steamspypi",shape="record"];
	"decouple" [label="<f0> MissingModule| <f1> decouple",shape="record"];
	"steam" [label="<f0> MissingModule| <f1> steam",shape="record"];
	"langchain_community.tools.steam.prompt" [label="<f0> SourceModule| <f1> langchain_community.tools.steam.prompt",shape="record"];
	"langchain_community.tools.stackexchange.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.stackexchange.tool",shape="record"];
	"langchain_community.tools.stackexchange" [label="<f0> Package| <f1> langchain_community.tools.stackexchange",shape="record"];
	"langchain_community.utilities.stackexchange" [label="<f0> SourceModule| <f1> langchain_community.utilities.stackexchange",shape="record"];
	"stackapi" [label="<f0> MissingModule| <f1> stackapi",shape="record"];
	"langchain_community.tools.sql_database.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.sql_database.tool",shape="record"];
	"langchain_community.tools.sql_database" [label="<f0> Package| <f1> langchain_community.tools.sql_database",shape="record"];
	"langchain_community.tools.sql_database.prompt" [label="<f0> SourceModule| <f1> langchain_community.tools.sql_database.prompt",shape="record"];
	"langchain_community.utilities.sql_database" [label="<f0> SourceModule| <f1> langchain_community.utilities.sql_database",shape="record"];
	"cnosdb_connector" [label="<f0> MissingModule| <f1> cnosdb_connector",shape="record"];
	"dbruntime" [label="<f0> MissingModule| <f1> dbruntime",shape="record"];
	"databricks" [label="<f0> MissingModule| <f1> databricks",shape="record"];
	"langchain_community.tools.spark_sql.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.spark_sql.tool",shape="record"];
	"langchain_community.tools.spark_sql" [label="<f0> Package| <f1> langchain_community.tools.spark_sql",shape="record"];
	"langchain_community.tools.spark_sql.prompt" [label="<f0> SourceModule| <f1> langchain_community.tools.spark_sql.prompt",shape="record"];
	"langchain_community.utilities.spark_sql" [label="<f0> SourceModule| <f1> langchain_community.utilities.spark_sql",shape="record"];
	"'pyspark.sql'" [label="<f0> MissingModule| <f1> 'pyspark.sql'",shape="record"];
	"langchain_community.tools.sleep.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.sleep.tool",shape="record"];
	"langchain_community.tools.sleep" [label="<f0> Package| <f1> langchain_community.tools.sleep",shape="record"];
	"langchain_community.tools.slack.send_message" [label="<f0> SourceModule| <f1> langchain_community.tools.slack.send_message",shape="record"];
	"langchain_community.tools.slack" [label="<f0> Package| <f1> langchain_community.tools.slack",shape="record"];
	"langchain_community.tools.slack.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.slack.utils",shape="record"];
	"slack_sdk" [label="<f0> MissingModule| <f1> slack_sdk",shape="record"];
	"langchain_community.tools.slack.base" [label="<f0> SourceModule| <f1> langchain_community.tools.slack.base",shape="record"];
	"langchain_community.tools.slack.schedule_message" [label="<f0> SourceModule| <f1> langchain_community.tools.slack.schedule_message",shape="record"];
	"langchain_community.tools.slack.get_message" [label="<f0> SourceModule| <f1> langchain_community.tools.slack.get_message",shape="record"];
	"langchain_community.tools.slack.get_channel" [label="<f0> SourceModule| <f1> langchain_community.tools.slack.get_channel",shape="record"];
	"langchain_community.tools.shell.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.shell.tool",shape="record"];
	"langchain_community.tools.shell" [label="<f0> Package| <f1> langchain_community.tools.shell",shape="record"];
	"langchain_experimental" [label="<f0> MissingModule| <f1> langchain_experimental",shape="record"];
	"langchain_community.tools.searx_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.searx_search.tool",shape="record"];
	"langchain_community.tools.searx_search" [label="<f0> Package| <f1> langchain_community.tools.searx_search",shape="record"];
	"langchain_community.utilities.searx_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.searx_search",shape="record"];
	"langchain_community.tools.searchapi.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.searchapi.tool",shape="record"];
	"langchain_community.tools.searchapi" [label="<f0> Package| <f1> langchain_community.tools.searchapi",shape="record"];
	"langchain_community.utilities.searchapi" [label="<f0> SourceModule| <f1> langchain_community.utilities.searchapi",shape="record"];
	"langchain_community.tools.scenexplain.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.scenexplain.tool",shape="record"];
	"langchain_community.tools.scenexplain" [label="<f0> Package| <f1> langchain_community.tools.scenexplain",shape="record"];
	"langchain_community.utilities.scenexplain" [label="<f0> SourceModule| <f1> langchain_community.utilities.scenexplain",shape="record"];
	"langchain_community.tools.requests.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.requests.tool",shape="record"];
	"langchain_community.tools.requests" [label="<f0> Package| <f1> langchain_community.tools.requests",shape="record"];
	"langchain_community.utilities.requests" [label="<f0> SourceModule| <f1> langchain_community.utilities.requests",shape="record"];
	"langchain_community.tools.reddit_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.reddit_search.tool",shape="record"];
	"langchain_community.tools.reddit_search" [label="<f0> NamespacePackage| <f1> langchain_community.tools.reddit_search",shape="record"];
	"langchain_community.utilities.reddit_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.reddit_search",shape="record"];
	"praw" [label="<f0> MissingModule| <f1> praw",shape="record"];
	"langchain_community.tools.pubmed.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.pubmed.tool",shape="record"];
	"langchain_community.tools.pubmed" [label="<f0> Package| <f1> langchain_community.tools.pubmed",shape="record"];
	"langchain_community.utilities.pubmed" [label="<f0> SourceModule| <f1> langchain_community.utilities.pubmed",shape="record"];
	"xmltodict" [label="<f0> MissingModule| <f1> xmltodict",shape="record"];
	"langchain_community.tools.powerbi.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.powerbi.tool",shape="record"];
	"langchain_community.tools.powerbi" [label="<f0> Package| <f1> langchain_community.tools.powerbi",shape="record"];
	"langchain_community.utilities.powerbi" [label="<f0> SourceModule| <f1> langchain_community.utilities.powerbi",shape="record"];
	"'azure.core'" [label="<f0> MissingModule| <f1> 'azure.core'",shape="record"];
	"langchain_community.tools.powerbi.prompt" [label="<f0> SourceModule| <f1> langchain_community.tools.powerbi.prompt",shape="record"];
	"langchain_community.chat_models.openai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.openai",shape="record"];
	"langchain_community.chat_models" [label="<f0> Package| <f1> langchain_community.chat_models",shape="record"];
	"langchain_community.chat_models.zhipuai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.zhipuai",shape="record"];
	"jwt" [label="<f0> MissingModule| <f1> jwt",shape="record"];
	"httpx_sse" [label="<f0> Package| <f1> httpx_sse",shape="record"];
	"httpx_sse._models" [label="<f0> SourceModule| <f1> httpx_sse._models",shape="record"];
	"httpx_sse._exceptions" [label="<f0> SourceModule| <f1> httpx_sse._exceptions",shape="record"];
	"httpx_sse._api" [label="<f0> SourceModule| <f1> httpx_sse._api",shape="record"];
	"httpx_sse._decoders" [label="<f0> SourceModule| <f1> httpx_sse._decoders",shape="record"];
	"langchain_community.chat_models.yuan2" [label="<f0> SourceModule| <f1> langchain_community.chat_models.yuan2",shape="record"];
	"langchain_community.chat_models.yi" [label="<f0> SourceModule| <f1> langchain_community.chat_models.yi",shape="record"];
	"langchain_community.chat_models.yandex" [label="<f0> SourceModule| <f1> langchain_community.chat_models.yandex",shape="record"];
	"'yandex.cloud'" [label="<f0> MissingModule| <f1> 'yandex.cloud'",shape="record"];
	"google.protobuf.wrappers_pb2" [label="<f0> SourceModule| <f1> google.protobuf.wrappers_pb2",shape="record"];
	"google.protobuf.internal.builder" [label="<f0> SourceModule| <f1> google.protobuf.internal.builder",shape="record"];
	"google.protobuf.service_reflection" [label="<f0> SourceModule| <f1> google.protobuf.service_reflection",shape="record"];
	"google.protobuf.reflection" [label="<f0> SourceModule| <f1> google.protobuf.reflection",shape="record"];
	"google.protobuf.message_factory" [label="<f0> SourceModule| <f1> google.protobuf.message_factory",shape="record"];
	"google.protobuf.pyext.cpp_message" [label="<f0> SourceModule| <f1> google.protobuf.pyext.cpp_message",shape="record"];
	"google.protobuf.pyext._message" [label="<f0> MissingModule| <f1> google.protobuf.pyext._message",shape="record"];
	"google.protobuf.pyext" [label="<f0> Package| <f1> google.protobuf.pyext",shape="record"];
	"google.protobuf.internal.api_implementation" [label="<f0> SourceModule| <f1> google.protobuf.internal.api_implementation",shape="record"];
	"google.protobuf.enable_deterministic_proto_serialization" [label="<f0> MissingModule| <f1> google.protobuf.enable_deterministic_proto_serialization",shape="record"];
	"google._upb._message" [label="<f0> Extension| <f1> google._upb._message",shape="record"];
	"google._upb" [label="<f0> NamespacePackage| <f1> google._upb",shape="record"];
	"google.protobuf.internal._api_implementation" [label="<f0> MissingModule| <f1> google.protobuf.internal._api_implementation",shape="record"];
	"google.protobuf.message" [label="<f0> SourceModule| <f1> google.protobuf.message",shape="record"];
	"google.protobuf.internal.python_message" [label="<f0> SourceModule| <f1> google.protobuf.internal.python_message",shape="record"];
	"google.protobuf.internal.wire_format" [label="<f0> SourceModule| <f1> google.protobuf.internal.wire_format",shape="record"];
	"google.protobuf.internal.well_known_types" [label="<f0> SourceModule| <f1> google.protobuf.internal.well_known_types",shape="record"];
	"google.protobuf.internal.field_mask" [label="<f0> SourceModule| <f1> google.protobuf.internal.field_mask",shape="record"];
	"google.protobuf.internal.type_checkers" [label="<f0> SourceModule| <f1> google.protobuf.internal.type_checkers",shape="record"];
	"google.protobuf.internal.message_listener" [label="<f0> SourceModule| <f1> google.protobuf.internal.message_listener",shape="record"];
	"google.protobuf.internal.extension_dict" [label="<f0> SourceModule| <f1> google.protobuf.internal.extension_dict",shape="record"];
	"google.protobuf.internal.encoder" [label="<f0> SourceModule| <f1> google.protobuf.internal.encoder",shape="record"];
	"google.protobuf.internal.decoder" [label="<f0> SourceModule| <f1> google.protobuf.internal.decoder",shape="record"];
	"google.protobuf.internal.containers" [label="<f0> SourceModule| <f1> google.protobuf.internal.containers",shape="record"];
	"google.protobuf.text_format" [label="<f0> SourceModule| <f1> google.protobuf.text_format",shape="record"];
	"google.protobuf.unknown_fields" [label="<f0> SourceModule| <f1> google.protobuf.unknown_fields",shape="record"];
	"google.protobuf.text_encoding" [label="<f0> SourceModule| <f1> google.protobuf.text_encoding",shape="record"];
	"google.protobuf.internal.enum_type_wrapper" [label="<f0> SourceModule| <f1> google.protobuf.internal.enum_type_wrapper",shape="record"];
	"google.protobuf.internal" [label="<f0> Package| <f1> google.protobuf.internal",shape="record"];
	"google.protobuf.internal.python_edition_defaults" [label="<f0> SourceModule| <f1> google.protobuf.internal.python_edition_defaults",shape="record"];
	"google.protobuf.symbol_database" [label="<f0> SourceModule| <f1> google.protobuf.symbol_database",shape="record"];
	"google.protobuf.runtime_version" [label="<f0> SourceModule| <f1> google.protobuf.runtime_version",shape="record"];
	"google.protobuf.descriptor_pool" [label="<f0> SourceModule| <f1> google.protobuf.descriptor_pool",shape="record"];
	"google.protobuf.descriptor_pb2" [label="<f0> SourceModule| <f1> google.protobuf.descriptor_pb2",shape="record"];
	"google.protobuf.descriptor_database" [label="<f0> SourceModule| <f1> google.protobuf.descriptor_database",shape="record"];
	"google.protobuf.descriptor" [label="<f0> SourceModule| <f1> google.protobuf.descriptor",shape="record"];
	"google.protobuf" [label="<f0> Package| <f1> google.protobuf",shape="record"];
	"google.protobuf.struct_pb2" [label="<f0> SourceModule| <f1> google.protobuf.struct_pb2",shape="record"];
	"google.protobuf.field_mask_pb2" [label="<f0> SourceModule| <f1> google.protobuf.field_mask_pb2",shape="record"];
	"google.protobuf.empty_pb2" [label="<f0> SourceModule| <f1> google.protobuf.empty_pb2",shape="record"];
	"google.protobuf.timestamp_pb2" [label="<f0> SourceModule| <f1> google.protobuf.timestamp_pb2",shape="record"];
	"google.protobuf.any_pb2" [label="<f0> SourceModule| <f1> google.protobuf.any_pb2",shape="record"];
	"google.protobuf.duration_pb2" [label="<f0> SourceModule| <f1> google.protobuf.duration_pb2",shape="record"];
	"langchain_community.llms.yandex" [label="<f0> SourceModule| <f1> langchain_community.llms.yandex",shape="record"];
	"yandex" [label="<f0> MissingModule| <f1> yandex",shape="record"];
	"langchain_community.llms.utils" [label="<f0> SourceModule| <f1> langchain_community.llms.utils",shape="record"];
	"langchain_community.chat_models.volcengine_maas" [label="<f0> SourceModule| <f1> langchain_community.chat_models.volcengine_maas",shape="record"];
	"langchain_community.llms.volcengine_maas" [label="<f0> SourceModule| <f1> langchain_community.llms.volcengine_maas",shape="record"];
	"volcengine" [label="<f0> MissingModule| <f1> volcengine",shape="record"];
	"langchain_community.chat_models.vertexai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.vertexai",shape="record"];
	"'vertexai.preview'" [label="<f0> MissingModule| <f1> 'vertexai.preview'",shape="record"];
	"'vertexai.language_models'" [label="<f0> MissingModule| <f1> 'vertexai.language_models'",shape="record"];
	"langchain_community.utilities.vertexai" [label="<f0> SourceModule| <f1> langchain_community.utilities.vertexai",shape="record"];
	"google.cloud.storage" [label="<f0> MissingModule| <f1> google.cloud.storage",shape="record"];
	"google.cloud" [label="<f0> NamespacePackage| <f1> google.cloud",shape="record"];
	"google.cloud.discoveryengine_v1beta" [label="<f0> MissingModule| <f1> google.cloud.discoveryengine_v1beta",shape="record"];
	"google.cloud.translate" [label="<f0> MissingModule| <f1> google.cloud.translate",shape="record"];
	"google.cloud.kms_v1" [label="<f0> MissingModule| <f1> google.cloud.kms_v1",shape="record"];
	"google.cloud.aiplatform" [label="<f0> MissingModule| <f1> google.cloud.aiplatform",shape="record"];
	"google.cloud.texttospeech" [label="<f0> MissingModule| <f1> google.cloud.texttospeech",shape="record"];
	"google.cloud.documentai" [label="<f0> MissingModule| <f1> google.cloud.documentai",shape="record"];
	"google.cloud.bigquery" [label="<f0> MissingModule| <f1> google.cloud.bigquery",shape="record"];
	"google.api_core" [label="<f0> Package| <f1> google.api_core",shape="record"];
	"google.api_core.operations_v1" [label="<f0> Package| <f1> google.api_core.operations_v1",shape="record"];
	"google.api_core.operations_v1.operations_rest_client_async" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.operations_rest_client_async",shape="record"];
	"google.auth.aio.credentials" [label="<f0> SourceModule| <f1> google.auth.aio.credentials",shape="record"];
	"google.auth.aio" [label="<f0> Package| <f1> google.auth.aio",shape="record"];
	"google.auth.aio._helpers" [label="<f0> SourceModule| <f1> google.auth.aio._helpers",shape="record"];
	"google.longrunning.operations_pb2" [label="<f0> SourceModule| <f1> google.longrunning.operations_pb2",shape="record"];
	"google.longrunning.operations_proto_pb2" [label="<f0> SourceModule| <f1> google.longrunning.operations_proto_pb2",shape="record"];
	"google.rpc.status_pb2" [label="<f0> SourceModule| <f1> google.rpc.status_pb2",shape="record"];
	"google.rpc" [label="<f0> NamespacePackage| <f1> google.rpc",shape="record"];
	"google.rpc.code_pb2" [label="<f0> SourceModule| <f1> google.rpc.code_pb2",shape="record"];
	"google.rpc.error_details_pb2" [label="<f0> SourceModule| <f1> google.rpc.error_details_pb2",shape="record"];
	"google.api.client_pb2" [label="<f0> SourceModule| <f1> google.api.client_pb2",shape="record"];
	"google.api.launch_stage_pb2" [label="<f0> SourceModule| <f1> google.api.launch_stage_pb2",shape="record"];
	"google.api.annotations_pb2" [label="<f0> SourceModule| <f1> google.api.annotations_pb2",shape="record"];
	"google.api.http_pb2" [label="<f0> SourceModule| <f1> google.api.http_pb2",shape="record"];
	"google.api" [label="<f0> NamespacePackage| <f1> google.api",shape="record"];
	"google.longrunning.operations_grpc_pb2" [label="<f0> SourceModule| <f1> google.longrunning.operations_grpc_pb2",shape="record"];
	"google.longrunning.operations_pb2_grpc" [label="<f0> SourceModule| <f1> google.longrunning.operations_pb2_grpc",shape="record"];
	"google.longrunning" [label="<f0> NamespacePackage| <f1> google.longrunning",shape="record"];
	"google.api_core.operations_v1.abstract_operations_base_client" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.abstract_operations_base_client",shape="record"];
	"google.api_core.operations_v1.transports.base" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.transports.base",shape="record"];
	"google.api_core.operations_v1.transports" [label="<f0> Package| <f1> google.api_core.operations_v1.transports",shape="record"];
	"google.api_core.client_options" [label="<f0> SourceModule| <f1> google.api_core.client_options",shape="record"];
	"google.api_core.operations_v1.pagers_async" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.pagers_async",shape="record"];
	"google.api_core.operations_v1.pagers_base" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.pagers_base",shape="record"];
	"google.api_core.operations_v1.transports.rest_asyncio" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.transports.rest_asyncio",shape="record"];
	"google.auth.aio.transport.sessions" [label="<f0> SourceModule| <f1> google.auth.aio.transport.sessions",shape="record"];
	"google.auth.aio.transport.aiohttp" [label="<f0> SourceModule| <f1> google.auth.aio.transport.aiohttp",shape="record"];
	"google.auth.aio.transport" [label="<f0> Package| <f1> google.auth.aio.transport",shape="record"];
	"google.api_core.operations_v1.transports.rest" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.transports.rest",shape="record"];
	"google.api_core.operations_v1.operations_client" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.operations_client",shape="record"];
	"google.api_core.page_iterator" [label="<f0> SourceModule| <f1> google.api_core.page_iterator",shape="record"];
	"google.api_core.operations_v1.operations_async_client" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.operations_async_client",shape="record"];
	"google.api_core.operations_v1.abstract_operations_client" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.abstract_operations_client",shape="record"];
	"google.api_core.operations_v1.pagers" [label="<f0> SourceModule| <f1> google.api_core.operations_v1.pagers",shape="record"];
	"google.api_core.page_iterator_async" [label="<f0> SourceModule| <f1> google.api_core.page_iterator_async",shape="record"];
	"google.api_core.operation_async" [label="<f0> SourceModule| <f1> google.api_core.operation_async",shape="record"];
	"google.api_core.future.async_future" [label="<f0> SourceModule| <f1> google.api_core.future.async_future",shape="record"];
	"google.api_core.future.base" [label="<f0> SourceModule| <f1> google.api_core.future.base",shape="record"];
	"google.api_core.future" [label="<f0> Package| <f1> google.api_core.future",shape="record"];
	"google.api_core.future.polling" [label="<f0> SourceModule| <f1> google.api_core.future.polling",shape="record"];
	"google.api_core.future._helpers" [label="<f0> SourceModule| <f1> google.api_core.future._helpers",shape="record"];
	"google.api_core.operation" [label="<f0> SourceModule| <f1> google.api_core.operation",shape="record"];
	"google.api_core.protobuf_helpers" [label="<f0> SourceModule| <f1> google.api_core.protobuf_helpers",shape="record"];
	"google.api_core.path_template" [label="<f0> SourceModule| <f1> google.api_core.path_template",shape="record"];
	"google.api_core.rest_streaming" [label="<f0> SourceModule| <f1> google.api_core.rest_streaming",shape="record"];
	"google.api_core._rest_streaming_base" [label="<f0> SourceModule| <f1> google.api_core._rest_streaming_base",shape="record"];
	"proto" [label="<f0> Package| <f1> proto",shape="record"];
	"proto.version" [label="<f0> SourceModule| <f1> proto.version",shape="record"];
	"proto.primitives" [label="<f0> SourceModule| <f1> proto.primitives",shape="record"];
	"proto.modules" [label="<f0> SourceModule| <f1> proto.modules",shape="record"];
	"proto.message" [label="<f0> SourceModule| <f1> proto.message",shape="record"];
	"proto.utils" [label="<f0> SourceModule| <f1> proto.utils",shape="record"];
	"proto.marshal" [label="<f0> Package| <f1> proto.marshal",shape="record"];
	"proto.marshal.marshal" [label="<f0> SourceModule| <f1> proto.marshal.marshal",shape="record"];
	"proto.marshal.rules.field_mask" [label="<f0> SourceModule| <f1> proto.marshal.rules.field_mask",shape="record"];
	"proto.marshal.rules.wrappers" [label="<f0> SourceModule| <f1> proto.marshal.rules.wrappers",shape="record"];
	"proto.marshal.rules.struct" [label="<f0> SourceModule| <f1> proto.marshal.rules.struct",shape="record"];
	"proto.marshal.collections.repeated" [label="<f0> SourceModule| <f1> proto.marshal.collections.repeated",shape="record"];
	"proto.marshal.collections.maps" [label="<f0> SourceModule| <f1> proto.marshal.collections.maps",shape="record"];
	"proto.marshal.rules.dates" [label="<f0> SourceModule| <f1> proto.marshal.rules.dates",shape="record"];
	"proto.marshal.rules.stringy_numbers" [label="<f0> SourceModule| <f1> proto.marshal.rules.stringy_numbers",shape="record"];
	"proto.marshal.rules.bytes" [label="<f0> SourceModule| <f1> proto.marshal.rules.bytes",shape="record"];
	"proto.marshal.rules" [label="<f0> Package| <f1> proto.marshal.rules",shape="record"];
	"proto.marshal.collections" [label="<f0> Package| <f1> proto.marshal.collections",shape="record"];
	"proto.marshal.compat" [label="<f0> SourceModule| <f1> proto.marshal.compat",shape="record"];
	"proto.fields" [label="<f0> SourceModule| <f1> proto.fields",shape="record"];
	"proto.enums" [label="<f0> SourceModule| <f1> proto.enums",shape="record"];
	"proto.marshal.rules.enums" [label="<f0> SourceModule| <f1> proto.marshal.rules.enums",shape="record"];
	"proto._package_info" [label="<f0> SourceModule| <f1> proto._package_info",shape="record"];
	"proto._file_info" [label="<f0> SourceModule| <f1> proto._file_info",shape="record"];
	"proto.marshal.rules.message" [label="<f0> SourceModule| <f1> proto.marshal.rules.message",shape="record"];
	"proto.datetime_helpers" [label="<f0> SourceModule| <f1> proto.datetime_helpers",shape="record"];
	"google.api_core.rest_helpers" [label="<f0> SourceModule| <f1> google.api_core.rest_helpers",shape="record"];
	"google.api_core.client_logging" [label="<f0> SourceModule| <f1> google.api_core.client_logging",shape="record"];
	"google.api_core.gapic_v1" [label="<f0> Package| <f1> google.api_core.gapic_v1",shape="record"];
	"google.api_core.gapic_v1.routing_header" [label="<f0> SourceModule| <f1> google.api_core.gapic_v1.routing_header",shape="record"];
	"google.api_core.gapic_v1.method_async" [label="<f0> SourceModule| <f1> google.api_core.gapic_v1.method_async",shape="record"];
	"google.api_core.gapic_v1.method" [label="<f0> SourceModule| <f1> google.api_core.gapic_v1.method",shape="record"];
	"google.api_core.gapic_v1.config_async" [label="<f0> SourceModule| <f1> google.api_core.gapic_v1.config_async",shape="record"];
	"google.api_core.gapic_v1.config" [label="<f0> SourceModule| <f1> google.api_core.gapic_v1.config",shape="record"];
	"google.api_core.grpc_helpers_async" [label="<f0> SourceModule| <f1> google.api_core.grpc_helpers_async",shape="record"];
	"google.api_core.grpc_helpers" [label="<f0> SourceModule| <f1> google.api_core.grpc_helpers",shape="record"];
	"grpc_gcp" [label="<f0> MissingModule| <f1> grpc_gcp",shape="record"];
	"google.auth.transport.grpc" [label="<f0> SourceModule| <f1> google.auth.transport.grpc",shape="record"];
	"google.api_core.retry_async" [label="<f0> SourceModule| <f1> google.api_core.retry_async",shape="record"];
	"google.api_core.retry.retry_unary_async" [label="<f0> SourceModule| <f1> google.api_core.retry.retry_unary_async",shape="record"];
	"google.api_core.retry.retry_base" [label="<f0> SourceModule| <f1> google.api_core.retry.retry_base",shape="record"];
	"google.api_core.timeout" [label="<f0> SourceModule| <f1> google.api_core.timeout",shape="record"];
	"google.api_core.retry" [label="<f0> Package| <f1> google.api_core.retry",shape="record"];
	"google.api_core.retry.retry_streaming_async" [label="<f0> SourceModule| <f1> google.api_core.retry.retry_streaming_async",shape="record"];
	"google.api_core.retry.retry_streaming" [label="<f0> SourceModule| <f1> google.api_core.retry.retry_streaming",shape="record"];
	"google.api_core.retry.retry_unary" [label="<f0> SourceModule| <f1> google.api_core.retry.retry_unary",shape="record"];
	"google.api_core.datetime_helpers" [label="<f0> SourceModule| <f1> google.api_core.datetime_helpers",shape="record"];
	"google.api_core.client_info" [label="<f0> SourceModule| <f1> google.api_core.client_info",shape="record"];
	"google.api_core.exceptions" [label="<f0> SourceModule| <f1> google.api_core.exceptions",shape="record"];
	"grpc_status.rpc_status" [label="<f0> SourceModule| <f1> grpc_status.rpc_status",shape="record"];
	"grpc_status._async" [label="<f0> SourceModule| <f1> grpc_status._async",shape="record"];
	"grpc_status._common" [label="<f0> SourceModule| <f1> grpc_status._common",shape="record"];
	"grpc_status" [label="<f0> Package| <f1> grpc_status",shape="record"];
	"google.api_core.version" [label="<f0> SourceModule| <f1> google.api_core.version",shape="record"];
	"vertexai" [label="<f0> MissingModule| <f1> vertexai",shape="record"];
	"google.api_core.gapic_v1.client_info" [label="<f0> SourceModule| <f1> google.api_core.gapic_v1.client_info",shape="record"];
	"langchain_community.llms.vertexai" [label="<f0> SourceModule| <f1> langchain_community.llms.vertexai",shape="record"];
	"'google.cloud.aiplatform'" [label="<f0> MissingModule| <f1> 'google.cloud.aiplatform'",shape="record"];
	"langchain_community.chat_models.tongyi" [label="<f0> SourceModule| <f1> langchain_community.chat_models.tongyi",shape="record"];
	"dashscope" [label="<f0> MissingModule| <f1> dashscope",shape="record"];
	"langchain_community.llms.tongyi" [label="<f0> SourceModule| <f1> langchain_community.llms.tongyi",shape="record"];
	"langchain_community.chat_models.symblai_nebula" [label="<f0> SourceModule| <f1> langchain_community.chat_models.symblai_nebula",shape="record"];
	"langchain_community.chat_models.sparkllm" [label="<f0> SourceModule| <f1> langchain_community.chat_models.sparkllm",shape="record"];
	"websocket" [label="<f0> Package| <f1> websocket",shape="record"];
	"websocket._socket" [label="<f0> SourceModule| <f1> websocket._socket",shape="record"];
	"websocket._utils" [label="<f0> SourceModule| <f1> websocket._utils",shape="record"];
	"wsaccel" [label="<f0> MissingModule| <f1> wsaccel",shape="record"];
	"websocket._ssl_compat" [label="<f0> SourceModule| <f1> websocket._ssl_compat",shape="record"];
	"websocket._exceptions" [label="<f0> SourceModule| <f1> websocket._exceptions",shape="record"];
	"websocket._core" [label="<f0> SourceModule| <f1> websocket._core",shape="record"];
	"websocket._http" [label="<f0> SourceModule| <f1> websocket._http",shape="record"];
	"'python_socks.sync'" [label="<f0> MissingModule| <f1> 'python_socks.sync'",shape="record"];
	"'python_socks._types'" [label="<f0> MissingModule| <f1> 'python_socks._types'",shape="record"];
	"python_socks" [label="<f0> MissingModule| <f1> python_socks",shape="record"];
	"websocket._url" [label="<f0> SourceModule| <f1> websocket._url",shape="record"];
	"websocket._handshake" [label="<f0> SourceModule| <f1> websocket._handshake",shape="record"];
	"websocket._cookiejar" [label="<f0> SourceModule| <f1> websocket._cookiejar",shape="record"];
	"websocket._app" [label="<f0> SourceModule| <f1> websocket._app",shape="record"];
	"websocket._logging" [label="<f0> SourceModule| <f1> websocket._logging",shape="record"];
	"websocket._abnf" [label="<f0> SourceModule| <f1> websocket._abnf",shape="record"];
	"'wsaccel.xormask'" [label="<f0> MissingModule| <f1> 'wsaccel.xormask'",shape="record"];
	"wsgiref.handlers" [label="<f0> SourceModule| <f1> wsgiref.handlers",shape="record"];
	"wsgiref" [label="<f0> Package| <f1> wsgiref",shape="record"];
	"wsgiref.headers" [label="<f0> SourceModule| <f1> wsgiref.headers",shape="record"];
	"wsgiref.util" [label="<f0> SourceModule| <f1> wsgiref.util",shape="record"];
	"langchain_community.chat_models.solar" [label="<f0> SourceModule| <f1> langchain_community.chat_models.solar",shape="record"];
	"langchain_community.llms.solar" [label="<f0> SourceModule| <f1> langchain_community.llms.solar",shape="record"];
	"langchain_community.chat_models.snowflake" [label="<f0> SourceModule| <f1> langchain_community.chat_models.snowflake",shape="record"];
	"'snowflake.snowpark'" [label="<f0> MissingModule| <f1> 'snowflake.snowpark'",shape="record"];
	"langchain_community.chat_models.sambanova" [label="<f0> SourceModule| <f1> langchain_community.chat_models.sambanova",shape="record"];
	"sseclient" [label="<f0> MissingModule| <f1> sseclient",shape="record"];
	"langchain_community.chat_models.reka" [label="<f0> SourceModule| <f1> langchain_community.chat_models.reka",shape="record"];
	"reka" [label="<f0> MissingModule| <f1> reka",shape="record"];
	"langchain_community.chat_models.promptlayer_openai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.promptlayer_openai",shape="record"];
	"'promptlayer.utils'" [label="<f0> MissingModule| <f1> 'promptlayer.utils'",shape="record"];
	"langchain_community.chat_models.premai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.premai",shape="record"];
	"'premai.models'" [label="<f0> MissingModule| <f1> 'premai.models'",shape="record"];
	"premai" [label="<f0> MissingModule| <f1> premai",shape="record"];
	"langchain_community.chat_models.perplexity" [label="<f0> SourceModule| <f1> langchain_community.chat_models.perplexity",shape="record"];
	"langchain_community.chat_models.pai_eas_endpoint" [label="<f0> SourceModule| <f1> langchain_community.chat_models.pai_eas_endpoint",shape="record"];
	"langchain_community.chat_models.outlines" [label="<f0> SourceModule| <f1> langchain_community.chat_models.outlines",shape="record"];
	"huggingface_hub" [label="<f0> Package| <f1> huggingface_hub",shape="record"];
	"huggingface_hub.utils.logging" [label="<f0> SourceModule| <f1> huggingface_hub.utils.logging",shape="record"];
	"huggingface_hub.utils" [label="<f0> Package| <f1> huggingface_hub.utils",shape="record"];
	"huggingface_hub.utils._xet" [label="<f0> SourceModule| <f1> huggingface_hub.utils._xet",shape="record"];
	"huggingface_hub.utils._validators" [label="<f0> SourceModule| <f1> huggingface_hub.utils._validators",shape="record"];
	"huggingface_hub.utils._typing" [label="<f0> SourceModule| <f1> huggingface_hub.utils._typing",shape="record"];
	"huggingface_hub.utils._telemetry" [label="<f0> SourceModule| <f1> huggingface_hub.utils._telemetry",shape="record"];
	"huggingface_hub.utils._subprocess" [label="<f0> SourceModule| <f1> huggingface_hub.utils._subprocess",shape="record"];
	"huggingface_hub.utils._safetensors" [label="<f0> SourceModule| <f1> huggingface_hub.utils._safetensors",shape="record"];
	"huggingface_hub.utils._runtime" [label="<f0> SourceModule| <f1> huggingface_hub.utils._runtime",shape="record"];
	"huggingface_hub.utils._paths" [label="<f0> SourceModule| <f1> huggingface_hub.utils._paths",shape="record"];
	"huggingface_hub.utils._pagination" [label="<f0> SourceModule| <f1> huggingface_hub.utils._pagination",shape="record"];
	"huggingface_hub.utils._http" [label="<f0> SourceModule| <f1> huggingface_hub.utils._http",shape="record"];
	"huggingface_hub.utils._lfs" [label="<f0> SourceModule| <f1> huggingface_hub.utils._lfs",shape="record"];
	"huggingface_hub.utils._hf_folder" [label="<f0> SourceModule| <f1> huggingface_hub.utils._hf_folder",shape="record"];
	"huggingface_hub.utils._headers" [label="<f0> SourceModule| <f1> huggingface_hub.utils._headers",shape="record"];
	"huggingface_hub.utils._deprecation" [label="<f0> SourceModule| <f1> huggingface_hub.utils._deprecation",shape="record"];
	"huggingface_hub.utils._git_credential" [label="<f0> SourceModule| <f1> huggingface_hub.utils._git_credential",shape="record"];
	"huggingface_hub.utils._fixes" [label="<f0> SourceModule| <f1> huggingface_hub.utils._fixes",shape="record"];
	"filelock" [label="<f0> Package| <f1> filelock",shape="record"];
	"filelock.version" [label="<f0> SourceModule| <f1> filelock.version",shape="record"];
	"filelock.asyncio" [label="<f0> SourceModule| <f1> filelock.asyncio",shape="record"];
	"filelock._windows" [label="<f0> SourceModule| <f1> filelock._windows",shape="record"];
	"filelock._util" [label="<f0> SourceModule| <f1> filelock._util",shape="record"];
	"filelock._unix" [label="<f0> SourceModule| <f1> filelock._unix",shape="record"];
	"filelock._soft" [label="<f0> SourceModule| <f1> filelock._soft",shape="record"];
	"filelock._error" [label="<f0> SourceModule| <f1> filelock._error",shape="record"];
	"filelock._api" [label="<f0> SourceModule| <f1> filelock._api",shape="record"];
	"huggingface_hub.utils._experimental" [label="<f0> SourceModule| <f1> huggingface_hub.utils._experimental",shape="record"];
	"huggingface_hub.utils._datetime" [label="<f0> SourceModule| <f1> huggingface_hub.utils._datetime",shape="record"];
	"huggingface_hub.utils._chunk_utils" [label="<f0> SourceModule| <f1> huggingface_hub.utils._chunk_utils",shape="record"];
	"huggingface_hub.utils._cache_manager" [label="<f0> SourceModule| <f1> huggingface_hub.utils._cache_manager",shape="record"];
	"huggingface_hub.commands._cli_utils" [label="<f0> SourceModule| <f1> huggingface_hub.commands._cli_utils",shape="record"];
	"huggingface_hub.commands" [label="<f0> Package| <f1> huggingface_hub.commands",shape="record"];
	"huggingface_hub.utils._cache_assets" [label="<f0> SourceModule| <f1> huggingface_hub.utils._cache_assets",shape="record"];
	"huggingface_hub.utils._auth" [label="<f0> SourceModule| <f1> huggingface_hub.utils._auth",shape="record"];
	"'google.colab'" [label="<f0> MissingModule| <f1> 'google.colab'",shape="record"];
	"huggingface_hub.utils.tqdm" [label="<f0> SourceModule| <f1> huggingface_hub.utils.tqdm",shape="record"];
	"tqdm.auto" [label="<f0> SourceModule| <f1> tqdm.auto",shape="record"];
	"tqdm.autonotebook" [label="<f0> SourceModule| <f1> tqdm.autonotebook",shape="record"];
	"huggingface_hub.errors" [label="<f0> SourceModule| <f1> huggingface_hub.errors",shape="record"];
	"huggingface_hub.serialization._dduf" [label="<f0> SourceModule| <f1> huggingface_hub.serialization._dduf",shape="record"];
	"huggingface_hub.serialization" [label="<f0> Package| <f1> huggingface_hub.serialization",shape="record"];
	"huggingface_hub.serialization._torch" [label="<f0> SourceModule| <f1> huggingface_hub.serialization._torch",shape="record"];
	"'torch_xla.core'" [label="<f0> MissingModule| <f1> 'torch_xla.core'",shape="record"];
	"torch_xla" [label="<f0> MissingModule| <f1> torch_xla",shape="record"];
	"'torch.utils'" [label="<f0> MissingModule| <f1> 'torch.utils'",shape="record"];
	"'torch.distributed'" [label="<f0> MissingModule| <f1> 'torch.distributed'",shape="record"];
	"safetensors" [label="<f0> MissingModule| <f1> safetensors",shape="record"];
	"'safetensors.torch'" [label="<f0> MissingModule| <f1> 'safetensors.torch'",shape="record"];
	"torch" [label="<f0> MissingModule| <f1> torch",shape="record"];
	"huggingface_hub.serialization._tensorflow" [label="<f0> SourceModule| <f1> huggingface_hub.serialization._tensorflow",shape="record"];
	"tensorflow" [label="<f0> MissingModule| <f1> tensorflow",shape="record"];
	"huggingface_hub.serialization._base" [label="<f0> SourceModule| <f1> huggingface_hub.serialization._base",shape="record"];
	"huggingface_hub.repository" [label="<f0> SourceModule| <f1> huggingface_hub.repository",shape="record"];
	"huggingface_hub.lfs" [label="<f0> SourceModule| <f1> huggingface_hub.lfs",shape="record"];
	"hf_transfer" [label="<f0> MissingModule| <f1> hf_transfer",shape="record"];
	"huggingface_hub._commit_api" [label="<f0> SourceModule| <f1> huggingface_hub._commit_api",shape="record"];
	"hf_xet" [label="<f0> MissingModule| <f1> hf_xet",shape="record"];
	"tqdm.contrib.concurrent" [label="<f0> SourceModule| <f1> tqdm.contrib.concurrent",shape="record"];
	"tqdm.contrib" [label="<f0> Package| <f1> tqdm.contrib",shape="record"];
	"huggingface_hub.utils.sha" [label="<f0> SourceModule| <f1> huggingface_hub.utils.sha",shape="record"];
	"huggingface_hub.utils.insecure_hashlib" [label="<f0> SourceModule| <f1> huggingface_hub.utils.insecure_hashlib",shape="record"];
	"huggingface_hub.repocard_data" [label="<f0> SourceModule| <f1> huggingface_hub.repocard_data",shape="record"];
	"huggingface_hub.repocard" [label="<f0> SourceModule| <f1> huggingface_hub.repocard",shape="record"];
	"huggingface_hub.keras_mixin" [label="<f0> SourceModule| <f1> huggingface_hub.keras_mixin",shape="record"];
	"tf_keras" [label="<f0> MissingModule| <f1> tf_keras",shape="record"];
	"huggingface_hub.inference_api" [label="<f0> SourceModule| <f1> huggingface_hub.inference_api",shape="record"];
	"huggingface_hub.inference._generated.types" [label="<f0> Package| <f1> huggingface_hub.inference._generated.types",shape="record"];
	"huggingface_hub.inference._generated" [label="<f0> Package| <f1> huggingface_hub.inference._generated",shape="record"];
	"huggingface_hub.inference" [label="<f0> Package| <f1> huggingface_hub.inference",shape="record"];
	"huggingface_hub.inference._generated.types.zero_shot_object_detection" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.zero_shot_object_detection",shape="record"];
	"huggingface_hub.inference._generated.types.zero_shot_image_classification" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.zero_shot_image_classification",shape="record"];
	"huggingface_hub.inference._generated.types.zero_shot_classification" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.zero_shot_classification",shape="record"];
	"huggingface_hub.inference._generated.types.visual_question_answering" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.visual_question_answering",shape="record"];
	"huggingface_hub.inference._generated.types.video_classification" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.video_classification",shape="record"];
	"huggingface_hub.inference._generated.types.translation" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.translation",shape="record"];
	"huggingface_hub.inference._generated.types.token_classification" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.token_classification",shape="record"];
	"huggingface_hub.inference._generated.types.text_to_video" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.text_to_video",shape="record"];
	"huggingface_hub.inference._generated.types.text_to_speech" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.text_to_speech",shape="record"];
	"huggingface_hub.inference._generated.types.text_to_image" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.text_to_image",shape="record"];
	"huggingface_hub.inference._generated.types.text_to_audio" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.text_to_audio",shape="record"];
	"huggingface_hub.inference._generated.types.text_generation" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.text_generation",shape="record"];
	"huggingface_hub.inference._generated.types.text_classification" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.text_classification",shape="record"];
	"huggingface_hub.inference._generated.types.text2text_generation" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.text2text_generation",shape="record"];
	"huggingface_hub.inference._generated.types.table_question_answering" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.table_question_answering",shape="record"];
	"huggingface_hub.inference._generated.types.summarization" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.summarization",shape="record"];
	"huggingface_hub.inference._generated.types.sentence_similarity" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.sentence_similarity",shape="record"];
	"huggingface_hub.inference._generated.types.question_answering" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.question_answering",shape="record"];
	"huggingface_hub.inference._generated.types.object_detection" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.object_detection",shape="record"];
	"huggingface_hub.inference._generated.types.image_to_text" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.image_to_text",shape="record"];
	"huggingface_hub.inference._generated.types.image_to_image" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.image_to_image",shape="record"];
	"huggingface_hub.inference._generated.types.image_segmentation" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.image_segmentation",shape="record"];
	"huggingface_hub.inference._generated.types.image_classification" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.image_classification",shape="record"];
	"huggingface_hub.inference._generated.types.fill_mask" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.fill_mask",shape="record"];
	"huggingface_hub.inference._generated.types.feature_extraction" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.feature_extraction",shape="record"];
	"huggingface_hub.inference._generated.types.document_question_answering" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.document_question_answering",shape="record"];
	"huggingface_hub.inference._generated.types.depth_estimation" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.depth_estimation",shape="record"];
	"huggingface_hub.inference._generated.types.chat_completion" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.chat_completion",shape="record"];
	"huggingface_hub.inference._generated.types.base" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.base",shape="record"];
	"huggingface_hub.inference._generated.types.automatic_speech_recognition" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.automatic_speech_recognition",shape="record"];
	"huggingface_hub.inference._generated.types.audio_to_audio" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.audio_to_audio",shape="record"];
	"huggingface_hub.inference._generated.types.audio_classification" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated.types.audio_classification",shape="record"];
	"huggingface_hub.inference._generated._async_client" [label="<f0> SourceModule| <f1> huggingface_hub.inference._generated._async_client",shape="record"];
	"huggingface_hub.inference._providers" [label="<f0> Package| <f1> huggingface_hub.inference._providers",shape="record"];
	"huggingface_hub.inference._providers.together" [label="<f0> SourceModule| <f1> huggingface_hub.inference._providers.together",shape="record"];
	"huggingface_hub.inference._providers.sambanova" [label="<f0> SourceModule| <f1> huggingface_hub.inference._providers.sambanova",shape="record"];
	"huggingface_hub.inference._providers.replicate" [label="<f0> SourceModule| <f1> huggingface_hub.inference._providers.replicate",shape="record"];
	"huggingface_hub.inference._providers.openai" [label="<f0> SourceModule| <f1> huggingface_hub.inference._providers.openai",shape="record"];
	"huggingface_hub.inference._providers.novita" [label="<f0> SourceModule| <f1> huggingface_hub.inference._providers.novita",shape="record"];
	"huggingface_hub.inference._providers.nebius" [label="<f0> SourceModule| <f1> huggingface_hub.inference._providers.nebius",shape="record"];
	"huggingface_hub.inference._providers.hyperbolic" [label="<f0> SourceModule| <f1> huggingface_hub.inference._providers.hyperbolic",shape="record"];
	"huggingface_hub.inference._providers.hf_inference" [label="<f0> SourceModule| <f1> huggingface_hub.inference._providers.hf_inference",shape="record"];
	"huggingface_hub.inference._providers.fireworks_ai" [label="<f0> SourceModule| <f1> huggingface_hub.inference._providers.fireworks_ai",shape="record"];
	"huggingface_hub.inference._providers.fal_ai" [label="<f0> SourceModule| <f1> huggingface_hub.inference._providers.fal_ai",shape="record"];
	"huggingface_hub.inference._providers.cohere" [label="<f0> SourceModule| <f1> huggingface_hub.inference._providers.cohere",shape="record"];
	"huggingface_hub.inference._providers.cerebras" [label="<f0> SourceModule| <f1> huggingface_hub.inference._providers.cerebras",shape="record"];
	"huggingface_hub.inference._providers.black_forest_labs" [label="<f0> SourceModule| <f1> huggingface_hub.inference._providers.black_forest_labs",shape="record"];
	"huggingface_hub.inference._providers._common" [label="<f0> SourceModule| <f1> huggingface_hub.inference._providers._common",shape="record"];
	"huggingface_hub.inference._common" [label="<f0> SourceModule| <f1> huggingface_hub.inference._common",shape="record"];
	"huggingface_hub.inference._client" [label="<f0> SourceModule| <f1> huggingface_hub.inference._client",shape="record"];
	"huggingface_hub.hub_mixin" [label="<f0> SourceModule| <f1> huggingface_hub.hub_mixin",shape="record"];
	"huggingface_hub.hf_file_system" [label="<f0> SourceModule| <f1> huggingface_hub.hf_file_system",shape="record"];
	"huggingface_hub.hf_api" [label="<f0> SourceModule| <f1> huggingface_hub.hf_api",shape="record"];
	"huggingface_hub.utils.endpoint_helpers" [label="<f0> SourceModule| <f1> huggingface_hub.utils.endpoint_helpers",shape="record"];
	"huggingface_hub._upload_large_folder" [label="<f0> SourceModule| <f1> huggingface_hub._upload_large_folder",shape="record"];
	"huggingface_hub._local_folder" [label="<f0> SourceModule| <f1> huggingface_hub._local_folder",shape="record"];
	"huggingface_hub.file_download" [label="<f0> SourceModule| <f1> huggingface_hub.file_download",shape="record"];
	"huggingface_hub.fastai_utils" [label="<f0> SourceModule| <f1> huggingface_hub.fastai_utils",shape="record"];
	"fastai" [label="<f0> MissingModule| <f1> fastai",shape="record"];
	"toml" [label="<f0> Package| <f1> toml",shape="record"];
	"toml.decoder" [label="<f0> SourceModule| <f1> toml.decoder",shape="record"];
	"toml.tz" [label="<f0> SourceModule| <f1> toml.tz",shape="record"];
	"toml.encoder" [label="<f0> SourceModule| <f1> toml.encoder",shape="record"];
	"huggingface_hub.community" [label="<f0> SourceModule| <f1> huggingface_hub.community",shape="record"];
	"huggingface_hub._webhooks_server" [label="<f0> SourceModule| <f1> huggingface_hub._webhooks_server",shape="record"];
	"'fastapi.responses'" [label="<f0> MissingModule| <f1> 'fastapi.responses'",shape="record"];
	"fastapi" [label="<f0> MissingModule| <f1> fastapi",shape="record"];
	"gradio" [label="<f0> MissingModule| <f1> gradio",shape="record"];
	"huggingface_hub._webhooks_payload" [label="<f0> SourceModule| <f1> huggingface_hub._webhooks_payload",shape="record"];
	"huggingface_hub._tensorboard_logger" [label="<f0> SourceModule| <f1> huggingface_hub._tensorboard_logger",shape="record"];
	"tensorboardX" [label="<f0> MissingModule| <f1> tensorboardX",shape="record"];
	"huggingface_hub._space_api" [label="<f0> SourceModule| <f1> huggingface_hub._space_api",shape="record"];
	"huggingface_hub._snapshot_download" [label="<f0> SourceModule| <f1> huggingface_hub._snapshot_download",shape="record"];
	"huggingface_hub._login" [label="<f0> SourceModule| <f1> huggingface_hub._login",shape="record"];
	"huggingface_hub.commands.delete_cache" [label="<f0> SourceModule| <f1> huggingface_hub.commands.delete_cache",shape="record"];
	"'InquirerPy.separator'" [label="<f0> MissingModule| <f1> 'InquirerPy.separator'",shape="record"];
	"'InquirerPy.base'" [label="<f0> MissingModule| <f1> 'InquirerPy.base'",shape="record"];
	"InquirerPy" [label="<f0> MissingModule| <f1> InquirerPy",shape="record"];
	"huggingface_hub._inference_endpoints" [label="<f0> SourceModule| <f1> huggingface_hub._inference_endpoints",shape="record"];
	"huggingface_hub._commit_scheduler" [label="<f0> SourceModule| <f1> huggingface_hub._commit_scheduler",shape="record"];
	"huggingface_hub.constants" [label="<f0> SourceModule| <f1> huggingface_hub.constants",shape="record"];
	"outlines" [label="<f0> MissingModule| <f1> outlines",shape="record"];
	"'outlines.models'" [label="<f0> MissingModule| <f1> 'outlines.models'",shape="record"];
	"langchain_community.chat_models.ollama" [label="<f0> SourceModule| <f1> langchain_community.chat_models.ollama",shape="record"];
	"langchain_community.llms.ollama" [label="<f0> SourceModule| <f1> langchain_community.llms.ollama",shape="record"];
	"langchain_community.chat_models.octoai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.octoai",shape="record"];
	"langchain_community.chat_models.oci_generative_ai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.oci_generative_ai",shape="record"];
	"'oci.generative_ai_inference'" [label="<f0> MissingModule| <f1> 'oci.generative_ai_inference'",shape="record"];
	"langchain_community.llms.oci_generative_ai" [label="<f0> SourceModule| <f1> langchain_community.llms.oci_generative_ai",shape="record"];
	"oci" [label="<f0> MissingModule| <f1> oci",shape="record"];
	"langchain_community.chat_models.oci_data_science" [label="<f0> SourceModule| <f1> langchain_community.chat_models.oci_data_science",shape="record"];
	"langchain_openai.chat_models.base" [label="<f0> SourceModule| <f1> langchain_openai.chat_models.base",shape="record"];
	"langchain_openai.chat_models" [label="<f0> Package| <f1> langchain_openai.chat_models",shape="record"];
	"langchain_openai.chat_models.azure" [label="<f0> SourceModule| <f1> langchain_openai.chat_models.azure",shape="record"];
	"langchain_openai" [label="<f0> Package| <f1> langchain_openai",shape="record"];
	"langchain_openai.llms" [label="<f0> Package| <f1> langchain_openai.llms",shape="record"];
	"langchain_openai.llms.base" [label="<f0> SourceModule| <f1> langchain_openai.llms.base",shape="record"];
	"langchain_openai.llms.azure" [label="<f0> SourceModule| <f1> langchain_openai.llms.azure",shape="record"];
	"langchain_openai.embeddings" [label="<f0> Package| <f1> langchain_openai.embeddings",shape="record"];
	"langchain_openai.embeddings.base" [label="<f0> SourceModule| <f1> langchain_openai.embeddings.base",shape="record"];
	"langchain_openai.embeddings.azure" [label="<f0> SourceModule| <f1> langchain_openai.embeddings.azure",shape="record"];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" [label="<f0> SourceModule| <f1> langchain_community.llms.oci_data_science_model_deployment_endpoint",shape="record"];
	"ads" [label="<f0> MissingModule| <f1> ads",shape="record"];
	"langchain_community.chat_models.naver" [label="<f0> SourceModule| <f1> langchain_community.chat_models.naver",shape="record"];
	"langchain_community.chat_models.moonshot" [label="<f0> SourceModule| <f1> langchain_community.chat_models.moonshot",shape="record"];
	"langchain_community.llms.moonshot" [label="<f0> SourceModule| <f1> langchain_community.llms.moonshot",shape="record"];
	"langchain_community.chat_models.mlx" [label="<f0> SourceModule| <f1> langchain_community.chat_models.mlx",shape="record"];
	"'mlx_lm.sample_utils'" [label="<f0> MissingModule| <f1> 'mlx_lm.sample_utils'",shape="record"];
	"'mlx_lm.utils'" [label="<f0> MissingModule| <f1> 'mlx_lm.utils'",shape="record"];
	"'mlx.core'" [label="<f0> MissingModule| <f1> 'mlx.core'",shape="record"];
	"langchain_community.llms.mlx_pipeline" [label="<f0> SourceModule| <f1> langchain_community.llms.mlx_pipeline",shape="record"];
	"mlx" [label="<f0> MissingModule| <f1> mlx",shape="record"];
	"mlx_lm" [label="<f0> MissingModule| <f1> mlx_lm",shape="record"];
	"langchain_community.chat_models.mlflow_ai_gateway" [label="<f0> SourceModule| <f1> langchain_community.chat_models.mlflow_ai_gateway",shape="record"];
	"'mlflow.gateway'" [label="<f0> MissingModule| <f1> 'mlflow.gateway'",shape="record"];
	"langchain_community.chat_models.mlflow" [label="<f0> SourceModule| <f1> langchain_community.chat_models.mlflow",shape="record"];
	"'mlflow.deployments'" [label="<f0> MissingModule| <f1> 'mlflow.deployments'",shape="record"];
	"langchain_community.chat_models.minimax" [label="<f0> SourceModule| <f1> langchain_community.chat_models.minimax",shape="record"];
	"langchain_community.chat_models.maritalk" [label="<f0> SourceModule| <f1> langchain_community.chat_models.maritalk",shape="record"];
	"langchain_community.chat_models.llamacpp" [label="<f0> SourceModule| <f1> langchain_community.chat_models.llamacpp",shape="record"];
	"llama_cpp" [label="<f0> MissingModule| <f1> llama_cpp",shape="record"];
	"langchain_community.chat_models.llama_edge" [label="<f0> SourceModule| <f1> langchain_community.chat_models.llama_edge",shape="record"];
	"langchain_community.chat_models.litellm_router" [label="<f0> SourceModule| <f1> langchain_community.chat_models.litellm_router",shape="record"];
	"litellm.utils" [label="<f0> SourceModule| <f1> litellm.utils",shape="record"];
	"litellm.llms.gemini.realtime.transformation" [label="<f0> SourceModule| <f1> litellm.llms.gemini.realtime.transformation",shape="record"];
	"litellm.llms.gemini.realtime" [label="<f0> NamespacePackage| <f1> litellm.llms.gemini.realtime",shape="record"];
	"litellm.llms.gemini.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.gemini.common_utils",shape="record"];
	"litellm.types.realtime" [label="<f0> SourceModule| <f1> litellm.types.realtime",shape="record"];
	"litellm.types" [label="<f0> NamespacePackage| <f1> litellm.types",shape="record"];
	"litellm.types.llms.vertex_ai" [label="<f0> SourceModule| <f1> litellm.types.llms.vertex_ai",shape="record"];
	"litellm.types.llms" [label="<f0> NamespacePackage| <f1> litellm.types.llms",shape="record"];
	"litellm.types.llms.gemini" [label="<f0> SourceModule| <f1> litellm.types.llms.gemini",shape="record"];
	"litellm.responses.litellm_completion_transformation.transformation" [label="<f0> SourceModule| <f1> litellm.responses.litellm_completion_transformation.transformation",shape="record"];
	"litellm.responses.litellm_completion_transformation" [label="<f0> NamespacePackage| <f1> litellm.responses.litellm_completion_transformation",shape="record"];
	"litellm.responses" [label="<f0> NamespacePackage| <f1> litellm.responses",shape="record"];
	"litellm.types.responses.main" [label="<f0> SourceModule| <f1> litellm.types.responses.main",shape="record"];
	"litellm.types.responses" [label="<f0> NamespacePackage| <f1> litellm.types.responses",shape="record"];
	"litellm.types.llms.base" [label="<f0> SourceModule| <f1> litellm.types.llms.base",shape="record"];
	"litellm.caching" [label="<f0> Package| <f1> litellm.caching",shape="record"];
	"litellm.caching.s3_cache" [label="<f0> SourceModule| <f1> litellm.caching.s3_cache",shape="record"];
	"boto3" [label="<f0> MissingModule| <f1> boto3",shape="record"];
	"litellm.caching.base_cache" [label="<f0> SourceModule| <f1> litellm.caching.base_cache",shape="record"];
	"'opentelemetry.trace'" [label="<f0> MissingModule| <f1> 'opentelemetry.trace'",shape="record"];
	"litellm.caching.redis_semantic_cache" [label="<f0> SourceModule| <f1> litellm.caching.redis_semantic_cache",shape="record"];
	"litellm.proxy.proxy_server" [label="<f0> SourceModule| <f1> litellm.proxy.proxy_server",shape="record"];
	"multipart" [label="<f0> MissingModule| <f1> multipart",shape="record"];
	"ddtrace" [label="<f0> MissingModule| <f1> ddtrace",shape="record"];
	"litellm.litellm_core_utils.dd_tracing" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.dd_tracing",shape="record"];
	"litellm.proxy.guardrails.guardrail_registry" [label="<f0> SourceModule| <f1> litellm.proxy.guardrails.guardrail_registry",shape="record"];
	"litellm.proxy.guardrails" [label="<f0> NamespacePackage| <f1> litellm.proxy.guardrails",shape="record"];
	"litellm.proxy.guardrails.guardrail_initializers" [label="<f0> SourceModule| <f1> litellm.proxy.guardrails.guardrail_initializers",shape="record"];
	"litellm.proxy.guardrails.guardrail_hooks.guardrails_ai" [label="<f0> SourceModule| <f1> litellm.proxy.guardrails.guardrail_hooks.guardrails_ai",shape="record"];
	"litellm.proxy.guardrails.guardrail_hooks" [label="<f0> NamespacePackage| <f1> litellm.proxy.guardrails.guardrail_hooks",shape="record"];
	"'litellm_enterprise.enterprise_callbacks'" [label="<f0> MissingModule| <f1> 'litellm_enterprise.enterprise_callbacks'",shape="record"];
	"litellm.proxy.guardrails.guardrail_hooks.presidio" [label="<f0> SourceModule| <f1> litellm.proxy.guardrails.guardrail_hooks.presidio",shape="record"];
	"litellm.llms.base_llm.base_model_iterator" [label="<f0> SourceModule| <f1> litellm.llms.base_llm.base_model_iterator",shape="record"];
	"litellm.llms.base_llm" [label="<f0> Package| <f1> litellm.llms.base_llm",shape="record"];
	"litellm.types.proxy.guardrails.guardrail_hooks.presidio" [label="<f0> SourceModule| <f1> litellm.types.proxy.guardrails.guardrail_hooks.presidio",shape="record"];
	"litellm.types.proxy.guardrails.guardrail_hooks" [label="<f0> NamespacePackage| <f1> litellm.types.proxy.guardrails.guardrail_hooks",shape="record"];
	"litellm.types.proxy.guardrails" [label="<f0> NamespacePackage| <f1> litellm.types.proxy.guardrails",shape="record"];
	"litellm.types.proxy" [label="<f0> NamespacePackage| <f1> litellm.types.proxy",shape="record"];
	"litellm.get_secret" [label="<f0> MissingModule| <f1> litellm.get_secret",shape="record"];
	"litellm.proxy.guardrails.guardrail_hooks.aim" [label="<f0> InvalidSourceModule| <f1> litellm.proxy.guardrails.guardrail_hooks.aim",shape="record"];
	"litellm.proxy.guardrails.guardrail_hooks.lakera_ai_v2" [label="<f0> SourceModule| <f1> litellm.proxy.guardrails.guardrail_hooks.lakera_ai_v2",shape="record"];
	"litellm.types.proxy.guardrails.guardrail_hooks.lakera_ai_v2" [label="<f0> SourceModule| <f1> litellm.types.proxy.guardrails.guardrail_hooks.lakera_ai_v2",shape="record"];
	"litellm.proxy.guardrails.guardrail_hooks.lakera_ai" [label="<f0> SourceModule| <f1> litellm.proxy.guardrails.guardrail_hooks.lakera_ai",shape="record"];
	"litellm.proxy.guardrails.guardrail_helpers" [label="<f0> SourceModule| <f1> litellm.proxy.guardrails.guardrail_helpers",shape="record"];
	"litellm.proxy.guardrails.guardrail_hooks.bedrock_guardrails" [label="<f0> SourceModule| <f1> litellm.proxy.guardrails.guardrail_hooks.bedrock_guardrails",shape="record"];
	"'botocore.awsrequest'" [label="<f0> MissingModule| <f1> 'botocore.awsrequest'",shape="record"];
	"'botocore.auth'" [label="<f0> MissingModule| <f1> 'botocore.auth'",shape="record"];
	"'botocore.credentials'" [label="<f0> MissingModule| <f1> 'botocore.credentials'",shape="record"];
	"litellm.types.proxy.guardrails.guardrail_hooks.bedrock_guardrails" [label="<f0> SourceModule| <f1> litellm.types.proxy.guardrails.guardrail_hooks.bedrock_guardrails",shape="record"];
	"litellm.llms.bedrock.base_aws_llm" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.base_aws_llm",shape="record"];
	"litellm.llms.bedrock" [label="<f0> NamespacePackage| <f1> litellm.llms.bedrock",shape="record"];
	"litellm.proxy.guardrails.guardrail_hooks.aporia_ai" [label="<f0> SourceModule| <f1> litellm.proxy.guardrails.guardrail_hooks.aporia_ai",shape="record"];
	"litellm.litellm_core_utils.logging_utils" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.logging_utils",shape="record"];
	"litellm.types.guardrails" [label="<f0> SourceModule| <f1> litellm.types.guardrails",shape="record"];
	"litellm.litellm_core_utils.safe_json_dumps" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.safe_json_dumps",shape="record"];
	"litellm.secret_managers.hashicorp_secret_manager" [label="<f0> SourceModule| <f1> litellm.secret_managers.hashicorp_secret_manager",shape="record"];
	"litellm.secret_managers" [label="<f0> NamespacePackage| <f1> litellm.secret_managers",shape="record"];
	"litellm.secret_managers.base_secret_manager" [label="<f0> SourceModule| <f1> litellm.secret_managers.base_secret_manager",shape="record"];
	"litellm.secret_managers.google_secret_manager" [label="<f0> SourceModule| <f1> litellm.secret_managers.google_secret_manager",shape="record"];
	"litellm.integrations.gcs_bucket.gcs_bucket_base" [label="<f0> SourceModule| <f1> litellm.integrations.gcs_bucket.gcs_bucket_base",shape="record"];
	"litellm.integrations.gcs_bucket" [label="<f0> NamespacePackage| <f1> litellm.integrations.gcs_bucket",shape="record"];
	"litellm.integrations" [label="<f0> Package| <f1> litellm.integrations",shape="record"];
	"litellm.vertex_chat_completion" [label="<f0> MissingModule| <f1> litellm.vertex_chat_completion",shape="record"];
	"litellm.llms.vertex_ai.vertex_llm_base" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.vertex_llm_base",shape="record"];
	"litellm.llms.vertex_ai" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai",shape="record"];
	"litellm.llms.vertex_ai.vertex_ai_non_gemini" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.vertex_ai_non_gemini",shape="record"];
	"'google.cloud.aiplatform_v1beta1'" [label="<f0> MissingModule| <f1> 'google.cloud.aiplatform_v1beta1'",shape="record"];
	"litellm.llms.vertex_ai.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.common_utils",shape="record"];
	"litellm.litellm_core_utils.asyncify" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.asyncify",shape="record"];
	"litellm.types.integrations.gcs_bucket" [label="<f0> SourceModule| <f1> litellm.types.integrations.gcs_bucket",shape="record"];
	"litellm.types.integrations" [label="<f0> NamespacePackage| <f1> litellm.types.integrations",shape="record"];
	"litellm.integrations.custom_batch_logger" [label="<f0> SourceModule| <f1> litellm.integrations.custom_batch_logger",shape="record"];
	"litellm.secret_managers.aws_secret_manager_v2" [label="<f0> SourceModule| <f1> litellm.secret_managers.aws_secret_manager_v2",shape="record"];
	"litellm.types.llms.custom_http" [label="<f0> SourceModule| <f1> litellm.types.llms.custom_http",shape="record"];
	"litellm.vector_stores.vector_store_registry" [label="<f0> SourceModule| <f1> litellm.vector_stores.vector_store_registry",shape="record"];
	"litellm.vector_stores" [label="<f0> NamespacePackage| <f1> litellm.vector_stores",shape="record"];
	"litellm.types.vector_stores" [label="<f0> SourceModule| <f1> litellm.types.vector_stores",shape="record"];
	"litellm.proxy._experimental.mcp_server.mcp_server_manager" [label="<f0> SourceModule| <f1> litellm.proxy._experimental.mcp_server.mcp_server_manager",shape="record"];
	"litellm.proxy._experimental.mcp_server" [label="<f0> NamespacePackage| <f1> litellm.proxy._experimental.mcp_server",shape="record"];
	"litellm.proxy._experimental" [label="<f0> NamespacePackage| <f1> litellm.proxy._experimental",shape="record"];
	"litellm.types.mcp_server.mcp_server_manager" [label="<f0> SourceModule| <f1> litellm.types.mcp_server.mcp_server_manager",shape="record"];
	"litellm.types.mcp_server" [label="<f0> NamespacePackage| <f1> litellm.types.mcp_server",shape="record"];
	"'mcp.types'" [label="<f0> MissingModule| <f1> 'mcp.types'",shape="record"];
	"'mcp.client'" [label="<f0> MissingModule| <f1> 'mcp.client'",shape="record"];
	"mcp" [label="<f0> MissingModule| <f1> mcp",shape="record"];
	"litellm.integrations.prometheus" [label="<f0> SourceModule| <f1> litellm.integrations.prometheus",shape="record"];
	"prometheus_client" [label="<f0> Package| <f1> prometheus_client",shape="record"];
	"prometheus_client.registry" [label="<f0> SourceModule| <f1> prometheus_client.registry",shape="record"];
	"prometheus_client.process_collector" [label="<f0> SourceModule| <f1> prometheus_client.process_collector",shape="record"];
	"prometheus_client.platform_collector" [label="<f0> SourceModule| <f1> prometheus_client.platform_collector",shape="record"];
	"prometheus_client.metrics_core" [label="<f0> SourceModule| <f1> prometheus_client.metrics_core",shape="record"];
	"prometheus_client.validation" [label="<f0> SourceModule| <f1> prometheus_client.validation",shape="record"];
	"prometheus_client.samples" [label="<f0> SourceModule| <f1> prometheus_client.samples",shape="record"];
	"prometheus_client.metrics" [label="<f0> SourceModule| <f1> prometheus_client.metrics",shape="record"];
	"prometheus_client.utils" [label="<f0> SourceModule| <f1> prometheus_client.utils",shape="record"];
	"prometheus_client.context_managers" [label="<f0> SourceModule| <f1> prometheus_client.context_managers",shape="record"];
	"prometheus_client.decorator" [label="<f0> SourceModule| <f1> prometheus_client.decorator",shape="record"];
	"prometheus_client.values" [label="<f0> SourceModule| <f1> prometheus_client.values",shape="record"];
	"prometheus_client.mmap_dict" [label="<f0> SourceModule| <f1> prometheus_client.mmap_dict",shape="record"];
	"prometheus_client.gc_collector" [label="<f0> SourceModule| <f1> prometheus_client.gc_collector",shape="record"];
	"prometheus_client.exposition" [label="<f0> SourceModule| <f1> prometheus_client.exposition",shape="record"];
	"prometheus_client.asgi" [label="<f0> SourceModule| <f1> prometheus_client.asgi",shape="record"];
	"prometheus_client.openmetrics.exposition" [label="<f0> SourceModule| <f1> prometheus_client.openmetrics.exposition",shape="record"];
	"prometheus_client.openmetrics" [label="<f0> Package| <f1> prometheus_client.openmetrics",shape="record"];
	"wsgiref.simple_server" [label="<f0> SourceModule| <f1> wsgiref.simple_server",shape="record"];
	"'apscheduler.schedulers'" [label="<f0> MissingModule| <f1> 'apscheduler.schedulers'",shape="record"];
	"litellm.types.integrations.prometheus" [label="<f0> SourceModule| <f1> litellm.types.integrations.prometheus",shape="record"];
	"'azure.keyvault'" [label="<f0> MissingModule| <f1> 'azure.keyvault'",shape="record"];
	"'azure.identity'" [label="<f0> MissingModule| <f1> 'azure.identity'",shape="record"];
	"'litellm_enterprise.proxy'" [label="<f0> MissingModule| <f1> 'litellm_enterprise.proxy'",shape="record"];
	"'litellm.proxy.enterprise'" [label="<f0> MissingModule| <f1> 'litellm.proxy.enterprise'",shape="record"];
	"'fastapi.staticfiles'" [label="<f0> MissingModule| <f1> 'fastapi.staticfiles'",shape="record"];
	"'fastapi.security'" [label="<f0> MissingModule| <f1> 'fastapi.security'",shape="record"];
	"'fastapi.routing'" [label="<f0> MissingModule| <f1> 'fastapi.routing'",shape="record"];
	"'fastapi.openapi'" [label="<f0> MissingModule| <f1> 'fastapi.openapi'",shape="record"];
	"'fastapi.middleware'" [label="<f0> MissingModule| <f1> 'fastapi.middleware'",shape="record"];
	"'fastapi.encoders'" [label="<f0> MissingModule| <f1> 'fastapi.encoders'",shape="record"];
	"litellm._version" [label="<f0> SourceModule| <f1> litellm._version",shape="record"];
	"litellm.types.scheduler" [label="<f0> SourceModule| <f1> litellm.types.scheduler",shape="record"];
	"litellm.types.integrations.slack_alerting" [label="<f0> SourceModule| <f1> litellm.types.integrations.slack_alerting",shape="record"];
	"litellm.secret_managers.google_kms" [label="<f0> SourceModule| <f1> litellm.secret_managers.google_kms",shape="record"];
	"litellm.secret_managers.aws_secret_manager" [label="<f0> SourceModule| <f1> litellm.secret_managers.aws_secret_manager",shape="record"];
	"litellm.scheduler" [label="<f0> SourceModule| <f1> litellm.scheduler",shape="record"];
	"litellm.print_verbose" [label="<f0> MissingModule| <f1> litellm.print_verbose",shape="record"];
	"litellm.router" [label="<f0> SourceModule| <f1> litellm.router",shape="record"];
	"litellm.responses.utils" [label="<f0> SourceModule| <f1> litellm.responses.utils",shape="record"];
	"litellm.router_utils.pattern_match_deployments" [label="<f0> SourceModule| <f1> litellm.router_utils.pattern_match_deployments",shape="record"];
	"litellm.router_utils" [label="<f0> NamespacePackage| <f1> litellm.router_utils",shape="record"];
	"litellm.types.services" [label="<f0> SourceModule| <f1> litellm.types.services",shape="record"];
	"litellm.router_utils.router_callbacks.track_deployment_metrics" [label="<f0> SourceModule| <f1> litellm.router_utils.router_callbacks.track_deployment_metrics",shape="record"];
	"litellm.router_utils.router_callbacks" [label="<f0> NamespacePackage| <f1> litellm.router_utils.router_callbacks",shape="record"];
	"litellm.router_utils.pre_call_checks.responses_api_deployment_check" [label="<f0> SourceModule| <f1> litellm.router_utils.pre_call_checks.responses_api_deployment_check",shape="record"];
	"litellm.router_utils.pre_call_checks" [label="<f0> NamespacePackage| <f1> litellm.router_utils.pre_call_checks",shape="record"];
	"litellm.router_utils.pre_call_checks.prompt_caching_deployment_check" [label="<f0> SourceModule| <f1> litellm.router_utils.pre_call_checks.prompt_caching_deployment_check",shape="record"];
	"litellm.router_utils.prompt_caching_cache" [label="<f0> SourceModule| <f1> litellm.router_utils.prompt_caching_cache",shape="record"];
	"litellm.router_utils.handle_error" [label="<f0> SourceModule| <f1> litellm.router_utils.handle_error",shape="record"];
	"litellm.router_utils.fallback_event_handlers" [label="<f0> SourceModule| <f1> litellm.router_utils.fallback_event_handlers",shape="record"];
	"litellm.router_utils.cooldown_handlers" [label="<f0> SourceModule| <f1> litellm.router_utils.cooldown_handlers",shape="record"];
	"litellm.router_utils.cooldown_callbacks" [label="<f0> SourceModule| <f1> litellm.router_utils.cooldown_callbacks",shape="record"];
	"litellm.router_utils.cooldown_cache" [label="<f0> SourceModule| <f1> litellm.router_utils.cooldown_cache",shape="record"];
	"litellm.router_utils.clientside_credential_handler" [label="<f0> SourceModule| <f1> litellm.router_utils.clientside_credential_handler",shape="record"];
	"litellm.router_utils.client_initalization_utils" [label="<f0> SourceModule| <f1> litellm.router_utils.client_initalization_utils",shape="record"];
	"litellm.router_utils.batch_utils" [label="<f0> SourceModule| <f1> litellm.router_utils.batch_utils",shape="record"];
	"litellm.router_utils.add_retry_fallback_headers" [label="<f0> SourceModule| <f1> litellm.router_utils.add_retry_fallback_headers",shape="record"];
	"litellm.router_strategy.tag_based_routing" [label="<f0> SourceModule| <f1> litellm.router_strategy.tag_based_routing",shape="record"];
	"litellm.router_strategy" [label="<f0> NamespacePackage| <f1> litellm.router_strategy",shape="record"];
	"litellm.router_strategy.simple_shuffle" [label="<f0> SourceModule| <f1> litellm.router_strategy.simple_shuffle",shape="record"];
	"litellm.router_strategy.lowest_tpm_rpm_v2" [label="<f0> SourceModule| <f1> litellm.router_strategy.lowest_tpm_rpm_v2",shape="record"];
	"litellm.router_strategy.base_routing_strategy" [label="<f0> SourceModule| <f1> litellm.router_strategy.base_routing_strategy",shape="record"];
	"litellm.router_strategy.lowest_tpm_rpm" [label="<f0> SourceModule| <f1> litellm.router_strategy.lowest_tpm_rpm",shape="record"];
	"litellm.router_strategy.lowest_latency" [label="<f0> SourceModule| <f1> litellm.router_strategy.lowest_latency",shape="record"];
	"litellm.router_strategy.lowest_cost" [label="<f0> SourceModule| <f1> litellm.router_strategy.lowest_cost",shape="record"];
	"litellm.router_strategy.least_busy" [label="<f0> SourceModule| <f1> litellm.router_strategy.least_busy",shape="record"];
	"litellm.router_strategy.budget_limiter" [label="<f0> SourceModule| <f1> litellm.router_strategy.budget_limiter",shape="record"];
	"litellm.litellm_core_utils.duration_parser" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.duration_parser",shape="record"];
	"litellm.get_secret_str" [label="<f0> MissingModule| <f1> litellm.get_secret_str",shape="record"];
	"litellm.proxy.vertex_ai_endpoints.langfuse_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.vertex_ai_endpoints.langfuse_endpoints",shape="record"];
	"litellm.proxy.vertex_ai_endpoints" [label="<f0> NamespacePackage| <f1> litellm.proxy.vertex_ai_endpoints",shape="record"];
	"litellm.proxy.utils" [label="<f0> SourceModule| <f1> litellm.proxy.utils",shape="record"];
	"prisma" [label="<f0> MissingModule| <f1> prisma",shape="record"];
	"litellm.proxy.hooks.parallel_request_limiter" [label="<f0> SourceModule| <f1> litellm.proxy.hooks.parallel_request_limiter",shape="record"];
	"litellm.proxy.hooks.max_budget_limiter" [label="<f0> SourceModule| <f1> litellm.proxy.hooks.max_budget_limiter",shape="record"];
	"litellm.proxy.hooks.cache_control_check" [label="<f0> SourceModule| <f1> litellm.proxy.hooks.cache_control_check",shape="record"];
	"litellm.proxy.hooks" [label="<f0> Package| <f1> litellm.proxy.hooks",shape="record"];
	"'enterprise.enterprise_hooks'" [label="<f0> MissingModule| <f1> 'enterprise.enterprise_hooks'",shape="record"];
	"litellm.proxy.hooks.parallel_request_limiter_v2" [label="<f0> SourceModule| <f1> litellm.proxy.hooks.parallel_request_limiter_v2",shape="record"];
	"litellm.proxy.db.prisma_client" [label="<f0> SourceModule| <f1> litellm.proxy.db.prisma_client",shape="record"];
	"litellm.proxy.db" [label="<f0> NamespacePackage| <f1> litellm.proxy.db",shape="record"];
	"litellm_proxy_extras" [label="<f0> MissingModule| <f1> litellm_proxy_extras",shape="record"];
	"litellm.proxy.auth.rds_iam_token" [label="<f0> SourceModule| <f1> litellm.proxy.auth.rds_iam_token",shape="record"];
	"litellm.proxy.auth" [label="<f0> NamespacePackage| <f1> litellm.proxy.auth",shape="record"];
	"litellm.proxy.db.log_db_metrics" [label="<f0> SourceModule| <f1> litellm.proxy.db.log_db_metrics",shape="record"];
	"litellm.proxy.db.db_spend_update_writer" [label="<f0> SourceModule| <f1> litellm.proxy.db.db_spend_update_writer",shape="record"];
	"litellm.proxy.db.db_transaction_queue.spend_update_queue" [label="<f0> SourceModule| <f1> litellm.proxy.db.db_transaction_queue.spend_update_queue",shape="record"];
	"litellm.proxy.db.db_transaction_queue" [label="<f0> NamespacePackage| <f1> litellm.proxy.db.db_transaction_queue",shape="record"];
	"litellm.proxy.db.db_transaction_queue.base_update_queue" [label="<f0> SourceModule| <f1> litellm.proxy.db.db_transaction_queue.base_update_queue",shape="record"];
	"litellm.proxy.db.db_transaction_queue.redis_update_buffer" [label="<f0> SourceModule| <f1> litellm.proxy.db.db_transaction_queue.redis_update_buffer",shape="record"];
	"litellm.proxy.db.db_transaction_queue.pod_lock_manager" [label="<f0> SourceModule| <f1> litellm.proxy.db.db_transaction_queue.pod_lock_manager",shape="record"];
	"litellm.proxy.db.db_transaction_queue.daily_spend_update_queue" [label="<f0> SourceModule| <f1> litellm.proxy.db.db_transaction_queue.daily_spend_update_queue",shape="record"];
	"litellm.proxy.db.create_views" [label="<f0> SourceModule| <f1> litellm.proxy.db.create_views",shape="record"];
	"litellm.llms.custom_httpx.httpx_handler" [label="<f0> SourceModule| <f1> litellm.llms.custom_httpx.httpx_handler",shape="record"];
	"litellm.llms.custom_httpx" [label="<f0> NamespacePackage| <f1> litellm.llms.custom_httpx",shape="record"];
	"litellm.integrations.SlackAlerting.utils" [label="<f0> SourceModule| <f1> litellm.integrations.SlackAlerting.utils",shape="record"];
	"litellm.integrations.SlackAlerting" [label="<f0> NamespacePackage| <f1> litellm.integrations.SlackAlerting",shape="record"];
	"email.mime.text" [label="<f0> SourceModule| <f1> email.mime.text",shape="record"];
	"email.mime" [label="<f0> Package| <f1> email.mime",shape="record"];
	"email.mime.nonmultipart" [label="<f0> SourceModule| <f1> email.mime.nonmultipart",shape="record"];
	"email.mime.base" [label="<f0> SourceModule| <f1> email.mime.base",shape="record"];
	"email.mime.multipart" [label="<f0> SourceModule| <f1> email.mime.multipart",shape="record"];
	"litellm.proxy.ui_crud_endpoints.proxy_setting_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.ui_crud_endpoints.proxy_setting_endpoints",shape="record"];
	"litellm.proxy.ui_crud_endpoints" [label="<f0> NamespacePackage| <f1> litellm.proxy.ui_crud_endpoints",shape="record"];
	"litellm.types.proxy.management_endpoints.ui_sso" [label="<f0> SourceModule| <f1> litellm.types.proxy.management_endpoints.ui_sso",shape="record"];
	"litellm.types.proxy.management_endpoints" [label="<f0> NamespacePackage| <f1> litellm.types.proxy.management_endpoints",shape="record"];
	"litellm.proxy.types_utils.utils" [label="<f0> SourceModule| <f1> litellm.proxy.types_utils.utils",shape="record"];
	"litellm.proxy.types_utils" [label="<f0> NamespacePackage| <f1> litellm.proxy.types_utils",shape="record"];
	"litellm.proxy.spend_tracking.spend_tracking_utils" [label="<f0> SourceModule| <f1> litellm.proxy.spend_tracking.spend_tracking_utils",shape="record"];
	"litellm.proxy.spend_tracking" [label="<f0> NamespacePackage| <f1> litellm.proxy.spend_tracking",shape="record"];
	"litellm.proxy.spend_tracking.spend_management_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.spend_tracking.spend_management_endpoints",shape="record"];
	"litellm.integrations.prometheus_helpers.prometheus_api" [label="<f0> SourceModule| <f1> litellm.integrations.prometheus_helpers.prometheus_api",shape="record"];
	"litellm.integrations.prometheus_helpers" [label="<f0> NamespacePackage| <f1> litellm.integrations.prometheus_helpers",shape="record"];
	"litellm.cost_calculator" [label="<f0> SourceModule| <f1> litellm.cost_calculator",shape="record"];
	"litellm.llms.vertex_ai.image_generation.cost_calculator" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.image_generation.cost_calculator",shape="record"];
	"litellm.llms.vertex_ai.image_generation" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.image_generation",shape="record"];
	"litellm.llms.vertex_ai.cost_calculator" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.cost_calculator",shape="record"];
	"litellm.llms.together_ai.cost_calculator" [label="<f0> SourceModule| <f1> litellm.llms.together_ai.cost_calculator",shape="record"];
	"litellm.llms.together_ai" [label="<f0> NamespacePackage| <f1> litellm.llms.together_ai",shape="record"];
	"litellm.llms.openai.cost_calculation" [label="<f0> SourceModule| <f1> litellm.llms.openai.cost_calculation",shape="record"];
	"litellm.llms.openai" [label="<f0> NamespacePackage| <f1> litellm.llms.openai",shape="record"];
	"litellm.llms.gemini.cost_calculator" [label="<f0> SourceModule| <f1> litellm.llms.gemini.cost_calculator",shape="record"];
	"litellm.llms.fireworks_ai.cost_calculator" [label="<f0> SourceModule| <f1> litellm.llms.fireworks_ai.cost_calculator",shape="record"];
	"litellm.llms.fireworks_ai" [label="<f0> NamespacePackage| <f1> litellm.llms.fireworks_ai",shape="record"];
	"litellm.llms.deepseek.cost_calculator" [label="<f0> SourceModule| <f1> litellm.llms.deepseek.cost_calculator",shape="record"];
	"litellm.llms.deepseek" [label="<f0> NamespacePackage| <f1> litellm.llms.deepseek",shape="record"];
	"litellm.llms.databricks.cost_calculator" [label="<f0> SourceModule| <f1> litellm.llms.databricks.cost_calculator",shape="record"];
	"litellm.llms.databricks" [label="<f0> NamespacePackage| <f1> litellm.llms.databricks",shape="record"];
	"litellm.llms.bedrock.image.cost_calculator" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.image.cost_calculator",shape="record"];
	"litellm.llms.bedrock.image" [label="<f0> NamespacePackage| <f1> litellm.llms.bedrock.image",shape="record"];
	"litellm.llms.azure.cost_calculation" [label="<f0> SourceModule| <f1> litellm.llms.azure.cost_calculation",shape="record"];
	"litellm.llms.azure" [label="<f0> NamespacePackage| <f1> litellm.llms.azure",shape="record"];
	"litellm.llms.anthropic.cost_calculation" [label="<f0> SourceModule| <f1> litellm.llms.anthropic.cost_calculation",shape="record"];
	"litellm.llms.anthropic" [label="<f0> NamespacePackage| <f1> litellm.llms.anthropic",shape="record"];
	"litellm.litellm_core_utils.llm_cost_calc.utils" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.llm_cost_calc.utils",shape="record"];
	"litellm.litellm_core_utils.llm_cost_calc" [label="<f0> NamespacePackage| <f1> litellm.litellm_core_utils.llm_cost_calc",shape="record"];
	"litellm.litellm_core_utils.llm_cost_calc.tool_call_cost_tracking" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.llm_cost_calc.tool_call_cost_tracking",shape="record"];
	"'enterprise.utils'" [label="<f0> MissingModule| <f1> 'enterprise.utils'",shape="record"];
	"litellm.proxy.route_llm_request" [label="<f0> SourceModule| <f1> litellm.proxy.route_llm_request",shape="record"];
	"litellm.proxy.response_api_endpoints.endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.response_api_endpoints.endpoints",shape="record"];
	"litellm.proxy.response_api_endpoints" [label="<f0> NamespacePackage| <f1> litellm.proxy.response_api_endpoints",shape="record"];
	"litellm.proxy.rerank_endpoints.endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.rerank_endpoints.endpoints",shape="record"];
	"litellm.proxy.rerank_endpoints" [label="<f0> NamespacePackage| <f1> litellm.proxy.rerank_endpoints",shape="record"];
	"litellm.proxy.pass_through_endpoints.pass_through_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.pass_through_endpoints.pass_through_endpoints",shape="record"];
	"litellm.proxy.pass_through_endpoints.success_handler" [label="<f0> SourceModule| <f1> litellm.proxy.pass_through_endpoints.success_handler",shape="record"];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.vertex_passthrough_logging_handler" [label="<f0> SourceModule| <f1> litellm.proxy.pass_through_endpoints.llm_provider_handlers.vertex_passthrough_logging_handler",shape="record"];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers" [label="<f0> NamespacePackage| <f1> litellm.proxy.pass_through_endpoints.llm_provider_handlers",shape="record"];
	"litellm.llms.vertex_ai.image_generation.image_generation_handler" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.image_generation.image_generation_handler",shape="record"];
	"litellm.proxy.pass_through_endpoints.types" [label="<f0> MissingModule| <f1> litellm.proxy.pass_through_endpoints.types",shape="record"];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.cohere_passthrough_logging_handler" [label="<f0> SourceModule| <f1> litellm.proxy.pass_through_endpoints.llm_provider_handlers.cohere_passthrough_logging_handler",shape="record"];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.base_passthrough_logging_handler" [label="<f0> SourceModule| <f1> litellm.proxy.pass_through_endpoints.llm_provider_handlers.base_passthrough_logging_handler",shape="record"];
	"litellm.llms.cohere.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.cohere.common_utils",shape="record"];
	"litellm.llms.cohere" [label="<f0> NamespacePackage| <f1> litellm.llms.cohere",shape="record"];
	"litellm.llms.cohere.chat.v2_transformation" [label="<f0> SourceModule| <f1> litellm.llms.cohere.chat.v2_transformation",shape="record"];
	"litellm.llms.cohere.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.cohere.chat",shape="record"];
	"litellm.types.llms.cohere" [label="<f0> SourceModule| <f1> litellm.types.llms.cohere",shape="record"];
	"litellm.litellm_core_utils.prompt_templates.factory" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.prompt_templates.factory",shape="record"];
	"litellm.litellm_core_utils.prompt_templates" [label="<f0> NamespacePackage| <f1> litellm.litellm_core_utils.prompt_templates",shape="record"];
	"litellm.litellm_core_utils.prompt_templates.image_handling" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.prompt_templates.image_handling",shape="record"];
	"litellm.types.llms.ollama" [label="<f0> SourceModule| <f1> litellm.types.llms.ollama",shape="record"];
	"litellm.types.llms.bedrock" [label="<f0> SourceModule| <f1> litellm.types.llms.bedrock",shape="record"];
	"litellm.stream_chunk_builder" [label="<f0> MissingModule| <f1> litellm.stream_chunk_builder",shape="record"];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.assembly_passthrough_logging_handler" [label="<f0> SourceModule| <f1> litellm.proxy.pass_through_endpoints.llm_provider_handlers.assembly_passthrough_logging_handler",shape="record"];
	"litellm.types.passthrough_endpoints.assembly_ai" [label="<f0> SourceModule| <f1> litellm.types.passthrough_endpoints.assembly_ai",shape="record"];
	"litellm.types.passthrough_endpoints" [label="<f0> NamespacePackage| <f1> litellm.types.passthrough_endpoints",shape="record"];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.anthropic_passthrough_logging_handler" [label="<f0> SourceModule| <f1> litellm.proxy.pass_through_endpoints.llm_provider_handlers.anthropic_passthrough_logging_handler",shape="record"];
	"litellm.llms.anthropic.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.anthropic.chat.transformation",shape="record"];
	"litellm.llms.anthropic.chat" [label="<f0> Package| <f1> litellm.llms.anthropic.chat",shape="record"];
	"litellm.llms.anthropic.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.anthropic.common_utils",shape="record"];
	"litellm.llms.anthropic.chat.handler" [label="<f0> SourceModule| <f1> litellm.llms.anthropic.chat.handler",shape="record"];
	"litellm.llms.base" [label="<f0> SourceModule| <f1> litellm.llms.base",shape="record"];
	"litellm.proxy.pass_through_endpoints.streaming_handler" [label="<f0> SourceModule| <f1> litellm.proxy.pass_through_endpoints.streaming_handler",shape="record"];
	"litellm.proxy.pass_through_endpoints" [label="<f0> NamespacePackage| <f1> litellm.proxy.pass_through_endpoints",shape="record"];
	"litellm.types.passthrough_endpoints.pass_through_endpoints" [label="<f0> SourceModule| <f1> litellm.types.passthrough_endpoints.pass_through_endpoints",shape="record"];
	"'starlette.datastructures'" [label="<f0> MissingModule| <f1> 'starlette.datastructures'",shape="record"];
	"litellm.proxy.pass_through_endpoints.llm_passthrough_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.pass_through_endpoints.llm_passthrough_endpoints",shape="record"];
	"litellm.llms.bedrock.chat" [label="<f0> Package| <f1> litellm.llms.bedrock.chat",shape="record"];
	"litellm.llms.bedrock.chat.invoke_handler" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.chat.invoke_handler",shape="record"];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_deepseek_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.chat.invoke_transformations.amazon_deepseek_transformation",shape="record"];
	"litellm.llms.bedrock.chat.invoke_transformations" [label="<f0> NamespacePackage| <f1> litellm.llms.bedrock.chat.invoke_transformations",shape="record"];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_llama_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.chat.invoke_transformations.amazon_llama_transformation",shape="record"];
	"litellm.llms.bedrock.chat.invoke_transformations.base_invoke_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.chat.invoke_transformations.base_invoke_transformation",shape="record"];
	"'botocore.eventstream'" [label="<f0> MissingModule| <f1> 'botocore.eventstream'",shape="record"];
	"'botocore.parsers'" [label="<f0> MissingModule| <f1> 'botocore.parsers'",shape="record"];
	"'botocore.model'" [label="<f0> MissingModule| <f1> 'botocore.model'",shape="record"];
	"'botocore.loaders'" [label="<f0> MissingModule| <f1> 'botocore.loaders'",shape="record"];
	"litellm.llms.bedrock.chat.converse_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.chat.converse_transformation",shape="record"];
	"litellm.llms.bedrock.chat.converse_handler" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.chat.converse_handler",shape="record"];
	"litellm.proxy.pass_through_endpoints.passthrough_endpoint_router" [label="<f0> SourceModule| <f1> litellm.proxy.pass_through_endpoints.passthrough_endpoint_router",shape="record"];
	"litellm.types.passthrough_endpoints.vertex_ai" [label="<f0> SourceModule| <f1> litellm.types.passthrough_endpoints.vertex_ai",shape="record"];
	"litellm.proxy.pass_through_endpoints.common_utils" [label="<f0> SourceModule| <f1> litellm.proxy.pass_through_endpoints.common_utils",shape="record"];
	"litellm.proxy.auth.route_checks" [label="<f0> SourceModule| <f1> litellm.proxy.auth.route_checks",shape="record"];
	"litellm.proxy.auth.auth_checks_organization" [label="<f0> SourceModule| <f1> litellm.proxy.auth.auth_checks_organization",shape="record"];
	"litellm.proxy.openai_files_endpoints.files_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.openai_files_endpoints.files_endpoints",shape="record"];
	"litellm.proxy.openai_files_endpoints" [label="<f0> NamespacePackage| <f1> litellm.proxy.openai_files_endpoints",shape="record"];
	"litellm.proxy.openai_files_endpoints.common_utils" [label="<f0> SourceModule| <f1> litellm.proxy.openai_files_endpoints.common_utils",shape="record"];
	"litellm.CreateFileRequest" [label="<f0> MissingModule| <f1> litellm.CreateFileRequest",shape="record"];
	"litellm.proxy.middleware.prometheus_auth_middleware" [label="<f0> SourceModule| <f1> litellm.proxy.middleware.prometheus_auth_middleware",shape="record"];
	"litellm.proxy.middleware" [label="<f0> NamespacePackage| <f1> litellm.proxy.middleware",shape="record"];
	"'starlette.middleware'" [label="<f0> MissingModule| <f1> 'starlette.middleware'",shape="record"];
	"litellm.proxy.management_helpers.audit_logs" [label="<f0> SourceModule| <f1> litellm.proxy.management_helpers.audit_logs",shape="record"];
	"litellm.proxy.management_helpers" [label="<f0> NamespacePackage| <f1> litellm.proxy.management_helpers",shape="record"];
	"litellm.proxy.management_endpoints.ui_sso" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.ui_sso",shape="record"];
	"litellm.proxy.management_endpoints" [label="<f0> NamespacePackage| <f1> litellm.proxy.management_endpoints",shape="record"];
	"'fastapi_sso.sso'" [label="<f0> MissingModule| <f1> 'fastapi_sso.sso'",shape="record"];
	"litellm.proxy.management_endpoints.types" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.types",shape="record"];
	"fastapi_sso" [label="<f0> MissingModule| <f1> fastapi_sso",shape="record"];
	"litellm.proxy.management_endpoints.sso_helper_utils" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.sso_helper_utils",shape="record"];
	"litellm.proxy.common_utils.html_forms.jwt_display_template" [label="<f0> SourceModule| <f1> litellm.proxy.common_utils.html_forms.jwt_display_template",shape="record"];
	"litellm.proxy.common_utils.html_forms" [label="<f0> NamespacePackage| <f1> litellm.proxy.common_utils.html_forms",shape="record"];
	"litellm.proxy.common_utils" [label="<f0> NamespacePackage| <f1> litellm.proxy.common_utils",shape="record"];
	"litellm.proxy.common_utils.admin_ui_utils" [label="<f0> SourceModule| <f1> litellm.proxy.common_utils.admin_ui_utils",shape="record"];
	"litellm.proxy.management_endpoints.team_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.team_endpoints",shape="record"];
	"litellm.proxy.common_utils.timezone_utils" [label="<f0> SourceModule| <f1> litellm.proxy.common_utils.timezone_utils",shape="record"];
	"litellm.types.proxy.management_endpoints.team_endpoints" [label="<f0> SourceModule| <f1> litellm.types.proxy.management_endpoints.team_endpoints",shape="record"];
	"litellm.types.proxy.management_endpoints.common_daily_activity" [label="<f0> SourceModule| <f1> litellm.types.proxy.management_endpoints.common_daily_activity",shape="record"];
	"litellm.proxy.management_helpers.utils" [label="<f0> SourceModule| <f1> litellm.proxy.management_helpers.utils",shape="record"];
	"litellm.proxy.management_helpers.team_member_permission_checks" [label="<f0> SourceModule| <f1> litellm.proxy.management_helpers.team_member_permission_checks",shape="record"];
	"litellm.proxy.management_endpoints.team_callback_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.team_callback_endpoints",shape="record"];
	"litellm.proxy.management_endpoints.tag_management_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.tag_management_endpoints",shape="record"];
	"litellm.types.tag_management" [label="<f0> SourceModule| <f1> litellm.types.tag_management",shape="record"];
	"litellm.proxy.management_endpoints.common_daily_activity" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.common_daily_activity",shape="record"];
	"litellm.proxy.management_endpoints.scim.scim_v2" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.scim.scim_v2",shape="record"];
	"litellm.proxy.management_endpoints.scim" [label="<f0> NamespacePackage| <f1> litellm.proxy.management_endpoints.scim",shape="record"];
	"litellm.types.proxy.management_endpoints.scim_v2" [label="<f0> SourceModule| <f1> litellm.types.proxy.management_endpoints.scim_v2",shape="record"];
	"litellm.proxy.management_endpoints.scim.scim_transformations" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.scim.scim_transformations",shape="record"];
	"litellm.proxy.management_endpoints.organization_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.organization_endpoints",shape="record"];
	"litellm.proxy.management_endpoints.model_management_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.model_management_endpoints",shape="record"];
	"litellm.proxy.management_endpoints.key_management_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.key_management_endpoints",shape="record"];
	"litellm.proxy.hooks.key_management_event_hooks" [label="<f0> SourceModule| <f1> litellm.proxy.hooks.key_management_event_hooks",shape="record"];
	"litellm.types.enterprise.enterprise_callbacks.send_emails" [label="<f0> SourceModule| <f1> litellm.types.enterprise.enterprise_callbacks.send_emails",shape="record"];
	"litellm.types.enterprise.enterprise_callbacks" [label="<f0> NamespacePackage| <f1> litellm.types.enterprise.enterprise_callbacks",shape="record"];
	"litellm.types.enterprise" [label="<f0> NamespacePackage| <f1> litellm.types.enterprise",shape="record"];
	"litellm.proxy.management_endpoints.internal_user_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.internal_user_endpoints",shape="record"];
	"litellm.types.proxy.management_endpoints.internal_user_endpoints" [label="<f0> SourceModule| <f1> litellm.types.proxy.management_endpoints.internal_user_endpoints",shape="record"];
	"litellm.proxy.hooks.user_management_event_hooks" [label="<f0> SourceModule| <f1> litellm.proxy.hooks.user_management_event_hooks",shape="record"];
	"litellm.proxy.management_endpoints.customer_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.customer_endpoints",shape="record"];
	"litellm.proxy.management_endpoints.common_utils" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.common_utils",shape="record"];
	"litellm.proxy.management_endpoints.budget_management_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.management_endpoints.budget_management_endpoints",shape="record"];
	"litellm.proxy.litellm_pre_call_utils" [label="<f0> SourceModule| <f1> litellm.proxy.litellm_pre_call_utils",shape="record"];
	"litellm.litellm_core_utils.safe_json_loads" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.safe_json_loads",shape="record"];
	"starlette" [label="<f0> MissingModule| <f1> starlette",shape="record"];
	"litellm.proxy.hooks.proxy_track_cost_callback" [label="<f0> SourceModule| <f1> litellm.proxy.hooks.proxy_track_cost_callback",shape="record"];
	"litellm.proxy.hooks.prompt_injection_detection" [label="<f0> SourceModule| <f1> litellm.proxy.hooks.prompt_injection_detection",shape="record"];
	"litellm.proxy.hooks.model_max_budget_limiter" [label="<f0> SourceModule| <f1> litellm.proxy.hooks.model_max_budget_limiter",shape="record"];
	"litellm.proxy.health_endpoints._health_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.health_endpoints._health_endpoints",shape="record"];
	"litellm.proxy.health_endpoints" [label="<f0> NamespacePackage| <f1> litellm.proxy.health_endpoints",shape="record"];
	"litellm.integrations.langfuse.langfuse" [label="<f0> SourceModule| <f1> litellm.integrations.langfuse.langfuse",shape="record"];
	"litellm.integrations.langfuse" [label="<f0> NamespacePackage| <f1> litellm.integrations.langfuse",shape="record"];
	"'langfuse.model'" [label="<f0> MissingModule| <f1> 'langfuse.model'",shape="record"];
	"langfuse" [label="<f0> MissingModule| <f1> langfuse",shape="record"];
	"litellm.types.integrations.langfuse" [label="<f0> SourceModule| <f1> litellm.types.integrations.langfuse",shape="record"];
	"litellm.integrations.datadog.datadog" [label="<f0> SourceModule| <f1> litellm.integrations.datadog.datadog",shape="record"];
	"litellm.integrations.datadog" [label="<f0> NamespacePackage| <f1> litellm.integrations.datadog",shape="record"];
	"litellm.integrations.additional_logging_utils" [label="<f0> SourceModule| <f1> litellm.integrations.additional_logging_utils",shape="record"];
	"litellm.types.integrations.datadog" [label="<f0> SourceModule| <f1> litellm.types.integrations.datadog",shape="record"];
	"litellm.types.integrations.base_health_check" [label="<f0> SourceModule| <f1> litellm.types.integrations.base_health_check",shape="record"];
	"litellm.proxy.health_check" [label="<f0> SourceModule| <f1> litellm.proxy.health_check",shape="record"];
	"litellm.proxy.guardrails.init_guardrails" [label="<f0> SourceModule| <f1> litellm.proxy.guardrails.init_guardrails",shape="record"];
	"litellm.proxy.guardrails.guardrail_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.guardrails.guardrail_endpoints",shape="record"];
	"litellm.proxy.fine_tuning_endpoints.endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.fine_tuning_endpoints.endpoints",shape="record"];
	"litellm.proxy.fine_tuning_endpoints" [label="<f0> NamespacePackage| <f1> litellm.proxy.fine_tuning_endpoints",shape="record"];
	"litellm.proxy.db.exception_handler" [label="<f0> SourceModule| <f1> litellm.proxy.db.exception_handler",shape="record"];
	"litellm.proxy.db.db_transaction_queue.spend_log_cleanup" [label="<f0> SourceModule| <f1> litellm.proxy.db.db_transaction_queue.spend_log_cleanup",shape="record"];
	"litellm.proxy.credential_endpoints.endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.credential_endpoints.endpoints",shape="record"];
	"litellm.proxy.credential_endpoints" [label="<f0> NamespacePackage| <f1> litellm.proxy.credential_endpoints",shape="record"];
	"litellm.proxy.common_utils.swagger_utils" [label="<f0> SourceModule| <f1> litellm.proxy.common_utils.swagger_utils",shape="record"];
	"litellm.proxy.common_utils.reset_budget_job" [label="<f0> SourceModule| <f1> litellm.proxy.common_utils.reset_budget_job",shape="record"];
	"litellm.proxy.common_utils.proxy_state" [label="<f0> SourceModule| <f1> litellm.proxy.common_utils.proxy_state",shape="record"];
	"litellm.proxy.common_utils.openai_endpoint_utils" [label="<f0> SourceModule| <f1> litellm.proxy.common_utils.openai_endpoint_utils",shape="record"];
	"litellm.proxy.common_utils.load_config_utils" [label="<f0> SourceModule| <f1> litellm.proxy.common_utils.load_config_utils",shape="record"];
	"litellm.integrations.gcs_bucket.gcs_bucket" [label="<f0> SourceModule| <f1> litellm.integrations.gcs_bucket.gcs_bucket",shape="record"];
	"litellm.main" [label="<f0> SourceModule| <f1> litellm.main",shape="record"];
	"litellm.llms.watsonx.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.watsonx.common_utils",shape="record"];
	"litellm.llms.watsonx" [label="<f0> NamespacePackage| <f1> litellm.llms.watsonx",shape="record"];
	"litellm.types.llms.watsonx" [label="<f0> SourceModule| <f1> litellm.types.llms.watsonx",shape="record"];
	"litellm.llms.watsonx.chat.handler" [label="<f0> SourceModule| <f1> litellm.llms.watsonx.chat.handler",shape="record"];
	"litellm.llms.watsonx.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.watsonx.chat",shape="record"];
	"litellm.llms.watsonx.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.watsonx.chat.transformation",shape="record"];
	"litellm.llms.openai.chat.gpt_transformation" [label="<f0> SourceModule| <f1> litellm.llms.openai.chat.gpt_transformation",shape="record"];
	"litellm.llms.openai.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.openai.chat",shape="record"];
	"litellm.llms.openai.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.openai.common_utils",shape="record"];
	"litellm.llms.vllm.completion.handler" [label="<f0> SourceModule| <f1> litellm.llms.vllm.completion.handler",shape="record"];
	"vllm" [label="<f0> MissingModule| <f1> vllm",shape="record"];
	"litellm.llms.vllm.completion" [label="<f0> NamespacePackage| <f1> litellm.llms.vllm.completion",shape="record"];
	"litellm.llms.vllm" [label="<f0> NamespacePackage| <f1> litellm.llms.vllm",shape="record"];
	"litellm.llms.vertex_ai.vertex_model_garden.main" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.vertex_model_garden.main",shape="record"];
	"litellm.llms.vertex_ai.vertex_model_garden" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.vertex_model_garden",shape="record"];
	"litellm.llms.vertex_ai.vertex_embeddings.embedding_handler" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.vertex_embeddings.embedding_handler",shape="record"];
	"litellm.llms.vertex_ai.vertex_embeddings" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.vertex_embeddings",shape="record"];
	"litellm.llms.vertex_ai.vertex_embeddings.types" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.vertex_embeddings.types",shape="record"];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.main" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.vertex_ai_partner_models.main",shape="record"];
	"litellm.llms.vertex_ai.vertex_ai_partner_models" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.vertex_ai_partner_models",shape="record"];
	"litellm.llms.vertex_ai.text_to_speech.text_to_speech_handler" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.text_to_speech.text_to_speech_handler",shape="record"];
	"litellm.llms.vertex_ai.text_to_speech" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.text_to_speech",shape="record"];
	"litellm.llms.vertex_ai.multimodal_embeddings.embedding_handler" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.multimodal_embeddings.embedding_handler",shape="record"];
	"litellm.llms.vertex_ai.multimodal_embeddings" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.multimodal_embeddings",shape="record"];
	"litellm.llms.vertex_ai.multimodal_embeddings.transformation" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.multimodal_embeddings.transformation",shape="record"];
	"litellm.llms.vertex_ai.gemini_embeddings.batch_embed_content_handler" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.gemini_embeddings.batch_embed_content_handler",shape="record"];
	"litellm.llms.vertex_ai.gemini_embeddings" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.gemini_embeddings",shape="record"];
	"litellm.llms.vertex_ai.gemini_embeddings.batch_embed_content_transformation" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.gemini_embeddings.batch_embed_content_transformation",shape="record"];
	"litellm.llms.sagemaker.completion.handler" [label="<f0> SourceModule| <f1> litellm.llms.sagemaker.completion.handler",shape="record"];
	"litellm.llms.sagemaker.completion" [label="<f0> NamespacePackage| <f1> litellm.llms.sagemaker.completion",shape="record"];
	"litellm.llms.sagemaker" [label="<f0> NamespacePackage| <f1> litellm.llms.sagemaker",shape="record"];
	"litellm.llms.sagemaker.completion.transformation" [label="<f0> SourceModule| <f1> litellm.llms.sagemaker.completion.transformation",shape="record"];
	"litellm.llms.sagemaker.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.sagemaker.common_utils",shape="record"];
	"litellm.llms.sagemaker.chat.handler" [label="<f0> SourceModule| <f1> litellm.llms.sagemaker.chat.handler",shape="record"];
	"litellm.llms.sagemaker.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.sagemaker.chat",shape="record"];
	"litellm.llms.sagemaker.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.sagemaker.chat.transformation",shape="record"];
	"litellm.llms.replicate.chat.handler" [label="<f0> SourceModule| <f1> litellm.llms.replicate.chat.handler",shape="record"];
	"litellm.llms.replicate.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.replicate.chat",shape="record"];
	"litellm.llms.replicate" [label="<f0> NamespacePackage| <f1> litellm.llms.replicate",shape="record"];
	"litellm.llms.replicate.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.replicate.chat.transformation",shape="record"];
	"litellm.llms.replicate.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.replicate.common_utils",shape="record"];
	"litellm.llms.predibase.chat.handler" [label="<f0> SourceModule| <f1> litellm.llms.predibase.chat.handler",shape="record"];
	"litellm.llms.predibase.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.predibase.chat",shape="record"];
	"litellm.llms.predibase" [label="<f0> NamespacePackage| <f1> litellm.llms.predibase",shape="record"];
	"litellm.llms.predibase.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.predibase.common_utils",shape="record"];
	"litellm.llms.petals.completion.handler" [label="<f0> SourceModule| <f1> litellm.llms.petals.completion.handler",shape="record"];
	"petals" [label="<f0> MissingModule| <f1> petals",shape="record"];
	"litellm.llms.petals.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.petals.common_utils",shape="record"];
	"litellm.llms.petals" [label="<f0> NamespacePackage| <f1> litellm.llms.petals",shape="record"];
	"litellm.llms.petals.completion" [label="<f0> NamespacePackage| <f1> litellm.llms.petals.completion",shape="record"];
	"litellm.llms.openai_like.embedding.handler" [label="<f0> SourceModule| <f1> litellm.llms.openai_like.embedding.handler",shape="record"];
	"litellm.llms.openai_like.embedding" [label="<f0> NamespacePackage| <f1> litellm.llms.openai_like.embedding",shape="record"];
	"litellm.llms.openai_like" [label="<f0> NamespacePackage| <f1> litellm.llms.openai_like",shape="record"];
	"litellm.llms.openai_like.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.openai_like.common_utils",shape="record"];
	"litellm.llms.openai_like.chat.handler" [label="<f0> SourceModule| <f1> litellm.llms.openai_like.chat.handler",shape="record"];
	"litellm.llms.openai_like.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.openai_like.chat",shape="record"];
	"litellm.llms.openai_like.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.openai_like.chat.transformation",shape="record"];
	"litellm.llms.databricks.streaming_utils" [label="<f0> SourceModule| <f1> litellm.llms.databricks.streaming_utils",shape="record"];
	"litellm.llms.openai.transcriptions.handler" [label="<f0> SourceModule| <f1> litellm.llms.openai.transcriptions.handler",shape="record"];
	"litellm.llms.openai.transcriptions" [label="<f0> NamespacePackage| <f1> litellm.llms.openai.transcriptions",shape="record"];
	"litellm.llms.openai.openai" [label="<f0> SourceModule| <f1> litellm.llms.openai.openai",shape="record"];
	"litellm.llms.openai.chat.o_series_transformation" [label="<f0> SourceModule| <f1> litellm.llms.openai.chat.o_series_transformation",shape="record"];
	"litellm.llms.openai.image_variations.handler" [label="<f0> SourceModule| <f1> litellm.llms.openai.image_variations.handler",shape="record"];
	"litellm.llms.openai.image_variations" [label="<f0> NamespacePackage| <f1> litellm.llms.openai.image_variations",shape="record"];
	"litellm.llms.openai.completion.handler" [label="<f0> SourceModule| <f1> litellm.llms.openai.completion.handler",shape="record"];
	"litellm.llms.openai.completion" [label="<f0> NamespacePackage| <f1> litellm.llms.openai.completion",shape="record"];
	"litellm.llms.openai.completion.transformation" [label="<f0> SourceModule| <f1> litellm.llms.openai.completion.transformation",shape="record"];
	"litellm.llms.openai.completion.utils" [label="<f0> SourceModule| <f1> litellm.llms.openai.completion.utils",shape="record"];
	"litellm.llms.oobabooga.chat.oobabooga" [label="<f0> SourceModule| <f1> litellm.llms.oobabooga.chat.oobabooga",shape="record"];
	"litellm.llms.oobabooga.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.oobabooga.chat.transformation",shape="record"];
	"litellm.llms.oobabooga.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.oobabooga.common_utils",shape="record"];
	"litellm.llms.oobabooga" [label="<f0> NamespacePackage| <f1> litellm.llms.oobabooga",shape="record"];
	"litellm.llms.oobabooga.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.oobabooga.chat",shape="record"];
	"litellm.llms.ollama.completion.handler" [label="<f0> SourceModule| <f1> litellm.llms.ollama.completion.handler",shape="record"];
	"litellm.llms.ollama.completion" [label="<f0> NamespacePackage| <f1> litellm.llms.ollama.completion",shape="record"];
	"litellm.llms.ollama" [label="<f0> NamespacePackage| <f1> litellm.llms.ollama",shape="record"];
	"litellm.llms.nlp_cloud.chat.handler" [label="<f0> SourceModule| <f1> litellm.llms.nlp_cloud.chat.handler",shape="record"];
	"litellm.llms.nlp_cloud.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.nlp_cloud.chat",shape="record"];
	"litellm.llms.nlp_cloud" [label="<f0> NamespacePackage| <f1> litellm.llms.nlp_cloud",shape="record"];
	"litellm.llms.nlp_cloud.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.nlp_cloud.chat.transformation",shape="record"];
	"litellm.llms.nlp_cloud.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.nlp_cloud.common_utils",shape="record"];
	"litellm.llms.huggingface.embedding.handler" [label="<f0> SourceModule| <f1> litellm.llms.huggingface.embedding.handler",shape="record"];
	"litellm.llms.huggingface.embedding" [label="<f0> NamespacePackage| <f1> litellm.llms.huggingface.embedding",shape="record"];
	"litellm.llms.huggingface" [label="<f0> NamespacePackage| <f1> litellm.llms.huggingface",shape="record"];
	"litellm.llms.huggingface.embedding.transformation" [label="<f0> SourceModule| <f1> litellm.llms.huggingface.embedding.transformation",shape="record"];
	"litellm.llms.huggingface.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.huggingface.common_utils",shape="record"];
	"litellm.llms.groq.chat.handler" [label="<f0> SourceModule| <f1> litellm.llms.groq.chat.handler",shape="record"];
	"litellm.llms.groq.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.groq.chat",shape="record"];
	"litellm.llms.groq" [label="<f0> NamespacePackage| <f1> litellm.llms.groq",shape="record"];
	"litellm.llms.groq.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.groq.chat.transformation",shape="record"];
	"litellm.llms.deprecated_providers.palm" [label="<f0> SourceModule| <f1> litellm.llms.deprecated_providers.palm",shape="record"];
	"'google.generativeai'" [label="<f0> MissingModule| <f1> 'google.generativeai'",shape="record"];
	"litellm.llms.deprecated_providers.aleph_alpha" [label="<f0> SourceModule| <f1> litellm.llms.deprecated_providers.aleph_alpha",shape="record"];
	"litellm.llms.deprecated_providers" [label="<f0> NamespacePackage| <f1> litellm.llms.deprecated_providers",shape="record"];
	"litellm.llms.databricks.embed.handler" [label="<f0> SourceModule| <f1> litellm.llms.databricks.embed.handler",shape="record"];
	"litellm.llms.databricks.embed" [label="<f0> NamespacePackage| <f1> litellm.llms.databricks.embed",shape="record"];
	"litellm.llms.databricks.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.databricks.common_utils",shape="record"];
	"'databricks.sdk'" [label="<f0> MissingModule| <f1> 'databricks.sdk'",shape="record"];
	"litellm.llms.custom_llm" [label="<f0> SourceModule| <f1> litellm.llms.custom_llm",shape="record"];
	"litellm.llms.custom_httpx.llm_http_handler" [label="<f0> SourceModule| <f1> litellm.llms.custom_httpx.llm_http_handler",shape="record"];
	"litellm.types.llms.anthropic_messages.anthropic_response" [label="<f0> SourceModule| <f1> litellm.types.llms.anthropic_messages.anthropic_response",shape="record"];
	"litellm.types.llms.anthropic_messages" [label="<f0> NamespacePackage| <f1> litellm.types.llms.anthropic_messages",shape="record"];
	"litellm.responses.streaming_iterator" [label="<f0> SourceModule| <f1> litellm.responses.streaming_iterator",shape="record"];
	"litellm.litellm_core_utils.realtime_streaming" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.realtime_streaming",shape="record"];
	"litellm.llms.custom_httpx.aiohttp_handler" [label="<f0> SourceModule| <f1> litellm.llms.custom_httpx.aiohttp_handler",shape="record"];
	"litellm.llms.cohere.embed.handler" [label="<f0> SourceModule| <f1> litellm.llms.cohere.embed.handler",shape="record"];
	"litellm.llms.cohere.embed.v1_transformation" [label="<f0> SourceModule| <f1> litellm.llms.cohere.embed.v1_transformation",shape="record"];
	"litellm.llms.cohere.embed" [label="<f0> NamespacePackage| <f1> litellm.llms.cohere.embed",shape="record"];
	"litellm.llms.codestral.completion.handler" [label="<f0> SourceModule| <f1> litellm.llms.codestral.completion.handler",shape="record"];
	"litellm.llms.codestral.completion" [label="<f0> NamespacePackage| <f1> litellm.llms.codestral.completion",shape="record"];
	"litellm.llms.codestral" [label="<f0> NamespacePackage| <f1> litellm.llms.codestral",shape="record"];
	"litellm.llms.bedrock.image.image_handler" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.image.image_handler",shape="record"];
	"litellm.llms.bedrock.embed.embedding" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.embed.embedding",shape="record"];
	"litellm.llms.bedrock.embed" [label="<f0> NamespacePackage| <f1> litellm.llms.bedrock.embed",shape="record"];
	"litellm.llms.bedrock.embed.cohere_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.embed.cohere_transformation",shape="record"];
	"litellm.llms.bedrock.embed.amazon_titan_v2_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.embed.amazon_titan_v2_transformation",shape="record"];
	"litellm.llms.bedrock.embed.amazon_titan_multimodal_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.embed.amazon_titan_multimodal_transformation",shape="record"];
	"litellm.llms.bedrock.embed.amazon_titan_g1_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.embed.amazon_titan_g1_transformation",shape="record"];
	"litellm.llms.azure_ai.embed" [label="<f0> Package| <f1> litellm.llms.azure_ai.embed",shape="record"];
	"litellm.llms.azure_ai" [label="<f0> NamespacePackage| <f1> litellm.llms.azure_ai",shape="record"];
	"litellm.llms.azure_ai.embed.handler" [label="<f0> SourceModule| <f1> litellm.llms.azure_ai.embed.handler",shape="record"];
	"litellm.llms.azure_ai.embed.cohere_transformation" [label="<f0> SourceModule| <f1> litellm.llms.azure_ai.embed.cohere_transformation",shape="record"];
	"litellm.types.llms.azure_ai" [label="<f0> SourceModule| <f1> litellm.types.llms.azure_ai",shape="record"];
	"litellm.llms.azure.completion.handler" [label="<f0> SourceModule| <f1> litellm.llms.azure.completion.handler",shape="record"];
	"litellm.llms.azure.completion" [label="<f0> NamespacePackage| <f1> litellm.llms.azure.completion",shape="record"];
	"litellm.llms.azure.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.azure.common_utils",shape="record"];
	"litellm.secret_managers.get_azure_ad_token_provider" [label="<f0> SourceModule| <f1> litellm.secret_managers.get_azure_ad_token_provider",shape="record"];
	"litellm.llms.azure.chat.o_series_handler" [label="<f0> SourceModule| <f1> litellm.llms.azure.chat.o_series_handler",shape="record"];
	"litellm.llms.azure.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.azure.chat",shape="record"];
	"litellm.llms.azure.azure" [label="<f0> SourceModule| <f1> litellm.llms.azure.azure",shape="record"];
	"litellm.llms.azure.audio_transcriptions" [label="<f0> SourceModule| <f1> litellm.llms.azure.audio_transcriptions",shape="record"];
	"litellm.llms.ollama_chat" [label="<f0> SourceModule| <f1> litellm.llms.ollama_chat",shape="record"];
	"litellm.llms.maritalk" [label="<f0> SourceModule| <f1> litellm.llms.maritalk",shape="record"];
	"litellm.llms.baseten" [label="<f0> SourceModule| <f1> litellm.llms.baseten",shape="record"];
	"litellm.litellm_core_utils.streaming_chunk_builder_utils" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.streaming_chunk_builder_utils",shape="record"];
	"litellm.litellm_core_utils.fallback_utils" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.fallback_utils",shape="record"];
	"litellm.realtime_api.main" [label="<f0> SourceModule| <f1> litellm.realtime_api.main",shape="record"];
	"litellm.realtime_api" [label="<f0> NamespacePackage| <f1> litellm.realtime_api",shape="record"];
	"litellm.llms.openai.realtime.handler" [label="<f0> SourceModule| <f1> litellm.llms.openai.realtime.handler",shape="record"];
	"litellm.llms.openai.realtime" [label="<f0> NamespacePackage| <f1> litellm.llms.openai.realtime",shape="record"];
	"litellm.llms.azure.realtime.handler" [label="<f0> SourceModule| <f1> litellm.llms.azure.realtime.handler",shape="record"];
	"litellm.llms.azure.realtime" [label="<f0> NamespacePackage| <f1> litellm.llms.azure.realtime",shape="record"];
	"litellm.litellm_core_utils.mock_functions" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.mock_functions",shape="record"];
	"litellm.litellm_core_utils.health_check_utils" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.health_check_utils",shape="record"];
	"litellm.proxy.common_utils.http_parsing_utils" [label="<f0> SourceModule| <f1> litellm.proxy.common_utils.http_parsing_utils",shape="record"];
	"litellm.proxy.common_utils.html_forms.ui_login" [label="<f0> SourceModule| <f1> litellm.proxy.common_utils.html_forms.ui_login",shape="record"];
	"litellm.proxy.common_utils.encrypt_decrypt_utils" [label="<f0> SourceModule| <f1> litellm.proxy.common_utils.encrypt_decrypt_utils",shape="record"];
	"'nacl.secret'" [label="<f0> MissingModule| <f1> 'nacl.secret'",shape="record"];
	"'nacl.utils'" [label="<f0> MissingModule| <f1> 'nacl.utils'",shape="record"];
	"nacl" [label="<f0> MissingModule| <f1> nacl",shape="record"];
	"litellm.proxy.common_utils.debug_utils" [label="<f0> SourceModule| <f1> litellm.proxy.common_utils.debug_utils",shape="record"];
	"objgraph" [label="<f0> MissingModule| <f1> objgraph",shape="record"];
	"tracemalloc" [label="<f0> SourceModule| <f1> tracemalloc",shape="record"];
	"_tracemalloc" [label="<f0> BuiltinModule| <f1> _tracemalloc",shape="record"];
	"litellm.proxy.common_utils.callback_utils" [label="<f0> SourceModule| <f1> litellm.proxy.common_utils.callback_utils",shape="record"];
	"litellm.proxy.hooks.azure_content_safety" [label="<f0> SourceModule| <f1> litellm.proxy.hooks.azure_content_safety",shape="record"];
	"'azure.ai'" [label="<f0> MissingModule| <f1> 'azure.ai'",shape="record"];
	"litellm.proxy.hooks.batch_redis_get" [label="<f0> SourceModule| <f1> litellm.proxy.hooks.batch_redis_get",shape="record"];
	"litellm_enterprise" [label="<f0> MissingModule| <f1> litellm_enterprise",shape="record"];
	"litellm.proxy.common_request_processing" [label="<f0> SourceModule| <f1> litellm.proxy.common_request_processing",shape="record"];
	"litellm.proxy.caching_routes" [label="<f0> SourceModule| <f1> litellm.proxy.caching_routes",shape="record"];
	"litellm.types.caching" [label="<f0> SourceModule| <f1> litellm.types.caching",shape="record"];
	"litellm.proxy.batches_endpoints.endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.batches_endpoints.endpoints",shape="record"];
	"litellm.proxy.batches_endpoints" [label="<f0> NamespacePackage| <f1> litellm.proxy.batches_endpoints",shape="record"];
	"litellm.batches.main" [label="<f0> SourceModule| <f1> litellm.batches.main",shape="record"];
	"litellm.batches" [label="<f0> NamespacePackage| <f1> litellm.batches",shape="record"];
	"litellm.llms.vertex_ai.batches.handler" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.batches.handler",shape="record"];
	"litellm.llms.vertex_ai.batches" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.batches",shape="record"];
	"litellm.llms.vertex_ai.batches.transformation" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.batches.transformation",shape="record"];
	"litellm.llms.azure.batches.handler" [label="<f0> SourceModule| <f1> litellm.llms.azure.batches.handler",shape="record"];
	"litellm.llms.azure.batches" [label="<f0> NamespacePackage| <f1> litellm.llms.azure.batches",shape="record"];
	"litellm.proxy.auth.user_api_key_auth" [label="<f0> SourceModule| <f1> litellm.proxy.auth.user_api_key_auth",shape="record"];
	"litellm.proxy.auth.oauth2_proxy_hook" [label="<f0> SourceModule| <f1> litellm.proxy.auth.oauth2_proxy_hook",shape="record"];
	"litellm.proxy.auth.oauth2_check" [label="<f0> SourceModule| <f1> litellm.proxy.auth.oauth2_check",shape="record"];
	"litellm.proxy.auth.auth_exception_handler" [label="<f0> SourceModule| <f1> litellm.proxy.auth.auth_exception_handler",shape="record"];
	"litellm.proxy.auth.model_checks" [label="<f0> SourceModule| <f1> litellm.proxy.auth.model_checks",shape="record"];
	"litellm.proxy.auth.litellm_license" [label="<f0> SourceModule| <f1> litellm.proxy.auth.litellm_license",shape="record"];
	"litellm.proxy.auth.handle_jwt" [label="<f0> SourceModule| <f1> litellm.proxy.auth.handle_jwt",shape="record"];
	"'jwt.algorithms'" [label="<f0> MissingModule| <f1> 'jwt.algorithms'",shape="record"];
	"litellm.litellm_core_utils.dot_notation_indexing" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.dot_notation_indexing",shape="record"];
	"litellm.proxy.auth.auth_utils" [label="<f0> SourceModule| <f1> litellm.proxy.auth.auth_utils",shape="record"];
	"litellm.proxy.auth.auth_checks" [label="<f0> SourceModule| <f1> litellm.proxy.auth.auth_checks",shape="record"];
	"litellm.proxy.anthropic_endpoints.endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.anthropic_endpoints.endpoints",shape="record"];
	"litellm.proxy.anthropic_endpoints" [label="<f0> NamespacePackage| <f1> litellm.proxy.anthropic_endpoints",shape="record"];
	"litellm.proxy.analytics_endpoints.analytics_endpoints" [label="<f0> SourceModule| <f1> litellm.proxy.analytics_endpoints.analytics_endpoints",shape="record"];
	"litellm.proxy.analytics_endpoints" [label="<f0> NamespacePackage| <f1> litellm.proxy.analytics_endpoints",shape="record"];
	"litellm.proxy._experimental.mcp_server.tool_registry" [label="<f0> SourceModule| <f1> litellm.proxy._experimental.mcp_server.tool_registry",shape="record"];
	"litellm.types.mcp_server.tool_registry" [label="<f0> SourceModule| <f1> litellm.types.mcp_server.tool_registry",shape="record"];
	"litellm.proxy._experimental.mcp_server.server" [label="<f0> SourceModule| <f1> litellm.proxy._experimental.mcp_server.server",shape="record"];
	"litellm.proxy._experimental.mcp_server.sse_transport" [label="<f0> SourceModule| <f1> litellm.proxy._experimental.mcp_server.sse_transport",shape="record"];
	"'starlette.types'" [label="<f0> MissingModule| <f1> 'starlette.types'",shape="record"];
	"sse_starlette" [label="<f0> MissingModule| <f1> sse_starlette",shape="record"];
	"'fastapi.requests'" [label="<f0> MissingModule| <f1> 'fastapi.requests'",shape="record"];
	"'mcp.server'" [label="<f0> MissingModule| <f1> 'mcp.server'",shape="record"];
	"litellm.litellm_core_utils.sensitive_data_masker" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.sensitive_data_masker",shape="record"];
	"litellm.integrations.SlackAlerting.slack_alerting" [label="<f0> SourceModule| <f1> litellm.integrations.SlackAlerting.slack_alerting",shape="record"];
	"litellm.integrations.email_alerting" [label="<f0> SourceModule| <f1> litellm.integrations.email_alerting",shape="record"];
	"litellm.integrations.SlackAlerting.batching_handler" [label="<f0> SourceModule| <f1> litellm.integrations.SlackAlerting.batching_handler",shape="record"];
	"litellm.integrations.email_templates.templates" [label="<f0> SourceModule| <f1> litellm.integrations.email_templates.templates",shape="record"];
	"litellm.integrations.email_templates" [label="<f0> NamespacePackage| <f1> litellm.integrations.email_templates",shape="record"];
	"litellm.integrations.SlackAlerting.budget_alert_types" [label="<f0> SourceModule| <f1> litellm.integrations.SlackAlerting.budget_alert_types",shape="record"];
	"litellm.proxy" [label="<f0> Package| <f1> litellm.proxy",shape="record"];
	"apscheduler" [label="<f0> MissingModule| <f1> apscheduler",shape="record"];
	"backoff" [label="<f0> Package| <f1> backoff",shape="record"];
	"backoff._wait_gen" [label="<f0> SourceModule| <f1> backoff._wait_gen",shape="record"];
	"backoff._jitter" [label="<f0> SourceModule| <f1> backoff._jitter",shape="record"];
	"backoff._decorator" [label="<f0> SourceModule| <f1> backoff._decorator",shape="record"];
	"backoff._typing" [label="<f0> SourceModule| <f1> backoff._typing",shape="record"];
	"backoff._common" [label="<f0> SourceModule| <f1> backoff._common",shape="record"];
	"backoff._sync" [label="<f0> SourceModule| <f1> backoff._sync",shape="record"];
	"backoff._async" [label="<f0> SourceModule| <f1> backoff._async",shape="record"];
	"litellm.integrations.opentelemetry" [label="<f0> SourceModule| <f1> litellm.integrations.opentelemetry",shape="record"];
	"'opentelemetry.exporter'" [label="<f0> MissingModule| <f1> 'opentelemetry.exporter'",shape="record"];
	"litellm.integrations.langtrace" [label="<f0> SourceModule| <f1> litellm.integrations.langtrace",shape="record"];
	"litellm.integrations.arize.arize_phoenix" [label="<f0> SourceModule| <f1> litellm.integrations.arize.arize_phoenix",shape="record"];
	"litellm.integrations.arize.opentelemetry" [label="<f0> MissingModule| <f1> litellm.integrations.arize.opentelemetry",shape="record"];
	"litellm.types.integrations.arize" [label="<f0> SourceModule| <f1> litellm.types.integrations.arize",shape="record"];
	"litellm.types.integrations.arize_phoenix" [label="<f0> SourceModule| <f1> litellm.types.integrations.arize_phoenix",shape="record"];
	"litellm.integrations.arize._utils" [label="<f0> SourceModule| <f1> litellm.integrations.arize._utils",shape="record"];
	"litellm.integrations._types.open_inference" [label="<f0> SourceModule| <f1> litellm.integrations._types.open_inference",shape="record"];
	"litellm.integrations._types" [label="<f0> NamespacePackage| <f1> litellm.integrations._types",shape="record"];
	"litellm.integrations.arize" [label="<f0> NamespacePackage| <f1> litellm.integrations.arize",shape="record"];
	"opentelemetry" [label="<f0> MissingModule| <f1> opentelemetry",shape="record"];
	"'opentelemetry.sdk'" [label="<f0> MissingModule| <f1> 'opentelemetry.sdk'",shape="record"];
	"'redisvl.utils'" [label="<f0> MissingModule| <f1> 'redisvl.utils'",shape="record"];
	"redisvl" [label="<f0> MissingModule| <f1> redisvl",shape="record"];
	"litellm.litellm_core_utils.prompt_templates.common_utils" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.prompt_templates.common_utils",shape="record"];
	"litellm.caching.redis_cluster_cache" [label="<f0> SourceModule| <f1> litellm.caching.redis_cluster_cache",shape="record"];
	"litellm._redis" [label="<f0> SourceModule| <f1> litellm._redis",shape="record"];
	"'redis.cluster'" [label="<f0> MissingModule| <f1> 'redis.cluster'",shape="record"];
	"redis" [label="<f0> MissingModule| <f1> redis",shape="record"];
	"'redis.asyncio'" [label="<f0> MissingModule| <f1> 'redis.asyncio'",shape="record"];
	"litellm.caching.redis_cache" [label="<f0> SourceModule| <f1> litellm.caching.redis_cache",shape="record"];
	"litellm.caching.qdrant_semantic_cache" [label="<f0> SourceModule| <f1> litellm.caching.qdrant_semantic_cache",shape="record"];
	"litellm.caching.dual_cache" [label="<f0> SourceModule| <f1> litellm.caching.dual_cache",shape="record"];
	"litellm.caching.disk_cache" [label="<f0> SourceModule| <f1> litellm.caching.disk_cache",shape="record"];
	"diskcache" [label="<f0> Package| <f1> diskcache",shape="record"];
	"diskcache.djangocache" [label="<f0> SourceModule| <f1> diskcache.djangocache",shape="record"];
	"'django.core'" [label="<f0> MissingModule| <f1> 'django.core'",shape="record"];
	"django" [label="<f0> MissingModule| <f1> django",shape="record"];
	"diskcache.recipes" [label="<f0> SourceModule| <f1> diskcache.recipes",shape="record"];
	"diskcache.persistent" [label="<f0> SourceModule| <f1> diskcache.persistent",shape="record"];
	"diskcache.fanout" [label="<f0> SourceModule| <f1> diskcache.fanout",shape="record"];
	"diskcache.core" [label="<f0> SourceModule| <f1> diskcache.core",shape="record"];
	"enterprise" [label="<f0> MissingModule| <f1> enterprise",shape="record"];
	"litellm.llms.vertex_ai.gemini.vertex_and_google_ai_studio_gemini" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.gemini.vertex_and_google_ai_studio_gemini",shape="record"];
	"litellm.llms.vertex_ai.gemini" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.gemini",shape="record"];
	"litellm.llms.vertex_ai.gemini.transformation" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.gemini.transformation",shape="record"];
	"litellm.llms.vertex_ai.context_caching.vertex_ai_context_caching" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.context_caching.vertex_ai_context_caching",shape="record"];
	"litellm.llms.vertex_ai.context_caching" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.context_caching",shape="record"];
	"litellm.llms.vertex_ai.context_caching.transformation" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.context_caching.transformation",shape="record"];
	"litellm.types.files" [label="<f0> SourceModule| <f1> litellm.types.files",shape="record"];
	"litellm.llms.azure.image_generation" [label="<f0> Package| <f1> litellm.llms.azure.image_generation",shape="record"];
	"litellm.llms.azure.image_generation.gpt_transformation" [label="<f0> SourceModule| <f1> litellm.llms.azure.image_generation.gpt_transformation",shape="record"];
	"litellm.llms.azure.image_generation.dall_e_3_transformation" [label="<f0> SourceModule| <f1> litellm.llms.azure.image_generation.dall_e_3_transformation",shape="record"];
	"litellm.llms.azure.image_generation.dall_e_2_transformation" [label="<f0> SourceModule| <f1> litellm.llms.azure.image_generation.dall_e_2_transformation",shape="record"];
	"litellm.llms.openai.image_generation" [label="<f0> Package| <f1> litellm.llms.openai.image_generation",shape="record"];
	"litellm.llms.openai.image_generation.gpt_transformation" [label="<f0> SourceModule| <f1> litellm.llms.openai.image_generation.gpt_transformation",shape="record"];
	"litellm.llms.openai.image_generation.dall_e_3_transformation" [label="<f0> SourceModule| <f1> litellm.llms.openai.image_generation.dall_e_3_transformation",shape="record"];
	"litellm.llms.openai.image_generation.dall_e_2_transformation" [label="<f0> SourceModule| <f1> litellm.llms.openai.image_generation.dall_e_2_transformation",shape="record"];
	"litellm.integrations.vector_stores.bedrock_vector_store" [label="<f0> SourceModule| <f1> litellm.integrations.vector_stores.bedrock_vector_store",shape="record"];
	"litellm.integrations.vector_stores" [label="<f0> NamespacePackage| <f1> litellm.integrations.vector_stores",shape="record"];
	"litellm.types.integrations.rag.bedrock_knowledgebase" [label="<f0> SourceModule| <f1> litellm.types.integrations.rag.bedrock_knowledgebase",shape="record"];
	"litellm.types.integrations.rag" [label="<f0> NamespacePackage| <f1> litellm.types.integrations.rag",shape="record"];
	"litellm.llms.vertex_ai.files.transformation" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.files.transformation",shape="record"];
	"litellm.llms.vertex_ai.files" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.files",shape="record"];
	"litellm.llms.gemini.files.transformation" [label="<f0> SourceModule| <f1> litellm.llms.gemini.files.transformation",shape="record"];
	"litellm.llms.gemini.files" [label="<f0> NamespacePackage| <f1> litellm.llms.gemini.files",shape="record"];
	"litellm.llms.vllm.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.vllm.common_utils",shape="record"];
	"litellm.llms.cohere.embed.transformation" [label="<f0> SourceModule| <f1> litellm.llms.cohere.embed.transformation",shape="record"];
	"litellm.caching.in_memory_cache" [label="<f0> SourceModule| <f1> litellm.caching.in_memory_cache",shape="record"];
	"anthropic" [label="<f0> MissingModule| <f1> anthropic",shape="record"];
	"'numpydoc.docscrape'" [label="<f0> MissingModule| <f1> 'numpydoc.docscrape'",shape="record"];
	"litellm.litellm_core_utils.litellm_logging" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.litellm_logging",shape="record"];
	"litellm.proxy.hooks.dynamic_rate_limiter" [label="<f0> SourceModule| <f1> litellm.proxy.hooks.dynamic_rate_limiter",shape="record"];
	"slack_bolt" [label="<f0> MissingModule| <f1> slack_bolt",shape="record"];
	"posthog" [label="<f0> MissingModule| <f1> posthog",shape="record"];
	"sentry_sdk" [label="<f0> MissingModule| <f1> sentry_sdk",shape="record"];
	"'litellm_enterprise.litellm_core_utils'" [label="<f0> MissingModule| <f1> 'litellm_enterprise.litellm_core_utils'",shape="record"];
	"litellm.litellm_core_utils.specialty_caches.dynamic_logging_cache" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.specialty_caches.dynamic_logging_cache",shape="record"];
	"litellm.litellm_core_utils.specialty_caches" [label="<f0> NamespacePackage| <f1> litellm.litellm_core_utils.specialty_caches",shape="record"];
	"litellm.litellm_core_utils.initialize_dynamic_callback_params" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.initialize_dynamic_callback_params",shape="record"];
	"litellm.integrations.weights_biases" [label="<f0> SourceModule| <f1> litellm.integrations.weights_biases",shape="record"];
	"wandb" [label="<f0> MissingModule| <f1> wandb",shape="record"];
	"litellm.integrations.traceloop" [label="<f0> SourceModule| <f1> litellm.integrations.traceloop",shape="record"];
	"'opentelemetry.semconv'" [label="<f0> MissingModule| <f1> 'opentelemetry.semconv'",shape="record"];
	"'traceloop.sdk'" [label="<f0> MissingModule| <f1> 'traceloop.sdk'",shape="record"];
	"traceloop" [label="<f0> MissingModule| <f1> traceloop",shape="record"];
	"litellm.integrations.supabase" [label="<f0> SourceModule| <f1> litellm.integrations.supabase",shape="record"];
	"supabase" [label="<f0> MissingModule| <f1> supabase",shape="record"];
	"litellm.integrations.s3" [label="<f0> SourceModule| <f1> litellm.integrations.s3",shape="record"];
	"litellm.integrations.prompt_layer" [label="<f0> SourceModule| <f1> litellm.integrations.prompt_layer",shape="record"];
	"litellm.integrations.opik.opik" [label="<f0> SourceModule| <f1> litellm.integrations.opik.opik",shape="record"];
	"litellm.integrations.opik" [label="<f0> NamespacePackage| <f1> litellm.integrations.opik",shape="record"];
	"litellm.integrations.opik.utils" [label="<f0> SourceModule| <f1> litellm.integrations.opik.utils",shape="record"];
	"litellm.integrations.openmeter" [label="<f0> SourceModule| <f1> litellm.integrations.openmeter",shape="record"];
	"litellm.integrations.lunary" [label="<f0> SourceModule| <f1> litellm.integrations.lunary",shape="record"];
	"lunary" [label="<f0> MissingModule| <f1> lunary",shape="record"];
	"litellm.integrations.logfire_logger" [label="<f0> SourceModule| <f1> litellm.integrations.logfire_logger",shape="record"];
	"logfire" [label="<f0> MissingModule| <f1> logfire",shape="record"];
	"litellm.integrations.literal_ai" [label="<f0> SourceModule| <f1> litellm.integrations.literal_ai",shape="record"];
	"litellm.integrations.langsmith" [label="<f0> SourceModule| <f1> litellm.integrations.langsmith",shape="record"];
	"litellm.types.integrations.langsmith" [label="<f0> SourceModule| <f1> litellm.types.integrations.langsmith",shape="record"];
	"litellm.integrations.langfuse.langfuse_prompt_management" [label="<f0> SourceModule| <f1> litellm.integrations.langfuse.langfuse_prompt_management",shape="record"];
	"'langfuse.client'" [label="<f0> MissingModule| <f1> 'langfuse.client'",shape="record"];
	"litellm.integrations.prompt_management_base" [label="<f0> SourceModule| <f1> litellm.integrations.prompt_management_base",shape="record"];
	"litellm.integrations.langfuse.langfuse_handler" [label="<f0> SourceModule| <f1> litellm.integrations.langfuse.langfuse_handler",shape="record"];
	"litellm.integrations.lago" [label="<f0> SourceModule| <f1> litellm.integrations.lago",shape="record"];
	"litellm.integrations.humanloop" [label="<f0> SourceModule| <f1> litellm.integrations.humanloop",shape="record"];
	"litellm.integrations.helicone" [label="<f0> SourceModule| <f1> litellm.integrations.helicone",shape="record"];
	"litellm.integrations.greenscale" [label="<f0> SourceModule| <f1> litellm.integrations.greenscale",shape="record"];
	"litellm.integrations.gcs_pubsub.pub_sub" [label="<f0> SourceModule| <f1> litellm.integrations.gcs_pubsub.pub_sub",shape="record"];
	"litellm.integrations.gcs_pubsub" [label="<f0> NamespacePackage| <f1> litellm.integrations.gcs_pubsub",shape="record"];
	"litellm.integrations.galileo" [label="<f0> SourceModule| <f1> litellm.integrations.galileo",shape="record"];
	"litellm.integrations.dynamodb" [label="<f0> SourceModule| <f1> litellm.integrations.dynamodb",shape="record"];
	"litellm.integrations.datadog.datadog_llm_obs" [label="<f0> SourceModule| <f1> litellm.integrations.datadog.datadog_llm_obs",shape="record"];
	"litellm.types.integrations.datadog_llm_obs" [label="<f0> SourceModule| <f1> litellm.types.integrations.datadog_llm_obs",shape="record"];
	"litellm.integrations.custom_prompt_management" [label="<f0> SourceModule| <f1> litellm.integrations.custom_prompt_management",shape="record"];
	"litellm.integrations.braintrust_logging" [label="<f0> SourceModule| <f1> litellm.integrations.braintrust_logging",shape="record"];
	"litellm.integrations.azure_storage.azure_storage" [label="<f0> SourceModule| <f1> litellm.integrations.azure_storage.azure_storage",shape="record"];
	"litellm.integrations.azure_storage" [label="<f0> NamespacePackage| <f1> litellm.integrations.azure_storage",shape="record"];
	"'azure.storage'" [label="<f0> MissingModule| <f1> 'azure.storage'",shape="record"];
	"litellm.integrations.athina" [label="<f0> SourceModule| <f1> litellm.integrations.athina",shape="record"];
	"litellm.integrations.argilla" [label="<f0> SourceModule| <f1> litellm.integrations.argilla",shape="record"];
	"litellm.types.integrations.argilla" [label="<f0> SourceModule| <f1> litellm.types.integrations.argilla",shape="record"];
	"litellm.litellm_core_utils.model_param_helper" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.model_param_helper",shape="record"];
	"litellm.integrations.mlflow" [label="<f0> SourceModule| <f1> litellm.integrations.mlflow",shape="record"];
	"mlflow" [label="<f0> MissingModule| <f1> mlflow",shape="record"];
	"'mlflow.tracing'" [label="<f0> MissingModule| <f1> 'mlflow.tracing'",shape="record"];
	"'mlflow.entities'" [label="<f0> MissingModule| <f1> 'mlflow.entities'",shape="record"];
	"'mlflow.tracking'" [label="<f0> MissingModule| <f1> 'mlflow.tracking'",shape="record"];
	"litellm.integrations.arize.arize" [label="<f0> SourceModule| <f1> litellm.integrations.arize.arize",shape="record"];
	"litellm.integrations.anthropic_cache_control_hook" [label="<f0> SourceModule| <f1> litellm.integrations.anthropic_cache_control_hook",shape="record"];
	"litellm.types.integrations.anthropic_cache_control_hook" [label="<f0> SourceModule| <f1> litellm.types.integrations.anthropic_cache_control_hook",shape="record"];
	"litellm.integrations.agentops" [label="<f0> Package| <f1> litellm.integrations.agentops",shape="record"];
	"litellm.integrations.agentops.agentops" [label="<f0> SourceModule| <f1> litellm.integrations.agentops.agentops",shape="record"];
	"litellm.batches.batch_utils" [label="<f0> SourceModule| <f1> litellm.batches.batch_utils",shape="record"];
	"litellm.files.main" [label="<f0> SourceModule| <f1> litellm.files.main",shape="record"];
	"litellm.files" [label="<f0> NamespacePackage| <f1> litellm.files",shape="record"];
	"litellm.llms.vertex_ai.files.handler" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.files.handler",shape="record"];
	"litellm.llms.azure.files.handler" [label="<f0> SourceModule| <f1> litellm.llms.azure.files.handler",shape="record"];
	"litellm.llms.azure.files" [label="<f0> NamespacePackage| <f1> litellm.llms.azure.files",shape="record"];
	"litellm.types.router" [label="<f0> SourceModule| <f1> litellm.types.router",shape="record"];
	"litellm.types.embedding" [label="<f0> SourceModule| <f1> litellm.types.embedding",shape="record"];
	"litellm.types.completion" [label="<f0> SourceModule| <f1> litellm.types.completion",shape="record"];
	"litellm.proxy._types" [label="<f0> SourceModule| <f1> litellm.proxy._types",shape="record"];
	"litellm.exceptions" [label="<f0> SourceModule| <f1> litellm.exceptions",shape="record"];
	"litellm._logging" [label="<f0> SourceModule| <f1> litellm._logging",shape="record"];
	"litellm.llms.base_llm.responses.transformation" [label="<f0> SourceModule| <f1> litellm.llms.base_llm.responses.transformation",shape="record"];
	"litellm.llms.base_llm.responses" [label="<f0> NamespacePackage| <f1> litellm.llms.base_llm.responses",shape="record"];
	"litellm.llms.base_llm.rerank.transformation" [label="<f0> SourceModule| <f1> litellm.llms.base_llm.rerank.transformation",shape="record"];
	"litellm.llms.base_llm.rerank" [label="<f0> NamespacePackage| <f1> litellm.llms.base_llm.rerank",shape="record"];
	"litellm.llms.base_llm.realtime.transformation" [label="<f0> SourceModule| <f1> litellm.llms.base_llm.realtime.transformation",shape="record"];
	"litellm.llms.base_llm.realtime" [label="<f0> NamespacePackage| <f1> litellm.llms.base_llm.realtime",shape="record"];
	"litellm.llms.base_llm.image_variations.transformation" [label="<f0> SourceModule| <f1> litellm.llms.base_llm.image_variations.transformation",shape="record"];
	"litellm.llms.base_llm.image_variations" [label="<f0> NamespacePackage| <f1> litellm.llms.base_llm.image_variations",shape="record"];
	"litellm.llms.base_llm.image_generation.transformation" [label="<f0> SourceModule| <f1> litellm.llms.base_llm.image_generation.transformation",shape="record"];
	"litellm.llms.base_llm.image_generation" [label="<f0> NamespacePackage| <f1> litellm.llms.base_llm.image_generation",shape="record"];
	"litellm.llms.base_llm.files.transformation" [label="<f0> SourceModule| <f1> litellm.llms.base_llm.files.transformation",shape="record"];
	"litellm.llms.base_llm.files" [label="<f0> NamespacePackage| <f1> litellm.llms.base_llm.files",shape="record"];
	"litellm.llms.base_llm.embedding.transformation" [label="<f0> SourceModule| <f1> litellm.llms.base_llm.embedding.transformation",shape="record"];
	"litellm.llms.base_llm.embedding" [label="<f0> NamespacePackage| <f1> litellm.llms.base_llm.embedding",shape="record"];
	"litellm.llms.base_llm.completion.transformation" [label="<f0> SourceModule| <f1> litellm.llms.base_llm.completion.transformation",shape="record"];
	"litellm.llms.base_llm.completion" [label="<f0> NamespacePackage| <f1> litellm.llms.base_llm.completion",shape="record"];
	"litellm.llms.base_llm.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.base_llm.chat.transformation",shape="record"];
	"litellm.llms.base_llm.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.base_llm.chat",shape="record"];
	"litellm.llms.base_llm.base_utils" [label="<f0> SourceModule| <f1> litellm.llms.base_llm.base_utils",shape="record"];
	"litellm.llms.base_llm.audio_transcription.transformation" [label="<f0> SourceModule| <f1> litellm.llms.base_llm.audio_transcription.transformation",shape="record"];
	"litellm.llms.base_llm.audio_transcription" [label="<f0> NamespacePackage| <f1> litellm.llms.base_llm.audio_transcription",shape="record"];
	"litellm.llms.base_llm.anthropic_messages.transformation" [label="<f0> SourceModule| <f1> litellm.llms.base_llm.anthropic_messages.transformation",shape="record"];
	"litellm.llms.base_llm.anthropic_messages" [label="<f0> NamespacePackage| <f1> litellm.llms.base_llm.anthropic_messages",shape="record"];
	"litellm.litellm_core_utils.thread_pool_executor" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.thread_pool_executor",shape="record"];
	"litellm.types.utils" [label="<f0> SourceModule| <f1> litellm.types.utils",shape="record"];
	"litellm.types.rerank" [label="<f0> SourceModule| <f1> litellm.types.rerank",shape="record"];
	"litellm.types.llms.openai" [label="<f0> SourceModule| <f1> litellm.types.llms.openai",shape="record"];
	"litellm.types.llms.anthropic" [label="<f0> SourceModule| <f1> litellm.types.llms.anthropic",shape="record"];
	"litellm.secret_managers.main" [label="<f0> SourceModule| <f1> litellm.secret_managers.main",shape="record"];
	"litellm.router_utils.get_retry_from_policy" [label="<f0> SourceModule| <f1> litellm.router_utils.get_retry_from_policy",shape="record"];
	"litellm.llms.custom_httpx.http_handler" [label="<f0> SourceModule| <f1> litellm.llms.custom_httpx.http_handler",shape="record"];
	"litellm.llms.bedrock.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.common_utils",shape="record"];
	"litellm.litellm_core_utils.token_counter" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.token_counter",shape="record"];
	"litellm.litellm_core_utils.streaming_handler" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.streaming_handler",shape="record"];
	"litellm.litellm_core_utils.rules" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.rules",shape="record"];
	"litellm.litellm_core_utils.redact_messages" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.redact_messages",shape="record"];
	"litellm.litellm_core_utils.llm_response_utils.response_metadata" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.llm_response_utils.response_metadata",shape="record"];
	"litellm.litellm_core_utils.llm_response_utils" [label="<f0> NamespacePackage| <f1> litellm.litellm_core_utils.llm_response_utils",shape="record"];
	"litellm.litellm_core_utils.llm_response_utils.get_headers" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.llm_response_utils.get_headers",shape="record"];
	"litellm.litellm_core_utils.llm_response_utils.get_formatted_prompt" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.llm_response_utils.get_formatted_prompt",shape="record"];
	"litellm.litellm_core_utils.llm_response_utils.get_api_base" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.llm_response_utils.get_api_base",shape="record"];
	"litellm.litellm_core_utils.llm_response_utils.convert_dict_to_response" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.llm_response_utils.convert_dict_to_response",shape="record"];
	"litellm.types.llms.databricks" [label="<f0> SourceModule| <f1> litellm.types.llms.databricks",shape="record"];
	"litellm.litellm_core_utils.llm_request_utils" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.llm_request_utils",shape="record"];
	"litellm.litellm_core_utils.get_supported_openai_params" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.get_supported_openai_params",shape="record"];
	"litellm.litellm_core_utils.get_llm_provider_logic" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.get_llm_provider_logic",shape="record"];
	"litellm.litellm_core_utils.get_litellm_params" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.get_litellm_params",shape="record"];
	"litellm.litellm_core_utils.exception_mapping_utils" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.exception_mapping_utils",shape="record"];
	"litellm.litellm_core_utils.default_encoding" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.default_encoding",shape="record"];
	"litellm.litellm_core_utils.credential_accessor" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.credential_accessor",shape="record"];
	"litellm.litellm_core_utils.core_helpers" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.core_helpers",shape="record"];
	"litellm.integrations.vector_stores.base_vector_store" [label="<f0> SourceModule| <f1> litellm.integrations.vector_stores.base_vector_store",shape="record"];
	"litellm.integrations.custom_logger" [label="<f0> SourceModule| <f1> litellm.integrations.custom_logger",shape="record"];
	"litellm.integrations.custom_guardrail" [label="<f0> SourceModule| <f1> litellm.integrations.custom_guardrail",shape="record"];
	"litellm.constants" [label="<f0> SourceModule| <f1> litellm.constants",shape="record"];
	"litellm.caching.caching_handler" [label="<f0> SourceModule| <f1> litellm.caching.caching_handler",shape="record"];
	"litellm.caching.caching" [label="<f0> SourceModule| <f1> litellm.caching.caching",shape="record"];
	"litellm.caching._internal_lru_cache" [label="<f0> SourceModule| <f1> litellm.caching._internal_lru_cache",shape="record"];
	"litellm.llms.gemini" [label="<f0> NamespacePackage| <f1> litellm.llms.gemini",shape="record"];
	"litellm.llms" [label="<f0> Package| <f1> litellm.llms",shape="record"];
	"litellm.litellm_core_utils.json_validation_rule" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.json_validation_rule",shape="record"];
	"litellm.litellm_core_utils.audio_utils.utils" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.audio_utils.utils",shape="record"];
	"litellm.litellm_core_utils.audio_utils" [label="<f0> NamespacePackage| <f1> litellm.litellm_core_utils.audio_utils",shape="record"];
	"litellm.litellm_core_utils" [label="<f0> NamespacePackage| <f1> litellm.litellm_core_utils",shape="record"];
	"litellm._service_logger" [label="<f0> SourceModule| <f1> litellm._service_logger",shape="record"];
	"litellm.integrations.prometheus_services" [label="<f0> SourceModule| <f1> litellm.integrations.prometheus_services",shape="record"];
	"litellm" [label="<f0> Package| <f1> litellm",shape="record"];
	"litellm.types.llms.custom_llm" [label="<f0> SourceModule| <f1> litellm.types.llms.custom_llm",shape="record"];
	"litellm.anthropic_interface" [label="<f0> Package| <f1> litellm.anthropic_interface",shape="record"];
	"litellm.anthropic_interface.messages" [label="<f0> Package| <f1> litellm.anthropic_interface.messages",shape="record"];
	"litellm.types.adapter" [label="<f0> SourceModule| <f1> litellm.types.adapter",shape="record"];
	"litellm.fine_tuning.main" [label="<f0> SourceModule| <f1> litellm.fine_tuning.main",shape="record"];
	"litellm.fine_tuning" [label="<f0> NamespacePackage| <f1> litellm.fine_tuning",shape="record"];
	"litellm.llms.vertex_ai.fine_tuning.handler" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.fine_tuning.handler",shape="record"];
	"litellm.llms.vertex_ai.fine_tuning" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.fine_tuning",shape="record"];
	"litellm.types.fine_tuning" [label="<f0> SourceModule| <f1> litellm.types.fine_tuning",shape="record"];
	"litellm.llms.openai.fine_tuning.handler" [label="<f0> SourceModule| <f1> litellm.llms.openai.fine_tuning.handler",shape="record"];
	"litellm.llms.openai.fine_tuning" [label="<f0> NamespacePackage| <f1> litellm.llms.openai.fine_tuning",shape="record"];
	"litellm.llms.azure.fine_tuning.handler" [label="<f0> SourceModule| <f1> litellm.llms.azure.fine_tuning.handler",shape="record"];
	"litellm.llms.azure.fine_tuning" [label="<f0> NamespacePackage| <f1> litellm.llms.azure.fine_tuning",shape="record"];
	"litellm.responses.main" [label="<f0> SourceModule| <f1> litellm.responses.main",shape="record"];
	"litellm.responses.litellm_completion_transformation.handler" [label="<f0> SourceModule| <f1> litellm.responses.litellm_completion_transformation.handler",shape="record"];
	"litellm.responses.litellm_completion_transformation.streaming_iterator" [label="<f0> SourceModule| <f1> litellm.responses.litellm_completion_transformation.streaming_iterator",shape="record"];
	"litellm.llms.anthropic.experimental_pass_through.messages.handler" [label="<f0> SourceModule| <f1> litellm.llms.anthropic.experimental_pass_through.messages.handler",shape="record"];
	"litellm.llms.anthropic.experimental_pass_through.messages" [label="<f0> NamespacePackage| <f1> litellm.llms.anthropic.experimental_pass_through.messages",shape="record"];
	"litellm.llms.anthropic.experimental_pass_through" [label="<f0> NamespacePackage| <f1> litellm.llms.anthropic.experimental_pass_through",shape="record"];
	"litellm.llms.anthropic.experimental_pass_through.messages.utils" [label="<f0> SourceModule| <f1> litellm.llms.anthropic.experimental_pass_through.messages.utils",shape="record"];
	"litellm.rerank_api.main" [label="<f0> SourceModule| <f1> litellm.rerank_api.main",shape="record"];
	"litellm.rerank_api" [label="<f0> NamespacePackage| <f1> litellm.rerank_api",shape="record"];
	"litellm.rerank_api.rerank_utils" [label="<f0> SourceModule| <f1> litellm.rerank_api.rerank_utils",shape="record"];
	"litellm.llms.together_ai.rerank.handler" [label="<f0> SourceModule| <f1> litellm.llms.together_ai.rerank.handler",shape="record"];
	"litellm.llms.together_ai.rerank" [label="<f0> NamespacePackage| <f1> litellm.llms.together_ai.rerank",shape="record"];
	"litellm.llms.together_ai.rerank.transformation" [label="<f0> SourceModule| <f1> litellm.llms.together_ai.rerank.transformation",shape="record"];
	"litellm.llms.bedrock.rerank.handler" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.rerank.handler",shape="record"];
	"litellm.llms.bedrock.rerank" [label="<f0> NamespacePackage| <f1> litellm.llms.bedrock.rerank",shape="record"];
	"litellm.llms.bedrock.rerank.transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.rerank.transformation",shape="record"];
	"litellm.batch_completion.main" [label="<f0> SourceModule| <f1> litellm.batch_completion.main",shape="record"];
	"litellm.batch_completion" [label="<f0> NamespacePackage| <f1> litellm.batch_completion",shape="record"];
	"litellm.assistants.main" [label="<f0> SourceModule| <f1> litellm.assistants.main",shape="record"];
	"litellm.assistants" [label="<f0> NamespacePackage| <f1> litellm.assistants",shape="record"];
	"litellm.assistants.utils" [label="<f0> SourceModule| <f1> litellm.assistants.utils",shape="record"];
	"litellm.llms.azure.assistants" [label="<f0> SourceModule| <f1> litellm.llms.azure.assistants",shape="record"];
	"litellm.proxy.proxy_cli" [label="<f0> SourceModule| <f1> litellm.proxy.proxy_cli",shape="record"];
	"litellm.proxy.db.check_migration" [label="<f0> SourceModule| <f1> litellm.proxy.db.check_migration",shape="record"];
	"uvicorn" [label="<f0> MissingModule| <f1> uvicorn",shape="record"];
	"proxy_server" [label="<f0> MissingModule| <f1> proxy_server",shape="record"];
	"'gunicorn.app'" [label="<f0> MissingModule| <f1> 'gunicorn.app'",shape="record"];
	"'hypercorn.config'" [label="<f0> MissingModule| <f1> 'hypercorn.config'",shape="record"];
	"hypercorn" [label="<f0> MissingModule| <f1> hypercorn",shape="record"];
	"litellm.budget_manager" [label="<f0> SourceModule| <f1> litellm.budget_manager",shape="record"];
	"litellm.llms.watsonx.embed.transformation" [label="<f0> SourceModule| <f1> litellm.llms.watsonx.embed.transformation",shape="record"];
	"litellm.llms.watsonx.embed" [label="<f0> NamespacePackage| <f1> litellm.llms.watsonx.embed",shape="record"];
	"litellm.llms.watsonx.completion.transformation" [label="<f0> SourceModule| <f1> litellm.llms.watsonx.completion.transformation",shape="record"];
	"litellm.llms.watsonx.completion" [label="<f0> NamespacePackage| <f1> litellm.llms.watsonx.completion",shape="record"];
	"litellm.llms.azure.chat.o_series_transformation" [label="<f0> SourceModule| <f1> litellm.llms.azure.chat.o_series_transformation",shape="record"];
	"litellm.llms.perplexity.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.perplexity.chat.transformation",shape="record"];
	"litellm.llms.perplexity.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.perplexity.chat",shape="record"];
	"litellm.llms.perplexity" [label="<f0> NamespacePackage| <f1> litellm.llms.perplexity",shape="record"];
	"litellm.llms.nscale.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.nscale.chat.transformation",shape="record"];
	"litellm.llms.nscale.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.nscale.chat",shape="record"];
	"litellm.llms.nscale" [label="<f0> NamespacePackage| <f1> litellm.llms.nscale",shape="record"];
	"litellm.llms.lm_studio.embed.transformation" [label="<f0> SourceModule| <f1> litellm.llms.lm_studio.embed.transformation",shape="record"];
	"litellm.llms.lm_studio.embed" [label="<f0> NamespacePackage| <f1> litellm.llms.lm_studio.embed",shape="record"];
	"litellm.llms.lm_studio" [label="<f0> NamespacePackage| <f1> litellm.llms.lm_studio",shape="record"];
	"litellm.llms.lm_studio.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.lm_studio.chat.transformation",shape="record"];
	"litellm.llms.lm_studio.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.lm_studio.chat",shape="record"];
	"litellm.llms.deepseek.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.deepseek.chat.transformation",shape="record"];
	"litellm.llms.deepseek.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.deepseek.chat",shape="record"];
	"litellm.llms.vllm.completion.transformation" [label="<f0> SourceModule| <f1> litellm.llms.vllm.completion.transformation",shape="record"];
	"litellm.llms.litellm_proxy.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.litellm_proxy.chat.transformation",shape="record"];
	"litellm.llms.litellm_proxy.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.litellm_proxy.chat",shape="record"];
	"litellm.llms.litellm_proxy" [label="<f0> NamespacePackage| <f1> litellm.llms.litellm_proxy",shape="record"];
	"litellm.llms.llamafile.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.llamafile.chat.transformation",shape="record"];
	"litellm.llms.llamafile.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.llamafile.chat",shape="record"];
	"litellm.llms.llamafile" [label="<f0> NamespacePackage| <f1> litellm.llms.llamafile",shape="record"];
	"litellm.llms.hosted_vllm.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.hosted_vllm.chat.transformation",shape="record"];
	"litellm.llms.hosted_vllm.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.hosted_vllm.chat",shape="record"];
	"litellm.llms.hosted_vllm" [label="<f0> NamespacePackage| <f1> litellm.llms.hosted_vllm",shape="record"];
	"litellm.llms.azure.completion.transformation" [label="<f0> SourceModule| <f1> litellm.llms.azure.completion.transformation",shape="record"];
	"litellm.llms.azure.chat.gpt_transformation" [label="<f0> SourceModule| <f1> litellm.llms.azure.chat.gpt_transformation",shape="record"];
	"litellm.types.llms.azure" [label="<f0> SourceModule| <f1> litellm.types.llms.azure",shape="record"];
	"litellm.llms.codestral.completion.transformation" [label="<f0> SourceModule| <f1> litellm.llms.codestral.completion.transformation",shape="record"];
	"litellm.llms.volcengine" [label="<f0> SourceModule| <f1> litellm.llms.volcengine",shape="record"];
	"litellm.llms.xai.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.xai.common_utils",shape="record"];
	"litellm.llms.xai" [label="<f0> NamespacePackage| <f1> litellm.llms.xai",shape="record"];
	"litellm.llms.xai.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.xai.chat.transformation",shape="record"];
	"litellm.llms.xai.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.xai.chat",shape="record"];
	"litellm.llms.jina_ai.embedding.transformation" [label="<f0> SourceModule| <f1> litellm.llms.jina_ai.embedding.transformation",shape="record"];
	"litellm.llms.jina_ai.embedding" [label="<f0> NamespacePackage| <f1> litellm.llms.jina_ai.embedding",shape="record"];
	"litellm.llms.jina_ai" [label="<f0> NamespacePackage| <f1> litellm.llms.jina_ai",shape="record"];
	"litellm.llms.friendliai.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.friendliai.chat.transformation",shape="record"];
	"litellm.llms.friendliai.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.friendliai.chat",shape="record"];
	"litellm.llms.friendliai" [label="<f0> NamespacePackage| <f1> litellm.llms.friendliai",shape="record"];
	"litellm.llms.fireworks_ai.embed.fireworks_ai_transformation" [label="<f0> SourceModule| <f1> litellm.llms.fireworks_ai.embed.fireworks_ai_transformation",shape="record"];
	"litellm.llms.fireworks_ai.embed" [label="<f0> NamespacePackage| <f1> litellm.llms.fireworks_ai.embed",shape="record"];
	"litellm.llms.fireworks_ai.audio_transcription.transformation" [label="<f0> SourceModule| <f1> litellm.llms.fireworks_ai.audio_transcription.transformation",shape="record"];
	"litellm.llms.fireworks_ai.audio_transcription" [label="<f0> NamespacePackage| <f1> litellm.llms.fireworks_ai.audio_transcription",shape="record"];
	"litellm.llms.fireworks_ai.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.fireworks_ai.common_utils",shape="record"];
	"litellm.llms.fireworks_ai.completion.transformation" [label="<f0> SourceModule| <f1> litellm.llms.fireworks_ai.completion.transformation",shape="record"];
	"litellm.llms.fireworks_ai.completion" [label="<f0> NamespacePackage| <f1> litellm.llms.fireworks_ai.completion",shape="record"];
	"litellm.llms.fireworks_ai.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.fireworks_ai.chat.transformation",shape="record"];
	"litellm.llms.fireworks_ai.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.fireworks_ai.chat",shape="record"];
	"litellm.llms.sambanova.chat" [label="<f0> SourceModule| <f1> litellm.llms.sambanova.chat",shape="record"];
	"litellm.llms.sambanova" [label="<f0> NamespacePackage| <f1> litellm.llms.sambanova",shape="record"];
	"litellm.llms.cerebras.chat" [label="<f0> SourceModule| <f1> litellm.llms.cerebras.chat",shape="record"];
	"litellm.llms.cerebras" [label="<f0> NamespacePackage| <f1> litellm.llms.cerebras",shape="record"];
	"litellm.llms.featherless_ai.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.featherless_ai.chat.transformation",shape="record"];
	"litellm.llms.featherless_ai.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.featherless_ai.chat",shape="record"];
	"litellm.llms.featherless_ai" [label="<f0> NamespacePackage| <f1> litellm.llms.featherless_ai",shape="record"];
	"litellm.llms.nvidia_nim.embed" [label="<f0> SourceModule| <f1> litellm.llms.nvidia_nim.embed",shape="record"];
	"litellm.llms.nvidia_nim" [label="<f0> NamespacePackage| <f1> litellm.llms.nvidia_nim",shape="record"];
	"litellm.llms.nvidia_nim.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.nvidia_nim.chat.transformation",shape="record"];
	"litellm.llms.nvidia_nim.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.nvidia_nim.chat",shape="record"];
	"litellm.llms.openai.chat.gpt_audio_transformation" [label="<f0> SourceModule| <f1> litellm.llms.openai.chat.gpt_audio_transformation",shape="record"];
	"litellm.llms.openai.transcriptions.gpt_transformation" [label="<f0> SourceModule| <f1> litellm.llms.openai.transcriptions.gpt_transformation",shape="record"];
	"litellm.llms.openai.transcriptions.whisper_transformation" [label="<f0> SourceModule| <f1> litellm.llms.openai.transcriptions.whisper_transformation",shape="record"];
	"litellm.llms.azure.responses.transformation" [label="<f0> SourceModule| <f1> litellm.llms.azure.responses.transformation",shape="record"];
	"litellm.llms.azure.responses" [label="<f0> NamespacePackage| <f1> litellm.llms.azure.responses",shape="record"];
	"litellm.llms.openai.responses.transformation" [label="<f0> SourceModule| <f1> litellm.llms.openai.responses.transformation",shape="record"];
	"litellm.llms.openai.responses" [label="<f0> NamespacePackage| <f1> litellm.llms.openai.responses",shape="record"];
	"litellm.llms.mistral.mistral_chat_transformation" [label="<f0> SourceModule| <f1> litellm.llms.mistral.mistral_chat_transformation",shape="record"];
	"litellm.llms.mistral" [label="<f0> NamespacePackage| <f1> litellm.llms.mistral",shape="record"];
	"litellm.types.llms.mistral" [label="<f0> SourceModule| <f1> litellm.types.llms.mistral",shape="record"];
	"litellm.llms.azure_ai.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.azure_ai.chat.transformation",shape="record"];
	"litellm.llms.azure_ai.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.azure_ai.chat",shape="record"];
	"litellm.llms.infinity.embedding.transformation" [label="<f0> SourceModule| <f1> litellm.llms.infinity.embedding.transformation",shape="record"];
	"litellm.llms.infinity.embedding" [label="<f0> NamespacePackage| <f1> litellm.llms.infinity.embedding",shape="record"];
	"litellm.llms.infinity" [label="<f0> NamespacePackage| <f1> litellm.llms.infinity",shape="record"];
	"litellm.llms.infinity.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.infinity.common_utils",shape="record"];
	"litellm.llms.voyage.embedding.transformation" [label="<f0> SourceModule| <f1> litellm.llms.voyage.embedding.transformation",shape="record"];
	"litellm.llms.voyage.embedding" [label="<f0> NamespacePackage| <f1> litellm.llms.voyage.embedding",shape="record"];
	"litellm.llms.voyage" [label="<f0> NamespacePackage| <f1> litellm.llms.voyage",shape="record"];
	"litellm.llms.topaz.image_variations.transformation" [label="<f0> SourceModule| <f1> litellm.llms.topaz.image_variations.transformation",shape="record"];
	"litellm.llms.topaz.image_variations" [label="<f0> NamespacePackage| <f1> litellm.llms.topaz.image_variations",shape="record"];
	"litellm.llms.topaz" [label="<f0> NamespacePackage| <f1> litellm.llms.topaz",shape="record"];
	"litellm.llms.topaz.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.topaz.common_utils",shape="record"];
	"litellm.llms.deepgram.audio_transcription.transformation" [label="<f0> SourceModule| <f1> litellm.llms.deepgram.audio_transcription.transformation",shape="record"];
	"litellm.llms.deepgram.audio_transcription" [label="<f0> NamespacePackage| <f1> litellm.llms.deepgram.audio_transcription",shape="record"];
	"litellm.llms.deepgram" [label="<f0> NamespacePackage| <f1> litellm.llms.deepgram",shape="record"];
	"litellm.llms.deepgram.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.deepgram.common_utils",shape="record"];
	"litellm.llms.deepinfra.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.deepinfra.chat.transformation",shape="record"];
	"litellm.llms.deepinfra.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.deepinfra.chat",shape="record"];
	"litellm.llms.deepinfra" [label="<f0> NamespacePackage| <f1> litellm.llms.deepinfra",shape="record"];
	"litellm.llms.openai.image_variations.transformation" [label="<f0> SourceModule| <f1> litellm.llms.openai.image_variations.transformation",shape="record"];
	"litellm.llms.cohere.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.cohere.chat.transformation",shape="record"];
	"litellm.llms.bedrock.image.amazon_nova_canvas_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.image.amazon_nova_canvas_transformation",shape="record"];
	"litellm.llms.bedrock.image.amazon_stability3_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.image.amazon_stability3_transformation",shape="record"];
	"litellm.llms.bedrock.image.amazon_stability1_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.image.amazon_stability1_transformation",shape="record"];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_titan_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.chat.invoke_transformations.amazon_titan_transformation",shape="record"];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_mistral_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.chat.invoke_transformations.amazon_mistral_transformation",shape="record"];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_cohere_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.chat.invoke_transformations.amazon_cohere_transformation",shape="record"];
	"litellm.llms.bedrock.chat.invoke_transformations.anthropic_claude3_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.chat.invoke_transformations.anthropic_claude3_transformation",shape="record"];
	"litellm.llms.bedrock.chat.invoke_transformations.anthropic_claude2_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.chat.invoke_transformations.anthropic_claude2_transformation",shape="record"];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_nova_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.chat.invoke_transformations.amazon_nova_transformation",shape="record"];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_ai21_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.chat.invoke_transformations.amazon_ai21_transformation",shape="record"];
	"litellm.llms.ollama.completion.transformation" [label="<f0> SourceModule| <f1> litellm.llms.ollama.completion.transformation",shape="record"];
	"litellm.llms.ollama.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.ollama.common_utils",shape="record"];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.ai21.transformation" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.vertex_ai_partner_models.ai21.transformation",shape="record"];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.ai21" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.vertex_ai_partner_models.ai21",shape="record"];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.llama3.transformation" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.vertex_ai_partner_models.llama3.transformation",shape="record"];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.llama3" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.vertex_ai_partner_models.llama3",shape="record"];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.anthropic.transformation" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.vertex_ai_partner_models.anthropic.transformation",shape="record"];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.anthropic" [label="<f0> NamespacePackage| <f1> litellm.llms.vertex_ai.vertex_ai_partner_models.anthropic",shape="record"];
	"litellm.llms.vertex_ai.vertex_embeddings.transformation" [label="<f0> SourceModule| <f1> litellm.llms.vertex_ai.vertex_embeddings.transformation",shape="record"];
	"litellm.llms.gemini.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.gemini.chat.transformation",shape="record"];
	"litellm.llms.gemini.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.gemini.chat",shape="record"];
	"litellm.llms.petals.completion.transformation" [label="<f0> SourceModule| <f1> litellm.llms.petals.completion.transformation",shape="record"];
	"litellm.llms.novita.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.novita.chat.transformation",shape="record"];
	"litellm.llms.novita.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.novita.chat",shape="record"];
	"litellm.llms.novita" [label="<f0> NamespacePackage| <f1> litellm.llms.novita",shape="record"];
	"litellm.llms.cloudflare.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.cloudflare.chat.transformation",shape="record"];
	"litellm.llms.cloudflare.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.cloudflare.chat",shape="record"];
	"litellm.llms.cloudflare" [label="<f0> NamespacePackage| <f1> litellm.llms.cloudflare",shape="record"];
	"litellm.llms.together_ai.completion.transformation" [label="<f0> SourceModule| <f1> litellm.llms.together_ai.completion.transformation",shape="record"];
	"litellm.llms.together_ai.completion" [label="<f0> NamespacePackage| <f1> litellm.llms.together_ai.completion",shape="record"];
	"litellm.llms.together_ai.chat" [label="<f0> SourceModule| <f1> litellm.llms.together_ai.chat",shape="record"];
	"litellm.llms.bedrock.messages.invoke_transformations.anthropic_claude3_transformation" [label="<f0> SourceModule| <f1> litellm.llms.bedrock.messages.invoke_transformations.anthropic_claude3_transformation",shape="record"];
	"litellm.llms.bedrock.messages.invoke_transformations" [label="<f0> NamespacePackage| <f1> litellm.llms.bedrock.messages.invoke_transformations",shape="record"];
	"litellm.llms.bedrock.messages" [label="<f0> NamespacePackage| <f1> litellm.llms.bedrock.messages",shape="record"];
	"litellm.llms.anthropic.experimental_pass_through.messages.transformation" [label="<f0> SourceModule| <f1> litellm.llms.anthropic.experimental_pass_through.messages.transformation",shape="record"];
	"litellm.llms.meta_llama.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.meta_llama.chat.transformation",shape="record"];
	"litellm.llms.meta_llama.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.meta_llama.chat",shape="record"];
	"litellm.llms.meta_llama" [label="<f0> NamespacePackage| <f1> litellm.llms.meta_llama",shape="record"];
	"litellm.llms.ai21.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.ai21.chat.transformation",shape="record"];
	"litellm.llms.ai21.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.ai21.chat",shape="record"];
	"litellm.llms.ai21" [label="<f0> NamespacePackage| <f1> litellm.llms.ai21",shape="record"];
	"litellm.llms.clarifai.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.clarifai.chat.transformation",shape="record"];
	"litellm.llms.clarifai.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.clarifai.chat",shape="record"];
	"litellm.llms.clarifai" [label="<f0> NamespacePackage| <f1> litellm.llms.clarifai",shape="record"];
	"litellm.llms.clarifai.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.clarifai.common_utils",shape="record"];
	"litellm.llms.jina_ai.rerank.transformation" [label="<f0> SourceModule| <f1> litellm.llms.jina_ai.rerank.transformation",shape="record"];
	"litellm.llms.jina_ai.rerank" [label="<f0> NamespacePackage| <f1> litellm.llms.jina_ai.rerank",shape="record"];
	"litellm.llms.infinity.rerank.transformation" [label="<f0> SourceModule| <f1> litellm.llms.infinity.rerank.transformation",shape="record"];
	"litellm.llms.infinity.rerank" [label="<f0> NamespacePackage| <f1> litellm.llms.infinity.rerank",shape="record"];
	"litellm.llms.azure_ai.rerank.transformation" [label="<f0> SourceModule| <f1> litellm.llms.azure_ai.rerank.transformation",shape="record"];
	"litellm.llms.azure_ai.rerank" [label="<f0> NamespacePackage| <f1> litellm.llms.azure_ai.rerank",shape="record"];
	"litellm.llms.cohere.rerank_v2.transformation" [label="<f0> SourceModule| <f1> litellm.llms.cohere.rerank_v2.transformation",shape="record"];
	"litellm.llms.cohere.rerank_v2" [label="<f0> NamespacePackage| <f1> litellm.llms.cohere.rerank_v2",shape="record"];
	"litellm.llms.cohere.rerank.transformation" [label="<f0> SourceModule| <f1> litellm.llms.cohere.rerank.transformation",shape="record"];
	"litellm.llms.cohere.rerank" [label="<f0> NamespacePackage| <f1> litellm.llms.cohere.rerank",shape="record"];
	"litellm.llms.snowflake.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.snowflake.chat.transformation",shape="record"];
	"litellm.llms.snowflake.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.snowflake.chat",shape="record"];
	"litellm.llms.snowflake" [label="<f0> NamespacePackage| <f1> litellm.llms.snowflake",shape="record"];
	"litellm.llms.cohere.completion.transformation" [label="<f0> SourceModule| <f1> litellm.llms.cohere.completion.transformation",shape="record"];
	"litellm.llms.cohere.completion" [label="<f0> NamespacePackage| <f1> litellm.llms.cohere.completion",shape="record"];
	"litellm.llms.predibase.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.predibase.chat.transformation",shape="record"];
	"litellm.llms.databricks.embed.transformation" [label="<f0> SourceModule| <f1> litellm.llms.databricks.embed.transformation",shape="record"];
	"litellm.llms.databricks.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.databricks.chat.transformation",shape="record"];
	"litellm.llms.databricks.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.databricks.chat",shape="record"];
	"litellm.llms.triton.embedding.transformation" [label="<f0> SourceModule| <f1> litellm.llms.triton.embedding.transformation",shape="record"];
	"litellm.llms.triton.embedding" [label="<f0> NamespacePackage| <f1> litellm.llms.triton.embedding",shape="record"];
	"litellm.llms.triton" [label="<f0> NamespacePackage| <f1> litellm.llms.triton",shape="record"];
	"litellm.llms.triton.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.triton.common_utils",shape="record"];
	"litellm.llms.triton.completion.transformation" [label="<f0> SourceModule| <f1> litellm.llms.triton.completion.transformation",shape="record"];
	"litellm.llms.triton.completion" [label="<f0> NamespacePackage| <f1> litellm.llms.triton.completion",shape="record"];
	"litellm.llms.anthropic.completion.transformation" [label="<f0> SourceModule| <f1> litellm.llms.anthropic.completion.transformation",shape="record"];
	"litellm.llms.anthropic.completion" [label="<f0> NamespacePackage| <f1> litellm.llms.anthropic.completion",shape="record"];
	"litellm.llms.groq.stt.transformation" [label="<f0> SourceModule| <f1> litellm.llms.groq.stt.transformation",shape="record"];
	"litellm.llms.groq.stt" [label="<f0> NamespacePackage| <f1> litellm.llms.groq.stt",shape="record"];
	"litellm.llms.openrouter.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.openrouter.chat.transformation",shape="record"];
	"litellm.llms.openrouter.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.openrouter.chat",shape="record"];
	"litellm.llms.openrouter" [label="<f0> NamespacePackage| <f1> litellm.llms.openrouter",shape="record"];
	"litellm.llms.openrouter.common_utils" [label="<f0> SourceModule| <f1> litellm.llms.openrouter.common_utils",shape="record"];
	"litellm.types.llms.openrouter" [label="<f0> SourceModule| <f1> litellm.types.llms.openrouter",shape="record"];
	"litellm.llms.huggingface.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.huggingface.chat.transformation",shape="record"];
	"litellm.llms.huggingface.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.huggingface.chat",shape="record"];
	"litellm.llms.empower.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.empower.chat.transformation",shape="record"];
	"litellm.llms.empower.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.empower.chat",shape="record"];
	"litellm.llms.empower" [label="<f0> NamespacePackage| <f1> litellm.llms.empower",shape="record"];
	"litellm.llms.github.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.github.chat.transformation",shape="record"];
	"litellm.llms.github.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.github.chat",shape="record"];
	"litellm.llms.github" [label="<f0> NamespacePackage| <f1> litellm.llms.github",shape="record"];
	"litellm.llms.galadriel.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.galadriel.chat.transformation",shape="record"];
	"litellm.llms.galadriel.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.galadriel.chat",shape="record"];
	"litellm.llms.galadriel" [label="<f0> NamespacePackage| <f1> litellm.llms.galadriel",shape="record"];
	"litellm.llms.aiohttp_openai.chat.transformation" [label="<f0> SourceModule| <f1> litellm.llms.aiohttp_openai.chat.transformation",shape="record"];
	"litellm.llms.aiohttp_openai.chat" [label="<f0> NamespacePackage| <f1> litellm.llms.aiohttp_openai.chat",shape="record"];
	"litellm.llms.aiohttp_openai" [label="<f0> NamespacePackage| <f1> litellm.llms.aiohttp_openai",shape="record"];
	"litellm.timeout" [label="<f0> SourceModule| <f1> litellm.timeout",shape="record"];
	"litellm.litellm_core_utils.get_model_cost_map" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.get_model_cost_map",shape="record"];
	"litellm.litellm_core_utils.logging_callback_manager" [label="<f0> SourceModule| <f1> litellm.litellm_core_utils.logging_callback_manager",shape="record"];
	"litellm.caching.llm_caching_handler" [label="<f0> SourceModule| <f1> litellm.caching.llm_caching_handler",shape="record"];
	"tokenizers" [label="<f0> Package| <f1> tokenizers",shape="record"];
	"tokenizers.implementations" [label="<f0> Package| <f1> tokenizers.implementations",shape="record"];
	"tokenizers.implementations.sentencepiece_unigram" [label="<f0> SourceModule| <f1> tokenizers.implementations.sentencepiece_unigram",shape="record"];
	"sentencepiece_model_pb2" [label="<f0> MissingModule| <f1> sentencepiece_model_pb2",shape="record"];
	"tokenizers.implementations.sentencepiece_bpe" [label="<f0> SourceModule| <f1> tokenizers.implementations.sentencepiece_bpe",shape="record"];
	"tokenizers.implementations.char_level_bpe" [label="<f0> SourceModule| <f1> tokenizers.implementations.char_level_bpe",shape="record"];
	"tokenizers.implementations.byte_level_bpe" [label="<f0> SourceModule| <f1> tokenizers.implementations.byte_level_bpe",shape="record"];
	"tokenizers.implementations.bert_wordpiece" [label="<f0> SourceModule| <f1> tokenizers.implementations.bert_wordpiece",shape="record"];
	"tokenizers.implementations.base_tokenizer" [label="<f0> SourceModule| <f1> tokenizers.implementations.base_tokenizer",shape="record"];
	"tokenizers.trainers" [label="<f0> Package| <f1> tokenizers.trainers",shape="record"];
	"tokenizers.processors" [label="<f0> Package| <f1> tokenizers.processors",shape="record"];
	"tokenizers.pre_tokenizers" [label="<f0> Package| <f1> tokenizers.pre_tokenizers",shape="record"];
	"tokenizers.normalizers" [label="<f0> Package| <f1> tokenizers.normalizers",shape="record"];
	"tokenizers.models" [label="<f0> Package| <f1> tokenizers.models",shape="record"];
	"tokenizers.decoders" [label="<f0> Package| <f1> tokenizers.decoders",shape="record"];
	"tokenizers.tokenizers" [label="<f0> Extension| <f1> tokenizers.tokenizers",shape="record"];
	"langchain_community.chat_models.litellm" [label="<f0> SourceModule| <f1> langchain_community.chat_models.litellm",shape="record"];
	"langchain_community.chat_models.konko" [label="<f0> SourceModule| <f1> langchain_community.chat_models.konko",shape="record"];
	"konko" [label="<f0> MissingModule| <f1> konko",shape="record"];
	"langchain_community.chat_models.kinetica" [label="<f0> SourceModule| <f1> langchain_community.chat_models.kinetica",shape="record"];
	"gpudb" [label="<f0> MissingModule| <f1> gpudb",shape="record"];
	"langchain_community.chat_models.jinachat" [label="<f0> SourceModule| <f1> langchain_community.chat_models.jinachat",shape="record"];
	"langchain_community.chat_models.javelin_ai_gateway" [label="<f0> SourceModule| <f1> langchain_community.chat_models.javelin_ai_gateway",shape="record"];
	"javelin_sdk" [label="<f0> MissingModule| <f1> javelin_sdk",shape="record"];
	"langchain_community.chat_models.hunyuan" [label="<f0> SourceModule| <f1> langchain_community.chat_models.hunyuan",shape="record"];
	"'tencentcloud.hunyuan'" [label="<f0> MissingModule| <f1> 'tencentcloud.hunyuan'",shape="record"];
	"tencentcloud" [label="<f0> MissingModule| <f1> tencentcloud",shape="record"];
	"langchain_community.chat_models.human" [label="<f0> SourceModule| <f1> langchain_community.chat_models.human",shape="record"];
	"langchain_community.chat_models.huggingface" [label="<f0> SourceModule| <f1> langchain_community.chat_models.huggingface",shape="record"];
	"langchain_community.llms.huggingface_text_gen_inference" [label="<f0> SourceModule| <f1> langchain_community.llms.huggingface_text_gen_inference",shape="record"];
	"text_generation" [label="<f0> MissingModule| <f1> text_generation",shape="record"];
	"langchain_community.llms.huggingface_hub" [label="<f0> SourceModule| <f1> langchain_community.llms.huggingface_hub",shape="record"];
	"langchain_community.llms.huggingface_endpoint" [label="<f0> SourceModule| <f1> langchain_community.llms.huggingface_endpoint",shape="record"];
	"langchain_community.chat_models.gpt_router" [label="<f0> SourceModule| <f1> langchain_community.chat_models.gpt_router",shape="record"];
	"'gpt_router.client'" [label="<f0> MissingModule| <f1> 'gpt_router.client'",shape="record"];
	"'gpt_router.models'" [label="<f0> MissingModule| <f1> 'gpt_router.models'",shape="record"];
	"gpt_router" [label="<f0> MissingModule| <f1> gpt_router",shape="record"];
	"langchain_community.chat_models.google_palm" [label="<f0> SourceModule| <f1> langchain_community.chat_models.google_palm",shape="record"];
	"langchain_community.chat_models.gigachat" [label="<f0> SourceModule| <f1> langchain_community.chat_models.gigachat",shape="record"];
	"'gigachat.models'" [label="<f0> MissingModule| <f1> 'gigachat.models'",shape="record"];
	"langchain_community.llms.gigachat" [label="<f0> SourceModule| <f1> langchain_community.llms.gigachat",shape="record"];
	"gigachat" [label="<f0> MissingModule| <f1> gigachat",shape="record"];
	"langchain_community.chat_models.friendli" [label="<f0> SourceModule| <f1> langchain_community.chat_models.friendli",shape="record"];
	"langchain_community.llms.friendli" [label="<f0> SourceModule| <f1> langchain_community.llms.friendli",shape="record"];
	"friendli" [label="<f0> MissingModule| <f1> friendli",shape="record"];
	"langchain_community.chat_models.fireworks" [label="<f0> SourceModule| <f1> langchain_community.chat_models.fireworks",shape="record"];
	"'fireworks.client'" [label="<f0> MissingModule| <f1> 'fireworks.client'",shape="record"];
	"langchain_community.chat_models.fake" [label="<f0> SourceModule| <f1> langchain_community.chat_models.fake",shape="record"];
	"langchain_community.chat_models.everlyai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.everlyai",shape="record"];
	"langchain_community.chat_models.ernie" [label="<f0> SourceModule| <f1> langchain_community.chat_models.ernie",shape="record"];
	"langchain_community.chat_models.edenai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.edenai",shape="record"];
	"langchain_community.chat_models.deepinfra" [label="<f0> SourceModule| <f1> langchain_community.chat_models.deepinfra",shape="record"];
	"langchain_community.chat_models.databricks" [label="<f0> SourceModule| <f1> langchain_community.chat_models.databricks",shape="record"];
	"langchain_community.chat_models.coze" [label="<f0> SourceModule| <f1> langchain_community.chat_models.coze",shape="record"];
	"langchain_community.chat_models.cohere" [label="<f0> SourceModule| <f1> langchain_community.chat_models.cohere",shape="record"];
	"langchain_community.llms.cohere" [label="<f0> SourceModule| <f1> langchain_community.llms.cohere",shape="record"];
	"cohere" [label="<f0> MissingModule| <f1> cohere",shape="record"];
	"langchain_community.chat_models.bedrock" [label="<f0> SourceModule| <f1> langchain_community.chat_models.bedrock",shape="record"];
	"langchain_community.utilities.anthropic" [label="<f0> SourceModule| <f1> langchain_community.utilities.anthropic",shape="record"];
	"langchain_community.llms.bedrock" [label="<f0> SourceModule| <f1> langchain_community.llms.bedrock",shape="record"];
	"langchain_community.chat_models.meta" [label="<f0> SourceModule| <f1> langchain_community.chat_models.meta",shape="record"];
	"langchain_community.chat_models.baidu_qianfan_endpoint" [label="<f0> SourceModule| <f1> langchain_community.chat_models.baidu_qianfan_endpoint",shape="record"];
	"qianfan" [label="<f0> MissingModule| <f1> qianfan",shape="record"];
	"langchain_community.chat_models.baichuan" [label="<f0> SourceModule| <f1> langchain_community.chat_models.baichuan",shape="record"];
	"langchain_community.chat_models.azure_openai" [label="<f0> SourceModule| <f1> langchain_community.chat_models.azure_openai",shape="record"];
	"langchain_community.chat_models.anyscale" [label="<f0> SourceModule| <f1> langchain_community.chat_models.anyscale",shape="record"];
	"langchain_community.chat_models.anthropic" [label="<f0> SourceModule| <f1> langchain_community.chat_models.anthropic",shape="record"];
	"langchain_community.llms.anthropic" [label="<f0> SourceModule| <f1> langchain_community.llms.anthropic",shape="record"];
	"langchain_community.adapters.openai" [label="<f0> SourceModule| <f1> langchain_community.adapters.openai",shape="record"];
	"langchain_community.adapters" [label="<f0> Package| <f1> langchain_community.adapters",shape="record"];
	"langchain_core.chat_sessions" [label="<f0> SourceModule| <f1> langchain_core.chat_sessions",shape="record"];
	"langchain_core.language_models.chat_models" [label="<f0> SourceModule| <f1> langchain_core.language_models.chat_models",shape="record"];
	"langchain_core.rate_limiters" [label="<f0> SourceModule| <f1> langchain_core.rate_limiters",shape="record"];
	"langchain_core.language_models._utils" [label="<f0> SourceModule| <f1> langchain_core.language_models._utils",shape="record"];
	"langchain_community.tools.polygon.ticker_news" [label="<f0> SourceModule| <f1> langchain_community.tools.polygon.ticker_news",shape="record"];
	"langchain_community.tools.polygon" [label="<f0> Package| <f1> langchain_community.tools.polygon",shape="record"];
	"langchain_community.utilities.polygon" [label="<f0> SourceModule| <f1> langchain_community.utilities.polygon",shape="record"];
	"langchain_community.tools.polygon.last_quote" [label="<f0> SourceModule| <f1> langchain_community.tools.polygon.last_quote",shape="record"];
	"langchain_community.tools.polygon.financials" [label="<f0> SourceModule| <f1> langchain_community.tools.polygon.financials",shape="record"];
	"langchain_community.tools.polygon.aggregates" [label="<f0> SourceModule| <f1> langchain_community.tools.polygon.aggregates",shape="record"];
	"langchain_community.tools.plugin" [label="<f0> SourceModule| <f1> langchain_community.tools.plugin",shape="record"];
	"langchain_community.tools.playwright" [label="<f0> Package| <f1> langchain_community.tools.playwright",shape="record"];
	"langchain_community.tools.playwright.navigate_back" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.navigate_back",shape="record"];
	"langchain_community.tools.playwright.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.utils",shape="record"];
	"'playwright.sync_api'" [label="<f0> MissingModule| <f1> 'playwright.sync_api'",shape="record"];
	"'playwright.async_api'" [label="<f0> MissingModule| <f1> 'playwright.async_api'",shape="record"];
	"langchain_community.tools.playwright.base" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.base",shape="record"];
	"langchain_community.tools.playwright.navigate" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.navigate",shape="record"];
	"langchain_community.tools.playwright.get_elements" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.get_elements",shape="record"];
	"langchain_community.tools.playwright.extract_text" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.extract_text",shape="record"];
	"langchain_community.tools.playwright.extract_hyperlinks" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.extract_hyperlinks",shape="record"];
	"langchain_community.tools.playwright.current_page" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.current_page",shape="record"];
	"langchain_community.tools.playwright.click" [label="<f0> SourceModule| <f1> langchain_community.tools.playwright.click",shape="record"];
	"langchain_community.tools.openweathermap.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.openweathermap.tool",shape="record"];
	"langchain_community.tools.openweathermap" [label="<f0> Package| <f1> langchain_community.tools.openweathermap",shape="record"];
	"langchain_community.utilities.openweathermap" [label="<f0> SourceModule| <f1> langchain_community.utilities.openweathermap",shape="record"];
	"pyowm" [label="<f0> MissingModule| <f1> pyowm",shape="record"];
	"langchain_community.tools.openapi.utils.openapi_utils" [label="<f0> SourceModule| <f1> langchain_community.tools.openapi.utils.openapi_utils",shape="record"];
	"langchain_community.tools.openapi.utils" [label="<f0> Package| <f1> langchain_community.tools.openapi.utils",shape="record"];
	"langchain_community.tools.openapi" [label="<f0> Package| <f1> langchain_community.tools.openapi",shape="record"];
	"langchain_community.utilities.openapi" [label="<f0> SourceModule| <f1> langchain_community.utilities.openapi",shape="record"];
	"openapi_pydantic" [label="<f0> MissingModule| <f1> openapi_pydantic",shape="record"];
	"langchain_community.tools.openapi.utils.api_models" [label="<f0> SourceModule| <f1> langchain_community.tools.openapi.utils.api_models",shape="record"];
	"langchain_community.tools.office365.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.office365.utils",shape="record"];
	"langchain_community.tools.office365" [label="<f0> Package| <f1> langchain_community.tools.office365",shape="record"];
	"O365" [label="<f0> MissingModule| <f1> O365",shape="record"];
	"langchain_community.tools.office365.send_message" [label="<f0> SourceModule| <f1> langchain_community.tools.office365.send_message",shape="record"];
	"langchain_community.tools.office365.base" [label="<f0> SourceModule| <f1> langchain_community.tools.office365.base",shape="record"];
	"langchain_community.tools.office365.send_event" [label="<f0> SourceModule| <f1> langchain_community.tools.office365.send_event",shape="record"];
	"langchain_community.tools.office365.messages_search" [label="<f0> SourceModule| <f1> langchain_community.tools.office365.messages_search",shape="record"];
	"langchain_community.tools.office365.events_search" [label="<f0> SourceModule| <f1> langchain_community.tools.office365.events_search",shape="record"];
	"langchain_community.tools.office365.create_draft_message" [label="<f0> SourceModule| <f1> langchain_community.tools.office365.create_draft_message",shape="record"];
	"langchain_community.tools.nasa.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.nasa.tool",shape="record"];
	"langchain_community.tools.nasa" [label="<f0> Package| <f1> langchain_community.tools.nasa",shape="record"];
	"langchain_community.utilities.nasa" [label="<f0> SourceModule| <f1> langchain_community.utilities.nasa",shape="record"];
	"langchain_community.tools.mojeek_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.mojeek_search.tool",shape="record"];
	"langchain_community.tools.mojeek_search" [label="<f0> Package| <f1> langchain_community.tools.mojeek_search",shape="record"];
	"langchain_community.utilities.mojeek_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.mojeek_search",shape="record"];
	"langchain_community.tools.metaphor_search" [label="<f0> Package| <f1> langchain_community.tools.metaphor_search",shape="record"];
	"langchain_community.tools.metaphor_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.metaphor_search.tool",shape="record"];
	"langchain_community.utilities.metaphor_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.metaphor_search",shape="record"];
	"langchain_community.tools.merriam_webster.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.merriam_webster.tool",shape="record"];
	"langchain_community.tools.merriam_webster" [label="<f0> Package| <f1> langchain_community.tools.merriam_webster",shape="record"];
	"langchain_community.utilities.merriam_webster" [label="<f0> SourceModule| <f1> langchain_community.utilities.merriam_webster",shape="record"];
	"langchain_community.tools.json.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.json.tool",shape="record"];
	"langchain_community.tools.json" [label="<f0> Package| <f1> langchain_community.tools.json",shape="record"];
	"langchain_community.tools.jira.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.jira.tool",shape="record"];
	"langchain_community.tools.jira" [label="<f0> Package| <f1> langchain_community.tools.jira",shape="record"];
	"langchain_community.utilities.jira" [label="<f0> SourceModule| <f1> langchain_community.utilities.jira",shape="record"];
	"atlassian" [label="<f0> MissingModule| <f1> atlassian",shape="record"];
	"langchain_community.tools.jina_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.jina_search.tool",shape="record"];
	"langchain_community.tools.jina_search" [label="<f0> Package| <f1> langchain_community.tools.jina_search",shape="record"];
	"langchain_community.utilities.jina_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.jina_search",shape="record"];
	"langchain_community.tools.interaction.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.interaction.tool",shape="record"];
	"langchain_community.tools.interaction" [label="<f0> Package| <f1> langchain_community.tools.interaction",shape="record"];
	"langchain_community.tools.ifttt" [label="<f0> SourceModule| <f1> langchain_community.tools.ifttt",shape="record"];
	"langchain_community.tools.human.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.human.tool",shape="record"];
	"langchain_community.tools.human" [label="<f0> Package| <f1> langchain_community.tools.human",shape="record"];
	"langchain_community.tools.graphql.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.graphql.tool",shape="record"];
	"langchain_community.tools.graphql" [label="<f0> Package| <f1> langchain_community.tools.graphql",shape="record"];
	"langchain_community.utilities.graphql" [label="<f0> SourceModule| <f1> langchain_community.utilities.graphql",shape="record"];
	"'gql.transport'" [label="<f0> MissingModule| <f1> 'gql.transport'",shape="record"];
	"gql" [label="<f0> MissingModule| <f1> gql",shape="record"];
	"langchain_community.tools.google_serper.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_serper.tool",shape="record"];
	"langchain_community.tools.google_serper" [label="<f0> Package| <f1> langchain_community.tools.google_serper",shape="record"];
	"langchain_community.utilities.google_serper" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_serper",shape="record"];
	"langchain_community.tools.google_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_search.tool",shape="record"];
	"langchain_community.tools.google_search" [label="<f0> Package| <f1> langchain_community.tools.google_search",shape="record"];
	"langchain_community.utilities.google_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_search",shape="record"];
	"'googleapiclient.discovery'" [label="<f0> MissingModule| <f1> 'googleapiclient.discovery'",shape="record"];
	"langchain_community.tools.google_places.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_places.tool",shape="record"];
	"langchain_community.tools.google_places" [label="<f0> Package| <f1> langchain_community.tools.google_places",shape="record"];
	"langchain_community.utilities.google_places_api" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_places_api",shape="record"];
	"googlemaps" [label="<f0> MissingModule| <f1> googlemaps",shape="record"];
	"langchain_community.tools.google_cloud.texttospeech" [label="<f0> SourceModule| <f1> langchain_community.tools.google_cloud.texttospeech",shape="record"];
	"langchain_community.tools.google_cloud" [label="<f0> Package| <f1> langchain_community.tools.google_cloud",shape="record"];
	"langchain_community.tools.google_books" [label="<f0> SourceModule| <f1> langchain_community.tools.google_books",shape="record"];
	"langchain_community.utilities.google_books" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_books",shape="record"];
	"langchain_community.tools.gmail" [label="<f0> Package| <f1> langchain_community.tools.gmail",shape="record"];
	"langchain_community.tools.gmail.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.gmail.utils",shape="record"];
	"'google_auth_oauthlib.flow'" [label="<f0> MissingModule| <f1> 'google_auth_oauthlib.flow'",shape="record"];
	"langchain_community.tools.gmail.send_message" [label="<f0> SourceModule| <f1> langchain_community.tools.gmail.send_message",shape="record"];
	"langchain_community.tools.gmail.base" [label="<f0> SourceModule| <f1> langchain_community.tools.gmail.base",shape="record"];
	"langchain_community.tools.gmail.search" [label="<f0> SourceModule| <f1> langchain_community.tools.gmail.search",shape="record"];
	"langchain_community.tools.gmail.get_thread" [label="<f0> SourceModule| <f1> langchain_community.tools.gmail.get_thread",shape="record"];
	"langchain_community.tools.gmail.get_message" [label="<f0> SourceModule| <f1> langchain_community.tools.gmail.get_message",shape="record"];
	"langchain_community.tools.gmail.create_draft" [label="<f0> SourceModule| <f1> langchain_community.tools.gmail.create_draft",shape="record"];
	"langchain_community.tools.financial_datasets.income_statements" [label="<f0> SourceModule| <f1> langchain_community.tools.financial_datasets.income_statements",shape="record"];
	"langchain_community.tools.financial_datasets" [label="<f0> Package| <f1> langchain_community.tools.financial_datasets",shape="record"];
	"langchain_community.utilities.financial_datasets" [label="<f0> SourceModule| <f1> langchain_community.utilities.financial_datasets",shape="record"];
	"langchain_community.tools.financial_datasets.cash_flow_statements" [label="<f0> SourceModule| <f1> langchain_community.tools.financial_datasets.cash_flow_statements",shape="record"];
	"langchain_community.tools.financial_datasets.balance_sheets" [label="<f0> SourceModule| <f1> langchain_community.tools.financial_datasets.balance_sheets",shape="record"];
	"langchain_community.tools.file_management" [label="<f0> Package| <f1> langchain_community.tools.file_management",shape="record"];
	"langchain_community.tools.file_management.write" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.write",shape="record"];
	"langchain_community.tools.file_management.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.utils",shape="record"];
	"langchain_community.tools.file_management.read" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.read",shape="record"];
	"langchain_community.tools.file_management.move" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.move",shape="record"];
	"langchain_community.tools.file_management.list_dir" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.list_dir",shape="record"];
	"langchain_community.tools.file_management.file_search" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.file_search",shape="record"];
	"langchain_community.tools.file_management.delete" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.delete",shape="record"];
	"langchain_community.tools.file_management.copy" [label="<f0> SourceModule| <f1> langchain_community.tools.file_management.copy",shape="record"];
	"langchain_community.tools.eleven_labs.text2speech" [label="<f0> SourceModule| <f1> langchain_community.tools.eleven_labs.text2speech",shape="record"];
	"langchain_community.tools.eleven_labs" [label="<f0> Package| <f1> langchain_community.tools.eleven_labs",shape="record"];
	"elevenlabs" [label="<f0> MissingModule| <f1> elevenlabs",shape="record"];
	"langchain_community.tools.edenai" [label="<f0> Package| <f1> langchain_community.tools.edenai",shape="record"];
	"langchain_community.tools.edenai.text_moderation" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.text_moderation",shape="record"];
	"langchain_community.tools.edenai.ocr_invoiceparser" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.ocr_invoiceparser",shape="record"];
	"langchain_community.tools.edenai.ocr_identityparser" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.ocr_identityparser",shape="record"];
	"langchain_community.tools.edenai.image_objectdetection" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.image_objectdetection",shape="record"];
	"langchain_community.tools.edenai.image_explicitcontent" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.image_explicitcontent",shape="record"];
	"langchain_community.tools.edenai.edenai_base_tool" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.edenai_base_tool",shape="record"];
	"langchain_community.tools.edenai.audio_text_to_speech" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.audio_text_to_speech",shape="record"];
	"langchain_community.tools.edenai.audio_speech_to_text" [label="<f0> SourceModule| <f1> langchain_community.tools.edenai.audio_speech_to_text",shape="record"];
	"langchain_community.tools.e2b_data_analysis.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.e2b_data_analysis.tool",shape="record"];
	"langchain_community.tools.e2b_data_analysis" [label="<f0> Package| <f1> langchain_community.tools.e2b_data_analysis",shape="record"];
	"'e2b.templates'" [label="<f0> MissingModule| <f1> 'e2b.templates'",shape="record"];
	"e2b" [label="<f0> MissingModule| <f1> e2b",shape="record"];
	"langchain_community.tools.e2b_data_analysis.unparse" [label="<f0> SourceModule| <f1> langchain_community.tools.e2b_data_analysis.unparse",shape="record"];
	"langchain_community.tools.ddg_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.ddg_search.tool",shape="record"];
	"langchain_community.tools.ddg_search" [label="<f0> Package| <f1> langchain_community.tools.ddg_search",shape="record"];
	"langchain_community.utilities.duckduckgo_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.duckduckgo_search",shape="record"];
	"duckduckgo_search" [label="<f0> MissingModule| <f1> duckduckgo_search",shape="record"];
	"langchain_community.tools.dataherald" [label="<f0> Package| <f1> langchain_community.tools.dataherald",shape="record"];
	"langchain_community.tools.dataherald.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.dataherald.tool",shape="record"];
	"langchain_community.utilities.dataherald" [label="<f0> SourceModule| <f1> langchain_community.utilities.dataherald",shape="record"];
	"'dataherald.types'" [label="<f0> MissingModule| <f1> 'dataherald.types'",shape="record"];
	"dataherald" [label="<f0> MissingModule| <f1> dataherald",shape="record"];
	"langchain_community.tools.convert_to_openai" [label="<f0> SourceModule| <f1> langchain_community.tools.convert_to_openai",shape="record"];
	"langchain_community.tools.connery" [label="<f0> Package| <f1> langchain_community.tools.connery",shape="record"];
	"langchain_community.tools.connery.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.connery.tool",shape="record"];
	"langchain_community.tools.connery.models" [label="<f0> SourceModule| <f1> langchain_community.tools.connery.models",shape="record"];
	"langchain_community.tools.connery.service" [label="<f0> SourceModule| <f1> langchain_community.tools.connery.service",shape="record"];
	"langchain_community.tools.cogniswitch.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.cogniswitch.tool",shape="record"];
	"langchain_community.tools.cogniswitch" [label="<f0> Package| <f1> langchain_community.tools.cogniswitch",shape="record"];
	"langchain_community.tools.cassandra_database.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.cassandra_database.tool",shape="record"];
	"langchain_community.tools.cassandra_database" [label="<f0> Package| <f1> langchain_community.tools.cassandra_database",shape="record"];
	"'cassandra.cluster'" [label="<f0> MissingModule| <f1> 'cassandra.cluster'",shape="record"];
	"langchain_community.utilities.cassandra_database" [label="<f0> SourceModule| <f1> langchain_community.utilities.cassandra_database",shape="record"];
	"'cassio.config'" [label="<f0> MissingModule| <f1> 'cassio.config'",shape="record"];
	"langchain_community.tools.brave_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.brave_search.tool",shape="record"];
	"langchain_community.tools.brave_search" [label="<f0> Package| <f1> langchain_community.tools.brave_search",shape="record"];
	"langchain_community.utilities.brave_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.brave_search",shape="record"];
	"langchain_community.tools.bing_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.bing_search.tool",shape="record"];
	"langchain_community.tools.bing_search" [label="<f0> Package| <f1> langchain_community.tools.bing_search",shape="record"];
	"langchain_community.utilities.bing_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.bing_search",shape="record"];
	"langchain_community.tools.bearly.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.bearly.tool",shape="record"];
	"langchain_community.tools.bearly" [label="<f0> Package| <f1> langchain_community.tools.bearly",shape="record"];
	"langchain_community.tools.azure_cognitive_services" [label="<f0> Package| <f1> langchain_community.tools.azure_cognitive_services",shape="record"];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_cognitive_services.text_analytics_health",shape="record"];
	"langchain_community.tools.azure_cognitive_services.text2speech" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_cognitive_services.text2speech",shape="record"];
	"'azure.cognitiveservices'" [label="<f0> MissingModule| <f1> 'azure.cognitiveservices'",shape="record"];
	"langchain_community.tools.azure_cognitive_services.speech2text" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_cognitive_services.speech2text",shape="record"];
	"langchain_community.tools.azure_cognitive_services.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_cognitive_services.utils",shape="record"];
	"langchain_community.tools.azure_cognitive_services.image_analysis" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_cognitive_services.image_analysis",shape="record"];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_cognitive_services.form_recognizer",shape="record"];
	"langchain_community.tools.azure_ai_services" [label="<f0> Package| <f1> langchain_community.tools.azure_ai_services",shape="record"];
	"langchain_community.tools.azure_ai_services.text_to_speech" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_ai_services.text_to_speech",shape="record"];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_ai_services.text_analytics_for_health",shape="record"];
	"langchain_community.tools.azure_ai_services.speech_to_text" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_ai_services.speech_to_text",shape="record"];
	"langchain_community.tools.azure_ai_services.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_ai_services.utils",shape="record"];
	"langchain_community.tools.azure_ai_services.image_analysis" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_ai_services.image_analysis",shape="record"];
	"langchain_community.tools.azure_ai_services.document_intelligence" [label="<f0> SourceModule| <f1> langchain_community.tools.azure_ai_services.document_intelligence",shape="record"];
	"langchain_community.tools.asknews.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.asknews.tool",shape="record"];
	"langchain_community.tools.asknews" [label="<f0> Package| <f1> langchain_community.tools.asknews",shape="record"];
	"langchain_community.utilities.asknews" [label="<f0> SourceModule| <f1> langchain_community.utilities.asknews",shape="record"];
	"asknews_sdk" [label="<f0> MissingModule| <f1> asknews_sdk",shape="record"];
	"langchain_community.tools.arxiv.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.arxiv.tool",shape="record"];
	"langchain_community.tools.arxiv" [label="<f0> Package| <f1> langchain_community.tools.arxiv",shape="record"];
	"langchain_community.utilities.arxiv" [label="<f0> SourceModule| <f1> langchain_community.utilities.arxiv",shape="record"];
	"fitz" [label="<f0> MissingModule| <f1> fitz",shape="record"];
	"arxiv" [label="<f0> MissingModule| <f1> arxiv",shape="record"];
	"langchain_community.tools.ainetwork.value" [label="<f0> SourceModule| <f1> langchain_community.tools.ainetwork.value",shape="record"];
	"langchain_community.tools.ainetwork" [label="<f0> Package| <f1> langchain_community.tools.ainetwork",shape="record"];
	"'ain.types'" [label="<f0> MissingModule| <f1> 'ain.types'",shape="record"];
	"langchain_community.tools.ainetwork.base" [label="<f0> SourceModule| <f1> langchain_community.tools.ainetwork.base",shape="record"];
	"'ain.ain'" [label="<f0> MissingModule| <f1> 'ain.ain'",shape="record"];
	"langchain_community.tools.ainetwork.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.ainetwork.utils",shape="record"];
	"ain" [label="<f0> MissingModule| <f1> ain",shape="record"];
	"langchain_community.tools.ainetwork.transfer" [label="<f0> SourceModule| <f1> langchain_community.tools.ainetwork.transfer",shape="record"];
	"langchain_community.tools.ainetwork.rule" [label="<f0> SourceModule| <f1> langchain_community.tools.ainetwork.rule",shape="record"];
	"langchain_community.tools.ainetwork.owner" [label="<f0> SourceModule| <f1> langchain_community.tools.ainetwork.owner",shape="record"];
	"langchain_community.tools.ainetwork.app" [label="<f0> SourceModule| <f1> langchain_community.tools.ainetwork.app",shape="record"];
	"'ain.utils'" [label="<f0> MissingModule| <f1> 'ain.utils'",shape="record"];
	"langchain_core.tools.convert" [label="<f0> SourceModule| <f1> langchain_core.tools.convert",shape="record"];
	"langchain_core.tools.structured" [label="<f0> SourceModule| <f1> langchain_core.tools.structured",shape="record"];
	"google.protobuf.json_format" [label="<f0> SourceModule| <f1> google.protobuf.json_format",shape="record"];
	"nucliadb_protos" [label="<f0> MissingModule| <f1> nucliadb_protos",shape="record"];
	"langchain_community.document_transformers.markdownify" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.markdownify",shape="record"];
	"markdownify" [label="<f0> MissingModule| <f1> markdownify",shape="record"];
	"langchain_community.document_transformers.long_context_reorder" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.long_context_reorder",shape="record"];
	"langchain_community.document_transformers.html2text" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.html2text",shape="record"];
	"html2text" [label="<f0> MissingModule| <f1> html2text",shape="record"];
	"langchain_community.document_transformers.google_translate" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.google_translate",shape="record"];
	"langchain_community.document_transformers.embeddings_redundant_filter" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.embeddings_redundant_filter",shape="record"];
	"sklearn" [label="<f0> MissingModule| <f1> sklearn",shape="record"];
	"langchain_community.document_transformers.doctran_text_translate" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.doctran_text_translate",shape="record"];
	"doctran" [label="<f0> MissingModule| <f1> doctran",shape="record"];
	"langchain_community.document_transformers.doctran_text_qa" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.doctran_text_qa",shape="record"];
	"langchain_community.document_transformers.doctran_text_extract" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.doctran_text_extract",shape="record"];
	"langchain_community.document_transformers.beautiful_soup_transformer" [label="<f0> SourceModule| <f1> langchain_community.document_transformers.beautiful_soup_transformer",shape="record"];
	"langchain_community.document_loaders" [label="<f0> Package| <f1> langchain_community.document_loaders",shape="record"];
	"langchain_community.document_loaders.yuque" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.yuque",shape="record"];
	"langchain_community.document_loaders.youtube" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.youtube",shape="record"];
	"pytube" [label="<f0> MissingModule| <f1> pytube",shape="record"];
	"youtube_transcript_api" [label="<f0> MissingModule| <f1> youtube_transcript_api",shape="record"];
	"langchain_community.document_loaders.xorbits" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.xorbits",shape="record"];
	"xorbits" [label="<f0> MissingModule| <f1> xorbits",shape="record"];
	"langchain_community.document_loaders.xml" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.xml",shape="record"];
	"'unstructured.partition'" [label="<f0> MissingModule| <f1> 'unstructured.partition'",shape="record"];
	"langchain_community.document_loaders.word_document" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.word_document",shape="record"];
	"magic" [label="<f0> MissingModule| <f1> magic",shape="record"];
	"'unstructured.file_utils'" [label="<f0> MissingModule| <f1> 'unstructured.file_utils'",shape="record"];
	"docx2txt" [label="<f0> MissingModule| <f1> docx2txt",shape="record"];
	"langchain_community.document_loaders.wikipedia" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.wikipedia",shape="record"];
	"langchain_community.document_loaders.whatsapp_chat" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.whatsapp_chat",shape="record"];
	"langchain_community.document_loaders.weather" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.weather",shape="record"];
	"langchain_community.document_loaders.vsdx" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.vsdx",shape="record"];
	"langchain_community.document_loaders.parsers" [label="<f0> Package| <f1> langchain_community.document_loaders.parsers",shape="record"];
	"langchain_community.document_loaders.parsers.vsdx" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.vsdx",shape="record"];
	"langchain_community.document_loaders.parsers.pdf" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.pdf",shape="record"];
	"'textractor.entities'" [label="<f0> MissingModule| <f1> 'textractor.entities'",shape="record"];
	"textractcaller" [label="<f0> MissingModule| <f1> textractcaller",shape="record"];
	"'pypdfium2.raw'" [label="<f0> MissingModule| <f1> 'pypdfium2.raw'",shape="record"];
	"'pymupdf.table'" [label="<f0> MissingModule| <f1> 'pymupdf.table'",shape="record"];
	"'pdfminer.image'" [label="<f0> MissingModule| <f1> 'pdfminer.image'",shape="record"];
	"'pdfminer.pdfinterp'" [label="<f0> MissingModule| <f1> 'pdfminer.pdfinterp'",shape="record"];
	"'pdfminer.layout'" [label="<f0> MissingModule| <f1> 'pdfminer.layout'",shape="record"];
	"'pdfminer.converter'" [label="<f0> MissingModule| <f1> 'pdfminer.converter'",shape="record"];
	"'pdfminer.pdfpage'" [label="<f0> MissingModule| <f1> 'pdfminer.pdfpage'",shape="record"];
	"'pdfminer.psparser'" [label="<f0> MissingModule| <f1> 'pdfminer.psparser'",shape="record"];
	"pdfminer" [label="<f0> MissingModule| <f1> pdfminer",shape="record"];
	"rapidocr_onnxruntime" [label="<f0> MissingModule| <f1> rapidocr_onnxruntime",shape="record"];
	"textractor" [label="<f0> MissingModule| <f1> textractor",shape="record"];
	"pypdfium2" [label="<f0> MissingModule| <f1> pypdfium2",shape="record"];
	"pypdf" [label="<f0> MissingModule| <f1> pypdf",shape="record"];
	"pymupdf" [label="<f0> MissingModule| <f1> pymupdf",shape="record"];
	"pdfplumber" [label="<f0> MissingModule| <f1> pdfplumber",shape="record"];
	"langchain_community.document_loaders.parsers.language" [label="<f0> Package| <f1> langchain_community.document_loaders.parsers.language",shape="record"];
	"langchain_community.document_loaders.parsers.language.language_parser" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.language_parser",shape="record"];
	"langchain_community.document_loaders.parsers.language.typescript" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.typescript",shape="record"];
	"tree_sitter_languages" [label="<f0> MissingModule| <f1> tree_sitter_languages",shape="record"];
	"tree_sitter" [label="<f0> MissingModule| <f1> tree_sitter",shape="record"];
	"langchain_community.document_loaders.parsers.language.tree_sitter_segmenter" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.tree_sitter_segmenter",shape="record"];
	"langchain_community.document_loaders.parsers.language.code_segmenter" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.code_segmenter",shape="record"];
	"langchain_community.document_loaders.parsers.language.sql" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.sql",shape="record"];
	"langchain_community.document_loaders.parsers.language.scala" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.scala",shape="record"];
	"langchain_community.document_loaders.parsers.language.rust" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.rust",shape="record"];
	"langchain_community.document_loaders.parsers.language.ruby" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.ruby",shape="record"];
	"langchain_community.document_loaders.parsers.language.python" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.python",shape="record"];
	"langchain_community.document_loaders.parsers.language.php" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.php",shape="record"];
	"langchain_community.document_loaders.parsers.language.perl" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.perl",shape="record"];
	"langchain_community.document_loaders.parsers.language.lua" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.lua",shape="record"];
	"langchain_community.document_loaders.parsers.language.kotlin" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.kotlin",shape="record"];
	"langchain_community.document_loaders.parsers.language.javascript" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.javascript",shape="record"];
	"esprima" [label="<f0> MissingModule| <f1> esprima",shape="record"];
	"langchain_community.document_loaders.parsers.language.java" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.java",shape="record"];
	"langchain_community.document_loaders.parsers.language.go" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.go",shape="record"];
	"langchain_community.document_loaders.parsers.language.elixir" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.elixir",shape="record"];
	"langchain_community.document_loaders.parsers.language.csharp" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.csharp",shape="record"];
	"langchain_community.document_loaders.parsers.language.cpp" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.cpp",shape="record"];
	"langchain_community.document_loaders.parsers.language.cobol" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.cobol",shape="record"];
	"langchain_community.document_loaders.parsers.language.c" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.language.c",shape="record"];
	"langchain_community.document_loaders.parsers.images" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.images",shape="record"];
	"pytesseract" [label="<f0> MissingModule| <f1> pytesseract",shape="record"];
	"langchain_community.document_loaders.parsers.html" [label="<f0> Package| <f1> langchain_community.document_loaders.parsers.html",shape="record"];
	"langchain_community.document_loaders.parsers.html.bs4" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.html.bs4",shape="record"];
	"langchain_community.document_loaders.parsers.grobid" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.grobid",shape="record"];
	"langchain_community.document_loaders.parsers.docai" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.docai",shape="record"];
	"'google.cloud.documentai_toolbox'" [label="<f0> MissingModule| <f1> 'google.cloud.documentai_toolbox'",shape="record"];
	"'google.cloud.documentai_v1'" [label="<f0> MissingModule| <f1> 'google.cloud.documentai_v1'",shape="record"];
	"'google.cloud.documentai'" [label="<f0> MissingModule| <f1> 'google.cloud.documentai'",shape="record"];
	"langchain_community.document_loaders.parsers.doc_intelligence" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.doc_intelligence",shape="record"];
	"langchain_community.document_loaders.parsers.audio" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.audio",shape="record"];
	"pydub" [label="<f0> MissingModule| <f1> pydub",shape="record"];
	"faster_whisper" [label="<f0> MissingModule| <f1> faster_whisper",shape="record"];
	"'speechkit.stt'" [label="<f0> MissingModule| <f1> 'speechkit.stt'",shape="record"];
	"speechkit" [label="<f0> MissingModule| <f1> speechkit",shape="record"];
	"librosa" [label="<f0> MissingModule| <f1> librosa",shape="record"];
	"langchain_community.document_loaders.url_selenium" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.url_selenium",shape="record"];
	"'selenium.common'" [label="<f0> MissingModule| <f1> 'selenium.common'",shape="record"];
	"'selenium.webdriver'" [label="<f0> MissingModule| <f1> 'selenium.webdriver'",shape="record"];
	"unstructured" [label="<f0> MissingModule| <f1> unstructured",shape="record"];
	"selenium" [label="<f0> MissingModule| <f1> selenium",shape="record"];
	"langchain_community.document_loaders.url_playwright" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.url_playwright",shape="record"];
	"playwright" [label="<f0> MissingModule| <f1> playwright",shape="record"];
	"langchain_community.document_loaders.url" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.url",shape="record"];
	"'unstructured.__version__'" [label="<f0> MissingModule| <f1> 'unstructured.__version__'",shape="record"];
	"langchain_community.document_loaders.unstructured" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.unstructured",shape="record"];
	"langchain_community.document_loaders.twitter" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.twitter",shape="record"];
	"tweepy" [label="<f0> MissingModule| <f1> tweepy",shape="record"];
	"langchain_community.document_loaders.tsv" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.tsv",shape="record"];
	"langchain_community.document_loaders.trello" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.trello",shape="record"];
	"trello" [label="<f0> MissingModule| <f1> trello",shape="record"];
	"langchain_community.document_loaders.toml" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.toml",shape="record"];
	"langchain_community.document_loaders.tomarkdown" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.tomarkdown",shape="record"];
	"langchain_community.document_loaders.tidb" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.tidb",shape="record"];
	"langchain_community.document_loaders.text" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.text",shape="record"];
	"langchain_community.document_loaders.helpers" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.helpers",shape="record"];
	"langchain_community.document_loaders.tensorflow_datasets" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.tensorflow_datasets",shape="record"];
	"langchain_community.utilities.tensorflow_datasets" [label="<f0> SourceModule| <f1> langchain_community.utilities.tensorflow_datasets",shape="record"];
	"tensorflow_datasets" [label="<f0> MissingModule| <f1> tensorflow_datasets",shape="record"];
	"langchain_community.document_loaders.tencent_cos_file" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.tencent_cos_file",shape="record"];
	"qcloud_cos" [label="<f0> MissingModule| <f1> qcloud_cos",shape="record"];
	"langchain_community.document_loaders.tencent_cos_directory" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.tencent_cos_directory",shape="record"];
	"langchain_community.document_loaders.telegram" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.telegram",shape="record"];
	"'telethon.sync'" [label="<f0> MissingModule| <f1> 'telethon.sync'",shape="record"];
	"telethon" [label="<f0> MissingModule| <f1> telethon",shape="record"];
	"langchain_community.document_loaders.surrealdb" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.surrealdb",shape="record"];
	"surrealdb" [label="<f0> MissingModule| <f1> surrealdb",shape="record"];
	"langchain_community.document_loaders.stripe" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.stripe",shape="record"];
	"langchain_community.document_loaders.srt" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.srt",shape="record"];
	"pysrt" [label="<f0> MissingModule| <f1> pysrt",shape="record"];
	"langchain_community.document_loaders.sql_database" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.sql_database",shape="record"];
	"langchain_community.document_loaders.spreedly" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.spreedly",shape="record"];
	"langchain_community.document_loaders.spider" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.spider",shape="record"];
	"spider" [label="<f0> MissingModule| <f1> spider",shape="record"];
	"langchain_community.document_loaders.snowflake_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.snowflake_loader",shape="record"];
	"snowflake" [label="<f0> MissingModule| <f1> snowflake",shape="record"];
	"langchain_community.document_loaders.slack_directory" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.slack_directory",shape="record"];
	"langchain_community.document_loaders.sitemap" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.sitemap",shape="record"];
	"langchain_community.document_loaders.sharepoint" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.sharepoint",shape="record"];
	"'O365.drive'" [label="<f0> MissingModule| <f1> 'O365.drive'",shape="record"];
	"langchain_community.document_loaders.base_o365" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.base_o365",shape="record"];
	"langchain_community.document_loaders.parsers.registry" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.registry",shape="record"];
	"langchain_community.document_loaders.parsers.txt" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.txt",shape="record"];
	"langchain_community.document_loaders.parsers.msword" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.msword",shape="record"];
	"langchain_community.document_loaders.parsers.generic" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.parsers.generic",shape="record"];
	"langchain_community.document_loaders.blob_loaders.schema" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.blob_loaders.schema",shape="record"];
	"langchain_community.document_loaders.blob_loaders.file_system" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.blob_loaders.file_system",shape="record"];
	"pydantic_settings" [label="<f0> Package| <f1> pydantic_settings",shape="record"];
	"pydantic_settings.version" [label="<f0> SourceModule| <f1> pydantic_settings.version",shape="record"];
	"pydantic_settings.sources" [label="<f0> Package| <f1> pydantic_settings.sources",shape="record"];
	"pydantic_settings.sources.types" [label="<f0> SourceModule| <f1> pydantic_settings.sources.types",shape="record"];
	"pydantic_settings.sources.providers.yaml" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.yaml",shape="record"];
	"pydantic_settings.sources.providers" [label="<f0> Package| <f1> pydantic_settings.sources.providers",shape="record"];
	"pydantic_settings.sources.providers.toml" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.toml",shape="record"];
	"pydantic_settings.sources.providers.secrets" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.secrets",shape="record"];
	"pydantic_settings.utils" [label="<f0> SourceModule| <f1> pydantic_settings.utils",shape="record"];
	"pydantic_settings.sources.providers.pyproject" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.pyproject",shape="record"];
	"pydantic_settings.sources.providers.json" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.json",shape="record"];
	"pydantic_settings.sources.providers.gcp" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.gcp",shape="record"];
	"'google.cloud.secretmanager'" [label="<f0> MissingModule| <f1> 'google.cloud.secretmanager'",shape="record"];
	"pydantic_settings.sources.providers.env" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.env",shape="record"];
	"pydantic_settings.sources.utils" [label="<f0> SourceModule| <f1> pydantic_settings.sources.utils",shape="record"];
	"pydantic_settings.sources.providers.dotenv" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.dotenv",shape="record"];
	"pydantic_settings.sources.providers.cli" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.cli",shape="record"];
	"pydantic_settings.sources.providers.azure" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.azure",shape="record"];
	"pydantic_settings.sources.providers.aws" [label="<f0> SourceModule| <f1> pydantic_settings.sources.providers.aws",shape="record"];
	"mypy_boto3_secretsmanager" [label="<f0> MissingModule| <f1> mypy_boto3_secretsmanager",shape="record"];
	"pydantic_settings.sources.base" [label="<f0> SourceModule| <f1> pydantic_settings.sources.base",shape="record"];
	"pydantic_settings.main" [label="<f0> SourceModule| <f1> pydantic_settings.main",shape="record"];
	"pydantic_settings.exceptions" [label="<f0> SourceModule| <f1> pydantic_settings.exceptions",shape="record"];
	"langchain_community.document_loaders.scrapingant" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.scrapingant",shape="record"];
	"scrapingant_client" [label="<f0> MissingModule| <f1> scrapingant_client",shape="record"];
	"langchain_community.document_loaders.scrapfly" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.scrapfly",shape="record"];
	"scrapfly" [label="<f0> MissingModule| <f1> scrapfly",shape="record"];
	"langchain_community.document_loaders.s3_file" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.s3_file",shape="record"];
	"langchain_community.document_loaders.s3_directory" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.s3_directory",shape="record"];
	"langchain_community.document_loaders.rtf" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.rtf",shape="record"];
	"langchain_community.document_loaders.rst" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.rst",shape="record"];
	"langchain_community.document_loaders.rss" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.rss",shape="record"];
	"feedparser" [label="<f0> MissingModule| <f1> feedparser",shape="record"];
	"listparser" [label="<f0> MissingModule| <f1> listparser",shape="record"];
	"langchain_community.document_loaders.rocksetdb" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.rocksetdb",shape="record"];
	"'rockset.models'" [label="<f0> MissingModule| <f1> 'rockset.models'",shape="record"];
	"rockset" [label="<f0> MissingModule| <f1> rockset",shape="record"];
	"langchain_community.document_loaders.roam" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.roam",shape="record"];
	"langchain_community.document_loaders.reddit" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.reddit",shape="record"];
	"langchain_community.document_loaders.recursive_url_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.recursive_url_loader",shape="record"];
	"langchain_core.utils.html" [label="<f0> SourceModule| <f1> langchain_core.utils.html",shape="record"];
	"langchain_community.document_loaders.readthedocs" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.readthedocs",shape="record"];
	"langchain_community.document_loaders.python" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.python",shape="record"];
	"langchain_community.document_loaders.pyspark_dataframe" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.pyspark_dataframe",shape="record"];
	"langchain_community.document_loaders.pubmed" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.pubmed",shape="record"];
	"langchain_community.document_loaders.psychic" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.psychic",shape="record"];
	"psychicapi" [label="<f0> MissingModule| <f1> psychicapi",shape="record"];
	"langchain_community.document_loaders.powerpoint" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.powerpoint",shape="record"];
	"langchain_community.document_loaders.polars_dataframe" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.polars_dataframe",shape="record"];
	"polars" [label="<f0> MissingModule| <f1> polars",shape="record"];
	"langchain_community.document_loaders.pebblo" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.pebblo",shape="record"];
	"langchain_community.utilities.pebblo" [label="<f0> SourceModule| <f1> langchain_community.utilities.pebblo",shape="record"];
	"langchain_core.env" [label="<f0> SourceModule| <f1> langchain_core.env",shape="record"];
	"langchain_community.document_loaders.pdf" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.pdf",shape="record"];
	"pyzerox" [label="<f0> MissingModule| <f1> pyzerox",shape="record"];
	"'dedoc.utils'" [label="<f0> MissingModule| <f1> 'dedoc.utils'",shape="record"];
	"PIL.ImageSequence" [label="<f0> SourceModule| <f1> PIL.ImageSequence",shape="record"];
	"'pdfminer.utils'" [label="<f0> MissingModule| <f1> 'pdfminer.utils'",shape="record"];
	"'pdfminer.high_level'" [label="<f0> MissingModule| <f1> 'pdfminer.high_level'",shape="record"];
	"'textractor.data'" [label="<f0> MissingModule| <f1> 'textractor.data'",shape="record"];
	"langchain_community.document_loaders.org_mode" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.org_mode",shape="record"];
	"langchain_community.document_loaders.oracleai" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.oracleai",shape="record"];
	"langchain_community.document_loaders.oracleadb_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.oracleadb_loader",shape="record"];
	"langchain_community.document_loaders.open_city_data" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.open_city_data",shape="record"];
	"sodapy" [label="<f0> MissingModule| <f1> sodapy",shape="record"];
	"langchain_community.document_loaders.onedrive_file" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.onedrive_file",shape="record"];
	"langchain_community.document_loaders.onedrive" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.onedrive",shape="record"];
	"langchain_community.document_loaders.odt" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.odt",shape="record"];
	"langchain_community.document_loaders.obsidian" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.obsidian",shape="record"];
	"langchain_community.document_loaders.obs_file" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.obs_file",shape="record"];
	"obs" [label="<f0> MissingModule| <f1> obs",shape="record"];
	"langchain_community.document_loaders.obs_directory" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.obs_directory",shape="record"];
	"langchain_community.document_loaders.notiondb" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.notiondb",shape="record"];
	"langchain_community.document_loaders.notion" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.notion",shape="record"];
	"langchain_community.document_loaders.notebook" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.notebook",shape="record"];
	"langchain_community.document_loaders.news" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.news",shape="record"];
	"newspaper" [label="<f0> MissingModule| <f1> newspaper",shape="record"];
	"langchain_community.document_loaders.needle" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.needle",shape="record"];
	"'needle.v1'" [label="<f0> MissingModule| <f1> 'needle.v1'",shape="record"];
	"needle" [label="<f0> MissingModule| <f1> needle",shape="record"];
	"langchain_community.document_loaders.mongodb" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.mongodb",shape="record"];
	"motor" [label="<f0> MissingModule| <f1> motor",shape="record"];
	"langchain_community.document_loaders.modern_treasury" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.modern_treasury",shape="record"];
	"langchain_community.document_loaders.mhtml" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.mhtml",shape="record"];
	"langchain_community.document_loaders.merge" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.merge",shape="record"];
	"langchain_community.document_loaders.mediawikidump" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.mediawikidump",shape="record"];
	"mwparserfromhell" [label="<f0> MissingModule| <f1> mwparserfromhell",shape="record"];
	"mwxml" [label="<f0> MissingModule| <f1> mwxml",shape="record"];
	"langchain_community.document_loaders.max_compute" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.max_compute",shape="record"];
	"langchain_community.utilities.max_compute" [label="<f0> SourceModule| <f1> langchain_community.utilities.max_compute",shape="record"];
	"odps" [label="<f0> MissingModule| <f1> odps",shape="record"];
	"langchain_community.document_loaders.mastodon" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.mastodon",shape="record"];
	"mastodon" [label="<f0> MissingModule| <f1> mastodon",shape="record"];
	"langchain_community.document_loaders.markdown" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.markdown",shape="record"];
	"langchain_community.document_loaders.llmsherpa" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.llmsherpa",shape="record"];
	"'llmsherpa.readers'" [label="<f0> MissingModule| <f1> 'llmsherpa.readers'",shape="record"];
	"llmsherpa" [label="<f0> MissingModule| <f1> llmsherpa",shape="record"];
	"langchain_community.document_loaders.larksuite" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.larksuite",shape="record"];
	"langchain_community.document_loaders.lakefs" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.lakefs",shape="record"];
	"langchain_community.document_loaders.kinetica_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.kinetica_loader",shape="record"];
	"langchain_community.document_loaders.json_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.json_loader",shape="record"];
	"jq" [label="<f0> MissingModule| <f1> jq",shape="record"];
	"langchain_community.document_loaders.joplin" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.joplin",shape="record"];
	"langchain_community.document_loaders.iugu" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.iugu",shape="record"];
	"langchain_community.document_loaders.imsdb" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.imsdb",shape="record"];
	"langchain_community.document_loaders.image_captions" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.image_captions",shape="record"];
	"langchain_community.document_loaders.image" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.image",shape="record"];
	"langchain_community.document_loaders.ifixit" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.ifixit",shape="record"];
	"langchain_community.document_loaders.hugging_face_model" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.hugging_face_model",shape="record"];
	"langchain_community.document_loaders.hugging_face_dataset" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.hugging_face_dataset",shape="record"];
	"datasets" [label="<f0> Package| <f1> datasets",shape="record"];
	"datasets.utils.logging" [label="<f0> SourceModule| <f1> datasets.utils.logging",shape="record"];
	"datasets.utils.tqdm" [label="<f0> SourceModule| <f1> datasets.utils.tqdm",shape="record"];
	"datasets.utils" [label="<f0> Package| <f1> datasets.utils",shape="record"];
	"datasets.utils._dataset_viewer" [label="<f0> SourceModule| <f1> datasets.utils._dataset_viewer",shape="record"];
	"datasets.utils.file_utils" [label="<f0> SourceModule| <f1> datasets.utils.file_utils",shape="record"];
	"'scipy.io'" [label="<f0> MissingModule| <f1> 'scipy.io'",shape="record"];
	"datasets.utils.track" [label="<f0> SourceModule| <f1> datasets.utils.track",shape="record"];
	"datasets.utils.extract" [label="<f0> SourceModule| <f1> datasets.utils.extract",shape="record"];
	"'lz4.frame'" [label="<f0> MissingModule| <f1> 'lz4.frame'",shape="record"];
	"py7zr" [label="<f0> MissingModule| <f1> py7zr",shape="record"];
	"rarfile" [label="<f0> MissingModule| <f1> rarfile",shape="record"];
	"datasets.utils._filelock" [label="<f0> SourceModule| <f1> datasets.utils._filelock",shape="record"];
	"datasets.filesystems" [label="<f0> Package| <f1> datasets.filesystems",shape="record"];
	"datasets.filesystems.compression" [label="<f0> SourceModule| <f1> datasets.filesystems.compression",shape="record"];
	"datasets.download.download_config" [label="<f0> SourceModule| <f1> datasets.download.download_config",shape="record"];
	"unittest.mock" [label="<f0> SourceModule| <f1> unittest.mock",shape="record"];
	"datasets.exceptions" [label="<f0> SourceModule| <f1> datasets.exceptions",shape="record"];
	"datasets.table" [label="<f0> SourceModule| <f1> datasets.table",shape="record"];
	"datasets.features.features" [label="<f0> SourceModule| <f1> datasets.features.features",shape="record"];
	"jax" [label="<f0> MissingModule| <f1> jax",shape="record"];
	"datasets.features.video" [label="<f0> SourceModule| <f1> datasets.features.video",shape="record"];
	"av" [label="<f0> MissingModule| <f1> av",shape="record"];
	"'torchvision.io'" [label="<f0> MissingModule| <f1> 'torchvision.io'",shape="record"];
	"torchvision" [label="<f0> MissingModule| <f1> torchvision",shape="record"];
	"datasets.features.translation" [label="<f0> SourceModule| <f1> datasets.features.translation",shape="record"];
	"datasets.features.pdf" [label="<f0> SourceModule| <f1> datasets.features.pdf",shape="record"];
	"datasets.features.image" [label="<f0> SourceModule| <f1> datasets.features.image",shape="record"];
	"datasets.features.audio" [label="<f0> SourceModule| <f1> datasets.features.audio",shape="record"];
	"soundfile" [label="<f0> MissingModule| <f1> soundfile",shape="record"];
	"datasets.utils.py_utils" [label="<f0> SourceModule| <f1> datasets.utils.py_utils",shape="record"];
	"'tensorflow.python'" [label="<f0> MissingModule| <f1> 'tensorflow.python'",shape="record"];
	"datasets.utils._dill" [label="<f0> SourceModule| <f1> datasets.utils._dill",shape="record"];
	"spacy" [label="<f0> MissingModule| <f1> spacy",shape="record"];
	"datasets.parallel" [label="<f0> Package| <f1> datasets.parallel",shape="record"];
	"datasets.parallel.parallel" [label="<f0> SourceModule| <f1> datasets.parallel.parallel",shape="record"];
	"joblibspark" [label="<f0> MissingModule| <f1> joblibspark",shape="record"];
	"joblib" [label="<f0> Package| <f1> joblib",shape="record"];
	"joblib.parallel" [label="<f0> SourceModule| <f1> joblib.parallel",shape="record"];
	"joblib._dask" [label="<f0> SourceModule| <f1> joblib._dask",shape="record"];
	"'distributed.utils'" [label="<f0> MissingModule| <f1> 'distributed.utils'",shape="record"];
	"'dask.utils'" [label="<f0> MissingModule| <f1> 'dask.utils'",shape="record"];
	"'dask.sizeof'" [label="<f0> MissingModule| <f1> 'dask.sizeof'",shape="record"];
	"'dask.distributed'" [label="<f0> MissingModule| <f1> 'dask.distributed'",shape="record"];
	"joblib.externals.loky" [label="<f0> Package| <f1> joblib.externals.loky",shape="record"];
	"joblib.externals.loky.process_executor" [label="<f0> SourceModule| <f1> joblib.externals.loky.process_executor",shape="record"];
	"joblib.externals.loky.initializers" [label="<f0> SourceModule| <f1> joblib.externals.loky.initializers",shape="record"];
	"viztracer" [label="<f0> MissingModule| <f1> viztracer",shape="record"];
	"joblib.externals.loky.backend.utils" [label="<f0> SourceModule| <f1> joblib.externals.loky.backend.utils",shape="record"];
	"joblib.externals.loky.backend.queues" [label="<f0> SourceModule| <f1> joblib.externals.loky.backend.queues",shape="record"];
	"joblib.externals.loky.backend" [label="<f0> Package| <f1> joblib.externals.loky.backend",shape="record"];
	"joblib.externals.loky.backend.spawn" [label="<f0> SourceModule| <f1> joblib.externals.loky.backend.spawn",shape="record"];
	"joblib.externals.loky.backend.resource_tracker" [label="<f0> SourceModule| <f1> joblib.externals.loky.backend.resource_tracker",shape="record"];
	"joblib.externals.loky.backend._win_reduction" [label="<f0> SourceModule| <f1> joblib.externals.loky.backend._win_reduction",shape="record"];
	"joblib.externals.loky.cloudpickle_wrapper" [label="<f0> SourceModule| <f1> joblib.externals.loky.cloudpickle_wrapper",shape="record"];
	"joblib.externals.cloudpickle" [label="<f0> Package| <f1> joblib.externals.cloudpickle",shape="record"];
	"joblib.externals.cloudpickle.cloudpickle" [label="<f0> SourceModule| <f1> joblib.externals.cloudpickle.cloudpickle",shape="record"];
	"joblib.externals.loky.reusable_executor" [label="<f0> SourceModule| <f1> joblib.externals.loky.reusable_executor",shape="record"];
	"joblib.externals.loky.backend.reduction" [label="<f0> SourceModule| <f1> joblib.externals.loky.backend.reduction",shape="record"];
	"joblib.externals.loky.backend._posix_reduction" [label="<f0> SourceModule| <f1> joblib.externals.loky.backend._posix_reduction",shape="record"];
	"joblib.externals.loky.backend.context" [label="<f0> SourceModule| <f1> joblib.externals.loky.backend.context",shape="record"];
	"joblib.externals.loky.backend.synchronize" [label="<f0> SourceModule| <f1> joblib.externals.loky.backend.synchronize",shape="record"];
	"joblib.externals.loky.backend.process" [label="<f0> SourceModule| <f1> joblib.externals.loky.backend.process",shape="record"];
	"joblib.externals.loky.backend.popen_loky_posix" [label="<f0> SourceModule| <f1> joblib.externals.loky.backend.popen_loky_posix",shape="record"];
	"joblib.externals.loky.backend.fork_exec" [label="<f0> SourceModule| <f1> joblib.externals.loky.backend.fork_exec",shape="record"];
	"joblib.externals.loky.backend.popen_loky_win32" [label="<f0> SourceModule| <f1> joblib.externals.loky.backend.popen_loky_win32",shape="record"];
	"joblib.externals.loky._base" [label="<f0> SourceModule| <f1> joblib.externals.loky._base",shape="record"];
	"joblib.externals" [label="<f0> Package| <f1> joblib.externals",shape="record"];
	"joblib.disk" [label="<f0> SourceModule| <f1> joblib.disk",shape="record"];
	"joblib._utils" [label="<f0> SourceModule| <f1> joblib._utils",shape="record"];
	"joblib._multiprocessing_helpers" [label="<f0> SourceModule| <f1> joblib._multiprocessing_helpers",shape="record"];
	"joblib.numpy_pickle" [label="<f0> SourceModule| <f1> joblib.numpy_pickle",shape="record"];
	"joblib._memmapping_reducer" [label="<f0> SourceModule| <f1> joblib._memmapping_reducer",shape="record"];
	"joblib.numpy_pickle_utils" [label="<f0> SourceModule| <f1> joblib.numpy_pickle_utils",shape="record"];
	"numpy.core.multiarray" [label="<f0> SourceModule| <f1> numpy.core.multiarray",shape="record"];
	"joblib.numpy_pickle_compat" [label="<f0> SourceModule| <f1> joblib.numpy_pickle_compat",shape="record"];
	"joblib.backports" [label="<f0> SourceModule| <f1> joblib.backports",shape="record"];
	"joblib.memory" [label="<f0> SourceModule| <f1> joblib.memory",shape="record"];
	"joblib.func_inspect" [label="<f0> SourceModule| <f1> joblib.func_inspect",shape="record"];
	"joblib.logger" [label="<f0> SourceModule| <f1> joblib.logger",shape="record"];
	"joblib.hashing" [label="<f0> SourceModule| <f1> joblib.hashing",shape="record"];
	"joblib.compressor" [label="<f0> SourceModule| <f1> joblib.compressor",shape="record"];
	"joblib._store_backends" [label="<f0> SourceModule| <f1> joblib._store_backends",shape="record"];
	"joblib._parallel_backends" [label="<f0> SourceModule| <f1> joblib._parallel_backends",shape="record"];
	"joblib.pool" [label="<f0> SourceModule| <f1> joblib.pool",shape="record"];
	"joblib.executor" [label="<f0> SourceModule| <f1> joblib.executor",shape="record"];
	"joblib._cloudpickle_wrapper" [label="<f0> SourceModule| <f1> joblib._cloudpickle_wrapper",shape="record"];
	"multiprocess.pool" [label="<f0> SourceModule| <f1> multiprocess.pool",shape="record"];
	"multiprocess.dummy" [label="<f0> Package| <f1> multiprocess.dummy",shape="record"];
	"multiprocess.dummy.connection" [label="<f0> SourceModule| <f1> multiprocess.dummy.connection",shape="record"];
	"multiprocess.connection" [label="<f0> SourceModule| <f1> multiprocess.connection",shape="record"];
	"multiprocess.resource_sharer" [label="<f0> SourceModule| <f1> multiprocess.resource_sharer",shape="record"];
	"multiprocess.process" [label="<f0> SourceModule| <f1> multiprocess.process",shape="record"];
	"multiprocess.context" [label="<f0> SourceModule| <f1> multiprocess.context",shape="record"];
	"multiprocess.popen_spawn_win32" [label="<f0> SourceModule| <f1> multiprocess.popen_spawn_win32",shape="record"];
	"multiprocess.popen_forkserver" [label="<f0> SourceModule| <f1> multiprocess.popen_forkserver",shape="record"];
	"multiprocess.popen_spawn_posix" [label="<f0> SourceModule| <f1> multiprocess.popen_spawn_posix",shape="record"];
	"multiprocess.resource_tracker" [label="<f0> SourceModule| <f1> multiprocess.resource_tracker",shape="record"];
	"multiprocess.popen_fork" [label="<f0> SourceModule| <f1> multiprocess.popen_fork",shape="record"];
	"multiprocess.forkserver" [label="<f0> SourceModule| <f1> multiprocess.forkserver",shape="record"];
	"multiprocess.spawn" [label="<f0> SourceModule| <f1> multiprocess.spawn",shape="record"];
	"multiprocess.set_start_method" [label="<f0> MissingModule| <f1> multiprocess.set_start_method",shape="record"];
	"multiprocess.get_start_method" [label="<f0> MissingModule| <f1> multiprocess.get_start_method",shape="record"];
	"multiprocess.sharedctypes" [label="<f0> SourceModule| <f1> multiprocess.sharedctypes",shape="record"];
	"multiprocess.heap" [label="<f0> SourceModule| <f1> multiprocess.heap",shape="record"];
	"multiprocess.queues" [label="<f0> SourceModule| <f1> multiprocess.queues",shape="record"];
	"multiprocess.synchronize" [label="<f0> SourceModule| <f1> multiprocess.synchronize",shape="record"];
	"_multiprocess.sem_unlink" [label="<f0> MissingModule| <f1> _multiprocess.sem_unlink",shape="record"];
	"_multiprocess.SemLock" [label="<f0> MissingModule| <f1> _multiprocess.SemLock",shape="record"];
	"multiprocess.managers" [label="<f0> SourceModule| <f1> multiprocess.managers",shape="record"];
	"multiprocess.shared_memory" [label="<f0> SourceModule| <f1> multiprocess.shared_memory",shape="record"];
	"multiprocess.reduction" [label="<f0> SourceModule| <f1> multiprocess.reduction",shape="record"];
	"multiprocess.BufferTooShort" [label="<f0> MissingModule| <f1> multiprocess.BufferTooShort",shape="record"];
	"multiprocess.AuthenticationError" [label="<f0> MissingModule| <f1> multiprocess.AuthenticationError",shape="record"];
	"_multiprocess" [label="<f0> Package| <f1> _multiprocess",shape="record"];
	"multiprocess.TimeoutError" [label="<f0> MissingModule| <f1> multiprocess.TimeoutError",shape="record"];
	"multiprocess.get_context" [label="<f0> MissingModule| <f1> multiprocess.get_context",shape="record"];
	"multiprocess.util" [label="<f0> SourceModule| <f1> multiprocess.util",shape="record"];
	"test" [label="<f0> MissingModule| <f1> test",shape="record"];
	"multiprocess" [label="<f0> Package| <f1> multiprocess",shape="record"];
	"multiprocess.Pool" [label="<f0> MissingModule| <f1> multiprocess.Pool",shape="record"];
	"multiprocess.__info__" [label="<f0> SourceModule| <f1> multiprocess.__info__",shape="record"];
	"datasets.naming" [label="<f0> SourceModule| <f1> datasets.naming",shape="record"];
	"datasets.utils.version" [label="<f0> SourceModule| <f1> datasets.utils.version",shape="record"];
	"datasets.utils.info_utils" [label="<f0> SourceModule| <f1> datasets.utils.info_utils",shape="record"];
	"datasets.utils.experimental" [label="<f0> SourceModule| <f1> datasets.utils.experimental",shape="record"];
	"datasets.splits" [label="<f0> SourceModule| <f1> datasets.splits",shape="record"];
	"datasets.load" [label="<f0> SourceModule| <f1> datasets.load",shape="record"];
	"datasets.utils.typing" [label="<f0> SourceModule| <f1> datasets.utils.typing",shape="record"];
	"datasets.utils.metadata" [label="<f0> SourceModule| <f1> datasets.utils.metadata",shape="record"];
	"datasets.utils.hub" [label="<f0> SourceModule| <f1> datasets.utils.hub",shape="record"];
	"datasets.packaged_modules.folder_based_builder.folder_based_builder" [label="<f0> SourceModule| <f1> datasets.packaged_modules.folder_based_builder.folder_based_builder",shape="record"];
	"datasets.packaged_modules.folder_based_builder" [label="<f0> Package| <f1> datasets.packaged_modules.folder_based_builder",shape="record"];
	"datasets.packaged_modules" [label="<f0> Package| <f1> datasets.packaged_modules",shape="record"];
	"datasets.packaged_modules.xml.xml" [label="<f0> SourceModule| <f1> datasets.packaged_modules.xml.xml",shape="record"];
	"datasets.packaged_modules.xml" [label="<f0> Package| <f1> datasets.packaged_modules.xml",shape="record"];
	"datasets.packaged_modules.webdataset.webdataset" [label="<f0> SourceModule| <f1> datasets.packaged_modules.webdataset.webdataset",shape="record"];
	"cbor" [label="<f0> MissingModule| <f1> cbor",shape="record"];
	"msgpack" [label="<f0> MissingModule| <f1> msgpack",shape="record"];
	"datasets.packaged_modules.webdataset._tenbin" [label="<f0> SourceModule| <f1> datasets.packaged_modules.webdataset._tenbin",shape="record"];
	"datasets.packaged_modules.webdataset" [label="<f0> Package| <f1> datasets.packaged_modules.webdataset",shape="record"];
	"datasets.packaged_modules.videofolder.videofolder" [label="<f0> SourceModule| <f1> datasets.packaged_modules.videofolder.videofolder",shape="record"];
	"datasets.packaged_modules.videofolder" [label="<f0> Package| <f1> datasets.packaged_modules.videofolder",shape="record"];
	"datasets.packaged_modules.text.text" [label="<f0> SourceModule| <f1> datasets.packaged_modules.text.text",shape="record"];
	"datasets.packaged_modules.text" [label="<f0> Package| <f1> datasets.packaged_modules.text",shape="record"];
	"datasets.packaged_modules.sql.sql" [label="<f0> SourceModule| <f1> datasets.packaged_modules.sql.sql",shape="record"];
	"datasets.packaged_modules.sql" [label="<f0> Package| <f1> datasets.packaged_modules.sql",shape="record"];
	"datasets.packaged_modules.pdffolder.pdffolder" [label="<f0> SourceModule| <f1> datasets.packaged_modules.pdffolder.pdffolder",shape="record"];
	"datasets.packaged_modules.pdffolder" [label="<f0> Package| <f1> datasets.packaged_modules.pdffolder",shape="record"];
	"datasets.packaged_modules.parquet.parquet" [label="<f0> SourceModule| <f1> datasets.packaged_modules.parquet.parquet",shape="record"];
	"datasets.packaged_modules.parquet" [label="<f0> Package| <f1> datasets.packaged_modules.parquet",shape="record"];
	"datasets.packaged_modules.pandas.pandas" [label="<f0> SourceModule| <f1> datasets.packaged_modules.pandas.pandas",shape="record"];
	"datasets.packaged_modules.pandas" [label="<f0> Package| <f1> datasets.packaged_modules.pandas",shape="record"];
	"datasets.packaged_modules.json.json" [label="<f0> SourceModule| <f1> datasets.packaged_modules.json.json",shape="record"];
	"datasets.packaged_modules.json" [label="<f0> Package| <f1> datasets.packaged_modules.json",shape="record"];
	"datasets.packaged_modules.imagefolder.imagefolder" [label="<f0> SourceModule| <f1> datasets.packaged_modules.imagefolder.imagefolder",shape="record"];
	"datasets.packaged_modules.imagefolder" [label="<f0> Package| <f1> datasets.packaged_modules.imagefolder",shape="record"];
	"datasets.packaged_modules.csv.csv" [label="<f0> SourceModule| <f1> datasets.packaged_modules.csv.csv",shape="record"];
	"datasets.packaged_modules.csv" [label="<f0> Package| <f1> datasets.packaged_modules.csv",shape="record"];
	"datasets.packaged_modules.cache.cache" [label="<f0> SourceModule| <f1> datasets.packaged_modules.cache.cache",shape="record"];
	"datasets.packaged_modules.cache" [label="<f0> Package| <f1> datasets.packaged_modules.cache",shape="record"];
	"datasets.packaged_modules.audiofolder.audiofolder" [label="<f0> SourceModule| <f1> datasets.packaged_modules.audiofolder.audiofolder",shape="record"];
	"datasets.packaged_modules.audiofolder" [label="<f0> Package| <f1> datasets.packaged_modules.audiofolder",shape="record"];
	"datasets.packaged_modules.arrow.arrow" [label="<f0> SourceModule| <f1> datasets.packaged_modules.arrow.arrow",shape="record"];
	"datasets.packaged_modules.arrow" [label="<f0> Package| <f1> datasets.packaged_modules.arrow",shape="record"];
	"datasets.download.streaming_download_manager" [label="<f0> SourceModule| <f1> datasets.download.streaming_download_manager",shape="record"];
	"datasets.download.download_manager" [label="<f0> SourceModule| <f1> datasets.download.download_manager",shape="record"];
	"datasets.data_files" [label="<f0> SourceModule| <f1> datasets.data_files",shape="record"];
	"datasets.iterable_dataset" [label="<f0> SourceModule| <f1> datasets.iterable_dataset",shape="record"];
	"datasets.io.spark" [label="<f0> SourceModule| <f1> datasets.io.spark",shape="record"];
	"datasets.io" [label="<f0> Package| <f1> datasets.io",shape="record"];
	"datasets.io.abc" [label="<f0> SourceModule| <f1> datasets.io.abc",shape="record"];
	"datasets.packaged_modules.spark.spark" [label="<f0> SourceModule| <f1> datasets.packaged_modules.spark.spark",shape="record"];
	"datasets.packaged_modules.spark" [label="<f0> Package| <f1> datasets.packaged_modules.spark",shape="record"];
	"datasets.arrow_writer" [label="<f0> SourceModule| <f1> datasets.arrow_writer",shape="record"];
	"datasets.keyhash" [label="<f0> SourceModule| <f1> datasets.keyhash",shape="record"];
	"pyspark" [label="<f0> MissingModule| <f1> pyspark",shape="record"];
	"datasets.io.generator" [label="<f0> SourceModule| <f1> datasets.io.generator",shape="record"];
	"datasets.packaged_modules.generator.generator" [label="<f0> SourceModule| <f1> datasets.packaged_modules.generator.generator",shape="record"];
	"datasets.packaged_modules.generator" [label="<f0> Package| <f1> datasets.packaged_modules.generator",shape="record"];
	"datasets.utils.sharding" [label="<f0> SourceModule| <f1> datasets.utils.sharding",shape="record"];
	"datasets.formatting" [label="<f0> Package| <f1> datasets.formatting",shape="record"];
	"datasets.formatting.jax_formatter" [label="<f0> SourceModule| <f1> datasets.formatting.jax_formatter",shape="record"];
	"'jax.numpy'" [label="<f0> MissingModule| <f1> 'jax.numpy'",shape="record"];
	"'jaxlib.xla_client'" [label="<f0> MissingModule| <f1> 'jaxlib.xla_client'",shape="record"];
	"jaxlib" [label="<f0> MissingModule| <f1> jaxlib",shape="record"];
	"datasets.formatting.tf_formatter" [label="<f0> SourceModule| <f1> datasets.formatting.tf_formatter",shape="record"];
	"datasets.formatting.torch_formatter" [label="<f0> SourceModule| <f1> datasets.formatting.torch_formatter",shape="record"];
	"datasets.formatting.polars_formatter" [label="<f0> SourceModule| <f1> datasets.formatting.polars_formatter",shape="record"];
	"datasets.formatting.np_formatter" [label="<f0> SourceModule| <f1> datasets.formatting.np_formatter",shape="record"];
	"datasets.formatting.formatting" [label="<f0> SourceModule| <f1> datasets.formatting.formatting",shape="record"];
	"datasets.inspect" [label="<f0> SourceModule| <f1> datasets.inspect",shape="record"];
	"datasets.info" [label="<f0> SourceModule| <f1> datasets.info",shape="record"];
	"datasets.fingerprint" [label="<f0> SourceModule| <f1> datasets.fingerprint",shape="record"];
	"xxhash" [label="<f0> Package| <f1> xxhash",shape="record"];
	"xxhash.version" [label="<f0> SourceModule| <f1> xxhash.version",shape="record"];
	"xxhash._xxhash" [label="<f0> Extension| <f1> xxhash._xxhash",shape="record"];
	"datasets.features" [label="<f0> Package| <f1> datasets.features",shape="record"];
	"datasets.download" [label="<f0> Package| <f1> datasets.download",shape="record"];
	"datasets.dataset_dict" [label="<f0> SourceModule| <f1> datasets.dataset_dict",shape="record"];
	"datasets.io.text" [label="<f0> SourceModule| <f1> datasets.io.text",shape="record"];
	"datasets.io.parquet" [label="<f0> SourceModule| <f1> datasets.io.parquet",shape="record"];
	"datasets.io.json" [label="<f0> SourceModule| <f1> datasets.io.json",shape="record"];
	"datasets.io.csv" [label="<f0> SourceModule| <f1> datasets.io.csv",shape="record"];
	"datasets.utils.doc_utils" [label="<f0> SourceModule| <f1> datasets.utils.doc_utils",shape="record"];
	"datasets.combine" [label="<f0> SourceModule| <f1> datasets.combine",shape="record"];
	"datasets.builder" [label="<f0> SourceModule| <f1> datasets.builder",shape="record"];
	"datasets.streaming" [label="<f0> SourceModule| <f1> datasets.streaming",shape="record"];
	"datasets.utils.patching" [label="<f0> SourceModule| <f1> datasets.utils.patching",shape="record"];
	"datasets.arrow_reader" [label="<f0> SourceModule| <f1> datasets.arrow_reader",shape="record"];
	"datasets.arrow_dataset" [label="<f0> SourceModule| <f1> datasets.arrow_dataset",shape="record"];
	"datasets.io.sql" [label="<f0> SourceModule| <f1> datasets.io.sql",shape="record"];
	"datasets.utils.tf_utils" [label="<f0> SourceModule| <f1> datasets.utils.tf_utils",shape="record"];
	"datasets.utils.stratify" [label="<f0> SourceModule| <f1> datasets.utils.stratify",shape="record"];
	"datasets.search" [label="<f0> SourceModule| <f1> datasets.search",shape="record"];
	"'elasticsearch.helpers'" [label="<f0> MissingModule| <f1> 'elasticsearch.helpers'",shape="record"];
	"faiss" [label="<f0> MissingModule| <f1> faiss",shape="record"];
	"elasticsearch" [label="<f0> MissingModule| <f1> elasticsearch",shape="record"];
	"datasets.Features" [label="<f0> MissingModule| <f1> datasets.Features",shape="record"];
	"datasets.config" [label="<f0> SourceModule| <f1> datasets.config",shape="record"];
	"langchain_community.document_loaders.html_bs" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.html_bs",shape="record"];
	"langchain_community.document_loaders.html" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.html",shape="record"];
	"langchain_community.document_loaders.hn" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.hn",shape="record"];
	"langchain_community.document_loaders.gutenberg" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.gutenberg",shape="record"];
	"langchain_community.document_loaders.googledrive" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.googledrive",shape="record"];
	"PyPDF2" [label="<f0> MissingModule| <f1> PyPDF2",shape="record"];
	"'googleapiclient.http'" [label="<f0> MissingModule| <f1> 'googleapiclient.http'",shape="record"];
	"'googleapiclient.errors'" [label="<f0> MissingModule| <f1> 'googleapiclient.errors'",shape="record"];
	"googleapiclient" [label="<f0> MissingModule| <f1> googleapiclient",shape="record"];
	"google_auth_oauthlib" [label="<f0> MissingModule| <f1> google_auth_oauthlib",shape="record"];
	"langchain_community.document_loaders.google_speech_to_text" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.google_speech_to_text",shape="record"];
	"'google.cloud.speech_v2'" [label="<f0> MissingModule| <f1> 'google.cloud.speech_v2'",shape="record"];
	"langchain_community.document_loaders.glue_catalog" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.glue_catalog",shape="record"];
	"'boto3.session'" [label="<f0> MissingModule| <f1> 'boto3.session'",shape="record"];
	"langchain_community.document_loaders.github" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.github",shape="record"];
	"langchain_community.document_loaders.gitbook" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.gitbook",shape="record"];
	"langchain_community.document_loaders.git" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.git",shape="record"];
	"git" [label="<f0> Package| <f1> git",shape="record"];
	"git.util" [label="<f0> SourceModule| <f1> git.util",shape="record"];
	"git.repo.base" [label="<f0> SourceModule| <f1> git.repo.base",shape="record"];
	"git.refs.symbolic" [label="<f0> SourceModule| <f1> git.refs.symbolic",shape="record"];
	"git.refs.log" [label="<f0> SourceModule| <f1> git.refs.log",shape="record"];
	"git.objects.util" [label="<f0> SourceModule| <f1> git.objects.util",shape="record"];
	"git.objects.tree" [label="<f0> SourceModule| <f1> git.objects.tree",shape="record"];
	"git.objects.fun" [label="<f0> SourceModule| <f1> git.objects.fun",shape="record"];
	"git.objects.tag" [label="<f0> SourceModule| <f1> git.objects.tag",shape="record"];
	"git.objects.blob" [label="<f0> SourceModule| <f1> git.objects.blob",shape="record"];
	"git.objects.commit" [label="<f0> SourceModule| <f1> git.objects.commit",shape="record"];
	"git.objects.base" [label="<f0> SourceModule| <f1> git.objects.base",shape="record"];
	"git.refs.reference" [label="<f0> SourceModule| <f1> git.refs.reference",shape="record"];
	"gitdb.base" [label="<f0> SourceModule| <f1> gitdb.base",shape="record"];
	"gitdb.fun" [label="<f0> SourceModule| <f1> gitdb.fun",shape="record"];
	"gitdb_speedups" [label="<f0> MissingModule| <f1> gitdb_speedups",shape="record"];
	"gitdb.utils.encoding" [label="<f0> SourceModule| <f1> gitdb.utils.encoding",shape="record"];
	"gitdb.utils" [label="<f0> Package| <f1> gitdb.utils",shape="record"];
	"gitdb.const" [label="<f0> SourceModule| <f1> gitdb.const",shape="record"];
	"gitdb.typ" [label="<f0> SourceModule| <f1> gitdb.typ",shape="record"];
	"git.objects.submodule.base" [label="<f0> SourceModule| <f1> git.objects.submodule.base",shape="record"];
	"git.objects.submodule.util" [label="<f0> SourceModule| <f1> git.objects.submodule.util",shape="record"];
	"git.objects.submodule" [label="<f0> Package| <f1> git.objects.submodule",shape="record"];
	"git.objects.submodule.root" [label="<f0> SourceModule| <f1> git.objects.submodule.root",shape="record"];
	"git.repo.fun" [label="<f0> SourceModule| <f1> git.repo.fun",shape="record"];
	"git.refs.tag" [label="<f0> SourceModule| <f1> git.refs.tag",shape="record"];
	"gitdb.exc" [label="<f0> SourceModule| <f1> gitdb.exc",shape="record"];
	"gitdb.db.loose" [label="<f0> SourceModule| <f1> gitdb.db.loose",shape="record"];
	"gitdb.db" [label="<f0> Package| <f1> gitdb.db",shape="record"];
	"gitdb.db.ref" [label="<f0> SourceModule| <f1> gitdb.db.ref",shape="record"];
	"gitdb.db.git" [label="<f0> SourceModule| <f1> gitdb.db.git",shape="record"];
	"gitdb.db.pack" [label="<f0> SourceModule| <f1> gitdb.db.pack",shape="record"];
	"gitdb.pack" [label="<f0> SourceModule| <f1> gitdb.pack",shape="record"];
	"'gitdb_speedups._perf'" [label="<f0> MissingModule| <f1> 'gitdb_speedups._perf'",shape="record"];
	"gitdb.db.mem" [label="<f0> SourceModule| <f1> gitdb.db.mem",shape="record"];
	"gitdb.stream" [label="<f0> SourceModule| <f1> gitdb.stream",shape="record"];
	"gitdb.db.base" [label="<f0> SourceModule| <f1> gitdb.db.base",shape="record"];
	"gitdb" [label="<f0> Package| <f1> gitdb",shape="record"];
	"git.index.util" [label="<f0> SourceModule| <f1> git.index.util",shape="record"];
	"git.index" [label="<f0> Package| <f1> git.index",shape="record"];
	"git.index.typ" [label="<f0> SourceModule| <f1> git.index.typ",shape="record"];
	"git.index.base" [label="<f0> SourceModule| <f1> git.index.base",shape="record"];
	"git.index.fun" [label="<f0> SourceModule| <f1> git.index.fun",shape="record"];
	"git.remote" [label="<f0> SourceModule| <f1> git.remote",shape="record"];
	"git.repo" [label="<f0> Package| <f1> git.repo",shape="record"];
	"git.cmd" [label="<f0> SourceModule| <f1> git.cmd",shape="record"];
	"git.db" [label="<f0> SourceModule| <f1> git.db",shape="record"];
	"git.diff" [label="<f0> SourceModule| <f1> git.diff",shape="record"];
	"git.refs" [label="<f0> Package| <f1> git.refs",shape="record"];
	"git.refs.remote" [label="<f0> SourceModule| <f1> git.refs.remote",shape="record"];
	"git.refs.head" [label="<f0> SourceModule| <f1> git.refs.head",shape="record"];
	"git.objects" [label="<f0> Package| <f1> git.objects",shape="record"];
	"git.config" [label="<f0> SourceModule| <f1> git.config",shape="record"];
	"git.compat" [label="<f0> SourceModule| <f1> git.compat",shape="record"];
	"git.types" [label="<f0> SourceModule| <f1> git.types",shape="record"];
	"git.exc" [label="<f0> SourceModule| <f1> git.exc",shape="record"];
	"gitdb.util" [label="<f0> SourceModule| <f1> gitdb.util",shape="record"];
	"sha" [label="<f0> MissingModule| <f1> sha",shape="record"];
	"smmap" [label="<f0> Package| <f1> smmap",shape="record"];
	"smmap.buf" [label="<f0> SourceModule| <f1> smmap.buf",shape="record"];
	"smmap.mman" [label="<f0> SourceModule| <f1> smmap.mman",shape="record"];
	"smmap.util" [label="<f0> SourceModule| <f1> smmap.util",shape="record"];
	"langchain_community.document_loaders.geodataframe" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.geodataframe",shape="record"];
	"geopandas" [label="<f0> MissingModule| <f1> geopandas",shape="record"];
	"langchain_community.document_loaders.gcs_file" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.gcs_file",shape="record"];
	"langchain_community.document_loaders.gcs_directory" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.gcs_directory",shape="record"];
	"langchain_community.document_loaders.firecrawl" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.firecrawl",shape="record"];
	"firecrawl" [label="<f0> MissingModule| <f1> firecrawl",shape="record"];
	"langchain_community.document_loaders.figma" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.figma",shape="record"];
	"langchain_community.document_loaders.fauna" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.fauna",shape="record"];
	"'fauna.encoding'" [label="<f0> MissingModule| <f1> 'fauna.encoding'",shape="record"];
	"'fauna.client'" [label="<f0> MissingModule| <f1> 'fauna.client'",shape="record"];
	"fauna" [label="<f0> MissingModule| <f1> fauna",shape="record"];
	"langchain_community.document_loaders.facebook_chat" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.facebook_chat",shape="record"];
	"langchain_community.document_loaders.excel" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.excel",shape="record"];
	"langchain_community.document_loaders.evernote" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.evernote",shape="record"];
	"langchain_community.document_loaders.etherscan" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.etherscan",shape="record"];
	"langchain_community.document_loaders.epub" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.epub",shape="record"];
	"langchain_community.document_loaders.email" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.email",shape="record"];
	"extract_msg" [label="<f0> MissingModule| <f1> extract_msg",shape="record"];
	"langchain_community.document_loaders.duckdb_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.duckdb_loader",shape="record"];
	"duckdb" [label="<f0> MissingModule| <f1> duckdb",shape="record"];
	"langchain_community.document_loaders.dropbox" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.dropbox",shape="record"];
	"'dropbox.files'" [label="<f0> MissingModule| <f1> 'dropbox.files'",shape="record"];
	"dropbox" [label="<f0> MissingModule| <f1> dropbox",shape="record"];
	"langchain_community.document_loaders.docusaurus" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.docusaurus",shape="record"];
	"langchain_community.document_loaders.docugami" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.docugami",shape="record"];
	"'dgml_utils.segmentation'" [label="<f0> MissingModule| <f1> 'dgml_utils.segmentation'",shape="record"];
	"dgml_utils" [label="<f0> MissingModule| <f1> dgml_utils",shape="record"];
	"langchain_community.document_loaders.doc_intelligence" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.doc_intelligence",shape="record"];
	"langchain_community.document_loaders.discord" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.discord",shape="record"];
	"langchain_community.document_loaders.directory" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.directory",shape="record"];
	"langchain_community.document_loaders.diffbot" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.diffbot",shape="record"];
	"langchain_community.document_loaders.dedoc" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.dedoc",shape="record"];
	"dedoc" [label="<f0> MissingModule| <f1> dedoc",shape="record"];
	"langchain_community.document_loaders.dataframe" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.dataframe",shape="record"];
	"modin" [label="<f0> MissingModule| <f1> modin",shape="record"];
	"langchain_community.document_loaders.datadog_logs" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.datadog_logs",shape="record"];
	"'datadog_api_client.v2'" [label="<f0> MissingModule| <f1> 'datadog_api_client.v2'",shape="record"];
	"datadog_api_client" [label="<f0> MissingModule| <f1> datadog_api_client",shape="record"];
	"langchain_community.document_loaders.cube_semantic" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.cube_semantic",shape="record"];
	"langchain_community.document_loaders.csv_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.csv_loader",shape="record"];
	"langchain_community.document_loaders.couchbase" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.couchbase",shape="record"];
	"'couchbase.options'" [label="<f0> MissingModule| <f1> 'couchbase.options'",shape="record"];
	"'couchbase.cluster'" [label="<f0> MissingModule| <f1> 'couchbase.cluster'",shape="record"];
	"couchbase" [label="<f0> MissingModule| <f1> couchbase",shape="record"];
	"langchain_community.document_loaders.conllu" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.conllu",shape="record"];
	"langchain_community.document_loaders.confluence" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.confluence",shape="record"];
	"svglib" [label="<f0> MissingModule| <f1> svglib",shape="record"];
	"reportlab" [label="<f0> MissingModule| <f1> reportlab",shape="record"];
	"pdf2image" [label="<f0> MissingModule| <f1> pdf2image",shape="record"];
	"langchain_community.document_loaders.concurrent" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.concurrent",shape="record"];
	"langchain_community.document_loaders.generic" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.generic",shape="record"];
	"langchain_community.document_loaders.college_confidential" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.college_confidential",shape="record"];
	"langchain_community.document_loaders.chromium" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.chromium",shape="record"];
	"langchain_community.document_loaders.chm" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.chm",shape="record"];
	"chm" [label="<f0> MissingModule| <f1> chm",shape="record"];
	"langchain_community.document_loaders.chatgpt" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.chatgpt",shape="record"];
	"langchain_community.document_loaders.cassandra" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.cassandra",shape="record"];
	"cassio" [label="<f0> MissingModule| <f1> cassio",shape="record"];
	"'cassandra.query'" [label="<f0> MissingModule| <f1> 'cassandra.query'",shape="record"];
	"'cassandra.pool'" [label="<f0> MissingModule| <f1> 'cassandra.pool'",shape="record"];
	"langchain_community.utilities.cassandra" [label="<f0> SourceModule| <f1> langchain_community.utilities.cassandra",shape="record"];
	"cassandra" [label="<f0> MissingModule| <f1> cassandra",shape="record"];
	"langchain_community.document_loaders.browserless" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.browserless",shape="record"];
	"langchain_community.document_loaders.browserbase" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.browserbase",shape="record"];
	"browserbase" [label="<f0> MissingModule| <f1> browserbase",shape="record"];
	"langchain_community.document_loaders.brave_search" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.brave_search",shape="record"];
	"langchain_community.document_loaders.blockchain" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.blockchain",shape="record"];
	"langchain_community.document_loaders.blob_loaders" [label="<f0> Package| <f1> langchain_community.document_loaders.blob_loaders",shape="record"];
	"langchain_community.document_loaders.blob_loaders.youtube_audio" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.blob_loaders.youtube_audio",shape="record"];
	"yt_dlp" [label="<f0> Package| <f1> yt_dlp",shape="record"];
	"curl_cffi" [label="<f0> MissingModule| <f1> curl_cffi",shape="record"];
	"secretstorage" [label="<f0> MissingModule| <f1> secretstorage",shape="record"];
	"mutagen" [label="<f0> MissingModule| <f1> mutagen",shape="record"];
	"urllib3.contrib.securetransport" [label="<f0> SourceModule| <f1> urllib3.contrib.securetransport",shape="record"];
	"urllib3.contrib.ntlmpool" [label="<f0> SourceModule| <f1> urllib3.contrib.ntlmpool",shape="record"];
	"ntlm" [label="<f0> MissingModule| <f1> ntlm",shape="record"];
	"urllib3.contrib.appengine" [label="<f0> SourceModule| <f1> urllib3.contrib.appengine",shape="record"];
	"urllib3.contrib._securetransport.low_level" [label="<f0> SourceModule| <f1> urllib3.contrib._securetransport.low_level",shape="record"];
	"urllib3.contrib._securetransport.bindings" [label="<f0> SourceModule| <f1> urllib3.contrib._securetransport.bindings",shape="record"];
	"urllib3.contrib._securetransport" [label="<f0> Package| <f1> urllib3.contrib._securetransport",shape="record"];
	"requests.help" [label="<f0> SourceModule| <f1> requests.help",shape="record"];
	"Cryptodome" [label="<f0> MissingModule| <f1> Cryptodome",shape="record"];
	"yt_dlp.utils._deprecated" [label="<f0> SourceModule| <f1> yt_dlp.utils._deprecated",shape="record"];
	"yt_dlp.compat.compat_utils" [label="<f0> SourceModule| <f1> yt_dlp.compat.compat_utils",shape="record"];
	"yt_dlp.compat" [label="<f0> Package| <f1> yt_dlp.compat",shape="record"];
	"yt_dlp.compat.shutil" [label="<f0> SourceModule| <f1> yt_dlp.compat.shutil",shape="record"];
	"yt_dlp.compat.urllib" [label="<f0> Package| <f1> yt_dlp.compat.urllib",shape="record"];
	"yt_dlp.compat.urllib.request" [label="<f0> SourceModule| <f1> yt_dlp.compat.urllib.request",shape="record"];
	"yt_dlp.compat.imghdr" [label="<f0> SourceModule| <f1> yt_dlp.compat.imghdr",shape="record"];
	"yt_dlp.networking" [label="<f0> Package| <f1> yt_dlp.networking",shape="record"];
	"yt_dlp.networking._curlcffi" [label="<f0> SourceModule| <f1> yt_dlp.networking._curlcffi",shape="record"];
	"'curl_cffi.const'" [label="<f0> MissingModule| <f1> 'curl_cffi.const'",shape="record"];
	"'curl_cffi.requests'" [label="<f0> MissingModule| <f1> 'curl_cffi.requests'",shape="record"];
	"yt_dlp.dependencies" [label="<f0> Package| <f1> yt_dlp.dependencies",shape="record"];
	"yt_dlp.dependencies.Cryptodome" [label="<f0> SourceModule| <f1> yt_dlp.dependencies.Cryptodome",shape="record"];
	"'Crypto.PublicKey'" [label="<f0> MissingModule| <f1> 'Crypto.PublicKey'",shape="record"];
	"'Crypto.Hash'" [label="<f0> MissingModule| <f1> 'Crypto.Hash'",shape="record"];
	"'Crypto.Cipher'" [label="<f0> MissingModule| <f1> 'Crypto.Cipher'",shape="record"];
	"'Cryptodome.PublicKey'" [label="<f0> MissingModule| <f1> 'Cryptodome.PublicKey'",shape="record"];
	"'Cryptodome.Hash'" [label="<f0> MissingModule| <f1> 'Cryptodome.Hash'",shape="record"];
	"'Cryptodome.Cipher'" [label="<f0> MissingModule| <f1> 'Cryptodome.Cipher'",shape="record"];
	"Crypto" [label="<f0> MissingModule| <f1> Crypto",shape="record"];
	"xattr" [label="<f0> MissingModule| <f1> xattr",shape="record"];
	"yt_dlp.networking.exceptions" [label="<f0> SourceModule| <f1> yt_dlp.networking.exceptions",shape="record"];
	"yt_dlp.networking._helper" [label="<f0> SourceModule| <f1> yt_dlp.networking._helper",shape="record"];
	"yt_dlp.socks" [label="<f0> SourceModule| <f1> yt_dlp.socks",shape="record"];
	"yt_dlp.networking._websockets" [label="<f0> SourceModule| <f1> yt_dlp.networking._websockets",shape="record"];
	"'websockets.uri'" [label="<f0> MissingModule| <f1> 'websockets.uri'",shape="record"];
	"'websockets.version'" [label="<f0> MissingModule| <f1> 'websockets.version'",shape="record"];
	"yt_dlp.networking.websocket" [label="<f0> SourceModule| <f1> yt_dlp.networking.websocket",shape="record"];
	"yt_dlp.networking._requests" [label="<f0> SourceModule| <f1> yt_dlp.networking._requests",shape="record"];
	"yt_dlp.networking._urllib" [label="<f0> SourceModule| <f1> yt_dlp.networking._urllib",shape="record"];
	"yt_dlp.networking.common" [label="<f0> SourceModule| <f1> yt_dlp.networking.common",shape="record"];
	"yt_dlp.utils.deprecation_warning" [label="<f0> MissingModule| <f1> yt_dlp.utils.deprecation_warning",shape="record"];
	"yt_dlp.compat.types" [label="<f0> SourceModule| <f1> yt_dlp.compat.types",shape="record"];
	"yt_dlp.utils._legacy" [label="<f0> SourceModule| <f1> yt_dlp.utils._legacy",shape="record"];
	"yt_dlp.utils.traversal" [label="<f0> SourceModule| <f1> yt_dlp.utils.traversal",shape="record"];
	"yt_dlp.compat._deprecated" [label="<f0> SourceModule| <f1> yt_dlp.compat._deprecated",shape="record"];
	"yt_dlp.compat._legacy" [label="<f0> SourceModule| <f1> yt_dlp.compat._legacy",shape="record"];
	"yt_dlp.extractor.generic" [label="<f0> SourceModule| <f1> yt_dlp.extractor.generic",shape="record"];
	"yt_dlp.extractor.youtube" [label="<f0> Package| <f1> yt_dlp.extractor.youtube",shape="record"];
	"yt_dlp.extractor.youtube._video" [label="<f0> SourceModule| <f1> yt_dlp.extractor.youtube._video",shape="record"];
	"yt_dlp.utils.remove_end" [label="<f0> MissingModule| <f1> yt_dlp.utils.remove_end",shape="record"];
	"yt_dlp.jsinterp" [label="<f0> SourceModule| <f1> yt_dlp.jsinterp",shape="record"];
	"yt_dlp.extractor.openload" [label="<f0> SourceModule| <f1> yt_dlp.extractor.openload",shape="record"];
	"yt_dlp.utils.Popen" [label="<f0> MissingModule| <f1> yt_dlp.utils.Popen",shape="record"];
	"yt_dlp.extractor.youtube._tab" [label="<f0> SourceModule| <f1> yt_dlp.extractor.youtube._tab",shape="record"];
	"yt_dlp.extractor.youtube._search" [label="<f0> SourceModule| <f1> yt_dlp.extractor.youtube._search",shape="record"];
	"yt_dlp.extractor.youtube._redirect" [label="<f0> SourceModule| <f1> yt_dlp.extractor.youtube._redirect",shape="record"];
	"yt_dlp.extractor.youtube._notifications" [label="<f0> SourceModule| <f1> yt_dlp.extractor.youtube._notifications",shape="record"];
	"yt_dlp.extractor.youtube._mistakes" [label="<f0> SourceModule| <f1> yt_dlp.extractor.youtube._mistakes",shape="record"];
	"yt_dlp.extractor.youtube._clip" [label="<f0> SourceModule| <f1> yt_dlp.extractor.youtube._clip",shape="record"];
	"yt_dlp.extractor.youtube._base" [label="<f0> SourceModule| <f1> yt_dlp.extractor.youtube._base",shape="record"];
	"yt_dlp.extractor.commonprotocols" [label="<f0> SourceModule| <f1> yt_dlp.extractor.commonprotocols",shape="record"];
	"yt_dlp.extractor.common" [label="<f0> SourceModule| <f1> yt_dlp.extractor.common",shape="record"];
	"yt_dlp.downloader.hls" [label="<f0> SourceModule| <f1> yt_dlp.downloader.hls",shape="record"];
	"yt_dlp.downloader.fragment" [label="<f0> SourceModule| <f1> yt_dlp.downloader.fragment",shape="record"];
	"yt_dlp.utils.progress" [label="<f0> SourceModule| <f1> yt_dlp.utils.progress",shape="record"];
	"yt_dlp.aes" [label="<f0> SourceModule| <f1> yt_dlp.aes",shape="record"];
	"yt_dlp.downloader.http" [label="<f0> SourceModule| <f1> yt_dlp.downloader.http",shape="record"];
	"yt_dlp.downloader.common" [label="<f0> SourceModule| <f1> yt_dlp.downloader.common",shape="record"];
	"yt_dlp.minicurses" [label="<f0> SourceModule| <f1> yt_dlp.minicurses",shape="record"];
	"yt_dlp.downloader" [label="<f0> Package| <f1> yt_dlp.downloader",shape="record"];
	"yt_dlp.downloader.bunnycdn" [label="<f0> SourceModule| <f1> yt_dlp.downloader.bunnycdn",shape="record"];
	"yt_dlp.downloader.youtube_live_chat" [label="<f0> SourceModule| <f1> yt_dlp.downloader.youtube_live_chat",shape="record"];
	"yt_dlp.downloader.websocket" [label="<f0> SourceModule| <f1> yt_dlp.downloader.websocket",shape="record"];
	"yt_dlp.downloader.rtsp" [label="<f0> SourceModule| <f1> yt_dlp.downloader.rtsp",shape="record"];
	"yt_dlp.downloader.rtmp" [label="<f0> SourceModule| <f1> yt_dlp.downloader.rtmp",shape="record"];
	"yt_dlp.downloader.niconico" [label="<f0> SourceModule| <f1> yt_dlp.downloader.niconico",shape="record"];
	"yt_dlp.downloader.mhtml" [label="<f0> SourceModule| <f1> yt_dlp.downloader.mhtml",shape="record"];
	"yt_dlp.version" [label="<f0> SourceModule| <f1> yt_dlp.version",shape="record"];
	"yt_dlp.downloader.ism" [label="<f0> SourceModule| <f1> yt_dlp.downloader.ism",shape="record"];
	"yt_dlp.downloader.fc2" [label="<f0> SourceModule| <f1> yt_dlp.downloader.fc2",shape="record"];
	"yt_dlp.downloader.dash" [label="<f0> SourceModule| <f1> yt_dlp.downloader.dash",shape="record"];
	"yt_dlp.downloader.f4m" [label="<f0> SourceModule| <f1> yt_dlp.downloader.f4m",shape="record"];
	"yt_dlp.YoutubeDL" [label="<f0> SourceModule| <f1> yt_dlp.YoutubeDL",shape="record"];
	"yt_dlp.utils.system_identifier" [label="<f0> MissingModule| <f1> yt_dlp.utils.system_identifier",shape="record"];
	"yt_dlp.postprocessor.ffmpeg" [label="<f0> SourceModule| <f1> yt_dlp.postprocessor.ffmpeg",shape="record"];
	"yt_dlp.postprocessor.common" [label="<f0> SourceModule| <f1> yt_dlp.postprocessor.common",shape="record"];
	"yt_dlp.cache" [label="<f0> SourceModule| <f1> yt_dlp.cache",shape="record"];
	"yt_dlp.utils.version_tuple" [label="<f0> MissingModule| <f1> yt_dlp.utils.version_tuple",shape="record"];
	"yt_dlp.utils._utils" [label="<f0> SourceModule| <f1> yt_dlp.utils._utils",shape="record"];
	"yt_dlp.utils.networking" [label="<f0> SourceModule| <f1> yt_dlp.utils.networking",shape="record"];
	"yt_dlp.utils.shell_quote" [label="<f0> MissingModule| <f1> yt_dlp.utils.shell_quote",shape="record"];
	"yt_dlp.utils.format_field" [label="<f0> MissingModule| <f1> yt_dlp.utils.format_field",shape="record"];
	"yt_dlp.utils.NO_DEFAULT" [label="<f0> MissingModule| <f1> yt_dlp.utils.NO_DEFAULT",shape="record"];
	"yt_dlp.utils" [label="<f0> Package| <f1> yt_dlp.utils",shape="record"];
	"yt_dlp.update" [label="<f0> SourceModule| <f1> yt_dlp.update",shape="record"];
	"yt_dlp.postprocessor" [label="<f0> Package| <f1> yt_dlp.postprocessor",shape="record"];
	"yt_dlp.postprocessor.xattrpp" [label="<f0> SourceModule| <f1> yt_dlp.postprocessor.xattrpp",shape="record"];
	"yt_dlp.postprocessor.sponsorblock" [label="<f0> SourceModule| <f1> yt_dlp.postprocessor.sponsorblock",shape="record"];
	"yt_dlp.postprocessor.sponskrub" [label="<f0> SourceModule| <f1> yt_dlp.postprocessor.sponskrub",shape="record"];
	"yt_dlp.postprocessor.movefilesafterdownload" [label="<f0> SourceModule| <f1> yt_dlp.postprocessor.movefilesafterdownload",shape="record"];
	"yt_dlp.postprocessor.modify_chapters" [label="<f0> SourceModule| <f1> yt_dlp.postprocessor.modify_chapters",shape="record"];
	"yt_dlp.postprocessor.metadataparser" [label="<f0> SourceModule| <f1> yt_dlp.postprocessor.metadataparser",shape="record"];
	"yt_dlp.postprocessor.exec" [label="<f0> SourceModule| <f1> yt_dlp.postprocessor.exec",shape="record"];
	"yt_dlp.postprocessor.embedthumbnail" [label="<f0> SourceModule| <f1> yt_dlp.postprocessor.embedthumbnail",shape="record"];
	"'mutagen.oggvorbis'" [label="<f0> MissingModule| <f1> 'mutagen.oggvorbis'",shape="record"];
	"'mutagen.oggopus'" [label="<f0> MissingModule| <f1> 'mutagen.oggopus'",shape="record"];
	"'mutagen.mp4'" [label="<f0> MissingModule| <f1> 'mutagen.mp4'",shape="record"];
	"'mutagen.flac'" [label="<f0> MissingModule| <f1> 'mutagen.flac'",shape="record"];
	"yt_dlp.plugins" [label="<f0> SourceModule| <f1> yt_dlp.plugins",shape="record"];
	"yt_dlp.options" [label="<f0> SourceModule| <f1> yt_dlp.options",shape="record"];
	"yt_dlp.globals" [label="<f0> SourceModule| <f1> yt_dlp.globals",shape="record"];
	"yt_dlp.networking.impersonate" [label="<f0> SourceModule| <f1> yt_dlp.networking.impersonate",shape="record"];
	"yt_dlp.extractor.adobepass" [label="<f0> SourceModule| <f1> yt_dlp.extractor.adobepass",shape="record"];
	"yt_dlp.extractor" [label="<f0> Package| <f1> yt_dlp.extractor",shape="record"];
	"yt_dlp.extractor.extractors" [label="<f0> SourceModule| <f1> yt_dlp.extractor.extractors",shape="record"];
	"yt_dlp.extractor.lazy_extractors" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lazy_extractors",shape="record"];
	"yt_dlp.extractor._extractors" [label="<f0> SourceModule| <f1> yt_dlp.extractor._extractors",shape="record"];
	"yt_dlp.extractor.zype" [label="<f0> SourceModule| <f1> yt_dlp.extractor.zype",shape="record"];
	"yt_dlp.extractor.zoom" [label="<f0> SourceModule| <f1> yt_dlp.extractor.zoom",shape="record"];
	"yt_dlp.extractor.zingmp3" [label="<f0> SourceModule| <f1> yt_dlp.extractor.zingmp3",shape="record"];
	"yt_dlp.extractor.zhihu" [label="<f0> SourceModule| <f1> yt_dlp.extractor.zhihu",shape="record"];
	"yt_dlp.extractor.zetland" [label="<f0> SourceModule| <f1> yt_dlp.extractor.zetland",shape="record"];
	"yt_dlp.extractor.zenporn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.zenporn",shape="record"];
	"yt_dlp.extractor.zeenews" [label="<f0> SourceModule| <f1> yt_dlp.extractor.zeenews",shape="record"];
	"yt_dlp.extractor.zee5" [label="<f0> SourceModule| <f1> yt_dlp.extractor.zee5",shape="record"];
	"yt_dlp.extractor.zdf" [label="<f0> SourceModule| <f1> yt_dlp.extractor.zdf",shape="record"];
	"yt_dlp.extractor.zattoo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.zattoo",shape="record"];
	"yt_dlp.extractor.zapiks" [label="<f0> SourceModule| <f1> yt_dlp.extractor.zapiks",shape="record"];
	"yt_dlp.extractor.zaiko" [label="<f0> SourceModule| <f1> yt_dlp.extractor.zaiko",shape="record"];
	"yt_dlp.extractor.youporn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.youporn",shape="record"];
	"yt_dlp.extractor.younow" [label="<f0> SourceModule| <f1> yt_dlp.extractor.younow",shape="record"];
	"yt_dlp.extractor.youku" [label="<f0> SourceModule| <f1> yt_dlp.extractor.youku",shape="record"];
	"yt_dlp.extractor.youjizz" [label="<f0> SourceModule| <f1> yt_dlp.extractor.youjizz",shape="record"];
	"yt_dlp.extractor.yle_areena" [label="<f0> SourceModule| <f1> yt_dlp.extractor.yle_areena",shape="record"];
	"yt_dlp.extractor.yappy" [label="<f0> SourceModule| <f1> yt_dlp.extractor.yappy",shape="record"];
	"yt_dlp.extractor.yapfiles" [label="<f0> SourceModule| <f1> yt_dlp.extractor.yapfiles",shape="record"];
	"yt_dlp.extractor.yandexvideo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.yandexvideo",shape="record"];
	"yt_dlp.extractor.yandexmusic" [label="<f0> SourceModule| <f1> yt_dlp.extractor.yandexmusic",shape="record"];
	"yt_dlp.extractor.yandexdisk" [label="<f0> SourceModule| <f1> yt_dlp.extractor.yandexdisk",shape="record"];
	"yt_dlp.extractor.yahoo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.yahoo",shape="record"];
	"yt_dlp.extractor.xxxymovies" [label="<f0> SourceModule| <f1> yt_dlp.extractor.xxxymovies",shape="record"];
	"yt_dlp.extractor.xvideos" [label="<f0> SourceModule| <f1> yt_dlp.extractor.xvideos",shape="record"];
	"yt_dlp.extractor.xstream" [label="<f0> SourceModule| <f1> yt_dlp.extractor.xstream",shape="record"];
	"yt_dlp.extractor.xnxx" [label="<f0> SourceModule| <f1> yt_dlp.extractor.xnxx",shape="record"];
	"yt_dlp.extractor.xminus" [label="<f0> SourceModule| <f1> yt_dlp.extractor.xminus",shape="record"];
	"yt_dlp.extractor.xinpianchang" [label="<f0> SourceModule| <f1> yt_dlp.extractor.xinpianchang",shape="record"];
	"yt_dlp.extractor.ximalaya" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ximalaya",shape="record"];
	"yt_dlp.extractor.xiaohongshu" [label="<f0> SourceModule| <f1> yt_dlp.extractor.xiaohongshu",shape="record"];
	"yt_dlp.extractor.xhamster" [label="<f0> SourceModule| <f1> yt_dlp.extractor.xhamster",shape="record"];
	"yt_dlp.extractor.xboxclips" [label="<f0> SourceModule| <f1> yt_dlp.extractor.xboxclips",shape="record"];
	"yt_dlp.extractor.xanimu" [label="<f0> SourceModule| <f1> yt_dlp.extractor.xanimu",shape="record"];
	"yt_dlp.extractor.wykop" [label="<f0> SourceModule| <f1> yt_dlp.extractor.wykop",shape="record"];
	"yt_dlp.extractor.wwe" [label="<f0> SourceModule| <f1> yt_dlp.extractor.wwe",shape="record"];
	"yt_dlp.extractor.wsj" [label="<f0> SourceModule| <f1> yt_dlp.extractor.wsj",shape="record"];
	"yt_dlp.extractor.wrestleuniverse" [label="<f0> SourceModule| <f1> yt_dlp.extractor.wrestleuniverse",shape="record"];
	"yt_dlp.extractor.wppilot" [label="<f0> SourceModule| <f1> yt_dlp.extractor.wppilot",shape="record"];
	"yt_dlp.extractor.worldstarhiphop" [label="<f0> SourceModule| <f1> yt_dlp.extractor.worldstarhiphop",shape="record"];
	"yt_dlp.extractor.wordpress" [label="<f0> SourceModule| <f1> yt_dlp.extractor.wordpress",shape="record"];
	"yt_dlp.extractor.wistia" [label="<f0> SourceModule| <f1> yt_dlp.extractor.wistia",shape="record"];
	"yt_dlp.extractor.wimtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.wimtv",shape="record"];
	"yt_dlp.extractor.wimbledon" [label="<f0> SourceModule| <f1> yt_dlp.extractor.wimbledon",shape="record"];
	"yt_dlp.extractor.wikimedia" [label="<f0> SourceModule| <f1> yt_dlp.extractor.wikimedia",shape="record"];
	"yt_dlp.extractor.whyp" [label="<f0> SourceModule| <f1> yt_dlp.extractor.whyp",shape="record"];
	"yt_dlp.extractor.whowatch" [label="<f0> SourceModule| <f1> yt_dlp.extractor.whowatch",shape="record"];
	"yt_dlp.extractor.weyyak" [label="<f0> SourceModule| <f1> yt_dlp.extractor.weyyak",shape="record"];
	"yt_dlp.extractor.wevidi" [label="<f0> SourceModule| <f1> yt_dlp.extractor.wevidi",shape="record"];
	"yt_dlp.extractor.weverse" [label="<f0> SourceModule| <f1> yt_dlp.extractor.weverse",shape="record"];
	"yt_dlp.extractor.weiqitv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.weiqitv",shape="record"];
	"yt_dlp.extractor.weibo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.weibo",shape="record"];
	"yt_dlp.extractor.webofstories" [label="<f0> SourceModule| <f1> yt_dlp.extractor.webofstories",shape="record"];
	"yt_dlp.extractor.webcaster" [label="<f0> SourceModule| <f1> yt_dlp.extractor.webcaster",shape="record"];
	"yt_dlp.extractor.webcamerapl" [label="<f0> SourceModule| <f1> yt_dlp.extractor.webcamerapl",shape="record"];
	"yt_dlp.extractor.wdr" [label="<f0> SourceModule| <f1> yt_dlp.extractor.wdr",shape="record"];
	"yt_dlp.extractor.wat" [label="<f0> SourceModule| <f1> yt_dlp.extractor.wat",shape="record"];
	"yt_dlp.extractor.washingtonpost" [label="<f0> SourceModule| <f1> yt_dlp.extractor.washingtonpost",shape="record"];
	"yt_dlp.extractor.walla" [label="<f0> SourceModule| <f1> yt_dlp.extractor.walla",shape="record"];
	"yt_dlp.extractor.vvvvid" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vvvvid",shape="record"];
	"yt_dlp.extractor.vuclip" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vuclip",shape="record"];
	"yt_dlp.extractor.vtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vtv",shape="record"];
	"yt_dlp.extractor.vtm" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vtm",shape="record"];
	"yt_dlp.extractor.vrt" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vrt",shape="record"];
	"yt_dlp.extractor.vrsquare" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vrsquare",shape="record"];
	"yt_dlp.extractor.voxmedia" [label="<f0> SourceModule| <f1> yt_dlp.extractor.voxmedia",shape="record"];
	"yt_dlp.extractor.once" [label="<f0> SourceModule| <f1> yt_dlp.extractor.once",shape="record"];
	"yt_dlp.extractor.volejtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.volejtv",shape="record"];
	"yt_dlp.extractor.voicy" [label="<f0> SourceModule| <f1> yt_dlp.extractor.voicy",shape="record"];
	"yt_dlp.extractor.vodplatform" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vodplatform",shape="record"];
	"yt_dlp.extractor.vodpl" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vodpl",shape="record"];
	"yt_dlp.extractor.vocaroo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vocaroo",shape="record"];
	"yt_dlp.extractor.vk" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vk",shape="record"];
	"yt_dlp.extractor.viu" [label="<f0> SourceModule| <f1> yt_dlp.extractor.viu",shape="record"];
	"yt_dlp.extractor.viqeo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.viqeo",shape="record"];
	"yt_dlp.extractor.viously" [label="<f0> SourceModule| <f1> yt_dlp.extractor.viously",shape="record"];
	"yt_dlp.extractor.vimm" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vimm",shape="record"];
	"yt_dlp.extractor.vimeo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vimeo",shape="record"];
	"yt_dlp.extractor.viidea" [label="<f0> SourceModule| <f1> yt_dlp.extractor.viidea",shape="record"];
	"yt_dlp.extractor.viewlift" [label="<f0> SourceModule| <f1> yt_dlp.extractor.viewlift",shape="record"];
	"yt_dlp.extractor.vidyard" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vidyard",shape="record"];
	"yt_dlp.extractor.vidly" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vidly",shape="record"];
	"yt_dlp.extractor.vidlii" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vidlii",shape="record"];
	"yt_dlp.extractor.vidio" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vidio",shape="record"];
	"yt_dlp.extractor.vidflex" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vidflex",shape="record"];
	"yt_dlp.extractor.videopress" [label="<f0> SourceModule| <f1> yt_dlp.extractor.videopress",shape="record"];
	"yt_dlp.extractor.videomore" [label="<f0> SourceModule| <f1> yt_dlp.extractor.videomore",shape="record"];
	"yt_dlp.extractor.videoken" [label="<f0> SourceModule| <f1> yt_dlp.extractor.videoken",shape="record"];
	"yt_dlp.extractor.videofyme" [label="<f0> SourceModule| <f1> yt_dlp.extractor.videofyme",shape="record"];
	"yt_dlp.extractor.videodetective" [label="<f0> SourceModule| <f1> yt_dlp.extractor.videodetective",shape="record"];
	"yt_dlp.extractor.videocampus_sachsen" [label="<f0> SourceModule| <f1> yt_dlp.extractor.videocampus_sachsen",shape="record"];
	"yt_dlp.extractor.videa" [label="<f0> SourceModule| <f1> yt_dlp.extractor.videa",shape="record"];
	"yt_dlp.extractor.viddler" [label="<f0> SourceModule| <f1> yt_dlp.extractor.viddler",shape="record"];
	"yt_dlp.extractor.vice" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vice",shape="record"];
	"yt_dlp.extractor.vh1" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vh1",shape="record"];
	"yt_dlp.extractor.vgtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vgtv",shape="record"];
	"yt_dlp.extractor.vevo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vevo",shape="record"];
	"yt_dlp.extractor.vesti" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vesti",shape="record"];
	"yt_dlp.extractor.veo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.veo",shape="record"];
	"yt_dlp.extractor.vbox7" [label="<f0> SourceModule| <f1> yt_dlp.extractor.vbox7",shape="record"];
	"yt_dlp.extractor.varzesh3" [label="<f0> SourceModule| <f1> yt_dlp.extractor.varzesh3",shape="record"];
	"yt_dlp.extractor.utreon" [label="<f0> SourceModule| <f1> yt_dlp.extractor.utreon",shape="record"];
	"yt_dlp.extractor.ustudio" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ustudio",shape="record"];
	"yt_dlp.extractor.ustream" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ustream",shape="record"];
	"yt_dlp.extractor.usatoday" [label="<f0> SourceModule| <f1> yt_dlp.extractor.usatoday",shape="record"];
	"yt_dlp.extractor.usanetwork" [label="<f0> SourceModule| <f1> yt_dlp.extractor.usanetwork",shape="record"];
	"yt_dlp.extractor.urplay" [label="<f0> SourceModule| <f1> yt_dlp.extractor.urplay",shape="record"];
	"yt_dlp.extractor.urort" [label="<f0> SourceModule| <f1> yt_dlp.extractor.urort",shape="record"];
	"yt_dlp.extractor.uplynk" [label="<f0> SourceModule| <f1> yt_dlp.extractor.uplynk",shape="record"];
	"yt_dlp.extractor.uol" [label="<f0> SourceModule| <f1> yt_dlp.extractor.uol",shape="record"];
	"yt_dlp.extractor.unsupported" [label="<f0> SourceModule| <f1> yt_dlp.extractor.unsupported",shape="record"];
	"yt_dlp.extractor.unity" [label="<f0> SourceModule| <f1> yt_dlp.extractor.unity",shape="record"];
	"yt_dlp.extractor.unistra" [label="<f0> SourceModule| <f1> yt_dlp.extractor.unistra",shape="record"];
	"yt_dlp.extractor.umg" [label="<f0> SourceModule| <f1> yt_dlp.extractor.umg",shape="record"];
	"yt_dlp.extractor.uliza" [label="<f0> SourceModule| <f1> yt_dlp.extractor.uliza",shape="record"];
	"yt_dlp.extractor.uktvplay" [label="<f0> SourceModule| <f1> yt_dlp.extractor.uktvplay",shape="record"];
	"yt_dlp.extractor.ukcolumn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ukcolumn",shape="record"];
	"yt_dlp.extractor.ufctv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ufctv",shape="record"];
	"yt_dlp.extractor.imggaming" [label="<f0> SourceModule| <f1> yt_dlp.extractor.imggaming",shape="record"];
	"yt_dlp.extractor.udn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.udn",shape="record"];
	"yt_dlp.extractor.udemy" [label="<f0> SourceModule| <f1> yt_dlp.extractor.udemy",shape="record"];
	"yt_dlp.extractor.txxx" [label="<f0> SourceModule| <f1> yt_dlp.extractor.txxx",shape="record"];
	"yt_dlp.extractor.twitter" [label="<f0> SourceModule| <f1> yt_dlp.extractor.twitter",shape="record"];
	"yt_dlp.extractor.twitch" [label="<f0> SourceModule| <f1> yt_dlp.extractor.twitch",shape="record"];
	"yt_dlp.extractor.twitcasting" [label="<f0> SourceModule| <f1> yt_dlp.extractor.twitcasting",shape="record"];
	"yt_dlp.extractor.twentythreevideo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.twentythreevideo",shape="record"];
	"yt_dlp.extractor.twentymin" [label="<f0> SourceModule| <f1> yt_dlp.extractor.twentymin",shape="record"];
	"yt_dlp.extractor.tweakers" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tweakers",shape="record"];
	"yt_dlp.extractor.tvw" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tvw",shape="record"];
	"yt_dlp.extractor.tvplayer" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tvplayer",shape="record"];
	"yt_dlp.extractor.tvplay" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tvplay",shape="record"];
	"yt_dlp.extractor.tvp" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tvp",shape="record"];
	"yt_dlp.extractor.tvopengr" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tvopengr",shape="record"];
	"yt_dlp.extractor.tvnoe" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tvnoe",shape="record"];
	"yt_dlp.extractor.tvn24" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tvn24",shape="record"];
	"yt_dlp.extractor.tvland" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tvland",shape="record"];
	"yt_dlp.extractor.tviplayer" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tviplayer",shape="record"];
	"yt_dlp.extractor.tvigle" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tvigle",shape="record"];
	"yt_dlp.extractor.tver" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tver",shape="record"];
	"yt_dlp.extractor.tvc" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tvc",shape="record"];
	"yt_dlp.extractor.tvanouvelles" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tvanouvelles",shape="record"];
	"yt_dlp.extractor.tva" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tva",shape="record"];
	"yt_dlp.extractor.tv24ua" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tv24ua",shape="record"];
	"yt_dlp.extractor.tv5unis" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tv5unis",shape="record"];
	"yt_dlp.extractor.tv5mondeplus" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tv5mondeplus",shape="record"];
	"yt_dlp.extractor.tv4" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tv4",shape="record"];
	"yt_dlp.extractor.tv2hu" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tv2hu",shape="record"];
	"yt_dlp.extractor.tv2dk" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tv2dk",shape="record"];
	"yt_dlp.extractor.tv2" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tv2",shape="record"];
	"yt_dlp.extractor.tunein" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tunein",shape="record"];
	"yt_dlp.extractor.tumblr" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tumblr",shape="record"];
	"yt_dlp.extractor.tubitv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tubitv",shape="record"];
	"yt_dlp.extractor.tubetugraz" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tubetugraz",shape="record"];
	"yt_dlp.extractor.tube8" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tube8",shape="record"];
	"yt_dlp.extractor.trutv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.trutv",shape="record"];
	"yt_dlp.extractor.turner" [label="<f0> SourceModule| <f1> yt_dlp.extractor.turner",shape="record"];
	"yt_dlp.extractor.truth" [label="<f0> SourceModule| <f1> yt_dlp.extractor.truth",shape="record"];
	"yt_dlp.extractor.trunews" [label="<f0> SourceModule| <f1> yt_dlp.extractor.trunews",shape="record"];
	"yt_dlp.extractor.trueid" [label="<f0> SourceModule| <f1> yt_dlp.extractor.trueid",shape="record"];
	"yt_dlp.extractor.trtworld" [label="<f0> SourceModule| <f1> yt_dlp.extractor.trtworld",shape="record"];
	"yt_dlp.extractor.trtcocuk" [label="<f0> SourceModule| <f1> yt_dlp.extractor.trtcocuk",shape="record"];
	"yt_dlp.extractor.trovo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.trovo",shape="record"];
	"yt_dlp.extractor.triller" [label="<f0> SourceModule| <f1> yt_dlp.extractor.triller",shape="record"];
	"yt_dlp.extractor.traileraddict" [label="<f0> SourceModule| <f1> yt_dlp.extractor.traileraddict",shape="record"];
	"yt_dlp.extractor.toypics" [label="<f0> SourceModule| <f1> yt_dlp.extractor.toypics",shape="record"];
	"yt_dlp.extractor.toutv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.toutv",shape="record"];
	"yt_dlp.extractor.toongoggles" [label="<f0> SourceModule| <f1> yt_dlp.extractor.toongoggles",shape="record"];
	"yt_dlp.extractor.tonline" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tonline",shape="record"];
	"yt_dlp.extractor.toggo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.toggo",shape="record"];
	"yt_dlp.extractor.toggle" [label="<f0> SourceModule| <f1> yt_dlp.extractor.toggle",shape="record"];
	"yt_dlp.extractor.tnaflix" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tnaflix",shape="record"];
	"yt_dlp.extractor.tmz" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tmz",shape="record"];
	"yt_dlp.extractor.tiktok" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tiktok",shape="record"];
	"yt_dlp.extractor.threespeak" [label="<f0> SourceModule| <f1> yt_dlp.extractor.threespeak",shape="record"];
	"yt_dlp.extractor.threeqsdn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.threeqsdn",shape="record"];
	"yt_dlp.extractor.thisvid" [label="<f0> SourceModule| <f1> yt_dlp.extractor.thisvid",shape="record"];
	"yt_dlp.extractor.thisoldhouse" [label="<f0> SourceModule| <f1> yt_dlp.extractor.thisoldhouse",shape="record"];
	"yt_dlp.extractor.thisamericanlife" [label="<f0> SourceModule| <f1> yt_dlp.extractor.thisamericanlife",shape="record"];
	"yt_dlp.extractor.theweatherchannel" [label="<f0> SourceModule| <f1> yt_dlp.extractor.theweatherchannel",shape="record"];
	"yt_dlp.extractor.thesun" [label="<f0> SourceModule| <f1> yt_dlp.extractor.thesun",shape="record"];
	"yt_dlp.extractor.thestar" [label="<f0> SourceModule| <f1> yt_dlp.extractor.thestar",shape="record"];
	"yt_dlp.extractor.theplatform" [label="<f0> SourceModule| <f1> yt_dlp.extractor.theplatform",shape="record"];
	"yt_dlp.extractor.theintercept" [label="<f0> SourceModule| <f1> yt_dlp.extractor.theintercept",shape="record"];
	"yt_dlp.extractor.theholetv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.theholetv",shape="record"];
	"yt_dlp.extractor.theguardian" [label="<f0> SourceModule| <f1> yt_dlp.extractor.theguardian",shape="record"];
	"yt_dlp.extractor.tfo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tfo",shape="record"];
	"yt_dlp.extractor.tf1" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tf1",shape="record"];
	"yt_dlp.extractor.testurl" [label="<f0> SourceModule| <f1> yt_dlp.extractor.testurl",shape="record"];
	"yt_dlp.extractor.tenplay" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tenplay",shape="record"];
	"yt_dlp.extractor.tennistv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tennistv",shape="record"];
	"yt_dlp.extractor.tencent" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tencent",shape="record"];
	"yt_dlp.extractor.tempo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tempo",shape="record"];
	"yt_dlp.extractor.telewebion" [label="<f0> SourceModule| <f1> yt_dlp.extractor.telewebion",shape="record"];
	"yt_dlp.extractor.teletask" [label="<f0> SourceModule| <f1> yt_dlp.extractor.teletask",shape="record"];
	"yt_dlp.extractor.telequebec" [label="<f0> SourceModule| <f1> yt_dlp.extractor.telequebec",shape="record"];
	"yt_dlp.extractor.telemundo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.telemundo",shape="record"];
	"yt_dlp.extractor.telemb" [label="<f0> SourceModule| <f1> yt_dlp.extractor.telemb",shape="record"];
	"yt_dlp.extractor.telegram" [label="<f0> SourceModule| <f1> yt_dlp.extractor.telegram",shape="record"];
	"yt_dlp.extractor.telegraaf" [label="<f0> SourceModule| <f1> yt_dlp.extractor.telegraaf",shape="record"];
	"yt_dlp.extractor.telecinco" [label="<f0> SourceModule| <f1> yt_dlp.extractor.telecinco",shape="record"];
	"yt_dlp.extractor.telecaribe" [label="<f0> SourceModule| <f1> yt_dlp.extractor.telecaribe",shape="record"];
	"yt_dlp.extractor.telebruxelles" [label="<f0> SourceModule| <f1> yt_dlp.extractor.telebruxelles",shape="record"];
	"yt_dlp.extractor.tele13" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tele13",shape="record"];
	"yt_dlp.extractor.tele5" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tele5",shape="record"];
	"yt_dlp.extractor.ted" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ted",shape="record"];
	"yt_dlp.extractor.teamtreehouse" [label="<f0> SourceModule| <f1> yt_dlp.extractor.teamtreehouse",shape="record"];
	"yt_dlp.extractor.teamcoco" [label="<f0> SourceModule| <f1> yt_dlp.extractor.teamcoco",shape="record"];
	"yt_dlp.extractor.teachingchannel" [label="<f0> SourceModule| <f1> yt_dlp.extractor.teachingchannel",shape="record"];
	"yt_dlp.extractor.teachertube" [label="<f0> SourceModule| <f1> yt_dlp.extractor.teachertube",shape="record"];
	"yt_dlp.extractor.teachable" [label="<f0> SourceModule| <f1> yt_dlp.extractor.teachable",shape="record"];
	"yt_dlp.extractor.tbsjp" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tbsjp",shape="record"];
	"yt_dlp.extractor.tbs" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tbs",shape="record"];
	"yt_dlp.extractor.tass" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tass",shape="record"];
	"yt_dlp.extractor.taptap" [label="<f0> SourceModule| <f1> yt_dlp.extractor.taptap",shape="record"];
	"yt_dlp.extractor.tagesschau" [label="<f0> SourceModule| <f1> yt_dlp.extractor.tagesschau",shape="record"];
	"yt_dlp.extractor.sztvhu" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sztvhu",shape="record"];
	"yt_dlp.extractor.syvdk" [label="<f0> SourceModule| <f1> yt_dlp.extractor.syvdk",shape="record"];
	"yt_dlp.extractor.syfy" [label="<f0> SourceModule| <f1> yt_dlp.extractor.syfy",shape="record"];
	"yt_dlp.extractor.swearnet" [label="<f0> SourceModule| <f1> yt_dlp.extractor.swearnet",shape="record"];
	"yt_dlp.extractor.svt" [label="<f0> SourceModule| <f1> yt_dlp.extractor.svt",shape="record"];
	"yt_dlp.extractor.sverigesradio" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sverigesradio",shape="record"];
	"yt_dlp.extractor.sunporno" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sunporno",shape="record"];
	"yt_dlp.extractor.substack" [label="<f0> SourceModule| <f1> yt_dlp.extractor.substack",shape="record"];
	"yt_dlp.extractor.subsplash" [label="<f0> SourceModule| <f1> yt_dlp.extractor.subsplash",shape="record"];
	"yt_dlp.extractor.stv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.stv",shape="record"];
	"yt_dlp.extractor.stripchat" [label="<f0> SourceModule| <f1> yt_dlp.extractor.stripchat",shape="record"];
	"yt_dlp.extractor.stretchinternet" [label="<f0> SourceModule| <f1> yt_dlp.extractor.stretchinternet",shape="record"];
	"yt_dlp.extractor.streetvoice" [label="<f0> SourceModule| <f1> yt_dlp.extractor.streetvoice",shape="record"];
	"yt_dlp.extractor.streamcz" [label="<f0> SourceModule| <f1> yt_dlp.extractor.streamcz",shape="record"];
	"yt_dlp.extractor.streamable" [label="<f0> SourceModule| <f1> yt_dlp.extractor.streamable",shape="record"];
	"yt_dlp.extractor.streaks" [label="<f0> SourceModule| <f1> yt_dlp.extractor.streaks",shape="record"];
	"yt_dlp.extractor.storyfire" [label="<f0> SourceModule| <f1> yt_dlp.extractor.storyfire",shape="record"];
	"yt_dlp.extractor.stitcher" [label="<f0> SourceModule| <f1> yt_dlp.extractor.stitcher",shape="record"];
	"yt_dlp.extractor.steam" [label="<f0> SourceModule| <f1> yt_dlp.extractor.steam",shape="record"];
	"yt_dlp.extractor.startv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.startv",shape="record"];
	"yt_dlp.extractor.startrek" [label="<f0> SourceModule| <f1> yt_dlp.extractor.startrek",shape="record"];
	"yt_dlp.extractor.stanfordoc" [label="<f0> SourceModule| <f1> yt_dlp.extractor.stanfordoc",shape="record"];
	"yt_dlp.extractor.stageplus" [label="<f0> SourceModule| <f1> yt_dlp.extractor.stageplus",shape="record"];
	"yt_dlp.extractor.stacommu" [label="<f0> SourceModule| <f1> yt_dlp.extractor.stacommu",shape="record"];
	"yt_dlp.extractor.srmediathek" [label="<f0> SourceModule| <f1> yt_dlp.extractor.srmediathek",shape="record"];
	"yt_dlp.extractor.srgssr" [label="<f0> SourceModule| <f1> yt_dlp.extractor.srgssr",shape="record"];
	"yt_dlp.extractor.sproutvideo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sproutvideo",shape="record"];
	"yt_dlp.extractor.sprout" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sprout",shape="record"];
	"yt_dlp.extractor.springboardplatform" [label="<f0> SourceModule| <f1> yt_dlp.extractor.springboardplatform",shape="record"];
	"yt_dlp.extractor.spreaker" [label="<f0> SourceModule| <f1> yt_dlp.extractor.spreaker",shape="record"];
	"yt_dlp.extractor.spotify" [label="<f0> SourceModule| <f1> yt_dlp.extractor.spotify",shape="record"];
	"yt_dlp.extractor.sportdeutschland" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sportdeutschland",shape="record"];
	"yt_dlp.extractor.sportbox" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sportbox",shape="record"];
	"yt_dlp.extractor.sport5" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sport5",shape="record"];
	"yt_dlp.extractor.spike" [label="<f0> SourceModule| <f1> yt_dlp.extractor.spike",shape="record"];
	"yt_dlp.extractor.spiegel" [label="<f0> SourceModule| <f1> yt_dlp.extractor.spiegel",shape="record"];
	"yt_dlp.extractor.spankbang" [label="<f0> SourceModule| <f1> yt_dlp.extractor.spankbang",shape="record"];
	"yt_dlp.extractor.sovietscloset" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sovietscloset",shape="record"];
	"yt_dlp.extractor.southpark" [label="<f0> SourceModule| <f1> yt_dlp.extractor.southpark",shape="record"];
	"yt_dlp.extractor.soundgasm" [label="<f0> SourceModule| <f1> yt_dlp.extractor.soundgasm",shape="record"];
	"yt_dlp.extractor.soundcloud" [label="<f0> SourceModule| <f1> yt_dlp.extractor.soundcloud",shape="record"];
	"yt_dlp.extractor.sonyliv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sonyliv",shape="record"];
	"yt_dlp.extractor.sohu" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sohu",shape="record"];
	"yt_dlp.extractor.softwhiteunderbelly" [label="<f0> SourceModule| <f1> yt_dlp.extractor.softwhiteunderbelly",shape="record"];
	"yt_dlp.extractor.snotr" [label="<f0> SourceModule| <f1> yt_dlp.extractor.snotr",shape="record"];
	"yt_dlp.extractor.snapchat" [label="<f0> SourceModule| <f1> yt_dlp.extractor.snapchat",shape="record"];
	"yt_dlp.extractor.smotrim" [label="<f0> SourceModule| <f1> yt_dlp.extractor.smotrim",shape="record"];
	"yt_dlp.extractor.slutload" [label="<f0> SourceModule| <f1> yt_dlp.extractor.slutload",shape="record"];
	"yt_dlp.extractor.slideslive" [label="<f0> SourceModule| <f1> yt_dlp.extractor.slideslive",shape="record"];
	"yt_dlp.extractor.slideshare" [label="<f0> SourceModule| <f1> yt_dlp.extractor.slideshare",shape="record"];
	"yt_dlp.extractor.skynewsau" [label="<f0> SourceModule| <f1> yt_dlp.extractor.skynewsau",shape="record"];
	"yt_dlp.extractor.skynewsarabia" [label="<f0> SourceModule| <f1> yt_dlp.extractor.skynewsarabia",shape="record"];
	"yt_dlp.extractor.skylinewebcams" [label="<f0> SourceModule| <f1> yt_dlp.extractor.skylinewebcams",shape="record"];
	"yt_dlp.extractor.skyit" [label="<f0> SourceModule| <f1> yt_dlp.extractor.skyit",shape="record"];
	"yt_dlp.extractor.sky" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sky",shape="record"];
	"yt_dlp.extractor.skeb" [label="<f0> SourceModule| <f1> yt_dlp.extractor.skeb",shape="record"];
	"yt_dlp.extractor.sixplay" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sixplay",shape="record"];
	"yt_dlp.extractor.sina" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sina",shape="record"];
	"yt_dlp.extractor.simplecast" [label="<f0> SourceModule| <f1> yt_dlp.extractor.simplecast",shape="record"];
	"yt_dlp.extractor.sibnet" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sibnet",shape="record"];
	"yt_dlp.extractor.showroomlive" [label="<f0> SourceModule| <f1> yt_dlp.extractor.showroomlive",shape="record"];
	"yt_dlp.extractor.shemaroome" [label="<f0> SourceModule| <f1> yt_dlp.extractor.shemaroome",shape="record"];
	"yt_dlp.extractor.sharevideos" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sharevideos",shape="record"];
	"yt_dlp.extractor.sharepoint" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sharepoint",shape="record"];
	"yt_dlp.extractor.shahid" [label="<f0> SourceModule| <f1> yt_dlp.extractor.shahid",shape="record"];
	"yt_dlp.extractor.aws" [label="<f0> SourceModule| <f1> yt_dlp.extractor.aws",shape="record"];
	"yt_dlp.extractor.seznamzpravy" [label="<f0> SourceModule| <f1> yt_dlp.extractor.seznamzpravy",shape="record"];
	"yt_dlp.extractor.sexu" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sexu",shape="record"];
	"yt_dlp.extractor.sevenplus" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sevenplus",shape="record"];
	"yt_dlp.extractor.servus" [label="<f0> SourceModule| <f1> yt_dlp.extractor.servus",shape="record"];
	"yt_dlp.extractor.sendtonews" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sendtonews",shape="record"];
	"yt_dlp.extractor.senategov" [label="<f0> SourceModule| <f1> yt_dlp.extractor.senategov",shape="record"];
	"yt_dlp.extractor.senalcolombia" [label="<f0> SourceModule| <f1> yt_dlp.extractor.senalcolombia",shape="record"];
	"yt_dlp.extractor.sen" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sen",shape="record"];
	"yt_dlp.extractor.sejmpl" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sejmpl",shape="record"];
	"yt_dlp.extractor.scte" [label="<f0> SourceModule| <f1> yt_dlp.extractor.scte",shape="record"];
	"yt_dlp.extractor.scrolller" [label="<f0> SourceModule| <f1> yt_dlp.extractor.scrolller",shape="record"];
	"yt_dlp.extractor.scrippsnetworks" [label="<f0> SourceModule| <f1> yt_dlp.extractor.scrippsnetworks",shape="record"];
	"yt_dlp.extractor.screenrec" [label="<f0> SourceModule| <f1> yt_dlp.extractor.screenrec",shape="record"];
	"yt_dlp.extractor.screencastomatic" [label="<f0> SourceModule| <f1> yt_dlp.extractor.screencastomatic",shape="record"];
	"yt_dlp.extractor.screencastify" [label="<f0> SourceModule| <f1> yt_dlp.extractor.screencastify",shape="record"];
	"yt_dlp.extractor.screencast" [label="<f0> SourceModule| <f1> yt_dlp.extractor.screencast",shape="record"];
	"yt_dlp.extractor.screen9" [label="<f0> SourceModule| <f1> yt_dlp.extractor.screen9",shape="record"];
	"yt_dlp.extractor.sbscokr" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sbscokr",shape="record"];
	"yt_dlp.extractor.sbs" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sbs",shape="record"];
	"yt_dlp.extractor.sapo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.sapo",shape="record"];
	"yt_dlp.extractor.samplefocus" [label="<f0> SourceModule| <f1> yt_dlp.extractor.samplefocus",shape="record"];
	"yt_dlp.extractor.saitosan" [label="<f0> SourceModule| <f1> yt_dlp.extractor.saitosan",shape="record"];
	"yt_dlp.extractor.safari" [label="<f0> SourceModule| <f1> yt_dlp.extractor.safari",shape="record"];
	"yt_dlp.extractor.s4c" [label="<f0> SourceModule| <f1> yt_dlp.extractor.s4c",shape="record"];
	"yt_dlp.extractor.ruv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ruv",shape="record"];
	"yt_dlp.extractor.ruutu" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ruutu",shape="record"];
	"yt_dlp.extractor.rutv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rutv",shape="record"];
	"yt_dlp.extractor.rutube" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rutube",shape="record"];
	"yt_dlp.extractor.rumble" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rumble",shape="record"];
	"yt_dlp.extractor.rule34video" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rule34video",shape="record"];
	"yt_dlp.extractor.rudovideo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rudovideo",shape="record"];
	"yt_dlp.extractor.rtvslo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rtvslo",shape="record"];
	"yt_dlp.extractor.rtvs" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rtvs",shape="record"];
	"yt_dlp.extractor.rtve" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rtve",shape="record"];
	"yt_dlp.extractor.rtvcplay" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rtvcplay",shape="record"];
	"yt_dlp.extractor.rts" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rts",shape="record"];
	"yt_dlp.extractor.rtrfm" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rtrfm",shape="record"];
	"yt_dlp.extractor.rtp" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rtp",shape="record"];
	"yt_dlp.extractor.rtnews" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rtnews",shape="record"];
	"yt_dlp.extractor.rtlnl" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rtlnl",shape="record"];
	"yt_dlp.extractor.rtl2" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rtl2",shape="record"];
	"yt_dlp.extractor.rte" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rte",shape="record"];
	"yt_dlp.extractor.rozhlas" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rozhlas",shape="record"];
	"yt_dlp.extractor.roya" [label="<f0> SourceModule| <f1> yt_dlp.extractor.roya",shape="record"];
	"yt_dlp.extractor.rottentomatoes" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rottentomatoes",shape="record"];
	"yt_dlp.extractor.roosterteeth" [label="<f0> SourceModule| <f1> yt_dlp.extractor.roosterteeth",shape="record"];
	"yt_dlp.extractor.rokfin" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rokfin",shape="record"];
	"yt_dlp.extractor.rockstargames" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rockstargames",shape="record"];
	"yt_dlp.extractor.rmcdecouverte" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rmcdecouverte",shape="record"];
	"yt_dlp.extractor.rinsefm" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rinsefm",shape="record"];
	"yt_dlp.extractor.ridehome" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ridehome",shape="record"];
	"yt_dlp.extractor.rheinmaintv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rheinmaintv",shape="record"];
	"yt_dlp.extractor.reverbnation" [label="<f0> SourceModule| <f1> yt_dlp.extractor.reverbnation",shape="record"];
	"yt_dlp.extractor.reuters" [label="<f0> SourceModule| <f1> yt_dlp.extractor.reuters",shape="record"];
	"yt_dlp.extractor.restudy" [label="<f0> SourceModule| <f1> yt_dlp.extractor.restudy",shape="record"];
	"yt_dlp.extractor.rentv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rentv",shape="record"];
	"yt_dlp.extractor.redtube" [label="<f0> SourceModule| <f1> yt_dlp.extractor.redtube",shape="record"];
	"yt_dlp.extractor.redgifs" [label="<f0> SourceModule| <f1> yt_dlp.extractor.redgifs",shape="record"];
	"yt_dlp.extractor.redge" [label="<f0> SourceModule| <f1> yt_dlp.extractor.redge",shape="record"];
	"yt_dlp.extractor.reddit" [label="<f0> SourceModule| <f1> yt_dlp.extractor.reddit",shape="record"];
	"yt_dlp.extractor.redbulltv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.redbulltv",shape="record"];
	"yt_dlp.extractor.redbee" [label="<f0> SourceModule| <f1> yt_dlp.extractor.redbee",shape="record"];
	"yt_dlp.extractor.rds" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rds",shape="record"];
	"yt_dlp.extractor.rcti" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rcti",shape="record"];
	"yt_dlp.extractor.rcs" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rcs",shape="record"];
	"yt_dlp.extractor.rbgtum" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rbgtum",shape="record"];
	"yt_dlp.extractor.raywenderlich" [label="<f0> SourceModule| <f1> yt_dlp.extractor.raywenderlich",shape="record"];
	"yt_dlp.extractor.rai" [label="<f0> SourceModule| <f1> yt_dlp.extractor.rai",shape="record"];
	"yt_dlp.extractor.radlive" [label="<f0> SourceModule| <f1> yt_dlp.extractor.radlive",shape="record"];
	"yt_dlp.extractor.radiozet" [label="<f0> SourceModule| <f1> yt_dlp.extractor.radiozet",shape="record"];
	"yt_dlp.extractor.radioradicale" [label="<f0> SourceModule| <f1> yt_dlp.extractor.radioradicale",shape="record"];
	"yt_dlp.extractor.radiokapital" [label="<f0> SourceModule| <f1> yt_dlp.extractor.radiokapital",shape="record"];
	"yt_dlp.extractor.radiojavan" [label="<f0> SourceModule| <f1> yt_dlp.extractor.radiojavan",shape="record"];
	"yt_dlp.extractor.radiofrance" [label="<f0> SourceModule| <f1> yt_dlp.extractor.radiofrance",shape="record"];
	"yt_dlp.extractor.radiode" [label="<f0> SourceModule| <f1> yt_dlp.extractor.radiode",shape="record"];
	"yt_dlp.extractor.radiocomercial" [label="<f0> SourceModule| <f1> yt_dlp.extractor.radiocomercial",shape="record"];
	"yt_dlp.extractor.radiocanada" [label="<f0> SourceModule| <f1> yt_dlp.extractor.radiocanada",shape="record"];
	"yt_dlp.extractor.radiko" [label="<f0> SourceModule| <f1> yt_dlp.extractor.radiko",shape="record"];
	"yt_dlp.extractor.r7" [label="<f0> SourceModule| <f1> yt_dlp.extractor.r7",shape="record"];
	"yt_dlp.extractor.qqmusic" [label="<f0> SourceModule| <f1> yt_dlp.extractor.qqmusic",shape="record"];
	"yt_dlp.extractor.qingting" [label="<f0> SourceModule| <f1> yt_dlp.extractor.qingting",shape="record"];
	"yt_dlp.extractor.qdance" [label="<f0> SourceModule| <f1> yt_dlp.extractor.qdance",shape="record"];
	"yt_dlp.extractor.pyvideo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pyvideo",shape="record"];
	"yt_dlp.extractor.puls4" [label="<f0> SourceModule| <f1> yt_dlp.extractor.puls4",shape="record"];
	"yt_dlp.extractor.puhutv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.puhutv",shape="record"];
	"yt_dlp.extractor.prx" [label="<f0> SourceModule| <f1> yt_dlp.extractor.prx",shape="record"];
	"yt_dlp.extractor.prosiebensat1" [label="<f0> SourceModule| <f1> yt_dlp.extractor.prosiebensat1",shape="record"];
	"yt_dlp.extractor.projectveritas" [label="<f0> SourceModule| <f1> yt_dlp.extractor.projectveritas",shape="record"];
	"yt_dlp.extractor.presstv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.presstv",shape="record"];
	"yt_dlp.extractor.premiershiprugby" [label="<f0> SourceModule| <f1> yt_dlp.extractor.premiershiprugby",shape="record"];
	"yt_dlp.extractor.prankcast" [label="<f0> SourceModule| <f1> yt_dlp.extractor.prankcast",shape="record"];
	"yt_dlp.extractor.pr0gramm" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pr0gramm",shape="record"];
	"yt_dlp.extractor.pornoxo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pornoxo",shape="record"];
	"yt_dlp.extractor.pornovoisines" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pornovoisines",shape="record"];
	"yt_dlp.extractor.pornotube" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pornotube",shape="record"];
	"yt_dlp.extractor.pornhub" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pornhub",shape="record"];
	"yt_dlp.extractor.pornflip" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pornflip",shape="record"];
	"yt_dlp.extractor.pornbox" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pornbox",shape="record"];
	"yt_dlp.extractor.popcorntv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.popcorntv",shape="record"];
	"yt_dlp.extractor.popcorntimes" [label="<f0> SourceModule| <f1> yt_dlp.extractor.popcorntimes",shape="record"];
	"yt_dlp.extractor.polskieradio" [label="<f0> SourceModule| <f1> yt_dlp.extractor.polskieradio",shape="record"];
	"yt_dlp.extractor.polsatgo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.polsatgo",shape="record"];
	"yt_dlp.extractor.pokergo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pokergo",shape="record"];
	"yt_dlp.extractor.podomatic" [label="<f0> SourceModule| <f1> yt_dlp.extractor.podomatic",shape="record"];
	"yt_dlp.extractor.podchaser" [label="<f0> SourceModule| <f1> yt_dlp.extractor.podchaser",shape="record"];
	"yt_dlp.extractor.podbayfm" [label="<f0> SourceModule| <f1> yt_dlp.extractor.podbayfm",shape="record"];
	"yt_dlp.extractor.plvideo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.plvideo",shape="record"];
	"yt_dlp.extractor.plutotv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.plutotv",shape="record"];
	"yt_dlp.extractor.pluralsight" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pluralsight",shape="record"];
	"yt_dlp.extractor.playwire" [label="<f0> SourceModule| <f1> yt_dlp.extractor.playwire",shape="record"];
	"yt_dlp.extractor.playtvak" [label="<f0> SourceModule| <f1> yt_dlp.extractor.playtvak",shape="record"];
	"yt_dlp.extractor.playsuisse" [label="<f0> SourceModule| <f1> yt_dlp.extractor.playsuisse",shape="record"];
	"yt_dlp.extractor.playplustv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.playplustv",shape="record"];
	"yt_dlp.extractor.platzi" [label="<f0> SourceModule| <f1> yt_dlp.extractor.platzi",shape="record"];
	"yt_dlp.extractor.planetmarathi" [label="<f0> SourceModule| <f1> yt_dlp.extractor.planetmarathi",shape="record"];
	"yt_dlp.extractor.pladform" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pladform",shape="record"];
	"yt_dlp.extractor.pixivsketch" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pixivsketch",shape="record"];
	"yt_dlp.extractor.piramidetv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.piramidetv",shape="record"];
	"yt_dlp.extractor.pinterest" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pinterest",shape="record"];
	"yt_dlp.extractor.pinkbike" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pinkbike",shape="record"];
	"yt_dlp.extractor.piksel" [label="<f0> SourceModule| <f1> yt_dlp.extractor.piksel",shape="record"];
	"yt_dlp.extractor.picarto" [label="<f0> SourceModule| <f1> yt_dlp.extractor.picarto",shape="record"];
	"yt_dlp.extractor.piapro" [label="<f0> SourceModule| <f1> yt_dlp.extractor.piapro",shape="record"];
	"yt_dlp.extractor.pialive" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pialive",shape="record"];
	"yt_dlp.extractor.photobucket" [label="<f0> SourceModule| <f1> yt_dlp.extractor.photobucket",shape="record"];
	"yt_dlp.extractor.phoenix" [label="<f0> SourceModule| <f1> yt_dlp.extractor.phoenix",shape="record"];
	"yt_dlp.extractor.philharmoniedeparis" [label="<f0> SourceModule| <f1> yt_dlp.extractor.philharmoniedeparis",shape="record"];
	"yt_dlp.extractor.pgatour" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pgatour",shape="record"];
	"yt_dlp.extractor.periscope" [label="<f0> SourceModule| <f1> yt_dlp.extractor.periscope",shape="record"];
	"yt_dlp.extractor.performgroup" [label="<f0> SourceModule| <f1> yt_dlp.extractor.performgroup",shape="record"];
	"yt_dlp.extractor.peloton" [label="<f0> SourceModule| <f1> yt_dlp.extractor.peloton",shape="record"];
	"yt_dlp.extractor.peertv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.peertv",shape="record"];
	"yt_dlp.extractor.peertube" [label="<f0> SourceModule| <f1> yt_dlp.extractor.peertube",shape="record"];
	"yt_dlp.extractor.peekvids" [label="<f0> SourceModule| <f1> yt_dlp.extractor.peekvids",shape="record"];
	"yt_dlp.extractor.pearvideo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pearvideo",shape="record"];
	"yt_dlp.extractor.pbs" [label="<f0> SourceModule| <f1> yt_dlp.extractor.pbs",shape="record"];
	"yt_dlp.extractor.patreon" [label="<f0> SourceModule| <f1> yt_dlp.extractor.patreon",shape="record"];
	"yt_dlp.extractor.parti" [label="<f0> SourceModule| <f1> yt_dlp.extractor.parti",shape="record"];
	"yt_dlp.extractor.parlview" [label="<f0> SourceModule| <f1> yt_dlp.extractor.parlview",shape="record"];
	"yt_dlp.extractor.parler" [label="<f0> SourceModule| <f1> yt_dlp.extractor.parler",shape="record"];
	"yt_dlp.extractor.paramountplus" [label="<f0> SourceModule| <f1> yt_dlp.extractor.paramountplus",shape="record"];
	"yt_dlp.extractor.panopto" [label="<f0> SourceModule| <f1> yt_dlp.extractor.panopto",shape="record"];
	"yt_dlp.extractor.palcomp3" [label="<f0> SourceModule| <f1> yt_dlp.extractor.palcomp3",shape="record"];
	"yt_dlp.extractor.packtpub" [label="<f0> SourceModule| <f1> yt_dlp.extractor.packtpub",shape="record"];
	"yt_dlp.extractor.owncloud" [label="<f0> SourceModule| <f1> yt_dlp.extractor.owncloud",shape="record"];
	"yt_dlp.extractor.outsidetv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.outsidetv",shape="record"];
	"yt_dlp.extractor.orf" [label="<f0> SourceModule| <f1> yt_dlp.extractor.orf",shape="record"];
	"yt_dlp.extractor.ora" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ora",shape="record"];
	"yt_dlp.extractor.openrec" [label="<f0> SourceModule| <f1> yt_dlp.extractor.openrec",shape="record"];
	"yt_dlp.extractor.opencast" [label="<f0> SourceModule| <f1> yt_dlp.extractor.opencast",shape="record"];
	"yt_dlp.extractor.onionstudios" [label="<f0> SourceModule| <f1> yt_dlp.extractor.onionstudios",shape="record"];
	"yt_dlp.extractor.onet" [label="<f0> SourceModule| <f1> yt_dlp.extractor.onet",shape="record"];
	"yt_dlp.extractor.oneplace" [label="<f0> SourceModule| <f1> yt_dlp.extractor.oneplace",shape="record"];
	"yt_dlp.extractor.onenewsnz" [label="<f0> SourceModule| <f1> yt_dlp.extractor.onenewsnz",shape="record"];
	"yt_dlp.extractor.onefootball" [label="<f0> SourceModule| <f1> yt_dlp.extractor.onefootball",shape="record"];
	"yt_dlp.extractor.ondemandkorea" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ondemandkorea",shape="record"];
	"yt_dlp.extractor.on24" [label="<f0> SourceModule| <f1> yt_dlp.extractor.on24",shape="record"];
	"yt_dlp.extractor.olympics" [label="<f0> SourceModule| <f1> yt_dlp.extractor.olympics",shape="record"];
	"yt_dlp.extractor.oktoberfesttv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.oktoberfesttv",shape="record"];
	"yt_dlp.extractor.oftv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.oftv",shape="record"];
	"yt_dlp.extractor.odnoklassniki" [label="<f0> SourceModule| <f1> yt_dlp.extractor.odnoklassniki",shape="record"];
	"yt_dlp.extractor.odkmedia" [label="<f0> SourceModule| <f1> yt_dlp.extractor.odkmedia",shape="record"];
	"yt_dlp.extractor.nzz" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nzz",shape="record"];
	"yt_dlp.extractor.nzonscreen" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nzonscreen",shape="record"];
	"yt_dlp.extractor.nzherald" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nzherald",shape="record"];
	"yt_dlp.extractor.nytimes" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nytimes",shape="record"];
	"yt_dlp.extractor.nuvid" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nuvid",shape="record"];
	"yt_dlp.extractor.nuum" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nuum",shape="record"];
	"yt_dlp.extractor.nubilesporn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nubilesporn",shape="record"];
	"yt_dlp.extractor.ntvru" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ntvru",shape="record"];
	"yt_dlp.extractor.ntvde" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ntvde",shape="record"];
	"yt_dlp.extractor.ntvcojp" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ntvcojp",shape="record"];
	"yt_dlp.extractor.nts" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nts",shape="record"];
	"yt_dlp.extractor.nrl" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nrl",shape="record"];
	"yt_dlp.extractor.nrk" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nrk",shape="record"];
	"yt_dlp.extractor.npr" [label="<f0> SourceModule| <f1> yt_dlp.extractor.npr",shape="record"];
	"yt_dlp.extractor.npo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.npo",shape="record"];
	"yt_dlp.extractor.noz" [label="<f0> SourceModule| <f1> yt_dlp.extractor.noz",shape="record"];
	"yt_dlp.extractor.nowness" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nowness",shape="record"];
	"yt_dlp.extractor.novaplay" [label="<f0> SourceModule| <f1> yt_dlp.extractor.novaplay",shape="record"];
	"yt_dlp.extractor.nova" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nova",shape="record"];
	"yt_dlp.extractor.nosnl" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nosnl",shape="record"];
	"yt_dlp.extractor.noovo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.noovo",shape="record"];
	"yt_dlp.extractor.noodlemagazine" [label="<f0> SourceModule| <f1> yt_dlp.extractor.noodlemagazine",shape="record"];
	"yt_dlp.extractor.nonktube" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nonktube",shape="record"];
	"yt_dlp.extractor.nuevo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nuevo",shape="record"];
	"yt_dlp.extractor.noice" [label="<f0> SourceModule| <f1> yt_dlp.extractor.noice",shape="record"];
	"yt_dlp.extractor.nobelprize" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nobelprize",shape="record"];
	"yt_dlp.extractor.nitter" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nitter",shape="record"];
	"yt_dlp.extractor.nintendo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nintendo",shape="record"];
	"yt_dlp.extractor.ninenow" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ninenow",shape="record"];
	"yt_dlp.extractor.ninenews" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ninenews",shape="record"];
	"yt_dlp.extractor.ninegag" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ninegag",shape="record"];
	"yt_dlp.extractor.ninecninemedia" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ninecninemedia",shape="record"];
	"yt_dlp.extractor.ninaprotocol" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ninaprotocol",shape="record"];
	"yt_dlp.extractor.niconicochannelplus" [label="<f0> SourceModule| <f1> yt_dlp.extractor.niconicochannelplus",shape="record"];
	"yt_dlp.extractor.niconico" [label="<f0> SourceModule| <f1> yt_dlp.extractor.niconico",shape="record"];
	"yt_dlp.extractor.nick" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nick",shape="record"];
	"yt_dlp.extractor.nhl" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nhl",shape="record"];
	"yt_dlp.extractor.nhk" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nhk",shape="record"];
	"yt_dlp.extractor.nfl" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nfl",shape="record"];
	"yt_dlp.extractor.nfhsnetwork" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nfhsnetwork",shape="record"];
	"yt_dlp.extractor.nfb" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nfb",shape="record"];
	"yt_dlp.extractor.nexx" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nexx",shape="record"];
	"yt_dlp.extractor.nextmedia" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nextmedia",shape="record"];
	"yt_dlp.extractor.newsy" [label="<f0> SourceModule| <f1> yt_dlp.extractor.newsy",shape="record"];
	"yt_dlp.extractor.newspicks" [label="<f0> SourceModule| <f1> yt_dlp.extractor.newspicks",shape="record"];
	"yt_dlp.extractor.newgrounds" [label="<f0> SourceModule| <f1> yt_dlp.extractor.newgrounds",shape="record"];
	"yt_dlp.extractor.netzkino" [label="<f0> SourceModule| <f1> yt_dlp.extractor.netzkino",shape="record"];
	"yt_dlp.extractor.netverse" [label="<f0> SourceModule| <f1> yt_dlp.extractor.netverse",shape="record"];
	"yt_dlp.extractor.neteasemusic" [label="<f0> SourceModule| <f1> yt_dlp.extractor.neteasemusic",shape="record"];
	"yt_dlp.extractor.nest" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nest",shape="record"];
	"yt_dlp.extractor.nerdcubed" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nerdcubed",shape="record"];
	"yt_dlp.extractor.nekohacker" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nekohacker",shape="record"];
	"yt_dlp.extractor.nebula" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nebula",shape="record"];
	"yt_dlp.extractor.ndtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ndtv",shape="record"];
	"yt_dlp.extractor.ndr" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ndr",shape="record"];
	"yt_dlp.extractor.nbc" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nbc",shape="record"];
	"yt_dlp.extractor.nba" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nba",shape="record"];
	"yt_dlp.extractor.naver" [label="<f0> SourceModule| <f1> yt_dlp.extractor.naver",shape="record"];
	"yt_dlp.extractor.nationalgeographic" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nationalgeographic",shape="record"];
	"yt_dlp.extractor.nate" [label="<f0> SourceModule| <f1> yt_dlp.extractor.nate",shape="record"];
	"yt_dlp.extractor.n1" [label="<f0> SourceModule| <f1> yt_dlp.extractor.n1",shape="record"];
	"yt_dlp.extractor.mzaalo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mzaalo",shape="record"];
	"yt_dlp.extractor.myvidster" [label="<f0> SourceModule| <f1> yt_dlp.extractor.myvidster",shape="record"];
	"yt_dlp.extractor.myvideoge" [label="<f0> SourceModule| <f1> yt_dlp.extractor.myvideoge",shape="record"];
	"yt_dlp.extractor.myspass" [label="<f0> SourceModule| <f1> yt_dlp.extractor.myspass",shape="record"];
	"yt_dlp.extractor.myspace" [label="<f0> SourceModule| <f1> yt_dlp.extractor.myspace",shape="record"];
	"yt_dlp.extractor.mxplayer" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mxplayer",shape="record"];
	"yt_dlp.extractor.mx3" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mx3",shape="record"];
	"yt_dlp.extractor.musicdex" [label="<f0> SourceModule| <f1> yt_dlp.extractor.musicdex",shape="record"];
	"yt_dlp.extractor.musescore" [label="<f0> SourceModule| <f1> yt_dlp.extractor.musescore",shape="record"];
	"yt_dlp.extractor.museai" [label="<f0> SourceModule| <f1> yt_dlp.extractor.museai",shape="record"];
	"yt_dlp.extractor.murrtube" [label="<f0> SourceModule| <f1> yt_dlp.extractor.murrtube",shape="record"];
	"yt_dlp.extractor.muenchentv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.muenchentv",shape="record"];
	"yt_dlp.extractor.mtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mtv",shape="record"];
	"yt_dlp.extractor.msn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.msn",shape="record"];
	"yt_dlp.extractor.movingimage" [label="<f0> SourceModule| <f1> yt_dlp.extractor.movingimage",shape="record"];
	"yt_dlp.extractor.moviezine" [label="<f0> SourceModule| <f1> yt_dlp.extractor.moviezine",shape="record"];
	"yt_dlp.extractor.moview" [label="<f0> SourceModule| <f1> yt_dlp.extractor.moview",shape="record"];
	"yt_dlp.extractor.jixie" [label="<f0> SourceModule| <f1> yt_dlp.extractor.jixie",shape="record"];
	"yt_dlp.extractor.moviepilot" [label="<f0> SourceModule| <f1> yt_dlp.extractor.moviepilot",shape="record"];
	"yt_dlp.extractor.motorsport" [label="<f0> SourceModule| <f1> yt_dlp.extractor.motorsport",shape="record"];
	"yt_dlp.extractor.motherless" [label="<f0> SourceModule| <f1> yt_dlp.extractor.motherless",shape="record"];
	"yt_dlp.extractor.monstercat" [label="<f0> SourceModule| <f1> yt_dlp.extractor.monstercat",shape="record"];
	"yt_dlp.extractor.mojvideo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mojvideo",shape="record"];
	"yt_dlp.extractor.mojevideo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mojevideo",shape="record"];
	"yt_dlp.extractor.mocha" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mocha",shape="record"];
	"yt_dlp.extractor.mlssoccer" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mlssoccer",shape="record"];
	"yt_dlp.extractor.mlb" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mlb",shape="record"];
	"yt_dlp.extractor.mixcloud" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mixcloud",shape="record"];
	"yt_dlp.extractor.mixch" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mixch",shape="record"];
	"yt_dlp.extractor.mitele" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mitele",shape="record"];
	"yt_dlp.extractor.mit" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mit",shape="record"];
	"yt_dlp.extractor.mirrorcouk" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mirrorcouk",shape="record"];
	"yt_dlp.extractor.mirrativ" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mirrativ",shape="record"];
	"yt_dlp.extractor.minoto" [label="<f0> SourceModule| <f1> yt_dlp.extractor.minoto",shape="record"];
	"yt_dlp.extractor.minds" [label="<f0> SourceModule| <f1> yt_dlp.extractor.minds",shape="record"];
	"yt_dlp.extractor.microsoftstream" [label="<f0> SourceModule| <f1> yt_dlp.extractor.microsoftstream",shape="record"];
	"yt_dlp.extractor.microsoftembed" [label="<f0> SourceModule| <f1> yt_dlp.extractor.microsoftembed",shape="record"];
	"yt_dlp.extractor.mgtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mgtv",shape="record"];
	"yt_dlp.extractor.metacritic" [label="<f0> SourceModule| <f1> yt_dlp.extractor.metacritic",shape="record"];
	"yt_dlp.extractor.melonvod" [label="<f0> SourceModule| <f1> yt_dlp.extractor.melonvod",shape="record"];
	"yt_dlp.extractor.meipai" [label="<f0> SourceModule| <f1> yt_dlp.extractor.meipai",shape="record"];
	"yt_dlp.extractor.megatvcom" [label="<f0> SourceModule| <f1> yt_dlp.extractor.megatvcom",shape="record"];
	"yt_dlp.extractor.megaphone" [label="<f0> SourceModule| <f1> yt_dlp.extractor.megaphone",shape="record"];
	"yt_dlp.extractor.medici" [label="<f0> SourceModule| <f1> yt_dlp.extractor.medici",shape="record"];
	"yt_dlp.extractor.mediaworksnz" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mediaworksnz",shape="record"];
	"yt_dlp.extractor.mediastream" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mediastream",shape="record"];
	"yt_dlp.extractor.mediasite" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mediasite",shape="record"];
	"yt_dlp.extractor.mediaset" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mediaset",shape="record"];
	"yt_dlp.extractor.medialaan" [label="<f0> SourceModule| <f1> yt_dlp.extractor.medialaan",shape="record"];
	"yt_dlp.extractor.mediaklikk" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mediaklikk",shape="record"];
	"yt_dlp.extractor.mediaite" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mediaite",shape="record"];
	"yt_dlp.extractor.medaltv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.medaltv",shape="record"];
	"yt_dlp.extractor.mdr" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mdr",shape="record"];
	"yt_dlp.extractor.mbn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mbn",shape="record"];
	"yt_dlp.extractor.matchtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.matchtv",shape="record"];
	"yt_dlp.extractor.masters" [label="<f0> SourceModule| <f1> yt_dlp.extractor.masters",shape="record"];
	"yt_dlp.extractor.massengeschmacktv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.massengeschmacktv",shape="record"];
	"yt_dlp.extractor.markiza" [label="<f0> SourceModule| <f1> yt_dlp.extractor.markiza",shape="record"];
	"yt_dlp.extractor.maoritv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.maoritv",shape="record"];
	"yt_dlp.extractor.manyvids" [label="<f0> SourceModule| <f1> yt_dlp.extractor.manyvids",shape="record"];
	"yt_dlp.extractor.manoto" [label="<f0> SourceModule| <f1> yt_dlp.extractor.manoto",shape="record"];
	"yt_dlp.extractor.mangomolo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mangomolo",shape="record"];
	"yt_dlp.extractor.mainstreaming" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mainstreaming",shape="record"];
	"yt_dlp.extractor.mailru" [label="<f0> SourceModule| <f1> yt_dlp.extractor.mailru",shape="record"];
	"yt_dlp.extractor.magentamusik" [label="<f0> SourceModule| <f1> yt_dlp.extractor.magentamusik",shape="record"];
	"yt_dlp.extractor.magellantv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.magellantv",shape="record"];
	"yt_dlp.extractor.maariv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.maariv",shape="record"];
	"yt_dlp.extractor.lynda" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lynda",shape="record"];
	"yt_dlp.extractor.lumni" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lumni",shape="record"];
	"yt_dlp.extractor.lsm" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lsm",shape="record"];
	"yt_dlp.extractor.lrt" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lrt",shape="record"];
	"yt_dlp.extractor.lovehomeporn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lovehomeporn",shape="record"];
	"yt_dlp.extractor.loom" [label="<f0> SourceModule| <f1> yt_dlp.extractor.loom",shape="record"];
	"yt_dlp.extractor.loco" [label="<f0> SourceModule| <f1> yt_dlp.extractor.loco",shape="record"];
	"yt_dlp.extractor.lnk" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lnk",shape="record"];
	"yt_dlp.extractor.livestreamfails" [label="<f0> SourceModule| <f1> yt_dlp.extractor.livestreamfails",shape="record"];
	"yt_dlp.extractor.livestream" [label="<f0> SourceModule| <f1> yt_dlp.extractor.livestream",shape="record"];
	"yt_dlp.extractor.livejournal" [label="<f0> SourceModule| <f1> yt_dlp.extractor.livejournal",shape="record"];
	"yt_dlp.extractor.litv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.litv",shape="record"];
	"yt_dlp.extractor.listennotes" [label="<f0> SourceModule| <f1> yt_dlp.extractor.listennotes",shape="record"];
	"yt_dlp.extractor.liputan6" [label="<f0> SourceModule| <f1> yt_dlp.extractor.liputan6",shape="record"];
	"yt_dlp.extractor.linkedin" [label="<f0> SourceModule| <f1> yt_dlp.extractor.linkedin",shape="record"];
	"yt_dlp.extractor.limelight" [label="<f0> SourceModule| <f1> yt_dlp.extractor.limelight",shape="record"];
	"yt_dlp.extractor.likee" [label="<f0> SourceModule| <f1> yt_dlp.extractor.likee",shape="record"];
	"yt_dlp.extractor.lifenews" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lifenews",shape="record"];
	"yt_dlp.extractor.libsyn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.libsyn",shape="record"];
	"yt_dlp.extractor.libraryofcongress" [label="<f0> SourceModule| <f1> yt_dlp.extractor.libraryofcongress",shape="record"];
	"yt_dlp.extractor.lenta" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lenta",shape="record"];
	"yt_dlp.extractor.lemonde" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lemonde",shape="record"];
	"yt_dlp.extractor.lego" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lego",shape="record"];
	"yt_dlp.extractor.lefigaro" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lefigaro",shape="record"];
	"yt_dlp.extractor.leeco" [label="<f0> SourceModule| <f1> yt_dlp.extractor.leeco",shape="record"];
	"yt_dlp.extractor.lecturio" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lecturio",shape="record"];
	"yt_dlp.extractor.lecture2go" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lecture2go",shape="record"];
	"yt_dlp.extractor.learningonscreen" [label="<f0> SourceModule| <f1> yt_dlp.extractor.learningonscreen",shape="record"];
	"yt_dlp.extractor.lcp" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lcp",shape="record"];
	"yt_dlp.extractor.lci" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lci",shape="record"];
	"yt_dlp.extractor.lbry" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lbry",shape="record"];
	"yt_dlp.extractor.laxarxames" [label="<f0> SourceModule| <f1> yt_dlp.extractor.laxarxames",shape="record"];
	"yt_dlp.extractor.lastfm" [label="<f0> SourceModule| <f1> yt_dlp.extractor.lastfm",shape="record"];
	"yt_dlp.extractor.laracasts" [label="<f0> SourceModule| <f1> yt_dlp.extractor.laracasts",shape="record"];
	"yt_dlp.extractor.la7" [label="<f0> SourceModule| <f1> yt_dlp.extractor.la7",shape="record"];
	"yt_dlp.extractor.kuwo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kuwo",shape="record"];
	"yt_dlp.extractor.kukululive" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kukululive",shape="record"];
	"yt_dlp.extractor.ku6" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ku6",shape="record"];
	"yt_dlp.extractor.kth" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kth",shape="record"];
	"yt_dlp.extractor.krasview" [label="<f0> SourceModule| <f1> yt_dlp.extractor.krasview",shape="record"];
	"yt_dlp.extractor.koo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.koo",shape="record"];
	"yt_dlp.extractor.kompas" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kompas",shape="record"];
	"yt_dlp.extractor.kommunetv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kommunetv",shape="record"];
	"yt_dlp.extractor.kinopoisk" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kinopoisk",shape="record"];
	"yt_dlp.extractor.kinja" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kinja",shape="record"];
	"yt_dlp.extractor.kika" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kika",shape="record"];
	"yt_dlp.extractor.kickstarter" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kickstarter",shape="record"];
	"yt_dlp.extractor.kicker" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kicker",shape="record"];
	"yt_dlp.extractor.kick" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kick",shape="record"];
	"yt_dlp.extractor.khanacademy" [label="<f0> SourceModule| <f1> yt_dlp.extractor.khanacademy",shape="record"];
	"yt_dlp.extractor.kenh14" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kenh14",shape="record"];
	"yt_dlp.extractor.kelbyone" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kelbyone",shape="record"];
	"yt_dlp.extractor.karaoketv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.karaoketv",shape="record"];
	"yt_dlp.extractor.kankanews" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kankanews",shape="record"];
	"yt_dlp.extractor.kaltura" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kaltura",shape="record"];
	"yt_dlp.extractor.kakao" [label="<f0> SourceModule| <f1> yt_dlp.extractor.kakao",shape="record"];
	"yt_dlp.extractor.jwplatform" [label="<f0> SourceModule| <f1> yt_dlp.extractor.jwplatform",shape="record"];
	"yt_dlp.extractor.jtbc" [label="<f0> SourceModule| <f1> yt_dlp.extractor.jtbc",shape="record"];
	"yt_dlp.extractor.jstream" [label="<f0> SourceModule| <f1> yt_dlp.extractor.jstream",shape="record"];
	"yt_dlp.extractor.jove" [label="<f0> SourceModule| <f1> yt_dlp.extractor.jove",shape="record"];
	"yt_dlp.extractor.joqrag" [label="<f0> SourceModule| <f1> yt_dlp.extractor.joqrag",shape="record"];
	"yt_dlp.extractor.joj" [label="<f0> SourceModule| <f1> yt_dlp.extractor.joj",shape="record"];
	"yt_dlp.extractor.jiosaavn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.jiosaavn",shape="record"];
	"yt_dlp.extractor.jiocinema" [label="<f0> SourceModule| <f1> yt_dlp.extractor.jiocinema",shape="record"];
	"yt_dlp.extractor.jeuxvideo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.jeuxvideo",shape="record"];
	"yt_dlp.extractor.japandiet" [label="<f0> SourceModule| <f1> yt_dlp.extractor.japandiet",shape="record"];
	"yt_dlp.extractor.jamendo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.jamendo",shape="record"];
	"yt_dlp.extractor.izlesene" [label="<f0> SourceModule| <f1> yt_dlp.extractor.izlesene",shape="record"];
	"yt_dlp.extractor.ixigua" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ixigua",shape="record"];
	"yt_dlp.extractor.iwara" [label="<f0> SourceModule| <f1> yt_dlp.extractor.iwara",shape="record"];
	"yt_dlp.extractor.ivoox" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ivoox",shape="record"];
	"yt_dlp.extractor.ivideon" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ivideon",shape="record"];
	"yt_dlp.extractor.ivi" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ivi",shape="record"];
	"yt_dlp.extractor.itv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.itv",shape="record"];
	"yt_dlp.extractor.itprotv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.itprotv",shape="record"];
	"yt_dlp.extractor.israelnationalnews" [label="<f0> SourceModule| <f1> yt_dlp.extractor.israelnationalnews",shape="record"];
	"yt_dlp.extractor.islamchannel" [label="<f0> SourceModule| <f1> yt_dlp.extractor.islamchannel",shape="record"];
	"yt_dlp.extractor.iqiyi" [label="<f0> SourceModule| <f1> yt_dlp.extractor.iqiyi",shape="record"];
	"yt_dlp.extractor.iprima" [label="<f0> SourceModule| <f1> yt_dlp.extractor.iprima",shape="record"];
	"yt_dlp.extractor.internetvideoarchive" [label="<f0> SourceModule| <f1> yt_dlp.extractor.internetvideoarchive",shape="record"];
	"yt_dlp.extractor.internazionale" [label="<f0> SourceModule| <f1> yt_dlp.extractor.internazionale",shape="record"];
	"yt_dlp.extractor.instagram" [label="<f0> SourceModule| <f1> yt_dlp.extractor.instagram",shape="record"];
	"yt_dlp.extractor.infoq" [label="<f0> SourceModule| <f1> yt_dlp.extractor.infoq",shape="record"];
	"yt_dlp.extractor.indavideo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.indavideo",shape="record"];
	"yt_dlp.extractor.inc" [label="<f0> SourceModule| <f1> yt_dlp.extractor.inc",shape="record"];
	"yt_dlp.extractor.ina" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ina",shape="record"];
	"yt_dlp.extractor.imgur" [label="<f0> SourceModule| <f1> yt_dlp.extractor.imgur",shape="record"];
	"yt_dlp.extractor.imdb" [label="<f0> SourceModule| <f1> yt_dlp.extractor.imdb",shape="record"];
	"yt_dlp.extractor.iltalehti" [label="<f0> SourceModule| <f1> yt_dlp.extractor.iltalehti",shape="record"];
	"yt_dlp.extractor.ilpost" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ilpost",shape="record"];
	"yt_dlp.extractor.iheart" [label="<f0> SourceModule| <f1> yt_dlp.extractor.iheart",shape="record"];
	"yt_dlp.extractor.ign" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ign",shape="record"];
	"yt_dlp.extractor.idolplus" [label="<f0> SourceModule| <f1> yt_dlp.extractor.idolplus",shape="record"];
	"yt_dlp.extractor.ichinanalive" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ichinanalive",shape="record"];
	"yt_dlp.extractor.icareus" [label="<f0> SourceModule| <f1> yt_dlp.extractor.icareus",shape="record"];
	"yt_dlp.extractor.hytale" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hytale",shape="record"];
	"yt_dlp.extractor.hypergryph" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hypergryph",shape="record"];
	"yt_dlp.extractor.hypem" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hypem",shape="record"];
	"yt_dlp.extractor.huya" [label="<f0> SourceModule| <f1> yt_dlp.extractor.huya",shape="record"];
	"yt_dlp.extractor.hungama" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hungama",shape="record"];
	"yt_dlp.extractor.huffpost" [label="<f0> SourceModule| <f1> yt_dlp.extractor.huffpost",shape="record"];
	"yt_dlp.extractor.huajiao" [label="<f0> SourceModule| <f1> yt_dlp.extractor.huajiao",shape="record"];
	"yt_dlp.extractor.hse" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hse",shape="record"];
	"yt_dlp.extractor.hrti" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hrti",shape="record"];
	"yt_dlp.extractor.hrfensehen" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hrfensehen",shape="record"];
	"yt_dlp.extractor.hrefli" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hrefli",shape="record"];
	"yt_dlp.extractor.hotstar" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hotstar",shape="record"];
	"yt_dlp.extractor.hotnewhiphop" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hotnewhiphop",shape="record"];
	"yt_dlp.extractor.holodex" [label="<f0> SourceModule| <f1> yt_dlp.extractor.holodex",shape="record"];
	"yt_dlp.extractor.hollywoodreporter" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hollywoodreporter",shape="record"];
	"yt_dlp.extractor.hketv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hketv",shape="record"];
	"yt_dlp.extractor.hitrecord" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hitrecord",shape="record"];
	"yt_dlp.extractor.historicfilms" [label="<f0> SourceModule| <f1> yt_dlp.extractor.historicfilms",shape="record"];
	"yt_dlp.extractor.hidive" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hidive",shape="record"];
	"yt_dlp.extractor.hgtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hgtv",shape="record"];
	"yt_dlp.extractor.hellporno" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hellporno",shape="record"];
	"yt_dlp.extractor.heise" [label="<f0> SourceModule| <f1> yt_dlp.extractor.heise",shape="record"];
	"yt_dlp.extractor.hearthisat" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hearthisat",shape="record"];
	"yt_dlp.extractor.hbo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.hbo",shape="record"];
	"yt_dlp.extractor.harpodeon" [label="<f0> SourceModule| <f1> yt_dlp.extractor.harpodeon",shape="record"];
	"yt_dlp.extractor.groupon" [label="<f0> SourceModule| <f1> yt_dlp.extractor.groupon",shape="record"];
	"yt_dlp.extractor.gronkh" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gronkh",shape="record"];
	"yt_dlp.extractor.graspop" [label="<f0> SourceModule| <f1> yt_dlp.extractor.graspop",shape="record"];
	"yt_dlp.extractor.gputechconf" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gputechconf",shape="record"];
	"yt_dlp.extractor.gotostage" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gotostage",shape="record"];
	"yt_dlp.extractor.goshgay" [label="<f0> SourceModule| <f1> yt_dlp.extractor.goshgay",shape="record"];
	"yt_dlp.extractor.gopro" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gopro",shape="record"];
	"yt_dlp.extractor.goplay" [label="<f0> SourceModule| <f1> yt_dlp.extractor.goplay",shape="record"];
	"yt_dlp.extractor.googlesearch" [label="<f0> SourceModule| <f1> yt_dlp.extractor.googlesearch",shape="record"];
	"yt_dlp.extractor.googlepodcasts" [label="<f0> SourceModule| <f1> yt_dlp.extractor.googlepodcasts",shape="record"];
	"yt_dlp.extractor.googledrive" [label="<f0> SourceModule| <f1> yt_dlp.extractor.googledrive",shape="record"];
	"yt_dlp.extractor.goodgame" [label="<f0> SourceModule| <f1> yt_dlp.extractor.goodgame",shape="record"];
	"yt_dlp.extractor.golem" [label="<f0> SourceModule| <f1> yt_dlp.extractor.golem",shape="record"];
	"yt_dlp.extractor.gofile" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gofile",shape="record"];
	"yt_dlp.extractor.godtube" [label="<f0> SourceModule| <f1> yt_dlp.extractor.godtube",shape="record"];
	"yt_dlp.extractor.godresource" [label="<f0> SourceModule| <f1> yt_dlp.extractor.godresource",shape="record"];
	"yt_dlp.extractor.go" [label="<f0> SourceModule| <f1> yt_dlp.extractor.go",shape="record"];
	"yt_dlp.extractor.gmanetwork" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gmanetwork",shape="record"];
	"yt_dlp.extractor.glomex" [label="<f0> SourceModule| <f1> yt_dlp.extractor.glomex",shape="record"];
	"yt_dlp.extractor.globo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.globo",shape="record"];
	"yt_dlp.extractor.globalplayer" [label="<f0> SourceModule| <f1> yt_dlp.extractor.globalplayer",shape="record"];
	"yt_dlp.extractor.glide" [label="<f0> SourceModule| <f1> yt_dlp.extractor.glide",shape="record"];
	"yt_dlp.extractor.giantbomb" [label="<f0> SourceModule| <f1> yt_dlp.extractor.giantbomb",shape="record"];
	"yt_dlp.extractor.gettr" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gettr",shape="record"];
	"yt_dlp.extractor.getcourseru" [label="<f0> SourceModule| <f1> yt_dlp.extractor.getcourseru",shape="record"];
	"yt_dlp.extractor.germanupa" [label="<f0> SourceModule| <f1> yt_dlp.extractor.germanupa",shape="record"];
	"yt_dlp.extractor.genius" [label="<f0> SourceModule| <f1> yt_dlp.extractor.genius",shape="record"];
	"yt_dlp.extractor.genericembeds" [label="<f0> SourceModule| <f1> yt_dlp.extractor.genericembeds",shape="record"];
	"yt_dlp.extractor.gedidigital" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gedidigital",shape="record"];
	"yt_dlp.extractor.gdcvault" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gdcvault",shape="record"];
	"yt_dlp.extractor.gbnews" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gbnews",shape="record"];
	"yt_dlp.extractor.gazeta" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gazeta",shape="record"];
	"yt_dlp.extractor.gaskrank" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gaskrank",shape="record"];
	"yt_dlp.extractor.gamestar" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gamestar",shape="record"];
	"yt_dlp.extractor.gamespot" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gamespot",shape="record"];
	"yt_dlp.extractor.gamejolt" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gamejolt",shape="record"];
	"yt_dlp.extractor.gamedevtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gamedevtv",shape="record"];
	"yt_dlp.extractor.gaia" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gaia",shape="record"];
	"yt_dlp.extractor.gab" [label="<f0> SourceModule| <f1> yt_dlp.extractor.gab",shape="record"];
	"yt_dlp.extractor.fuyintv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.fuyintv",shape="record"];
	"yt_dlp.extractor.funker530" [label="<f0> SourceModule| <f1> yt_dlp.extractor.funker530",shape="record"];
	"yt_dlp.extractor.funk" [label="<f0> SourceModule| <f1> yt_dlp.extractor.funk",shape="record"];
	"yt_dlp.extractor.fujitv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.fujitv",shape="record"];
	"yt_dlp.extractor.frontendmasters" [label="<f0> SourceModule| <f1> yt_dlp.extractor.frontendmasters",shape="record"];
	"yt_dlp.extractor.freetv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.freetv",shape="record"];
	"yt_dlp.extractor.freespeech" [label="<f0> SourceModule| <f1> yt_dlp.extractor.freespeech",shape="record"];
	"yt_dlp.extractor.freesound" [label="<f0> SourceModule| <f1> yt_dlp.extractor.freesound",shape="record"];
	"yt_dlp.extractor.francetv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.francetv",shape="record"];
	"yt_dlp.extractor.franceinter" [label="<f0> SourceModule| <f1> yt_dlp.extractor.franceinter",shape="record"];
	"yt_dlp.extractor.francaisfacile" [label="<f0> SourceModule| <f1> yt_dlp.extractor.francaisfacile",shape="record"];
	"yt_dlp.extractor.fptplay" [label="<f0> SourceModule| <f1> yt_dlp.extractor.fptplay",shape="record"];
	"yt_dlp.extractor.foxsports" [label="<f0> SourceModule| <f1> yt_dlp.extractor.foxsports",shape="record"];
	"yt_dlp.extractor.foxnews" [label="<f0> SourceModule| <f1> yt_dlp.extractor.foxnews",shape="record"];
	"yt_dlp.extractor.amp" [label="<f0> SourceModule| <f1> yt_dlp.extractor.amp",shape="record"];
	"yt_dlp.extractor.fox9" [label="<f0> SourceModule| <f1> yt_dlp.extractor.fox9",shape="record"];
	"yt_dlp.extractor.fox" [label="<f0> SourceModule| <f1> yt_dlp.extractor.fox",shape="record"];
	"yt_dlp.extractor.fourtube" [label="<f0> SourceModule| <f1> yt_dlp.extractor.fourtube",shape="record"];
	"yt_dlp.extractor.formula1" [label="<f0> SourceModule| <f1> yt_dlp.extractor.formula1",shape="record"];
	"yt_dlp.extractor.footyroom" [label="<f0> SourceModule| <f1> yt_dlp.extractor.footyroom",shape="record"];
	"yt_dlp.extractor.folketinget" [label="<f0> SourceModule| <f1> yt_dlp.extractor.folketinget",shape="record"];
	"yt_dlp.extractor.floatplane" [label="<f0> SourceModule| <f1> yt_dlp.extractor.floatplane",shape="record"];
	"yt_dlp.extractor.flickr" [label="<f0> SourceModule| <f1> yt_dlp.extractor.flickr",shape="record"];
	"yt_dlp.extractor.flextv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.flextv",shape="record"];
	"yt_dlp.extractor.fivetv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.fivetv",shape="record"];
	"yt_dlp.extractor.firsttv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.firsttv",shape="record"];
	"yt_dlp.extractor.filmweb" [label="<f0> SourceModule| <f1> yt_dlp.extractor.filmweb",shape="record"];
	"yt_dlp.extractor.filmon" [label="<f0> SourceModule| <f1> yt_dlp.extractor.filmon",shape="record"];
	"yt_dlp.extractor.fifa" [label="<f0> SourceModule| <f1> yt_dlp.extractor.fifa",shape="record"];
	"yt_dlp.extractor.fczenit" [label="<f0> SourceModule| <f1> yt_dlp.extractor.fczenit",shape="record"];
	"yt_dlp.extractor.fc2" [label="<f0> SourceModule| <f1> yt_dlp.extractor.fc2",shape="record"];
	"yt_dlp.extractor.faz" [label="<f0> SourceModule| <f1> yt_dlp.extractor.faz",shape="record"];
	"yt_dlp.extractor.fathom" [label="<f0> SourceModule| <f1> yt_dlp.extractor.fathom",shape="record"];
	"yt_dlp.extractor.fancode" [label="<f0> SourceModule| <f1> yt_dlp.extractor.fancode",shape="record"];
	"yt_dlp.extractor.facebook" [label="<f0> SourceModule| <f1> yt_dlp.extractor.facebook",shape="record"];
	"yt_dlp.extractor.eyedotv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.eyedotv",shape="record"];
	"yt_dlp.extractor.expressen" [label="<f0> SourceModule| <f1> yt_dlp.extractor.expressen",shape="record"];
	"yt_dlp.extractor.euscreen" [label="<f0> SourceModule| <f1> yt_dlp.extractor.euscreen",shape="record"];
	"yt_dlp.extractor.eurosport" [label="<f0> SourceModule| <f1> yt_dlp.extractor.eurosport",shape="record"];
	"yt_dlp.extractor.europeantour" [label="<f0> SourceModule| <f1> yt_dlp.extractor.europeantour",shape="record"];
	"yt_dlp.extractor.europa" [label="<f0> SourceModule| <f1> yt_dlp.extractor.europa",shape="record"];
	"yt_dlp.extractor.ettutv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ettutv",shape="record"];
	"yt_dlp.extractor.espn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.espn",shape="record"];
	"yt_dlp.extractor.ertgr" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ertgr",shape="record"];
	"yt_dlp.extractor.err" [label="<f0> SourceModule| <f1> yt_dlp.extractor.err",shape="record"];
	"yt_dlp.extractor.eroprofile" [label="<f0> SourceModule| <f1> yt_dlp.extractor.eroprofile",shape="record"];
	"yt_dlp.extractor.erocast" [label="<f0> SourceModule| <f1> yt_dlp.extractor.erocast",shape="record"];
	"yt_dlp.extractor.eporner" [label="<f0> SourceModule| <f1> yt_dlp.extractor.eporner",shape="record"];
	"yt_dlp.extractor.epoch" [label="<f0> SourceModule| <f1> yt_dlp.extractor.epoch",shape="record"];
	"yt_dlp.extractor.eplus" [label="<f0> SourceModule| <f1> yt_dlp.extractor.eplus",shape="record"];
	"yt_dlp.extractor.epidemicsound" [label="<f0> SourceModule| <f1> yt_dlp.extractor.epidemicsound",shape="record"];
	"yt_dlp.extractor.epicon" [label="<f0> SourceModule| <f1> yt_dlp.extractor.epicon",shape="record"];
	"yt_dlp.extractor.embedly" [label="<f0> SourceModule| <f1> yt_dlp.extractor.embedly",shape="record"];
	"yt_dlp.extractor.eltrecetv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.eltrecetv",shape="record"];
	"yt_dlp.extractor.elpais" [label="<f0> SourceModule| <f1> yt_dlp.extractor.elpais",shape="record"];
	"yt_dlp.extractor.elonet" [label="<f0> SourceModule| <f1> yt_dlp.extractor.elonet",shape="record"];
	"yt_dlp.extractor.elementorembed" [label="<f0> SourceModule| <f1> yt_dlp.extractor.elementorembed",shape="record"];
	"yt_dlp.extractor.eitb" [label="<f0> SourceModule| <f1> yt_dlp.extractor.eitb",shape="record"];
	"yt_dlp.extractor.eighttracks" [label="<f0> SourceModule| <f1> yt_dlp.extractor.eighttracks",shape="record"];
	"yt_dlp.extractor.eggs" [label="<f0> SourceModule| <f1> yt_dlp.extractor.eggs",shape="record"];
	"yt_dlp.extractor.egghead" [label="<f0> SourceModule| <f1> yt_dlp.extractor.egghead",shape="record"];
	"yt_dlp.extractor.ebay" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ebay",shape="record"];
	"yt_dlp.extractor.ebaumsworld" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ebaumsworld",shape="record"];
	"yt_dlp.extractor.eagleplatform" [label="<f0> SourceModule| <f1> yt_dlp.extractor.eagleplatform",shape="record"];
	"yt_dlp.extractor.dw" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dw",shape="record"];
	"yt_dlp.extractor.dvtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dvtv",shape="record"];
	"yt_dlp.extractor.duoplay" [label="<f0> SourceModule| <f1> yt_dlp.extractor.duoplay",shape="record"];
	"yt_dlp.extractor.dumpert" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dumpert",shape="record"];
	"yt_dlp.extractor.duboku" [label="<f0> SourceModule| <f1> yt_dlp.extractor.duboku",shape="record"];
	"yt_dlp.extractor.dtube" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dtube",shape="record"];
	"yt_dlp.extractor.drtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.drtv",shape="record"];
	"yt_dlp.extractor.drtuber" [label="<f0> SourceModule| <f1> yt_dlp.extractor.drtuber",shape="record"];
	"yt_dlp.extractor.drtalks" [label="<f0> SourceModule| <f1> yt_dlp.extractor.drtalks",shape="record"];
	"yt_dlp.extractor.dropout" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dropout",shape="record"];
	"yt_dlp.extractor.dropbox" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dropbox",shape="record"];
	"yt_dlp.extractor.drooble" [label="<f0> SourceModule| <f1> yt_dlp.extractor.drooble",shape="record"];
	"yt_dlp.extractor.dreisat" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dreisat",shape="record"];
	"yt_dlp.extractor.drbonanza" [label="<f0> SourceModule| <f1> yt_dlp.extractor.drbonanza",shape="record"];
	"yt_dlp.extractor.dplay" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dplay",shape="record"];
	"yt_dlp.extractor.douyutv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.douyutv",shape="record"];
	"yt_dlp.extractor.dlive" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dlive",shape="record"];
	"yt_dlp.extractor.dlf" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dlf",shape="record"];
	"yt_dlp.extractor.dispeak" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dispeak",shape="record"];
	"yt_dlp.extractor.disney" [label="<f0> SourceModule| <f1> yt_dlp.extractor.disney",shape="record"];
	"yt_dlp.extractor.discogs" [label="<f0> SourceModule| <f1> yt_dlp.extractor.discogs",shape="record"];
	"yt_dlp.extractor.digiview" [label="<f0> SourceModule| <f1> yt_dlp.extractor.digiview",shape="record"];
	"yt_dlp.extractor.digiteka" [label="<f0> SourceModule| <f1> yt_dlp.extractor.digiteka",shape="record"];
	"yt_dlp.extractor.digitalconcerthall" [label="<f0> SourceModule| <f1> yt_dlp.extractor.digitalconcerthall",shape="record"];
	"yt_dlp.extractor.dhm" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dhm",shape="record"];
	"yt_dlp.extractor.dfb" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dfb",shape="record"];
	"yt_dlp.extractor.deuxm" [label="<f0> SourceModule| <f1> yt_dlp.extractor.deuxm",shape="record"];
	"yt_dlp.extractor.detik" [label="<f0> SourceModule| <f1> yt_dlp.extractor.detik",shape="record"];
	"yt_dlp.extractor.democracynow" [label="<f0> SourceModule| <f1> yt_dlp.extractor.democracynow",shape="record"];
	"yt_dlp.extractor.dctp" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dctp",shape="record"];
	"yt_dlp.extractor.dbtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dbtv",shape="record"];
	"yt_dlp.extractor.daystar" [label="<f0> SourceModule| <f1> yt_dlp.extractor.daystar",shape="record"];
	"yt_dlp.extractor.daum" [label="<f0> SourceModule| <f1> yt_dlp.extractor.daum",shape="record"];
	"yt_dlp.extractor.dangalplay" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dangalplay",shape="record"];
	"yt_dlp.extractor.damtomo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.damtomo",shape="record"];
	"yt_dlp.extractor.dailywire" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dailywire",shape="record"];
	"yt_dlp.extractor.dailymotion" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dailymotion",shape="record"];
	"yt_dlp.extractor.dailymail" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dailymail",shape="record"];
	"yt_dlp.extractor.dacast" [label="<f0> SourceModule| <f1> yt_dlp.extractor.dacast",shape="record"];
	"yt_dlp.extractor.cybrary" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cybrary",shape="record"];
	"yt_dlp.extractor.cwtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cwtv",shape="record"];
	"yt_dlp.extractor.curiositystream" [label="<f0> SourceModule| <f1> yt_dlp.extractor.curiositystream",shape="record"];
	"yt_dlp.extractor.cultureunplugged" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cultureunplugged",shape="record"];
	"yt_dlp.extractor.ctvnews" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ctvnews",shape="record"];
	"yt_dlp.extractor.ctv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ctv",shape="record"];
	"yt_dlp.extractor.ctsnews" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ctsnews",shape="record"];
	"yt_dlp.extractor.cspan" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cspan",shape="record"];
	"yt_dlp.extractor.crtvg" [label="<f0> SourceModule| <f1> yt_dlp.extractor.crtvg",shape="record"];
	"yt_dlp.extractor.crowdbunker" [label="<f0> SourceModule| <f1> yt_dlp.extractor.crowdbunker",shape="record"];
	"yt_dlp.extractor.crooksandliars" [label="<f0> SourceModule| <f1> yt_dlp.extractor.crooksandliars",shape="record"];
	"yt_dlp.extractor.craftsy" [label="<f0> SourceModule| <f1> yt_dlp.extractor.craftsy",shape="record"];
	"yt_dlp.extractor.crackle" [label="<f0> SourceModule| <f1> yt_dlp.extractor.crackle",shape="record"];
	"yt_dlp.extractor.cracked" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cracked",shape="record"];
	"yt_dlp.extractor.cpac" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cpac",shape="record"];
	"yt_dlp.extractor.cozytv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cozytv",shape="record"];
	"yt_dlp.extractor.coub" [label="<f0> SourceModule| <f1> yt_dlp.extractor.coub",shape="record"];
	"yt_dlp.extractor.corus" [label="<f0> SourceModule| <f1> yt_dlp.extractor.corus",shape="record"];
	"yt_dlp.extractor.contv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.contv",shape="record"];
	"yt_dlp.extractor.condenast" [label="<f0> SourceModule| <f1> yt_dlp.extractor.condenast",shape="record"];
	"yt_dlp.extractor.commonmistakes" [label="<f0> SourceModule| <f1> yt_dlp.extractor.commonmistakes",shape="record"];
	"yt_dlp.extractor.comedycentral" [label="<f0> SourceModule| <f1> yt_dlp.extractor.comedycentral",shape="record"];
	"yt_dlp.extractor.cnn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cnn",shape="record"];
	"yt_dlp.extractor.cnbc" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cnbc",shape="record"];
	"yt_dlp.extractor.cmt" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cmt",shape="record"];
	"yt_dlp.extractor.clyp" [label="<f0> SourceModule| <f1> yt_dlp.extractor.clyp",shape="record"];
	"yt_dlp.extractor.clubic" [label="<f0> SourceModule| <f1> yt_dlp.extractor.clubic",shape="record"];
	"yt_dlp.extractor.cloudycdn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cloudycdn",shape="record"];
	"yt_dlp.extractor.cloudflarestream" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cloudflarestream",shape="record"];
	"yt_dlp.extractor.closertotruth" [label="<f0> SourceModule| <f1> yt_dlp.extractor.closertotruth",shape="record"];
	"yt_dlp.extractor.cliprs" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cliprs",shape="record"];
	"yt_dlp.extractor.clippit" [label="<f0> SourceModule| <f1> yt_dlp.extractor.clippit",shape="record"];
	"yt_dlp.extractor.clipchamp" [label="<f0> SourceModule| <f1> yt_dlp.extractor.clipchamp",shape="record"];
	"yt_dlp.extractor.cjsw" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cjsw",shape="record"];
	"yt_dlp.extractor.ciscowebex" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ciscowebex",shape="record"];
	"yt_dlp.extractor.ciscolive" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ciscolive",shape="record"];
	"yt_dlp.extractor.cineverse" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cineverse",shape="record"];
	"yt_dlp.extractor.cinetecamilano" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cinetecamilano",shape="record"];
	"yt_dlp.extractor.cinemax" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cinemax",shape="record"];
	"yt_dlp.extractor.chzzk" [label="<f0> SourceModule| <f1> yt_dlp.extractor.chzzk",shape="record"];
	"yt_dlp.extractor.chilloutzone" [label="<f0> SourceModule| <f1> yt_dlp.extractor.chilloutzone",shape="record"];
	"yt_dlp.extractor.chaturbate" [label="<f0> SourceModule| <f1> yt_dlp.extractor.chaturbate",shape="record"];
	"yt_dlp.extractor.charlierose" [label="<f0> SourceModule| <f1> yt_dlp.extractor.charlierose",shape="record"];
	"yt_dlp.extractor.cgtn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cgtn",shape="record"];
	"yt_dlp.extractor.ceskatelevize" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ceskatelevize",shape="record"];
	"yt_dlp.extractor.cellebrite" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cellebrite",shape="record"];
	"yt_dlp.extractor.cda" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cda",shape="record"];
	"yt_dlp.extractor.cctv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cctv",shape="record"];
	"yt_dlp.extractor.ccma" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ccma",shape="record"];
	"yt_dlp.extractor.ccc" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ccc",shape="record"];
	"yt_dlp.extractor.cbssports" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cbssports",shape="record"];
	"yt_dlp.extractor.cbsnews" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cbsnews",shape="record"];
	"yt_dlp.extractor.cbs" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cbs",shape="record"];
	"yt_dlp.extractor.cbc" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cbc",shape="record"];
	"yt_dlp.extractor.cartoonnetwork" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cartoonnetwork",shape="record"];
	"yt_dlp.extractor.caracoltv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.caracoltv",shape="record"];
	"yt_dlp.extractor.canalsurmas" [label="<f0> SourceModule| <f1> yt_dlp.extractor.canalsurmas",shape="record"];
	"yt_dlp.extractor.canalplus" [label="<f0> SourceModule| <f1> yt_dlp.extractor.canalplus",shape="record"];
	"yt_dlp.extractor.canalc2" [label="<f0> SourceModule| <f1> yt_dlp.extractor.canalc2",shape="record"];
	"yt_dlp.extractor.canalalpha" [label="<f0> SourceModule| <f1> yt_dlp.extractor.canalalpha",shape="record"];
	"yt_dlp.extractor.canal1" [label="<f0> SourceModule| <f1> yt_dlp.extractor.canal1",shape="record"];
	"yt_dlp.extractor.camtasia" [label="<f0> SourceModule| <f1> yt_dlp.extractor.camtasia",shape="record"];
	"yt_dlp.extractor.camsoda" [label="<f0> SourceModule| <f1> yt_dlp.extractor.camsoda",shape="record"];
	"yt_dlp.extractor.cammodels" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cammodels",shape="record"];
	"yt_dlp.extractor.camfm" [label="<f0> SourceModule| <f1> yt_dlp.extractor.camfm",shape="record"];
	"yt_dlp.extractor.camdemy" [label="<f0> SourceModule| <f1> yt_dlp.extractor.camdemy",shape="record"];
	"yt_dlp.extractor.cam4" [label="<f0> SourceModule| <f1> yt_dlp.extractor.cam4",shape="record"];
	"yt_dlp.extractor.caltrans" [label="<f0> SourceModule| <f1> yt_dlp.extractor.caltrans",shape="record"];
	"yt_dlp.extractor.callin" [label="<f0> SourceModule| <f1> yt_dlp.extractor.callin",shape="record"];
	"yt_dlp.extractor.caffeinetv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.caffeinetv",shape="record"];
	"yt_dlp.extractor.c56" [label="<f0> SourceModule| <f1> yt_dlp.extractor.c56",shape="record"];
	"yt_dlp.extractor.byutv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.byutv",shape="record"];
	"yt_dlp.extractor.buzzfeed" [label="<f0> SourceModule| <f1> yt_dlp.extractor.buzzfeed",shape="record"];
	"yt_dlp.extractor.businessinsider" [label="<f0> SourceModule| <f1> yt_dlp.extractor.businessinsider",shape="record"];
	"yt_dlp.extractor.bunnycdn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bunnycdn",shape="record"];
	"yt_dlp.extractor.bundestag" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bundestag",shape="record"];
	"yt_dlp.extractor.bundesliga" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bundesliga",shape="record"];
	"yt_dlp.extractor.brilliantpala" [label="<f0> SourceModule| <f1> yt_dlp.extractor.brilliantpala",shape="record"];
	"yt_dlp.extractor.brightcove" [label="<f0> SourceModule| <f1> yt_dlp.extractor.brightcove",shape="record"];
	"yt_dlp.extractor.breitbart" [label="<f0> SourceModule| <f1> yt_dlp.extractor.breitbart",shape="record"];
	"yt_dlp.extractor.bravotv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bravotv",shape="record"];
	"yt_dlp.extractor.brainpop" [label="<f0> SourceModule| <f1> yt_dlp.extractor.brainpop",shape="record"];
	"yt_dlp.extractor.br" [label="<f0> SourceModule| <f1> yt_dlp.extractor.br",shape="record"];
	"yt_dlp.extractor.bpb" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bpb",shape="record"];
	"yt_dlp.extractor.boxcast" [label="<f0> SourceModule| <f1> yt_dlp.extractor.boxcast",shape="record"];
	"yt_dlp.extractor.box" [label="<f0> SourceModule| <f1> yt_dlp.extractor.box",shape="record"];
	"yt_dlp.extractor.bostonglobe" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bostonglobe",shape="record"];
	"yt_dlp.extractor.boosty" [label="<f0> SourceModule| <f1> yt_dlp.extractor.boosty",shape="record"];
	"yt_dlp.extractor.bongacams" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bongacams",shape="record"];
	"yt_dlp.extractor.bokecc" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bokecc",shape="record"];
	"yt_dlp.extractor.bluesky" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bluesky",shape="record"];
	"yt_dlp.extractor.bloomberg" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bloomberg",shape="record"];
	"yt_dlp.extractor.blogger" [label="<f0> SourceModule| <f1> yt_dlp.extractor.blogger",shape="record"];
	"yt_dlp.extractor.blerp" [label="<f0> SourceModule| <f1> yt_dlp.extractor.blerp",shape="record"];
	"yt_dlp.extractor.bleacherreport" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bleacherreport",shape="record"];
	"yt_dlp.extractor.blackboardcollaborate" [label="<f0> SourceModule| <f1> yt_dlp.extractor.blackboardcollaborate",shape="record"];
	"yt_dlp.extractor.bitchute" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bitchute",shape="record"];
	"yt_dlp.extractor.biobiochiletv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.biobiochiletv",shape="record"];
	"yt_dlp.extractor.bilibili" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bilibili",shape="record"];
	"yt_dlp.extractor.bild" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bild",shape="record"];
	"yt_dlp.extractor.bigo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bigo",shape="record"];
	"yt_dlp.extractor.bigflix" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bigflix",shape="record"];
	"yt_dlp.extractor.bibeltv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bibeltv",shape="record"];
	"yt_dlp.extractor.bfmtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bfmtv",shape="record"];
	"yt_dlp.extractor.bfi" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bfi",shape="record"];
	"yt_dlp.extractor.bet" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bet",shape="record"];
	"yt_dlp.extractor.berufetv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.berufetv",shape="record"];
	"yt_dlp.extractor.bellmedia" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bellmedia",shape="record"];
	"yt_dlp.extractor.behindkink" [label="<f0> SourceModule| <f1> yt_dlp.extractor.behindkink",shape="record"];
	"yt_dlp.extractor.beeg" [label="<f0> SourceModule| <f1> yt_dlp.extractor.beeg",shape="record"];
	"yt_dlp.extractor.beatport" [label="<f0> SourceModule| <f1> yt_dlp.extractor.beatport",shape="record"];
	"yt_dlp.extractor.beatbump" [label="<f0> SourceModule| <f1> yt_dlp.extractor.beatbump",shape="record"];
	"yt_dlp.extractor.beacon" [label="<f0> SourceModule| <f1> yt_dlp.extractor.beacon",shape="record"];
	"yt_dlp.extractor.bbc" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bbc",shape="record"];
	"yt_dlp.extractor.bannedvideo" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bannedvideo",shape="record"];
	"yt_dlp.extractor.bandlab" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bandlab",shape="record"];
	"yt_dlp.extractor.bandcamp" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bandcamp",shape="record"];
	"yt_dlp.extractor.bandaichannel" [label="<f0> SourceModule| <f1> yt_dlp.extractor.bandaichannel",shape="record"];
	"yt_dlp.extractor.banbye" [label="<f0> SourceModule| <f1> yt_dlp.extractor.banbye",shape="record"];
	"yt_dlp.extractor.baidu" [label="<f0> SourceModule| <f1> yt_dlp.extractor.baidu",shape="record"];
	"yt_dlp.extractor.azmedien" [label="<f0> SourceModule| <f1> yt_dlp.extractor.azmedien",shape="record"];
	"yt_dlp.extractor.axs" [label="<f0> SourceModule| <f1> yt_dlp.extractor.axs",shape="record"];
	"yt_dlp.extractor.awaan" [label="<f0> SourceModule| <f1> yt_dlp.extractor.awaan",shape="record"];
	"yt_dlp.extractor.audius" [label="<f0> SourceModule| <f1> yt_dlp.extractor.audius",shape="record"];
	"yt_dlp.extractor.audiomack" [label="<f0> SourceModule| <f1> yt_dlp.extractor.audiomack",shape="record"];
	"yt_dlp.extractor.audiodraft" [label="<f0> SourceModule| <f1> yt_dlp.extractor.audiodraft",shape="record"];
	"yt_dlp.extractor.audioboom" [label="<f0> SourceModule| <f1> yt_dlp.extractor.audioboom",shape="record"];
	"yt_dlp.extractor.audimedia" [label="<f0> SourceModule| <f1> yt_dlp.extractor.audimedia",shape="record"];
	"yt_dlp.extractor.atvat" [label="<f0> SourceModule| <f1> yt_dlp.extractor.atvat",shape="record"];
	"yt_dlp.extractor.atscaleconf" [label="<f0> SourceModule| <f1> yt_dlp.extractor.atscaleconf",shape="record"];
	"yt_dlp.extractor.atresplayer" [label="<f0> SourceModule| <f1> yt_dlp.extractor.atresplayer",shape="record"];
	"yt_dlp.extractor.asobistage" [label="<f0> SourceModule| <f1> yt_dlp.extractor.asobistage",shape="record"];
	"yt_dlp.extractor.asobichannel" [label="<f0> SourceModule| <f1> yt_dlp.extractor.asobichannel",shape="record"];
	"yt_dlp.extractor.arte" [label="<f0> SourceModule| <f1> yt_dlp.extractor.arte",shape="record"];
	"yt_dlp.extractor.art19" [label="<f0> SourceModule| <f1> yt_dlp.extractor.art19",shape="record"];
	"yt_dlp.extractor.arnes" [label="<f0> SourceModule| <f1> yt_dlp.extractor.arnes",shape="record"];
	"yt_dlp.extractor.arkena" [label="<f0> SourceModule| <f1> yt_dlp.extractor.arkena",shape="record"];
	"yt_dlp.extractor.ard" [label="<f0> SourceModule| <f1> yt_dlp.extractor.ard",shape="record"];
	"yt_dlp.extractor.arcpublishing" [label="<f0> SourceModule| <f1> yt_dlp.extractor.arcpublishing",shape="record"];
	"yt_dlp.extractor.archiveorg" [label="<f0> SourceModule| <f1> yt_dlp.extractor.archiveorg",shape="record"];
	"yt_dlp.extractor.appletrailers" [label="<f0> SourceModule| <f1> yt_dlp.extractor.appletrailers",shape="record"];
	"yt_dlp.extractor.applepodcasts" [label="<f0> SourceModule| <f1> yt_dlp.extractor.applepodcasts",shape="record"];
	"yt_dlp.extractor.appleconnect" [label="<f0> SourceModule| <f1> yt_dlp.extractor.appleconnect",shape="record"];
	"yt_dlp.extractor.aparat" [label="<f0> SourceModule| <f1> yt_dlp.extractor.aparat",shape="record"];
	"yt_dlp.extractor.apa" [label="<f0> SourceModule| <f1> yt_dlp.extractor.apa",shape="record"];
	"yt_dlp.extractor.aol" [label="<f0> SourceModule| <f1> yt_dlp.extractor.aol",shape="record"];
	"yt_dlp.extractor.anvato" [label="<f0> SourceModule| <f1> yt_dlp.extractor.anvato",shape="record"];
	"yt_dlp.extractor.antenna" [label="<f0> SourceModule| <f1> yt_dlp.extractor.antenna",shape="record"];
	"yt_dlp.extractor.angel" [label="<f0> SourceModule| <f1> yt_dlp.extractor.angel",shape="record"];
	"yt_dlp.extractor.anchorfm" [label="<f0> SourceModule| <f1> yt_dlp.extractor.anchorfm",shape="record"];
	"yt_dlp.extractor.americastestkitchen" [label="<f0> SourceModule| <f1> yt_dlp.extractor.americastestkitchen",shape="record"];
	"yt_dlp.extractor.amcnetworks" [label="<f0> SourceModule| <f1> yt_dlp.extractor.amcnetworks",shape="record"];
	"yt_dlp.extractor.amazonminitv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.amazonminitv",shape="record"];
	"yt_dlp.extractor.amazon" [label="<f0> SourceModule| <f1> yt_dlp.extractor.amazon",shape="record"];
	"yt_dlp.extractor.amara" [label="<f0> SourceModule| <f1> yt_dlp.extractor.amara",shape="record"];
	"yt_dlp.extractor.amadeustv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.amadeustv",shape="record"];
	"yt_dlp.extractor.alura" [label="<f0> SourceModule| <f1> yt_dlp.extractor.alura",shape="record"];
	"yt_dlp.extractor.altcensored" [label="<f0> SourceModule| <f1> yt_dlp.extractor.altcensored",shape="record"];
	"yt_dlp.extractor.alsace20tv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.alsace20tv",shape="record"];
	"yt_dlp.extractor.alphaporno" [label="<f0> SourceModule| <f1> yt_dlp.extractor.alphaporno",shape="record"];
	"yt_dlp.extractor.allstar" [label="<f0> SourceModule| <f1> yt_dlp.extractor.allstar",shape="record"];
	"yt_dlp.extractor.allocine" [label="<f0> SourceModule| <f1> yt_dlp.extractor.allocine",shape="record"];
	"yt_dlp.extractor.aljazeera" [label="<f0> SourceModule| <f1> yt_dlp.extractor.aljazeera",shape="record"];
	"yt_dlp.extractor.aliexpress" [label="<f0> SourceModule| <f1> yt_dlp.extractor.aliexpress",shape="record"];
	"yt_dlp.extractor.aitube" [label="<f0> SourceModule| <f1> yt_dlp.extractor.aitube",shape="record"];
	"yt_dlp.extractor.airtv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.airtv",shape="record"];
	"yt_dlp.extractor.agora" [label="<f0> SourceModule| <f1> yt_dlp.extractor.agora",shape="record"];
	"yt_dlp.extractor.afreecatv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.afreecatv",shape="record"];
	"yt_dlp.extractor.aeonco" [label="<f0> SourceModule| <f1> yt_dlp.extractor.aeonco",shape="record"];
	"yt_dlp.extractor.aenetworks" [label="<f0> SourceModule| <f1> yt_dlp.extractor.aenetworks",shape="record"];
	"yt_dlp.extractor.adultswim" [label="<f0> SourceModule| <f1> yt_dlp.extractor.adultswim",shape="record"];
	"yt_dlp.extractor.adobetv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.adobetv",shape="record"];
	"yt_dlp.extractor.adobeconnect" [label="<f0> SourceModule| <f1> yt_dlp.extractor.adobeconnect",shape="record"];
	"yt_dlp.extractor.adn" [label="<f0> SourceModule| <f1> yt_dlp.extractor.adn",shape="record"];
	"yt_dlp.extractor.acfun" [label="<f0> SourceModule| <f1> yt_dlp.extractor.acfun",shape="record"];
	"yt_dlp.extractor.acast" [label="<f0> SourceModule| <f1> yt_dlp.extractor.acast",shape="record"];
	"yt_dlp.extractor.academicearth" [label="<f0> SourceModule| <f1> yt_dlp.extractor.academicearth",shape="record"];
	"yt_dlp.extractor.abematv" [label="<f0> SourceModule| <f1> yt_dlp.extractor.abematv",shape="record"];
	"yt_dlp.extractor.abcotvs" [label="<f0> SourceModule| <f1> yt_dlp.extractor.abcotvs",shape="record"];
	"yt_dlp.extractor.abcnews" [label="<f0> SourceModule| <f1> yt_dlp.extractor.abcnews",shape="record"];
	"yt_dlp.extractor.abc" [label="<f0> SourceModule| <f1> yt_dlp.extractor.abc",shape="record"];
	"yt_dlp.downloader.external" [label="<f0> SourceModule| <f1> yt_dlp.downloader.external",shape="record"];
	"yt_dlp.webvtt" [label="<f0> SourceModule| <f1> yt_dlp.webvtt",shape="record"];
	"yt_dlp.cookies" [label="<f0> SourceModule| <f1> yt_dlp.cookies",shape="record"];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.blob_loaders.cloud_blob_loader",shape="record"];
	"cloudpathlib" [label="<f0> MissingModule| <f1> cloudpathlib",shape="record"];
	"langchain_community.document_loaders.blackboard" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.blackboard",shape="record"];
	"langchain_community.document_loaders.bilibili" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.bilibili",shape="record"];
	"bilibili_api" [label="<f0> MissingModule| <f1> bilibili_api",shape="record"];
	"langchain_community.document_loaders.bigquery" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.bigquery",shape="record"];
	"langchain_community.document_loaders.bibtex" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.bibtex",shape="record"];
	"langchain_community.utilities.bibtex" [label="<f0> SourceModule| <f1> langchain_community.utilities.bibtex",shape="record"];
	"bibtexparser" [label="<f0> MissingModule| <f1> bibtexparser",shape="record"];
	"langchain_community.document_loaders.azure_blob_storage_file" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.azure_blob_storage_file",shape="record"];
	"azure" [label="<f0> MissingModule| <f1> azure",shape="record"];
	"langchain_community.document_loaders.azure_blob_storage_container" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.azure_blob_storage_container",shape="record"];
	"langchain_community.document_loaders.azure_ai_data" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.azure_ai_data",shape="record"];
	"azureml" [label="<f0> MissingModule| <f1> azureml",shape="record"];
	"langchain_community.document_loaders.azlyrics" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.azlyrics",shape="record"];
	"langchain_community.document_loaders.athena" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.athena",shape="record"];
	"langchain_community.document_loaders.async_html" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.async_html",shape="record"];
	"langchain_community.document_loaders.astradb" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.astradb",shape="record"];
	"'astrapy.db'" [label="<f0> MissingModule| <f1> 'astrapy.db'",shape="record"];
	"langchain_community.utilities.astradb" [label="<f0> SourceModule| <f1> langchain_community.utilities.astradb",shape="record"];
	"astrapy" [label="<f0> MissingModule| <f1> astrapy",shape="record"];
	"langchain_community.document_loaders.assemblyai" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.assemblyai",shape="record"];
	"assemblyai" [label="<f0> MissingModule| <f1> assemblyai",shape="record"];
	"langchain_community.document_loaders.arxiv" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.arxiv",shape="record"];
	"langchain_community.document_loaders.arcgis_loader" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.arcgis_loader",shape="record"];
	"arcgis" [label="<f0> MissingModule| <f1> arcgis",shape="record"];
	"langchain_community.document_loaders.apify_dataset" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.apify_dataset",shape="record"];
	"apify_client" [label="<f0> MissingModule| <f1> apify_client",shape="record"];
	"langchain_community.document_loaders.airtable" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.airtable",shape="record"];
	"pyairtable" [label="<f0> MissingModule| <f1> pyairtable",shape="record"];
	"langchain_community.document_loaders.airbyte_json" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.airbyte_json",shape="record"];
	"langchain_community.document_loaders.airbyte" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.airbyte",shape="record"];
	"'airbyte_cdk.sources'" [label="<f0> MissingModule| <f1> 'airbyte_cdk.sources'",shape="record"];
	"airbyte_cdk" [label="<f0> MissingModule| <f1> airbyte_cdk",shape="record"];
	"langchain_community.document_loaders.acreom" [label="<f0> SourceModule| <f1> langchain_community.document_loaders.acreom",shape="record"];
	"langchain_core.output_parsers" [label="<f0> Package| <f1> langchain_core.output_parsers",shape="record"];
	"langchain_core.output_parsers.xml" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.xml",shape="record"];
	"defusedxml.ElementTree" [label="<f0> SourceModule| <f1> defusedxml.ElementTree",shape="record"];
	"defusedxml.common" [label="<f0> SourceModule| <f1> defusedxml.common",shape="record"];
	"defusedxml" [label="<f0> Package| <f1> defusedxml",shape="record"];
	"defusedxml.xmlrpc" [label="<f0> SourceModule| <f1> defusedxml.xmlrpc",shape="record"];
	"xmlrpclib" [label="<f0> MissingModule| <f1> xmlrpclib",shape="record"];
	"defusedxml.sax" [label="<f0> SourceModule| <f1> defusedxml.sax",shape="record"];
	"defusedxml.minidom" [label="<f0> SourceModule| <f1> defusedxml.minidom",shape="record"];
	"defusedxml.pulldom" [label="<f0> SourceModule| <f1> defusedxml.pulldom",shape="record"];
	"defusedxml.expatreader" [label="<f0> SourceModule| <f1> defusedxml.expatreader",shape="record"];
	"defusedxml.expatbuilder" [label="<f0> SourceModule| <f1> defusedxml.expatbuilder",shape="record"];
	"defusedxml.cElementTree" [label="<f0> SourceModule| <f1> defusedxml.cElementTree",shape="record"];
	"langchain_core.output_parsers.string" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.string",shape="record"];
	"langchain_core.output_parsers.pydantic" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.pydantic",shape="record"];
	"langchain_core.output_parsers.list" [label="<f0> SourceModule| <f1> langchain_core.output_parsers.list",shape="record"];
	"langchain.chains.prompt_selector" [label="<f0> SourceModule| <f1> langchain.chains.prompt_selector",shape="record"];
	"langchain_community.retrievers.weaviate_hybrid_search" [label="<f0> SourceModule| <f1> langchain_community.retrievers.weaviate_hybrid_search",shape="record"];
	"langchain_community.retrievers.vespa_retriever" [label="<f0> SourceModule| <f1> langchain_community.retrievers.vespa_retriever",shape="record"];
	"vespa" [label="<f0> MissingModule| <f1> vespa",shape="record"];
	"langchain_community.retrievers.thirdai_neuraldb" [label="<f0> SourceModule| <f1> langchain_community.retrievers.thirdai_neuraldb",shape="record"];
	"langchain_community.retrievers.tfidf" [label="<f0> SourceModule| <f1> langchain_community.retrievers.tfidf",shape="record"];
	"'sklearn.metrics'" [label="<f0> MissingModule| <f1> 'sklearn.metrics'",shape="record"];
	"'sklearn.feature_extraction'" [label="<f0> MissingModule| <f1> 'sklearn.feature_extraction'",shape="record"];
	"langchain_community.retrievers.tavily_search_api" [label="<f0> SourceModule| <f1> langchain_community.retrievers.tavily_search_api",shape="record"];
	"tavily" [label="<f0> MissingModule| <f1> tavily",shape="record"];
	"langchain_community.retrievers.svm" [label="<f0> SourceModule| <f1> langchain_community.retrievers.svm",shape="record"];
	"langchain_community.retrievers.remote_retriever" [label="<f0> SourceModule| <f1> langchain_community.retrievers.remote_retriever",shape="record"];
	"langchain_community.retrievers.rememberizer" [label="<f0> SourceModule| <f1> langchain_community.retrievers.rememberizer",shape="record"];
	"langchain_community.utilities.rememberizer" [label="<f0> SourceModule| <f1> langchain_community.utilities.rememberizer",shape="record"];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" [label="<f0> SourceModule| <f1> langchain_community.retrievers.qdrant_sparse_vector_retriever",shape="record"];
	"'qdrant_client.http'" [label="<f0> MissingModule| <f1> 'qdrant_client.http'",shape="record"];
	"qdrant_client" [label="<f0> MissingModule| <f1> qdrant_client",shape="record"];
	"langchain_community.retrievers.pubmed" [label="<f0> SourceModule| <f1> langchain_community.retrievers.pubmed",shape="record"];
	"langchain_community.retrievers.pinecone_hybrid_search" [label="<f0> SourceModule| <f1> langchain_community.retrievers.pinecone_hybrid_search",shape="record"];
	"'pinecone_text.hybrid'" [label="<f0> MissingModule| <f1> 'pinecone_text.hybrid'",shape="record"];
	"'pinecone_text.sparse'" [label="<f0> MissingModule| <f1> 'pinecone_text.sparse'",shape="record"];
	"pinecone_text" [label="<f0> MissingModule| <f1> pinecone_text",shape="record"];
	"langchain_community.retrievers.outline" [label="<f0> SourceModule| <f1> langchain_community.retrievers.outline",shape="record"];
	"langchain_community.utilities.outline" [label="<f0> SourceModule| <f1> langchain_community.utilities.outline",shape="record"];
	"langchain_community.retrievers.needle" [label="<f0> SourceModule| <f1> langchain_community.retrievers.needle",shape="record"];
	"langchain_community.retrievers.nanopq" [label="<f0> SourceModule| <f1> langchain_community.retrievers.nanopq",shape="record"];
	"nanopq" [label="<f0> MissingModule| <f1> nanopq",shape="record"];
	"langchain_community.retrievers.milvus" [label="<f0> SourceModule| <f1> langchain_community.retrievers.milvus",shape="record"];
	"langchain_community.retrievers.metal" [label="<f0> SourceModule| <f1> langchain_community.retrievers.metal",shape="record"];
	"metal_sdk" [label="<f0> MissingModule| <f1> metal_sdk",shape="record"];
	"langchain_community.retrievers.llama_index" [label="<f0> SourceModule| <f1> langchain_community.retrievers.llama_index",shape="record"];
	"'llama_index.core'" [label="<f0> MissingModule| <f1> 'llama_index.core'",shape="record"];
	"llama_index" [label="<f0> MissingModule| <f1> llama_index",shape="record"];
	"langchain_community.retrievers.knn" [label="<f0> SourceModule| <f1> langchain_community.retrievers.knn",shape="record"];
	"langchain_community.retrievers.kendra" [label="<f0> SourceModule| <f1> langchain_community.retrievers.kendra",shape="record"];
	"langchain_community.retrievers.kay" [label="<f0> SourceModule| <f1> langchain_community.retrievers.kay",shape="record"];
	"kay" [label="<f0> MissingModule| <f1> kay",shape="record"];
	"langchain_community.retrievers.google_vertex_ai_search" [label="<f0> SourceModule| <f1> langchain_community.retrievers.google_vertex_ai_search",shape="record"];
	"'google.cloud.discoveryengine_v1beta'" [label="<f0> MissingModule| <f1> 'google.cloud.discoveryengine_v1beta'",shape="record"];
	"langchain_community.retrievers.google_cloud_documentai_warehouse" [label="<f0> SourceModule| <f1> langchain_community.retrievers.google_cloud_documentai_warehouse",shape="record"];
	"'google.cloud.contentwarehouse_v1'" [label="<f0> MissingModule| <f1> 'google.cloud.contentwarehouse_v1'",shape="record"];
	"langchain_community.retrievers.embedchain" [label="<f0> SourceModule| <f1> langchain_community.retrievers.embedchain",shape="record"];
	"embedchain" [label="<f0> MissingModule| <f1> embedchain",shape="record"];
	"langchain_community.retrievers.elastic_search_bm25" [label="<f0> SourceModule| <f1> langchain_community.retrievers.elastic_search_bm25",shape="record"];
	"langchain_community.retrievers.dria_index" [label="<f0> SourceModule| <f1> langchain_community.retrievers.dria_index",shape="record"];
	"langchain_community.retrievers.docarray" [label="<f0> SourceModule| <f1> langchain_community.retrievers.docarray",shape="record"];
	"'docarray.index'" [label="<f0> MissingModule| <f1> 'docarray.index'",shape="record"];
	"langchain_community.retrievers.cohere_rag_retriever" [label="<f0> SourceModule| <f1> langchain_community.retrievers.cohere_rag_retriever",shape="record"];
	"langchain_community.retrievers.chatgpt_plugin_retriever" [label="<f0> SourceModule| <f1> langchain_community.retrievers.chatgpt_plugin_retriever",shape="record"];
	"langchain_community.retrievers.chaindesk" [label="<f0> SourceModule| <f1> langchain_community.retrievers.chaindesk",shape="record"];
	"langchain_community.retrievers.breebs" [label="<f0> SourceModule| <f1> langchain_community.retrievers.breebs",shape="record"];
	"langchain_community.retrievers.bm25" [label="<f0> SourceModule| <f1> langchain_community.retrievers.bm25",shape="record"];
	"rank_bm25" [label="<f0> MissingModule| <f1> rank_bm25",shape="record"];
	"langchain_community.retrievers.bedrock" [label="<f0> SourceModule| <f1> langchain_community.retrievers.bedrock",shape="record"];
	"'botocore.exceptions'" [label="<f0> MissingModule| <f1> 'botocore.exceptions'",shape="record"];
	"'botocore.client'" [label="<f0> MissingModule| <f1> 'botocore.client'",shape="record"];
	"langchain_community.retrievers.azure_ai_search" [label="<f0> SourceModule| <f1> langchain_community.retrievers.azure_ai_search",shape="record"];
	"langchain_community.retrievers.asknews" [label="<f0> SourceModule| <f1> langchain_community.retrievers.asknews",shape="record"];
	"'asknews_sdk.dto'" [label="<f0> MissingModule| <f1> 'asknews_sdk.dto'",shape="record"];
	"langchain_community.retrievers.arxiv" [label="<f0> SourceModule| <f1> langchain_community.retrievers.arxiv",shape="record"];
	"langchain_community.retrievers.arcee" [label="<f0> SourceModule| <f1> langchain_community.retrievers.arcee",shape="record"];
	"langchain_community.utilities.arcee" [label="<f0> SourceModule| <f1> langchain_community.utilities.arcee",shape="record"];
	"langchain.retrievers.time_weighted_retriever" [label="<f0> SourceModule| <f1> langchain.retrievers.time_weighted_retriever",shape="record"];
	"langchain.retrievers.self_query.base" [label="<f0> SourceModule| <f1> langchain.retrievers.self_query.base",shape="record"];
	"langchain_weaviate" [label="<f0> MissingModule| <f1> langchain_weaviate",shape="record"];
	"langchain_community.query_constructors.hanavector" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.hanavector",shape="record"];
	"langchain_community.query_constructors" [label="<f0> Package| <f1> langchain_community.query_constructors",shape="record"];
	"langchain_qdrant" [label="<f0> MissingModule| <f1> langchain_qdrant",shape="record"];
	"langchain_postgres" [label="<f0> MissingModule| <f1> langchain_postgres",shape="record"];
	"langchain_chroma" [label="<f0> MissingModule| <f1> langchain_chroma",shape="record"];
	"langchain_neo4j" [label="<f0> MissingModule| <f1> langchain_neo4j",shape="record"];
	"langchain_mongodb" [label="<f0> MissingModule| <f1> langchain_mongodb",shape="record"];
	"langchain_pinecone" [label="<f0> MissingModule| <f1> langchain_pinecone",shape="record"];
	"langchain_elasticsearch" [label="<f0> MissingModule| <f1> langchain_elasticsearch",shape="record"];
	"langchain_astradb" [label="<f0> MissingModule| <f1> langchain_astradb",shape="record"];
	"langchain_community.query_constructors.weaviate" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.weaviate",shape="record"];
	"langchain_community.query_constructors.vectara" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.vectara",shape="record"];
	"langchain_community.query_constructors.timescalevector" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.timescalevector",shape="record"];
	"langchain_community.query_constructors.supabase" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.supabase",shape="record"];
	"langchain_community.query_constructors.redis" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.redis",shape="record"];
	"langchain_community.vectorstores.redis.schema" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.redis.schema",shape="record"];
	"'redis.commands'" [label="<f0> MissingModule| <f1> 'redis.commands'",shape="record"];
	"langchain_community.vectorstores.redis.constants" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.redis.constants",shape="record"];
	"langchain_community.vectorstores.redis.filters" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.redis.filters",shape="record"];
	"langchain_community.utilities.redis" [label="<f0> SourceModule| <f1> langchain_community.utilities.redis",shape="record"];
	"'redis.client'" [label="<f0> MissingModule| <f1> 'redis.client'",shape="record"];
	"langchain_community.query_constructors.qdrant" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.qdrant",shape="record"];
	"langchain_community.query_constructors.pinecone" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.pinecone",shape="record"];
	"langchain_community.query_constructors.pgvector" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.pgvector",shape="record"];
	"langchain_community.query_constructors.opensearch" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.opensearch",shape="record"];
	"langchain_community.query_constructors.neo4j" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.neo4j",shape="record"];
	"langchain_community.query_constructors.myscale" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.myscale",shape="record"];
	"langchain_community.query_constructors.mongodb_atlas" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.mongodb_atlas",shape="record"];
	"langchain_community.query_constructors.milvus" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.milvus",shape="record"];
	"langchain_community.query_constructors.elasticsearch" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.elasticsearch",shape="record"];
	"langchain_community.query_constructors.dingo" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.dingo",shape="record"];
	"langchain_community.query_constructors.deeplake" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.deeplake",shape="record"];
	"langchain_community.query_constructors.databricks_vector_search" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.databricks_vector_search",shape="record"];
	"langchain_community.query_constructors.dashvector" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.dashvector",shape="record"];
	"langchain_community.query_constructors.chroma" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.chroma",shape="record"];
	"langchain_community.query_constructors.astradb" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.astradb",shape="record"];
	"langchain.chains.query_constructor.schema" [label="<f0> SourceModule| <f1> langchain.chains.query_constructor.schema",shape="record"];
	"langchain.chains.query_constructor" [label="<f0> Package| <f1> langchain.chains.query_constructor",shape="record"];
	"langchain.retrievers.re_phraser" [label="<f0> SourceModule| <f1> langchain.retrievers.re_phraser",shape="record"];
	"langchain.retrievers.parent_document_retriever" [label="<f0> SourceModule| <f1> langchain.retrievers.parent_document_retriever",shape="record"];
	"langchain.retrievers.multi_vector" [label="<f0> SourceModule| <f1> langchain.retrievers.multi_vector",shape="record"];
	"langchain.storage._lc_store" [label="<f0> SourceModule| <f1> langchain.storage._lc_store",shape="record"];
	"langchain.storage" [label="<f0> Package| <f1> langchain.storage",shape="record"];
	"langchain_community.storage" [label="<f0> Package| <f1> langchain_community.storage",shape="record"];
	"langchain_community.storage.upstash_redis" [label="<f0> SourceModule| <f1> langchain_community.storage.upstash_redis",shape="record"];
	"upstash_redis" [label="<f0> MissingModule| <f1> upstash_redis",shape="record"];
	"langchain_community.storage.sql" [label="<f0> SourceModule| <f1> langchain_community.storage.sql",shape="record"];
	"langchain_community.storage.redis" [label="<f0> SourceModule| <f1> langchain_community.storage.redis",shape="record"];
	"langchain_community.storage.mongodb" [label="<f0> SourceModule| <f1> langchain_community.storage.mongodb",shape="record"];
	"pymongo" [label="<f0> MissingModule| <f1> pymongo",shape="record"];
	"langchain_community.storage.cassandra" [label="<f0> SourceModule| <f1> langchain_community.storage.cassandra",shape="record"];
	"langchain_community.storage.astradb" [label="<f0> SourceModule| <f1> langchain_community.storage.astradb",shape="record"];
	"langchain.storage.file_system" [label="<f0> SourceModule| <f1> langchain.storage.file_system",shape="record"];
	"langchain.storage.exceptions" [label="<f0> SourceModule| <f1> langchain.storage.exceptions",shape="record"];
	"langchain.storage.encoder_backed" [label="<f0> SourceModule| <f1> langchain.storage.encoder_backed",shape="record"];
	"langchain.retrievers.multi_query" [label="<f0> SourceModule| <f1> langchain.retrievers.multi_query",shape="record"];
	"langchain.retrievers.merger_retriever" [label="<f0> SourceModule| <f1> langchain.retrievers.merger_retriever",shape="record"];
	"langchain.retrievers.ensemble" [label="<f0> SourceModule| <f1> langchain.retrievers.ensemble",shape="record"];
	"langchain.retrievers.contextual_compression" [label="<f0> SourceModule| <f1> langchain.retrievers.contextual_compression",shape="record"];
	"langchain.retrievers.document_compressors.base" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.base",shape="record"];
	"langchain.retrievers.document_compressors" [label="<f0> Package| <f1> langchain.retrievers.document_compressors",shape="record"];
	"langchain.retrievers.document_compressors.listwise_rerank" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.listwise_rerank",shape="record"];
	"langchain.retrievers.document_compressors.embeddings_filter" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.embeddings_filter",shape="record"];
	"langchain.retrievers.document_compressors.cross_encoder_rerank" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.cross_encoder_rerank",shape="record"];
	"langchain.retrievers.document_compressors.cross_encoder" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.cross_encoder",shape="record"];
	"langchain.retrievers.document_compressors.cohere_rerank" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.cohere_rerank",shape="record"];
	"langchain.retrievers.document_compressors.chain_filter" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.chain_filter",shape="record"];
	"langchain.retrievers.document_compressors.chain_filter_prompt" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.chain_filter_prompt",shape="record"];
	"langchain.retrievers.document_compressors.chain_extract" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.chain_extract",shape="record"];
	"langchain.retrievers.document_compressors.chain_extract_prompt" [label="<f0> SourceModule| <f1> langchain.retrievers.document_compressors.chain_extract_prompt",shape="record"];
	"langchain._api.module_import" [label="<f0> SourceModule| <f1> langchain._api.module_import",shape="record"];
	"langchain_community.query_constructors.tencentvectordb" [label="<f0> SourceModule| <f1> langchain_community.query_constructors.tencentvectordb",shape="record"];
	"langchain._api" [label="<f0> Package| <f1> langchain._api",shape="record"];
	"langchain._api.deprecation" [label="<f0> SourceModule| <f1> langchain._api.deprecation",shape="record"];
	"langchain.chains.query_constructor.parser" [label="<f0> SourceModule| <f1> langchain.chains.query_constructor.parser",shape="record"];
	"lark" [label="<f0> MissingModule| <f1> lark",shape="record"];
	"langchain.chains.query_constructor.base" [label="<f0> SourceModule| <f1> langchain.chains.query_constructor.base",shape="record"];
	"langchain.chains.query_constructor.prompt" [label="<f0> SourceModule| <f1> langchain.chains.query_constructor.prompt",shape="record"];
	"langchain_core.prompts.few_shot" [label="<f0> SourceModule| <f1> langchain_core.prompts.few_shot",shape="record"];
	"langchain_core.example_selectors" [label="<f0> Package| <f1> langchain_core.example_selectors",shape="record"];
	"langchain_core.example_selectors.semantic_similarity" [label="<f0> SourceModule| <f1> langchain_core.example_selectors.semantic_similarity",shape="record"];
	"langchain_core.example_selectors.length_based" [label="<f0> SourceModule| <f1> langchain_core.example_selectors.length_based",shape="record"];
	"langchain_core.example_selectors.base" [label="<f0> SourceModule| <f1> langchain_core.example_selectors.base",shape="record"];
	"langchain_community.vectorstores.tair" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.tair",shape="record"];
	"tair" [label="<f0> MissingModule| <f1> tair",shape="record"];
	"langchain_community.vectorstores.tablestore" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.tablestore",shape="record"];
	"tablestore" [label="<f0> MissingModule| <f1> tablestore",shape="record"];
	"langchain_community.vectorstores.surrealdb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.surrealdb",shape="record"];
	"'surrealdb.ws'" [label="<f0> MissingModule| <f1> 'surrealdb.ws'",shape="record"];
	"langchain_community.vectorstores.supabase" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.supabase",shape="record"];
	"langchain_community.vectorstores.starrocks" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.starrocks",shape="record"];
	"pymysql" [label="<f0> MissingModule| <f1> pymysql",shape="record"];
	"langchain_community.vectorstores.sqlitevss" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.sqlitevss",shape="record"];
	"sqlite_vss" [label="<f0> MissingModule| <f1> sqlite_vss",shape="record"];
	"langchain_community.vectorstores.sqlitevec" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.sqlitevec",shape="record"];
	"sqlite_vec" [label="<f0> MissingModule| <f1> sqlite_vec",shape="record"];
	"langchain_community.vectorstores.sklearn" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.sklearn",shape="record"];
	"langchain_community.vectorstores.singlestoredb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.singlestoredb",shape="record"];
	"singlestoredb" [label="<f0> MissingModule| <f1> singlestoredb",shape="record"];
	"langchain_community.vectorstores.semadb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.semadb",shape="record"];
	"langchain_community.vectorstores.scann" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.scann",shape="record"];
	"langchain_community.vectorstores.rocksetdb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.rocksetdb",shape="record"];
	"langchain_community.vectorstores.relyt" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.relyt",shape="record"];
	"'pgvecto_rs.sqlalchemy'" [label="<f0> MissingModule| <f1> 'pgvecto_rs.sqlalchemy'",shape="record"];
	"pgvecto_rs" [label="<f0> MissingModule| <f1> pgvecto_rs",shape="record"];
	"langchain_community.vectorstores.redis" [label="<f0> Package| <f1> langchain_community.vectorstores.redis",shape="record"];
	"langchain_community.vectorstores.redis.base" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.redis.base",shape="record"];
	"langchain_community.vectorstores.qdrant" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.qdrant",shape="record"];
	"'qdrant_client.local'" [label="<f0> MissingModule| <f1> 'qdrant_client.local'",shape="record"];
	"'qdrant_client.conversions'" [label="<f0> MissingModule| <f1> 'qdrant_client.conversions'",shape="record"];
	"langchain_community.vectorstores.pinecone" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.pinecone",shape="record"];
	"pinecone" [label="<f0> MissingModule| <f1> pinecone",shape="record"];
	"langchain_community.vectorstores.pgvector" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.pgvector",shape="record"];
	"pgvector" [label="<f0> MissingModule| <f1> pgvector",shape="record"];
	"langchain_community.vectorstores.pgembedding" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.pgembedding",shape="record"];
	"langchain_community.vectorstores.pathway" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.pathway",shape="record"];
	"langchain_community.vectorstores.oraclevs" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.oraclevs",shape="record"];
	"langchain_community.vectorstores.opensearch_vector_search" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.opensearch_vector_search",shape="record"];
	"'opensearchpy.helpers'" [label="<f0> MissingModule| <f1> 'opensearchpy.helpers'",shape="record"];
	"'opensearchpy.exceptions'" [label="<f0> MissingModule| <f1> 'opensearchpy.exceptions'",shape="record"];
	"opensearchpy" [label="<f0> MissingModule| <f1> opensearchpy",shape="record"];
	"langchain_community.vectorstores.neo4j_vector" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.neo4j_vector",shape="record"];
	"'neo4j.exceptions'" [label="<f0> MissingModule| <f1> 'neo4j.exceptions'",shape="record"];
	"neo4j" [label="<f0> MissingModule| <f1> neo4j",shape="record"];
	"langchain_community.graphs" [label="<f0> Package| <f1> langchain_community.graphs",shape="record"];
	"langchain_community.graphs.tigergraph_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.tigergraph_graph",shape="record"];
	"pyTigerGraph" [label="<f0> MissingModule| <f1> pyTigerGraph",shape="record"];
	"langchain_community.graphs.graph_store" [label="<f0> SourceModule| <f1> langchain_community.graphs.graph_store",shape="record"];
	"langchain_community.graphs.graph_document" [label="<f0> SourceModule| <f1> langchain_community.graphs.graph_document",shape="record"];
	"langchain_community.graphs.rdf_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.rdf_graph",shape="record"];
	"'rdflib.query'" [label="<f0> MissingModule| <f1> 'rdflib.query'",shape="record"];
	"'rdflib.exceptions'" [label="<f0> MissingModule| <f1> 'rdflib.exceptions'",shape="record"];
	"'rdflib.plugins'" [label="<f0> MissingModule| <f1> 'rdflib.plugins'",shape="record"];
	"rdflib" [label="<f0> MissingModule| <f1> rdflib",shape="record"];
	"langchain_community.graphs.ontotext_graphdb_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.ontotext_graphdb_graph",shape="record"];
	"pyparsing" [label="<f0> MissingModule| <f1> pyparsing",shape="record"];
	"langchain_community.graphs.networkx_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.networkx_graph",shape="record"];
	"pygraphviz" [label="<f0> MissingModule| <f1> pygraphviz",shape="record"];
	"'networkx.drawing'" [label="<f0> MissingModule| <f1> 'networkx.drawing'",shape="record"];
	"networkx" [label="<f0> MissingModule| <f1> networkx",shape="record"];
	"langchain_community.graphs.neptune_rdf_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.neptune_rdf_graph",shape="record"];
	"'botocore.config'" [label="<f0> MissingModule| <f1> 'botocore.config'",shape="record"];
	"langchain_community.graphs.neptune_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.neptune_graph",shape="record"];
	"langchain_community.graphs.neo4j_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.neo4j_graph",shape="record"];
	"langchain_community.graphs.nebula_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.nebula_graph",shape="record"];
	"'nebula3.fbthrift'" [label="<f0> MissingModule| <f1> 'nebula3.fbthrift'",shape="record"];
	"'nebula3.gclient'" [label="<f0> MissingModule| <f1> 'nebula3.gclient'",shape="record"];
	"'nebula3.Exception'" [label="<f0> MissingModule| <f1> 'nebula3.Exception'",shape="record"];
	"'nebula3.Config'" [label="<f0> MissingModule| <f1> 'nebula3.Config'",shape="record"];
	"nebula3" [label="<f0> MissingModule| <f1> nebula3",shape="record"];
	"langchain_community.graphs.memgraph_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.memgraph_graph",shape="record"];
	"langchain_community.graphs.kuzu_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.kuzu_graph",shape="record"];
	"kuzu" [label="<f0> MissingModule| <f1> kuzu",shape="record"];
	"langchain_community.graphs.hugegraph" [label="<f0> SourceModule| <f1> langchain_community.graphs.hugegraph",shape="record"];
	"hugegraph" [label="<f0> MissingModule| <f1> hugegraph",shape="record"];
	"langchain_community.graphs.gremlin_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.gremlin_graph",shape="record"];
	"gremlin_python" [label="<f0> MissingModule| <f1> gremlin_python",shape="record"];
	"langchain_community.graphs.falkordb_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.falkordb_graph",shape="record"];
	"falkordb" [label="<f0> MissingModule| <f1> falkordb",shape="record"];
	"langchain_community.graphs.arangodb_graph" [label="<f0> SourceModule| <f1> langchain_community.graphs.arangodb_graph",shape="record"];
	"arango" [label="<f0> MissingModule| <f1> arango",shape="record"];
	"langchain_community.vectorstores.myscale" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.myscale",shape="record"];
	"clickhouse_connect" [label="<f0> MissingModule| <f1> clickhouse_connect",shape="record"];
	"langchain_community.vectorstores.mongodb_atlas" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.mongodb_atlas",shape="record"];
	"'pymongo.driver_info'" [label="<f0> MissingModule| <f1> 'pymongo.driver_info'",shape="record"];
	"'pymongo.collection'" [label="<f0> MissingModule| <f1> 'pymongo.collection'",shape="record"];
	"langchain_community.vectorstores.momento_vector_index" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.momento_vector_index",shape="record"];
	"'momento.responses'" [label="<f0> MissingModule| <f1> 'momento.responses'",shape="record"];
	"'momento.requests'" [label="<f0> MissingModule| <f1> 'momento.requests'",shape="record"];
	"momento" [label="<f0> MissingModule| <f1> momento",shape="record"];
	"langchain_community.vectorstores.milvus" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.milvus",shape="record"];
	"'pymilvus.client'" [label="<f0> MissingModule| <f1> 'pymilvus.client'",shape="record"];
	"'pymilvus.orm'" [label="<f0> MissingModule| <f1> 'pymilvus.orm'",shape="record"];
	"langchain_community.vectorstores.meilisearch" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.meilisearch",shape="record"];
	"meilisearch" [label="<f0> MissingModule| <f1> meilisearch",shape="record"];
	"langchain_community.vectorstores.matching_engine" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.matching_engine",shape="record"];
	"langchain_community.embeddings" [label="<f0> Package| <f1> langchain_community.embeddings",shape="record"];
	"langchain.chains.hyde.base" [label="<f0> SourceModule| <f1> langchain.chains.hyde.base",shape="record"];
	"langchain.chains.hyde" [label="<f0> Package| <f1> langchain.chains.hyde",shape="record"];
	"langchain.chains.hyde.prompts" [label="<f0> SourceModule| <f1> langchain.chains.hyde.prompts",shape="record"];
	"langchain_community.embeddings.zhipuai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.zhipuai",shape="record"];
	"zhipuai" [label="<f0> MissingModule| <f1> zhipuai",shape="record"];
	"langchain_community.embeddings.yandex" [label="<f0> SourceModule| <f1> langchain_community.embeddings.yandex",shape="record"];
	"langchain_community.embeddings.xinference" [label="<f0> SourceModule| <f1> langchain_community.embeddings.xinference",shape="record"];
	"xinference_client" [label="<f0> MissingModule| <f1> xinference_client",shape="record"];
	"'xinference.client'" [label="<f0> MissingModule| <f1> 'xinference.client'",shape="record"];
	"langchain_community.embeddings.voyageai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.voyageai",shape="record"];
	"langchain_community.embeddings.volcengine" [label="<f0> SourceModule| <f1> langchain_community.embeddings.volcengine",shape="record"];
	"'volcengine.maas'" [label="<f0> MissingModule| <f1> 'volcengine.maas'",shape="record"];
	"langchain_community.embeddings.vertexai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.vertexai",shape="record"];
	"langchain_community.embeddings.titan_takeoff" [label="<f0> SourceModule| <f1> langchain_community.embeddings.titan_takeoff",shape="record"];
	"takeoff_client" [label="<f0> MissingModule| <f1> takeoff_client",shape="record"];
	"langchain_community.embeddings.textembed" [label="<f0> SourceModule| <f1> langchain_community.embeddings.textembed",shape="record"];
	"langchain_community.embeddings.tensorflow_hub" [label="<f0> SourceModule| <f1> langchain_community.embeddings.tensorflow_hub",shape="record"];
	"tensorflow_text" [label="<f0> MissingModule| <f1> tensorflow_text",shape="record"];
	"tensorflow_hub" [label="<f0> MissingModule| <f1> tensorflow_hub",shape="record"];
	"langchain_community.embeddings.sparkllm" [label="<f0> SourceModule| <f1> langchain_community.embeddings.sparkllm",shape="record"];
	"langchain_community.embeddings.spacy_embeddings" [label="<f0> SourceModule| <f1> langchain_community.embeddings.spacy_embeddings",shape="record"];
	"langchain_community.embeddings.solar" [label="<f0> SourceModule| <f1> langchain_community.embeddings.solar",shape="record"];
	"langchain_community.embeddings.sentence_transformer" [label="<f0> SourceModule| <f1> langchain_community.embeddings.sentence_transformer",shape="record"];
	"langchain_community.embeddings.self_hosted_hugging_face" [label="<f0> SourceModule| <f1> langchain_community.embeddings.self_hosted_hugging_face",shape="record"];
	"InstructorEmbedding" [label="<f0> MissingModule| <f1> InstructorEmbedding",shape="record"];
	"sentence_transformers" [label="<f0> MissingModule| <f1> sentence_transformers",shape="record"];
	"langchain_community.embeddings.self_hosted" [label="<f0> SourceModule| <f1> langchain_community.embeddings.self_hosted",shape="record"];
	"langchain_community.llms.self_hosted" [label="<f0> SourceModule| <f1> langchain_community.llms.self_hosted",shape="record"];
	"runhouse" [label="<f0> MissingModule| <f1> runhouse",shape="record"];
	"langchain_community.embeddings.sambanova" [label="<f0> SourceModule| <f1> langchain_community.embeddings.sambanova",shape="record"];
	"langchain_community.embeddings.sagemaker_endpoint" [label="<f0> SourceModule| <f1> langchain_community.embeddings.sagemaker_endpoint",shape="record"];
	"langchain_community.llms.sagemaker_endpoint" [label="<f0> SourceModule| <f1> langchain_community.llms.sagemaker_endpoint",shape="record"];
	"langchain_community.embeddings.premai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.premai",shape="record"];
	"langchain_community.embeddings.ovhcloud" [label="<f0> SourceModule| <f1> langchain_community.embeddings.ovhcloud",shape="record"];
	"langchain_community.embeddings.oracleai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.oracleai",shape="record"];
	"langchain_community.embeddings.optimum_intel" [label="<f0> SourceModule| <f1> langchain_community.embeddings.optimum_intel",shape="record"];
	"'optimum.intel'" [label="<f0> MissingModule| <f1> 'optimum.intel'",shape="record"];
	"langchain_community.embeddings.openvino" [label="<f0> SourceModule| <f1> langchain_community.embeddings.openvino",shape="record"];
	"langchain_community.embeddings.openai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.openai",shape="record"];
	"langchain_community.embeddings.ollama" [label="<f0> SourceModule| <f1> langchain_community.embeddings.ollama",shape="record"];
	"langchain_community.embeddings.octoai_embeddings" [label="<f0> SourceModule| <f1> langchain_community.embeddings.octoai_embeddings",shape="record"];
	"langchain_community.embeddings.oci_generative_ai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.oci_generative_ai",shape="record"];
	"langchain_community.embeddings.nlpcloud" [label="<f0> SourceModule| <f1> langchain_community.embeddings.nlpcloud",shape="record"];
	"nlpcloud" [label="<f0> MissingModule| <f1> nlpcloud",shape="record"];
	"langchain_community.embeddings.nemo" [label="<f0> SourceModule| <f1> langchain_community.embeddings.nemo",shape="record"];
	"langchain_community.embeddings.naver" [label="<f0> SourceModule| <f1> langchain_community.embeddings.naver",shape="record"];
	"langchain_community.embeddings.mosaicml" [label="<f0> SourceModule| <f1> langchain_community.embeddings.mosaicml",shape="record"];
	"langchain_community.embeddings.modelscope_hub" [label="<f0> SourceModule| <f1> langchain_community.embeddings.modelscope_hub",shape="record"];
	"'modelscope.utils'" [label="<f0> MissingModule| <f1> 'modelscope.utils'",shape="record"];
	"modelscope" [label="<f0> MissingModule| <f1> modelscope",shape="record"];
	"langchain_community.embeddings.model2vec" [label="<f0> SourceModule| <f1> langchain_community.embeddings.model2vec",shape="record"];
	"model2vec" [label="<f0> MissingModule| <f1> model2vec",shape="record"];
	"langchain_community.embeddings.mlflow_gateway" [label="<f0> SourceModule| <f1> langchain_community.embeddings.mlflow_gateway",shape="record"];
	"langchain_community.embeddings.mlflow" [label="<f0> SourceModule| <f1> langchain_community.embeddings.mlflow",shape="record"];
	"langchain_community.embeddings.minimax" [label="<f0> SourceModule| <f1> langchain_community.embeddings.minimax",shape="record"];
	"langchain_community.embeddings.localai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.localai",shape="record"];
	"langchain_community.embeddings.llm_rails" [label="<f0> SourceModule| <f1> langchain_community.embeddings.llm_rails",shape="record"];
	"langchain_community.embeddings.llamafile" [label="<f0> SourceModule| <f1> langchain_community.embeddings.llamafile",shape="record"];
	"langchain_community.embeddings.llamacpp" [label="<f0> SourceModule| <f1> langchain_community.embeddings.llamacpp",shape="record"];
	"langchain_community.embeddings.laser" [label="<f0> SourceModule| <f1> langchain_community.embeddings.laser",shape="record"];
	"laser_encoders" [label="<f0> MissingModule| <f1> laser_encoders",shape="record"];
	"langchain_community.embeddings.johnsnowlabs" [label="<f0> SourceModule| <f1> langchain_community.embeddings.johnsnowlabs",shape="record"];
	"nlu" [label="<f0> MissingModule| <f1> nlu",shape="record"];
	"johnsnowlabs" [label="<f0> MissingModule| <f1> johnsnowlabs",shape="record"];
	"langchain_community.embeddings.jina" [label="<f0> SourceModule| <f1> langchain_community.embeddings.jina",shape="record"];
	"langchain_community.embeddings.javelin_ai_gateway" [label="<f0> SourceModule| <f1> langchain_community.embeddings.javelin_ai_gateway",shape="record"];
	"langchain_community.embeddings.itrex" [label="<f0> SourceModule| <f1> langchain_community.embeddings.itrex",shape="record"];
	"'intel_extension_for_transformers.transformers'" [label="<f0> MissingModule| <f1> 'intel_extension_for_transformers.transformers'",shape="record"];
	"langchain_community.embeddings.ipex_llm" [label="<f0> SourceModule| <f1> langchain_community.embeddings.ipex_llm",shape="record"];
	"'ipex_llm.transformers'" [label="<f0> MissingModule| <f1> 'ipex_llm.transformers'",shape="record"];
	"langchain_community.embeddings.infinity_local" [label="<f0> SourceModule| <f1> langchain_community.embeddings.infinity_local",shape="record"];
	"infinity_emb" [label="<f0> MissingModule| <f1> infinity_emb",shape="record"];
	"langchain_community.embeddings.infinity" [label="<f0> SourceModule| <f1> langchain_community.embeddings.infinity",shape="record"];
	"langchain_community.embeddings.hunyuan" [label="<f0> SourceModule| <f1> langchain_community.embeddings.hunyuan",shape="record"];
	"'tencentcloud.common'" [label="<f0> MissingModule| <f1> 'tencentcloud.common'",shape="record"];
	"langchain_community.embeddings.huggingface_hub" [label="<f0> SourceModule| <f1> langchain_community.embeddings.huggingface_hub",shape="record"];
	"langchain_community.embeddings.huggingface" [label="<f0> SourceModule| <f1> langchain_community.embeddings.huggingface",shape="record"];
	"langchain_community.embeddings.gradient_ai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.gradient_ai",shape="record"];
	"gradientai" [label="<f0> MissingModule| <f1> gradientai",shape="record"];
	"langchain_community.embeddings.gpt4all" [label="<f0> SourceModule| <f1> langchain_community.embeddings.gpt4all",shape="record"];
	"gpt4all" [label="<f0> MissingModule| <f1> gpt4all",shape="record"];
	"langchain_community.embeddings.google_palm" [label="<f0> SourceModule| <f1> langchain_community.embeddings.google_palm",shape="record"];
	"langchain_community.embeddings.gigachat" [label="<f0> SourceModule| <f1> langchain_community.embeddings.gigachat",shape="record"];
	"langchain_community.embeddings.fastembed" [label="<f0> SourceModule| <f1> langchain_community.embeddings.fastembed",shape="record"];
	"langchain_community.embeddings.fake" [label="<f0> SourceModule| <f1> langchain_community.embeddings.fake",shape="record"];
	"langchain_community.embeddings.ernie" [label="<f0> SourceModule| <f1> langchain_community.embeddings.ernie",shape="record"];
	"langchain_community.embeddings.embaas" [label="<f0> SourceModule| <f1> langchain_community.embeddings.embaas",shape="record"];
	"langchain_community.embeddings.elasticsearch" [label="<f0> SourceModule| <f1> langchain_community.embeddings.elasticsearch",shape="record"];
	"'elasticsearch.client'" [label="<f0> MissingModule| <f1> 'elasticsearch.client'",shape="record"];
	"langchain_community.embeddings.edenai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.edenai",shape="record"];
	"langchain_community.embeddings.deepinfra" [label="<f0> SourceModule| <f1> langchain_community.embeddings.deepinfra",shape="record"];
	"langchain_community.embeddings.databricks" [label="<f0> SourceModule| <f1> langchain_community.embeddings.databricks",shape="record"];
	"langchain_community.embeddings.dashscope" [label="<f0> SourceModule| <f1> langchain_community.embeddings.dashscope",shape="record"];
	"langchain_community.embeddings.cohere" [label="<f0> SourceModule| <f1> langchain_community.embeddings.cohere",shape="record"];
	"langchain_community.embeddings.clova" [label="<f0> SourceModule| <f1> langchain_community.embeddings.clova",shape="record"];
	"langchain_community.embeddings.clarifai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.clarifai",shape="record"];
	"'clarifai.client'" [label="<f0> MissingModule| <f1> 'clarifai.client'",shape="record"];
	"langchain_community.embeddings.bookend" [label="<f0> SourceModule| <f1> langchain_community.embeddings.bookend",shape="record"];
	"langchain_community.embeddings.bedrock" [label="<f0> SourceModule| <f1> langchain_community.embeddings.bedrock",shape="record"];
	"langchain_community.embeddings.baidu_qianfan_endpoint" [label="<f0> SourceModule| <f1> langchain_community.embeddings.baidu_qianfan_endpoint",shape="record"];
	"langchain_community.embeddings.baichuan" [label="<f0> SourceModule| <f1> langchain_community.embeddings.baichuan",shape="record"];
	"langchain_community.embeddings.azure_openai" [label="<f0> SourceModule| <f1> langchain_community.embeddings.azure_openai",shape="record"];
	"langchain_community.embeddings.awa" [label="<f0> SourceModule| <f1> langchain_community.embeddings.awa",shape="record"];
	"awadb" [label="<f0> MissingModule| <f1> awadb",shape="record"];
	"langchain_community.embeddings.ascend" [label="<f0> SourceModule| <f1> langchain_community.embeddings.ascend",shape="record"];
	"torch_npu" [label="<f0> MissingModule| <f1> torch_npu",shape="record"];
	"langchain_community.embeddings.anyscale" [label="<f0> SourceModule| <f1> langchain_community.embeddings.anyscale",shape="record"];
	"langchain_community.embeddings.aleph_alpha" [label="<f0> SourceModule| <f1> langchain_community.embeddings.aleph_alpha",shape="record"];
	"aleph_alpha_client" [label="<f0> MissingModule| <f1> aleph_alpha_client",shape="record"];
	"'google.cloud.aiplatform.matching_engine'" [label="<f0> MissingModule| <f1> 'google.cloud.aiplatform.matching_engine'",shape="record"];
	"langchain_community.vectorstores.marqo" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.marqo",shape="record"];
	"marqo" [label="<f0> MissingModule| <f1> marqo",shape="record"];
	"langchain_community.vectorstores.manticore_search" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.manticore_search",shape="record"];
	"'manticoresearch.api_client'" [label="<f0> MissingModule| <f1> 'manticoresearch.api_client'",shape="record"];
	"manticoresearch" [label="<f0> MissingModule| <f1> manticoresearch",shape="record"];
	"langchain_community.vectorstores.llm_rails" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.llm_rails",shape="record"];
	"langchain_community.vectorstores.lantern" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.lantern",shape="record"];
	"langchain_community.vectorstores.lancedb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.lancedb",shape="record"];
	"langchain_community.vectorstores.kinetica" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.kinetica",shape="record"];
	"langchain_community.vectorstores.kdbai" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.kdbai",shape="record"];
	"kdbai_client" [label="<f0> MissingModule| <f1> kdbai_client",shape="record"];
	"langchain_community.vectorstores.inmemory" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.inmemory",shape="record"];
	"langchain_community.vectorstores.infinispanvs" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.infinispanvs",shape="record"];
	"langchain_community.vectorstores.hologres" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.hologres",shape="record"];
	"hologres_vector" [label="<f0> MissingModule| <f1> hologres_vector",shape="record"];
	"langchain_community.vectorstores.hanavector" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.hanavector",shape="record"];
	"hdbcli" [label="<f0> MissingModule| <f1> hdbcli",shape="record"];
	"langchain_community.vectorstores.faiss" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.faiss",shape="record"];
	"langchain_community.vectorstores.epsilla" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.epsilla",shape="record"];
	"pyepsilla" [label="<f0> MissingModule| <f1> pyepsilla",shape="record"];
	"langchain_community.vectorstores.elasticsearch" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.elasticsearch",shape="record"];
	"langchain_community.vectorstores.elastic_vector_search" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.elastic_vector_search",shape="record"];
	"'elasticsearch.exceptions'" [label="<f0> MissingModule| <f1> 'elasticsearch.exceptions'",shape="record"];
	"langchain_community.vectorstores.ecloud_vector_search" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.ecloud_vector_search",shape="record"];
	"langchain_community.vectorstores.duckdb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.duckdb",shape="record"];
	"langchain_community.vectorstores.documentdb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.documentdb",shape="record"];
	"'bson.objectid'" [label="<f0> MissingModule| <f1> 'bson.objectid'",shape="record"];
	"langchain_community.vectorstores.docarray" [label="<f0> Package| <f1> langchain_community.vectorstores.docarray",shape="record"];
	"langchain_community.vectorstores.docarray.in_memory" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.docarray.in_memory",shape="record"];
	"langchain_community.vectorstores.docarray.base" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.docarray.base",shape="record"];
	"'docarray.typing'" [label="<f0> MissingModule| <f1> 'docarray.typing'",shape="record"];
	"docarray" [label="<f0> MissingModule| <f1> docarray",shape="record"];
	"langchain_community.vectorstores.docarray.hnsw" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.docarray.hnsw",shape="record"];
	"langchain_community.vectorstores.dingo" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.dingo",shape="record"];
	"dingodb" [label="<f0> MissingModule| <f1> dingodb",shape="record"];
	"langchain_community.vectorstores.deeplake" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.deeplake",shape="record"];
	"'deeplake.util'" [label="<f0> MissingModule| <f1> 'deeplake.util'",shape="record"];
	"'deeplake.core'" [label="<f0> MissingModule| <f1> 'deeplake.core'",shape="record"];
	"deeplake" [label="<f0> MissingModule| <f1> deeplake",shape="record"];
	"langchain_community.vectorstores.databricks_vector_search" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.databricks_vector_search",shape="record"];
	"'databricks.vector_search'" [label="<f0> MissingModule| <f1> 'databricks.vector_search'",shape="record"];
	"langchain_community.vectorstores.dashvector" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.dashvector",shape="record"];
	"dashvector" [label="<f0> MissingModule| <f1> dashvector",shape="record"];
	"langchain_community.vectorstores.couchbase" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.couchbase",shape="record"];
	"'couchbase.vector_search'" [label="<f0> MissingModule| <f1> 'couchbase.vector_search'",shape="record"];
	"'couchbase.search'" [label="<f0> MissingModule| <f1> 'couchbase.search'",shape="record"];
	"'couchbase.exceptions'" [label="<f0> MissingModule| <f1> 'couchbase.exceptions'",shape="record"];
	"langchain_community.vectorstores.clickhouse" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.clickhouse",shape="record"];
	"langchain_community.vectorstores.clarifai" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.clarifai",shape="record"];
	"clarifai_grpc" [label="<f0> MissingModule| <f1> clarifai_grpc",shape="record"];
	"langchain_community.vectorstores.chroma" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.chroma",shape="record"];
	"'chromadb.utils'" [label="<f0> MissingModule| <f1> 'chromadb.utils'",shape="record"];
	"'chromadb.api'" [label="<f0> MissingModule| <f1> 'chromadb.api'",shape="record"];
	"'chromadb.config'" [label="<f0> MissingModule| <f1> 'chromadb.config'",shape="record"];
	"chromadb" [label="<f0> MissingModule| <f1> chromadb",shape="record"];
	"langchain_community.vectorstores.cassandra" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.cassandra",shape="record"];
	"'cassio.table'" [label="<f0> MissingModule| <f1> 'cassio.table'",shape="record"];
	"langchain_community.vectorstores.bigquery_vector_search" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.bigquery_vector_search",shape="record"];
	"langchain_community.utils.google" [label="<f0> SourceModule| <f1> langchain_community.utils.google",shape="record"];
	"langchain_community.vectorstores.baiduvectordb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.baiduvectordb",shape="record"];
	"langchain_community.vectorstores.baiducloud_vector_search" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.baiducloud_vector_search",shape="record"];
	"langchain_community.vectorstores.bagel" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.bagel",shape="record"];
	"'bagel.api'" [label="<f0> MissingModule| <f1> 'bagel.api'",shape="record"];
	"'bagel.config'" [label="<f0> MissingModule| <f1> 'bagel.config'",shape="record"];
	"bagel" [label="<f0> MissingModule| <f1> bagel",shape="record"];
	"langchain_community.vectorstores.azuresearch" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.azuresearch",shape="record"];
	"'azure.search'" [label="<f0> MissingModule| <f1> 'azure.search'",shape="record"];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.azure_cosmos_db_no_sql",shape="record"];
	"'azure.cosmos'" [label="<f0> MissingModule| <f1> 'azure.cosmos'",shape="record"];
	"langchain_community.vectorstores.azure_cosmos_db" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.azure_cosmos_db",shape="record"];
	"bson" [label="<f0> MissingModule| <f1> bson",shape="record"];
	"langchain_community.vectorstores.awadb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.awadb",shape="record"];
	"langchain_community.vectorstores.atlas" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.atlas",shape="record"];
	"nomic" [label="<f0> MissingModule| <f1> nomic",shape="record"];
	"langchain_community.vectorstores.astradb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.astradb",shape="record"];
	"langchain_community.vectorstores.aperturedb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.aperturedb",shape="record"];
	"'aperturedb.ParallelLoader'" [label="<f0> MissingModule| <f1> 'aperturedb.ParallelLoader'",shape="record"];
	"'aperturedb.Descriptors'" [label="<f0> MissingModule| <f1> 'aperturedb.Descriptors'",shape="record"];
	"'aperturedb.Utils'" [label="<f0> MissingModule| <f1> 'aperturedb.Utils'",shape="record"];
	"aperturedb" [label="<f0> MissingModule| <f1> aperturedb",shape="record"];
	"langchain_core.indexing.base" [label="<f0> SourceModule| <f1> langchain_core.indexing.base",shape="record"];
	"langchain_core.indexing" [label="<f0> Package| <f1> langchain_core.indexing",shape="record"];
	"langchain_core.indexing.api" [label="<f0> SourceModule| <f1> langchain_core.indexing.api",shape="record"];
	"langchain_community.vectorstores.apache_doris" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.apache_doris",shape="record"];
	"langchain_community.vectorstores.annoy" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.annoy",shape="record"];
	"langchain_community.vectorstores.analyticdb" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.analyticdb",shape="record"];
	"langchain_community.vectorstores.alibabacloud_opensearch" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.alibabacloud_opensearch",shape="record"];
	"'alibabacloud_ha3engine_vector.models'" [label="<f0> MissingModule| <f1> 'alibabacloud_ha3engine_vector.models'",shape="record"];
	"alibabacloud_tea_util" [label="<f0> MissingModule| <f1> alibabacloud_tea_util",shape="record"];
	"alibabacloud_ha3engine_vector" [label="<f0> MissingModule| <f1> alibabacloud_ha3engine_vector",shape="record"];
	"langchain_community.vectorstores.aerospike" [label="<f0> SourceModule| <f1> langchain_community.vectorstores.aerospike",shape="record"];
	"'aerospike_vector_search.types'" [label="<f0> MissingModule| <f1> 'aerospike_vector_search.types'",shape="record"];
	"aerospike_vector_search" [label="<f0> MissingModule| <f1> aerospike_vector_search",shape="record"];
	"langchain_community" [label="<f0> Package| <f1> langchain_community",shape="record"];
	"langchain_core.vectorstores" [label="<f0> Package| <f1> langchain_core.vectorstores",shape="record"];
	"langchain_core.vectorstores.in_memory" [label="<f0> SourceModule| <f1> langchain_core.vectorstores.in_memory",shape="record"];
	"langchain_core.vectorstores.utils" [label="<f0> SourceModule| <f1> langchain_core.vectorstores.utils",shape="record"];
	"langchain_core.vectorstores.base" [label="<f0> SourceModule| <f1> langchain_core.vectorstores.base",shape="record"];
	"langchain_community.utilities" [label="<f0> Package| <f1> langchain_community.utilities",shape="record"];
	"langchain_community.utilities.twilio" [label="<f0> SourceModule| <f1> langchain_community.utilities.twilio",shape="record"];
	"twilio" [label="<f0> MissingModule| <f1> twilio",shape="record"];
	"langchain_community.utilities.serpapi" [label="<f0> SourceModule| <f1> langchain_community.utilities.serpapi",shape="record"];
	"serpapi" [label="<f0> MissingModule| <f1> serpapi",shape="record"];
	"langchain_community.utilities.portkey" [label="<f0> SourceModule| <f1> langchain_community.utilities.portkey",shape="record"];
	"langchain_community.utilities.passio_nutrition_ai" [label="<f0> SourceModule| <f1> langchain_community.utilities.passio_nutrition_ai",shape="record"];
	"langchain_community.utilities.oracleai" [label="<f0> SourceModule| <f1> langchain_community.utilities.oracleai",shape="record"];
	"langchain_community.utilities.nvidia_riva" [label="<f0> SourceModule| <f1> langchain_community.utilities.nvidia_riva",shape="record"];
	"'riva.client'" [label="<f0> MissingModule| <f1> 'riva.client'",shape="record"];
	"riva" [label="<f0> MissingModule| <f1> riva",shape="record"];
	"langchain_community.utilities.infobip" [label="<f0> SourceModule| <f1> langchain_community.utilities.infobip",shape="record"];
	"requests_toolbelt" [label="<f0> Package| <f1> requests_toolbelt",shape="record"];
	"requests_toolbelt.utils.user_agent" [label="<f0> SourceModule| <f1> requests_toolbelt.utils.user_agent",shape="record"];
	"requests_toolbelt.utils" [label="<f0> Package| <f1> requests_toolbelt.utils",shape="record"];
	"requests_toolbelt.streaming_iterator" [label="<f0> SourceModule| <f1> requests_toolbelt.streaming_iterator",shape="record"];
	"requests_toolbelt.multipart.encoder" [label="<f0> SourceModule| <f1> requests_toolbelt.multipart.encoder",shape="record"];
	"requests_toolbelt._compat" [label="<f0> SourceModule| <f1> requests_toolbelt._compat",shape="record"];
	"urlparse" [label="<f0> MissingModule| <f1> urlparse",shape="record"];
	"requests_toolbelt.multipart" [label="<f0> Package| <f1> requests_toolbelt.multipart",shape="record"];
	"requests_toolbelt.multipart.decoder" [label="<f0> SourceModule| <f1> requests_toolbelt.multipart.decoder",shape="record"];
	"requests_toolbelt.auth.guess" [label="<f0> SourceModule| <f1> requests_toolbelt.auth.guess",shape="record"];
	"requests_toolbelt.auth.http_proxy_digest" [label="<f0> SourceModule| <f1> requests_toolbelt.auth.http_proxy_digest",shape="record"];
	"requests_toolbelt.auth._digest_auth_compat" [label="<f0> SourceModule| <f1> requests_toolbelt.auth._digest_auth_compat",shape="record"];
	"requests_toolbelt.auth" [label="<f0> Package| <f1> requests_toolbelt.auth",shape="record"];
	"requests_toolbelt.adapters" [label="<f0> Package| <f1> requests_toolbelt.adapters",shape="record"];
	"requests_toolbelt.adapters.source" [label="<f0> SourceModule| <f1> requests_toolbelt.adapters.source",shape="record"];
	"requests_toolbelt.adapters.ssl" [label="<f0> SourceModule| <f1> requests_toolbelt.adapters.ssl",shape="record"];
	"langchain_community.utilities.google_trends" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_trends",shape="record"];
	"langchain_community.utilities.google_scholar" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_scholar",shape="record"];
	"langchain_community.utilities.google_lens" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_lens",shape="record"];
	"langchain_community.utilities.google_jobs" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_jobs",shape="record"];
	"langchain_community.utilities.google_finance" [label="<f0> SourceModule| <f1> langchain_community.utilities.google_finance",shape="record"];
	"langchain_community.utilities.golden_query" [label="<f0> SourceModule| <f1> langchain_community.utilities.golden_query",shape="record"];
	"langchain_community.utilities.dria_index" [label="<f0> SourceModule| <f1> langchain_community.utilities.dria_index",shape="record"];
	"dria" [label="<f0> MissingModule| <f1> dria",shape="record"];
	"langchain_community.utilities.awslambda" [label="<f0> SourceModule| <f1> langchain_community.utilities.awslambda",shape="record"];
	"langchain_community.utilities.apify" [label="<f0> SourceModule| <f1> langchain_community.utilities.apify",shape="record"];
	"langchain_community.utilities.alpha_vantage" [label="<f0> SourceModule| <f1> langchain_community.utilities.alpha_vantage",shape="record"];
	"langchain_core.prompts" [label="<f0> Package| <f1> langchain_core.prompts",shape="record"];
	"langchain_core.prompts.pipeline" [label="<f0> SourceModule| <f1> langchain_core.prompts.pipeline",shape="record"];
	"langchain_core.prompts.loading" [label="<f0> SourceModule| <f1> langchain_core.prompts.loading",shape="record"];
	"langchain_core.prompts.few_shot_with_templates" [label="<f0> SourceModule| <f1> langchain_core.prompts.few_shot_with_templates",shape="record"];
	"langchain_community.llms.huggingface_pipeline" [label="<f0> SourceModule| <f1> langchain_community.llms.huggingface_pipeline",shape="record"];
	"optimum" [label="<f0> MissingModule| <f1> optimum",shape="record"];
	"langchain_community.llms.Writer" [label="<f0> MissingModule| <f1> langchain_community.llms.Writer",shape="record"];
	"langchain_community.llms.StochasticAI" [label="<f0> MissingModule| <f1> langchain_community.llms.StochasticAI",shape="record"];
	"langchain_community.llms.SagemakerEndpoint" [label="<f0> MissingModule| <f1> langchain_community.llms.SagemakerEndpoint",shape="record"];
	"langchain_community.llms.PipelineAI" [label="<f0> MissingModule| <f1> langchain_community.llms.PipelineAI",shape="record"];
	"langchain_community.llms.Petals" [label="<f0> MissingModule| <f1> langchain_community.llms.Petals",shape="record"];
	"langchain_community.llms.OpenAI" [label="<f0> MissingModule| <f1> langchain_community.llms.OpenAI",shape="record"];
	"langchain_community.llms.Modal" [label="<f0> MissingModule| <f1> langchain_community.llms.Modal",shape="record"];
	"langchain_community.llms.LlamaCpp" [label="<f0> MissingModule| <f1> langchain_community.llms.LlamaCpp",shape="record"];
	"langchain_community.llms.HuggingFaceTextGenInference" [label="<f0> MissingModule| <f1> langchain_community.llms.HuggingFaceTextGenInference",shape="record"];
	"langchain_community.llms.HuggingFaceHub" [label="<f0> MissingModule| <f1> langchain_community.llms.HuggingFaceHub",shape="record"];
	"langchain_community.llms.GooseAI" [label="<f0> MissingModule| <f1> langchain_community.llms.GooseAI",shape="record"];
	"langchain_community.llms.ForefrontAI" [label="<f0> MissingModule| <f1> langchain_community.llms.ForefrontAI",shape="record"];
	"langchain_community.llms.Cohere" [label="<f0> MissingModule| <f1> langchain_community.llms.Cohere",shape="record"];
	"langchain_community.llms.CerebriumAI" [label="<f0> MissingModule| <f1> langchain_community.llms.CerebriumAI",shape="record"];
	"langchain_community.llms.Banana" [label="<f0> MissingModule| <f1> langchain_community.llms.Banana",shape="record"];
	"langchain_community.llms.Anthropic" [label="<f0> MissingModule| <f1> langchain_community.llms.Anthropic",shape="record"];
	"langchain_community.llms" [label="<f0> Package| <f1> langchain_community.llms",shape="record"];
	"langchain_community.llms.yi" [label="<f0> SourceModule| <f1> langchain_community.llms.yi",shape="record"];
	"langchain_community.llms.you" [label="<f0> SourceModule| <f1> langchain_community.llms.you",shape="record"];
	"langchain_community.llms.sparkllm" [label="<f0> SourceModule| <f1> langchain_community.llms.sparkllm",shape="record"];
	"langchain_community.llms.yuan2" [label="<f0> SourceModule| <f1> langchain_community.llms.yuan2",shape="record"];
	"langchain_community.llms.xinference" [label="<f0> SourceModule| <f1> langchain_community.llms.xinference",shape="record"];
	"'xinference.model'" [label="<f0> MissingModule| <f1> 'xinference.model'",shape="record"];
	"xinference" [label="<f0> MissingModule| <f1> xinference",shape="record"];
	"langchain_community.llms.writer" [label="<f0> SourceModule| <f1> langchain_community.llms.writer",shape="record"];
	"writerai" [label="<f0> MissingModule| <f1> writerai",shape="record"];
	"langchain_community.llms.weight_only_quantization" [label="<f0> SourceModule| <f1> langchain_community.llms.weight_only_quantization",shape="record"];
	"'intel_extension_for_transformers.utils'" [label="<f0> MissingModule| <f1> 'intel_extension_for_transformers.utils'",shape="record"];
	"intel_extension_for_transformers" [label="<f0> MissingModule| <f1> intel_extension_for_transformers",shape="record"];
	"langchain_community.llms.watsonxllm" [label="<f0> SourceModule| <f1> langchain_community.llms.watsonxllm",shape="record"];
	"ibm_watsonx_ai" [label="<f0> MissingModule| <f1> ibm_watsonx_ai",shape="record"];
	"langchain_community.llms.vllm" [label="<f0> SourceModule| <f1> langchain_community.llms.vllm",shape="record"];
	"langchain_community.llms.together" [label="<f0> SourceModule| <f1> langchain_community.llms.together",shape="record"];
	"langchain_community.llms.titan_takeoff" [label="<f0> SourceModule| <f1> langchain_community.llms.titan_takeoff",shape="record"];
	"langchain_community.llms.textgen" [label="<f0> SourceModule| <f1> langchain_community.llms.textgen",shape="record"];
	"langchain_community.llms.symblai_nebula" [label="<f0> SourceModule| <f1> langchain_community.llms.symblai_nebula",shape="record"];
	"langchain_community.llms.stochasticai" [label="<f0> SourceModule| <f1> langchain_community.llms.stochasticai",shape="record"];
	"langchain_community.llms.self_hosted_hugging_face" [label="<f0> SourceModule| <f1> langchain_community.llms.self_hosted_hugging_face",shape="record"];
	"langchain_community.llms.sambanova" [label="<f0> SourceModule| <f1> langchain_community.llms.sambanova",shape="record"];
	"langchain_community.llms.rwkv" [label="<f0> SourceModule| <f1> langchain_community.llms.rwkv",shape="record"];
	"'rwkv.utils'" [label="<f0> MissingModule| <f1> 'rwkv.utils'",shape="record"];
	"rwkv" [label="<f0> MissingModule| <f1> rwkv",shape="record"];
	"langchain_community.llms.replicate" [label="<f0> SourceModule| <f1> langchain_community.llms.replicate",shape="record"];
	"replicate" [label="<f0> MissingModule| <f1> replicate",shape="record"];
	"langchain_community.llms.promptlayer_openai" [label="<f0> SourceModule| <f1> langchain_community.llms.promptlayer_openai",shape="record"];
	"promptlayer" [label="<f0> MissingModule| <f1> promptlayer",shape="record"];
	"langchain_community.llms.predictionguard" [label="<f0> SourceModule| <f1> langchain_community.llms.predictionguard",shape="record"];
	"predictionguard" [label="<f0> MissingModule| <f1> predictionguard",shape="record"];
	"langchain_community.llms.predibase" [label="<f0> SourceModule| <f1> langchain_community.llms.predibase",shape="record"];
	"'semantic_version.base'" [label="<f0> MissingModule| <f1> 'semantic_version.base'",shape="record"];
	"'predibase.version'" [label="<f0> MissingModule| <f1> 'predibase.version'",shape="record"];
	"semantic_version" [label="<f0> MissingModule| <f1> semantic_version",shape="record"];
	"'lorax.types'" [label="<f0> MissingModule| <f1> 'lorax.types'",shape="record"];
	"'lorax.errors'" [label="<f0> MissingModule| <f1> 'lorax.errors'",shape="record"];
	"lorax" [label="<f0> MissingModule| <f1> lorax",shape="record"];
	"'predibase.resource'" [label="<f0> MissingModule| <f1> 'predibase.resource'",shape="record"];
	"'predibase.pql'" [label="<f0> MissingModule| <f1> 'predibase.pql'",shape="record"];
	"predibase" [label="<f0> MissingModule| <f1> predibase",shape="record"];
	"langchain_community.llms.pipelineai" [label="<f0> SourceModule| <f1> langchain_community.llms.pipelineai",shape="record"];
	"pipeline" [label="<f0> MissingModule| <f1> pipeline",shape="record"];
	"langchain_community.llms.petals" [label="<f0> SourceModule| <f1> langchain_community.llms.petals",shape="record"];
	"langchain_community.llms.pai_eas_endpoint" [label="<f0> SourceModule| <f1> langchain_community.llms.pai_eas_endpoint",shape="record"];
	"langchain_community.llms.outlines" [label="<f0> SourceModule| <f1> langchain_community.llms.outlines",shape="record"];
	"langchain_community.llms.openlm" [label="<f0> SourceModule| <f1> langchain_community.llms.openlm",shape="record"];
	"openlm" [label="<f0> MissingModule| <f1> openlm",shape="record"];
	"langchain_community.llms.openllm" [label="<f0> SourceModule| <f1> langchain_community.llms.openllm",shape="record"];
	"langchain_community.llms.opaqueprompts" [label="<f0> SourceModule| <f1> langchain_community.llms.opaqueprompts",shape="record"];
	"opaqueprompts" [label="<f0> MissingModule| <f1> opaqueprompts",shape="record"];
	"langchain_community.llms.octoai_endpoint" [label="<f0> SourceModule| <f1> langchain_community.llms.octoai_endpoint",shape="record"];
	"langchain_community.llms.nlpcloud" [label="<f0> SourceModule| <f1> langchain_community.llms.nlpcloud",shape="record"];
	"langchain_community.llms.mosaicml" [label="<f0> SourceModule| <f1> langchain_community.llms.mosaicml",shape="record"];
	"langchain_community.llms.modal" [label="<f0> SourceModule| <f1> langchain_community.llms.modal",shape="record"];
	"langchain_community.llms.mlflow_ai_gateway" [label="<f0> SourceModule| <f1> langchain_community.llms.mlflow_ai_gateway",shape="record"];
	"langchain_community.llms.mlflow" [label="<f0> SourceModule| <f1> langchain_community.llms.mlflow",shape="record"];
	"langchain_community.llms.minimax" [label="<f0> SourceModule| <f1> langchain_community.llms.minimax",shape="record"];
	"langchain_community.llms.manifest" [label="<f0> SourceModule| <f1> langchain_community.llms.manifest",shape="record"];
	"manifest" [label="<f0> MissingModule| <f1> manifest",shape="record"];
	"langchain_community.llms.llamafile" [label="<f0> SourceModule| <f1> langchain_community.llms.llamafile",shape="record"];
	"langchain_community.llms.llamacpp" [label="<f0> SourceModule| <f1> langchain_community.llms.llamacpp",shape="record"];
	"langchain_community.llms.konko" [label="<f0> SourceModule| <f1> langchain_community.llms.konko",shape="record"];
	"langchain_community.llms.koboldai" [label="<f0> SourceModule| <f1> langchain_community.llms.koboldai",shape="record"];
	"langchain_community.llms.javelin_ai_gateway" [label="<f0> SourceModule| <f1> langchain_community.llms.javelin_ai_gateway",shape="record"];
	"langchain_community.llms.ipex_llm" [label="<f0> SourceModule| <f1> langchain_community.llms.ipex_llm",shape="record"];
	"'transformers.tools'" [label="<f0> MissingModule| <f1> 'transformers.tools'",shape="record"];
	"'transformers.generation'" [label="<f0> MissingModule| <f1> 'transformers.generation'",shape="record"];
	"ipex_llm" [label="<f0> MissingModule| <f1> ipex_llm",shape="record"];
	"langchain_community.llms.human" [label="<f0> SourceModule| <f1> langchain_community.llms.human",shape="record"];
	"langchain_community.llms.gradient_ai" [label="<f0> SourceModule| <f1> langchain_community.llms.gradient_ai",shape="record"];
	"langchain_community.llms.gpt4all" [label="<f0> SourceModule| <f1> langchain_community.llms.gpt4all",shape="record"];
	"langchain_community.llms.gooseai" [label="<f0> SourceModule| <f1> langchain_community.llms.gooseai",shape="record"];
	"langchain_community.llms.google_palm" [label="<f0> SourceModule| <f1> langchain_community.llms.google_palm",shape="record"];
	"langchain_community.llms.forefrontai" [label="<f0> SourceModule| <f1> langchain_community.llms.forefrontai",shape="record"];
	"langchain_community.llms.fireworks" [label="<f0> SourceModule| <f1> langchain_community.llms.fireworks",shape="record"];
	"fireworks" [label="<f0> MissingModule| <f1> fireworks",shape="record"];
	"langchain_community.llms.fake" [label="<f0> SourceModule| <f1> langchain_community.llms.fake",shape="record"];
	"langchain_community.llms.edenai" [label="<f0> SourceModule| <f1> langchain_community.llms.edenai",shape="record"];
	"langchain_community.llms.deepsparse" [label="<f0> SourceModule| <f1> langchain_community.llms.deepsparse",shape="record"];
	"deepsparse" [label="<f0> MissingModule| <f1> deepsparse",shape="record"];
	"langchain_community.llms.deepinfra" [label="<f0> SourceModule| <f1> langchain_community.llms.deepinfra",shape="record"];
	"langchain_community.llms.databricks" [label="<f0> SourceModule| <f1> langchain_community.llms.databricks",shape="record"];
	"'dbruntime.databricks_repl_context'" [label="<f0> MissingModule| <f1> 'dbruntime.databricks_repl_context'",shape="record"];
	"langchain_community.llms.ctranslate2" [label="<f0> SourceModule| <f1> langchain_community.llms.ctranslate2",shape="record"];
	"ctranslate2" [label="<f0> MissingModule| <f1> ctranslate2",shape="record"];
	"langchain_community.llms.ctransformers" [label="<f0> SourceModule| <f1> langchain_community.llms.ctransformers",shape="record"];
	"ctransformers" [label="<f0> MissingModule| <f1> ctransformers",shape="record"];
	"langchain_community.llms.clarifai" [label="<f0> SourceModule| <f1> langchain_community.llms.clarifai",shape="record"];
	"clarifai" [label="<f0> MissingModule| <f1> clarifai",shape="record"];
	"langchain_community.llms.chatglm" [label="<f0> SourceModule| <f1> langchain_community.llms.chatglm",shape="record"];
	"langchain_community.llms.cerebriumai" [label="<f0> SourceModule| <f1> langchain_community.llms.cerebriumai",shape="record"];
	"langchain_community.llms.bittensor" [label="<f0> SourceModule| <f1> langchain_community.llms.bittensor",shape="record"];
	"langchain_community.llms.bigdl_llm" [label="<f0> SourceModule| <f1> langchain_community.llms.bigdl_llm",shape="record"];
	"'bigdl.llm'" [label="<f0> MissingModule| <f1> 'bigdl.llm'",shape="record"];
	"bigdl" [label="<f0> MissingModule| <f1> bigdl",shape="record"];
	"langchain_community.llms.beam" [label="<f0> SourceModule| <f1> langchain_community.llms.beam",shape="record"];
	"beam" [label="<f0> MissingModule| <f1> beam",shape="record"];
	"langchain_community.llms.baseten" [label="<f0> SourceModule| <f1> langchain_community.llms.baseten",shape="record"];
	"langchain_community.llms.bananadev" [label="<f0> SourceModule| <f1> langchain_community.llms.bananadev",shape="record"];
	"banana_dev" [label="<f0> MissingModule| <f1> banana_dev",shape="record"];
	"langchain_community.llms.baidu_qianfan_endpoint" [label="<f0> SourceModule| <f1> langchain_community.llms.baidu_qianfan_endpoint",shape="record"];
	"langchain_community.llms.baichuan" [label="<f0> SourceModule| <f1> langchain_community.llms.baichuan",shape="record"];
	"langchain_community.llms.azureml_endpoint" [label="<f0> SourceModule| <f1> langchain_community.llms.azureml_endpoint",shape="record"];
	"langchain_community.llms.aviary" [label="<f0> SourceModule| <f1> langchain_community.llms.aviary",shape="record"];
	"langchain_community.llms.arcee" [label="<f0> SourceModule| <f1> langchain_community.llms.arcee",shape="record"];
	"langchain_community.llms.aphrodite" [label="<f0> SourceModule| <f1> langchain_community.llms.aphrodite",shape="record"];
	"aphrodite" [label="<f0> MissingModule| <f1> aphrodite",shape="record"];
	"langchain_community.llms.anyscale" [label="<f0> SourceModule| <f1> langchain_community.llms.anyscale",shape="record"];
	"langchain_community.llms.amazon_api_gateway" [label="<f0> SourceModule| <f1> langchain_community.llms.amazon_api_gateway",shape="record"];
	"langchain_community.llms.aleph_alpha" [label="<f0> SourceModule| <f1> langchain_community.llms.aleph_alpha",shape="record"];
	"langchain_community.llms.ai21" [label="<f0> SourceModule| <f1> langchain_community.llms.ai21",shape="record"];
	"langchain_community.docstore" [label="<f0> Package| <f1> langchain_community.docstore",shape="record"];
	"langchain_community.docstore.wikipedia" [label="<f0> SourceModule| <f1> langchain_community.docstore.wikipedia",shape="record"];
	"langchain_community.docstore.arbitrary_fn" [label="<f0> SourceModule| <f1> langchain_community.docstore.arbitrary_fn",shape="record"];
	"langchain.chains.VectorDBQAWithSourcesChain" [label="<f0> MissingModule| <f1> langchain.chains.VectorDBQAWithSourcesChain",shape="record"];
	"langchain.chains.VectorDBQA" [label="<f0> MissingModule| <f1> langchain.chains.VectorDBQA",shape="record"];
	"langchain.chains.QAWithSourcesChain" [label="<f0> MissingModule| <f1> langchain.chains.QAWithSourcesChain",shape="record"];
	"langchain.chains.LLMMathChain" [label="<f0> MissingModule| <f1> langchain.chains.LLMMathChain",shape="record"];
	"langchain.chains.LLMCheckerChain" [label="<f0> MissingModule| <f1> langchain.chains.LLMCheckerChain",shape="record"];
	"langchain.chains.LLMChain" [label="<f0> MissingModule| <f1> langchain.chains.LLMChain",shape="record"];
	"langchain.chains.ConversationChain" [label="<f0> MissingModule| <f1> langchain.chains.ConversationChain",shape="record"];
	"langchain.chains" [label="<f0> Package| <f1> langchain.chains",shape="record"];
	"langchain.agents" [label="<f0> Package| <f1> langchain.agents",shape="record"];
	"langchain_community.agent_toolkits.sql.base" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.sql.base",shape="record"];
	"langchain_community.agent_toolkits.sql" [label="<f0> Package| <f1> langchain_community.agent_toolkits.sql",shape="record"];
	"langchain_community.agent_toolkits" [label="<f0> Package| <f1> langchain_community.agent_toolkits",shape="record"];
	"langchain_community.agent_toolkits.zapier.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.zapier.toolkit",shape="record"];
	"langchain_community.agent_toolkits.zapier" [label="<f0> Package| <f1> langchain_community.agent_toolkits.zapier",shape="record"];
	"langchain_community.agent_toolkits.steam.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.steam.toolkit",shape="record"];
	"langchain_community.agent_toolkits.steam" [label="<f0> Package| <f1> langchain_community.agent_toolkits.steam",shape="record"];
	"langchain_community.agent_toolkits.spark_sql.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.spark_sql.toolkit",shape="record"];
	"langchain_community.agent_toolkits.spark_sql" [label="<f0> Package| <f1> langchain_community.agent_toolkits.spark_sql",shape="record"];
	"langchain_community.agent_toolkits.slack.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.slack.toolkit",shape="record"];
	"langchain_community.agent_toolkits.slack" [label="<f0> Package| <f1> langchain_community.agent_toolkits.slack",shape="record"];
	"langchain_community.agent_toolkits.powerbi.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.powerbi.toolkit",shape="record"];
	"langchain_community.agent_toolkits.powerbi" [label="<f0> Package| <f1> langchain_community.agent_toolkits.powerbi",shape="record"];
	"langchain_community.agent_toolkits.polygon.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.polygon.toolkit",shape="record"];
	"langchain_community.agent_toolkits.polygon" [label="<f0> Package| <f1> langchain_community.agent_toolkits.polygon",shape="record"];
	"langchain_community.agent_toolkits.playwright.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.playwright.toolkit",shape="record"];
	"langchain_community.agent_toolkits.playwright" [label="<f0> Package| <f1> langchain_community.agent_toolkits.playwright",shape="record"];
	"langchain_community.agent_toolkits.openapi.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.openapi.toolkit",shape="record"];
	"langchain_community.agent_toolkits.openapi" [label="<f0> Package| <f1> langchain_community.agent_toolkits.openapi",shape="record"];
	"langchain_community.agent_toolkits.openapi.prompt" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.openapi.prompt",shape="record"];
	"langchain_community.agent_toolkits.office365.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.office365.toolkit",shape="record"];
	"langchain_community.agent_toolkits.office365" [label="<f0> Package| <f1> langchain_community.agent_toolkits.office365",shape="record"];
	"langchain_community.agent_toolkits.nla.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.nla.toolkit",shape="record"];
	"langchain_community.agent_toolkits.nla" [label="<f0> Package| <f1> langchain_community.agent_toolkits.nla",shape="record"];
	"langchain_community.agent_toolkits.nla.tool" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.nla.tool",shape="record"];
	"langchain_community.chains.openapi.chain" [label="<f0> SourceModule| <f1> langchain_community.chains.openapi.chain",shape="record"];
	"langchain_community.chains.openapi" [label="<f0> Package| <f1> langchain_community.chains.openapi",shape="record"];
	"langchain_community.chains" [label="<f0> Package| <f1> langchain_community.chains",shape="record"];
	"langchain_community.chains.pebblo_retrieval.base" [label="<f0> SourceModule| <f1> langchain_community.chains.pebblo_retrieval.base",shape="record"];
	"langchain_community.chains.pebblo_retrieval" [label="<f0> Package| <f1> langchain_community.chains.pebblo_retrieval",shape="record"];
	"langchain_community.chains.pebblo_retrieval.utilities" [label="<f0> SourceModule| <f1> langchain_community.chains.pebblo_retrieval.utilities",shape="record"];
	"langchain_community.chains.pebblo_retrieval.models" [label="<f0> SourceModule| <f1> langchain_community.chains.pebblo_retrieval.models",shape="record"];
	"langchain_community.chains.pebblo_retrieval.enforcement_filters" [label="<f0> SourceModule| <f1> langchain_community.chains.pebblo_retrieval.enforcement_filters",shape="record"];
	"langchain.chains.api.openapi.response_chain" [label="<f0> SourceModule| <f1> langchain.chains.api.openapi.response_chain",shape="record"];
	"langchain.chains.api.openapi" [label="<f0> Package| <f1> langchain.chains.api.openapi",shape="record"];
	"langchain.chains.api" [label="<f0> Package| <f1> langchain.chains.api",shape="record"];
	"langchain.chains.api.podcast_docs" [label="<f0> SourceModule| <f1> langchain.chains.api.podcast_docs",shape="record"];
	"langchain.chains.api.tmdb_docs" [label="<f0> SourceModule| <f1> langchain.chains.api.tmdb_docs",shape="record"];
	"langchain.chains.api.news_docs" [label="<f0> SourceModule| <f1> langchain.chains.api.news_docs",shape="record"];
	"langchain.chains.api.open_meteo_docs" [label="<f0> SourceModule| <f1> langchain.chains.api.open_meteo_docs",shape="record"];
	"langchain_community.chains.openapi.response_chain" [label="<f0> SourceModule| <f1> langchain_community.chains.openapi.response_chain",shape="record"];
	"langchain.chains.api.openapi.prompts" [label="<f0> SourceModule| <f1> langchain.chains.api.openapi.prompts",shape="record"];
	"langchain_community.chains.openapi.prompts" [label="<f0> SourceModule| <f1> langchain_community.chains.openapi.prompts",shape="record"];
	"langchain.chains.api.openapi.requests_chain" [label="<f0> SourceModule| <f1> langchain.chains.api.openapi.requests_chain",shape="record"];
	"langchain_community.chains.openapi.requests_chain" [label="<f0> SourceModule| <f1> langchain_community.chains.openapi.requests_chain",shape="record"];
	"langchain_community.agent_toolkits.nasa.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.nasa.toolkit",shape="record"];
	"langchain_community.agent_toolkits.nasa" [label="<f0> Package| <f1> langchain_community.agent_toolkits.nasa",shape="record"];
	"langchain_community.tools.nasa.prompt" [label="<f0> SourceModule| <f1> langchain_community.tools.nasa.prompt",shape="record"];
	"langchain_community.agent_toolkits.multion.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.multion.toolkit",shape="record"];
	"langchain_community.agent_toolkits.multion" [label="<f0> Package| <f1> langchain_community.agent_toolkits.multion",shape="record"];
	"langchain_community.tools.multion.update_session" [label="<f0> SourceModule| <f1> langchain_community.tools.multion.update_session",shape="record"];
	"langchain_community.tools.multion" [label="<f0> Package| <f1> langchain_community.tools.multion",shape="record"];
	"multion" [label="<f0> MissingModule| <f1> multion",shape="record"];
	"langchain_community.tools.multion.create_session" [label="<f0> SourceModule| <f1> langchain_community.tools.multion.create_session",shape="record"];
	"langchain_community.tools.multion.close_session" [label="<f0> SourceModule| <f1> langchain_community.tools.multion.close_session",shape="record"];
	"langchain_community.agent_toolkits.json.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.json.toolkit",shape="record"];
	"langchain_community.agent_toolkits.json" [label="<f0> Package| <f1> langchain_community.agent_toolkits.json",shape="record"];
	"langchain_community.agent_toolkits.jira.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.jira.toolkit",shape="record"];
	"langchain_community.agent_toolkits.jira" [label="<f0> Package| <f1> langchain_community.agent_toolkits.jira",shape="record"];
	"langchain_community.tools.jira.prompt" [label="<f0> SourceModule| <f1> langchain_community.tools.jira.prompt",shape="record"];
	"langchain_community.agent_toolkits.gmail.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.gmail.toolkit",shape="record"];
	"langchain_community.agent_toolkits.gmail" [label="<f0> Package| <f1> langchain_community.agent_toolkits.gmail",shape="record"];
	"langchain_community.agent_toolkits.file_management.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.file_management.toolkit",shape="record"];
	"langchain_community.agent_toolkits.file_management" [label="<f0> Package| <f1> langchain_community.agent_toolkits.file_management",shape="record"];
	"langchain_community.agent_toolkits.connery" [label="<f0> Package| <f1> langchain_community.agent_toolkits.connery",shape="record"];
	"langchain_community.agent_toolkits.connery.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.connery.toolkit",shape="record"];
	"langchain_community.agent_toolkits.cogniswitch.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.cogniswitch.toolkit",shape="record"];
	"langchain_community.agent_toolkits.cogniswitch" [label="<f0> Package| <f1> langchain_community.agent_toolkits.cogniswitch",shape="record"];
	"langchain_community.agent_toolkits.cassandra_database.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.cassandra_database.toolkit",shape="record"];
	"langchain_community.agent_toolkits.cassandra_database" [label="<f0> Package| <f1> langchain_community.agent_toolkits.cassandra_database",shape="record"];
	"langchain_community.agent_toolkits.azure_cognitive_services" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.azure_cognitive_services",shape="record"];
	"langchain_community.agent_toolkits.azure_ai_services" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.azure_ai_services",shape="record"];
	"langchain_community.agent_toolkits.amadeus.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.amadeus.toolkit",shape="record"];
	"langchain_community.agent_toolkits.amadeus" [label="<f0> Package| <f1> langchain_community.agent_toolkits.amadeus",shape="record"];
	"amadeus" [label="<f0> MissingModule| <f1> amadeus",shape="record"];
	"langchain_community.tools.amadeus.utils" [label="<f0> SourceModule| <f1> langchain_community.tools.amadeus.utils",shape="record"];
	"langchain_community.tools.amadeus" [label="<f0> Package| <f1> langchain_community.tools.amadeus",shape="record"];
	"langchain_community.tools.amadeus.flight_search" [label="<f0> SourceModule| <f1> langchain_community.tools.amadeus.flight_search",shape="record"];
	"langchain_community.tools.amadeus.base" [label="<f0> SourceModule| <f1> langchain_community.tools.amadeus.base",shape="record"];
	"langchain_community.tools.amadeus.closest_airport" [label="<f0> SourceModule| <f1> langchain_community.tools.amadeus.closest_airport",shape="record"];
	"langchain_community.agent_toolkits.ainetwork.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.ainetwork.toolkit",shape="record"];
	"langchain_community.agent_toolkits.ainetwork" [label="<f0> Package| <f1> langchain_community.agent_toolkits.ainetwork",shape="record"];
	"langchain.agents.mrkl.prompt" [label="<f0> SourceModule| <f1> langchain.agents.mrkl.prompt",shape="record"];
	"langchain.agents.mrkl" [label="<f0> Package| <f1> langchain.agents.mrkl",shape="record"];
	"langchain_community.agent_toolkits.sql.toolkit" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.sql.toolkit",shape="record"];
	"langchain_community.agent_toolkits.sql.prompt" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.sql.prompt",shape="record"];
	"langchain_community.agent_toolkits.spark_sql.base" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.spark_sql.base",shape="record"];
	"langchain_community.agent_toolkits.spark_sql.prompt" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.spark_sql.prompt",shape="record"];
	"langchain_community.agent_toolkits.powerbi.chat_base" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.powerbi.chat_base",shape="record"];
	"langchain.memory" [label="<f0> Package| <f1> langchain.memory",shape="record"];
	"langchain_community.memory.zep_memory" [label="<f0> SourceModule| <f1> langchain_community.memory.zep_memory",shape="record"];
	"langchain_community.memory" [label="<f0> Package| <f1> langchain_community.memory",shape="record"];
	"langchain_community.memory.motorhead_memory" [label="<f0> SourceModule| <f1> langchain_community.memory.motorhead_memory",shape="record"];
	"langchain_community.memory.kg" [label="<f0> SourceModule| <f1> langchain_community.memory.kg",shape="record"];
	"langchain.memory.utils" [label="<f0> SourceModule| <f1> langchain.memory.utils",shape="record"];
	"langchain.memory.prompt" [label="<f0> SourceModule| <f1> langchain.memory.prompt",shape="record"];
	"langchain_community.chat_message_histories" [label="<f0> Package| <f1> langchain_community.chat_message_histories",shape="record"];
	"langchain_community.chat_message_histories.zep_cloud" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.zep_cloud",shape="record"];
	"langchain_community.chat_message_histories.zep" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.zep",shape="record"];
	"langchain_community.chat_message_histories.xata" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.xata",shape="record"];
	"xata" [label="<f0> MissingModule| <f1> xata",shape="record"];
	"langchain_community.chat_message_histories.upstash_redis" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.upstash_redis",shape="record"];
	"langchain_community.chat_message_histories.tidb" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.tidb",shape="record"];
	"langchain_community.chat_message_histories.streamlit" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.streamlit",shape="record"];
	"streamlit" [label="<f0> Package| <f1> streamlit",shape="record"];
	"streamlit.components.v1" [label="<f0> Package| <f1> streamlit.components.v1",shape="record"];
	"streamlit.components.v1.component_registry" [label="<f0> SourceModule| <f1> streamlit.components.v1.component_registry",shape="record"];
	"streamlit.components.types.base_component_registry" [label="<f0> SourceModule| <f1> streamlit.components.types.base_component_registry",shape="record"];
	"streamlit.components.types" [label="<f0> Package| <f1> streamlit.components.types",shape="record"];
	"streamlit.components.types.base_custom_component" [label="<f0> SourceModule| <f1> streamlit.components.types.base_custom_component",shape="record"];
	"streamlit.runtime.state.common" [label="<f0> SourceModule| <f1> streamlit.runtime.state.common",shape="record"];
	"streamlit.runtime.scriptrunner_utils.script_run_context" [label="<f0> SourceModule| <f1> streamlit.runtime.scriptrunner_utils.script_run_context",shape="record"];
	"streamlit.runtime.uploaded_file_manager" [label="<f0> SourceModule| <f1> streamlit.runtime.uploaded_file_manager",shape="record"];
	"streamlit.proto.Common_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Common_pb2",shape="record"];
	"streamlit.proto" [label="<f0> Package| <f1> streamlit.proto",shape="record"];
	"streamlit.proto.AuthRedirect_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.AuthRedirect_pb2",shape="record"];
	"streamlit.proto.SessionEvent_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.SessionEvent_pb2",shape="record"];
	"streamlit.proto.ParentMessage_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.ParentMessage_pb2",shape="record"];
	"streamlit.proto.PagesChanged_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.PagesChanged_pb2",shape="record"];
	"streamlit.proto.PageNotFound_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.PageNotFound_pb2",shape="record"];
	"streamlit.proto.PageInfo_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.PageInfo_pb2",shape="record"];
	"streamlit.proto.PageConfig_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.PageConfig_pb2",shape="record"];
	"streamlit.proto.NewSession_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.NewSession_pb2",shape="record"];
	"streamlit.proto.SessionStatus_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.SessionStatus_pb2",shape="record"];
	"streamlit.proto.Navigation_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Navigation_pb2",shape="record"];
	"streamlit.proto.AppPage_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.AppPage_pb2",shape="record"];
	"streamlit.proto.Logo_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Logo_pb2",shape="record"];
	"streamlit.proto.GitInfo_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.GitInfo_pb2",shape="record"];
	"streamlit.proto.Delta_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Delta_pb2",shape="record"];
	"streamlit.proto.Element_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Element_pb2",shape="record"];
	"streamlit.proto.Heading_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Heading_pb2",shape="record"];
	"streamlit.proto.Video_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Video_pb2",shape="record"];
	"streamlit.proto.VegaLiteChart_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.VegaLiteChart_pb2",shape="record"];
	"streamlit.proto.NamedDataSet_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.NamedDataSet_pb2",shape="record"];
	"streamlit.proto.Toast_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Toast_pb2",shape="record"];
	"streamlit.proto.TimeInput_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.TimeInput_pb2",shape="record"];
	"streamlit.proto.TextInput_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.TextInput_pb2",shape="record"];
	"streamlit.proto.TextArea_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.TextArea_pb2",shape="record"];
	"streamlit.proto.Text_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Text_pb2",shape="record"];
	"streamlit.proto.Slider_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Slider_pb2",shape="record"];
	"streamlit.proto.Skeleton_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Skeleton_pb2",shape="record"];
	"streamlit.proto.Selectbox_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Selectbox_pb2",shape="record"];
	"streamlit.proto.Radio_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Radio_pb2",shape="record"];
	"streamlit.proto.Spinner_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Spinner_pb2",shape="record"];
	"streamlit.proto.Snow_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Snow_pb2",shape="record"];
	"streamlit.proto.Progress_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Progress_pb2",shape="record"];
	"streamlit.proto.Components_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Components_pb2",shape="record"];
	"streamlit.proto.PlotlyChart_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.PlotlyChart_pb2",shape="record"];
	"streamlit.proto.PageLink_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.PageLink_pb2",shape="record"];
	"streamlit.proto.MultiSelect_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.MultiSelect_pb2",shape="record"];
	"streamlit.proto.Metric_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Metric_pb2",shape="record"];
	"streamlit.proto.Markdown_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Markdown_pb2",shape="record"];
	"streamlit.proto.NumberInput_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.NumberInput_pb2",shape="record"];
	"streamlit.proto.LinkButton_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.LinkButton_pb2",shape="record"];
	"streamlit.proto.Json_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Json_pb2",shape="record"];
	"streamlit.proto.Image_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Image_pb2",shape="record"];
	"streamlit.proto.IFrame_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.IFrame_pb2",shape="record"];
	"streamlit.proto.Html_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Html_pb2",shape="record"];
	"streamlit.proto.GraphVizChart_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.GraphVizChart_pb2",shape="record"];
	"streamlit.proto.FileUploader_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.FileUploader_pb2",shape="record"];
	"streamlit.proto.Favicon_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Favicon_pb2",shape="record"];
	"streamlit.proto.Exception_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Exception_pb2",shape="record"];
	"streamlit.proto.Empty_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Empty_pb2",shape="record"];
	"streamlit.proto.DocString_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.DocString_pb2",shape="record"];
	"streamlit.proto.DeckGlJsonChart_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.DeckGlJsonChart_pb2",shape="record"];
	"streamlit.proto.DateInput_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.DateInput_pb2",shape="record"];
	"streamlit.proto.DataFrame_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.DataFrame_pb2",shape="record"];
	"streamlit.proto.ColorPicker_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.ColorPicker_pb2",shape="record"];
	"streamlit.proto.Code_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Code_pb2",shape="record"];
	"streamlit.proto.Checkbox_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Checkbox_pb2",shape="record"];
	"streamlit.proto.ChatInput_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.ChatInput_pb2",shape="record"];
	"streamlit.proto.CameraInput_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.CameraInput_pb2",shape="record"];
	"streamlit.proto.DownloadButton_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.DownloadButton_pb2",shape="record"];
	"streamlit.proto.ButtonGroup_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.ButtonGroup_pb2",shape="record"];
	"streamlit.proto.Button_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Button_pb2",shape="record"];
	"streamlit.proto.BokehChart_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.BokehChart_pb2",shape="record"];
	"streamlit.proto.ArrowVegaLiteChart_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.ArrowVegaLiteChart_pb2",shape="record"];
	"streamlit.proto.ArrowNamedDataSet_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.ArrowNamedDataSet_pb2",shape="record"];
	"streamlit.proto.Balloons_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Balloons_pb2",shape="record"];
	"streamlit.proto.AudioInput_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.AudioInput_pb2",shape="record"];
	"streamlit.proto.LabelVisibilityMessage_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.LabelVisibilityMessage_pb2",shape="record"];
	"streamlit.proto.Audio_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Audio_pb2",shape="record"];
	"streamlit.proto.Arrow_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Arrow_pb2",shape="record"];
	"streamlit.proto.Alert_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Alert_pb2",shape="record"];
	"streamlit.proto.WidthConfig_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.WidthConfig_pb2",shape="record"];
	"streamlit.proto.Block_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.Block_pb2",shape="record"];
	"streamlit.proto.AutoRerun_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.AutoRerun_pb2",shape="record"];
	"streamlit.runtime.stats" [label="<f0> SourceModule| <f1> streamlit.runtime.stats",shape="record"];
	"streamlit.proto.openmetrics_data_model_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.openmetrics_data_model_pb2",shape="record"];
	"streamlit.runtime.scriptrunner_utils.script_requests" [label="<f0> SourceModule| <f1> streamlit.runtime.scriptrunner_utils.script_requests",shape="record"];
	"streamlit.proto.WidgetStates_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.WidgetStates_pb2",shape="record"];
	"streamlit.runtime.pages_manager" [label="<f0> SourceModule| <f1> streamlit.runtime.pages_manager",shape="record"];
	"streamlit.source_util" [label="<f0> SourceModule| <f1> streamlit.source_util",shape="record"];
	"streamlit.string_util" [label="<f0> SourceModule| <f1> streamlit.string_util",shape="record"];
	"streamlit.material_icon_names" [label="<f0> SourceModule| <f1> streamlit.material_icon_names",shape="record"];
	"streamlit.emojis" [label="<f0> SourceModule| <f1> streamlit.emojis",shape="record"];
	"streamlit.runtime.scriptrunner.script_cache" [label="<f0> SourceModule| <f1> streamlit.runtime.scriptrunner.script_cache",shape="record"];
	"streamlit.runtime.scriptrunner.magic" [label="<f0> SourceModule| <f1> streamlit.runtime.scriptrunner.magic",shape="record"];
	"streamlit.runtime.scriptrunner" [label="<f0> Package| <f1> streamlit.runtime.scriptrunner",shape="record"];
	"streamlit.runtime.scriptrunner_utils.exceptions" [label="<f0> SourceModule| <f1> streamlit.runtime.scriptrunner_utils.exceptions",shape="record"];
	"streamlit.runtime.scriptrunner.script_runner" [label="<f0> SourceModule| <f1> streamlit.runtime.scriptrunner.script_runner",shape="record"];
	"streamlit.runtime.scriptrunner.exec_code" [label="<f0> SourceModule| <f1> streamlit.runtime.scriptrunner.exec_code",shape="record"];
	"streamlit.error_util" [label="<f0> SourceModule| <f1> streamlit.error_util",shape="record"];
	"streamlit.elements.exception" [label="<f0> SourceModule| <f1> streamlit.elements.exception",shape="record"];
	"streamlit.elements" [label="<f0> Package| <f1> streamlit.elements",shape="record"];
	"streamlit.elements.lib.layout_utils" [label="<f0> SourceModule| <f1> streamlit.elements.lib.layout_utils",shape="record"];
	"streamlit.elements.lib" [label="<f0> Package| <f1> streamlit.elements.lib",shape="record"];
	"blinker" [label="<f0> Package| <f1> blinker",shape="record"];
	"blinker.base" [label="<f0> SourceModule| <f1> blinker.base",shape="record"];
	"blinker._utilities" [label="<f0> SourceModule| <f1> blinker._utilities",shape="record"];
	"blinker._saferef" [label="<f0> SourceModule| <f1> blinker._saferef",shape="record"];
	"streamlit.runtime.scriptrunner_utils" [label="<f0> Package| <f1> streamlit.runtime.scriptrunner_utils",shape="record"];
	"streamlit.proto.PageProfile_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.PageProfile_pb2",shape="record"];
	"streamlit.proto.ForwardMsg_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.ForwardMsg_pb2",shape="record"];
	"streamlit.proto.ClientState_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.ClientState_pb2",shape="record"];
	"streamlit.runtime.forward_msg_cache" [label="<f0> SourceModule| <f1> streamlit.runtime.forward_msg_cache",shape="record"];
	"streamlit.runtime" [label="<f0> Package| <f1> streamlit.runtime",shape="record"];
	"streamlit.runtime.session_manager" [label="<f0> SourceModule| <f1> streamlit.runtime.session_manager",shape="record"];
	"streamlit.runtime.script_data" [label="<f0> SourceModule| <f1> streamlit.runtime.script_data",shape="record"];
	"streamlit.runtime.app_session" [label="<f0> SourceModule| <f1> streamlit.runtime.app_session",shape="record"];
	"streamlit.git_util" [label="<f0> SourceModule| <f1> streamlit.git_util",shape="record"];
	"streamlit.proto.BackMsg_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.BackMsg_pb2",shape="record"];
	"streamlit.watcher" [label="<f0> Package| <f1> streamlit.watcher",shape="record"];
	"streamlit.watcher.path_watcher" [label="<f0> SourceModule| <f1> streamlit.watcher.path_watcher",shape="record"];
	"streamlit.watcher.event_based_path_watcher" [label="<f0> SourceModule| <f1> streamlit.watcher.event_based_path_watcher",shape="record"];
	"'watchdog.observers'" [label="<f0> MissingModule| <f1> 'watchdog.observers'",shape="record"];
	"watchdog" [label="<f0> MissingModule| <f1> watchdog",shape="record"];
	"streamlit.watcher.polling_path_watcher" [label="<f0> SourceModule| <f1> streamlit.watcher.polling_path_watcher",shape="record"];
	"streamlit.watcher.local_sources_watcher" [label="<f0> SourceModule| <f1> streamlit.watcher.local_sources_watcher",shape="record"];
	"streamlit.watcher.folder_black_list" [label="<f0> SourceModule| <f1> streamlit.watcher.folder_black_list",shape="record"];
	"streamlit.watcher.util" [label="<f0> SourceModule| <f1> streamlit.watcher.util",shape="record"];
	"streamlit.runtime.forward_msg_queue" [label="<f0> SourceModule| <f1> streamlit.runtime.forward_msg_queue",shape="record"];
	"streamlit.runtime.runtime" [label="<f0> SourceModule| <f1> streamlit.runtime.runtime",shape="record"];
	"streamlit.runtime.media_file_storage" [label="<f0> SourceModule| <f1> streamlit.runtime.media_file_storage",shape="record"];
	"streamlit.runtime.caching.storage" [label="<f0> Package| <f1> streamlit.runtime.caching.storage",shape="record"];
	"streamlit.runtime.caching.storage.cache_storage_protocol" [label="<f0> SourceModule| <f1> streamlit.runtime.caching.storage.cache_storage_protocol",shape="record"];
	"streamlit.runtime.websocket_session_manager" [label="<f0> SourceModule| <f1> streamlit.runtime.websocket_session_manager",shape="record"];
	"streamlit.runtime.memory_session_storage" [label="<f0> SourceModule| <f1> streamlit.runtime.memory_session_storage",shape="record"];
	"streamlit.runtime.media_file_manager" [label="<f0> SourceModule| <f1> streamlit.runtime.media_file_manager",shape="record"];
	"streamlit.runtime.caching.storage.local_disk_cache_storage" [label="<f0> SourceModule| <f1> streamlit.runtime.caching.storage.local_disk_cache_storage",shape="record"];
	"streamlit.runtime.caching.storage.in_memory_cache_storage_wrapper" [label="<f0> SourceModule| <f1> streamlit.runtime.caching.storage.in_memory_cache_storage_wrapper",shape="record"];
	"streamlit.runtime.caching.cache_utils" [label="<f0> SourceModule| <f1> streamlit.runtime.caching.cache_utils",shape="record"];
	"streamlit.runtime.caching.cache_type" [label="<f0> SourceModule| <f1> streamlit.runtime.caching.cache_type",shape="record"];
	"streamlit.runtime.caching.hashing" [label="<f0> SourceModule| <f1> streamlit.runtime.caching.hashing",shape="record"];
	"streamlit.runtime.caching.cached_message_replay" [label="<f0> SourceModule| <f1> streamlit.runtime.caching.cached_message_replay",shape="record"];
	"streamlit.runtime.caching.cache_errors" [label="<f0> SourceModule| <f1> streamlit.runtime.caching.cache_errors",shape="record"];
	"streamlit.dataframe_util" [label="<f0> SourceModule| <f1> streamlit.dataframe_util",shape="record"];
	"xarray" [label="<f0> MissingModule| <f1> xarray",shape="record"];
	"streamlit.components.lib.local_component_registry" [label="<f0> SourceModule| <f1> streamlit.components.lib.local_component_registry",shape="record"];
	"streamlit.components.lib" [label="<f0> Package| <f1> streamlit.components.lib",shape="record"];
	"streamlit.components.v1.custom_component" [label="<f0> SourceModule| <f1> streamlit.components.v1.custom_component",shape="record"];
	"streamlit.elements.lib.utils" [label="<f0> SourceModule| <f1> streamlit.elements.lib.utils",shape="record"];
	"streamlit.elements.lib.policies" [label="<f0> SourceModule| <f1> streamlit.elements.lib.policies",shape="record"];
	"streamlit.elements.lib.form_utils" [label="<f0> SourceModule| <f1> streamlit.elements.lib.form_utils",shape="record"];
	"streamlit.components.v1.component_arrow" [label="<f0> SourceModule| <f1> streamlit.components.v1.component_arrow",shape="record"];
	"streamlit.elements.lib.pandas_styler_utils" [label="<f0> SourceModule| <f1> streamlit.elements.lib.pandas_styler_utils",shape="record"];
	"streamlit.components" [label="<f0> Package| <f1> streamlit.components",shape="record"];
	"streamlit.commands.execution_control" [label="<f0> SourceModule| <f1> streamlit.commands.execution_control",shape="record"];
	"streamlit.commands" [label="<f0> Package| <f1> streamlit.commands",shape="record"];
	"streamlit.commands.page_config" [label="<f0> SourceModule| <f1> streamlit.commands.page_config",shape="record"];
	"streamlit.elements.lib.image_utils" [label="<f0> SourceModule| <f1> streamlit.elements.lib.image_utils",shape="record"];
	"PIL.GifImagePlugin" [label="<f0> SourceModule| <f1> PIL.GifImagePlugin",shape="record"];
	"PIL.ImageMath" [label="<f0> SourceModule| <f1> PIL.ImageMath",shape="record"];
	"PIL._imagingmath" [label="<f0> Extension| <f1> PIL._imagingmath",shape="record"];
	"PIL.ImageChops" [label="<f0> SourceModule| <f1> PIL.ImageChops",shape="record"];
	"streamlit.elements.spinner" [label="<f0> SourceModule| <f1> streamlit.elements.spinner",shape="record"];
	"streamlit.navigation.page" [label="<f0> SourceModule| <f1> streamlit.navigation.page",shape="record"];
	"streamlit.navigation" [label="<f0> Package| <f1> streamlit.navigation",shape="record"];
	"streamlit.commands.navigation" [label="<f0> SourceModule| <f1> streamlit.commands.navigation",shape="record"];
	"streamlit.commands.logo" [label="<f0> SourceModule| <f1> streamlit.commands.logo",shape="record"];
	"streamlit.commands.echo" [label="<f0> SourceModule| <f1> streamlit.commands.echo",shape="record"];
	"streamlit.column_config" [label="<f0> SourceModule| <f1> streamlit.column_config",shape="record"];
	"streamlit.elements.lib.column_types" [label="<f0> SourceModule| <f1> streamlit.elements.lib.column_types",shape="record"];
	"streamlit.commands.experimental_query_params" [label="<f0> SourceModule| <f1> streamlit.commands.experimental_query_params",shape="record"];
	"streamlit.runtime.state.query_params" [label="<f0> SourceModule| <f1> streamlit.runtime.state.query_params",shape="record"];
	"streamlit.user_info" [label="<f0> SourceModule| <f1> streamlit.user_info",shape="record"];
	"streamlit.auth_util" [label="<f0> SourceModule| <f1> streamlit.auth_util",shape="record"];
	"'authlib.jose'" [label="<f0> MissingModule| <f1> 'authlib.jose'",shape="record"];
	"authlib" [label="<f0> MissingModule| <f1> authlib",shape="record"];
	"streamlit.runtime.state" [label="<f0> Package| <f1> streamlit.runtime.state",shape="record"];
	"streamlit.runtime.state.widgets" [label="<f0> SourceModule| <f1> streamlit.runtime.state.widgets",shape="record"];
	"streamlit.runtime.state.session_state_proxy" [label="<f0> SourceModule| <f1> streamlit.runtime.state.session_state_proxy",shape="record"];
	"streamlit.runtime.state.session_state" [label="<f0> SourceModule| <f1> streamlit.runtime.state.session_state",shape="record"];
	"streamlit.vendor.pympler.asizeof" [label="<f0> SourceModule| <f1> streamlit.vendor.pympler.asizeof",shape="record"];
	"streamlit.vendor.pympler" [label="<f0> Package| <f1> streamlit.vendor.pympler",shape="record"];
	"streamlit.vendor" [label="<f0> Package| <f1> streamlit.vendor",shape="record"];
	"_testcapi" [label="<f0> Extension| <f1> _testcapi",shape="record"];
	"streamlit.runtime.state.safe_session_state" [label="<f0> SourceModule| <f1> streamlit.runtime.state.safe_session_state",shape="record"];
	"streamlit.runtime.state.query_params_proxy" [label="<f0> SourceModule| <f1> streamlit.runtime.state.query_params_proxy",shape="record"];
	"streamlit.runtime.context" [label="<f0> SourceModule| <f1> streamlit.runtime.context",shape="record"];
	"tornado.web" [label="<f0> SourceModule| <f1> tornado.web",shape="record"];
	"tornado.routing" [label="<f0> SourceModule| <f1> tornado.routing",shape="record"];
	"tornado.httpserver" [label="<f0> SourceModule| <f1> tornado.httpserver",shape="record"];
	"tornado.tcpserver" [label="<f0> SourceModule| <f1> tornado.tcpserver",shape="record"];
	"tornado.http1connection" [label="<f0> SourceModule| <f1> tornado.http1connection",shape="record"];
	"tornado.httputil" [label="<f0> SourceModule| <f1> tornado.httputil",shape="record"];
	"streamlit.runtime.context_util" [label="<f0> SourceModule| <f1> streamlit.runtime.context_util",shape="record"];
	"streamlit.runtime.secrets" [label="<f0> SourceModule| <f1> streamlit.runtime.secrets",shape="record"];
	"streamlit.runtime.metrics_util" [label="<f0> SourceModule| <f1> streamlit.runtime.metrics_util",shape="record"];
	"streamlit.runtime.fragment" [label="<f0> SourceModule| <f1> streamlit.runtime.fragment",shape="record"];
	"streamlit.time_util" [label="<f0> SourceModule| <f1> streamlit.time_util",shape="record"];
	"streamlit.runtime.connection_factory" [label="<f0> SourceModule| <f1> streamlit.runtime.connection_factory",shape="record"];
	"streamlit.connections" [label="<f0> Package| <f1> streamlit.connections",shape="record"];
	"streamlit.connections.sql_connection" [label="<f0> SourceModule| <f1> streamlit.connections.sql_connection",shape="record"];
	"streamlit.connections.util" [label="<f0> SourceModule| <f1> streamlit.connections.util",shape="record"];
	"streamlit.connections.snowpark_connection" [label="<f0> SourceModule| <f1> streamlit.connections.snowpark_connection",shape="record"];
	"streamlit.connections.snowflake_connection" [label="<f0> SourceModule| <f1> streamlit.connections.snowflake_connection",shape="record"];
	"'snowflake.connector'" [label="<f0> MissingModule| <f1> 'snowflake.connector'",shape="record"];
	"streamlit.connections.base_connection" [label="<f0> SourceModule| <f1> streamlit.connections.base_connection",shape="record"];
	"streamlit.runtime.caching" [label="<f0> Package| <f1> streamlit.runtime.caching",shape="record"];
	"streamlit.runtime.caching.legacy_cache_api" [label="<f0> SourceModule| <f1> streamlit.runtime.caching.legacy_cache_api",shape="record"];
	"streamlit.runtime.caching.cache_resource_api" [label="<f0> SourceModule| <f1> streamlit.runtime.caching.cache_resource_api",shape="record"];
	"streamlit.runtime.caching.cache_data_api" [label="<f0> SourceModule| <f1> streamlit.runtime.caching.cache_data_api",shape="record"];
	"streamlit.runtime.caching.storage.dummy_cache_storage" [label="<f0> SourceModule| <f1> streamlit.runtime.caching.storage.dummy_cache_storage",shape="record"];
	"streamlit.elements.dialog_decorator" [label="<f0> SourceModule| <f1> streamlit.elements.dialog_decorator",shape="record"];
	"streamlit.elements.lib.dialog" [label="<f0> SourceModule| <f1> streamlit.elements.lib.dialog",shape="record"];
	"streamlit.elements.lib.mutable_status_container" [label="<f0> SourceModule| <f1> streamlit.elements.lib.mutable_status_container",shape="record"];
	"streamlit.delta_generator" [label="<f0> SourceModule| <f1> streamlit.delta_generator",shape="record"];
	"streamlit.elements.lib.built_in_chart_utils" [label="<f0> SourceModule| <f1> streamlit.elements.lib.built_in_chart_utils",shape="record"];
	"altair" [label="<f0> Package| <f1> altair",shape="record"];
	"altair.utils.deprecation" [label="<f0> SourceModule| <f1> altair.utils.deprecation",shape="record"];
	"altair._magics" [label="<f0> SourceModule| <f1> altair._magics",shape="record"];
	"altair.vegalite.v5" [label="<f0> Package| <f1> altair.vegalite.v5",shape="record"];
	"altair.vegalite.v5.display" [label="<f0> SourceModule| <f1> altair.vegalite.v5.display",shape="record"];
	"altair.utils._show" [label="<f0> SourceModule| <f1> altair.utils._show",shape="record"];
	"altair.vegalite.display" [label="<f0> SourceModule| <f1> altair.vegalite.display",shape="record"];
	"altair.utils.display" [label="<f0> SourceModule| <f1> altair.utils.display",shape="record"];
	"altair.utils.schemapi" [label="<f0> SourceModule| <f1> altair.utils.schemapi",shape="record"];
	"narwhals.stable.v1" [label="<f0> Package| <f1> narwhals.stable.v1",shape="record"];
	"narwhals.dtypes" [label="<f0> SourceModule| <f1> narwhals.dtypes",shape="record"];
	"narwhals._translate" [label="<f0> SourceModule| <f1> narwhals._translate",shape="record"];
	"narwhals.utils" [label="<f0> SourceModule| <f1> narwhals.utils",shape="record"];
	"narwhals._arrow.namespace" [label="<f0> SourceModule| <f1> narwhals._arrow.namespace",shape="record"];
	"narwhals._arrow" [label="<f0> Package| <f1> narwhals._arrow",shape="record"];
	"narwhals._arrow.typing" [label="<f0> SourceModule| <f1> narwhals._arrow.typing",shape="record"];
	"'pyarrow._stubs_typing'" [label="<f0> MissingModule| <f1> 'pyarrow._stubs_typing'",shape="record"];
	"'pyarrow.__lib_pxi'" [label="<f0> MissingModule| <f1> 'pyarrow.__lib_pxi'",shape="record"];
	"narwhals._expression_parsing" [label="<f0> SourceModule| <f1> narwhals._expression_parsing",shape="record"];
	"narwhals._arrow.series" [label="<f0> SourceModule| <f1> narwhals._arrow.series",shape="record"];
	"narwhals._arrow.series_struct" [label="<f0> SourceModule| <f1> narwhals._arrow.series_struct",shape="record"];
	"narwhals._arrow.series_str" [label="<f0> SourceModule| <f1> narwhals._arrow.series_str",shape="record"];
	"narwhals._arrow.series_list" [label="<f0> SourceModule| <f1> narwhals._arrow.series_list",shape="record"];
	"narwhals._arrow.series_dt" [label="<f0> SourceModule| <f1> narwhals._arrow.series_dt",shape="record"];
	"narwhals._duration" [label="<f0> SourceModule| <f1> narwhals._duration",shape="record"];
	"narwhals._arrow.series_cat" [label="<f0> SourceModule| <f1> narwhals._arrow.series_cat",shape="record"];
	"narwhals._arrow.selectors" [label="<f0> SourceModule| <f1> narwhals._arrow.selectors",shape="record"];
	"narwhals._arrow.expr" [label="<f0> SourceModule| <f1> narwhals._arrow.expr",shape="record"];
	"narwhals._arrow.dataframe" [label="<f0> SourceModule| <f1> narwhals._arrow.dataframe",shape="record"];
	"narwhals._dask.dataframe" [label="<f0> SourceModule| <f1> narwhals._dask.dataframe",shape="record"];
	"narwhals._dask.namespace" [label="<f0> SourceModule| <f1> narwhals._dask.namespace",shape="record"];
	"narwhals._dask.selectors" [label="<f0> SourceModule| <f1> narwhals._dask.selectors",shape="record"];
	"narwhals._compliant.namespace" [label="<f0> SourceModule| <f1> narwhals._compliant.namespace",shape="record"];
	"narwhals._compliant.when_then" [label="<f0> SourceModule| <f1> narwhals._compliant.when_then",shape="record"];
	"narwhals._compliant.expr" [label="<f0> SourceModule| <f1> narwhals._compliant.expr",shape="record"];
	"narwhals._compliant.series" [label="<f0> SourceModule| <f1> narwhals._compliant.series",shape="record"];
	"narwhals._compliant.dataframe" [label="<f0> SourceModule| <f1> narwhals._compliant.dataframe",shape="record"];
	"narwhals._compliant.group_by" [label="<f0> SourceModule| <f1> narwhals._compliant.group_by",shape="record"];
	"narwhals._compliant.any_namespace" [label="<f0> SourceModule| <f1> narwhals._compliant.any_namespace",shape="record"];
	"narwhals._compliant.selectors" [label="<f0> SourceModule| <f1> narwhals._compliant.selectors",shape="record"];
	"narwhals._dask.group_by" [label="<f0> SourceModule| <f1> narwhals._dask.group_by",shape="record"];
	"dask_expr" [label="<f0> MissingModule| <f1> dask_expr",shape="record"];
	"narwhals._dask.expr" [label="<f0> SourceModule| <f1> narwhals._dask.expr",shape="record"];
	"'dask.array'" [label="<f0> MissingModule| <f1> 'dask.array'",shape="record"];
	"narwhals._pandas_like.group_by" [label="<f0> SourceModule| <f1> narwhals._pandas_like.group_by",shape="record"];
	"narwhals._pandas_like" [label="<f0> Package| <f1> narwhals._pandas_like",shape="record"];
	"narwhals._pandas_like.expr" [label="<f0> SourceModule| <f1> narwhals._pandas_like.expr",shape="record"];
	"narwhals._pandas_like.namespace" [label="<f0> SourceModule| <f1> narwhals._pandas_like.namespace",shape="record"];
	"narwhals._pandas_like.typing" [label="<f0> SourceModule| <f1> narwhals._pandas_like.typing",shape="record"];
	"narwhals._pandas_like.selectors" [label="<f0> SourceModule| <f1> narwhals._pandas_like.selectors",shape="record"];
	"narwhals._dask.expr_str" [label="<f0> SourceModule| <f1> narwhals._dask.expr_str",shape="record"];
	"narwhals._dask.expr_dt" [label="<f0> SourceModule| <f1> narwhals._dask.expr_dt",shape="record"];
	"narwhals._dask.utils" [label="<f0> SourceModule| <f1> narwhals._dask.utils",shape="record"];
	"narwhals._dask" [label="<f0> Package| <f1> narwhals._dask",shape="record"];
	"narwhals._polars.dataframe" [label="<f0> SourceModule| <f1> narwhals._polars.dataframe",shape="record"];
	"narwhals._polars.group_by" [label="<f0> SourceModule| <f1> narwhals._polars.group_by",shape="record"];
	"'polars.lazyframe'" [label="<f0> MissingModule| <f1> 'polars.lazyframe'",shape="record"];
	"'polars.dataframe'" [label="<f0> MissingModule| <f1> 'polars.dataframe'",shape="record"];
	"narwhals._polars.expr" [label="<f0> SourceModule| <f1> narwhals._polars.expr",shape="record"];
	"narwhals._polars.utils" [label="<f0> SourceModule| <f1> narwhals._polars.utils",shape="record"];
	"narwhals._polars.series" [label="<f0> SourceModule| <f1> narwhals._polars.series",shape="record"];
	"narwhals._polars.namespace" [label="<f0> SourceModule| <f1> narwhals._polars.namespace",shape="record"];
	"narwhals._polars.typing" [label="<f0> SourceModule| <f1> narwhals._polars.typing",shape="record"];
	"narwhals._polars" [label="<f0> Package| <f1> narwhals._polars",shape="record"];
	"narwhals._duckdb.dataframe" [label="<f0> SourceModule| <f1> narwhals._duckdb.dataframe",shape="record"];
	"narwhals._duckdb.series" [label="<f0> SourceModule| <f1> narwhals._duckdb.series",shape="record"];
	"narwhals._duckdb.namespace" [label="<f0> SourceModule| <f1> narwhals._duckdb.namespace",shape="record"];
	"narwhals._duckdb.selectors" [label="<f0> SourceModule| <f1> narwhals._duckdb.selectors",shape="record"];
	"'duckdb.typing'" [label="<f0> MissingModule| <f1> 'duckdb.typing'",shape="record"];
	"narwhals._duckdb.group_by" [label="<f0> SourceModule| <f1> narwhals._duckdb.group_by",shape="record"];
	"narwhals._duckdb.expr" [label="<f0> SourceModule| <f1> narwhals._duckdb.expr",shape="record"];
	"narwhals._duckdb.typing" [label="<f0> SourceModule| <f1> narwhals._duckdb.typing",shape="record"];
	"narwhals._duckdb.expr_struct" [label="<f0> SourceModule| <f1> narwhals._duckdb.expr_struct",shape="record"];
	"narwhals._duckdb.expr_str" [label="<f0> SourceModule| <f1> narwhals._duckdb.expr_str",shape="record"];
	"narwhals._duckdb.expr_list" [label="<f0> SourceModule| <f1> narwhals._duckdb.expr_list",shape="record"];
	"narwhals._duckdb.expr_dt" [label="<f0> SourceModule| <f1> narwhals._duckdb.expr_dt",shape="record"];
	"narwhals._duckdb.utils" [label="<f0> SourceModule| <f1> narwhals._duckdb.utils",shape="record"];
	"narwhals._duckdb" [label="<f0> Package| <f1> narwhals._duckdb",shape="record"];
	"narwhals._arrow.group_by" [label="<f0> SourceModule| <f1> narwhals._arrow.group_by",shape="record"];
	"narwhals._arrow.utils" [label="<f0> SourceModule| <f1> narwhals._arrow.utils",shape="record"];
	"narwhals._interchange.series" [label="<f0> SourceModule| <f1> narwhals._interchange.series",shape="record"];
	"narwhals._interchange" [label="<f0> Package| <f1> narwhals._interchange",shape="record"];
	"narwhals._interchange.dataframe" [label="<f0> SourceModule| <f1> narwhals._interchange.dataframe",shape="record"];
	"narwhals._pandas_like.utils" [label="<f0> SourceModule| <f1> narwhals._pandas_like.utils",shape="record"];
	"narwhals._pandas_like.series" [label="<f0> SourceModule| <f1> narwhals._pandas_like.series",shape="record"];
	"narwhals._pandas_like.series_struct" [label="<f0> SourceModule| <f1> narwhals._pandas_like.series_struct",shape="record"];
	"narwhals._pandas_like.series_str" [label="<f0> SourceModule| <f1> narwhals._pandas_like.series_str",shape="record"];
	"narwhals._pandas_like.series_list" [label="<f0> SourceModule| <f1> narwhals._pandas_like.series_list",shape="record"];
	"narwhals._pandas_like.series_dt" [label="<f0> SourceModule| <f1> narwhals._pandas_like.series_dt",shape="record"];
	"narwhals._pandas_like.series_cat" [label="<f0> SourceModule| <f1> narwhals._pandas_like.series_cat",shape="record"];
	"narwhals._pandas_like.dataframe" [label="<f0> SourceModule| <f1> narwhals._pandas_like.dataframe",shape="record"];
	"'sqlframe._version'" [label="<f0> MissingModule| <f1> 'sqlframe._version'",shape="record"];
	"sqlframe" [label="<f0> MissingModule| <f1> sqlframe",shape="record"];
	"'dask.dataframe'" [label="<f0> MissingModule| <f1> 'dask.dataframe'",shape="record"];
	"cudf" [label="<f0> MissingModule| <f1> cudf",shape="record"];
	"'modin.pandas'" [label="<f0> MissingModule| <f1> 'modin.pandas'",shape="record"];
	"narwhals.stable.v1._namespace" [label="<f0> SourceModule| <f1> narwhals.stable.v1._namespace",shape="record"];
	"narwhals._namespace" [label="<f0> SourceModule| <f1> narwhals._namespace",shape="record"];
	"narwhals._spark_like.namespace" [label="<f0> SourceModule| <f1> narwhals._spark_like.namespace",shape="record"];
	"'sqlframe.base'" [label="<f0> MissingModule| <f1> 'sqlframe.base'",shape="record"];
	"narwhals._spark_like.utils" [label="<f0> SourceModule| <f1> narwhals._spark_like.utils",shape="record"];
	"narwhals._spark_like.selectors" [label="<f0> SourceModule| <f1> narwhals._spark_like.selectors",shape="record"];
	"narwhals._spark_like.expr" [label="<f0> SourceModule| <f1> narwhals._spark_like.expr",shape="record"];
	"narwhals._spark_like.typing" [label="<f0> SourceModule| <f1> narwhals._spark_like.typing",shape="record"];
	"narwhals._spark_like.expr_struct" [label="<f0> SourceModule| <f1> narwhals._spark_like.expr_struct",shape="record"];
	"narwhals._spark_like.expr_str" [label="<f0> SourceModule| <f1> narwhals._spark_like.expr_str",shape="record"];
	"narwhals._spark_like.expr_list" [label="<f0> SourceModule| <f1> narwhals._spark_like.expr_list",shape="record"];
	"narwhals._spark_like.expr_dt" [label="<f0> SourceModule| <f1> narwhals._spark_like.expr_dt",shape="record"];
	"narwhals._spark_like" [label="<f0> Package| <f1> narwhals._spark_like",shape="record"];
	"narwhals._spark_like.dataframe" [label="<f0> SourceModule| <f1> narwhals._spark_like.dataframe",shape="record"];
	"narwhals._spark_like.group_by" [label="<f0> SourceModule| <f1> narwhals._spark_like.group_by",shape="record"];
	"narwhals._compliant.typing" [label="<f0> SourceModule| <f1> narwhals._compliant.typing",shape="record"];
	"narwhals._compliant" [label="<f0> Package| <f1> narwhals._compliant",shape="record"];
	"narwhals._enum" [label="<f0> SourceModule| <f1> narwhals._enum",shape="record"];
	"narwhals.typing" [label="<f0> SourceModule| <f1> narwhals.typing",shape="record"];
	"narwhals.translate" [label="<f0> SourceModule| <f1> narwhals.translate",shape="record"];
	"ibis" [label="<f0> MissingModule| <f1> ibis",shape="record"];
	"narwhals._ibis.dataframe" [label="<f0> SourceModule| <f1> narwhals._ibis.dataframe",shape="record"];
	"narwhals._ibis.series" [label="<f0> SourceModule| <f1> narwhals._ibis.series",shape="record"];
	"narwhals._ibis" [label="<f0> Package| <f1> narwhals._ibis",shape="record"];
	"'ibis.selectors'" [label="<f0> MissingModule| <f1> 'ibis.selectors'",shape="record"];
	"narwhals.stable.v1.dtypes" [label="<f0> SourceModule| <f1> narwhals.stable.v1.dtypes",shape="record"];
	"narwhals.stable.v1._dtypes" [label="<f0> SourceModule| <f1> narwhals.stable.v1._dtypes",shape="record"];
	"narwhals.stable" [label="<f0> Package| <f1> narwhals.stable",shape="record"];
	"narwhals.series" [label="<f0> SourceModule| <f1> narwhals.series",shape="record"];
	"narwhals.series_struct" [label="<f0> SourceModule| <f1> narwhals.series_struct",shape="record"];
	"narwhals.series_str" [label="<f0> SourceModule| <f1> narwhals.series_str",shape="record"];
	"narwhals.series_list" [label="<f0> SourceModule| <f1> narwhals.series_list",shape="record"];
	"narwhals.series_dt" [label="<f0> SourceModule| <f1> narwhals.series_dt",shape="record"];
	"narwhals.series_cat" [label="<f0> SourceModule| <f1> narwhals.series_cat",shape="record"];
	"narwhals.schema" [label="<f0> SourceModule| <f1> narwhals.schema",shape="record"];
	"narwhals.functions" [label="<f0> SourceModule| <f1> narwhals.functions",shape="record"];
	"narwhals.expr" [label="<f0> SourceModule| <f1> narwhals.expr",shape="record"];
	"narwhals.expr_struct" [label="<f0> SourceModule| <f1> narwhals.expr_struct",shape="record"];
	"narwhals.expr_str" [label="<f0> SourceModule| <f1> narwhals.expr_str",shape="record"];
	"narwhals.expr_name" [label="<f0> SourceModule| <f1> narwhals.expr_name",shape="record"];
	"narwhals.expr_list" [label="<f0> SourceModule| <f1> narwhals.expr_list",shape="record"];
	"narwhals.expr_dt" [label="<f0> SourceModule| <f1> narwhals.expr_dt",shape="record"];
	"narwhals.expr_cat" [label="<f0> SourceModule| <f1> narwhals.expr_cat",shape="record"];
	"narwhals.dataframe" [label="<f0> SourceModule| <f1> narwhals.dataframe",shape="record"];
	"narwhals.group_by" [label="<f0> SourceModule| <f1> narwhals.group_by",shape="record"];
	"narwhals.selectors" [label="<f0> SourceModule| <f1> narwhals.selectors",shape="record"];
	"narwhals.exceptions" [label="<f0> SourceModule| <f1> narwhals.exceptions",shape="record"];
	"narwhals.dependencies" [label="<f0> SourceModule| <f1> narwhals.dependencies",shape="record"];
	"narwhals" [label="<f0> Package| <f1> narwhals",shape="record"];
	"altair.utils.plugin_registry" [label="<f0> SourceModule| <f1> altair.utils.plugin_registry",shape="record"];
	"altair.utils._vegafusion_data" [label="<f0> SourceModule| <f1> altair.utils._vegafusion_data",shape="record"];
	"'vegafusion.runtime'" [label="<f0> MissingModule| <f1> 'vegafusion.runtime'",shape="record"];
	"narwhals.stable.v1.typing" [label="<f0> SourceModule| <f1> narwhals.stable.v1.typing",shape="record"];
	"altair.vegalite.data" [label="<f0> SourceModule| <f1> altair.vegalite.data",shape="record"];
	"altair.utils.data" [label="<f0> SourceModule| <f1> altair.utils.data",shape="record"];
	"altair.utils.core" [label="<f0> SourceModule| <f1> altair.utils.core",shape="record"];
	"altair.vegalite.v5.schema.channels" [label="<f0> SourceModule| <f1> altair.vegalite.v5.schema.channels",shape="record"];
	"altair.vegalite.v5.schema._typing" [label="<f0> SourceModule| <f1> altair.vegalite.v5.schema._typing",shape="record"];
	"altair.utils._dfi_types" [label="<f0> SourceModule| <f1> altair.utils._dfi_types",shape="record"];
	"altair.utils._importers" [label="<f0> SourceModule| <f1> altair.utils._importers",shape="record"];
	"altair.vegalite.SCHEMA_VERSION" [label="<f0> MissingModule| <f1> altair.vegalite.SCHEMA_VERSION",shape="record"];
	"vl_convert" [label="<f0> MissingModule| <f1> vl_convert",shape="record"];
	"vegafusion" [label="<f0> MissingModule| <f1> vegafusion",shape="record"];
	"altair.utils.mimebundle" [label="<f0> SourceModule| <f1> altair.utils.mimebundle",shape="record"];
	"altair.utils.html" [label="<f0> SourceModule| <f1> altair.utils.html",shape="record"];
	"altair.vegalite.v5.data" [label="<f0> SourceModule| <f1> altair.vegalite.v5.data",shape="record"];
	"altair.vegalite.v5.schema" [label="<f0> Package| <f1> altair.vegalite.v5.schema",shape="record"];
	"altair.vegalite.v5.schema.mixins" [label="<f0> SourceModule| <f1> altair.vegalite.v5.schema.mixins",shape="record"];
	"altair.vegalite.v5.compiler" [label="<f0> SourceModule| <f1> altair.vegalite.v5.compiler",shape="record"];
	"altair.utils.compiler" [label="<f0> SourceModule| <f1> altair.utils.compiler",shape="record"];
	"altair.vegalite.v5.api" [label="<f0> SourceModule| <f1> altair.vegalite.v5.api",shape="record"];
	"altair.utils._transformed_data" [label="<f0> SourceModule| <f1> altair.utils._transformed_data",shape="record"];
	"altair.utils.server" [label="<f0> SourceModule| <f1> altair.utils.server",shape="record"];
	"altair.utils.save" [label="<f0> SourceModule| <f1> altair.utils.save",shape="record"];
	"altair.vegalite.v5.schema._config" [label="<f0> SourceModule| <f1> altair.vegalite.v5.schema._config",shape="record"];
	"altair.expr.core" [label="<f0> SourceModule| <f1> altair.expr.core",shape="record"];
	"altair.vegalite.v5.SCHEMA_VERSION" [label="<f0> MissingModule| <f1> altair.vegalite.v5.SCHEMA_VERSION",shape="record"];
	"narwhals.stable.v1.dependencies" [label="<f0> SourceModule| <f1> narwhals.stable.v1.dependencies",shape="record"];
	"altair.typing" [label="<f0> Package| <f1> altair.typing",shape="record"];
	"altair.utils" [label="<f0> Package| <f1> altair.utils",shape="record"];
	"altair.expr" [label="<f0> Package| <f1> altair.expr",shape="record"];
	"altair.jupyter" [label="<f0> Package| <f1> altair.jupyter",shape="record"];
	"altair.jupyter.jupyter_chart" [label="<f0> SourceModule| <f1> altair.jupyter.jupyter_chart",shape="record"];
	"altair.utils.selection" [label="<f0> SourceModule| <f1> altair.utils.selection",shape="record"];
	"anywidget" [label="<f0> MissingModule| <f1> anywidget",shape="record"];
	"altair.vegalite.v5.schema.core" [label="<f0> SourceModule| <f1> altair.vegalite.v5.schema.core",shape="record"];
	"altair.VConcatSpecGenericSpec" [label="<f0> MissingModule| <f1> altair.VConcatSpecGenericSpec",shape="record"];
	"altair.VConcatChart" [label="<f0> MissingModule| <f1> altair.VConcatChart",shape="record"];
	"altair.UnitSpecWithFrame" [label="<f0> MissingModule| <f1> altair.UnitSpecWithFrame",shape="record"];
	"altair.UnitSpec" [label="<f0> MissingModule| <f1> altair.UnitSpec",shape="record"];
	"altair.TopLevelVConcatSpec" [label="<f0> MissingModule| <f1> altair.TopLevelVConcatSpec",shape="record"];
	"altair.TopLevelUnitSpec" [label="<f0> MissingModule| <f1> altair.TopLevelUnitSpec",shape="record"];
	"altair.TopLevelLayerSpec" [label="<f0> MissingModule| <f1> altair.TopLevelLayerSpec",shape="record"];
	"altair.TopLevelHConcatSpec" [label="<f0> MissingModule| <f1> altair.TopLevelHConcatSpec",shape="record"];
	"altair.TopLevelFacetSpec" [label="<f0> MissingModule| <f1> altair.TopLevelFacetSpec",shape="record"];
	"altair.TopLevelConcatSpec" [label="<f0> MissingModule| <f1> altair.TopLevelConcatSpec",shape="record"];
	"altair.NonNormalizedSpec" [label="<f0> MissingModule| <f1> altair.NonNormalizedSpec",shape="record"];
	"altair.LayerSpec" [label="<f0> MissingModule| <f1> altair.LayerSpec",shape="record"];
	"altair.LayerChart" [label="<f0> MissingModule| <f1> altair.LayerChart",shape="record"];
	"altair.HConcatSpecGenericSpec" [label="<f0> MissingModule| <f1> altair.HConcatSpecGenericSpec",shape="record"];
	"altair.HConcatChart" [label="<f0> MissingModule| <f1> altair.HConcatChart",shape="record"];
	"altair.FacetSpec" [label="<f0> MissingModule| <f1> altair.FacetSpec",shape="record"];
	"altair.FacetedUnitSpec" [label="<f0> MissingModule| <f1> altair.FacetedUnitSpec",shape="record"];
	"altair.FacetChart" [label="<f0> MissingModule| <f1> altair.FacetChart",shape="record"];
	"altair.ConcatSpecGenericSpec" [label="<f0> MissingModule| <f1> altair.ConcatSpecGenericSpec",shape="record"];
	"altair.ConcatChart" [label="<f0> MissingModule| <f1> altair.ConcatChart",shape="record"];
	"altair.Chart" [label="<f0> MissingModule| <f1> altair.Chart",shape="record"];
	"altair.renderers" [label="<f0> MissingModule| <f1> altair.renderers",shape="record"];
	"altair.vegalite_compilers" [label="<f0> MissingModule| <f1> altair.vegalite_compilers",shape="record"];
	"altair.data_transformers" [label="<f0> MissingModule| <f1> altair.data_transformers",shape="record"];
	"altair.theme" [label="<f0> SourceModule| <f1> altair.theme",shape="record"];
	"altair.vegalite.v5.theme" [label="<f0> SourceModule| <f1> altair.vegalite.v5.theme",shape="record"];
	"altair.SchemaBase" [label="<f0> MissingModule| <f1> altair.SchemaBase",shape="record"];
	"altair.Parameter" [label="<f0> MissingModule| <f1> altair.Parameter",shape="record"];
	"altair.vegalite" [label="<f0> Package| <f1> altair.vegalite",shape="record"];
	"streamlit.elements.lib.color_util" [label="<f0> SourceModule| <f1> streamlit.elements.lib.color_util",shape="record"];
	"streamlit.proto.RootContainer_pb2" [label="<f0> SourceModule| <f1> streamlit.proto.RootContainer_pb2",shape="record"];
	"streamlit.elements.write" [label="<f0> SourceModule| <f1> streamlit.elements.write",shape="record"];
	"streamlit.elements.widgets.time_widgets" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.time_widgets",shape="record"];
	"streamlit.elements.widgets" [label="<f0> Package| <f1> streamlit.elements.widgets",shape="record"];
	"streamlit.elements.widgets.text_widgets" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.text_widgets",shape="record"];
	"streamlit.elements.widgets.slider" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.slider",shape="record"];
	"streamlit.elements.lib.js_number" [label="<f0> SourceModule| <f1> streamlit.elements.lib.js_number",shape="record"];
	"streamlit.elements.widgets.selectbox" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.selectbox",shape="record"];
	"streamlit.elements.lib.options_selector_utils" [label="<f0> SourceModule| <f1> streamlit.elements.lib.options_selector_utils",shape="record"];
	"streamlit.elements.widgets.select_slider" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.select_slider",shape="record"];
	"streamlit.elements.widgets.radio" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.radio",shape="record"];
	"streamlit.elements.widgets.number_input" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.number_input",shape="record"];
	"streamlit.elements.widgets.multiselect" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.multiselect",shape="record"];
	"streamlit.elements.widgets.file_uploader" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.file_uploader",shape="record"];
	"streamlit.elements.lib.file_uploader_utils" [label="<f0> SourceModule| <f1> streamlit.elements.lib.file_uploader_utils",shape="record"];
	"streamlit.elements.widgets.data_editor" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.data_editor",shape="record"];
	"streamlit.elements.lib.column_config_utils" [label="<f0> SourceModule| <f1> streamlit.elements.lib.column_config_utils",shape="record"];
	"streamlit.elements.lib.dicttools" [label="<f0> SourceModule| <f1> streamlit.elements.lib.dicttools",shape="record"];
	"streamlit.elements.widgets.color_picker" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.color_picker",shape="record"];
	"streamlit.elements.widgets.checkbox" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.checkbox",shape="record"];
	"streamlit.elements.widgets.chat" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.chat",shape="record"];
	"streamlit.elements.widgets.camera_input" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.camera_input",shape="record"];
	"streamlit.elements.widgets.button_group" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.button_group",shape="record"];
	"streamlit.elements.widgets.button" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.button",shape="record"];
	"streamlit.elements.widgets.audio_input" [label="<f0> SourceModule| <f1> streamlit.elements.widgets.audio_input",shape="record"];
	"streamlit.elements.vega_charts" [label="<f0> SourceModule| <f1> streamlit.elements.vega_charts",shape="record"];
	"streamlit.elements.lib.event_utils" [label="<f0> SourceModule| <f1> streamlit.elements.lib.event_utils",shape="record"];
	"streamlit.elements.toast" [label="<f0> SourceModule| <f1> streamlit.elements.toast",shape="record"];
	"streamlit.elements.text" [label="<f0> SourceModule| <f1> streamlit.elements.text",shape="record"];
	"streamlit.elements.snow" [label="<f0> SourceModule| <f1> streamlit.elements.snow",shape="record"];
	"streamlit.elements.pyplot" [label="<f0> SourceModule| <f1> streamlit.elements.pyplot",shape="record"];
	"streamlit.elements.progress" [label="<f0> SourceModule| <f1> streamlit.elements.progress",shape="record"];
	"streamlit.elements.plotly_chart" [label="<f0> SourceModule| <f1> streamlit.elements.plotly_chart",shape="record"];
	"'plotly.tools'" [label="<f0> MissingModule| <f1> 'plotly.tools'",shape="record"];
	"'plotly.io'" [label="<f0> MissingModule| <f1> 'plotly.io'",shape="record"];
	"'plotly.basedatatypes'" [label="<f0> MissingModule| <f1> 'plotly.basedatatypes'",shape="record"];
	"'plotly.graph_objs'" [label="<f0> MissingModule| <f1> 'plotly.graph_objs'",shape="record"];
	"streamlit.elements.lib.streamlit_plotly_theme" [label="<f0> SourceModule| <f1> streamlit.elements.lib.streamlit_plotly_theme",shape="record"];
	"'plotly.graph_objects'" [label="<f0> MissingModule| <f1> 'plotly.graph_objects'",shape="record"];
	"streamlit.elements.metric" [label="<f0> SourceModule| <f1> streamlit.elements.metric",shape="record"];
	"streamlit.elements.media" [label="<f0> SourceModule| <f1> streamlit.elements.media",shape="record"];
	"streamlit.elements.lib.subtitle_utils" [label="<f0> SourceModule| <f1> streamlit.elements.lib.subtitle_utils",shape="record"];
	"streamlit.elements.markdown" [label="<f0> SourceModule| <f1> streamlit.elements.markdown",shape="record"];
	"sympy" [label="<f0> MissingModule| <f1> sympy",shape="record"];
	"streamlit.elements.map" [label="<f0> SourceModule| <f1> streamlit.elements.map",shape="record"];
	"streamlit.elements.layouts" [label="<f0> SourceModule| <f1> streamlit.elements.layouts",shape="record"];
	"streamlit.elements.json" [label="<f0> SourceModule| <f1> streamlit.elements.json",shape="record"];
	"streamlit.elements.image" [label="<f0> SourceModule| <f1> streamlit.elements.image",shape="record"];
	"streamlit.elements.iframe" [label="<f0> SourceModule| <f1> streamlit.elements.iframe",shape="record"];
	"streamlit.elements.html" [label="<f0> SourceModule| <f1> streamlit.elements.html",shape="record"];
	"streamlit.elements.heading" [label="<f0> SourceModule| <f1> streamlit.elements.heading",shape="record"];
	"streamlit.elements.graphviz_chart" [label="<f0> SourceModule| <f1> streamlit.elements.graphviz_chart",shape="record"];
	"graphviz" [label="<f0> MissingModule| <f1> graphviz",shape="record"];
	"streamlit.elements.form" [label="<f0> SourceModule| <f1> streamlit.elements.form",shape="record"];
	"streamlit.elements.empty" [label="<f0> SourceModule| <f1> streamlit.elements.empty",shape="record"];
	"streamlit.elements.doc_string" [label="<f0> SourceModule| <f1> streamlit.elements.doc_string",shape="record"];
	"streamlit.elements.deck_gl_json_chart" [label="<f0> SourceModule| <f1> streamlit.elements.deck_gl_json_chart",shape="record"];
	"pydeck" [label="<f0> Package| <f1> pydeck",shape="record"];
	"pydeck.settings" [label="<f0> SourceModule| <f1> pydeck.settings",shape="record"];
	"pydeck._version" [label="<f0> SourceModule| <f1> pydeck._version",shape="record"];
	"pydeck.nbextension" [label="<f0> Package| <f1> pydeck.nbextension",shape="record"];
	"pydeck.bindings.map_styles" [label="<f0> SourceModule| <f1> pydeck.bindings.map_styles",shape="record"];
	"pydeck.bindings" [label="<f0> Package| <f1> pydeck.bindings",shape="record"];
	"pydeck.bindings.view_state" [label="<f0> SourceModule| <f1> pydeck.bindings.view_state",shape="record"];
	"pydeck.bindings.json_tools" [label="<f0> SourceModule| <f1> pydeck.bindings.json_tools",shape="record"];
	"pydeck.types.base" [label="<f0> SourceModule| <f1> pydeck.types.base",shape="record"];
	"pydeck.types" [label="<f0> Package| <f1> pydeck.types",shape="record"];
	"pydeck.types.function" [label="<f0> SourceModule| <f1> pydeck.types.function",shape="record"];
	"pydeck.types.image" [label="<f0> SourceModule| <f1> pydeck.types.image",shape="record"];
	"pydeck.types.string" [label="<f0> SourceModule| <f1> pydeck.types.string",shape="record"];
	"pydeck.bindings.view" [label="<f0> SourceModule| <f1> pydeck.bindings.view",shape="record"];
	"pydeck.bindings.light_settings" [label="<f0> SourceModule| <f1> pydeck.bindings.light_settings",shape="record"];
	"pydeck.bindings.layer" [label="<f0> SourceModule| <f1> pydeck.bindings.layer",shape="record"];
	"pydeck.exceptions" [label="<f0> Package| <f1> pydeck.exceptions",shape="record"];
	"pydeck.exceptions.exceptions" [label="<f0> SourceModule| <f1> pydeck.exceptions.exceptions",shape="record"];
	"pydeck.data_utils" [label="<f0> Package| <f1> pydeck.data_utils",shape="record"];
	"pydeck.data_utils.color_scales" [label="<f0> SourceModule| <f1> pydeck.data_utils.color_scales",shape="record"];
	"pydeck.data_utils.type_checking" [label="<f0> SourceModule| <f1> pydeck.data_utils.type_checking",shape="record"];
	"pydeck.data_utils.viewport_helpers" [label="<f0> SourceModule| <f1> pydeck.data_utils.viewport_helpers",shape="record"];
	"pydeck.bindings.deck" [label="<f0> SourceModule| <f1> pydeck.bindings.deck",shape="record"];
	"pydeck.widget" [label="<f0> Package| <f1> pydeck.widget",shape="record"];
	"pydeck.widget.widget" [label="<f0> SourceModule| <f1> pydeck.widget.widget",shape="record"];
	"pydeck.widget.debounce" [label="<f0> SourceModule| <f1> pydeck.widget.debounce",shape="record"];
	"pydeck.widget._frontend" [label="<f0> SourceModule| <f1> pydeck.widget._frontend",shape="record"];
	"pydeck.frontend_semver" [label="<f0> SourceModule| <f1> pydeck.frontend_semver",shape="record"];
	"pydeck.data_utils.binary_transfer" [label="<f0> SourceModule| <f1> pydeck.data_utils.binary_transfer",shape="record"];
	"pydeck.bindings.base_map_provider" [label="<f0> SourceModule| <f1> pydeck.bindings.base_map_provider",shape="record"];
	"pydeck.io.html" [label="<f0> SourceModule| <f1> pydeck.io.html",shape="record"];
	"pydeck.io" [label="<f0> Package| <f1> pydeck.io",shape="record"];
	"streamlit.elements.code" [label="<f0> SourceModule| <f1> streamlit.elements.code",shape="record"];
	"streamlit.elements.bokeh_chart" [label="<f0> SourceModule| <f1> streamlit.elements.bokeh_chart",shape="record"];
	"'bokeh.embed'" [label="<f0> MissingModule| <f1> 'bokeh.embed'",shape="record"];
	"bokeh" [label="<f0> MissingModule| <f1> bokeh",shape="record"];
	"streamlit.elements.balloons" [label="<f0> SourceModule| <f1> streamlit.elements.balloons",shape="record"];
	"streamlit.elements.arrow" [label="<f0> SourceModule| <f1> streamlit.elements.arrow",shape="record"];
	"streamlit.elements.alert" [label="<f0> SourceModule| <f1> streamlit.elements.alert",shape="record"];
	"streamlit.delta_generator_singletons" [label="<f0> SourceModule| <f1> streamlit.delta_generator_singletons",shape="record"];
	"streamlit.version" [label="<f0> SourceModule| <f1> streamlit.version",shape="record"];
	"streamlit.deprecation_util" [label="<f0> SourceModule| <f1> streamlit.deprecation_util",shape="record"];
	"streamlit.logger" [label="<f0> SourceModule| <f1> streamlit.logger",shape="record"];
	"streamlit.development" [label="<f0> SourceModule| <f1> streamlit.development",shape="record"];
	"streamlit.config_util" [label="<f0> SourceModule| <f1> streamlit.config_util",shape="record"];
	"streamlit.config_option" [label="<f0> SourceModule| <f1> streamlit.config_option",shape="record"];
	"streamlit.url_util" [label="<f0> SourceModule| <f1> streamlit.url_util",shape="record"];
	"streamlit.cursor" [label="<f0> SourceModule| <f1> streamlit.cursor",shape="record"];
	"streamlit.type_util" [label="<f0> SourceModule| <f1> streamlit.type_util",shape="record"];
	"plotly" [label="<f0> MissingModule| <f1> plotly",shape="record"];
	"streamlit.file_util" [label="<f0> SourceModule| <f1> streamlit.file_util",shape="record"];
	"streamlit.config" [label="<f0> SourceModule| <f1> streamlit.config",shape="record"];
	"streamlit.cli_util" [label="<f0> SourceModule| <f1> streamlit.cli_util",shape="record"];
	"streamlit.errors" [label="<f0> SourceModule| <f1> streamlit.errors",shape="record"];
	"streamlit.util" [label="<f0> SourceModule| <f1> streamlit.util",shape="record"];
	"streamlit.env_util" [label="<f0> SourceModule| <f1> streamlit.env_util",shape="record"];
	"langchain_community.chat_message_histories.sql" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.sql",shape="record"];
	"langchain_community.chat_message_histories.singlestoredb" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.singlestoredb",shape="record"];
	"langchain_community.chat_message_histories.rocksetdb" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.rocksetdb",shape="record"];
	"langchain_community.chat_message_histories.redis" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.redis",shape="record"];
	"langchain_community.chat_message_histories.postgres" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.postgres",shape="record"];
	"'psycopg.rows'" [label="<f0> MissingModule| <f1> 'psycopg.rows'",shape="record"];
	"langchain_community.chat_message_histories.neo4j" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.neo4j",shape="record"];
	"langchain_community.chat_message_histories.mongodb" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.mongodb",shape="record"];
	"langchain_community.chat_message_histories.momento" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.momento",shape="record"];
	"langchain_community.chat_message_histories.kafka" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.kafka",shape="record"];
	"'confluent_kafka.admin'" [label="<f0> MissingModule| <f1> 'confluent_kafka.admin'",shape="record"];
	"confluent_kafka" [label="<f0> MissingModule| <f1> confluent_kafka",shape="record"];
	"langchain_community.chat_message_histories.in_memory" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.in_memory",shape="record"];
	"langchain_community.chat_message_histories.firestore" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.firestore",shape="record"];
	"firebase_admin" [label="<f0> MissingModule| <f1> firebase_admin",shape="record"];
	"'google.cloud.firestore'" [label="<f0> MissingModule| <f1> 'google.cloud.firestore'",shape="record"];
	"langchain_community.chat_message_histories.file" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.file",shape="record"];
	"langchain_community.chat_message_histories.elasticsearch" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.elasticsearch",shape="record"];
	"langchain_community.chat_message_histories.dynamodb" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.dynamodb",shape="record"];
	"'dynamodb_encryption_sdk.structures'" [label="<f0> MissingModule| <f1> 'dynamodb_encryption_sdk.structures'",shape="record"];
	"'dynamodb_encryption_sdk.material_providers'" [label="<f0> MissingModule| <f1> 'dynamodb_encryption_sdk.material_providers'",shape="record"];
	"'dynamodb_encryption_sdk.identifiers'" [label="<f0> MissingModule| <f1> 'dynamodb_encryption_sdk.identifiers'",shape="record"];
	"dynamodb_encryption_sdk" [label="<f0> MissingModule| <f1> dynamodb_encryption_sdk",shape="record"];
	"langchain_community.chat_message_histories.cosmos_db" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.cosmos_db",shape="record"];
	"langchain_community.chat_message_histories.cassandra" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.cassandra",shape="record"];
	"langchain_community.chat_message_histories.astradb" [label="<f0> SourceModule| <f1> langchain_community.chat_message_histories.astradb",shape="record"];
	"langchain.memory.vectorstore_token_buffer_memory" [label="<f0> SourceModule| <f1> langchain.memory.vectorstore_token_buffer_memory",shape="record"];
	"langchain.text_splitter" [label="<f0> SourceModule| <f1> langchain.text_splitter",shape="record"];
	"langchain_text_splitters.spacy" [label="<f0> SourceModule| <f1> langchain_text_splitters.spacy",shape="record"];
	"'spacy.lang'" [label="<f0> MissingModule| <f1> 'spacy.lang'",shape="record"];
	"langchain_text_splitters.sentence_transformers" [label="<f0> SourceModule| <f1> langchain_text_splitters.sentence_transformers",shape="record"];
	"langchain_text_splitters.python" [label="<f0> SourceModule| <f1> langchain_text_splitters.python",shape="record"];
	"langchain_text_splitters.nltk" [label="<f0> SourceModule| <f1> langchain_text_splitters.nltk",shape="record"];
	"'nltk.tokenize'" [label="<f0> MissingModule| <f1> 'nltk.tokenize'",shape="record"];
	"langchain_text_splitters.markdown" [label="<f0> SourceModule| <f1> langchain_text_splitters.markdown",shape="record"];
	"langchain_text_splitters.latex" [label="<f0> SourceModule| <f1> langchain_text_splitters.latex",shape="record"];
	"langchain_text_splitters.konlpy" [label="<f0> SourceModule| <f1> langchain_text_splitters.konlpy",shape="record"];
	"konlpy" [label="<f0> MissingModule| <f1> konlpy",shape="record"];
	"langchain_text_splitters.json" [label="<f0> SourceModule| <f1> langchain_text_splitters.json",shape="record"];
	"langchain_text_splitters.html" [label="<f0> SourceModule| <f1> langchain_text_splitters.html",shape="record"];
	"'nltk.corpus'" [label="<f0> MissingModule| <f1> 'nltk.corpus'",shape="record"];
	"nltk" [label="<f0> MissingModule| <f1> nltk",shape="record"];
	"langchain_text_splitters.character" [label="<f0> SourceModule| <f1> langchain_text_splitters.character",shape="record"];
	"langchain_text_splitters.base" [label="<f0> SourceModule| <f1> langchain_text_splitters.base",shape="record"];
	"langchain.memory.vectorstore" [label="<f0> SourceModule| <f1> langchain.memory.vectorstore",shape="record"];
	"langchain.memory.token_buffer" [label="<f0> SourceModule| <f1> langchain.memory.token_buffer",shape="record"];
	"langchain.memory.summary_buffer" [label="<f0> SourceModule| <f1> langchain.memory.summary_buffer",shape="record"];
	"langchain.memory.summary" [label="<f0> SourceModule| <f1> langchain.memory.summary",shape="record"];
	"langchain.memory.simple" [label="<f0> SourceModule| <f1> langchain.memory.simple",shape="record"];
	"langchain.memory.readonly" [label="<f0> SourceModule| <f1> langchain.memory.readonly",shape="record"];
	"langchain.memory.entity" [label="<f0> SourceModule| <f1> langchain.memory.entity",shape="record"];
	"langchain.memory.combined" [label="<f0> SourceModule| <f1> langchain.memory.combined",shape="record"];
	"langchain.memory.buffer_window" [label="<f0> SourceModule| <f1> langchain.memory.buffer_window",shape="record"];
	"langchain.memory.buffer" [label="<f0> SourceModule| <f1> langchain.memory.buffer",shape="record"];
	"langchain.memory.chat_memory" [label="<f0> SourceModule| <f1> langchain.memory.chat_memory",shape="record"];
	"langchain_community.agent_toolkits.powerbi.prompt" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.powerbi.prompt",shape="record"];
	"langchain_community.agent_toolkits.powerbi.base" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.powerbi.base",shape="record"];
	"langchain_community.agent_toolkits.openapi.base" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.openapi.base",shape="record"];
	"langchain_community.agent_toolkits.load_tools" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.load_tools",shape="record"];
	"langchain.chains.api.base" [label="<f0> SourceModule| <f1> langchain.chains.api.base",shape="record"];
	"langchain.chains.api.prompt" [label="<f0> SourceModule| <f1> langchain.chains.api.prompt",shape="record"];
	"langchain.chains.llm_math.base" [label="<f0> SourceModule| <f1> langchain.chains.llm_math.base",shape="record"];
	"langchain.chains.llm_math" [label="<f0> Package| <f1> langchain.chains.llm_math",shape="record"];
	"langchain.chains.llm_math.prompt" [label="<f0> SourceModule| <f1> langchain.chains.llm_math.prompt",shape="record"];
	"langchain_community.utilities.dataforseo_api_search" [label="<f0> SourceModule| <f1> langchain_community.utilities.dataforseo_api_search",shape="record"];
	"langchain_community.utilities.dalle_image_generator" [label="<f0> SourceModule| <f1> langchain_community.utilities.dalle_image_generator",shape="record"];
	"langchain_community.tools.memorize.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.memorize.tool",shape="record"];
	"langchain_community.tools.memorize" [label="<f0> Package| <f1> langchain_community.tools.memorize",shape="record"];
	"langchain_community.tools.google_trends.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_trends.tool",shape="record"];
	"langchain_community.tools.google_trends" [label="<f0> Package| <f1> langchain_community.tools.google_trends",shape="record"];
	"langchain_community.tools.google_scholar.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_scholar.tool",shape="record"];
	"langchain_community.tools.google_scholar" [label="<f0> Package| <f1> langchain_community.tools.google_scholar",shape="record"];
	"langchain_community.tools.google_lens.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_lens.tool",shape="record"];
	"langchain_community.tools.google_lens" [label="<f0> Package| <f1> langchain_community.tools.google_lens",shape="record"];
	"langchain_community.tools.google_jobs.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_jobs.tool",shape="record"];
	"langchain_community.tools.google_jobs" [label="<f0> Package| <f1> langchain_community.tools.google_jobs",shape="record"];
	"langchain_community.tools.google_finance.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.google_finance.tool",shape="record"];
	"langchain_community.tools.google_finance" [label="<f0> Package| <f1> langchain_community.tools.google_finance",shape="record"];
	"langchain_community.tools.golden_query.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.golden_query.tool",shape="record"];
	"langchain_community.tools.golden_query" [label="<f0> Package| <f1> langchain_community.tools.golden_query",shape="record"];
	"langchain_community.tools.dataforseo_api_search" [label="<f0> Package| <f1> langchain_community.tools.dataforseo_api_search",shape="record"];
	"langchain_community.tools.dataforseo_api_search.tool" [label="<f0> SourceModule| <f1> langchain_community.tools.dataforseo_api_search.tool",shape="record"];
	"langchain_community.agent_toolkits.json.base" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.json.base",shape="record"];
	"langchain_community.agent_toolkits.json.prompt" [label="<f0> SourceModule| <f1> langchain_community.agent_toolkits.json.prompt",shape="record"];
	"langchain.agents.xml.base" [label="<f0> SourceModule| <f1> langchain.agents.xml.base",shape="record"];
	"langchain.agents.xml" [label="<f0> Package| <f1> langchain.agents.xml",shape="record"];
	"langchain.agents.xml.prompt" [label="<f0> SourceModule| <f1> langchain.agents.xml.prompt",shape="record"];
	"langchain.agents.output_parsers" [label="<f0> Package| <f1> langchain.agents.output_parsers",shape="record"];
	"langchain.agents.output_parsers.xml" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.xml",shape="record"];
	"langchain.agents.output_parsers.tools" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.tools",shape="record"];
	"langchain.agents.output_parsers.self_ask" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.self_ask",shape="record"];
	"langchain.agents.output_parsers.react_single_input" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.react_single_input",shape="record"];
	"langchain.agents.output_parsers.react_json_single_input" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.react_json_single_input",shape="record"];
	"langchain.agents.chat.prompt" [label="<f0> SourceModule| <f1> langchain.agents.chat.prompt",shape="record"];
	"langchain.agents.chat" [label="<f0> Package| <f1> langchain.agents.chat",shape="record"];
	"langchain.agents.output_parsers.openai_functions" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.openai_functions",shape="record"];
	"langchain.agents.output_parsers.json" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.json",shape="record"];
	"langchain.agents.format_scratchpad" [label="<f0> Package| <f1> langchain.agents.format_scratchpad",shape="record"];
	"langchain.agents.format_scratchpad.xml" [label="<f0> SourceModule| <f1> langchain.agents.format_scratchpad.xml",shape="record"];
	"langchain.agents.format_scratchpad.tools" [label="<f0> SourceModule| <f1> langchain.agents.format_scratchpad.tools",shape="record"];
	"langchain.agents.format_scratchpad.openai_functions" [label="<f0> SourceModule| <f1> langchain.agents.format_scratchpad.openai_functions",shape="record"];
	"langchain.agents.format_scratchpad.log_to_messages" [label="<f0> SourceModule| <f1> langchain.agents.format_scratchpad.log_to_messages",shape="record"];
	"langchain.agents.format_scratchpad.log" [label="<f0> SourceModule| <f1> langchain.agents.format_scratchpad.log",shape="record"];
	"langchain_core.tools.render" [label="<f0> SourceModule| <f1> langchain_core.tools.render",shape="record"];
	"langchain.agents.tool_calling_agent.base" [label="<f0> SourceModule| <f1> langchain.agents.tool_calling_agent.base",shape="record"];
	"langchain.agents.tool_calling_agent" [label="<f0> Package| <f1> langchain.agents.tool_calling_agent",shape="record"];
	"langchain.agents.structured_chat.base" [label="<f0> SourceModule| <f1> langchain.agents.structured_chat.base",shape="record"];
	"langchain.agents.structured_chat" [label="<f0> Package| <f1> langchain.agents.structured_chat",shape="record"];
	"langchain.tools.render" [label="<f0> SourceModule| <f1> langchain.tools.render",shape="record"];
	"langchain.tools" [label="<f0> Package| <f1> langchain.tools",shape="record"];
	"langchain.agents.structured_chat.prompt" [label="<f0> SourceModule| <f1> langchain.agents.structured_chat.prompt",shape="record"];
	"langchain.agents.structured_chat.output_parser" [label="<f0> SourceModule| <f1> langchain.agents.structured_chat.output_parser",shape="record"];
	"langchain.agents.self_ask_with_search.base" [label="<f0> SourceModule| <f1> langchain.agents.self_ask_with_search.base",shape="record"];
	"langchain.agents.self_ask_with_search" [label="<f0> Package| <f1> langchain.agents.self_ask_with_search",shape="record"];
	"langchain.agents.utils" [label="<f0> SourceModule| <f1> langchain.agents.utils",shape="record"];
	"langchain.agents.self_ask_with_search.prompt" [label="<f0> SourceModule| <f1> langchain.agents.self_ask_with_search.prompt",shape="record"];
	"langchain.agents.self_ask_with_search.output_parser" [label="<f0> SourceModule| <f1> langchain.agents.self_ask_with_search.output_parser",shape="record"];
	"langchain.agents.react.base" [label="<f0> SourceModule| <f1> langchain.agents.react.base",shape="record"];
	"langchain.agents.react" [label="<f0> Package| <f1> langchain.agents.react",shape="record"];
	"langchain.agents.react.wiki_prompt" [label="<f0> SourceModule| <f1> langchain.agents.react.wiki_prompt",shape="record"];
	"langchain.agents.react.textworld_prompt" [label="<f0> SourceModule| <f1> langchain.agents.react.textworld_prompt",shape="record"];
	"langchain.agents.react.output_parser" [label="<f0> SourceModule| <f1> langchain.agents.react.output_parser",shape="record"];
	"langchain.agents.react.agent" [label="<f0> SourceModule| <f1> langchain.agents.react.agent",shape="record"];
	"langchain.agents.openai_tools.base" [label="<f0> SourceModule| <f1> langchain.agents.openai_tools.base",shape="record"];
	"langchain.agents.openai_tools" [label="<f0> Package| <f1> langchain.agents.openai_tools",shape="record"];
	"langchain.agents.output_parsers.openai_tools" [label="<f0> SourceModule| <f1> langchain.agents.output_parsers.openai_tools",shape="record"];
	"langchain.agents.format_scratchpad.openai_tools" [label="<f0> SourceModule| <f1> langchain.agents.format_scratchpad.openai_tools",shape="record"];
	"langchain.agents.openai_functions_multi_agent.base" [label="<f0> SourceModule| <f1> langchain.agents.openai_functions_multi_agent.base",shape="record"];
	"langchain.agents.openai_functions_multi_agent" [label="<f0> Package| <f1> langchain.agents.openai_functions_multi_agent",shape="record"];
	"langchain.agents.openai_functions_agent.base" [label="<f0> SourceModule| <f1> langchain.agents.openai_functions_agent.base",shape="record"];
	"langchain.agents.openai_functions_agent" [label="<f0> Package| <f1> langchain.agents.openai_functions_agent",shape="record"];
	"langchain.agents.mrkl.base" [label="<f0> SourceModule| <f1> langchain.agents.mrkl.base",shape="record"];
	"langchain.agents.mrkl.output_parser" [label="<f0> SourceModule| <f1> langchain.agents.mrkl.output_parser",shape="record"];
	"langchain.agents.loading" [label="<f0> SourceModule| <f1> langchain.agents.loading",shape="record"];
	"langchain.chains.loading" [label="<f0> SourceModule| <f1> langchain.chains.loading",shape="record"];
	"'langchain_experimental.sql'" [label="<f0> MissingModule| <f1> 'langchain_experimental.sql'",shape="record"];
	"'langchain_experimental.pal_chain'" [label="<f0> MissingModule| <f1> 'langchain_experimental.pal_chain'",shape="record"];
	"'langchain_experimental.llm_bash'" [label="<f0> MissingModule| <f1> 'langchain_experimental.llm_bash'",shape="record"];
	"langchain_community.llms.loading" [label="<f0> SourceModule| <f1> langchain_community.llms.loading",shape="record"];
	"langchain.chains.llm_requests" [label="<f0> SourceModule| <f1> langchain.chains.llm_requests",shape="record"];
	"langchain_community.chains.llm_requests" [label="<f0> SourceModule| <f1> langchain_community.chains.llm_requests",shape="record"];
	"langchain_community.chains.graph_qa.cypher" [label="<f0> SourceModule| <f1> langchain_community.chains.graph_qa.cypher",shape="record"];
	"langchain_community.chains.graph_qa" [label="<f0> Package| <f1> langchain_community.chains.graph_qa",shape="record"];
	"langchain_community.chains.graph_qa.prompts" [label="<f0> SourceModule| <f1> langchain_community.chains.graph_qa.prompts",shape="record"];
	"langchain_community.chains.graph_qa.cypher_utils" [label="<f0> SourceModule| <f1> langchain_community.chains.graph_qa.cypher_utils",shape="record"];
	"langchain.chains.qa_with_sources.vector_db" [label="<f0> SourceModule| <f1> langchain.chains.qa_with_sources.vector_db",shape="record"];
	"langchain.chains.llm_checker.base" [label="<f0> SourceModule| <f1> langchain.chains.llm_checker.base",shape="record"];
	"langchain.chains.llm_checker" [label="<f0> Package| <f1> langchain.chains.llm_checker",shape="record"];
	"langchain.chains.sequential" [label="<f0> SourceModule| <f1> langchain.chains.sequential",shape="record"];
	"langchain.chains.llm_checker.prompt" [label="<f0> SourceModule| <f1> langchain.chains.llm_checker.prompt",shape="record"];
	"langchain.agents.types" [label="<f0> SourceModule| <f1> langchain.agents.types",shape="record"];
	"langchain.agents.chat.base" [label="<f0> SourceModule| <f1> langchain.agents.chat.base",shape="record"];
	"langchain.agents.chat.output_parser" [label="<f0> SourceModule| <f1> langchain.agents.chat.output_parser",shape="record"];
	"langchain.agents.json_chat.base" [label="<f0> SourceModule| <f1> langchain.agents.json_chat.base",shape="record"];
	"langchain.agents.json_chat" [label="<f0> Package| <f1> langchain.agents.json_chat",shape="record"];
	"langchain.agents.json_chat.prompt" [label="<f0> SourceModule| <f1> langchain.agents.json_chat.prompt",shape="record"];
	"langchain.agents.initialize" [label="<f0> SourceModule| <f1> langchain.agents.initialize",shape="record"];
	"langchain.agents.conversational_chat.base" [label="<f0> SourceModule| <f1> langchain.agents.conversational_chat.base",shape="record"];
	"langchain.agents.conversational_chat" [label="<f0> Package| <f1> langchain.agents.conversational_chat",shape="record"];
	"langchain.agents.conversational_chat.prompt" [label="<f0> SourceModule| <f1> langchain.agents.conversational_chat.prompt",shape="record"];
	"langchain.agents.conversational_chat.output_parser" [label="<f0> SourceModule| <f1> langchain.agents.conversational_chat.output_parser",shape="record"];
	"langchain.agents.conversational.base" [label="<f0> SourceModule| <f1> langchain.agents.conversational.base",shape="record"];
	"langchain.agents.conversational" [label="<f0> Package| <f1> langchain.agents.conversational",shape="record"];
	"langchain.agents.conversational.prompt" [label="<f0> SourceModule| <f1> langchain.agents.conversational.prompt",shape="record"];
	"langchain.agents.conversational.output_parser" [label="<f0> SourceModule| <f1> langchain.agents.conversational.output_parser",shape="record"];
	"langchain.agents.agent_types" [label="<f0> SourceModule| <f1> langchain.agents.agent_types",shape="record"];
	"langchain.agents.agent_toolkits.vectorstore.base" [label="<f0> SourceModule| <f1> langchain.agents.agent_toolkits.vectorstore.base",shape="record"];
	"langchain.agents.agent_toolkits.vectorstore" [label="<f0> Package| <f1> langchain.agents.agent_toolkits.vectorstore",shape="record"];
	"langchain.agents.agent_toolkits" [label="<f0> Package| <f1> langchain.agents.agent_toolkits",shape="record"];
	"langchain.agents.agent_toolkits.conversational_retrieval.openai_functions" [label="<f0> SourceModule| <f1> langchain.agents.agent_toolkits.conversational_retrieval.openai_functions",shape="record"];
	"langchain.agents.agent_toolkits.conversational_retrieval" [label="<f0> Package| <f1> langchain.agents.agent_toolkits.conversational_retrieval",shape="record"];
	"langchain.agents.openai_functions_agent.agent_token_buffer_memory" [label="<f0> SourceModule| <f1> langchain.agents.openai_functions_agent.agent_token_buffer_memory",shape="record"];
	"langchain_core.tools.retriever" [label="<f0> SourceModule| <f1> langchain_core.tools.retriever",shape="record"];
	"langchain.agents.agent_toolkits.vectorstore.toolkit" [label="<f0> SourceModule| <f1> langchain.agents.agent_toolkits.vectorstore.toolkit",shape="record"];
	"langchain.agents.agent_toolkits.vectorstore.prompt" [label="<f0> SourceModule| <f1> langchain.agents.agent_toolkits.vectorstore.prompt",shape="record"];
	"langchain.agents.agent_iterator" [label="<f0> SourceModule| <f1> langchain.agents.agent_iterator",shape="record"];
	"langchain.utilities.asyncio" [label="<f0> SourceModule| <f1> langchain.utilities.asyncio",shape="record"];
	"langchain.utilities" [label="<f0> Package| <f1> langchain.utilities",shape="record"];
	"langchain.agents.agent" [label="<f0> SourceModule| <f1> langchain.agents.agent",shape="record"];
	"langchain.agents.tools" [label="<f0> SourceModule| <f1> langchain.agents.tools",shape="record"];
	"langchain_core._api.path" [label="<f0> SourceModule| <f1> langchain_core._api.path",shape="record"];
	"langchain._api.interactive_env" [label="<f0> SourceModule| <f1> langchain._api.interactive_env",shape="record"];
	"langsmith.env._git" [label="<f0> SourceModule| <f1> langsmith.env._git",shape="record"];
	"langsmith.env" [label="<f0> Package| <f1> langsmith.env",shape="record"];
	"langsmith.run_trees" [label="<f0> SourceModule| <f1> langsmith.run_trees",shape="record"];
	"langsmith.client" [label="<f0> SourceModule| <f1> langsmith.client",shape="record"];
	"langchain_anthropic" [label="<f0> MissingModule| <f1> langchain_anthropic",shape="record"];
	"langchain_core.prompts.structured" [label="<f0> SourceModule| <f1> langchain_core.prompts.structured",shape="record"];
	"langchain.smith" [label="<f0> Package| <f1> langchain.smith",shape="record"];
	"langchain.smith.evaluation" [label="<f0> Package| <f1> langchain.smith.evaluation",shape="record"];
	"langchain.smith.evaluation.string_run_evaluator" [label="<f0> SourceModule| <f1> langchain.smith.evaluation.string_run_evaluator",shape="record"];
	"langchain.evaluation.schema" [label="<f0> SourceModule| <f1> langchain.evaluation.schema",shape="record"];
	"langchain.evaluation" [label="<f0> Package| <f1> langchain.evaluation",shape="record"];
	"langchain.evaluation.string_distance" [label="<f0> Package| <f1> langchain.evaluation.string_distance",shape="record"];
	"langchain.evaluation.string_distance.base" [label="<f0> SourceModule| <f1> langchain.evaluation.string_distance.base",shape="record"];
	"rapidfuzz" [label="<f0> MissingModule| <f1> rapidfuzz",shape="record"];
	"langchain.evaluation.scoring" [label="<f0> Package| <f1> langchain.evaluation.scoring",shape="record"];
	"langchain.evaluation.scoring.eval_chain" [label="<f0> SourceModule| <f1> langchain.evaluation.scoring.eval_chain",shape="record"];
	"langchain.evaluation.scoring.prompt" [label="<f0> SourceModule| <f1> langchain.evaluation.scoring.prompt",shape="record"];
	"langchain.evaluation.criteria.eval_chain" [label="<f0> SourceModule| <f1> langchain.evaluation.criteria.eval_chain",shape="record"];
	"langchain.evaluation.criteria.prompt" [label="<f0> SourceModule| <f1> langchain.evaluation.criteria.prompt",shape="record"];
	"langchain.chains.constitutional_ai.models" [label="<f0> SourceModule| <f1> langchain.chains.constitutional_ai.models",shape="record"];
	"langchain.chains.constitutional_ai" [label="<f0> Package| <f1> langchain.chains.constitutional_ai",shape="record"];
	"langchain.evaluation.regex_match.base" [label="<f0> SourceModule| <f1> langchain.evaluation.regex_match.base",shape="record"];
	"langchain.evaluation.regex_match" [label="<f0> Package| <f1> langchain.evaluation.regex_match",shape="record"];
	"langchain.evaluation.qa" [label="<f0> Package| <f1> langchain.evaluation.qa",shape="record"];
	"langchain.evaluation.qa.generate_chain" [label="<f0> SourceModule| <f1> langchain.evaluation.qa.generate_chain",shape="record"];
	"langchain.evaluation.qa.generate_prompt" [label="<f0> SourceModule| <f1> langchain.evaluation.qa.generate_prompt",shape="record"];
	"langchain.evaluation.qa.eval_chain" [label="<f0> SourceModule| <f1> langchain.evaluation.qa.eval_chain",shape="record"];
	"langchain.evaluation.qa.eval_prompt" [label="<f0> SourceModule| <f1> langchain.evaluation.qa.eval_prompt",shape="record"];
	"langchain.evaluation.parsing.json_schema" [label="<f0> SourceModule| <f1> langchain.evaluation.parsing.json_schema",shape="record"];
	"langchain.evaluation.parsing" [label="<f0> Package| <f1> langchain.evaluation.parsing",shape="record"];
	"langchain.evaluation.parsing.json_distance" [label="<f0> SourceModule| <f1> langchain.evaluation.parsing.json_distance",shape="record"];
	"langchain.evaluation.parsing.base" [label="<f0> SourceModule| <f1> langchain.evaluation.parsing.base",shape="record"];
	"langchain.evaluation.loading" [label="<f0> SourceModule| <f1> langchain.evaluation.loading",shape="record"];
	"langchain.evaluation.embedding_distance.base" [label="<f0> SourceModule| <f1> langchain.evaluation.embedding_distance.base",shape="record"];
	"langchain.evaluation.comparison.eval_chain" [label="<f0> SourceModule| <f1> langchain.evaluation.comparison.eval_chain",shape="record"];
	"langchain.evaluation.comparison.prompt" [label="<f0> SourceModule| <f1> langchain.evaluation.comparison.prompt",shape="record"];
	"langchain.evaluation.agents.trajectory_eval_chain" [label="<f0> SourceModule| <f1> langchain.evaluation.agents.trajectory_eval_chain",shape="record"];
	"langchain.evaluation.agents.trajectory_eval_prompt" [label="<f0> SourceModule| <f1> langchain.evaluation.agents.trajectory_eval_prompt",shape="record"];
	"langchain.evaluation.exact_match.base" [label="<f0> SourceModule| <f1> langchain.evaluation.exact_match.base",shape="record"];
	"langchain.evaluation.exact_match" [label="<f0> Package| <f1> langchain.evaluation.exact_match",shape="record"];
	"langchain.evaluation.embedding_distance" [label="<f0> Package| <f1> langchain.evaluation.embedding_distance",shape="record"];
	"langchain.evaluation.criteria" [label="<f0> Package| <f1> langchain.evaluation.criteria",shape="record"];
	"langchain.evaluation.comparison" [label="<f0> Package| <f1> langchain.evaluation.comparison",shape="record"];
	"langchain.evaluation.agents" [label="<f0> Package| <f1> langchain.evaluation.agents",shape="record"];
	"langchain.smith.evaluation.runner_utils" [label="<f0> SourceModule| <f1> langchain.smith.evaluation.runner_utils",shape="record"];
	"langchain.smith.evaluation.progress" [label="<f0> SourceModule| <f1> langchain.smith.evaluation.progress",shape="record"];
	"langchain.smith.evaluation.name_generation" [label="<f0> SourceModule| <f1> langchain.smith.evaluation.name_generation",shape="record"];
	"langchain.smith.evaluation.config" [label="<f0> SourceModule| <f1> langchain.smith.evaluation.config",shape="record"];
	"langsmith_pyo3" [label="<f0> MissingModule| <f1> langsmith_pyo3",shape="record"];
	"langsmith.evaluation._runner" [label="<f0> SourceModule| <f1> langsmith.evaluation._runner",shape="record"];
	"langsmith.evaluation._name_generation" [label="<f0> SourceModule| <f1> langsmith.evaluation._name_generation",shape="record"];
	"langsmith.evaluation.integrations" [label="<f0> Package| <f1> langsmith.evaluation.integrations",shape="record"];
	"langsmith.evaluation.integrations._langchain" [label="<f0> SourceModule| <f1> langsmith.evaluation.integrations._langchain",shape="record"];
	"langsmith.evaluation._arunner" [label="<f0> SourceModule| <f1> langsmith.evaluation._arunner",shape="record"];
	"langsmith.evaluation" [label="<f0> Package| <f1> langsmith.evaluation",shape="record"];
	"langsmith.evaluation.string_evaluator" [label="<f0> SourceModule| <f1> langsmith.evaluation.string_evaluator",shape="record"];
	"langsmith._internal.otel._otel_exporter" [label="<f0> SourceModule| <f1> langsmith._internal.otel._otel_exporter",shape="record"];
	"langsmith._internal.otel" [label="<f0> NamespacePackage| <f1> langsmith._internal.otel",shape="record"];
	"'opentelemetry.context'" [label="<f0> MissingModule| <f1> 'opentelemetry.context'",shape="record"];
	"langsmith._internal.otel._otel_client" [label="<f0> SourceModule| <f1> langsmith._internal.otel._otel_client",shape="record"];
	"langsmith._internal._serde" [label="<f0> SourceModule| <f1> langsmith._internal._serde",shape="record"];
	"langsmith._internal._operations" [label="<f0> SourceModule| <f1> langsmith._internal._operations",shape="record"];
	"langsmith._internal._multipart" [label="<f0> SourceModule| <f1> langsmith._internal._multipart",shape="record"];
	"langsmith._internal._constants" [label="<f0> SourceModule| <f1> langsmith._internal._constants",shape="record"];
	"langsmith._internal._compressed_traces" [label="<f0> SourceModule| <f1> langsmith._internal._compressed_traces",shape="record"];
	"langsmith._internal._beta_decorator" [label="<f0> SourceModule| <f1> langsmith._internal._beta_decorator",shape="record"];
	"langsmith._internal._background_thread" [label="<f0> SourceModule| <f1> langsmith._internal._background_thread",shape="record"];
	"langsmith.evaluation.evaluator" [label="<f0> SourceModule| <f1> langsmith.evaluation.evaluator",shape="record"];
	"langsmith" [label="<f0> Package| <f1> langsmith",shape="record"];
	"langsmith.testing._internal" [label="<f0> SourceModule| <f1> langsmith.testing._internal",shape="record"];
	"langsmith.testing" [label="<f0> Package| <f1> langsmith.testing",shape="record"];
	"langsmith.async_client" [label="<f0> SourceModule| <f1> langsmith.async_client",shape="record"];
	"langsmith._expect" [label="<f0> SourceModule| <f1> langsmith._expect",shape="record"];
	"langsmith._internal._embedding_distance" [label="<f0> SourceModule| <f1> langsmith._internal._embedding_distance",shape="record"];
	"langsmith._internal._edit_distance" [label="<f0> SourceModule| <f1> langsmith._internal._edit_distance",shape="record"];
	"langchain_core.tracers.langchain" [label="<f0> SourceModule| <f1> langchain_core.tracers.langchain",shape="record"];
	"langchain_core.tracers.base" [label="<f0> SourceModule| <f1> langchain_core.tracers.base",shape="record"];
	"langchain_core.tracers.core" [label="<f0> SourceModule| <f1> langchain_core.tracers.core",shape="record"];
	"langchain_core.tracers.event_stream" [label="<f0> SourceModule| <f1> langchain_core.tracers.event_stream",shape="record"];
	"langchain_core.tracers.memory_stream" [label="<f0> SourceModule| <f1> langchain_core.tracers.memory_stream",shape="record"];
	"langchain_core.runnables.passthrough" [label="<f0> SourceModule| <f1> langchain_core.runnables.passthrough",shape="record"];
	"langchain_core.tracers.schemas" [label="<f0> SourceModule| <f1> langchain_core.tracers.schemas",shape="record"];
	"langchain_core.tracers.root_listeners" [label="<f0> SourceModule| <f1> langchain_core.tracers.root_listeners",shape="record"];
	"langchain_core.tracers.log_stream" [label="<f0> SourceModule| <f1> langchain_core.tracers.log_stream",shape="record"];
	"langchain_core.tools" [label="<f0> Package| <f1> langchain_core.tools",shape="record"];
	"langchain_core.runnables.schema" [label="<f0> SourceModule| <f1> langchain_core.runnables.schema",shape="record"];
	"langchain_core.runnables.retry" [label="<f0> SourceModule| <f1> langchain_core.runnables.retry",shape="record"];
	"langchain_core.runnables.fallbacks" [label="<f0> SourceModule| <f1> langchain_core.runnables.fallbacks",shape="record"];
	"langchain_core.prompts.base" [label="<f0> SourceModule| <f1> langchain_core.prompts.base",shape="record"];
	"langchain_core.callbacks.manager" [label="<f0> SourceModule| <f1> langchain_core.callbacks.manager",shape="record"];
	"langchain_core.utils.pydantic" [label="<f0> SourceModule| <f1> langchain_core.utils.pydantic",shape="record"];
	"langchain_core.utils.iter" [label="<f0> SourceModule| <f1> langchain_core.utils.iter",shape="record"];
	"langchain_core.utils.aiter" [label="<f0> SourceModule| <f1> langchain_core.utils.aiter",shape="record"];
	"langchain_core.runnables.utils" [label="<f0> SourceModule| <f1> langchain_core.runnables.utils",shape="record"];
	"langchain_core.runnables.graph" [label="<f0> SourceModule| <f1> langchain_core.runnables.graph",shape="record"];
	"langchain_core.runnables.graph_mermaid" [label="<f0> SourceModule| <f1> langchain_core.runnables.graph_mermaid",shape="record"];
	"pyppeteer" [label="<f0> MissingModule| <f1> pyppeteer",shape="record"];
	"langchain_core.runnables.graph_png" [label="<f0> SourceModule| <f1> langchain_core.runnables.graph_png",shape="record"];
	"langchain_core.runnables.graph_ascii" [label="<f0> SourceModule| <f1> langchain_core.runnables.graph_ascii",shape="record"];
	"'grandalf.routing'" [label="<f0> MissingModule| <f1> 'grandalf.routing'",shape="record"];
	"'grandalf.layouts'" [label="<f0> MissingModule| <f1> 'grandalf.layouts'",shape="record"];
	"grandalf" [label="<f0> MissingModule| <f1> grandalf",shape="record"];
	"langchain_core.runnables.config" [label="<f0> SourceModule| <f1> langchain_core.runnables.config",shape="record"];
	"langchain_core.runnables" [label="<f0> Package| <f1> langchain_core.runnables",shape="record"];
	"langchain_core.runnables.router" [label="<f0> SourceModule| <f1> langchain_core.runnables.router",shape="record"];
	"langchain_core.runnables.history" [label="<f0> SourceModule| <f1> langchain_core.runnables.history",shape="record"];
	"langchain_core.runnables.branch" [label="<f0> SourceModule| <f1> langchain_core.runnables.branch",shape="record"];
	"langchain_core.load.serializable" [label="<f0> SourceModule| <f1> langchain_core.load.serializable",shape="record"];
	"langchain_core._api.beta_decorator" [label="<f0> SourceModule| <f1> langchain_core._api.beta_decorator",shape="record"];
	"langchain_core._api" [label="<f0> Package| <f1> langchain_core._api",shape="record"];
	"pydantic.BaseModel" [label="<f0> MissingModule| <f1> pydantic.BaseModel",shape="record"];
	"langchain_core.prompt_values" [label="<f0> SourceModule| <f1> langchain_core.prompt_values",shape="record"];
	"langchain_core.language_models" [label="<f0> Package| <f1> langchain_core.language_models",shape="record"];
	"langchain_core.language_models.fake_chat_models" [label="<f0> SourceModule| <f1> langchain_core.language_models.fake_chat_models",shape="record"];
	"langchain_core.language_models.fake" [label="<f0> SourceModule| <f1> langchain_core.language_models.fake",shape="record"];
	"langchain_text_splitters" [label="<f0> Package| <f1> langchain_text_splitters",shape="record"];
	"langchain_text_splitters.jsx" [label="<f0> SourceModule| <f1> langchain_text_splitters.jsx",shape="record"];
	"langchain_core.exceptions" [label="<f0> SourceModule| <f1> langchain_core.exceptions",shape="record"];
	"pydantic" [label="<f0> Package| <f1> pydantic",shape="record"];
	"pydantic.validators" [label="<f0> SourceModule| <f1> pydantic.validators",shape="record"];
	"pydantic.v1.mypy" [label="<f0> SourceModule| <f1> pydantic.v1.mypy",shape="record"];
	"'mypy.version'" [label="<f0> MissingModule| <f1> 'mypy.version'",shape="record"];
	"'mypy.util'" [label="<f0> MissingModule| <f1> 'mypy.util'",shape="record"];
	"'mypy.typevars'" [label="<f0> MissingModule| <f1> 'mypy.typevars'",shape="record"];
	"'mypy.types'" [label="<f0> MissingModule| <f1> 'mypy.types'",shape="record"];
	"'mypy.server'" [label="<f0> MissingModule| <f1> 'mypy.server'",shape="record"];
	"'mypy.semanal'" [label="<f0> MissingModule| <f1> 'mypy.semanal'",shape="record"];
	"'mypy.plugins'" [label="<f0> MissingModule| <f1> 'mypy.plugins'",shape="record"];
	"'mypy.plugin'" [label="<f0> MissingModule| <f1> 'mypy.plugin'",shape="record"];
	"'mypy.options'" [label="<f0> MissingModule| <f1> 'mypy.options'",shape="record"];
	"'mypy.nodes'" [label="<f0> MissingModule| <f1> 'mypy.nodes'",shape="record"];
	"'mypy.errorcodes'" [label="<f0> MissingModule| <f1> 'mypy.errorcodes'",shape="record"];
	"pydantic.v1.generics" [label="<f0> SourceModule| <f1> pydantic.v1.generics",shape="record"];
	"pydantic.v1._hypothesis_plugin" [label="<f0> SourceModule| <f1> pydantic.v1._hypothesis_plugin",shape="record"];
	"hypothesis" [label="<f0> MissingModule| <f1> hypothesis",shape="record"];
	"pydantic.utils" [label="<f0> SourceModule| <f1> pydantic.utils",shape="record"];
	"pydantic.tools" [label="<f0> SourceModule| <f1> pydantic.tools",shape="record"];
	"pydantic.schema" [label="<f0> SourceModule| <f1> pydantic.schema",shape="record"];
	"pydantic.parse" [label="<f0> SourceModule| <f1> pydantic.parse",shape="record"];
	"pydantic.mypy" [label="<f0> SourceModule| <f1> pydantic.mypy",shape="record"];
	"'mypy.typeops'" [label="<f0> MissingModule| <f1> 'mypy.typeops'",shape="record"];
	"'mypy.type_visitor'" [label="<f0> MissingModule| <f1> 'mypy.type_visitor'",shape="record"];
	"'mypy.state'" [label="<f0> MissingModule| <f1> 'mypy.state'",shape="record"];
	"'mypy.expandtype'" [label="<f0> MissingModule| <f1> 'mypy.expandtype'",shape="record"];
	"mypy" [label="<f0> MissingModule| <f1> mypy",shape="record"];
	"pydantic.json" [label="<f0> SourceModule| <f1> pydantic.json",shape="record"];
	"pydantic.experimental.pipeline" [label="<f0> SourceModule| <f1> pydantic.experimental.pipeline",shape="record"];
	"pydantic.experimental.arguments_schema" [label="<f0> SourceModule| <f1> pydantic.experimental.arguments_schema",shape="record"];
	"pydantic.experimental" [label="<f0> Package| <f1> pydantic.experimental",shape="record"];
	"pydantic.error_wrappers" [label="<f0> SourceModule| <f1> pydantic.error_wrappers",shape="record"];
	"pydantic.env_settings" [label="<f0> SourceModule| <f1> pydantic.env_settings",shape="record"];
	"pydantic.deprecated.decorator" [label="<f0> SourceModule| <f1> pydantic.deprecated.decorator",shape="record"];
	"pydantic.decorator" [label="<f0> SourceModule| <f1> pydantic.decorator",shape="record"];
	"pydantic.class_validators" [label="<f0> SourceModule| <f1> pydantic.class_validators",shape="record"];
	"pydantic.alias_generators" [label="<f0> SourceModule| <f1> pydantic.alias_generators",shape="record"];
	"pydantic.deprecated.tools" [label="<f0> SourceModule| <f1> pydantic.deprecated.tools",shape="record"];
	"pydantic.deprecated.config" [label="<f0> SourceModule| <f1> pydantic.deprecated.config",shape="record"];
	"pydantic.deprecated.class_validators" [label="<f0> SourceModule| <f1> pydantic.deprecated.class_validators",shape="record"];
	"pydantic.validate_call_decorator" [label="<f0> SourceModule| <f1> pydantic.validate_call_decorator",shape="record"];
	"pydantic.functional_serializers" [label="<f0> SourceModule| <f1> pydantic.functional_serializers",shape="record"];
	"langchain_core.messages.tool" [label="<f0> SourceModule| <f1> langchain_core.messages.tool",shape="record"];
	"langchain_core.messages.system" [label="<f0> SourceModule| <f1> langchain_core.messages.system",shape="record"];
	"langchain_core.messages.modifier" [label="<f0> SourceModule| <f1> langchain_core.messages.modifier",shape="record"];
	"langchain_core.messages.human" [label="<f0> SourceModule| <f1> langchain_core.messages.human",shape="record"];
	"langchain_core.messages.function" [label="<f0> SourceModule| <f1> langchain_core.messages.function",shape="record"];
	"langchain_core.messages.content_blocks" [label="<f0> SourceModule| <f1> langchain_core.messages.content_blocks",shape="record"];
	"langchain_core.messages.chat" [label="<f0> SourceModule| <f1> langchain_core.messages.chat",shape="record"];
	"langchain_core.messages.base" [label="<f0> SourceModule| <f1> langchain_core.messages.base",shape="record"];
	"langchain_core.messages.ai" [label="<f0> SourceModule| <f1> langchain_core.messages.ai",shape="record"];
	"langchain_core.utils.usage" [label="<f0> SourceModule| <f1> langchain_core.utils.usage",shape="record"];
	"langchain_core" [label="<f0> Package| <f1> langchain_core",shape="record"];
	"langchain_core.version" [label="<f0> SourceModule| <f1> langchain_core.version",shape="record"];
	"langchain_core._import_utils" [label="<f0> SourceModule| <f1> langchain_core._import_utils",shape="record"];
	"langchain_google_genai" [label="<f0> Package| <f1> langchain_google_genai",shape="record"];
	"langchain_google_genai.llms" [label="<f0> SourceModule| <f1> langchain_google_genai.llms",shape="record"];
	"langchain_google_genai._common" [label="<f0> SourceModule| <f1> langchain_google_genai._common",shape="record"];
	"langchain_google_genai.google_vector_store" [label="<f0> SourceModule| <f1> langchain_google_genai.google_vector_store",shape="record"];
	"google.ai.generativelanguage" [label="<f0> Package| <f1> google.ai.generativelanguage",shape="record"];
	"google.ai.generativelanguage_v1beta.types.tuned_model" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.tuned_model",shape="record"];
	"google.ai.generativelanguage_v1beta.types" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.types",shape="record"];
	"google.ai.generativelanguage_v1beta" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.text_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.retriever_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.pagers" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.pagers",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.prediction_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.permission_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.pagers" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.pagers",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.model_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.pagers" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.pagers",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.generative_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.file_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.pagers" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.pagers",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.discuss_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.cache_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.pagers" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.pagers",shape="record"];
	"google.ai.generativelanguage_v1beta.gapic_version" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.gapic_version",shape="record"];
	"google.ai.generativelanguage_v1beta.types.text_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.text_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.safety" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.safety",shape="record"];
	"google.ai.generativelanguage_v1beta.types.retriever_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.retriever_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.retriever" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.retriever",shape="record"];
	"google.ai.generativelanguage_v1beta.types.prediction_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.prediction_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.permission_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.permission_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.permission" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.permission",shape="record"];
	"google.ai.generativelanguage_v1beta.types.model_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.model_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.model" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.model",shape="record"];
	"google.ai.generativelanguage_v1beta.types.generative_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.generative_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.file_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.file_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.file" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.file",shape="record"];
	"google.ai.generativelanguage_v1beta.types.discuss_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.discuss_service",shape="record"];
	"google.ai.generativelanguage_v1beta.types.content" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.content",shape="record"];
	"google.ai.generativelanguage_v1beta.types.citation" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.citation",shape="record"];
	"google.ai.generativelanguage_v1beta.types.cached_content" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.cached_content",shape="record"];
	"google.ai.generativelanguage_v1beta.types.cache_service" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.types.cache_service",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.text_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.text_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.text_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.text_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.text_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.text_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.text_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.text_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.retriever_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.retriever_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.prediction_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.prediction_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.permission_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.permission_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.permission_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.model_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.model_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.model_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.generative_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.generative_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.generative_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.generative_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.generative_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.generative_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.generative_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.file_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.file_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.file_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.discuss_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.discuss_service.async_client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.client",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.transports.rest",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports" [label="<f0> Package| <f1> google.ai.generativelanguage_v1beta.services.cache_service.transports",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest_base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.transports.rest_base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.base" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.transports.base",shape="record"];
	"google.ai.generativelanguage_v1beta.services.cache_service.async_client" [label="<f0> SourceModule| <f1> google.ai.generativelanguage_v1beta.services.cache_service.async_client",shape="record"];
	"google.ai.generativelanguage.gapic_version" [label="<f0> SourceModule| <f1> google.ai.generativelanguage.gapic_version",shape="record"];
	"google.ai" [label="<f0> NamespacePackage| <f1> google.ai",shape="record"];
	"langchain_google_genai.genai_aqa" [label="<f0> SourceModule| <f1> langchain_google_genai.genai_aqa",shape="record"];
	"langchain_google_genai.embeddings" [label="<f0> SourceModule| <f1> langchain_google_genai.embeddings",shape="record"];
	"langchain_google_genai.chat_models" [label="<f0> SourceModule| <f1> langchain_google_genai.chat_models",shape="record"];
	"langchain_google_genai._image_utils" [label="<f0> SourceModule| <f1> langchain_google_genai._image_utils",shape="record"];
	"langchain_google_genai._function_utils" [label="<f0> SourceModule| <f1> langchain_google_genai._function_utils",shape="record"];
	"filetype" [label="<f0> Package| <f1> filetype",shape="record"];
	"filetype.match" [label="<f0> SourceModule| <f1> filetype.match",shape="record"];
	"filetype.utils" [label="<f0> SourceModule| <f1> filetype.utils",shape="record"];
	"filetype.types" [label="<f0> Package| <f1> filetype.types",shape="record"];
	"filetype.types.base" [label="<f0> SourceModule| <f1> filetype.types.base",shape="record"];
	"filetype.types.video" [label="<f0> SourceModule| <f1> filetype.types.video",shape="record"];
	"filetype.types.isobmff" [label="<f0> SourceModule| <f1> filetype.types.isobmff",shape="record"];
	"filetype.types.image" [label="<f0> SourceModule| <f1> filetype.types.image",shape="record"];
	"filetype.types.font" [label="<f0> SourceModule| <f1> filetype.types.font",shape="record"];
	"filetype.types.document" [label="<f0> SourceModule| <f1> filetype.types.document",shape="record"];
	"filetype.types.application" [label="<f0> SourceModule| <f1> filetype.types.application",shape="record"];
	"filetype.types.audio" [label="<f0> SourceModule| <f1> filetype.types.audio",shape="record"];
	"filetype.types.archive" [label="<f0> SourceModule| <f1> filetype.types.archive",shape="record"];
	"filetype.helpers" [label="<f0> SourceModule| <f1> filetype.helpers",shape="record"];
	"filetype.filetype" [label="<f0> SourceModule| <f1> filetype.filetype",shape="record"];
	"langchain_google_genai._genai_extension" [label="<f0> SourceModule| <f1> langchain_google_genai._genai_extension",shape="record"];
	"langchain_google_genai._enums" [label="<f0> SourceModule| <f1> langchain_google_genai._enums",shape="record"];
	"dotenv" [label="<f0> Package| <f1> dotenv",shape="record"];
	"dotenv.ipython" [label="<f0> SourceModule| <f1> dotenv.ipython",shape="record"];
	"dotenv.main" [label="<f0> SourceModule| <f1> dotenv.main",shape="record"];
	"dotenv.variables" [label="<f0> SourceModule| <f1> dotenv.variables",shape="record"];
	"dotenv.parser" [label="<f0> SourceModule| <f1> dotenv.parser",shape="record"];
	"PIL.Image" [label="<f0> SourceModule| <f1> PIL.Image",shape="record"];
	"PIL.XpmImagePlugin" [label="<f0> SourceModule| <f1> PIL.XpmImagePlugin",shape="record"];
	"PIL.XbmImagePlugin" [label="<f0> SourceModule| <f1> PIL.XbmImagePlugin",shape="record"];
	"PIL.XVThumbImagePlugin" [label="<f0> SourceModule| <f1> PIL.XVThumbImagePlugin",shape="record"];
	"PIL.WmfImagePlugin" [label="<f0> SourceModule| <f1> PIL.WmfImagePlugin",shape="record"];
	"PIL.WebPImagePlugin" [label="<f0> SourceModule| <f1> PIL.WebPImagePlugin",shape="record"];
	"PIL._webp" [label="<f0> Extension| <f1> PIL._webp",shape="record"];
	"PIL.TgaImagePlugin" [label="<f0> SourceModule| <f1> PIL.TgaImagePlugin",shape="record"];
	"PIL.SunImagePlugin" [label="<f0> SourceModule| <f1> PIL.SunImagePlugin",shape="record"];
	"PIL.SpiderImagePlugin" [label="<f0> SourceModule| <f1> PIL.SpiderImagePlugin",shape="record"];
	"PIL.ImageTk" [label="<f0> SourceModule| <f1> PIL.ImageTk",shape="record"];
	"PIL._imagingtk" [label="<f0> Extension| <f1> PIL._imagingtk",shape="record"];
	"PIL.SgiImagePlugin" [label="<f0> SourceModule| <f1> PIL.SgiImagePlugin",shape="record"];
	"PIL.QoiImagePlugin" [label="<f0> SourceModule| <f1> PIL.QoiImagePlugin",shape="record"];
	"PIL.PsdImagePlugin" [label="<f0> SourceModule| <f1> PIL.PsdImagePlugin",shape="record"];
	"PIL.PixarImagePlugin" [label="<f0> SourceModule| <f1> PIL.PixarImagePlugin",shape="record"];
	"PIL.PdfImagePlugin" [label="<f0> SourceModule| <f1> PIL.PdfImagePlugin",shape="record"];
	"PIL.PdfParser" [label="<f0> SourceModule| <f1> PIL.PdfParser",shape="record"];
	"PIL.PcxImagePlugin" [label="<f0> SourceModule| <f1> PIL.PcxImagePlugin",shape="record"];
	"PIL.PcdImagePlugin" [label="<f0> SourceModule| <f1> PIL.PcdImagePlugin",shape="record"];
	"PIL.PalmImagePlugin" [label="<f0> SourceModule| <f1> PIL.PalmImagePlugin",shape="record"];
	"PIL.MspImagePlugin" [label="<f0> SourceModule| <f1> PIL.MspImagePlugin",shape="record"];
	"PIL.MpoImagePlugin" [label="<f0> SourceModule| <f1> PIL.MpoImagePlugin",shape="record"];
	"PIL.MpegImagePlugin" [label="<f0> SourceModule| <f1> PIL.MpegImagePlugin",shape="record"];
	"PIL.MicImagePlugin" [label="<f0> SourceModule| <f1> PIL.MicImagePlugin",shape="record"];
	"olefile" [label="<f0> MissingModule| <f1> olefile",shape="record"];
	"PIL.McIdasImagePlugin" [label="<f0> SourceModule| <f1> PIL.McIdasImagePlugin",shape="record"];
	"PIL.Jpeg2KImagePlugin" [label="<f0> SourceModule| <f1> PIL.Jpeg2KImagePlugin",shape="record"];
	"PIL.IptcImagePlugin" [label="<f0> SourceModule| <f1> PIL.IptcImagePlugin",shape="record"];
	"PIL.ImtImagePlugin" [label="<f0> SourceModule| <f1> PIL.ImtImagePlugin",shape="record"];
	"PIL.ImImagePlugin" [label="<f0> SourceModule| <f1> PIL.ImImagePlugin",shape="record"];
	"PIL.IcoImagePlugin" [label="<f0> SourceModule| <f1> PIL.IcoImagePlugin",shape="record"];
	"PIL.IcnsImagePlugin" [label="<f0> SourceModule| <f1> PIL.IcnsImagePlugin",shape="record"];
	"PIL.Hdf5StubImagePlugin" [label="<f0> SourceModule| <f1> PIL.Hdf5StubImagePlugin",shape="record"];
	"PIL.GribStubImagePlugin" [label="<f0> SourceModule| <f1> PIL.GribStubImagePlugin",shape="record"];
	"PIL.GbrImagePlugin" [label="<f0> SourceModule| <f1> PIL.GbrImagePlugin",shape="record"];
	"PIL.FtexImagePlugin" [label="<f0> SourceModule| <f1> PIL.FtexImagePlugin",shape="record"];
	"PIL.FpxImagePlugin" [label="<f0> SourceModule| <f1> PIL.FpxImagePlugin",shape="record"];
	"PIL.FliImagePlugin" [label="<f0> SourceModule| <f1> PIL.FliImagePlugin",shape="record"];
	"PIL.FitsImagePlugin" [label="<f0> SourceModule| <f1> PIL.FitsImagePlugin",shape="record"];
	"PIL.EpsImagePlugin" [label="<f0> SourceModule| <f1> PIL.EpsImagePlugin",shape="record"];
	"PIL.DdsImagePlugin" [label="<f0> SourceModule| <f1> PIL.DdsImagePlugin",shape="record"];
	"PIL.DcxImagePlugin" [label="<f0> SourceModule| <f1> PIL.DcxImagePlugin",shape="record"];
	"PIL.CurImagePlugin" [label="<f0> SourceModule| <f1> PIL.CurImagePlugin",shape="record"];
	"PIL.BufrStubImagePlugin" [label="<f0> SourceModule| <f1> PIL.BufrStubImagePlugin",shape="record"];
	"PIL.BlpImagePlugin" [label="<f0> SourceModule| <f1> PIL.BlpImagePlugin",shape="record"];
	"PIL.AvifImagePlugin" [label="<f0> SourceModule| <f1> PIL.AvifImagePlugin",shape="record"];
	"PIL._avif" [label="<f0> MissingModule| <f1> PIL._avif",shape="record"];
	"PIL.ImageShow" [label="<f0> SourceModule| <f1> PIL.ImageShow",shape="record"];
	"PIL.ImageCms" [label="<f0> SourceModule| <f1> PIL.ImageCms",shape="record"];
	"PIL.ImageWin" [label="<f0> SourceModule| <f1> PIL.ImageWin",shape="record"];
	"PIL._imagingcms" [label="<f0> Extension| <f1> PIL._imagingcms",shape="record"];
	"PIL.PngImagePlugin" [label="<f0> SourceModule| <f1> PIL.PngImagePlugin",shape="record"];
	"PIL.PpmImagePlugin" [label="<f0> SourceModule| <f1> PIL.PpmImagePlugin",shape="record"];
	"PIL.JpegImagePlugin" [label="<f0> SourceModule| <f1> PIL.JpegImagePlugin",shape="record"];
	"PIL.JpegPresets" [label="<f0> SourceModule| <f1> PIL.JpegPresets",shape="record"];
	"PIL.BmpImagePlugin" [label="<f0> SourceModule| <f1> PIL.BmpImagePlugin",shape="record"];
	"PIL.ImageQt" [label="<f0> SourceModule| <f1> PIL.ImageQt",shape="record"];
	"PIL.ImageFilter" [label="<f0> SourceModule| <f1> PIL.ImageFilter",shape="record"];
	"PIL.ImageMode" [label="<f0> SourceModule| <f1> PIL.ImageMode",shape="record"];
	"PIL" [label="<f0> Package| <f1> PIL",shape="record"];
	"PIL._version" [label="<f0> SourceModule| <f1> PIL._version",shape="record"];
	"kivy.uix.image" [label="<f0> SourceModule| <f1> kivy.uix.image",shape="record"];
	"kivy.uix" [label="<f0> Package| <f1> kivy.uix",shape="record"];
	"kivy.loader" [label="<f0> SourceModule| <f1> kivy.loader",shape="record"];
	"kivy.compat" [label="<f0> SourceModule| <f1> kivy.compat",shape="record"];
	"smb" [label="<f0> MissingModule| <f1> smb",shape="record"];
	"kivy.utils" [label="<f0> SourceModule| <f1> kivy.utils",shape="record"];
	"kivy.config" [label="<f0> SourceModule| <f1> kivy.config",shape="record"];
	"ConfigParser" [label="<f0> MissingModule| <f1> ConfigParser",shape="record"];
	"kivy.cache" [label="<f0> SourceModule| <f1> kivy.cache",shape="record"];
	"kivy.clock" [label="<f0> SourceModule| <f1> kivy.clock",shape="record"];
	"kivy.base" [label="<f0> SourceModule| <f1> kivy.base",shape="record"];
	"kivy.input" [label="<f0> Package| <f1> kivy.input",shape="record"];
	"kivy.input.factory" [label="<f0> SourceModule| <f1> kivy.input.factory",shape="record"];
	"kivy.input.provider" [label="<f0> SourceModule| <f1> kivy.input.provider",shape="record"];
	"kivy.input.postproc" [label="<f0> Package| <f1> kivy.input.postproc",shape="record"];
	"kivy.input.postproc.calibration" [label="<f0> SourceModule| <f1> kivy.input.postproc.calibration",shape="record"];
	"kivy.input.postproc.dejitter" [label="<f0> SourceModule| <f1> kivy.input.postproc.dejitter",shape="record"];
	"kivy.input.postproc.retaintouch" [label="<f0> SourceModule| <f1> kivy.input.postproc.retaintouch",shape="record"];
	"kivy.vector" [label="<f0> SourceModule| <f1> kivy.vector",shape="record"];
	"kivy.input.postproc.ignorelist" [label="<f0> SourceModule| <f1> kivy.input.postproc.ignorelist",shape="record"];
	"kivy.input.postproc.tripletap" [label="<f0> SourceModule| <f1> kivy.input.postproc.tripletap",shape="record"];
	"kivy.input.postproc.doubletap" [label="<f0> SourceModule| <f1> kivy.input.postproc.doubletap",shape="record"];
	"kivy.input.providers" [label="<f0> Package| <f1> kivy.input.providers",shape="record"];
	"kivy.input.providers.leapfinger" [label="<f0> SourceModule| <f1> kivy.input.providers.leapfinger",shape="record"];
	"Leap" [label="<f0> MissingModule| <f1> Leap",shape="record"];
	"kivy.input.providers.androidjoystick" [label="<f0> SourceModule| <f1> kivy.input.providers.androidjoystick",shape="record"];
	"pygame" [label="<f0> MissingModule| <f1> pygame",shape="record"];
	"kivy.input.shape" [label="<f0> SourceModule| <f1> kivy.input.shape",shape="record"];
	"kivy.input.providers.linuxwacom" [label="<f0> SourceModule| <f1> kivy.input.providers.linuxwacom",shape="record"];
	"kivy.input.providers.hidinput" [label="<f0> SourceModule| <f1> kivy.input.providers.hidinput",shape="record"];
	"kivy.input.providers.mtdev" [label="<f0> SourceModule| <f1> kivy.input.providers.mtdev",shape="record"];
	"kivy.lib.mtdev" [label="<f0> SourceModule| <f1> kivy.lib.mtdev",shape="record"];
	"kivy.lib" [label="<f0> Package| <f1> kivy.lib",shape="record"];
	"kivy.input.providers.probesysfs" [label="<f0> SourceModule| <f1> kivy.input.providers.probesysfs",shape="record"];
	"kivy.input.providers.mactouch" [label="<f0> SourceModule| <f1> kivy.input.providers.mactouch",shape="record"];
	"kivy.input.providers.wm_pen" [label="<f0> SourceModule| <f1> kivy.input.providers.wm_pen",shape="record"];
	"kivy.input.providers.wm_common" [label="<f0> SourceModule| <f1> kivy.input.providers.wm_common",shape="record"];
	"kivy.input.providers.wm_touch" [label="<f0> SourceModule| <f1> kivy.input.providers.wm_touch",shape="record"];
	"kivy.input.providers.mouse" [label="<f0> SourceModule| <f1> kivy.input.providers.mouse",shape="record"];
	"kivy.graphics" [label="<f0> Package| <f1> kivy.graphics",shape="record"];
	"kivy.graphics.scissor_instructions" [label="<f0> Extension| <f1> kivy.graphics.scissor_instructions",shape="record"];
	"kivy.graphics.boxshadow" [label="<f0> Extension| <f1> kivy.graphics.boxshadow",shape="record"];
	"kivy.graphics.fbo" [label="<f0> Extension| <f1> kivy.graphics.fbo",shape="record"];
	"kivy.graphics.gl_instructions" [label="<f0> Extension| <f1> kivy.graphics.gl_instructions",shape="record"];
	"kivy.graphics.stencil_instructions" [label="<f0> Extension| <f1> kivy.graphics.stencil_instructions",shape="record"];
	"kivy.graphics.vertex_instructions" [label="<f0> Extension| <f1> kivy.graphics.vertex_instructions",shape="record"];
	"kivy.graphics.context_instructions" [label="<f0> Extension| <f1> kivy.graphics.context_instructions",shape="record"];
	"kivy.graphics.instructions" [label="<f0> Extension| <f1> kivy.graphics.instructions",shape="record"];
	"kivy.input.providers.tuio" [label="<f0> SourceModule| <f1> kivy.input.providers.tuio",shape="record"];
	"oscpy" [label="<f0> MissingModule| <f1> oscpy",shape="record"];
	"kivy.setupconfig" [label="<f0> SourceModule| <f1> kivy.setupconfig",shape="record"];
	"kivy.input.motionevent" [label="<f0> SourceModule| <f1> kivy.input.motionevent",shape="record"];
	"kivy.eventmanager" [label="<f0> Package| <f1> kivy.eventmanager",shape="record"];
	"kivy.core.window" [label="<f0> Package| <f1> kivy.core.window",shape="record"];
	"kivy.uix.vkeyboard" [label="<f0> SourceModule| <f1> kivy.uix.vkeyboard",shape="record"];
	"kivy.uix.scatter" [label="<f0> SourceModule| <f1> kivy.uix.scatter",shape="record"];
	"kivy.graphics.opengl" [label="<f0> Extension| <f1> kivy.graphics.opengl",shape="record"];
	"kivy.graphics.context" [label="<f0> Extension| <f1> kivy.graphics.context",shape="record"];
	"kivy.metrics" [label="<f0> SourceModule| <f1> kivy.metrics",shape="record"];
	"kivy._metrics" [label="<f0> Extension| <f1> kivy._metrics",shape="record"];
	"kivy.core.gl" [label="<f0> Package| <f1> kivy.core.gl",shape="record"];
	"kivy.graphics.opengl_utils" [label="<f0> Extension| <f1> kivy.graphics.opengl_utils",shape="record"];
	"ios" [label="<f0> MissingModule| <f1> ios",shape="record"];
	"kivy.animation" [label="<f0> SourceModule| <f1> kivy.animation",shape="record"];
	"kivy.weakproxy" [label="<f0> Extension| <f1> kivy.weakproxy",shape="record"];
	"kivy.graphics.cgl" [label="<f0> Extension| <f1> kivy.graphics.cgl",shape="record"];
	"kivy.graphics.transformation" [label="<f0> Extension| <f1> kivy.graphics.transformation",shape="record"];
	"kivy.uix.behaviors" [label="<f0> Package| <f1> kivy.uix.behaviors",shape="record"];
	"kivy.uix.behaviors.touchripple" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.touchripple",shape="record"];
	"kivy.uix.relativelayout" [label="<f0> SourceModule| <f1> kivy.uix.relativelayout",shape="record"];
	"kivy.uix.floatlayout" [label="<f0> SourceModule| <f1> kivy.uix.floatlayout",shape="record"];
	"kivy.uix.layout" [label="<f0> SourceModule| <f1> kivy.uix.layout",shape="record"];
	"kivy.uix.behaviors.cover" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.cover",shape="record"];
	"kivy.uix.behaviors.emacs" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.emacs",shape="record"];
	"kivy.uix.behaviors.codenavigation" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.codenavigation",shape="record"];
	"kivy.uix.behaviors.compoundselection" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.compoundselection",shape="record"];
	"kivy.uix.behaviors.focus" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.focus",shape="record"];
	"kivy.uix.behaviors.drag" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.drag",shape="record"];
	"kivy.uix.behaviors.togglebutton" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.togglebutton",shape="record"];
	"kivy.uix.behaviors.button" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.button",shape="record"];
	"kivy.modules" [label="<f0> Package| <f1> kivy.modules",shape="record"];
	"kivy.core" [label="<f0> Package| <f1> kivy.core",shape="record"];
	"kivy.lang" [label="<f0> Package| <f1> kivy.lang",shape="record"];
	"kivy.lang.parser" [label="<f0> SourceModule| <f1> kivy.lang.parser",shape="record"];
	"kivy.lang.builder" [label="<f0> SourceModule| <f1> kivy.lang.builder",shape="record"];
	"kivy._event" [label="<f0> Extension| <f1> kivy._event",shape="record"];
	"kivy.factory" [label="<f0> SourceModule| <f1> kivy.factory",shape="record"];
	"kivy.factory_registers" [label="<f0> SourceModule| <f1> kivy.factory_registers",shape="record"];
	"kivy.event" [label="<f0> SourceModule| <f1> kivy.event",shape="record"];
	"kivy._clock" [label="<f0> Extension| <f1> kivy._clock",shape="record"];
	"kivy.context" [label="<f0> SourceModule| <f1> kivy.context",shape="record"];
	"kivy.logger" [label="<f0> SourceModule| <f1> kivy.logger",shape="record"];
	"kivy.properties" [label="<f0> Extension| <f1> kivy.properties",shape="record"];
	"kivy.resources" [label="<f0> SourceModule| <f1> kivy.resources",shape="record"];
	"kivy.core.image" [label="<f0> Package| <f1> kivy.core.image",shape="record"];
	"kivy.graphics.texture" [label="<f0> Extension| <f1> kivy.graphics.texture",shape="record"];
	"kivy.atlas" [label="<f0> SourceModule| <f1> kivy.atlas",shape="record"];
	"kivy.uix.widget" [label="<f0> SourceModule| <f1> kivy.uix.widget",shape="record"];
	"kivy.uix.filechooser" [label="<f0> SourceModule| <f1> kivy.uix.filechooser",shape="record"];
	"win32file" [label="<f0> MissingModule| <f1> win32file",shape="record"];
	"kivy.uix.screenmanager" [label="<f0> SourceModule| <f1> kivy.uix.screenmanager",shape="record"];
	"kivy.core.text" [label="<f0> Package| <f1> kivy.core.text",shape="record"];
	"kivy.core.text.text_pango" [label="<f0> SourceModule| <f1> kivy.core.text.text_pango",shape="record"];
	"'kivy.core.text._text_pango'" [label="<f0> MissingModule| <f1> 'kivy.core.text._text_pango'",shape="record"];
	"kivy.core.text.text_layout" [label="<f0> Extension| <f1> kivy.core.text.text_layout",shape="record"];
	"kivy.uix.label" [label="<f0> SourceModule| <f1> kivy.uix.label",shape="record"];
	"kivy.core.text.markup" [label="<f0> SourceModule| <f1> kivy.core.text.markup",shape="record"];
	"kivy.parser" [label="<f0> SourceModule| <f1> kivy.parser",shape="record"];
	"kivy.uix.button" [label="<f0> SourceModule| <f1> kivy.uix.button",shape="record"];
	"kivy.uix.boxlayout" [label="<f0> SourceModule| <f1> kivy.uix.boxlayout",shape="record"];
	"kivy.app" [label="<f0> SourceModule| <f1> kivy.app",shape="record"];
	"kivy.uix.settings" [label="<f0> SourceModule| <f1> kivy.uix.settings",shape="record"];
	"kivy.uix.togglebutton" [label="<f0> SourceModule| <f1> kivy.uix.togglebutton",shape="record"];
	"kivy.uix.textinput" [label="<f0> SourceModule| <f1> kivy.uix.textinput",shape="record"];
	"kivy.core.clipboard" [label="<f0> Package| <f1> kivy.core.clipboard",shape="record"];
	"kivy.uix.bubble" [label="<f0> SourceModule| <f1> kivy.uix.bubble",shape="record"];
	"kivy.uix.popup" [label="<f0> SourceModule| <f1> kivy.uix.popup",shape="record"];
	"kivy.uix.modalview" [label="<f0> SourceModule| <f1> kivy.uix.modalview",shape="record"];
	"kivy.uix.anchorlayout" [label="<f0> SourceModule| <f1> kivy.uix.anchorlayout",shape="record"];
	"kivy.uix.gridlayout" [label="<f0> SourceModule| <f1> kivy.uix.gridlayout",shape="record"];
	"kivy.uix.scrollview" [label="<f0> SourceModule| <f1> kivy.uix.scrollview",shape="record"];
	"kivy.effects.dampedscroll" [label="<f0> SourceModule| <f1> kivy.effects.dampedscroll",shape="record"];
	"kivy.effects" [label="<f0> Package| <f1> kivy.effects",shape="record"];
	"kivy.effects.scroll" [label="<f0> SourceModule| <f1> kivy.effects.scroll",shape="record"];
	"kivy.effects.kinetic" [label="<f0> SourceModule| <f1> kivy.effects.kinetic",shape="record"];
	"kivy.uix.stencilview" [label="<f0> SourceModule| <f1> kivy.uix.stencilview",shape="record"];
	"kivy.uix.colorpicker" [label="<f0> SourceModule| <f1> kivy.uix.colorpicker",shape="record"];
	"kivy.uix.tabbedpanel" [label="<f0> SourceModule| <f1> kivy.uix.tabbedpanel",shape="record"];
	"kivy" [label="<f0> Package| <f1> kivy",shape="record"];
	"kivy.core.window.window_sdl2" [label="<f0> SourceModule| <f1> kivy.core.window.window_sdl2",shape="record"];
	"win32con" [label="<f0> MissingModule| <f1> win32con",shape="record"];
	"kivy.core.video.video_ffpyplayer" [label="<f0> SourceModule| <f1> kivy.core.video.video_ffpyplayer",shape="record"];
	"'ffpyplayer.tools'" [label="<f0> MissingModule| <f1> 'ffpyplayer.tools'",shape="record"];
	"'ffpyplayer.player'" [label="<f0> MissingModule| <f1> 'ffpyplayer.player'",shape="record"];
	"ffpyplayer" [label="<f0> MissingModule| <f1> ffpyplayer",shape="record"];
	"kivy.graphics.svg" [label="<f0> Extension| <f1> kivy.graphics.svg",shape="record"];
	"kivy.core.window._window_sdl2" [label="<f0> Extension| <f1> kivy.core.window._window_sdl2",shape="record"];
	"kivy.core.audio.audio_sdl2" [label="<f0> Extension| <f1> kivy.core.audio.audio_sdl2",shape="record"];
	"kivy.uix.scatterlayout" [label="<f0> SourceModule| <f1> kivy.uix.scatterlayout",shape="record"];
	"kivy.core.audio.audio_android" [label="<f0> SourceModule| <f1> kivy.core.audio.audio_android",shape="record"];
	"kivy.weakmethod" [label="<f0> SourceModule| <f1> kivy.weakmethod",shape="record"];
	"kivy.uix.recyclegridlayout" [label="<f0> SourceModule| <f1> kivy.uix.recyclegridlayout",shape="record"];
	"kivy.core.image.img_imageio" [label="<f0> Extension| <f1> kivy.core.image.img_imageio",shape="record"];
	"kivy.uix.gesturesurface" [label="<f0> SourceModule| <f1> kivy.uix.gesturesurface",shape="record"];
	"kivy.core.camera.camera_picamera" [label="<f0> SourceModule| <f1> kivy.core.camera.camera_picamera",shape="record"];
	"picamera" [label="<f0> MissingModule| <f1> picamera",shape="record"];
	"kivy.uix.codeinput" [label="<f0> SourceModule| <f1> kivy.uix.codeinput",shape="record"];
	"kivy.extras.highlight" [label="<f0> SourceModule| <f1> kivy.extras.highlight",shape="record"];
	"kivy.extras" [label="<f0> Package| <f1> kivy.extras",shape="record"];
	"kivy.core.clipboard.clipboard_winctypes" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_winctypes",shape="record"];
	"kivy.core.camera.camera_android" [label="<f0> SourceModule| <f1> kivy.core.camera.camera_android",shape="record"];
	"cv2" [label="<f0> MissingModule| <f1> cv2",shape="record"];
	"kivy.core.camera.camera_avfoundation" [label="<f0> Extension| <f1> kivy.core.camera.camera_avfoundation",shape="record"];
	"kivy.uix.camera" [label="<f0> SourceModule| <f1> kivy.uix.camera",shape="record"];
	"kivy.core.clipboard.clipboard_xsel" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_xsel",shape="record"];
	"kivy.graphics.tesselator" [label="<f0> Extension| <f1> kivy.graphics.tesselator",shape="record"];
	"kivy.uix.behaviors.knspace" [label="<f0> SourceModule| <f1> kivy.uix.behaviors.knspace",shape="record"];
	"kivy.core.camera.camera_gi" [label="<f0> SourceModule| <f1> kivy.core.camera.camera_gi",shape="record"];
	"kivy.support" [label="<f0> SourceModule| <f1> kivy.support",shape="record"];
	"kivy.uix.progressbar" [label="<f0> SourceModule| <f1> kivy.uix.progressbar",shape="record"];
	"kivy.core.audio.audio_pygame" [label="<f0> SourceModule| <f1> kivy.core.audio.audio_pygame",shape="record"];
	"android_mixer" [label="<f0> MissingModule| <f1> android_mixer",shape="record"];
	"'android.mixer'" [label="<f0> MissingModule| <f1> 'android.mixer'",shape="record"];
	"kivy.core.video.video_null" [label="<f0> SourceModule| <f1> kivy.core.video.video_null",shape="record"];
	"kivy.core.clipboard.clipboard_xclip" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_xclip",shape="record"];
	"kivy.uix.switch" [label="<f0> SourceModule| <f1> kivy.uix.switch",shape="record"];
	"kivy.core.video.video_gstplayer" [label="<f0> SourceModule| <f1> kivy.core.video.video_gstplayer",shape="record"];
	"kivy.lib.gstplayer" [label="<f0> Package| <f1> kivy.lib.gstplayer",shape="record"];
	"'kivy.lib.gstplayer._gstplayer'" [label="<f0> MissingModule| <f1> 'kivy.lib.gstplayer._gstplayer'",shape="record"];
	"kivy.core.window.window_pygame" [label="<f0> SourceModule| <f1> kivy.core.window.window_pygame",shape="record"];
	"win32gui" [label="<f0> MissingModule| <f1> win32gui",shape="record"];
	"kivy.uix.videoplayer" [label="<f0> SourceModule| <f1> kivy.uix.videoplayer",shape="record"];
	"kivy.graphics.cgl_backend.cgl_debug" [label="<f0> Extension| <f1> kivy.graphics.cgl_backend.cgl_debug",shape="record"];
	"kivy.core.video" [label="<f0> Package| <f1> kivy.core.video",shape="record"];
	"kivy.core.video.video_ffmpeg" [label="<f0> SourceModule| <f1> kivy.core.video.video_ffmpeg",shape="record"];
	"ffmpeg" [label="<f0> MissingModule| <f1> ffmpeg",shape="record"];
	"kivy.core.image.img_tex" [label="<f0> SourceModule| <f1> kivy.core.image.img_tex",shape="record"];
	"kivy.gesture" [label="<f0> SourceModule| <f1> kivy.gesture",shape="record"];
	"kivy.uix.treeview" [label="<f0> SourceModule| <f1> kivy.uix.treeview",shape="record"];
	"kivy.graphics.compiler" [label="<f0> Extension| <f1> kivy.graphics.compiler",shape="record"];
	"kivy.uix.recycleview.__init__" [label="<f0> SourceModule| <f1> kivy.uix.recycleview.__init__",shape="record"];
	"kivy.uix.recycleview" [label="<f0> Package| <f1> kivy.uix.recycleview",shape="record"];
	"kivy.core.text._text_sdl2" [label="<f0> Extension| <f1> kivy.core.text._text_sdl2",shape="record"];
	"kivy.effects.opacityscroll" [label="<f0> SourceModule| <f1> kivy.effects.opacityscroll",shape="record"];
	"kivy.graphics.buffer" [label="<f0> Extension| <f1> kivy.graphics.buffer",shape="record"];
	"kivy.core.clipboard.clipboard_android" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_android",shape="record"];
	"'android.runnable'" [label="<f0> MissingModule| <f1> 'android.runnable'",shape="record"];
	"kivy.core.spelling.spelling_osxappkit" [label="<f0> SourceModule| <f1> kivy.core.spelling.spelling_osxappkit",shape="record"];
	"kivy.core.camera" [label="<f0> Package| <f1> kivy.core.camera",shape="record"];
	"kivy.uix.sandbox" [label="<f0> SourceModule| <f1> kivy.uix.sandbox",shape="record"];
	"kivy.core.image.img_sdl2" [label="<f0> SourceModule| <f1> kivy.core.image.img_sdl2",shape="record"];
	"kivy.uix.recycleview.views" [label="<f0> SourceModule| <f1> kivy.uix.recycleview.views",shape="record"];
	"kivy.core.image._img_sdl2" [label="<f0> Extension| <f1> kivy.core.image._img_sdl2",shape="record"];
	"kivy.graphics.vbo" [label="<f0> Extension| <f1> kivy.graphics.vbo",shape="record"];
	"kivy.graphics.shader" [label="<f0> Extension| <f1> kivy.graphics.shader",shape="record"];
	"kivy.uix.splitter" [label="<f0> SourceModule| <f1> kivy.uix.splitter",shape="record"];
	"kivy.core.clipboard.clipboard_dbusklipper" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_dbusklipper",shape="record"];
	"dbus" [label="<f0> MissingModule| <f1> dbus",shape="record"];
	"kivy.uix.rst" [label="<f0> SourceModule| <f1> kivy.uix.rst",shape="record"];
	"docutils.parsers.rst.directives" [label="<f0> Package| <f1> docutils.parsers.rst.directives",shape="record"];
	"docutils.parsers.rst.languages.en" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.en",shape="record"];
	"docutils.parsers.rst.languages" [label="<f0> Package| <f1> docutils.parsers.rst.languages",shape="record"];
	"docutils.languages" [label="<f0> Package| <f1> docutils.languages",shape="record"];
	"docutils.utils" [label="<f0> Package| <f1> docutils.utils",shape="record"];
	"docutils.utils.smartquotes" [label="<f0> SourceModule| <f1> docutils.utils.smartquotes",shape="record"];
	"docutils.utils.urischemes" [label="<f0> SourceModule| <f1> docutils.utils.urischemes",shape="record"];
	"docutils.utils.roman" [label="<f0> SourceModule| <f1> docutils.utils.roman",shape="record"];
	"docutils.utils.punctuation_chars" [label="<f0> SourceModule| <f1> docutils.utils.punctuation_chars",shape="record"];
	"docutils.io" [label="<f0> SourceModule| <f1> docutils.io",shape="record"];
	"docutils.frontend" [label="<f0> SourceModule| <f1> docutils.frontend",shape="record"];
	"docutils.nodes" [label="<f0> SourceModule| <f1> docutils.nodes",shape="record"];
	"docutils.transforms" [label="<f0> Package| <f1> docutils.transforms",shape="record"];
	"docutils.transforms.parts" [label="<f0> SourceModule| <f1> docutils.transforms.parts",shape="record"];
	"docutils.transforms.misc" [label="<f0> SourceModule| <f1> docutils.transforms.misc",shape="record"];
	"docutils.transforms.references" [label="<f0> SourceModule| <f1> docutils.transforms.references",shape="record"];
	"docutils.transforms.frontmatter" [label="<f0> SourceModule| <f1> docutils.transforms.frontmatter",shape="record"];
	"docutils.transforms.writer_aux" [label="<f0> SourceModule| <f1> docutils.transforms.writer_aux",shape="record"];
	"docutils.transforms.universal" [label="<f0> SourceModule| <f1> docutils.transforms.universal",shape="record"];
	"docutils" [label="<f0> Package| <f1> docutils",shape="record"];
	"docutils.parsers.rst.directives.tables" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.tables",shape="record"];
	"docutils.statemachine" [label="<f0> SourceModule| <f1> docutils.statemachine",shape="record"];
	"docutils.parsers.rst.directives.references" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.references",shape="record"];
	"docutils.parsers.rst.directives.parts" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.parts",shape="record"];
	"docutils.parsers.rst.directives.misc" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.misc",shape="record"];
	"docutils.parsers.rst.states" [label="<f0> SourceModule| <f1> docutils.parsers.rst.states",shape="record"];
	"docutils.parsers.rst.tableparser" [label="<f0> SourceModule| <f1> docutils.parsers.rst.tableparser",shape="record"];
	"docutils.parsers.rst.directives.images" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.images",shape="record"];
	"Image" [label="<f0> MissingModule| <f1> Image",shape="record"];
	"docutils.parsers.rst.directives.html" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.html",shape="record"];
	"docutils.parsers.rst.directives.body" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.body",shape="record"];
	"docutils.utils.code_analyzer" [label="<f0> SourceModule| <f1> docutils.utils.code_analyzer",shape="record"];
	"docutils.parsers.rst.directives.admonitions" [label="<f0> SourceModule| <f1> docutils.parsers.rst.directives.admonitions",shape="record"];
	"docutils.parsers.rst.languages.zh_tw" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.zh_tw",shape="record"];
	"docutils.parsers.rst.languages.zh_cn" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.zh_cn",shape="record"];
	"docutils.parsers.rst.languages.uk" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.uk",shape="record"];
	"docutils.parsers.rst.languages.sv" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.sv",shape="record"];
	"docutils.parsers.rst.languages.sk" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.sk",shape="record"];
	"docutils.parsers.rst.languages.ru" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.ru",shape="record"];
	"docutils.parsers.rst.languages.pt_br" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.pt_br",shape="record"];
	"docutils.parsers.rst.languages.pl" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.pl",shape="record"];
	"docutils.parsers.rst.languages.nl" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.nl",shape="record"];
	"docutils.parsers.rst.languages.lv" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.lv",shape="record"];
	"docutils.parsers.rst.languages.lt" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.lt",shape="record"];
	"docutils.parsers.rst.languages.ko" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.ko",shape="record"];
	"docutils.parsers.rst.languages.ka" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.ka",shape="record"];
	"docutils.parsers.rst.languages.ja" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.ja",shape="record"];
	"docutils.parsers.rst.languages.it" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.it",shape="record"];
	"docutils.parsers.rst.languages.he" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.he",shape="record"];
	"docutils.parsers.rst.languages.gl" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.gl",shape="record"];
	"docutils.parsers.rst.languages.fr" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.fr",shape="record"];
	"docutils.parsers.rst.languages.fi" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.fi",shape="record"];
	"docutils.parsers.rst.languages.fa" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.fa",shape="record"];
	"docutils.parsers.rst.languages.es" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.es",shape="record"];
	"docutils.parsers.rst.languages.eo" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.eo",shape="record"];
	"docutils.parsers.rst.languages.de" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.de",shape="record"];
	"docutils.parsers.rst.languages.da" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.da",shape="record"];
	"docutils.parsers.rst.languages.cs" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.cs",shape="record"];
	"docutils.parsers.rst.languages.ca" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.ca",shape="record"];
	"docutils.parsers.rst.languages.ar" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.ar",shape="record"];
	"docutils.parsers.rst.languages.af" [label="<f0> SourceModule| <f1> docutils.parsers.rst.languages.af",shape="record"];
	"docutils.writers.xetex" [label="<f0> Package| <f1> docutils.writers.xetex",shape="record"];
	"docutils.writers.s5_html" [label="<f0> Package| <f1> docutils.writers.s5_html",shape="record"];
	"docutils.writers.pseudoxml" [label="<f0> SourceModule| <f1> docutils.writers.pseudoxml",shape="record"];
	"docutils.writers.pep_html" [label="<f0> Package| <f1> docutils.writers.pep_html",shape="record"];
	"docutils.writers.odf_odt.pygmentsformatter" [label="<f0> SourceModule| <f1> docutils.writers.odf_odt.pygmentsformatter",shape="record"];
	"docutils.writers.odf_odt.prepstyles" [label="<f0> SourceModule| <f1> docutils.writers.odf_odt.prepstyles",shape="record"];
	"docutils.writers.odf_odt" [label="<f0> Package| <f1> docutils.writers.odf_odt",shape="record"];
	"docutils.readers.standalone" [label="<f0> SourceModule| <f1> docutils.readers.standalone",shape="record"];
	"docutils.readers" [label="<f0> Package| <f1> docutils.readers",shape="record"];
	"docutils.writers.null" [label="<f0> SourceModule| <f1> docutils.writers.null",shape="record"];
	"docutils.writers.manpage" [label="<f0> SourceModule| <f1> docutils.writers.manpage",shape="record"];
	"roman" [label="<f0> MissingModule| <f1> roman",shape="record"];
	"docutils.writers.latex2e" [label="<f0> Package| <f1> docutils.writers.latex2e",shape="record"];
	"docutils.utils.math.unichar2tex" [label="<f0> SourceModule| <f1> docutils.utils.math.unichar2tex",shape="record"];
	"docutils.utils.math" [label="<f0> Package| <f1> docutils.utils.math",shape="record"];
	"docutils.utils.math.tex2mathml_extern" [label="<f0> SourceModule| <f1> docutils.utils.math.tex2mathml_extern",shape="record"];
	"docutils.utils.math.math2html" [label="<f0> SourceModule| <f1> docutils.utils.math.math2html",shape="record"];
	"docutils.utils.math.latex2mathml" [label="<f0> SourceModule| <f1> docutils.utils.math.latex2mathml",shape="record"];
	"docutils.utils.math.mathml_elements" [label="<f0> SourceModule| <f1> docutils.utils.math.mathml_elements",shape="record"];
	"docutils.utils.math.tex2unichar" [label="<f0> SourceModule| <f1> docutils.utils.math.tex2unichar",shape="record"];
	"docutils.utils.math.mathalphabet2unichar" [label="<f0> SourceModule| <f1> docutils.utils.math.mathalphabet2unichar",shape="record"];
	"docutils.writers.html5_polyglot" [label="<f0> Package| <f1> docutils.writers.html5_polyglot",shape="record"];
	"docutils.writers.html4css1" [label="<f0> Package| <f1> docutils.writers.html4css1",shape="record"];
	"docutils.writers.docutils_xml" [label="<f0> SourceModule| <f1> docutils.writers.docutils_xml",shape="record"];
	"docutils.writers._html_base" [label="<f0> SourceModule| <f1> docutils.writers._html_base",shape="record"];
	"docutils.writers" [label="<f0> Package| <f1> docutils.writers",shape="record"];
	"docutils.languages.zh_tw" [label="<f0> SourceModule| <f1> docutils.languages.zh_tw",shape="record"];
	"docutils.languages.zh_cn" [label="<f0> SourceModule| <f1> docutils.languages.zh_cn",shape="record"];
	"docutils.languages.uk" [label="<f0> SourceModule| <f1> docutils.languages.uk",shape="record"];
	"docutils.languages.sv" [label="<f0> SourceModule| <f1> docutils.languages.sv",shape="record"];
	"docutils.languages.sk" [label="<f0> SourceModule| <f1> docutils.languages.sk",shape="record"];
	"docutils.languages.ru" [label="<f0> SourceModule| <f1> docutils.languages.ru",shape="record"];
	"docutils.languages.pt_br" [label="<f0> SourceModule| <f1> docutils.languages.pt_br",shape="record"];
	"docutils.languages.pl" [label="<f0> SourceModule| <f1> docutils.languages.pl",shape="record"];
	"docutils.languages.nl" [label="<f0> SourceModule| <f1> docutils.languages.nl",shape="record"];
	"docutils.languages.lv" [label="<f0> SourceModule| <f1> docutils.languages.lv",shape="record"];
	"docutils.languages.lt" [label="<f0> SourceModule| <f1> docutils.languages.lt",shape="record"];
	"docutils.languages.ko" [label="<f0> SourceModule| <f1> docutils.languages.ko",shape="record"];
	"docutils.languages.ka" [label="<f0> SourceModule| <f1> docutils.languages.ka",shape="record"];
	"docutils.languages.ja" [label="<f0> SourceModule| <f1> docutils.languages.ja",shape="record"];
	"docutils.languages.it" [label="<f0> SourceModule| <f1> docutils.languages.it",shape="record"];
	"docutils.languages.he" [label="<f0> SourceModule| <f1> docutils.languages.he",shape="record"];
	"docutils.languages.gl" [label="<f0> SourceModule| <f1> docutils.languages.gl",shape="record"];
	"docutils.languages.fr" [label="<f0> SourceModule| <f1> docutils.languages.fr",shape="record"];
	"docutils.languages.fi" [label="<f0> SourceModule| <f1> docutils.languages.fi",shape="record"];
	"docutils.languages.fa" [label="<f0> SourceModule| <f1> docutils.languages.fa",shape="record"];
	"docutils.languages.es" [label="<f0> SourceModule| <f1> docutils.languages.es",shape="record"];
	"docutils.languages.eo" [label="<f0> SourceModule| <f1> docutils.languages.eo",shape="record"];
	"docutils.languages.en" [label="<f0> SourceModule| <f1> docutils.languages.en",shape="record"];
	"docutils.languages.de" [label="<f0> SourceModule| <f1> docutils.languages.de",shape="record"];
	"docutils.languages.da" [label="<f0> SourceModule| <f1> docutils.languages.da",shape="record"];
	"docutils.languages.cs" [label="<f0> SourceModule| <f1> docutils.languages.cs",shape="record"];
	"docutils.languages.ca" [label="<f0> SourceModule| <f1> docutils.languages.ca",shape="record"];
	"docutils.languages.ar" [label="<f0> SourceModule| <f1> docutils.languages.ar",shape="record"];
	"docutils.languages.af" [label="<f0> SourceModule| <f1> docutils.languages.af",shape="record"];
	"docutils.parsers.rst.roles" [label="<f0> SourceModule| <f1> docutils.parsers.rst.roles",shape="record"];
	"docutils.parsers.rst" [label="<f0> Package| <f1> docutils.parsers.rst",shape="record"];
	"docutils.parsers" [label="<f0> Package| <f1> docutils.parsers",shape="record"];
	"kivy.core.image.img_pygame" [label="<f0> SourceModule| <f1> kivy.core.image.img_pygame",shape="record"];
	"kivy.core.spelling" [label="<f0> Package| <f1> kivy.core.spelling",shape="record"];
	"kivy.core.clipboard.clipboard_nspaste" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_nspaste",shape="record"];
	"'pyobjus.dylib_manager'" [label="<f0> MissingModule| <f1> 'pyobjus.dylib_manager'",shape="record"];
	"pyobjus" [label="<f0> MissingModule| <f1> pyobjus",shape="record"];
	"kivy.core.image.img_pil" [label="<f0> SourceModule| <f1> kivy.core.image.img_pil",shape="record"];
	"kivy.core.audio.audio_ffpyplayer" [label="<f0> SourceModule| <f1> kivy.core.audio.audio_ffpyplayer",shape="record"];
	"kivy.core.clipboard.clipboard_sdl2" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_sdl2",shape="record"];
	"kivy.uix.video" [label="<f0> SourceModule| <f1> kivy.uix.video",shape="record"];
	"kivy.graphics.cgl_backend.cgl_mock" [label="<f0> Extension| <f1> kivy.graphics.cgl_backend.cgl_mock",shape="record"];
	"kivy.core.clipboard._clipboard_sdl2" [label="<f0> Extension| <f1> kivy.core.clipboard._clipboard_sdl2",shape="record"];
	"kivy.uix.recyclelayout" [label="<f0> SourceModule| <f1> kivy.uix.recyclelayout",shape="record"];
	"kivy.core.text.text_pil" [label="<f0> SourceModule| <f1> kivy.core.text.text_pil",shape="record"];
	"kivy.multistroke" [label="<f0> SourceModule| <f1> kivy.multistroke",shape="record"];
	"kivy.graphics.cgl_backend" [label="<f0> Package| <f1> kivy.graphics.cgl_backend",shape="record"];
	"kivy.uix.pagelayout" [label="<f0> SourceModule| <f1> kivy.uix.pagelayout",shape="record"];
	"kivy.core.clipboard.clipboard_dummy" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_dummy",shape="record"];
	"kivy.core.window.window_info" [label="<f0> Extension| <f1> kivy.core.window.window_info",shape="record"];
	"kivy.core.text.text_pygame" [label="<f0> SourceModule| <f1> kivy.core.text.text_pygame",shape="record"];
	"kivy.uix.recycleview.layout" [label="<f0> SourceModule| <f1> kivy.uix.recycleview.layout",shape="record"];
	"kivy.core.window.window_egl_rpi" [label="<f0> SourceModule| <f1> kivy.core.window.window_egl_rpi",shape="record"];
	"kivy.lib.vidcore_lite.egl" [label="<f0> MissingModule| <f1> kivy.lib.vidcore_lite.egl",shape="record"];
	"kivy.lib.vidcore_lite.bcm" [label="<f0> MissingModule| <f1> kivy.lib.vidcore_lite.bcm",shape="record"];
	"kivy.lib.vidcore_lite" [label="<f0> Package| <f1> kivy.lib.vidcore_lite",shape="record"];
	"kivy.core.clipboard.clipboard_pygame" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_pygame",shape="record"];
	"'pygame.scrap'" [label="<f0> MissingModule| <f1> 'pygame.scrap'",shape="record"];
	"kivy.core.text.text_sdl2" [label="<f0> SourceModule| <f1> kivy.core.text.text_sdl2",shape="record"];
	"kivy.core.clipboard.clipboard_gtk3" [label="<f0> SourceModule| <f1> kivy.core.clipboard.clipboard_gtk3",shape="record"];
	"kivy.graphics.cgl_backend.cgl_sdl2" [label="<f0> Extension| <f1> kivy.graphics.cgl_backend.cgl_sdl2",shape="record"];
	"kivy.uix.stacklayout" [label="<f0> SourceModule| <f1> kivy.uix.stacklayout",shape="record"];
	"kivy.uix.recycleview.datamodel" [label="<f0> SourceModule| <f1> kivy.uix.recycleview.datamodel",shape="record"];
	"kivy.core.audio.audio_avplayer" [label="<f0> SourceModule| <f1> kivy.core.audio.audio_avplayer",shape="record"];
	"kivy.uix.slider" [label="<f0> SourceModule| <f1> kivy.uix.slider",shape="record"];
	"kivy.uix.spinner" [label="<f0> SourceModule| <f1> kivy.uix.spinner",shape="record"];
	"kivy.core.image.img_ffpyplayer" [label="<f0> SourceModule| <f1> kivy.core.image.img_ffpyplayer",shape="record"];
	"'ffpyplayer.pic'" [label="<f0> MissingModule| <f1> 'ffpyplayer.pic'",shape="record"];
	"kivy.uix.effectwidget" [label="<f0> SourceModule| <f1> kivy.uix.effectwidget",shape="record"];
	"kivy.uix.dropdown" [label="<f0> SourceModule| <f1> kivy.uix.dropdown",shape="record"];
	"kivy.core.audio.audio_gstplayer" [label="<f0> SourceModule| <f1> kivy.core.audio.audio_gstplayer",shape="record"];
	"kivy.graphics.vertex" [label="<f0> Extension| <f1> kivy.graphics.vertex",shape="record"];
	"kivy.uix.actionbar" [label="<f0> SourceModule| <f1> kivy.uix.actionbar",shape="record"];
	"kivy.graphics.cgl_backend.cgl_gl" [label="<f0> Extension| <f1> kivy.graphics.cgl_backend.cgl_gl",shape="record"];
	"kivy.core.clipboard._clipboard_ext" [label="<f0> SourceModule| <f1> kivy.core.clipboard._clipboard_ext",shape="record"];
	"kivy.core.image.img_dds" [label="<f0> SourceModule| <f1> kivy.core.image.img_dds",shape="record"];
	"kivy.lib.ddsfile" [label="<f0> SourceModule| <f1> kivy.lib.ddsfile",shape="record"];
	"kivy.core.spelling.spelling_enchant" [label="<f0> SourceModule| <f1> kivy.core.spelling.spelling_enchant",shape="record"];
	"enchant" [label="<f0> MissingModule| <f1> enchant",shape="record"];
	"kivy.uix.checkbox" [label="<f0> SourceModule| <f1> kivy.uix.checkbox",shape="record"];
	"kivy.graphics.cgl_backend.cgl_glew" [label="<f0> Extension| <f1> kivy.graphics.cgl_backend.cgl_glew",shape="record"];
	"kivy.uix.carousel" [label="<f0> SourceModule| <f1> kivy.uix.carousel",shape="record"];
	"kivy.uix.accordion" [label="<f0> SourceModule| <f1> kivy.uix.accordion",shape="record"];
	"kivy.core.camera.camera_opencv" [label="<f0> SourceModule| <f1> kivy.core.camera.camera_opencv",shape="record"];
	"'opencv.highgui'" [label="<f0> MissingModule| <f1> 'opencv.highgui'",shape="record"];
	"opencv" [label="<f0> MissingModule| <f1> opencv",shape="record"];
	"kivy.core.audio" [label="<f0> Package| <f1> kivy.core.audio",shape="record"];
	"kivy.uix.recycleboxlayout" [label="<f0> SourceModule| <f1> kivy.uix.recycleboxlayout",shape="record"];
	"kivy_deps" [label="<f0> MissingModule| <f1> kivy_deps",shape="record"];
	"kivy.deps" [label="<f0> Package| <f1> kivy.deps",shape="record"];
	"kivy._version" [label="<f0> SourceModule| <f1> kivy._version",shape="record"];
	"encodings.zlib_codec" [label="<f0> SourceModule| <f1> encodings.zlib_codec",shape="record"];
	"encodings.uu_codec" [label="<f0> SourceModule| <f1> encodings.uu_codec",shape="record"];
	"encodings.utf_8_sig" [label="<f0> SourceModule| <f1> encodings.utf_8_sig",shape="record"];
	"encodings.utf_8" [label="<f0> SourceModule| <f1> encodings.utf_8",shape="record"];
	"encodings.utf_7" [label="<f0> SourceModule| <f1> encodings.utf_7",shape="record"];
	"encodings.utf_32_le" [label="<f0> SourceModule| <f1> encodings.utf_32_le",shape="record"];
	"encodings.utf_32_be" [label="<f0> SourceModule| <f1> encodings.utf_32_be",shape="record"];
	"encodings.utf_32" [label="<f0> SourceModule| <f1> encodings.utf_32",shape="record"];
	"encodings.utf_16_le" [label="<f0> SourceModule| <f1> encodings.utf_16_le",shape="record"];
	"encodings.utf_16_be" [label="<f0> SourceModule| <f1> encodings.utf_16_be",shape="record"];
	"encodings.utf_16" [label="<f0> SourceModule| <f1> encodings.utf_16",shape="record"];
	"encodings.unicode_escape" [label="<f0> SourceModule| <f1> encodings.unicode_escape",shape="record"];
	"encodings.undefined" [label="<f0> SourceModule| <f1> encodings.undefined",shape="record"];
	"encodings.tis_620" [label="<f0> SourceModule| <f1> encodings.tis_620",shape="record"];
	"encodings.shift_jisx0213" [label="<f0> SourceModule| <f1> encodings.shift_jisx0213",shape="record"];
	"_codecs_jp" [label="<f0> Extension| <f1> _codecs_jp",shape="record"];
	"encodings.shift_jis_2004" [label="<f0> SourceModule| <f1> encodings.shift_jis_2004",shape="record"];
	"encodings.shift_jis" [label="<f0> SourceModule| <f1> encodings.shift_jis",shape="record"];
	"encodings.rot_13" [label="<f0> SourceModule| <f1> encodings.rot_13",shape="record"];
	"encodings.raw_unicode_escape" [label="<f0> SourceModule| <f1> encodings.raw_unicode_escape",shape="record"];
	"encodings.quopri_codec" [label="<f0> SourceModule| <f1> encodings.quopri_codec",shape="record"];
	"encodings.punycode" [label="<f0> SourceModule| <f1> encodings.punycode",shape="record"];
	"encodings.ptcp154" [label="<f0> SourceModule| <f1> encodings.ptcp154",shape="record"];
	"encodings.palmos" [label="<f0> SourceModule| <f1> encodings.palmos",shape="record"];
	"encodings.oem" [label="<f0> SourceModule| <f1> encodings.oem",shape="record"];
	"encodings.mbcs" [label="<f0> SourceModule| <f1> encodings.mbcs",shape="record"];
	"encodings.mac_turkish" [label="<f0> SourceModule| <f1> encodings.mac_turkish",shape="record"];
	"encodings.mac_romanian" [label="<f0> SourceModule| <f1> encodings.mac_romanian",shape="record"];
	"encodings.mac_roman" [label="<f0> SourceModule| <f1> encodings.mac_roman",shape="record"];
	"encodings.mac_latin2" [label="<f0> SourceModule| <f1> encodings.mac_latin2",shape="record"];
	"encodings.mac_iceland" [label="<f0> SourceModule| <f1> encodings.mac_iceland",shape="record"];
	"encodings.mac_greek" [label="<f0> SourceModule| <f1> encodings.mac_greek",shape="record"];
	"encodings.mac_farsi" [label="<f0> SourceModule| <f1> encodings.mac_farsi",shape="record"];
	"encodings.mac_cyrillic" [label="<f0> SourceModule| <f1> encodings.mac_cyrillic",shape="record"];
	"encodings.mac_croatian" [label="<f0> SourceModule| <f1> encodings.mac_croatian",shape="record"];
	"encodings.mac_arabic" [label="<f0> SourceModule| <f1> encodings.mac_arabic",shape="record"];
	"encodings.latin_1" [label="<f0> SourceModule| <f1> encodings.latin_1",shape="record"];
	"encodings.kz1048" [label="<f0> SourceModule| <f1> encodings.kz1048",shape="record"];
	"encodings.koi8_u" [label="<f0> SourceModule| <f1> encodings.koi8_u",shape="record"];
	"encodings.koi8_t" [label="<f0> SourceModule| <f1> encodings.koi8_t",shape="record"];
	"encodings.koi8_r" [label="<f0> SourceModule| <f1> encodings.koi8_r",shape="record"];
	"encodings.johab" [label="<f0> SourceModule| <f1> encodings.johab",shape="record"];
	"_codecs_kr" [label="<f0> Extension| <f1> _codecs_kr",shape="record"];
	"encodings.iso8859_9" [label="<f0> SourceModule| <f1> encodings.iso8859_9",shape="record"];
	"encodings.iso8859_8" [label="<f0> SourceModule| <f1> encodings.iso8859_8",shape="record"];
	"encodings.iso8859_7" [label="<f0> SourceModule| <f1> encodings.iso8859_7",shape="record"];
	"encodings.iso8859_6" [label="<f0> SourceModule| <f1> encodings.iso8859_6",shape="record"];
	"encodings.iso8859_5" [label="<f0> SourceModule| <f1> encodings.iso8859_5",shape="record"];
	"encodings.iso8859_4" [label="<f0> SourceModule| <f1> encodings.iso8859_4",shape="record"];
	"encodings.iso8859_3" [label="<f0> SourceModule| <f1> encodings.iso8859_3",shape="record"];
	"encodings.iso8859_2" [label="<f0> SourceModule| <f1> encodings.iso8859_2",shape="record"];
	"encodings.iso8859_16" [label="<f0> SourceModule| <f1> encodings.iso8859_16",shape="record"];
	"encodings.iso8859_15" [label="<f0> SourceModule| <f1> encodings.iso8859_15",shape="record"];
	"encodings.iso8859_14" [label="<f0> SourceModule| <f1> encodings.iso8859_14",shape="record"];
	"encodings.iso8859_13" [label="<f0> SourceModule| <f1> encodings.iso8859_13",shape="record"];
	"encodings.iso8859_11" [label="<f0> SourceModule| <f1> encodings.iso8859_11",shape="record"];
	"encodings.iso8859_10" [label="<f0> SourceModule| <f1> encodings.iso8859_10",shape="record"];
	"encodings.iso8859_1" [label="<f0> SourceModule| <f1> encodings.iso8859_1",shape="record"];
	"encodings.iso2022_kr" [label="<f0> SourceModule| <f1> encodings.iso2022_kr",shape="record"];
	"_codecs_iso2022" [label="<f0> Extension| <f1> _codecs_iso2022",shape="record"];
	"encodings.iso2022_jp_ext" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_ext",shape="record"];
	"encodings.iso2022_jp_3" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_3",shape="record"];
	"encodings.iso2022_jp_2004" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_2004",shape="record"];
	"encodings.iso2022_jp_2" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_2",shape="record"];
	"encodings.iso2022_jp_1" [label="<f0> SourceModule| <f1> encodings.iso2022_jp_1",shape="record"];
	"encodings.iso2022_jp" [label="<f0> SourceModule| <f1> encodings.iso2022_jp",shape="record"];
	"encodings.idna" [label="<f0> SourceModule| <f1> encodings.idna",shape="record"];
	"stringprep" [label="<f0> SourceModule| <f1> stringprep",shape="record"];
	"encodings.hz" [label="<f0> SourceModule| <f1> encodings.hz",shape="record"];
	"_codecs_cn" [label="<f0> Extension| <f1> _codecs_cn",shape="record"];
	"encodings.hp_roman8" [label="<f0> SourceModule| <f1> encodings.hp_roman8",shape="record"];
	"encodings.hex_codec" [label="<f0> SourceModule| <f1> encodings.hex_codec",shape="record"];
	"encodings.gbk" [label="<f0> SourceModule| <f1> encodings.gbk",shape="record"];
	"encodings.gb2312" [label="<f0> SourceModule| <f1> encodings.gb2312",shape="record"];
	"encodings.gb18030" [label="<f0> SourceModule| <f1> encodings.gb18030",shape="record"];
	"encodings.euc_kr" [label="<f0> SourceModule| <f1> encodings.euc_kr",shape="record"];
	"encodings.euc_jp" [label="<f0> SourceModule| <f1> encodings.euc_jp",shape="record"];
	"encodings.euc_jisx0213" [label="<f0> SourceModule| <f1> encodings.euc_jisx0213",shape="record"];
	"encodings.euc_jis_2004" [label="<f0> SourceModule| <f1> encodings.euc_jis_2004",shape="record"];
	"encodings.cp950" [label="<f0> SourceModule| <f1> encodings.cp950",shape="record"];
	"_codecs_tw" [label="<f0> Extension| <f1> _codecs_tw",shape="record"];
	"encodings.cp949" [label="<f0> SourceModule| <f1> encodings.cp949",shape="record"];
	"encodings.cp932" [label="<f0> SourceModule| <f1> encodings.cp932",shape="record"];
	"encodings.cp875" [label="<f0> SourceModule| <f1> encodings.cp875",shape="record"];
	"encodings.cp874" [label="<f0> SourceModule| <f1> encodings.cp874",shape="record"];
	"encodings.cp869" [label="<f0> SourceModule| <f1> encodings.cp869",shape="record"];
	"encodings.cp866" [label="<f0> SourceModule| <f1> encodings.cp866",shape="record"];
	"encodings.cp865" [label="<f0> SourceModule| <f1> encodings.cp865",shape="record"];
	"encodings.cp864" [label="<f0> SourceModule| <f1> encodings.cp864",shape="record"];
	"encodings.cp863" [label="<f0> SourceModule| <f1> encodings.cp863",shape="record"];
	"encodings.cp862" [label="<f0> SourceModule| <f1> encodings.cp862",shape="record"];
	"encodings.cp861" [label="<f0> SourceModule| <f1> encodings.cp861",shape="record"];
	"encodings.cp860" [label="<f0> SourceModule| <f1> encodings.cp860",shape="record"];
	"encodings.cp858" [label="<f0> SourceModule| <f1> encodings.cp858",shape="record"];
	"encodings.cp857" [label="<f0> SourceModule| <f1> encodings.cp857",shape="record"];
	"encodings.cp856" [label="<f0> SourceModule| <f1> encodings.cp856",shape="record"];
	"encodings.cp855" [label="<f0> SourceModule| <f1> encodings.cp855",shape="record"];
	"encodings.cp852" [label="<f0> SourceModule| <f1> encodings.cp852",shape="record"];
	"encodings.cp850" [label="<f0> SourceModule| <f1> encodings.cp850",shape="record"];
	"encodings.cp775" [label="<f0> SourceModule| <f1> encodings.cp775",shape="record"];
	"encodings.cp737" [label="<f0> SourceModule| <f1> encodings.cp737",shape="record"];
	"encodings.cp720" [label="<f0> SourceModule| <f1> encodings.cp720",shape="record"];
	"encodings.cp500" [label="<f0> SourceModule| <f1> encodings.cp500",shape="record"];
	"encodings.cp437" [label="<f0> SourceModule| <f1> encodings.cp437",shape="record"];
	"encodings.cp424" [label="<f0> SourceModule| <f1> encodings.cp424",shape="record"];
	"encodings.cp273" [label="<f0> SourceModule| <f1> encodings.cp273",shape="record"];
	"encodings.cp1258" [label="<f0> SourceModule| <f1> encodings.cp1258",shape="record"];
	"encodings.cp1257" [label="<f0> SourceModule| <f1> encodings.cp1257",shape="record"];
	"encodings.cp1256" [label="<f0> SourceModule| <f1> encodings.cp1256",shape="record"];
	"encodings.cp1255" [label="<f0> SourceModule| <f1> encodings.cp1255",shape="record"];
	"encodings.cp1254" [label="<f0> SourceModule| <f1> encodings.cp1254",shape="record"];
	"encodings.cp1253" [label="<f0> SourceModule| <f1> encodings.cp1253",shape="record"];
	"encodings.cp1252" [label="<f0> SourceModule| <f1> encodings.cp1252",shape="record"];
	"encodings.cp1251" [label="<f0> SourceModule| <f1> encodings.cp1251",shape="record"];
	"encodings.cp1250" [label="<f0> SourceModule| <f1> encodings.cp1250",shape="record"];
	"encodings.cp1140" [label="<f0> SourceModule| <f1> encodings.cp1140",shape="record"];
	"encodings.cp1125" [label="<f0> SourceModule| <f1> encodings.cp1125",shape="record"];
	"encodings.cp1026" [label="<f0> SourceModule| <f1> encodings.cp1026",shape="record"];
	"encodings.cp1006" [label="<f0> SourceModule| <f1> encodings.cp1006",shape="record"];
	"encodings.cp037" [label="<f0> SourceModule| <f1> encodings.cp037",shape="record"];
	"encodings.charmap" [label="<f0> SourceModule| <f1> encodings.charmap",shape="record"];
	"encodings.bz2_codec" [label="<f0> SourceModule| <f1> encodings.bz2_codec",shape="record"];
	"encodings.big5hkscs" [label="<f0> SourceModule| <f1> encodings.big5hkscs",shape="record"];
	"_codecs_hk" [label="<f0> Extension| <f1> _codecs_hk",shape="record"];
	"encodings.big5" [label="<f0> SourceModule| <f1> encodings.big5",shape="record"];
	"encodings.base64_codec" [label="<f0> SourceModule| <f1> encodings.base64_codec",shape="record"];
	"encodings.ascii" [label="<f0> SourceModule| <f1> encodings.ascii",shape="record"];
	"encodings.aliases" [label="<f0> SourceModule| <f1> encodings.aliases",shape="record"];
	"encodings" [label="<f0> Package| <f1> encodings",shape="record"];
	"re" [label="<f0> SourceModule| <f1> re",shape="record"];
	"_locale" [label="<f0> BuiltinModule| <f1> _locale",shape="record"];
	"copyreg" [label="<f0> SourceModule| <f1> copyreg",shape="record"];
	"sre_parse" [label="<f0> SourceModule| <f1> sre_parse",shape="record"];
	"_bootlocale" [label="<f0> SourceModule| <f1> _bootlocale",shape="record"];
	"functools" [label="<f0> SourceModule| <f1> functools",shape="record"];
	"_functools" [label="<f0> BuiltinModule| <f1> _functools",shape="record"];
	"abc" [label="<f0> SourceModule| <f1> abc",shape="record"];
	"_py_abc" [label="<f0> SourceModule| <f1> _py_abc",shape="record"];
	"_abc" [label="<f0> BuiltinModule| <f1> _abc",shape="record"];
	"_collections_abc" [label="<f0> SourceModule| <f1> _collections_abc",shape="record"];
	"sre_compile" [label="<f0> SourceModule| <f1> sre_compile",shape="record"];
	"heapq" [label="<f0> SourceModule| <f1> heapq",shape="record"];
	"_heapq" [label="<f0> Extension| <f1> _heapq",shape="record"];
	"weakref" [label="<f0> SourceModule| <f1> weakref",shape="record"];
	"keyword" [label="<f0> SourceModule| <f1> keyword",shape="record"];
	"linecache" [label="<f0> SourceModule| <f1> linecache",shape="record"];
	"operator" [label="<f0> SourceModule| <f1> operator",shape="record"];
	"enum" [label="<f0> SourceModule| <f1> enum",shape="record"];
	"os" [label="<f0> SourceModule| <f1> os",shape="record"];
	"traceback" [label="<f0> SourceModule| <f1> traceback",shape="record"];
	"_weakrefset" [label="<f0> SourceModule| <f1> _weakrefset",shape="record"];
	"types" [label="<f0> SourceModule| <f1> types",shape="record"];
	"locale" [label="<f0> SourceModule| <f1> locale",shape="record"];
	"sre_constants" [label="<f0> SourceModule| <f1> sre_constants",shape="record"];
	"collections.abc" [label="<f0> SourceModule| <f1> collections.abc",shape="record"];
	"collections" [label="<f0> Package| <f1> collections",shape="record"];
	"ntpath" [label="<f0> SourceModule| <f1> ntpath",shape="record"];
	"genericpath" [label="<f0> SourceModule| <f1> genericpath",shape="record"];
	"reprlib" [label="<f0> SourceModule| <f1> reprlib",shape="record"];
	"io" [label="<f0> SourceModule| <f1> io",shape="record"];
	"stat" [label="<f0> SourceModule| <f1> stat",shape="record"];
	"_stat" [label="<f0> BuiltinModule| <f1> _stat",shape="record"];
	"warnings" [label="<f0> SourceModule| <f1> warnings",shape="record"];
	"_pickle" [label="<f0> Extension| <f1> _pickle",shape="record"];
	"datetime" [label="<f0> SourceModule| <f1> datetime",shape="record"];
	"_strptime" [label="<f0> SourceModule| <f1> _strptime",shape="record"];
	"_datetime" [label="<f0> Extension| <f1> _datetime",shape="record"];
	"_posixsubprocess" [label="<f0> Extension| <f1> _posixsubprocess",shape="record"];
	"posixpath" [label="<f0> SourceModule| <f1> posixpath",shape="record"];
	"posix" [label="<f0> BuiltinModule| <f1> posix",shape="record"];
	"_sre" [label="<f0> BuiltinModule| <f1> _sre",shape="record"];
	"codecs" [label="<f0> SourceModule| <f1> codecs",shape="record"];
	"_codecs" [label="<f0> BuiltinModule| <f1> _codecs",shape="record"];
	"time" [label="<f0> BuiltinModule| <f1> time",shape="record"];
	"gc" [label="<f0> BuiltinModule| <f1> gc",shape="record"];
	subgraph "cluster_logging" {
		label="logging";
		"logging" -> "logging.handlers" [style="dotted"];
		"logging" -> "logging.config" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.bedrock.image" {
		label="litellm.llms.bedrock.image";
		"litellm.llms.bedrock.image" -> "litellm.llms.bedrock.image.cost_calculator" [style="dotted"];
		"litellm.llms.bedrock.image" -> "litellm.llms.bedrock.image.image_handler" [style="dotted"];
		"litellm.llms.bedrock.image" -> "litellm.llms.bedrock.image.amazon_stability1_transformation" [style="dotted"];
		"litellm.llms.bedrock.image" -> "litellm.llms.bedrock.image.amazon_stability3_transformation" [style="dotted"];
		"litellm.llms.bedrock.image" -> "litellm.llms.bedrock.image.amazon_nova_canvas_transformation" [style="dotted"];
	}
	subgraph "cluster_google.api_core.retry" {
		label="google.api_core.retry";
		"google.api_core.retry" -> "google.api_core.retry.retry_base" [style="dotted"];
		"google.api_core.retry" -> "google.api_core.retry.retry_unary" [style="dotted"];
		"google.api_core.retry" -> "google.api_core.retry.retry_unary_async" [style="dotted"];
		"google.api_core.retry" -> "google.api_core.retry.retry_streaming" [style="dotted"];
		"google.api_core.retry" -> "google.api_core.retry.retry_streaming_async" [style="dotted"];
	}
	subgraph "cluster_litellm.litellm_core_utils" {
		label="litellm.litellm_core_utils";
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.json_validation_rule" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.core_helpers" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.credential_accessor" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.default_encoding" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.exception_mapping_utils" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.get_litellm_params" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.get_llm_provider_logic" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.get_supported_openai_params" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.llm_request_utils" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.redact_messages" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.rules" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.streaming_handler" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.token_counter" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.thread_pool_executor" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.litellm_logging" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.sensitive_data_masker" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.dd_tracing" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.safe_json_dumps" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.logging_utils" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.asyncify" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.duration_parser" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.llm_cost_calc" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.prompt_templates" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.safe_json_loads" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.health_check_utils" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.mock_functions" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.fallback_utils" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.streaming_chunk_builder_utils" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.realtime_streaming" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.dot_notation_indexing" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.model_param_helper" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.initialize_dynamic_callback_params" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.specialty_caches" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.llm_response_utils" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.audio_utils" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.logging_callback_manager" [style="dotted"];
		"litellm.litellm_core_utils" -> "litellm.litellm_core_utils.get_model_cost_map" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vertex_ai.files" {
		label="litellm.llms.vertex_ai.files";
		"litellm.llms.vertex_ai.files" -> "litellm.llms.vertex_ai.files.transformation" [style="dotted"];
		"litellm.llms.vertex_ai.files" -> "litellm.llms.vertex_ai.files.handler" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.infinity" {
		label="litellm.llms.infinity";
		"litellm.llms.infinity" -> "litellm.llms.infinity.common_utils" [style="dotted"];
		"litellm.llms.infinity" -> "litellm.llms.infinity.embedding" [style="dotted"];
		"litellm.llms.infinity" -> "litellm.llms.infinity.rerank" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.llm_checker" {
		label="langchain.chains.llm_checker";
		"langchain.chains.llm_checker" -> "langchain.chains.llm_checker.base" [style="dotted"];
		"langchain.chains.llm_checker" -> "langchain.chains.llm_checker.prompt" [style="dotted"];
	}
	subgraph "cluster_distro" {
		label="distro";
		"distro" -> "distro.distro" [style="dotted"];
	}
	subgraph "cluster_backoff" {
		label="backoff";
		"backoff" -> "backoff._async" [style="dotted"];
		"backoff" -> "backoff._sync" [style="dotted"];
		"backoff" -> "backoff._decorator" [style="dotted"];
		"backoff" -> "backoff._jitter" [style="dotted"];
		"backoff" -> "backoff._wait_gen" [style="dotted"];
		"backoff" -> "backoff._common" [style="dotted"];
		"backoff" -> "backoff._typing" [style="dotted"];
	}
	subgraph "cluster_pandas.io.parsers" {
		label="pandas.io.parsers";
		"pandas.io.parsers" -> "pandas.io.parsers.readers" [style="dotted"];
		"pandas.io.parsers" -> "pandas.io.parsers.arrow_parser_wrapper" [style="dotted"];
		"pandas.io.parsers" -> "pandas.io.parsers.base_parser" [style="dotted"];
		"pandas.io.parsers" -> "pandas.io.parsers.c_parser_wrapper" [style="dotted"];
		"pandas.io.parsers" -> "pandas.io.parsers.python_parser" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.stackexchange" {
		label="langchain_community.tools.stackexchange";
		"langchain_community.tools.stackexchange" -> "langchain_community.tools.stackexchange.tool" [style="dotted"];
	}
	subgraph "cluster_docutils.parsers" {
		label="docutils.parsers";
		"docutils.parsers" -> "docutils.parsers.rst" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.agent_toolkits" {
		label="langchain.agents.agent_toolkits";
		"langchain.agents.agent_toolkits" -> "langchain.agents.agent_toolkits.vectorstore" [style="dotted"];
		"langchain.agents.agent_toolkits" -> "langchain.agents.agent_toolkits.conversational_retrieval" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.qa" {
		label="langchain.evaluation.qa";
		"langchain.evaluation.qa" -> "langchain.evaluation.qa.eval_chain" [style="dotted"];
		"langchain.evaluation.qa" -> "langchain.evaluation.qa.generate_chain" [style="dotted"];
		"langchain.evaluation.qa" -> "langchain.evaluation.qa.generate_prompt" [style="dotted"];
		"langchain.evaluation.qa" -> "langchain.evaluation.qa.eval_prompt" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.anthropic.experimental_pass_through.messages" {
		label="litellm.llms.anthropic.experimental_pass_through.messages";
		"litellm.llms.anthropic.experimental_pass_through.messages" -> "litellm.llms.anthropic.experimental_pass_through.messages.transformation" [style="dotted"];
		"litellm.llms.anthropic.experimental_pass_through.messages" -> "litellm.llms.anthropic.experimental_pass_through.messages.handler" [style="dotted"];
		"litellm.llms.anthropic.experimental_pass_through.messages" -> "litellm.llms.anthropic.experimental_pass_through.messages.utils" [style="dotted"];
	}
	subgraph "cluster_langchain.chains" {
		label="langchain.chains";
		"langchain.chains" -> "langchain.chains.LLMChain" [style="dotted"];
		"langchain.chains" -> "langchain.chains.ReduceDocumentsChain" [style="dotted"];
		"langchain.chains" -> "langchain.chains.ConversationChain" [style="dotted"];
		"langchain.chains" -> "langchain.chains.LLMCheckerChain" [style="dotted"];
		"langchain.chains" -> "langchain.chains.LLMMathChain" [style="dotted"];
		"langchain.chains" -> "langchain.chains.QAWithSourcesChain" [style="dotted"];
		"langchain.chains" -> "langchain.chains.VectorDBQA" [style="dotted"];
		"langchain.chains" -> "langchain.chains.VectorDBQAWithSourcesChain" [style="dotted"];
		"langchain.chains" -> "langchain.chains.prompt_selector" [style="dotted"];
		"langchain.chains" -> "langchain.chains.openai_functions" [style="dotted"];
		"langchain.chains" -> "langchain.chains.structured_output" [style="dotted"];
		"langchain.chains" -> "langchain.chains.base" [style="dotted"];
		"langchain.chains" -> "langchain.chains.llm" [style="dotted"];
		"langchain.chains" -> "langchain.chains.qa_with_sources" [style="dotted"];
		"langchain.chains" -> "langchain.chains.question_answering" [style="dotted"];
		"langchain.chains" -> "langchain.chains.combine_documents" [style="dotted"];
		"langchain.chains" -> "langchain.chains.retrieval_qa" [style="dotted"];
		"langchain.chains" -> "langchain.chains.query_constructor" [style="dotted"];
		"langchain.chains" -> "langchain.chains.hyde" [style="dotted"];
		"langchain.chains" -> "langchain.chains.api" [style="dotted"];
		"langchain.chains" -> "langchain.chains.llm_math" [style="dotted"];
		"langchain.chains" -> "langchain.chains.loading" [style="dotted"];
		"langchain.chains" -> "langchain.chains.llm_requests" [style="dotted"];
		"langchain.chains" -> "langchain.chains.sequential" [style="dotted"];
		"langchain.chains" -> "langchain.chains.llm_checker" [style="dotted"];
		"langchain.chains" -> "langchain.chains.constitutional_ai" [style="dotted"];
	}
	subgraph "cluster_propcache" {
		label="propcache";
		"propcache" -> "propcache.api" [style="dotted"];
		"propcache" -> "propcache._helpers" [style="dotted"];
		"propcache" -> "propcache._helpers_py" [style="dotted"];
		"propcache" -> "propcache._helpers_c" [style="dotted"];
	}
	subgraph "cluster_pyasn1.compat" {
		label="pyasn1.compat";
		"pyasn1.compat" -> "pyasn1.compat.integer" [style="dotted"];
	}
	subgraph "cluster_litellm.litellm_core_utils.prompt_templates" {
		label="litellm.litellm_core_utils.prompt_templates";
		"litellm.litellm_core_utils.prompt_templates" -> "litellm.litellm_core_utils.prompt_templates.common_utils" [style="dotted"];
		"litellm.litellm_core_utils.prompt_templates" -> "litellm.litellm_core_utils.prompt_templates.factory" [style="dotted"];
		"litellm.litellm_core_utils.prompt_templates" -> "litellm.litellm_core_utils.prompt_templates.image_handling" [style="dotted"];
	}
	subgraph "cluster_pandas._testing" {
		label="pandas._testing";
		"pandas._testing" -> "pandas._testing._io" [style="dotted"];
		"pandas._testing" -> "pandas._testing._warnings" [style="dotted"];
		"pandas._testing" -> "pandas._testing.asserters" [style="dotted"];
		"pandas._testing" -> "pandas._testing.compat" [style="dotted"];
		"pandas._testing" -> "pandas._testing.contexts" [style="dotted"];
	}
	subgraph "cluster_wsgiref" {
		label="wsgiref";
		"wsgiref" -> "wsgiref.handlers" [style="dotted"];
		"wsgiref" -> "wsgiref.util" [style="dotted"];
		"wsgiref" -> "wsgiref.headers" [style="dotted"];
		"wsgiref" -> "wsgiref.simple_server" [style="dotted"];
	}
	subgraph "cluster_langchain.output_parsers" {
		label="langchain.output_parsers";
		"langchain.output_parsers" -> "langchain.output_parsers.boolean" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.combining" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.datetime" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.enum" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.fix" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.pandas_dataframe" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.regex" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.regex_dict" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.retry" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.structured" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.yaml" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.format_instructions" [style="dotted"];
		"langchain.output_parsers" -> "langchain.output_parsers.prompts" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.util" {
		label="sqlalchemy.util";
		"sqlalchemy.util" -> "sqlalchemy.util.compat" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util.preloaded" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util._collections" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util.langhelpers" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util.topological" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util.queue" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util.concurrency" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util.deprecations" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util.typing" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util._has_cy" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util._py_collections" [style="dotted"];
		"sqlalchemy.util" -> "sqlalchemy.util._concurrency_py3k" [style="dotted"];
	}
	subgraph "cluster_openai.types.fine_tuning" {
		label="openai.types.fine_tuning";
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.fine_tuning_job" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.job_list_params" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.job_create_params" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.fine_tuning_job_event" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.job_list_events_params" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.fine_tuning_job_integration" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.fine_tuning_job_wandb_integration" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.fine_tuning_job_wandb_integration_object" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.checkpoints" [style="dotted"];
		"openai.types.fine_tuning" -> "openai.types.fine_tuning.jobs" [style="dotted"];
	}
	subgraph "cluster_litellm.vector_stores" {
		label="litellm.vector_stores";
		"litellm.vector_stores" -> "litellm.vector_stores.vector_store_registry" [style="dotted"];
	}
	subgraph "cluster_pandas.io.sas" {
		label="pandas.io.sas";
		"pandas.io.sas" -> "pandas.io.sas.sasreader" [style="dotted"];
		"pandas.io.sas" -> "pandas.io.sas.sas7bdat" [style="dotted"];
		"pandas.io.sas" -> "pandas.io.sas.sas_constants" [style="dotted"];
		"pandas.io.sas" -> "pandas.io.sas.sas_xport" [style="dotted"];
	}
	subgraph "cluster_litellm.integrations.email_templates" {
		label="litellm.integrations.email_templates";
		"litellm.integrations.email_templates" -> "litellm.integrations.email_templates.templates" [style="dotted"];
	}
	subgraph "cluster_anyio" {
		label="anyio";
		"anyio" -> "anyio.to_thread" [style="dotted"];
		"anyio" -> "anyio._backends" [style="dotted"];
		"anyio" -> "anyio._core" [style="dotted"];
		"anyio" -> "anyio.lowlevel" [style="dotted"];
		"anyio" -> "anyio.streams" [style="dotted"];
		"anyio" -> "anyio.from_thread" [style="dotted"];
		"anyio" -> "anyio.abc" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.sql_database" {
		label="langchain_community.tools.sql_database";
		"langchain_community.tools.sql_database" -> "langchain_community.tools.sql_database.tool" [style="dotted"];
		"langchain_community.tools.sql_database" -> "langchain_community.tools.sql_database.prompt" [style="dotted"];
	}
	subgraph "cluster_concurrent" {
		label="concurrent";
		"concurrent" -> "concurrent.futures" [style="dotted"];
	}
	subgraph "cluster_dateutil.zoneinfo" {
		label="dateutil.zoneinfo";
	}
	subgraph "cluster_langchain_core.tools" {
		label="langchain_core.tools";
		"langchain_core.tools" -> "langchain_core.tools.simple" [style="dotted"];
		"langchain_core.tools" -> "langchain_core.tools.base" [style="dotted"];
		"langchain_core.tools" -> "langchain_core.tools.convert" [style="dotted"];
		"langchain_core.tools" -> "langchain_core.tools.render" [style="dotted"];
		"langchain_core.tools" -> "langchain_core.tools.retriever" [style="dotted"];
		"langchain_core.tools" -> "langchain_core.tools.structured" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.management_helpers" {
		label="litellm.proxy.management_helpers";
		"litellm.proxy.management_helpers" -> "litellm.proxy.management_helpers.audit_logs" [style="dotted"];
		"litellm.proxy.management_helpers" -> "litellm.proxy.management_helpers.team_member_permission_checks" [style="dotted"];
		"litellm.proxy.management_helpers" -> "litellm.proxy.management_helpers.utils" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vllm.completion" {
		label="litellm.llms.vllm.completion";
		"litellm.llms.vllm.completion" -> "litellm.llms.vllm.completion.handler" [style="dotted"];
		"litellm.llms.vllm.completion" -> "litellm.llms.vllm.completion.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.nvidia_nim" {
		label="litellm.llms.nvidia_nim";
		"litellm.llms.nvidia_nim" -> "litellm.llms.nvidia_nim.embed" [style="dotted"];
		"litellm.llms.nvidia_nim" -> "litellm.llms.nvidia_nim.chat" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.cohere.rerank_v2" {
		label="litellm.llms.cohere.rerank_v2";
		"litellm.llms.cohere.rerank_v2" -> "litellm.llms.cohere.rerank_v2.transformation" [style="dotted"];
	}
	subgraph "cluster_jsonschema_specifications" {
		label="jsonschema_specifications";
		"jsonschema_specifications" -> "jsonschema_specifications._core" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.office365" {
		label="langchain_community.tools.office365";
		"langchain_community.tools.office365" -> "langchain_community.tools.office365.create_draft_message" [style="dotted"];
		"langchain_community.tools.office365" -> "langchain_community.tools.office365.events_search" [style="dotted"];
		"langchain_community.tools.office365" -> "langchain_community.tools.office365.messages_search" [style="dotted"];
		"langchain_community.tools.office365" -> "langchain_community.tools.office365.send_event" [style="dotted"];
		"langchain_community.tools.office365" -> "langchain_community.tools.office365.send_message" [style="dotted"];
		"langchain_community.tools.office365" -> "langchain_community.tools.office365.utils" [style="dotted"];
		"langchain_community.tools.office365" -> "langchain_community.tools.office365.base" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.powerbi" {
		label="langchain_community.agent_toolkits.powerbi";
		"langchain_community.agent_toolkits.powerbi" -> "langchain_community.agent_toolkits.powerbi.base" [style="dotted"];
		"langchain_community.agent_toolkits.powerbi" -> "langchain_community.agent_toolkits.powerbi.chat_base" [style="dotted"];
		"langchain_community.agent_toolkits.powerbi" -> "langchain_community.agent_toolkits.powerbi.toolkit" [style="dotted"];
		"langchain_community.agent_toolkits.powerbi" -> "langchain_community.agent_toolkits.powerbi.prompt" [style="dotted"];
	}
	subgraph "cluster_wcwidth" {
		label="wcwidth";
		"wcwidth" -> "wcwidth.wcwidth" [style="dotted"];
		"wcwidth" -> "wcwidth.table_vs16" [style="dotted"];
		"wcwidth" -> "wcwidth.table_wide" [style="dotted"];
		"wcwidth" -> "wcwidth.table_zero" [style="dotted"];
		"wcwidth" -> "wcwidth.unicode_versions" [style="dotted"];
	}
	subgraph "cluster_pygments.filters" {
		label="pygments.filters";
	}
	subgraph "cluster_joblib.externals.loky" {
		label="joblib.externals.loky";
		"joblib.externals.loky" -> "joblib.externals.loky._base" [style="dotted"];
		"joblib.externals.loky" -> "joblib.externals.loky.reusable_executor" [style="dotted"];
		"joblib.externals.loky" -> "joblib.externals.loky.cloudpickle_wrapper" [style="dotted"];
		"joblib.externals.loky" -> "joblib.externals.loky.process_executor" [style="dotted"];
		"joblib.externals.loky" -> "joblib.externals.loky.backend" [style="dotted"];
		"joblib.externals.loky" -> "joblib.externals.loky.initializers" [style="dotted"];
	}
	subgraph "cluster_pydeck.data_utils" {
		label="pydeck.data_utils";
		"pydeck.data_utils" -> "pydeck.data_utils.viewport_helpers" [style="dotted"];
		"pydeck.data_utils" -> "pydeck.data_utils.type_checking" [style="dotted"];
		"pydeck.data_utils" -> "pydeck.data_utils.color_scales" [style="dotted"];
		"pydeck.data_utils" -> "pydeck.data_utils.binary_transfer" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.predibase" {
		label="litellm.llms.predibase";
		"litellm.llms.predibase" -> "litellm.llms.predibase.common_utils" [style="dotted"];
		"litellm.llms.predibase" -> "litellm.llms.predibase.chat" [style="dotted"];
	}
	subgraph "cluster_isoduration.formatter" {
		label="isoduration.formatter";
		"isoduration.formatter" -> "isoduration.formatter.checking" [style="dotted"];
		"isoduration.formatter" -> "isoduration.formatter.formatting" [style="dotted"];
		"isoduration.formatter" -> "isoduration.formatter.exceptions" [style="dotted"];
	}
	subgraph "cluster_tiktoken_ext" {
		label="tiktoken_ext";
	}
	subgraph "cluster_litellm.llms.azure_ai.rerank" {
		label="litellm.llms.azure_ai.rerank";
		"litellm.llms.azure_ai.rerank" -> "litellm.llms.azure_ai.rerank.transformation" [style="dotted"];
	}
	subgraph "cluster_pydantic_settings" {
		label="pydantic_settings";
		"pydantic_settings" -> "pydantic_settings.exceptions" [style="dotted"];
		"pydantic_settings" -> "pydantic_settings.main" [style="dotted"];
		"pydantic_settings" -> "pydantic_settings.sources" [style="dotted"];
		"pydantic_settings" -> "pydantic_settings.version" [style="dotted"];
		"pydantic_settings" -> "pydantic_settings.utils" [style="dotted"];
	}
	subgraph "cluster_pygments" {
		label="pygments";
		"pygments" -> "pygments.lexer" [style="dotted"];
		"pygments" -> "pygments.formatter" [style="dotted"];
		"pygments" -> "pygments.unistring" [style="dotted"];
		"pygments" -> "pygments.formatters" [style="dotted"];
		"pygments" -> "pygments.lexers" [style="dotted"];
		"pygments" -> "pygments.styles" [style="dotted"];
		"pygments" -> "pygments.util" [style="dotted"];
		"pygments" -> "pygments.plugin" [style="dotted"];
		"pygments" -> "pygments.style" [style="dotted"];
		"pygments" -> "pygments.token" [style="dotted"];
		"pygments" -> "pygments.scanner" [style="dotted"];
		"pygments" -> "pygments.console" [style="dotted"];
		"pygments" -> "pygments.filter" [style="dotted"];
		"pygments" -> "pygments.filters" [style="dotted"];
		"pygments" -> "pygments.regexopt" [style="dotted"];
		"pygments" -> "pygments.modeline" [style="dotted"];
	}
	subgraph "cluster_markdown_it.presets" {
		label="markdown_it.presets";
		"markdown_it.presets" -> "markdown_it.presets.commonmark" [style="dotted"];
		"markdown_it.presets" -> "markdown_it.presets.default" [style="dotted"];
		"markdown_it.presets" -> "markdown_it.presets.zero" [style="dotted"];
	}
	subgraph "cluster_IPython.core" {
		label="IPython.core";
		"IPython.core" -> "IPython.core.page" [style="dotted"];
		"IPython.core" -> "IPython.core.oinspect" [style="dotted"];
		"IPython.core" -> "IPython.core.magic" [style="dotted"];
		"IPython.core" -> "IPython.core.prefilter" [style="dotted"];
		"IPython.core" -> "IPython.core.ultratb" [style="dotted"];
		"IPython.core" -> "IPython.core.compilerop" [style="dotted"];
		"IPython.core" -> "IPython.core.magic_arguments" [style="dotted"];
		"IPython.core" -> "IPython.core.release" [style="dotted"];
		"IPython.core" -> "IPython.core.usage" [style="dotted"];
		"IPython.core" -> "IPython.core.debugger" [style="dotted"];
		"IPython.core" -> "IPython.core.payloadpage" [style="dotted"];
		"IPython.core" -> "IPython.core.display_functions" [style="dotted"];
		"IPython.core" -> "IPython.core.display" [style="dotted"];
		"IPython.core" -> "IPython.core.interactiveshell" [style="dotted"];
		"IPython.core" -> "IPython.core.getipython" [style="dotted"];
		"IPython.core" -> "IPython.core.pylabtools" [style="dotted"];
		"IPython.core" -> "IPython.core.displaypub" [style="dotted"];
		"IPython.core" -> "IPython.core.displayhook" [style="dotted"];
		"IPython.core" -> "IPython.core.error" [style="dotted"];
		"IPython.core" -> "IPython.core.hooks" [style="dotted"];
		"IPython.core" -> "IPython.core.alias" [style="dotted"];
		"IPython.core" -> "IPython.core.autocall" [style="dotted"];
		"IPython.core" -> "IPython.core.builtin_trap" [style="dotted"];
		"IPython.core" -> "IPython.core.display_trap" [style="dotted"];
		"IPython.core" -> "IPython.core.events" [style="dotted"];
		"IPython.core" -> "IPython.core.extensions" [style="dotted"];
		"IPython.core" -> "IPython.core.formatters" [style="dotted"];
		"IPython.core" -> "IPython.core.history" [style="dotted"];
		"IPython.core" -> "IPython.core.inputtransformer2" [style="dotted"];
		"IPython.core" -> "IPython.core.logger" [style="dotted"];
		"IPython.core" -> "IPython.core.macro" [style="dotted"];
		"IPython.core" -> "IPython.core.payload" [style="dotted"];
		"IPython.core" -> "IPython.core.profiledir" [style="dotted"];
		"IPython.core" -> "IPython.core.async_helpers" [style="dotted"];
		"IPython.core" -> "IPython.core.completer" [style="dotted"];
		"IPython.core" -> "IPython.core.completerlib" [style="dotted"];
		"IPython.core" -> "IPython.core.magics" [style="dotted"];
		"IPython.core" -> "IPython.core.guarded_eval" [style="dotted"];
		"IPython.core" -> "IPython.core.latex_symbols" [style="dotted"];
		"IPython.core" -> "IPython.core.excolors" [style="dotted"];
		"IPython.core" -> "IPython.core.crashhandler" [style="dotted"];
		"IPython.core" -> "IPython.core.application" [style="dotted"];
		"IPython.core" -> "IPython.core.shellapp" [style="dotted"];
		"IPython.core" -> "IPython.core.splitinput" [style="dotted"];
	}
	subgraph "cluster_httpcore._async" {
		label="httpcore._async";
		"httpcore._async" -> "httpcore._async.connection" [style="dotted"];
		"httpcore._async" -> "httpcore._async.connection_pool" [style="dotted"];
		"httpcore._async" -> "httpcore._async.http11" [style="dotted"];
		"httpcore._async" -> "httpcore._async.http_proxy" [style="dotted"];
		"httpcore._async" -> "httpcore._async.interfaces" [style="dotted"];
		"httpcore._async" -> "httpcore._async.http2" [style="dotted"];
		"httpcore._async" -> "httpcore._async.socks_proxy" [style="dotted"];
	}
	subgraph "cluster_google.oauth2" {
		label="google.oauth2";
		"google.oauth2" -> "google.oauth2._client" [style="dotted"];
		"google.oauth2" -> "google.oauth2.service_account" [style="dotted"];
		"google.oauth2" -> "google.oauth2.webauthn_handler_factory" [style="dotted"];
		"google.oauth2" -> "google.oauth2.challenges" [style="dotted"];
		"google.oauth2" -> "google.oauth2.reauth" [style="dotted"];
		"google.oauth2" -> "google.oauth2.credentials" [style="dotted"];
		"google.oauth2" -> "google.oauth2.utils" [style="dotted"];
		"google.oauth2" -> "google.oauth2.sts" [style="dotted"];
		"google.oauth2" -> "google.oauth2.gdch_credentials" [style="dotted"];
		"google.oauth2" -> "google.oauth2.webauthn_types" [style="dotted"];
		"google.oauth2" -> "google.oauth2.webauthn_handler" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.cyextension" {
		label="sqlalchemy.cyextension";
		"sqlalchemy.cyextension" -> "sqlalchemy.cyextension.collections" [style="dotted"];
		"sqlalchemy.cyextension" -> "sqlalchemy.cyextension.immutabledict" [style="dotted"];
		"sqlalchemy.cyextension" -> "sqlalchemy.cyextension.processors" [style="dotted"];
		"sqlalchemy.cyextension" -> "sqlalchemy.cyextension.resultproxy" [style="dotted"];
		"sqlalchemy.cyextension" -> "sqlalchemy.cyextension.util" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.file_service" {
		label="google.ai.generativelanguage_v1beta.services.file_service";
		"google.ai.generativelanguage_v1beta.services.file_service" -> "google.ai.generativelanguage_v1beta.services.file_service.pagers" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.file_service" -> "google.ai.generativelanguage_v1beta.services.file_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.file_service" -> "google.ai.generativelanguage_v1beta.services.file_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.file_service" -> "google.ai.generativelanguage_v1beta.services.file_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.conversational" {
		label="langchain.agents.conversational";
		"langchain.agents.conversational" -> "langchain.agents.conversational.base" [style="dotted"];
		"langchain.agents.conversational" -> "langchain.agents.conversational.output_parser" [style="dotted"];
		"langchain.agents.conversational" -> "langchain.agents.conversational.prompt" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.openai_like.chat" {
		label="litellm.llms.openai_like.chat";
		"litellm.llms.openai_like.chat" -> "litellm.llms.openai_like.chat.handler" [style="dotted"];
		"litellm.llms.openai_like.chat" -> "litellm.llms.openai_like.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.litellm_core_utils.specialty_caches" {
		label="litellm.litellm_core_utils.specialty_caches";
		"litellm.litellm_core_utils.specialty_caches" -> "litellm.litellm_core_utils.specialty_caches.dynamic_logging_cache" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.deepinfra.chat" {
		label="litellm.llms.deepinfra.chat";
		"litellm.llms.deepinfra.chat" -> "litellm.llms.deepinfra.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_numpy.f2py._backends" {
		label="numpy.f2py._backends";
		"numpy.f2py._backends" -> "numpy.f2py._backends._meson" [style="dotted"];
		"numpy.f2py._backends" -> "numpy.f2py._backends._distutils" [style="dotted"];
		"numpy.f2py._backends" -> "numpy.f2py._backends._backend" [style="dotted"];
	}
	subgraph "cluster_pyDatalog" {
		label="pyDatalog";
		"pyDatalog" -> "pyDatalog.version" [style="dotted"];
		"pyDatalog" -> "pyDatalog.util" [style="dotted"];
		"pyDatalog" -> "pyDatalog.pyEngine" [style="dotted"];
		"pyDatalog" -> "pyDatalog.UserList" [style="dotted"];
		"pyDatalog" -> "pyDatalog.pyParser" [style="dotted"];
		"pyDatalog" -> "pyDatalog.Logic" [style="dotted"];
		"pyDatalog" -> "pyDatalog.pyDatalog" [style="dotted"];
		"pyDatalog" -> "pyDatalog.Aggregate" [style="dotted"];
	}
	subgraph "cluster_smmap" {
		label="smmap";
		"smmap" -> "smmap.mman" [style="dotted"];
		"smmap" -> "smmap.buf" [style="dotted"];
		"smmap" -> "smmap.util" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.watsonx.embed" {
		label="litellm.llms.watsonx.embed";
		"litellm.llms.watsonx.embed" -> "litellm.llms.watsonx.embed.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.fireworks_ai.embed" {
		label="litellm.llms.fireworks_ai.embed";
		"litellm.llms.fireworks_ai.embed" -> "litellm.llms.fireworks_ai.embed.fireworks_ai_transformation" [style="dotted"];
	}
	subgraph "cluster_requests_toolbelt" {
		label="requests_toolbelt";
		"requests_toolbelt" -> "requests_toolbelt.adapters" [style="dotted"];
		"requests_toolbelt" -> "requests_toolbelt.multipart" [style="dotted"];
		"requests_toolbelt" -> "requests_toolbelt.streaming_iterator" [style="dotted"];
		"requests_toolbelt" -> "requests_toolbelt.auth" [style="dotted"];
		"requests_toolbelt" -> "requests_toolbelt.utils" [style="dotted"];
		"requests_toolbelt" -> "requests_toolbelt._compat" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.arxiv" {
		label="langchain_community.tools.arxiv";
		"langchain_community.tools.arxiv" -> "langchain_community.tools.arxiv.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.gmail" {
		label="langchain_community.agent_toolkits.gmail";
		"langchain_community.agent_toolkits.gmail" -> "langchain_community.agent_toolkits.gmail.toolkit" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.openapi" {
		label="langchain_community.agent_toolkits.openapi";
		"langchain_community.agent_toolkits.openapi" -> "langchain_community.agent_toolkits.openapi.base" [style="dotted"];
		"langchain_community.agent_toolkits.openapi" -> "langchain_community.agent_toolkits.openapi.toolkit" [style="dotted"];
		"langchain_community.agent_toolkits.openapi" -> "langchain_community.agent_toolkits.openapi.prompt" [style="dotted"];
	}
	subgraph "cluster_google.api_core.operations_v1.transports" {
		label="google.api_core.operations_v1.transports";
		"google.api_core.operations_v1.transports" -> "google.api_core.operations_v1.transports.base" [style="dotted"];
		"google.api_core.operations_v1.transports" -> "google.api_core.operations_v1.transports.rest" [style="dotted"];
		"google.api_core.operations_v1.transports" -> "google.api_core.operations_v1.transports.rest_asyncio" [style="dotted"];
	}
	subgraph "cluster_jedi.inference.compiled.subprocess" {
		label="jedi.inference.compiled.subprocess";
		"jedi.inference.compiled.subprocess" -> "jedi.inference.compiled.subprocess.functions" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.oobabooga.chat" {
		label="litellm.llms.oobabooga.chat";
		"litellm.llms.oobabooga.chat" -> "litellm.llms.oobabooga.chat.oobabooga" [style="dotted"];
		"litellm.llms.oobabooga.chat" -> "litellm.llms.oobabooga.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_openai.types.beta.threads.runs" {
		label="openai.types.beta.threads.runs";
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.run_step" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.tool_call" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.run_step_delta" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.tool_call_delta" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.run_step_include" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.step_list_params" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.function_tool_call" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.run_step_delta_event" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.step_retrieve_params" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.code_interpreter_logs" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.file_search_tool_call" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.tool_call_delta_object" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.tool_calls_step_details" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.function_tool_call_delta" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.code_interpreter_tool_call" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.file_search_tool_call_delta" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.run_step_delta_message_delta" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.code_interpreter_output_image" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.message_creation_step_details" [style="dotted"];
		"openai.types.beta.threads.runs" -> "openai.types.beta.threads.runs.code_interpreter_tool_call_delta" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.predibase.chat" {
		label="litellm.llms.predibase.chat";
		"litellm.llms.predibase.chat" -> "litellm.llms.predibase.chat.handler" [style="dotted"];
		"litellm.llms.predibase.chat" -> "litellm.llms.predibase.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_openai.resources.uploads" {
		label="openai.resources.uploads";
		"openai.resources.uploads" -> "openai.resources.uploads.parts" [style="dotted"];
		"openai.resources.uploads" -> "openai.resources.uploads.uploads" [style="dotted"];
	}
	subgraph "cluster_yt_dlp.downloader" {
		label="yt_dlp.downloader";
		"yt_dlp.downloader" -> "yt_dlp.downloader.common" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.dash" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.external" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.f4m" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.fc2" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.hls" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.http" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.ism" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.mhtml" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.niconico" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.rtmp" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.rtsp" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.websocket" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.youtube_live_chat" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.bunnycdn" [style="dotted"];
		"yt_dlp.downloader" -> "yt_dlp.downloader.fragment" [style="dotted"];
	}
	subgraph "cluster_collections" {
		label="collections";
		"collections" -> "collections.Mapping" [style="dotted"];
		"collections" -> "collections.MutableMapping" [style="dotted"];
		"collections" -> "collections.Callable" [style="dotted"];
		"collections" -> "collections.Sequence" [style="dotted"];
		"collections" -> "collections.MutableSequence" [style="dotted"];
		"collections" -> "collections.Iterable" [style="dotted"];
		"collections" -> "collections.MutableSet" [style="dotted"];
		"collections" -> "collections.abc" [style="dotted"];
	}
	subgraph "cluster_xml.parsers" {
		label="xml.parsers";
		"xml.parsers" -> "xml.parsers.expat" [style="dotted"];
	}
	subgraph "cluster_pyarrow.tests" {
		label="pyarrow.tests";
		"pyarrow.tests" -> "pyarrow.tests.util" [style="dotted"];
	}
	subgraph "cluster_langchain_core.prompts" {
		label="langchain_core.prompts";
		"langchain_core.prompts" -> "langchain_core.prompts.base" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.chat" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.dict" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.few_shot" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.few_shot_with_templates" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.loading" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.pipeline" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.prompt" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.string" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.image" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.message" [style="dotted"];
		"langchain_core.prompts" -> "langchain_core.prompts.structured" [style="dotted"];
	}
	subgraph "cluster_kivy.graphics.cgl_backend" {
		label="kivy.graphics.cgl_backend";
		"kivy.graphics.cgl_backend" -> "kivy.graphics.cgl_backend.cgl_glew" [style="dotted"];
		"kivy.graphics.cgl_backend" -> "kivy.graphics.cgl_backend.cgl_gl" [style="dotted"];
		"kivy.graphics.cgl_backend" -> "kivy.graphics.cgl_backend.cgl_sdl2" [style="dotted"];
		"kivy.graphics.cgl_backend" -> "kivy.graphics.cgl_backend.cgl_mock" [style="dotted"];
		"kivy.graphics.cgl_backend" -> "kivy.graphics.cgl_backend.cgl_debug" [style="dotted"];
	}
	subgraph "cluster_litellm.integrations.gcs_bucket" {
		label="litellm.integrations.gcs_bucket";
		"litellm.integrations.gcs_bucket" -> "litellm.integrations.gcs_bucket.gcs_bucket_base" [style="dotted"];
		"litellm.integrations.gcs_bucket" -> "litellm.integrations.gcs_bucket.gcs_bucket" [style="dotted"];
	}
	subgraph "cluster_tomli" {
		label="tomli";
		"tomli" -> "tomli._parser" [style="dotted"];
		"tomli" -> "tomli._re" [style="dotted"];
		"tomli" -> "tomli._types" [style="dotted"];
	}
	subgraph "cluster_openai.resources.beta.threads.runs" {
		label="openai.resources.beta.threads.runs";
		"openai.resources.beta.threads.runs" -> "openai.resources.beta.threads.runs.runs" [style="dotted"];
		"openai.resources.beta.threads.runs" -> "openai.resources.beta.threads.runs.steps" [style="dotted"];
	}
	subgraph "cluster_dotenv" {
		label="dotenv";
		"dotenv" -> "dotenv.main" [style="dotted"];
		"dotenv" -> "dotenv.ipython" [style="dotted"];
		"dotenv" -> "dotenv.parser" [style="dotted"];
		"dotenv" -> "dotenv.variables" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.nlp_cloud.chat" {
		label="litellm.llms.nlp_cloud.chat";
		"litellm.llms.nlp_cloud.chat" -> "litellm.llms.nlp_cloud.chat.handler" [style="dotted"];
		"litellm.llms.nlp_cloud.chat" -> "litellm.llms.nlp_cloud.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_streamlit.elements.lib" {
		label="streamlit.elements.lib";
		"streamlit.elements.lib" -> "streamlit.elements.lib.mutable_status_container" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.dialog" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.layout_utils" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.form_utils" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.policies" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.utils" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.pandas_styler_utils" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.image_utils" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.column_types" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.built_in_chart_utils" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.color_util" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.js_number" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.options_selector_utils" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.file_uploader_utils" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.column_config_utils" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.dicttools" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.event_utils" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.streamlit_plotly_theme" [style="dotted"];
		"streamlit.elements.lib" -> "streamlit.elements.lib.subtitle_utils" [style="dotted"];
	}
	subgraph "cluster_litellm.llms" {
		label="litellm.llms";
		"litellm.llms" -> "litellm.llms.baseten" [style="dotted"];
		"litellm.llms" -> "litellm.llms.maritalk" [style="dotted"];
		"litellm.llms" -> "litellm.llms.ollama_chat" [style="dotted"];
		"litellm.llms" -> "litellm.llms.base_llm" [style="dotted"];
		"litellm.llms" -> "litellm.llms.bedrock" [style="dotted"];
		"litellm.llms" -> "litellm.llms.vertex_ai" [style="dotted"];
		"litellm.llms" -> "litellm.llms.custom_httpx" [style="dotted"];
		"litellm.llms" -> "litellm.llms.together_ai" [style="dotted"];
		"litellm.llms" -> "litellm.llms.openai" [style="dotted"];
		"litellm.llms" -> "litellm.llms.fireworks_ai" [style="dotted"];
		"litellm.llms" -> "litellm.llms.deepseek" [style="dotted"];
		"litellm.llms" -> "litellm.llms.databricks" [style="dotted"];
		"litellm.llms" -> "litellm.llms.azure" [style="dotted"];
		"litellm.llms" -> "litellm.llms.anthropic" [style="dotted"];
		"litellm.llms" -> "litellm.llms.cohere" [style="dotted"];
		"litellm.llms" -> "litellm.llms.base" [style="dotted"];
		"litellm.llms" -> "litellm.llms.custom_llm" [style="dotted"];
		"litellm.llms" -> "litellm.llms.watsonx" [style="dotted"];
		"litellm.llms" -> "litellm.llms.vllm" [style="dotted"];
		"litellm.llms" -> "litellm.llms.sagemaker" [style="dotted"];
		"litellm.llms" -> "litellm.llms.replicate" [style="dotted"];
		"litellm.llms" -> "litellm.llms.predibase" [style="dotted"];
		"litellm.llms" -> "litellm.llms.petals" [style="dotted"];
		"litellm.llms" -> "litellm.llms.openai_like" [style="dotted"];
		"litellm.llms" -> "litellm.llms.oobabooga" [style="dotted"];
		"litellm.llms" -> "litellm.llms.ollama" [style="dotted"];
		"litellm.llms" -> "litellm.llms.nlp_cloud" [style="dotted"];
		"litellm.llms" -> "litellm.llms.huggingface" [style="dotted"];
		"litellm.llms" -> "litellm.llms.groq" [style="dotted"];
		"litellm.llms" -> "litellm.llms.deprecated_providers" [style="dotted"];
		"litellm.llms" -> "litellm.llms.codestral" [style="dotted"];
		"litellm.llms" -> "litellm.llms.azure_ai" [style="dotted"];
		"litellm.llms" -> "litellm.llms.gemini" [style="dotted"];
		"litellm.llms" -> "litellm.llms.volcengine" [style="dotted"];
		"litellm.llms" -> "litellm.llms.perplexity" [style="dotted"];
		"litellm.llms" -> "litellm.llms.nscale" [style="dotted"];
		"litellm.llms" -> "litellm.llms.lm_studio" [style="dotted"];
		"litellm.llms" -> "litellm.llms.litellm_proxy" [style="dotted"];
		"litellm.llms" -> "litellm.llms.llamafile" [style="dotted"];
		"litellm.llms" -> "litellm.llms.hosted_vllm" [style="dotted"];
		"litellm.llms" -> "litellm.llms.xai" [style="dotted"];
		"litellm.llms" -> "litellm.llms.jina_ai" [style="dotted"];
		"litellm.llms" -> "litellm.llms.friendliai" [style="dotted"];
		"litellm.llms" -> "litellm.llms.sambanova" [style="dotted"];
		"litellm.llms" -> "litellm.llms.cerebras" [style="dotted"];
		"litellm.llms" -> "litellm.llms.featherless_ai" [style="dotted"];
		"litellm.llms" -> "litellm.llms.nvidia_nim" [style="dotted"];
		"litellm.llms" -> "litellm.llms.mistral" [style="dotted"];
		"litellm.llms" -> "litellm.llms.infinity" [style="dotted"];
		"litellm.llms" -> "litellm.llms.voyage" [style="dotted"];
		"litellm.llms" -> "litellm.llms.topaz" [style="dotted"];
		"litellm.llms" -> "litellm.llms.deepgram" [style="dotted"];
		"litellm.llms" -> "litellm.llms.deepinfra" [style="dotted"];
		"litellm.llms" -> "litellm.llms.novita" [style="dotted"];
		"litellm.llms" -> "litellm.llms.cloudflare" [style="dotted"];
		"litellm.llms" -> "litellm.llms.meta_llama" [style="dotted"];
		"litellm.llms" -> "litellm.llms.ai21" [style="dotted"];
		"litellm.llms" -> "litellm.llms.clarifai" [style="dotted"];
		"litellm.llms" -> "litellm.llms.snowflake" [style="dotted"];
		"litellm.llms" -> "litellm.llms.triton" [style="dotted"];
		"litellm.llms" -> "litellm.llms.openrouter" [style="dotted"];
		"litellm.llms" -> "litellm.llms.empower" [style="dotted"];
		"litellm.llms" -> "litellm.llms.github" [style="dotted"];
		"litellm.llms" -> "litellm.llms.galadriel" [style="dotted"];
		"litellm.llms" -> "litellm.llms.aiohttp_openai" [style="dotted"];
	}
	subgraph "cluster_langchain_community.adapters" {
		label="langchain_community.adapters";
		"langchain_community.adapters" -> "langchain_community.adapters.openai" [style="dotted"];
	}
	subgraph "cluster_fastjsonschema" {
		label="fastjsonschema";
		"fastjsonschema" -> "fastjsonschema.draft04" [style="dotted"];
		"fastjsonschema" -> "fastjsonschema.draft06" [style="dotted"];
		"fastjsonschema" -> "fastjsonschema.draft07" [style="dotted"];
		"fastjsonschema" -> "fastjsonschema.exceptions" [style="dotted"];
		"fastjsonschema" -> "fastjsonschema.ref_resolver" [style="dotted"];
		"fastjsonschema" -> "fastjsonschema.version" [style="dotted"];
		"fastjsonschema" -> "fastjsonschema.generator" [style="dotted"];
		"fastjsonschema" -> "fastjsonschema.indent" [style="dotted"];
	}
	subgraph "cluster_narwhals._compliant" {
		label="narwhals._compliant";
		"narwhals._compliant" -> "narwhals._compliant.dataframe" [style="dotted"];
		"narwhals._compliant" -> "narwhals._compliant.expr" [style="dotted"];
		"narwhals._compliant" -> "narwhals._compliant.group_by" [style="dotted"];
		"narwhals._compliant" -> "narwhals._compliant.namespace" [style="dotted"];
		"narwhals._compliant" -> "narwhals._compliant.selectors" [style="dotted"];
		"narwhals._compliant" -> "narwhals._compliant.series" [style="dotted"];
		"narwhals._compliant" -> "narwhals._compliant.typing" [style="dotted"];
		"narwhals._compliant" -> "narwhals._compliant.when_then" [style="dotted"];
		"narwhals._compliant" -> "narwhals._compliant.any_namespace" [style="dotted"];
	}
	subgraph "cluster_h11" {
		label="h11";
		"h11" -> "h11._connection" [style="dotted"];
		"h11" -> "h11._events" [style="dotted"];
		"h11" -> "h11._state" [style="dotted"];
		"h11" -> "h11._util" [style="dotted"];
		"h11" -> "h11._version" [style="dotted"];
		"h11" -> "h11._abnf" [style="dotted"];
		"h11" -> "h11._headers" [style="dotted"];
		"h11" -> "h11._readers" [style="dotted"];
		"h11" -> "h11._receivebuffer" [style="dotted"];
		"h11" -> "h11._writers" [style="dotted"];
	}
	subgraph "cluster_tornado" {
		label="tornado";
		"tornado" -> "tornado.ioloop" [style="dotted"];
		"tornado" -> "tornado.locale" [style="dotted"];
		"tornado" -> "tornado.template" [style="dotted"];
		"tornado" -> "tornado.autoreload" [style="dotted"];
		"tornado" -> "tornado.gen" [style="dotted"];
		"tornado" -> "tornado.concurrent" [style="dotted"];
		"tornado" -> "tornado.log" [style="dotted"];
		"tornado" -> "tornado.util" [style="dotted"];
		"tornado" -> "tornado.process" [style="dotted"];
		"tornado" -> "tornado.iostream" [style="dotted"];
		"tornado" -> "tornado.netutil" [style="dotted"];
		"tornado" -> "tornado.platform" [style="dotted"];
		"tornado" -> "tornado.speedups" [style="dotted"];
		"tornado" -> "tornado.escape" [style="dotted"];
		"tornado" -> "tornado.options" [style="dotted"];
		"tornado" -> "tornado._locale_data" [style="dotted"];
		"tornado" -> "tornado.locks" [style="dotted"];
		"tornado" -> "tornado.queues" [style="dotted"];
		"tornado" -> "tornado.httputil" [style="dotted"];
		"tornado" -> "tornado.web" [style="dotted"];
		"tornado" -> "tornado.httpserver" [style="dotted"];
		"tornado" -> "tornado.routing" [style="dotted"];
		"tornado" -> "tornado.http1connection" [style="dotted"];
		"tornado" -> "tornado.tcpserver" [style="dotted"];
	}
	subgraph "cluster_litellm.integrations" {
		label="litellm.integrations";
		"litellm.integrations" -> "litellm.integrations.custom_guardrail" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.custom_logger" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.opentelemetry" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.prometheus" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.custom_batch_logger" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.gcs_bucket" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.SlackAlerting" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.prometheus_helpers" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.langfuse" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.additional_logging_utils" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.datadog" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.email_alerting" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.email_templates" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.langtrace" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations._types" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.arize" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.vector_stores" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.anthropic_cache_control_hook" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.mlflow" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.argilla" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.athina" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.braintrust_logging" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.custom_prompt_management" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.dynamodb" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.galileo" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.greenscale" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.helicone" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.humanloop" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.lago" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.langsmith" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.literal_ai" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.logfire_logger" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.lunary" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.openmeter" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.prompt_layer" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.s3" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.supabase" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.traceloop" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.weights_biases" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.opik" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.prompt_management_base" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.gcs_pubsub" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.azure_storage" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.agentops" [style="dotted"];
		"litellm.integrations" -> "litellm.integrations.prometheus_services" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.interaction" {
		label="langchain_community.tools.interaction";
		"langchain_community.tools.interaction" -> "langchain_community.tools.interaction.tool" [style="dotted"];
	}
	subgraph "cluster_nbformat.v4" {
		label="nbformat.v4";
		"nbformat.v4" -> "nbformat.v4.convert" [style="dotted"];
		"nbformat.v4" -> "nbformat.v4.nbbase" [style="dotted"];
		"nbformat.v4" -> "nbformat.v4.nbjson" [style="dotted"];
		"nbformat.v4" -> "nbformat.v4.rwbase" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.featherless_ai.chat" {
		label="litellm.llms.featherless_ai.chat";
		"litellm.llms.featherless_ai.chat" -> "litellm.llms.featherless_ai.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.jina_search" {
		label="langchain_community.tools.jina_search";
		"langchain_community.tools.jina_search" -> "langchain_community.tools.jina_search.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.graphs" {
		label="langchain_community.graphs";
		"langchain_community.graphs" -> "langchain_community.graphs.arangodb_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.falkordb_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.gremlin_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.hugegraph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.kuzu_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.memgraph_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.nebula_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.neo4j_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.neptune_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.neptune_rdf_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.networkx_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.ontotext_graphdb_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.rdf_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.tigergraph_graph" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.graph_store" [style="dotted"];
		"langchain_community.graphs" -> "langchain_community.graphs.graph_document" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.gemini.chat" {
		label="litellm.llms.gemini.chat";
		"litellm.llms.gemini.chat" -> "litellm.llms.gemini.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.perplexity.chat" {
		label="litellm.llms.perplexity.chat";
		"litellm.llms.perplexity.chat" -> "litellm.llms.perplexity.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_xxhash" {
		label="xxhash";
		"xxhash" -> "xxhash._xxhash" [style="dotted"];
		"xxhash" -> "xxhash.version" [style="dotted"];
	}
	subgraph "cluster_openai.resources.beta.realtime" {
		label="openai.resources.beta.realtime";
		"openai.resources.beta.realtime" -> "openai.resources.beta.realtime.realtime" [style="dotted"];
		"openai.resources.beta.realtime" -> "openai.resources.beta.realtime.sessions" [style="dotted"];
		"openai.resources.beta.realtime" -> "openai.resources.beta.realtime.transcription_sessions" [style="dotted"];
	}
	subgraph "cluster_kivy.lang" {
		label="kivy.lang";
		"kivy.lang" -> "kivy.lang.builder" [style="dotted"];
		"kivy.lang" -> "kivy.lang.parser" [style="dotted"];
	}
	subgraph "cluster_proto" {
		label="proto";
		"proto" -> "proto.datetime_helpers" [style="dotted"];
		"proto" -> "proto._file_info" [style="dotted"];
		"proto" -> "proto._package_info" [style="dotted"];
		"proto" -> "proto.enums" [style="dotted"];
		"proto" -> "proto.fields" [style="dotted"];
		"proto" -> "proto.marshal" [style="dotted"];
		"proto" -> "proto.message" [style="dotted"];
		"proto" -> "proto.modules" [style="dotted"];
		"proto" -> "proto.primitives" [style="dotted"];
		"proto" -> "proto.version" [style="dotted"];
		"proto" -> "proto.utils" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.anthropic.experimental_pass_through" {
		label="litellm.llms.anthropic.experimental_pass_through";
		"litellm.llms.anthropic.experimental_pass_through" -> "litellm.llms.anthropic.experimental_pass_through.messages" [style="dotted"];
	}
	subgraph "cluster_IPython.utils" {
		label="IPython.utils";
		"IPython.utils" -> "IPython.utils.PyColorize" [style="dotted"];
		"IPython.utils" -> "IPython.utils.openpy" [style="dotted"];
		"IPython.utils" -> "IPython.utils.tokenutil" [style="dotted"];
		"IPython.utils" -> "IPython.utils.generics" [style="dotted"];
		"IPython.utils" -> "IPython.utils._sysinfo" [style="dotted"];
		"IPython.utils" -> "IPython.utils.io" [style="dotted"];
		"IPython.utils" -> "IPython.utils.py3compat" [style="dotted"];
		"IPython.utils" -> "IPython.utils.decorators" [style="dotted"];
		"IPython.utils" -> "IPython.utils.docs" [style="dotted"];
		"IPython.utils" -> "IPython.utils.capture" [style="dotted"];
		"IPython.utils" -> "IPython.utils.coloransi" [style="dotted"];
		"IPython.utils" -> "IPython.utils.colorable" [style="dotted"];
		"IPython.utils" -> "IPython.utils.ipstruct" [style="dotted"];
		"IPython.utils" -> "IPython.utils.path" [style="dotted"];
		"IPython.utils" -> "IPython.utils.process" [style="dotted"];
		"IPython.utils" -> "IPython.utils.strdispatch" [style="dotted"];
		"IPython.utils" -> "IPython.utils.syspathcontext" [style="dotted"];
		"IPython.utils" -> "IPython.utils.text" [style="dotted"];
		"IPython.utils" -> "IPython.utils._process_win32" [style="dotted"];
		"IPython.utils" -> "IPython.utils._process_common" [style="dotted"];
		"IPython.utils" -> "IPython.utils.encoding" [style="dotted"];
		"IPython.utils" -> "IPython.utils.terminal" [style="dotted"];
		"IPython.utils" -> "IPython.utils.contexts" [style="dotted"];
		"IPython.utils" -> "IPython.utils.module_paths" [style="dotted"];
		"IPython.utils" -> "IPython.utils.timing" [style="dotted"];
		"IPython.utils" -> "IPython.utils.dir2" [style="dotted"];
		"IPython.utils" -> "IPython.utils._process_cli" [style="dotted"];
		"IPython.utils" -> "IPython.utils._process_posix" [style="dotted"];
		"IPython.utils" -> "IPython.utils.importstring" [style="dotted"];
		"IPython.utils" -> "IPython.utils.sentinel" [style="dotted"];
		"IPython.utils" -> "IPython.utils.sysinfo" [style="dotted"];
		"IPython.utils" -> "IPython.utils.data" [style="dotted"];
		"IPython.utils" -> "IPython.utils.wildcard" [style="dotted"];
		"IPython.utils" -> "IPython.utils.frame" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.dataherald" {
		label="langchain_community.tools.dataherald";
		"langchain_community.tools.dataherald" -> "langchain_community.tools.dataherald.tool" [style="dotted"];
	}
	subgraph "cluster_pandas.io.json" {
		label="pandas.io.json";
		"pandas.io.json" -> "pandas.io.json._json" [style="dotted"];
		"pandas.io.json" -> "pandas.io.json._table_schema" [style="dotted"];
		"pandas.io.json" -> "pandas.io.json._normalize" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.novita.chat" {
		label="litellm.llms.novita.chat";
		"litellm.llms.novita.chat" -> "litellm.llms.novita.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_matplotlib_inline" {
		label="matplotlib_inline";
		"matplotlib_inline" -> "matplotlib_inline.backend_inline" [style="dotted"];
		"matplotlib_inline" -> "matplotlib_inline.config" [style="dotted"];
	}
	subgraph "cluster_pandas.api.types" {
		label="pandas.api.types";
	}
	subgraph "cluster_litellm.proxy.db" {
		label="litellm.proxy.db";
		"litellm.proxy.db" -> "litellm.proxy.db.exception_handler" [style="dotted"];
		"litellm.proxy.db" -> "litellm.proxy.db.create_views" [style="dotted"];
		"litellm.proxy.db" -> "litellm.proxy.db.db_spend_update_writer" [style="dotted"];
		"litellm.proxy.db" -> "litellm.proxy.db.log_db_metrics" [style="dotted"];
		"litellm.proxy.db" -> "litellm.proxy.db.prisma_client" [style="dotted"];
		"litellm.proxy.db" -> "litellm.proxy.db.db_transaction_queue" [style="dotted"];
		"litellm.proxy.db" -> "litellm.proxy.db.check_migration" [style="dotted"];
	}
	subgraph "cluster_jupyter_core" {
		label="jupyter_core";
		"jupyter_core" -> "jupyter_core.version" [style="dotted"];
		"jupyter_core" -> "jupyter_core.paths" [style="dotted"];
		"jupyter_core" -> "jupyter_core.utils" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.azure.batches" {
		label="litellm.llms.azure.batches";
		"litellm.llms.azure.batches" -> "litellm.llms.azure.batches.handler" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.azure.realtime" {
		label="litellm.llms.azure.realtime";
		"litellm.llms.azure.realtime" -> "litellm.llms.azure.realtime.handler" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.you" {
		label="langchain_community.tools.you";
		"langchain_community.tools.you" -> "langchain_community.tools.you.tool" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.gemini.realtime" {
		label="litellm.llms.gemini.realtime";
		"litellm.llms.gemini.realtime" -> "litellm.llms.gemini.realtime.transformation" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.sql" {
		label="datasets.packaged_modules.sql";
		"datasets.packaged_modules.sql" -> "datasets.packaged_modules.sql.sql" [style="dotted"];
	}
	subgraph "cluster_kivy.core.camera" {
		label="kivy.core.camera";
		"kivy.core.camera" -> "kivy.core.camera.camera_opencv" [style="dotted"];
		"kivy.core.camera" -> "kivy.core.camera.camera_gi" [style="dotted"];
		"kivy.core.camera" -> "kivy.core.camera.camera_avfoundation" [style="dotted"];
		"kivy.core.camera" -> "kivy.core.camera.camera_android" [style="dotted"];
		"kivy.core.camera" -> "kivy.core.camera.camera_picamera" [style="dotted"];
	}
	subgraph "cluster_comm" {
		label="comm";
		"comm" -> "comm.base_comm" [style="dotted"];
	}
	subgraph "cluster_pygments.lexers" {
		label="pygments.lexers";
		"pygments.lexers" -> "pygments.lexers._mapping" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.PythonLexer" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.PrologLexer" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._ada_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._asy_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._cl_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._cocoa_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._csound_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._css_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._googlesql_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._julia_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._lasso_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._lilypond_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._lua_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._luau_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._mql_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._mysql_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._openedge_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._php_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._postgres_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._qlik_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._scheme_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._scilab_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._sourcemod_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._stan_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._stata_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._tsql_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._usd_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._vbscript_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers._vim_builtins" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.actionscript" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ada" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.agile" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.algebra" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ambient" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.amdgpu" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ampl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.apdlexer" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.apl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.archetype" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.arrow" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.arturo" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.asc" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.asm" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.asn1" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.automation" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.bare" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.basic" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.bdd" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.berry" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.bibtex" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.blueprint" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.boa" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.bqn" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.business" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.c_cpp" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.c_like" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.capnproto" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.carbon" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.cddl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.chapel" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.clean" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.codeql" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.comal" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.compiled" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.configs" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.console" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.cplint" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.crystal" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.csound" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.css" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.d" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.dalvik" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.data" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.dax" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.devicetree" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.diff" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.dns" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.dotnet" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.dsls" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.dylan" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ecl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.eiffel" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.elm" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.elpi" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.email" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.erlang" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.esoteric" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ezhil" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.factor" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.fantom" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.felix" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.fift" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.floscript" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.forth" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.fortran" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.foxpro" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.freefem" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.func" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.functional" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.futhark" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.gcodelexer" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.gdscript" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.gleam" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.go" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.grammar_notation" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.graph" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.graphics" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.graphql" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.graphviz" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.gsql" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.hare" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.haskell" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.haxe" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.hdl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.hexdump" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.html" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.idl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.igor" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.inferno" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.installers" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.int_fiction" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.iolang" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.j" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.javascript" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.jmespath" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.jslt" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.json5" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.jsonnet" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.jsx" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.julia" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.jvm" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.kuin" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.kusto" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ldap" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.lean" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.lilypond" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.lisp" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.macaulay2" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.make" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.maple" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.markup" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.math" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.matlab" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.maxima" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.meson" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.mime" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.minecraft" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.mips" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ml" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.modeling" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.modula2" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.mojo" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.monte" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.mosel" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ncl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.nimrod" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.nit" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.nix" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.numbair" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.oberon" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.objective" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ooc" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.openscad" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.other" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.parasail" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.parsers" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.pascal" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.pawn" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.pddl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.perl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.phix" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.php" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.pointless" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.pony" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.praat" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.procfile" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.prolog" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.promql" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.prql" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ptx" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.python" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.q" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.qlik" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.qvt" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.r" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.rdf" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.rebol" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.rego" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.resource" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ride" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.rita" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.rnc" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.roboconf" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.robotframework" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ruby" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.rust" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.sas" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.savi" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.scdoc" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.scripting" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.sgf" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.shell" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.sieve" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.slash" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.smalltalk" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.smithy" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.smv" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.snobol" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.solidity" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.soong" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.sophia" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.special" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.spice" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.sql" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.srcinfo" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.stata" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.supercollider" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.tablegen" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.tact" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.tal" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.tcl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.teal" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.templates" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.teraterm" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.testing" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.text" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.textedit" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.textfmts" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.theorem" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.thingsdb" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.tlb" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.tls" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.tnt" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.trafficscript" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.typoscript" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.typst" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.ul4" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.unicon" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.urbi" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.usd" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.varnish" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.verification" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.verifpal" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.vip" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.vyper" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.web" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.webassembly" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.webidl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.webmisc" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.wgsl" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.whiley" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.wowtoc" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.wren" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.x10" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.xorg" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.yang" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.yara" [style="dotted"];
		"pygments.lexers" -> "pygments.lexers.zig" [style="dotted"];
	}
	subgraph "cluster_tenacity" {
		label="tenacity";
		"tenacity" -> "tenacity._utils" [style="dotted"];
		"tenacity" -> "tenacity.retry" [style="dotted"];
		"tenacity" -> "tenacity.nap" [style="dotted"];
		"tenacity" -> "tenacity.stop" [style="dotted"];
		"tenacity" -> "tenacity.wait" [style="dotted"];
		"tenacity" -> "tenacity.before" [style="dotted"];
		"tenacity" -> "tenacity.after" [style="dotted"];
		"tenacity" -> "tenacity.before_sleep" [style="dotted"];
		"tenacity" -> "tenacity.asyncio" [style="dotted"];
		"tenacity" -> "tenacity.tornadoweb" [style="dotted"];
	}
	subgraph "cluster_pandas" {
		label="pandas";
		"pandas" -> "pandas.compat" [style="dotted"];
		"pandas" -> "pandas._config" [style="dotted"];
		"pandas" -> "pandas.tseries" [style="dotted"];
		"pandas" -> "pandas.api" [style="dotted"];
		"pandas" -> "pandas.arrays" [style="dotted"];
		"pandas" -> "pandas.errors" [style="dotted"];
		"pandas" -> "pandas.io" [style="dotted"];
		"pandas" -> "pandas.plotting" [style="dotted"];
		"pandas" -> "pandas.testing" [style="dotted"];
		"pandas" -> "pandas._version_meson" [style="dotted"];
		"pandas" -> "pandas._version" [style="dotted"];
		"pandas" -> "pandas.Panel" [style="dotted"];
		"pandas" -> "pandas._libs" [style="dotted"];
		"pandas" -> "pandas.core" [style="dotted"];
		"pandas" -> "pandas.util" [style="dotted"];
		"pandas" -> "pandas._typing" [style="dotted"];
		"pandas" -> "pandas._testing" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.key_binding.bindings" {
		label="prompt_toolkit.key_binding.bindings";
		"prompt_toolkit.key_binding.bindings" -> "prompt_toolkit.key_binding.bindings.search" [style="dotted"];
		"prompt_toolkit.key_binding.bindings" -> "prompt_toolkit.key_binding.bindings.named_commands" [style="dotted"];
		"prompt_toolkit.key_binding.bindings" -> "prompt_toolkit.key_binding.bindings.completion" [style="dotted"];
		"prompt_toolkit.key_binding.bindings" -> "prompt_toolkit.key_binding.bindings.page_navigation" [style="dotted"];
		"prompt_toolkit.key_binding.bindings" -> "prompt_toolkit.key_binding.bindings.basic" [style="dotted"];
		"prompt_toolkit.key_binding.bindings" -> "prompt_toolkit.key_binding.bindings.cpr" [style="dotted"];
		"prompt_toolkit.key_binding.bindings" -> "prompt_toolkit.key_binding.bindings.emacs" [style="dotted"];
		"prompt_toolkit.key_binding.bindings" -> "prompt_toolkit.key_binding.bindings.mouse" [style="dotted"];
		"prompt_toolkit.key_binding.bindings" -> "prompt_toolkit.key_binding.bindings.vi" [style="dotted"];
		"prompt_toolkit.key_binding.bindings" -> "prompt_toolkit.key_binding.bindings.scroll" [style="dotted"];
		"prompt_toolkit.key_binding.bindings" -> "prompt_toolkit.key_binding.bindings.auto_suggest" [style="dotted"];
		"prompt_toolkit.key_binding.bindings" -> "prompt_toolkit.key_binding.bindings.open_in_editor" [style="dotted"];
		"prompt_toolkit.key_binding.bindings" -> "prompt_toolkit.key_binding.bindings.focus" [style="dotted"];
	}
	subgraph "cluster_google.auth.transport" {
		label="google.auth.transport";
		"google.auth.transport" -> "google.auth.transport._custom_tls_signer" [style="dotted"];
		"google.auth.transport" -> "google.auth.transport.requests" [style="dotted"];
		"google.auth.transport" -> "google.auth.transport.mtls" [style="dotted"];
		"google.auth.transport" -> "google.auth.transport._http_client" [style="dotted"];
		"google.auth.transport" -> "google.auth.transport._mtls_helper" [style="dotted"];
		"google.auth.transport" -> "google.auth.transport.grpc" [style="dotted"];
	}
	subgraph "cluster_streamlit.components" {
		label="streamlit.components";
		"streamlit.components" -> "streamlit.components.v1" [style="dotted"];
		"streamlit.components" -> "streamlit.components.types" [style="dotted"];
		"streamlit.components" -> "streamlit.components.lib" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.xml" {
		label="langchain.agents.xml";
		"langchain.agents.xml" -> "langchain.agents.xml.base" [style="dotted"];
		"langchain.agents.xml" -> "langchain.agents.xml.prompt" [style="dotted"];
	}
	subgraph "cluster_attr" {
		label="attr";
		"attr" -> "attr._config" [style="dotted"];
		"attr" -> "attr.setters" [style="dotted"];
		"attr" -> "attr.converters" [style="dotted"];
		"attr" -> "attr.exceptions" [style="dotted"];
		"attr" -> "attr.filters" [style="dotted"];
		"attr" -> "attr.validators" [style="dotted"];
		"attr" -> "attr._cmp" [style="dotted"];
		"attr" -> "attr._funcs" [style="dotted"];
		"attr" -> "attr._make" [style="dotted"];
		"attr" -> "attr._next_gen" [style="dotted"];
		"attr" -> "attr._version_info" [style="dotted"];
		"attr" -> "attrs" [style="dotted"];
		"attr" -> "attr._compat" [style="dotted"];
	}
	subgraph "cluster_IPython.core.magics" {
		label="IPython.core.magics";
		"IPython.core.magics" -> "IPython.core.magics.auto" [style="dotted"];
		"IPython.core.magics" -> "IPython.core.magics.basic" [style="dotted"];
		"IPython.core.magics" -> "IPython.core.magics.code" [style="dotted"];
		"IPython.core.magics" -> "IPython.core.magics.config" [style="dotted"];
		"IPython.core.magics" -> "IPython.core.magics.display" [style="dotted"];
		"IPython.core.magics" -> "IPython.core.magics.execution" [style="dotted"];
		"IPython.core.magics" -> "IPython.core.magics.extension" [style="dotted"];
		"IPython.core.magics" -> "IPython.core.magics.history" [style="dotted"];
		"IPython.core.magics" -> "IPython.core.magics.logging" [style="dotted"];
		"IPython.core.magics" -> "IPython.core.magics.namespace" [style="dotted"];
		"IPython.core.magics" -> "IPython.core.magics.osm" [style="dotted"];
		"IPython.core.magics" -> "IPython.core.magics.packaging" [style="dotted"];
		"IPython.core.magics" -> "IPython.core.magics.pylab" [style="dotted"];
		"IPython.core.magics" -> "IPython.core.magics.script" [style="dotted"];
		"IPython.core.magics" -> "IPython.core.magics.ast_mod" [style="dotted"];
	}
	subgraph "cluster_langchain_community.utilities" {
		label="langchain_community.utilities";
		"langchain_community.utilities" -> "langchain_community.utilities.alpha_vantage" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.apify" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.arcee" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.arxiv" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.asknews" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.awslambda" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.bibtex" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.bing_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.brave_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.dataherald" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.dria_index" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.duckduckgo_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.golden_query" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_books" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_finance" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_jobs" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_lens" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_places_api" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_scholar" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_serper" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.google_trends" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.graphql" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.infobip" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.jira" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.max_compute" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.merriam_webster" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.metaphor_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.mojeek_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.nasa" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.nvidia_riva" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.openweathermap" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.oracleai" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.outline" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.passio_nutrition_ai" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.portkey" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.powerbi" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.pubmed" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.rememberizer" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.requests" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.scenexplain" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.searchapi" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.searx_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.serpapi" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.spark_sql" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.sql_database" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.stackexchange" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.steam" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.tensorflow_datasets" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.twilio" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.wikipedia" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.wolfram_alpha" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.you" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.zapier" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.tavily_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.reddit_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.vertexai" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.anthropic" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.polygon" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.openapi" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.jina_search" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.financial_datasets" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.cassandra_database" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.pebblo" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.cassandra" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.astradb" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.redis" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.dalle_image_generator" [style="dotted"];
		"langchain_community.utilities" -> "langchain_community.utilities.dataforseo_api_search" [style="dotted"];
	}
	subgraph "cluster_urllib3.packages" {
		label="urllib3.packages";
		"urllib3.packages" -> "urllib3.packages.ssl_match_hostname" [style="dotted"];
		"urllib3.packages" -> "urllib3.packages.six" [style="dotted"];
		"urllib3.packages" -> "urllib3.packages.backports" [style="dotted"];
	}
	subgraph "cluster_openai.types.beta" {
		label="openai.types.beta";
		"openai.types.beta" -> "openai.types.beta.thread" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.function_tool" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.thread_deleted" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.file_search_tool" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_deleted" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.function_tool_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.thread_create_params" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.thread_update_params" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_list_params" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool_choice" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.code_interpreter_tool" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_stream_event" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.file_search_tool_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_create_params" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_update_params" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool_choice_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.code_interpreter_tool_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool_choice_option" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.thread_create_and_run_params" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool_choice_function" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_response_format_option" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool_choice_option_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_tool_choice_function_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.assistant_response_format_option_param" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.threads" [style="dotted"];
		"openai.types.beta" -> "openai.types.beta.realtime" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.videofolder" {
		label="datasets.packaged_modules.videofolder";
		"datasets.packaged_modules.videofolder" -> "datasets.packaged_modules.videofolder.videofolder" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.discuss_service" {
		label="google.ai.generativelanguage_v1beta.services.discuss_service";
		"google.ai.generativelanguage_v1beta.services.discuss_service" -> "google.ai.generativelanguage_v1beta.services.discuss_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.discuss_service" -> "google.ai.generativelanguage_v1beta.services.discuss_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.discuss_service" -> "google.ai.generativelanguage_v1beta.services.discuss_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_search" {
		label="langchain_community.tools.google_search";
		"langchain_community.tools.google_search" -> "langchain_community.tools.google_search.tool" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.clarifai.chat" {
		label="litellm.llms.clarifai.chat";
		"litellm.llms.clarifai.chat" -> "litellm.llms.clarifai.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_datasets.parallel" {
		label="datasets.parallel";
		"datasets.parallel" -> "datasets.parallel.parallel" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.combine_documents" {
		label="langchain.chains.combine_documents";
		"langchain.chains.combine_documents" -> "langchain.chains.combine_documents.reduce" [style="dotted"];
		"langchain.chains.combine_documents" -> "langchain.chains.combine_documents.stuff" [style="dotted"];
		"langchain.chains.combine_documents" -> "langchain.chains.combine_documents.base" [style="dotted"];
		"langchain.chains.combine_documents" -> "langchain.chains.combine_documents.map_reduce" [style="dotted"];
		"langchain.chains.combine_documents" -> "langchain.chains.combine_documents.map_rerank" [style="dotted"];
		"langchain.chains.combine_documents" -> "langchain.chains.combine_documents.refine" [style="dotted"];
	}
	subgraph "cluster_openai.types.shared_params" {
		label="openai.types.shared_params";
		"openai.types.shared_params" -> "openai.types.shared_params.metadata" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.reasoning" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.chat_model" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.compound_filter" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.responses_model" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.reasoning_effort" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.comparison_filter" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.function_definition" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.function_parameters" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.response_format_text" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.response_format_json_object" [style="dotted"];
		"openai.types.shared_params" -> "openai.types.shared_params.response_format_json_schema" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.huggingface.chat" {
		label="litellm.llms.huggingface.chat";
		"litellm.llms.huggingface.chat" -> "litellm.llms.huggingface.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain.retrievers.document_compressors" {
		label="langchain.retrievers.document_compressors";
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.base" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.chain_extract" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.chain_filter" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.cohere_rerank" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.cross_encoder_rerank" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.embeddings_filter" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.listwise_rerank" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.cross_encoder" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.chain_filter_prompt" [style="dotted"];
		"langchain.retrievers.document_compressors" -> "langchain.retrievers.document_compressors.chain_extract_prompt" [style="dotted"];
	}
	subgraph "cluster_numpy._core" {
		label="numpy._core";
		"numpy._core" -> "numpy._core.overrides" [style="dotted"];
		"numpy._core" -> "numpy._core.multiarray" [style="dotted"];
		"numpy._core" -> "numpy._core.umath" [style="dotted"];
		"numpy._core" -> "numpy._core.numerictypes" [style="dotted"];
		"numpy._core" -> "numpy._core.numeric" [style="dotted"];
		"numpy._core" -> "numpy._core._exceptions" [style="dotted"];
		"numpy._core" -> "numpy._core.asarray" [style="dotted"];
		"numpy._core" -> "numpy._core.ndarray" [style="dotted"];
		"numpy._core" -> "numpy._core.transpose" [style="dotted"];
		"numpy._core" -> "numpy._core.iinfo" [style="dotted"];
		"numpy._core" -> "numpy._core.array" [style="dotted"];
		"numpy._core" -> "numpy._core.zeros" [style="dotted"];
		"numpy._core" -> "numpy._core.empty" [style="dotted"];
		"numpy._core" -> "numpy._core.empty_like" [style="dotted"];
		"numpy._core" -> "numpy._core.intc" [style="dotted"];
		"numpy._core" -> "numpy._core.single" [style="dotted"];
		"numpy._core" -> "numpy._core.double" [style="dotted"];
		"numpy._core" -> "numpy._core.csingle" [style="dotted"];
		"numpy._core" -> "numpy._core.cdouble" [style="dotted"];
		"numpy._core" -> "numpy._core.inexact" [style="dotted"];
		"numpy._core" -> "numpy._core.complexfloating" [style="dotted"];
		"numpy._core" -> "numpy._core.newaxis" [style="dotted"];
		"numpy._core" -> "numpy._core.all" [style="dotted"];
		"numpy._core" -> "numpy._core.inf" [style="dotted"];
		"numpy._core" -> "numpy._core.dot" [style="dotted"];
		"numpy._core" -> "numpy._core.add" [style="dotted"];
		"numpy._core" -> "numpy._core.multiply" [style="dotted"];
		"numpy._core" -> "numpy._core.sqrt" [style="dotted"];
		"numpy._core" -> "numpy._core.sum" [style="dotted"];
		"numpy._core" -> "numpy._core.isfinite" [style="dotted"];
		"numpy._core" -> "numpy._core.finfo" [style="dotted"];
		"numpy._core" -> "numpy._core.errstate" [style="dotted"];
		"numpy._core" -> "numpy._core.moveaxis" [style="dotted"];
		"numpy._core" -> "numpy._core.amin" [style="dotted"];
		"numpy._core" -> "numpy._core.amax" [style="dotted"];
		"numpy._core" -> "numpy._core.prod" [style="dotted"];
		"numpy._core" -> "numpy._core.atleast_2d" [style="dotted"];
		"numpy._core" -> "numpy._core.intp" [style="dotted"];
		"numpy._core" -> "numpy._core.asanyarray" [style="dotted"];
		"numpy._core" -> "numpy._core.object_" [style="dotted"];
		"numpy._core" -> "numpy._core.matmul" [style="dotted"];
		"numpy._core" -> "numpy._core.swapaxes" [style="dotted"];
		"numpy._core" -> "numpy._core.divide" [style="dotted"];
		"numpy._core" -> "numpy._core.count_nonzero" [style="dotted"];
		"numpy._core" -> "numpy._core.isnan" [style="dotted"];
		"numpy._core" -> "numpy._core.sign" [style="dotted"];
		"numpy._core" -> "numpy._core.argsort" [style="dotted"];
		"numpy._core" -> "numpy._core.sort" [style="dotted"];
		"numpy._core" -> "numpy._core.reciprocal" [style="dotted"];
		"numpy._core" -> "numpy._core.diagonal" [style="dotted"];
		"numpy._core" -> "numpy._core.trace" [style="dotted"];
		"numpy._core" -> "numpy._core.cross" [style="dotted"];
		"numpy._core" -> "numpy._core.outer" [style="dotted"];
		"numpy._core" -> "numpy._core.tensordot" [style="dotted"];
		"numpy._core" -> "numpy._core.matrix_transpose" [style="dotted"];
		"numpy._core" -> "numpy._core.vecdot" [style="dotted"];
		"numpy._core" -> "numpy._core.float32" [style="dotted"];
		"numpy._core" -> "numpy._core.arange" [style="dotted"];
		"numpy._core" -> "numpy._core.array_repr" [style="dotted"];
		"numpy._core" -> "numpy._core.isnat" [style="dotted"];
		"numpy._core" -> "numpy._core.isscalar" [style="dotted"];
		"numpy._core" -> "numpy._core.signbit" [style="dotted"];
		"numpy._core" -> "numpy._core.array2string" [style="dotted"];
		"numpy._core" -> "numpy._core.max" [style="dotted"];
		"numpy._core" -> "numpy._core.number" [style="dotted"];
		"numpy._core" -> "numpy._core.result_type" [style="dotted"];
		"numpy._core" -> "numpy._core.linspace" [style="dotted"];
		"numpy._core" -> "numpy._core.getlimits" [style="dotted"];
		"numpy._core" -> "numpy._core.vstack" [style="dotted"];
		"numpy._core" -> "numpy._core.atleast_3d" [style="dotted"];
		"numpy._core" -> "numpy._core.atleast_1d" [style="dotted"];
		"numpy._core" -> "numpy._core.hstack" [style="dotted"];
		"numpy._core" -> "numpy._core.ones" [style="dotted"];
		"numpy._core" -> "numpy._core._methods" [style="dotted"];
		"numpy._core" -> "numpy._core.fromnumeric" [style="dotted"];
		"numpy._core" -> "numpy._core.shape_base" [style="dotted"];
		"numpy._core" -> "numpy._core._asarray" [style="dotted"];
		"numpy._core" -> "numpy._core.records" [style="dotted"];
		"numpy._core" -> "numpy._core.memmap" [style="dotted"];
		"numpy._core" -> "numpy._core.function_base" [style="dotted"];
		"numpy._core" -> "numpy._core._machar" [style="dotted"];
		"numpy._core" -> "numpy._core.einsumfunc" [style="dotted"];
		"numpy._core" -> "numpy._core._add_newdocs" [style="dotted"];
		"numpy._core" -> "numpy._core._add_newdocs_scalars" [style="dotted"];
		"numpy._core" -> "numpy._core._dtype_ctypes" [style="dotted"];
		"numpy._core" -> "numpy._core._internal" [style="dotted"];
		"numpy._core" -> "numpy._core._dtype" [style="dotted"];
		"numpy._core" -> "numpy._core.arccos" [style="dotted"];
		"numpy._core" -> "numpy._core.arccosh" [style="dotted"];
		"numpy._core" -> "numpy._core.arcsin" [style="dotted"];
		"numpy._core" -> "numpy._core.arcsinh" [style="dotted"];
		"numpy._core" -> "numpy._core.arctan" [style="dotted"];
		"numpy._core" -> "numpy._core.arctan2" [style="dotted"];
		"numpy._core" -> "numpy._core.arctanh" [style="dotted"];
		"numpy._core" -> "numpy._core.bitwise_and" [style="dotted"];
		"numpy._core" -> "numpy._core.bitwise_count" [style="dotted"];
		"numpy._core" -> "numpy._core.bitwise_or" [style="dotted"];
		"numpy._core" -> "numpy._core.bitwise_xor" [style="dotted"];
		"numpy._core" -> "numpy._core.bool_" [style="dotted"];
		"numpy._core" -> "numpy._core.byte" [style="dotted"];
		"numpy._core" -> "numpy._core.bytes_" [style="dotted"];
		"numpy._core" -> "numpy._core.cbrt" [style="dotted"];
		"numpy._core" -> "numpy._core.ceil" [style="dotted"];
		"numpy._core" -> "numpy._core.character" [style="dotted"];
		"numpy._core" -> "numpy._core.clongdouble" [style="dotted"];
		"numpy._core" -> "numpy._core.complex64" [style="dotted"];
		"numpy._core" -> "numpy._core.conj" [style="dotted"];
		"numpy._core" -> "numpy._core.conjugate" [style="dotted"];
		"numpy._core" -> "numpy._core.copysign" [style="dotted"];
		"numpy._core" -> "numpy._core.cos" [style="dotted"];
		"numpy._core" -> "numpy._core.cosh" [style="dotted"];
		"numpy._core" -> "numpy._core.datetime64" [style="dotted"];
		"numpy._core" -> "numpy._core.deg2rad" [style="dotted"];
		"numpy._core" -> "numpy._core.degrees" [style="dotted"];
		"numpy._core" -> "numpy._core.divmod" [style="dotted"];
		"numpy._core" -> "numpy._core.e" [style="dotted"];
		"numpy._core" -> "numpy._core.equal" [style="dotted"];
		"numpy._core" -> "numpy._core.euler_gamma" [style="dotted"];
		"numpy._core" -> "numpy._core.exp" [style="dotted"];
		"numpy._core" -> "numpy._core.expm1" [style="dotted"];
		"numpy._core" -> "numpy._core.fabs" [style="dotted"];
		"numpy._core" -> "numpy._core.float16" [style="dotted"];
		"numpy._core" -> "numpy._core.float_power" [style="dotted"];
		"numpy._core" -> "numpy._core.floating" [style="dotted"];
		"numpy._core" -> "numpy._core.floor" [style="dotted"];
		"numpy._core" -> "numpy._core.floor_divide" [style="dotted"];
		"numpy._core" -> "numpy._core.fmax" [style="dotted"];
		"numpy._core" -> "numpy._core.fmin" [style="dotted"];
		"numpy._core" -> "numpy._core.fmod" [style="dotted"];
		"numpy._core" -> "numpy._core.frexp" [style="dotted"];
		"numpy._core" -> "numpy._core.frompyfunc" [style="dotted"];
		"numpy._core" -> "numpy._core.gcd" [style="dotted"];
		"numpy._core" -> "numpy._core.greater" [style="dotted"];
		"numpy._core" -> "numpy._core.greater_equal" [style="dotted"];
		"numpy._core" -> "numpy._core.half" [style="dotted"];
		"numpy._core" -> "numpy._core.heaviside" [style="dotted"];
		"numpy._core" -> "numpy._core.hypot" [style="dotted"];
		"numpy._core" -> "numpy._core.int16" [style="dotted"];
		"numpy._core" -> "numpy._core.int32" [style="dotted"];
		"numpy._core" -> "numpy._core.int64" [style="dotted"];
		"numpy._core" -> "numpy._core.int8" [style="dotted"];
		"numpy._core" -> "numpy._core.integer" [style="dotted"];
		"numpy._core" -> "numpy._core.lcm" [style="dotted"];
		"numpy._core" -> "numpy._core.ldexp" [style="dotted"];
		"numpy._core" -> "numpy._core.left_shift" [style="dotted"];
		"numpy._core" -> "numpy._core.less" [style="dotted"];
		"numpy._core" -> "numpy._core.less_equal" [style="dotted"];
		"numpy._core" -> "numpy._core.log" [style="dotted"];
		"numpy._core" -> "numpy._core.log1p" [style="dotted"];
		"numpy._core" -> "numpy._core.log2" [style="dotted"];
		"numpy._core" -> "numpy._core.logaddexp" [style="dotted"];
		"numpy._core" -> "numpy._core.logaddexp2" [style="dotted"];
		"numpy._core" -> "numpy._core.logical_and" [style="dotted"];
		"numpy._core" -> "numpy._core.logical_not" [style="dotted"];
		"numpy._core" -> "numpy._core.logical_or" [style="dotted"];
		"numpy._core" -> "numpy._core.logical_xor" [style="dotted"];
		"numpy._core" -> "numpy._core.long" [style="dotted"];
		"numpy._core" -> "numpy._core.longdouble" [style="dotted"];
		"numpy._core" -> "numpy._core.maximum" [style="dotted"];
		"numpy._core" -> "numpy._core.minimum" [style="dotted"];
		"numpy._core" -> "numpy._core.mod" [style="dotted"];
		"numpy._core" -> "numpy._core.modf" [style="dotted"];
		"numpy._core" -> "numpy._core.negative" [style="dotted"];
		"numpy._core" -> "numpy._core.not_equal" [style="dotted"];
		"numpy._core" -> "numpy._core.pi" [style="dotted"];
		"numpy._core" -> "numpy._core.positive" [style="dotted"];
		"numpy._core" -> "numpy._core.power" [style="dotted"];
		"numpy._core" -> "numpy._core.rad2deg" [style="dotted"];
		"numpy._core" -> "numpy._core.radians" [style="dotted"];
		"numpy._core" -> "numpy._core.remainder" [style="dotted"];
		"numpy._core" -> "numpy._core.right_shift" [style="dotted"];
		"numpy._core" -> "numpy._core.rint" [style="dotted"];
		"numpy._core" -> "numpy._core.short" [style="dotted"];
		"numpy._core" -> "numpy._core.signedinteger" [style="dotted"];
		"numpy._core" -> "numpy._core.sinh" [style="dotted"];
		"numpy._core" -> "numpy._core.spacing" [style="dotted"];
		"numpy._core" -> "numpy._core.square" [style="dotted"];
		"numpy._core" -> "numpy._core.str_" [style="dotted"];
		"numpy._core" -> "numpy._core.subtract" [style="dotted"];
		"numpy._core" -> "numpy._core.tan" [style="dotted"];
		"numpy._core" -> "numpy._core.tanh" [style="dotted"];
		"numpy._core" -> "numpy._core.timedelta64" [style="dotted"];
		"numpy._core" -> "numpy._core.true_divide" [style="dotted"];
		"numpy._core" -> "numpy._core.trunc" [style="dotted"];
		"numpy._core" -> "numpy._core.ubyte" [style="dotted"];
		"numpy._core" -> "numpy._core.uint" [style="dotted"];
		"numpy._core" -> "numpy._core.uint16" [style="dotted"];
		"numpy._core" -> "numpy._core.uint32" [style="dotted"];
		"numpy._core" -> "numpy._core.uint64" [style="dotted"];
		"numpy._core" -> "numpy._core.uintc" [style="dotted"];
		"numpy._core" -> "numpy._core.uintp" [style="dotted"];
		"numpy._core" -> "numpy._core.ulong" [style="dotted"];
		"numpy._core" -> "numpy._core.ulonglong" [style="dotted"];
		"numpy._core" -> "numpy._core.unsignedinteger" [style="dotted"];
		"numpy._core" -> "numpy._core.ushort" [style="dotted"];
		"numpy._core" -> "numpy._core.void" [style="dotted"];
		"numpy._core" -> "numpy._core._ufunc_config" [style="dotted"];
		"numpy._core" -> "numpy._core.arrayprint" [style="dotted"];
		"numpy._core" -> "numpy._core._multiarray_umath" [style="dotted"];
		"numpy._core" -> "numpy._core._string_helpers" [style="dotted"];
		"numpy._core" -> "numpy._core._type_aliases" [style="dotted"];
		"numpy._core" -> "numpy._core._multiarray_tests" [style="dotted"];
		"numpy._core" -> "numpy._core.strings" [style="dotted"];
		"numpy._core" -> "numpy._core.defchararray" [style="dotted"];
	}
	subgraph "cluster_langchain_core.beta.runnables" {
		label="langchain_core.beta.runnables";
		"langchain_core.beta.runnables" -> "langchain_core.beta.runnables.context" [style="dotted"];
	}
	subgraph "cluster_pathspec" {
		label="pathspec";
		"pathspec" -> "pathspec.util" [style="dotted"];
		"pathspec" -> "pathspec.gitignore" [style="dotted"];
		"pathspec" -> "pathspec.pathspec" [style="dotted"];
		"pathspec" -> "pathspec.pattern" [style="dotted"];
		"pathspec" -> "pathspec._meta" [style="dotted"];
		"pathspec" -> "pathspec.patterns" [style="dotted"];
	}
	subgraph "cluster_pandas.io.formats" {
		label="pandas.io.formats";
		"pandas.io.formats" -> "pandas.io.formats.printing" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.style" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.format" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.console" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.html" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.string" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.csvs" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.style_render" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.excel" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats._color_data" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.css" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.info" [style="dotted"];
		"pandas.io.formats" -> "pandas.io.formats.xml" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.openai.image_generation" {
		label="litellm.llms.openai.image_generation";
		"litellm.llms.openai.image_generation" -> "litellm.llms.openai.image_generation.dall_e_2_transformation" [style="dotted"];
		"litellm.llms.openai.image_generation" -> "litellm.llms.openai.image_generation.dall_e_3_transformation" [style="dotted"];
		"litellm.llms.openai.image_generation" -> "litellm.llms.openai.image_generation.gpt_transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.router_utils.router_callbacks" {
		label="litellm.router_utils.router_callbacks";
		"litellm.router_utils.router_callbacks" -> "litellm.router_utils.router_callbacks.track_deployment_metrics" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.watsonx.completion" {
		label="litellm.llms.watsonx.completion";
		"litellm.llms.watsonx.completion" -> "litellm.llms.watsonx.completion.transformation" [style="dotted"];
	}
	subgraph "cluster_tokenizers.processors" {
		label="tokenizers.processors";
	}
	subgraph "cluster_litellm.llms.gemini" {
		label="litellm.llms.gemini";
		"litellm.llms.gemini" -> "litellm.llms.gemini.common_utils" [style="dotted"];
		"litellm.llms.gemini" -> "litellm.llms.gemini.realtime" [style="dotted"];
		"litellm.llms.gemini" -> "litellm.llms.gemini.cost_calculator" [style="dotted"];
		"litellm.llms.gemini" -> "litellm.llms.gemini.files" [style="dotted"];
		"litellm.llms.gemini" -> "litellm.llms.gemini.chat" [style="dotted"];
	}
	subgraph "cluster_ipywidgets" {
		label="ipywidgets";
		"ipywidgets" -> "ipywidgets._version" [style="dotted"];
		"ipywidgets" -> "ipywidgets.comm" [style="dotted"];
		"ipywidgets" -> "ipywidgets.widgets" [style="dotted"];
	}
	subgraph "cluster_langsmith.evaluation.integrations" {
		label="langsmith.evaluation.integrations";
		"langsmith.evaluation.integrations" -> "langsmith.evaluation.integrations._langchain" [style="dotted"];
	}
	subgraph "cluster_multiprocess" {
		label="multiprocess";
		"multiprocess" -> "multiprocess.__info__" [style="dotted"];
		"multiprocess" -> "multiprocess.process" [style="dotted"];
		"multiprocess" -> "multiprocess.util" [style="dotted"];
		"multiprocess" -> "multiprocess.AuthenticationError" [style="dotted"];
		"multiprocess" -> "multiprocess.BufferTooShort" [style="dotted"];
		"multiprocess" -> "multiprocess.resource_sharer" [style="dotted"];
		"multiprocess" -> "multiprocess.connection" [style="dotted"];
		"multiprocess" -> "multiprocess.get_start_method" [style="dotted"];
		"multiprocess" -> "multiprocess.set_start_method" [style="dotted"];
		"multiprocess" -> "multiprocess.resource_tracker" [style="dotted"];
		"multiprocess" -> "multiprocess.spawn" [style="dotted"];
		"multiprocess" -> "multiprocess.forkserver" [style="dotted"];
		"multiprocess" -> "multiprocess.reduction" [style="dotted"];
		"multiprocess" -> "multiprocess.get_context" [style="dotted"];
		"multiprocess" -> "multiprocess.TimeoutError" [style="dotted"];
		"multiprocess" -> "multiprocess.pool" [style="dotted"];
		"multiprocess" -> "multiprocess.shared_memory" [style="dotted"];
		"multiprocess" -> "multiprocess.context" [style="dotted"];
		"multiprocess" -> "multiprocess.Pool" [style="dotted"];
		"multiprocess" -> "multiprocess.dummy" [style="dotted"];
		"multiprocess" -> "multiprocess.managers" [style="dotted"];
		"multiprocess" -> "multiprocess.synchronize" [style="dotted"];
		"multiprocess" -> "multiprocess.queues" [style="dotted"];
		"multiprocess" -> "multiprocess.sharedctypes" [style="dotted"];
		"multiprocess" -> "multiprocess.popen_fork" [style="dotted"];
		"multiprocess" -> "multiprocess.popen_spawn_posix" [style="dotted"];
		"multiprocess" -> "multiprocess.popen_forkserver" [style="dotted"];
		"multiprocess" -> "multiprocess.popen_spawn_win32" [style="dotted"];
		"multiprocess" -> "multiprocess.heap" [style="dotted"];
	}
	subgraph "cluster_langchain_openai.chat_models" {
		label="langchain_openai.chat_models";
		"langchain_openai.chat_models" -> "langchain_openai.chat_models.azure" [style="dotted"];
		"langchain_openai.chat_models" -> "langchain_openai.chat_models.base" [style="dotted"];
	}
	subgraph "cluster_narwhals._interchange" {
		label="narwhals._interchange";
		"narwhals._interchange" -> "narwhals._interchange.series" [style="dotted"];
		"narwhals._interchange" -> "narwhals._interchange.dataframe" [style="dotted"];
	}
	subgraph "cluster_litellm.integrations.datadog" {
		label="litellm.integrations.datadog";
		"litellm.integrations.datadog" -> "litellm.integrations.datadog.datadog" [style="dotted"];
		"litellm.integrations.datadog" -> "litellm.integrations.datadog.datadog_llm_obs" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.key_binding" {
		label="prompt_toolkit.key_binding";
		"prompt_toolkit.key_binding" -> "prompt_toolkit.key_binding.key_bindings" [style="dotted"];
		"prompt_toolkit.key_binding" -> "prompt_toolkit.key_binding.key_processor" [style="dotted"];
		"prompt_toolkit.key_binding" -> "prompt_toolkit.key_binding.vi_state" [style="dotted"];
		"prompt_toolkit.key_binding" -> "prompt_toolkit.key_binding.defaults" [style="dotted"];
		"prompt_toolkit.key_binding" -> "prompt_toolkit.key_binding.emacs_state" [style="dotted"];
		"prompt_toolkit.key_binding" -> "prompt_toolkit.key_binding.digraphs" [style="dotted"];
		"prompt_toolkit.key_binding" -> "prompt_toolkit.key_binding.bindings" [style="dotted"];
	}
	subgraph "cluster_kivy.core.gl" {
		label="kivy.core.gl";
	}
	subgraph "cluster_pandas.core.arrays" {
		label="pandas.core.arrays";
		"pandas.core.arrays" -> "pandas.core.arrays.datetimelike" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.arrow" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.base" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.boolean" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.categorical" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.datetimes" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.floating" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.integer" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.interval" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.masked" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.numpy_" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.period" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.sparse" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.string_" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.string_arrow" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.timedeltas" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays._ranges" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays._mixins" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays._arrow_string_mixins" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays.numeric" [style="dotted"];
		"pandas.core.arrays" -> "pandas.core.arrays._utils" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.connectors" {
		label="sqlalchemy.connectors";
		"sqlalchemy.connectors" -> "sqlalchemy.connectors.asyncio" [style="dotted"];
		"sqlalchemy.connectors" -> "sqlalchemy.connectors.pyodbc" [style="dotted"];
		"sqlalchemy.connectors" -> "sqlalchemy.connectors.aioodbc" [style="dotted"];
	}
	subgraph "cluster_charset_normalizer" {
		label="charset_normalizer";
		"charset_normalizer" -> "charset_normalizer.api" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.legacy" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.models" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.utils" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.version" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.md__mypyc" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.constant" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.cd" [style="dotted"];
		"charset_normalizer" -> "charset_normalizer.md" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.dialects.sqlite" {
		label="sqlalchemy.dialects.sqlite";
		"sqlalchemy.dialects.sqlite" -> "sqlalchemy.dialects.sqlite.aiosqlite" [style="dotted"];
		"sqlalchemy.dialects.sqlite" -> "sqlalchemy.dialects.sqlite.base" [style="dotted"];
		"sqlalchemy.dialects.sqlite" -> "sqlalchemy.dialects.sqlite.pysqlcipher" [style="dotted"];
		"sqlalchemy.dialects.sqlite" -> "sqlalchemy.dialects.sqlite.pysqlite" [style="dotted"];
		"sqlalchemy.dialects.sqlite" -> "sqlalchemy.dialects.sqlite.dml" [style="dotted"];
		"sqlalchemy.dialects.sqlite" -> "sqlalchemy.dialects.sqlite.json" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.galadriel" {
		label="litellm.llms.galadriel";
		"litellm.llms.galadriel" -> "litellm.llms.galadriel.chat" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vertex_ai" {
		label="litellm.llms.vertex_ai";
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.vertex_ai_non_gemini" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.vertex_llm_base" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.common_utils" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.cost_calculator" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.image_generation" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.vertex_model_garden" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.vertex_embeddings" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.vertex_ai_partner_models" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.text_to_speech" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.multimodal_embeddings" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.gemini_embeddings" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.batches" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.gemini" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.context_caching" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.files" [style="dotted"];
		"litellm.llms.vertex_ai" -> "litellm.llms.vertex_ai.fine_tuning" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.styles" {
		label="prompt_toolkit.styles";
		"prompt_toolkit.styles" -> "prompt_toolkit.styles.base" [style="dotted"];
		"prompt_toolkit.styles" -> "prompt_toolkit.styles.defaults" [style="dotted"];
		"prompt_toolkit.styles" -> "prompt_toolkit.styles.named_colors" [style="dotted"];
		"prompt_toolkit.styles" -> "prompt_toolkit.styles.pygments" [style="dotted"];
		"prompt_toolkit.styles" -> "prompt_toolkit.styles.style" [style="dotted"];
		"prompt_toolkit.styles" -> "prompt_toolkit.styles.style_transformation" [style="dotted"];
	}
	subgraph "cluster_pandas.api.indexers" {
		label="pandas.api.indexers";
	}
	subgraph "cluster_narwhals._dask" {
		label="narwhals._dask";
		"narwhals._dask" -> "narwhals._dask.dataframe" [style="dotted"];
		"narwhals._dask" -> "narwhals._dask.utils" [style="dotted"];
		"narwhals._dask" -> "narwhals._dask.expr" [style="dotted"];
		"narwhals._dask" -> "narwhals._dask.group_by" [style="dotted"];
		"narwhals._dask" -> "narwhals._dask.namespace" [style="dotted"];
		"narwhals._dask" -> "narwhals._dask.selectors" [style="dotted"];
		"narwhals._dask" -> "narwhals._dask.expr_dt" [style="dotted"];
		"narwhals._dask" -> "narwhals._dask.expr_str" [style="dotted"];
	}
	subgraph "cluster_kivy" {
		label="kivy";
		"kivy" -> "kivy.logger" [style="dotted"];
		"kivy" -> "kivy.utils" [style="dotted"];
		"kivy" -> "kivy._version" [style="dotted"];
		"kivy" -> "kivy.deps" [style="dotted"];
		"kivy" -> "kivy.config" [style="dotted"];
		"kivy" -> "kivy.modules" [style="dotted"];
		"kivy" -> "kivy.graphics" [style="dotted"];
		"kivy" -> "kivy.cache" [style="dotted"];
		"kivy" -> "kivy.core" [style="dotted"];
		"kivy" -> "kivy.animation" [style="dotted"];
		"kivy" -> "kivy.vector" [style="dotted"];
		"kivy" -> "kivy.multistroke" [style="dotted"];
		"kivy" -> "kivy.clock" [style="dotted"];
		"kivy" -> "kivy.properties" [style="dotted"];
		"kivy" -> "kivy.gesture" [style="dotted"];
		"kivy" -> "kivy.event" [style="dotted"];
		"kivy" -> "kivy.base" [style="dotted"];
		"kivy" -> "kivy.loader" [style="dotted"];
		"kivy" -> "kivy.weakmethod" [style="dotted"];
		"kivy" -> "kivy.factory" [style="dotted"];
		"kivy" -> "kivy.app" [style="dotted"];
		"kivy" -> "kivy.resources" [style="dotted"];
		"kivy" -> "kivy.uix" [style="dotted"];
		"kivy" -> "kivy.compat" [style="dotted"];
		"kivy" -> "kivy.context" [style="dotted"];
		"kivy" -> "kivy._clock" [style="dotted"];
		"kivy" -> "kivy.lang" [style="dotted"];
		"kivy" -> "kivy.input" [style="dotted"];
		"kivy" -> "kivy.setupconfig" [style="dotted"];
		"kivy" -> "kivy.lib" [style="dotted"];
		"kivy" -> "kivy.eventmanager" [style="dotted"];
		"kivy" -> "kivy.metrics" [style="dotted"];
		"kivy" -> "kivy._metrics" [style="dotted"];
		"kivy" -> "kivy.weakproxy" [style="dotted"];
		"kivy" -> "kivy._event" [style="dotted"];
		"kivy" -> "kivy.factory_registers" [style="dotted"];
		"kivy" -> "kivy.atlas" [style="dotted"];
		"kivy" -> "kivy.parser" [style="dotted"];
		"kivy" -> "kivy.effects" [style="dotted"];
		"kivy" -> "kivy.extras" [style="dotted"];
		"kivy" -> "kivy.support" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.pubmed" {
		label="langchain_community.tools.pubmed";
		"langchain_community.tools.pubmed" -> "langchain_community.tools.pubmed.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_trends" {
		label="langchain_community.tools.google_trends";
		"langchain_community.tools.google_trends" -> "langchain_community.tools.google_trends.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.vectorstores.docarray" {
		label="langchain_community.vectorstores.docarray";
		"langchain_community.vectorstores.docarray" -> "langchain_community.vectorstores.docarray.hnsw" [style="dotted"];
		"langchain_community.vectorstores.docarray" -> "langchain_community.vectorstores.docarray.in_memory" [style="dotted"];
		"langchain_community.vectorstores.docarray" -> "langchain_community.vectorstores.docarray.base" [style="dotted"];
	}
	subgraph "cluster_pandas.api.extensions" {
		label="pandas.api.extensions";
	}
	subgraph "cluster_pydeck.types" {
		label="pydeck.types";
		"pydeck.types" -> "pydeck.types.string" [style="dotted"];
		"pydeck.types" -> "pydeck.types.image" [style="dotted"];
		"pydeck.types" -> "pydeck.types.function" [style="dotted"];
		"pydeck.types" -> "pydeck.types.base" [style="dotted"];
	}
	subgraph "cluster_langchain_community.embeddings" {
		label="langchain_community.embeddings";
		"langchain_community.embeddings" -> "langchain_community.embeddings.aleph_alpha" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.anyscale" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.ascend" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.awa" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.azure_openai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.baichuan" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.baidu_qianfan_endpoint" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.bedrock" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.bookend" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.clarifai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.clova" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.cohere" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.dashscope" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.databricks" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.deepinfra" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.edenai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.elasticsearch" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.embaas" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.ernie" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.fake" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.fastembed" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.gigachat" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.google_palm" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.gpt4all" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.gradient_ai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.huggingface" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.huggingface_hub" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.hunyuan" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.infinity" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.infinity_local" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.ipex_llm" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.itrex" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.javelin_ai_gateway" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.jina" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.johnsnowlabs" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.laser" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.llamacpp" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.llamafile" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.llm_rails" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.localai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.minimax" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.mlflow" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.mlflow_gateway" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.model2vec" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.modelscope_hub" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.mosaicml" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.naver" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.nemo" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.nlpcloud" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.oci_generative_ai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.octoai_embeddings" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.ollama" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.openai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.openvino" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.optimum_intel" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.oracleai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.ovhcloud" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.premai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.sagemaker_endpoint" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.sambanova" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.self_hosted" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.self_hosted_hugging_face" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.sentence_transformer" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.solar" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.spacy_embeddings" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.sparkllm" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.tensorflow_hub" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.textembed" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.titan_takeoff" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.vertexai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.volcengine" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.voyageai" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.xinference" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.yandex" [style="dotted"];
		"langchain_community.embeddings" -> "langchain_community.embeddings.zhipuai" [style="dotted"];
	}
	subgraph "cluster_langchain_core.beta" {
		label="langchain_core.beta";
		"langchain_core.beta" -> "langchain_core.beta.runnables" [style="dotted"];
	}
	subgraph "cluster_aiohappyeyeballs" {
		label="aiohappyeyeballs";
		"aiohappyeyeballs" -> "aiohappyeyeballs._staggered" [style="dotted"];
		"aiohappyeyeballs" -> "aiohappyeyeballs.impl" [style="dotted"];
		"aiohappyeyeballs" -> "aiohappyeyeballs.types" [style="dotted"];
		"aiohappyeyeballs" -> "aiohappyeyeballs.utils" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.databricks.chat" {
		label="litellm.llms.databricks.chat";
		"litellm.llms.databricks.chat" -> "litellm.llms.databricks.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.types.enterprise" {
		label="litellm.types.enterprise";
		"litellm.types.enterprise" -> "litellm.types.enterprise.enterprise_callbacks" [style="dotted"];
	}
	subgraph "cluster_asttokens" {
		label="asttokens";
		"asttokens" -> "asttokens.line_numbers" [style="dotted"];
		"asttokens" -> "asttokens.asttokens" [style="dotted"];
		"asttokens" -> "asttokens.util" [style="dotted"];
		"asttokens" -> "asttokens.mark_tokens" [style="dotted"];
		"asttokens" -> "asttokens.astroid_compat" [style="dotted"];
	}
	subgraph "cluster_kivy.core.video" {
		label="kivy.core.video";
		"kivy.core.video" -> "kivy.core.video.video_ffmpeg" [style="dotted"];
		"kivy.core.video" -> "kivy.core.video.video_gstplayer" [style="dotted"];
		"kivy.core.video" -> "kivy.core.video.video_null" [style="dotted"];
		"kivy.core.video" -> "kivy.core.video.video_ffpyplayer" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.cohere.embed" {
		label="litellm.llms.cohere.embed";
		"litellm.llms.cohere.embed" -> "litellm.llms.cohere.embed.transformation" [style="dotted"];
		"litellm.llms.cohere.embed" -> "litellm.llms.cohere.embed.handler" [style="dotted"];
		"litellm.llms.cohere.embed" -> "litellm.llms.cohere.embed.v1_transformation" [style="dotted"];
	}
	subgraph "cluster_proto.marshal.rules" {
		label="proto.marshal.rules";
		"proto.marshal.rules" -> "proto.marshal.rules.bytes" [style="dotted"];
		"proto.marshal.rules" -> "proto.marshal.rules.stringy_numbers" [style="dotted"];
		"proto.marshal.rules" -> "proto.marshal.rules.dates" [style="dotted"];
		"proto.marshal.rules" -> "proto.marshal.rules.struct" [style="dotted"];
		"proto.marshal.rules" -> "proto.marshal.rules.wrappers" [style="dotted"];
		"proto.marshal.rules" -> "proto.marshal.rules.field_mask" [style="dotted"];
		"proto.marshal.rules" -> "proto.marshal.rules.enums" [style="dotted"];
		"proto.marshal.rules" -> "proto.marshal.rules.message" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.dataforseo_api_search" {
		label="langchain_community.tools.dataforseo_api_search";
		"langchain_community.tools.dataforseo_api_search" -> "langchain_community.tools.dataforseo_api_search.tool" [style="dotted"];
	}
	subgraph "cluster_numpy.core" {
		label="numpy.core";
		"numpy.core" -> "numpy.core._utils" [style="dotted"];
		"numpy.core" -> "numpy.core.multiarray" [style="dotted"];
	}
	subgraph "cluster_datasets.formatting" {
		label="datasets.formatting";
		"datasets.formatting" -> "datasets.formatting.formatting" [style="dotted"];
		"datasets.formatting" -> "datasets.formatting.np_formatter" [style="dotted"];
		"datasets.formatting" -> "datasets.formatting.polars_formatter" [style="dotted"];
		"datasets.formatting" -> "datasets.formatting.torch_formatter" [style="dotted"];
		"datasets.formatting" -> "datasets.formatting.tf_formatter" [style="dotted"];
		"datasets.formatting" -> "datasets.formatting.jax_formatter" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.webdataset" {
		label="datasets.packaged_modules.webdataset";
		"datasets.packaged_modules.webdataset" -> "datasets.packaged_modules.webdataset._tenbin" [style="dotted"];
		"datasets.packaged_modules.webdataset" -> "datasets.packaged_modules.webdataset.webdataset" [style="dotted"];
	}
	subgraph "cluster_huggingface_hub.inference._generated.types" {
		label="huggingface_hub.inference._generated.types";
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.audio_classification" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.audio_to_audio" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.automatic_speech_recognition" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.base" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.chat_completion" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.depth_estimation" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.document_question_answering" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.feature_extraction" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.fill_mask" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.image_classification" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.image_segmentation" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.image_to_image" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.image_to_text" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.object_detection" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.question_answering" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.sentence_similarity" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.summarization" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.table_question_answering" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.text2text_generation" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.text_classification" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.text_generation" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.text_to_audio" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.text_to_image" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.text_to_speech" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.text_to_video" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.token_classification" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.translation" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.video_classification" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.visual_question_answering" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.zero_shot_classification" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.zero_shot_image_classification" [style="dotted"];
		"huggingface_hub.inference._generated.types" -> "huggingface_hub.inference._generated.types.zero_shot_object_detection" [style="dotted"];
	}
	subgraph "cluster_docutils.languages" {
		label="docutils.languages";
		"docutils.languages" -> "docutils.languages.af" [style="dotted"];
		"docutils.languages" -> "docutils.languages.ar" [style="dotted"];
		"docutils.languages" -> "docutils.languages.ca" [style="dotted"];
		"docutils.languages" -> "docutils.languages.cs" [style="dotted"];
		"docutils.languages" -> "docutils.languages.da" [style="dotted"];
		"docutils.languages" -> "docutils.languages.de" [style="dotted"];
		"docutils.languages" -> "docutils.languages.en" [style="dotted"];
		"docutils.languages" -> "docutils.languages.eo" [style="dotted"];
		"docutils.languages" -> "docutils.languages.es" [style="dotted"];
		"docutils.languages" -> "docutils.languages.fa" [style="dotted"];
		"docutils.languages" -> "docutils.languages.fi" [style="dotted"];
		"docutils.languages" -> "docutils.languages.fr" [style="dotted"];
		"docutils.languages" -> "docutils.languages.gl" [style="dotted"];
		"docutils.languages" -> "docutils.languages.he" [style="dotted"];
		"docutils.languages" -> "docutils.languages.it" [style="dotted"];
		"docutils.languages" -> "docutils.languages.ja" [style="dotted"];
		"docutils.languages" -> "docutils.languages.ka" [style="dotted"];
		"docutils.languages" -> "docutils.languages.ko" [style="dotted"];
		"docutils.languages" -> "docutils.languages.lt" [style="dotted"];
		"docutils.languages" -> "docutils.languages.lv" [style="dotted"];
		"docutils.languages" -> "docutils.languages.nl" [style="dotted"];
		"docutils.languages" -> "docutils.languages.pl" [style="dotted"];
		"docutils.languages" -> "docutils.languages.pt_br" [style="dotted"];
		"docutils.languages" -> "docutils.languages.ru" [style="dotted"];
		"docutils.languages" -> "docutils.languages.sk" [style="dotted"];
		"docutils.languages" -> "docutils.languages.sv" [style="dotted"];
		"docutils.languages" -> "docutils.languages.uk" [style="dotted"];
		"docutils.languages" -> "docutils.languages.zh_cn" [style="dotted"];
		"docutils.languages" -> "docutils.languages.zh_tw" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.shortcuts.progress_bar" {
		label="prompt_toolkit.shortcuts.progress_bar";
		"prompt_toolkit.shortcuts.progress_bar" -> "prompt_toolkit.shortcuts.progress_bar.base" [style="dotted"];
		"prompt_toolkit.shortcuts.progress_bar" -> "prompt_toolkit.shortcuts.progress_bar.formatters" [style="dotted"];
	}
	subgraph "cluster_jsonschema" {
		label="jsonschema";
		"jsonschema" -> "jsonschema._utils" [style="dotted"];
		"jsonschema" -> "jsonschema._types" [style="dotted"];
		"jsonschema" -> "jsonschema._format" [style="dotted"];
		"jsonschema" -> "jsonschema.exceptions" [style="dotted"];
		"jsonschema" -> "jsonschema._keywords" [style="dotted"];
		"jsonschema" -> "jsonschema._legacy_keywords" [style="dotted"];
		"jsonschema" -> "jsonschema._typing" [style="dotted"];
		"jsonschema" -> "jsonschema.validators" [style="dotted"];
		"jsonschema" -> "jsonschema.protocols" [style="dotted"];
	}
	subgraph "cluster_isoduration" {
		label="isoduration";
		"isoduration" -> "isoduration.formatter" [style="dotted"];
		"isoduration" -> "isoduration.parser" [style="dotted"];
		"isoduration" -> "isoduration.types" [style="dotted"];
		"isoduration" -> "isoduration.operations" [style="dotted"];
		"isoduration" -> "isoduration.constants" [style="dotted"];
	}
	subgraph "cluster_langsmith._internal.otel" {
		label="langsmith._internal.otel";
		"langsmith._internal.otel" -> "langsmith._internal.otel._otel_client" [style="dotted"];
		"langsmith._internal.otel" -> "langsmith._internal.otel._otel_exporter" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.packaging" {
		label="setuptools._vendor.packaging";
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.__about__" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._compat" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._structures" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging._typing" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.markers" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.requirements" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.specifiers" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.tags" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.utils" [style="dotted"];
		"setuptools._vendor.packaging" -> "setuptools._vendor.packaging.version" [style="dotted"];
	}
	subgraph "cluster_pkg_resources" {
		label="pkg_resources";
		"pkg_resources" -> "pkg_resources.extern" [style="dotted"];
		"pkg_resources" -> "pkg_resources._vendor" [style="dotted"];
	}
	subgraph "cluster_aiosignal" {
		label="aiosignal";
	}
	subgraph "cluster_litellm.types.integrations.rag" {
		label="litellm.types.integrations.rag";
		"litellm.types.integrations.rag" -> "litellm.types.integrations.rag.bedrock_knowledgebase" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.together_ai.rerank" {
		label="litellm.llms.together_ai.rerank";
		"litellm.llms.together_ai.rerank" -> "litellm.llms.together_ai.rerank.handler" [style="dotted"];
		"litellm.llms.together_ai.rerank" -> "litellm.llms.together_ai.rerank.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.cloudflare.chat" {
		label="litellm.llms.cloudflare.chat";
		"litellm.llms.cloudflare.chat" -> "litellm.llms.cloudflare.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.multion" {
		label="langchain_community.agent_toolkits.multion";
		"langchain_community.agent_toolkits.multion" -> "langchain_community.agent_toolkits.multion.toolkit" [style="dotted"];
	}
	subgraph "cluster_litellm.types.llms.anthropic_messages" {
		label="litellm.types.llms.anthropic_messages";
		"litellm.types.llms.anthropic_messages" -> "litellm.types.llms.anthropic_messages.anthropic_response" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.arrow" {
		label="datasets.packaged_modules.arrow";
		"datasets.packaged_modules.arrow" -> "datasets.packaged_modules.arrow.arrow" [style="dotted"];
	}
	subgraph "cluster_google.auth.crypt" {
		label="google.auth.crypt";
		"google.auth.crypt" -> "google.auth.crypt.base" [style="dotted"];
		"google.auth.crypt" -> "google.auth.crypt._cryptography_rsa" [style="dotted"];
		"google.auth.crypt" -> "google.auth.crypt._python_rsa" [style="dotted"];
		"google.auth.crypt" -> "google.auth.crypt.rsa" [style="dotted"];
		"google.auth.crypt" -> "google.auth.crypt.es256" [style="dotted"];
	}
	subgraph "cluster_langchain.schema" {
		label="langchain.schema";
	}
	subgraph "cluster_litellm.llms.llamafile" {
		label="litellm.llms.llamafile";
		"litellm.llms.llamafile" -> "litellm.llms.llamafile.chat" [style="dotted"];
	}
	subgraph "cluster_numpy.typing" {
		label="numpy.typing";
	}
	subgraph "cluster_langchain_community.memory" {
		label="langchain_community.memory";
		"langchain_community.memory" -> "langchain_community.memory.kg" [style="dotted"];
		"langchain_community.memory" -> "langchain_community.memory.motorhead_memory" [style="dotted"];
		"langchain_community.memory" -> "langchain_community.memory.zep_memory" [style="dotted"];
	}
	subgraph "cluster_IPython" {
		label="IPython";
		"IPython" -> "IPython.core" [style="dotted"];
		"IPython" -> "IPython.display" [style="dotted"];
		"IPython" -> "IPython.lib" [style="dotted"];
		"IPython" -> "IPython.utils" [style="dotted"];
		"IPython" -> "IPython.paths" [style="dotted"];
		"IPython" -> "IPython.external" [style="dotted"];
		"IPython" -> "IPython.extensions" [style="dotted"];
		"IPython" -> "IPython.terminal" [style="dotted"];
		"IPython" -> "IPython.testing" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.rerank_endpoints" {
		label="litellm.proxy.rerank_endpoints";
		"litellm.proxy.rerank_endpoints" -> "litellm.proxy.rerank_endpoints.endpoints" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.deepgram.audio_transcription" {
		label="litellm.llms.deepgram.audio_transcription";
		"litellm.llms.deepgram.audio_transcription" -> "litellm.llms.deepgram.audio_transcription.transformation" [style="dotted"];
	}
	subgraph "cluster_git.refs" {
		label="git.refs";
		"git.refs" -> "git.refs.head" [style="dotted"];
		"git.refs" -> "git.refs.log" [style="dotted"];
		"git.refs" -> "git.refs.reference" [style="dotted"];
		"git.refs" -> "git.refs.remote" [style="dotted"];
		"git.refs" -> "git.refs.symbolic" [style="dotted"];
		"git.refs" -> "git.refs.tag" [style="dotted"];
	}
	subgraph "cluster_setuptools.extern" {
		label="setuptools.extern";
		"setuptools.extern" -> "setuptools.extern.packaging" [style="dotted"];
		"setuptools.extern" -> "setuptools.extern.ordered_set" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.sagemaker.chat" {
		label="litellm.llms.sagemaker.chat";
		"litellm.llms.sagemaker.chat" -> "litellm.llms.sagemaker.chat.handler" [style="dotted"];
		"litellm.llms.sagemaker.chat" -> "litellm.llms.sagemaker.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.github.chat" {
		label="litellm.llms.github.chat";
		"litellm.llms.github.chat" -> "litellm.llms.github.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_debugpy.adapter" {
		label="debugpy.adapter";
	}
	subgraph "cluster_google.longrunning" {
		label="google.longrunning";
		"google.longrunning" -> "google.longrunning.operations_proto_pb2" [style="dotted"];
		"google.longrunning" -> "google.longrunning.operations_pb2" [style="dotted"];
		"google.longrunning" -> "google.longrunning.operations_grpc_pb2" [style="dotted"];
		"google.longrunning" -> "google.longrunning.operations_pb2_grpc" [style="dotted"];
	}
	subgraph "cluster_prometheus_client" {
		label="prometheus_client";
		"prometheus_client" -> "prometheus_client.exposition" [style="dotted"];
		"prometheus_client" -> "prometheus_client.gc_collector" [style="dotted"];
		"prometheus_client" -> "prometheus_client.values" [style="dotted"];
		"prometheus_client" -> "prometheus_client.metrics" [style="dotted"];
		"prometheus_client" -> "prometheus_client.metrics_core" [style="dotted"];
		"prometheus_client" -> "prometheus_client.platform_collector" [style="dotted"];
		"prometheus_client" -> "prometheus_client.process_collector" [style="dotted"];
		"prometheus_client" -> "prometheus_client.registry" [style="dotted"];
		"prometheus_client" -> "prometheus_client.samples" [style="dotted"];
		"prometheus_client" -> "prometheus_client.validation" [style="dotted"];
		"prometheus_client" -> "prometheus_client.context_managers" [style="dotted"];
		"prometheus_client" -> "prometheus_client.utils" [style="dotted"];
		"prometheus_client" -> "prometheus_client.decorator" [style="dotted"];
		"prometheus_client" -> "prometheus_client.mmap_dict" [style="dotted"];
		"prometheus_client" -> "prometheus_client.openmetrics" [style="dotted"];
		"prometheus_client" -> "prometheus_client.asgi" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.polygon" {
		label="langchain_community.tools.polygon";
		"langchain_community.tools.polygon" -> "langchain_community.tools.polygon.aggregates" [style="dotted"];
		"langchain_community.tools.polygon" -> "langchain_community.tools.polygon.financials" [style="dotted"];
		"langchain_community.tools.polygon" -> "langchain_community.tools.polygon.last_quote" [style="dotted"];
		"langchain_community.tools.polygon" -> "langchain_community.tools.polygon.ticker_news" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.zapier" {
		label="langchain_community.tools.zapier";
		"langchain_community.tools.zapier" -> "langchain_community.tools.zapier.tool" [style="dotted"];
		"langchain_community.tools.zapier" -> "langchain_community.tools.zapier.prompt" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.self_ask_with_search" {
		label="langchain.agents.self_ask_with_search";
		"langchain.agents.self_ask_with_search" -> "langchain.agents.self_ask_with_search.base" [style="dotted"];
		"langchain.agents.self_ask_with_search" -> "langchain.agents.self_ask_with_search.output_parser" [style="dotted"];
		"langchain.agents.self_ask_with_search" -> "langchain.agents.self_ask_with_search.prompt" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vertex_ai.gemini" {
		label="litellm.llms.vertex_ai.gemini";
		"litellm.llms.vertex_ai.gemini" -> "litellm.llms.vertex_ai.gemini.vertex_and_google_ai_studio_gemini" [style="dotted"];
		"litellm.llms.vertex_ai.gemini" -> "litellm.llms.vertex_ai.gemini.transformation" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.model_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.model_service.transports";
		"google.ai.generativelanguage_v1beta.services.model_service.transports" -> "google.ai.generativelanguage_v1beta.services.model_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.model_service.transports" -> "google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.model_service.transports" -> "google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.model_service.transports" -> "google.ai.generativelanguage_v1beta.services.model_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.model_service.transports" -> "google.ai.generativelanguage_v1beta.services.model_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_altair.vegalite.v5" {
		label="altair.vegalite.v5";
		"altair.vegalite.v5" -> "altair.vegalite.v5.SCHEMA_VERSION" [style="dotted"];
		"altair.vegalite.v5" -> "altair.vegalite.v5.api" [style="dotted"];
		"altair.vegalite.v5" -> "altair.vegalite.v5.compiler" [style="dotted"];
		"altair.vegalite.v5" -> "altair.vegalite.v5.schema" [style="dotted"];
		"altair.vegalite.v5" -> "altair.vegalite.v5.data" [style="dotted"];
		"altair.vegalite.v5" -> "altair.vegalite.v5.display" [style="dotted"];
		"altair.vegalite.v5" -> "altair.vegalite.v5.theme" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.criteria" {
		label="langchain.evaluation.criteria";
		"langchain.evaluation.criteria" -> "langchain.evaluation.criteria.eval_chain" [style="dotted"];
		"langchain.evaluation.criteria" -> "langchain.evaluation.criteria.prompt" [style="dotted"];
	}
	subgraph "cluster_xml.etree" {
		label="xml.etree";
		"xml.etree" -> "xml.etree.ElementPath" [style="dotted"];
		"xml.etree" -> "xml.etree.ElementTree" [style="dotted"];
		"xml.etree" -> "xml.etree.ElementInclude" [style="dotted"];
		"xml.etree" -> "xml.etree.cElementTree" [style="dotted"];
	}
	subgraph "cluster_nbformat.v1" {
		label="nbformat.v1";
		"nbformat.v1" -> "nbformat.v1.convert" [style="dotted"];
		"nbformat.v1" -> "nbformat.v1.nbbase" [style="dotted"];
		"nbformat.v1" -> "nbformat.v1.nbjson" [style="dotted"];
		"nbformat.v1" -> "nbformat.v1.rwbase" [style="dotted"];
	}
	subgraph "cluster_litellm.integrations.langfuse" {
		label="litellm.integrations.langfuse";
		"litellm.integrations.langfuse" -> "litellm.integrations.langfuse.langfuse" [style="dotted"];
		"litellm.integrations.langfuse" -> "litellm.integrations.langfuse.langfuse_handler" [style="dotted"];
		"litellm.integrations.langfuse" -> "litellm.integrations.langfuse.langfuse_prompt_management" [style="dotted"];
	}
	subgraph "cluster_pycparser" {
		label="pycparser";
		"pycparser" -> "pycparser.c_ast" [style="dotted"];
		"pycparser" -> "pycparser.c_parser" [style="dotted"];
		"pycparser" -> "pycparser.lextab" [style="dotted"];
		"pycparser" -> "pycparser.yacctab" [style="dotted"];
		"pycparser" -> "pycparser.ply" [style="dotted"];
		"pycparser" -> "pycparser.c_lexer" [style="dotted"];
		"pycparser" -> "pycparser.plyparser" [style="dotted"];
		"pycparser" -> "pycparser.ast_transforms" [style="dotted"];
	}
	subgraph "cluster_yarl" {
		label="yarl";
		"yarl" -> "yarl._query" [style="dotted"];
		"yarl" -> "yarl._url" [style="dotted"];
		"yarl" -> "yarl._parse" [style="dotted"];
		"yarl" -> "yarl._path" [style="dotted"];
		"yarl" -> "yarl._quoters" [style="dotted"];
		"yarl" -> "yarl._quoting" [style="dotted"];
		"yarl" -> "yarl._quoting_py" [style="dotted"];
		"yarl" -> "yarl._quoting_c" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.replicate.chat" {
		label="litellm.llms.replicate.chat";
		"litellm.llms.replicate.chat" -> "litellm.llms.replicate.chat.handler" [style="dotted"];
		"litellm.llms.replicate.chat" -> "litellm.llms.replicate.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.deepgram" {
		label="litellm.llms.deepgram";
		"litellm.llms.deepgram" -> "litellm.llms.deepgram.common_utils" [style="dotted"];
		"litellm.llms.deepgram" -> "litellm.llms.deepgram.audio_transcription" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.anthropic.completion" {
		label="litellm.llms.anthropic.completion";
		"litellm.llms.anthropic.completion" -> "litellm.llms.anthropic.completion.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.file_management" {
		label="langchain_community.agent_toolkits.file_management";
		"langchain_community.agent_toolkits.file_management" -> "langchain_community.agent_toolkits.file_management.toolkit" [style="dotted"];
	}
	subgraph "cluster_blinker" {
		label="blinker";
		"blinker" -> "blinker.base" [style="dotted"];
		"blinker" -> "blinker._utilities" [style="dotted"];
		"blinker" -> "blinker._saferef" [style="dotted"];
	}
	subgraph "cluster_langchain_core.vectorstores" {
		label="langchain_core.vectorstores";
		"langchain_core.vectorstores" -> "langchain_core.vectorstores.base" [style="dotted"];
		"langchain_core.vectorstores" -> "langchain_core.vectorstores.in_memory" [style="dotted"];
		"langchain_core.vectorstores" -> "langchain_core.vectorstores.utils" [style="dotted"];
	}
	subgraph "cluster_langsmith" {
		label="langsmith";
		"langsmith" -> "langsmith.schemas" [style="dotted"];
		"langsmith" -> "langsmith.client" [style="dotted"];
		"langsmith" -> "langsmith.utils" [style="dotted"];
		"langsmith" -> "langsmith.run_helpers" [style="dotted"];
		"langsmith" -> "langsmith.run_trees" [style="dotted"];
		"langsmith" -> "langsmith.env" [style="dotted"];
		"langsmith" -> "langsmith._expect" [style="dotted"];
		"langsmith" -> "langsmith.async_client" [style="dotted"];
		"langsmith" -> "langsmith.evaluation" [style="dotted"];
		"langsmith" -> "langsmith._internal" [style="dotted"];
		"langsmith" -> "langsmith.testing" [style="dotted"];
	}
	subgraph "cluster_importlib_metadata.compat" {
		label="importlib_metadata.compat";
		"importlib_metadata.compat" -> "importlib_metadata.compat.py39" [style="dotted"];
		"importlib_metadata.compat" -> "importlib_metadata.compat.py311" [style="dotted"];
	}
	subgraph "cluster_jedi.inference.gradual" {
		label="jedi.inference.gradual";
		"jedi.inference.gradual" -> "jedi.inference.gradual.stub_value" [style="dotted"];
		"jedi.inference.gradual" -> "jedi.inference.gradual.conversion" [style="dotted"];
		"jedi.inference.gradual" -> "jedi.inference.gradual.utils" [style="dotted"];
		"jedi.inference.gradual" -> "jedi.inference.gradual.typeshed" [style="dotted"];
		"jedi.inference.gradual" -> "jedi.inference.gradual.generics" [style="dotted"];
		"jedi.inference.gradual" -> "jedi.inference.gradual.base" [style="dotted"];
		"jedi.inference.gradual" -> "jedi.inference.gradual.typing" [style="dotted"];
		"jedi.inference.gradual" -> "jedi.inference.gradual.type_var" [style="dotted"];
		"jedi.inference.gradual" -> "jedi.inference.gradual.annotation" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.string_distance" {
		label="langchain.evaluation.string_distance";
		"langchain.evaluation.string_distance" -> "langchain.evaluation.string_distance.base" [style="dotted"];
	}
	subgraph "cluster_langchain_google_genai" {
		label="langchain_google_genai";
		"langchain_google_genai" -> "langchain_google_genai._enums" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai._genai_extension" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai.chat_models" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai.embeddings" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai.genai_aqa" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai.google_vector_store" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai.llms" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai._common" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai._function_utils" [style="dotted"];
		"langchain_google_genai" -> "langchain_google_genai._image_utils" [style="dotted"];
	}
	subgraph "cluster_numpy._utils" {
		label="numpy._utils";
		"numpy._utils" -> "numpy._utils._convertions" [style="dotted"];
		"numpy._utils" -> "numpy._utils._inspect" [style="dotted"];
	}
	subgraph "cluster_langchain" {
		label="langchain";
		"langchain" -> "langchain.agents" [style="dotted"];
		"langchain" -> "langchain.chains" [style="dotted"];
		"langchain" -> "langchain.globals" [style="dotted"];
		"langchain" -> "langchain._api" [style="dotted"];
		"langchain" -> "langchain.retrievers" [style="dotted"];
		"langchain" -> "langchain.schema" [style="dotted"];
		"langchain" -> "langchain.output_parsers" [style="dotted"];
		"langchain" -> "langchain.storage" [style="dotted"];
		"langchain" -> "langchain.memory" [style="dotted"];
		"langchain" -> "langchain.text_splitter" [style="dotted"];
		"langchain" -> "langchain.tools" [style="dotted"];
		"langchain" -> "langchain.utilities" [style="dotted"];
		"langchain" -> "langchain.smith" [style="dotted"];
		"langchain" -> "langchain.evaluation" [style="dotted"];
	}
	subgraph "cluster_pyarrow.vendored" {
		label="pyarrow.vendored";
		"pyarrow.vendored" -> "pyarrow.vendored.docscrape" [style="dotted"];
		"pyarrow.vendored" -> "pyarrow.vendored.version" [style="dotted"];
	}
	subgraph "cluster_pandas.util" {
		label="pandas.util";
		"pandas.util" -> "pandas.util._decorators" [style="dotted"];
		"pandas.util" -> "pandas.util._print_versions" [style="dotted"];
		"pandas.util" -> "pandas.util._tester" [style="dotted"];
		"pandas.util" -> "pandas.util._exceptions" [style="dotted"];
		"pandas.util" -> "pandas.util.version" [style="dotted"];
		"pandas.util" -> "pandas.util._validators" [style="dotted"];
	}
	subgraph "cluster_curses" {
		label="curses";
		"curses" -> "curses.has_key" [style="dotted"];
	}
	subgraph "cluster_pydeck.bindings" {
		label="pydeck.bindings";
		"pydeck.bindings" -> "pydeck.bindings.deck" [style="dotted"];
		"pydeck.bindings" -> "pydeck.bindings.layer" [style="dotted"];
		"pydeck.bindings" -> "pydeck.bindings.light_settings" [style="dotted"];
		"pydeck.bindings" -> "pydeck.bindings.view" [style="dotted"];
		"pydeck.bindings" -> "pydeck.bindings.view_state" [style="dotted"];
		"pydeck.bindings" -> "pydeck.bindings.map_styles" [style="dotted"];
		"pydeck.bindings" -> "pydeck.bindings.json_tools" [style="dotted"];
		"pydeck.bindings" -> "pydeck.bindings.base_map_provider" [style="dotted"];
	}
	subgraph "cluster_email" {
		label="email";
		"email" -> "email.errors" [style="dotted"];
		"email" -> "email.charset" [style="dotted"];
		"email" -> "email.header" [style="dotted"];
		"email" -> "email._header_value_parser" [style="dotted"];
		"email" -> "email.parser" [style="dotted"];
		"email" -> "email.feedparser" [style="dotted"];
		"email" -> "email._policybase" [style="dotted"];
		"email" -> "email.utils" [style="dotted"];
		"email" -> "email._parseaddr" [style="dotted"];
		"email" -> "email.message" [style="dotted"];
		"email" -> "email._encoded_words" [style="dotted"];
		"email" -> "email.generator" [style="dotted"];
		"email" -> "email.iterators" [style="dotted"];
		"email" -> "email.policy" [style="dotted"];
		"email" -> "email.headerregistry" [style="dotted"];
		"email" -> "email.contentmanager" [style="dotted"];
		"email" -> "email.quoprimime" [style="dotted"];
		"email" -> "email.base64mime" [style="dotted"];
		"email" -> "email.encoders" [style="dotted"];
		"email" -> "email.mime" [style="dotted"];
	}
	subgraph "cluster_pyasn1.codec.cer" {
		label="pyasn1.codec.cer";
		"pyasn1.codec.cer" -> "pyasn1.codec.cer.decoder" [style="dotted"];
		"pyasn1.codec.cer" -> "pyasn1.codec.cer.encoder" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.dialects.mssql" {
		label="sqlalchemy.dialects.mssql";
		"sqlalchemy.dialects.mssql" -> "sqlalchemy.dialects.mssql.base" [style="dotted"];
		"sqlalchemy.dialects.mssql" -> "sqlalchemy.dialects.mssql.information_schema" [style="dotted"];
		"sqlalchemy.dialects.mssql" -> "sqlalchemy.dialects.mssql.aioodbc" [style="dotted"];
		"sqlalchemy.dialects.mssql" -> "sqlalchemy.dialects.mssql.pymssql" [style="dotted"];
		"sqlalchemy.dialects.mssql" -> "sqlalchemy.dialects.mssql.pyodbc" [style="dotted"];
		"sqlalchemy.dialects.mssql" -> "sqlalchemy.dialects.mssql.json" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.cohere.completion" {
		label="litellm.llms.cohere.completion";
		"litellm.llms.cohere.completion" -> "litellm.llms.cohere.completion.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.ollama.completion" {
		label="litellm.llms.ollama.completion";
		"litellm.llms.ollama.completion" -> "litellm.llms.ollama.completion.handler" [style="dotted"];
		"litellm.llms.ollama.completion" -> "litellm.llms.ollama.completion.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain_core.example_selectors" {
		label="langchain_core.example_selectors";
		"langchain_core.example_selectors" -> "langchain_core.example_selectors.base" [style="dotted"];
		"langchain_core.example_selectors" -> "langchain_core.example_selectors.length_based" [style="dotted"];
		"langchain_core.example_selectors" -> "langchain_core.example_selectors.semantic_similarity" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.spark_sql" {
		label="langchain_community.tools.spark_sql";
		"langchain_community.tools.spark_sql" -> "langchain_community.tools.spark_sql.tool" [style="dotted"];
		"langchain_community.tools.spark_sql" -> "langchain_community.tools.spark_sql.prompt" [style="dotted"];
	}
	subgraph "cluster_kivy.input.postproc" {
		label="kivy.input.postproc";
		"kivy.input.postproc" -> "kivy.input.postproc.doubletap" [style="dotted"];
		"kivy.input.postproc" -> "kivy.input.postproc.tripletap" [style="dotted"];
		"kivy.input.postproc" -> "kivy.input.postproc.ignorelist" [style="dotted"];
		"kivy.input.postproc" -> "kivy.input.postproc.retaintouch" [style="dotted"];
		"kivy.input.postproc" -> "kivy.input.postproc.dejitter" [style="dotted"];
		"kivy.input.postproc" -> "kivy.input.postproc.calibration" [style="dotted"];
	}
	subgraph "cluster_langchain_community.document_loaders.blob_loaders" {
		label="langchain_community.document_loaders.blob_loaders";
		"langchain_community.document_loaders.blob_loaders" -> "langchain_community.document_loaders.blob_loaders.cloud_blob_loader" [style="dotted"];
		"langchain_community.document_loaders.blob_loaders" -> "langchain_community.document_loaders.blob_loaders.file_system" [style="dotted"];
		"langchain_community.document_loaders.blob_loaders" -> "langchain_community.document_loaders.blob_loaders.youtube_audio" [style="dotted"];
		"langchain_community.document_loaders.blob_loaders" -> "langchain_community.document_loaders.blob_loaders.schema" [style="dotted"];
	}
	subgraph "cluster_narwhals._spark_like" {
		label="narwhals._spark_like";
		"narwhals._spark_like" -> "narwhals._spark_like.dataframe" [style="dotted"];
		"narwhals._spark_like" -> "narwhals._spark_like.namespace" [style="dotted"];
		"narwhals._spark_like" -> "narwhals._spark_like.expr" [style="dotted"];
		"narwhals._spark_like" -> "narwhals._spark_like.selectors" [style="dotted"];
		"narwhals._spark_like" -> "narwhals._spark_like.utils" [style="dotted"];
		"narwhals._spark_like" -> "narwhals._spark_like.expr_dt" [style="dotted"];
		"narwhals._spark_like" -> "narwhals._spark_like.expr_list" [style="dotted"];
		"narwhals._spark_like" -> "narwhals._spark_like.expr_str" [style="dotted"];
		"narwhals._spark_like" -> "narwhals._spark_like.expr_struct" [style="dotted"];
		"narwhals._spark_like" -> "narwhals._spark_like.typing" [style="dotted"];
		"narwhals._spark_like" -> "narwhals._spark_like.group_by" [style="dotted"];
	}
	subgraph "cluster_json" {
		label="json";
		"json" -> "json.scanner" [style="dotted"];
		"json" -> "json.decoder" [style="dotted"];
		"json" -> "json.encoder" [style="dotted"];
	}
	subgraph "cluster_langchain_community.document_loaders.parsers.html" {
		label="langchain_community.document_loaders.parsers.html";
		"langchain_community.document_loaders.parsers.html" -> "langchain_community.document_loaders.parsers.html.bs4" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.layout" {
		label="prompt_toolkit.layout";
		"prompt_toolkit.layout" -> "prompt_toolkit.layout.containers" [style="dotted"];
		"prompt_toolkit.layout" -> "prompt_toolkit.layout.controls" [style="dotted"];
		"prompt_toolkit.layout" -> "prompt_toolkit.layout.dimension" [style="dotted"];
		"prompt_toolkit.layout" -> "prompt_toolkit.layout.layout" [style="dotted"];
		"prompt_toolkit.layout" -> "prompt_toolkit.layout.margins" [style="dotted"];
		"prompt_toolkit.layout" -> "prompt_toolkit.layout.menus" [style="dotted"];
		"prompt_toolkit.layout" -> "prompt_toolkit.layout.scrollable_pane" [style="dotted"];
		"prompt_toolkit.layout" -> "prompt_toolkit.layout.processors" [style="dotted"];
		"prompt_toolkit.layout" -> "prompt_toolkit.layout.dummy" [style="dotted"];
		"prompt_toolkit.layout" -> "prompt_toolkit.layout.mouse_handlers" [style="dotted"];
		"prompt_toolkit.layout" -> "prompt_toolkit.layout.screen" [style="dotted"];
		"prompt_toolkit.layout" -> "prompt_toolkit.layout.utils" [style="dotted"];
	}
	subgraph "cluster_ipykernel.comm" {
		label="ipykernel.comm";
		"ipykernel.comm" -> "ipykernel.comm.comm" [style="dotted"];
		"ipykernel.comm" -> "ipykernel.comm.manager" [style="dotted"];
	}
	subgraph "cluster_langchain_community.chains.graph_qa" {
		label="langchain_community.chains.graph_qa";
		"langchain_community.chains.graph_qa" -> "langchain_community.chains.graph_qa.cypher" [style="dotted"];
		"langchain_community.chains.graph_qa" -> "langchain_community.chains.graph_qa.cypher_utils" [style="dotted"];
		"langchain_community.chains.graph_qa" -> "langchain_community.chains.graph_qa.prompts" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.conversational_chat" {
		label="langchain.agents.conversational_chat";
		"langchain.agents.conversational_chat" -> "langchain.agents.conversational_chat.base" [style="dotted"];
		"langchain.agents.conversational_chat" -> "langchain.agents.conversational_chat.output_parser" [style="dotted"];
		"langchain.agents.conversational_chat" -> "langchain.agents.conversational_chat.prompt" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.text_service" {
		label="google.ai.generativelanguage_v1beta.services.text_service";
		"google.ai.generativelanguage_v1beta.services.text_service" -> "google.ai.generativelanguage_v1beta.services.text_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.text_service" -> "google.ai.generativelanguage_v1beta.services.text_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.text_service" -> "google.ai.generativelanguage_v1beta.services.text_service.transports" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools" {
		label="langchain_community.tools";
		"langchain_community.tools" -> "langchain_community.tools.azure_ai_services" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.azure_cognitive_services" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.connery" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.convert_to_openai" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.dataherald" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.edenai" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.file_management" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.gmail" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_books" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.ifttt" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.metaphor_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.playwright" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.plugin" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.steamship_image_generation" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.tavily_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.yahoo_finance_news" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.nuclia" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.ainetwork" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.arxiv" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.asknews" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.bearly" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.bing_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.brave_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.cassandra_database" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.cogniswitch" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.ddg_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.e2b_data_analysis" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.eleven_labs" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.financial_datasets" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_cloud" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_places" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_serper" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.graphql" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.human" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.interaction" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.jina_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.jira" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.json" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.merriam_webster" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.mojeek_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.nasa" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.office365" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.openweathermap" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.polygon" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.powerbi" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.pubmed" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.reddit_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.requests" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.scenexplain" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.searchapi" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.searx_search" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.shell" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.slack" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.sleep" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.spark_sql" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.sql_database" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.stackexchange" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.steam" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.vectorstore" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.wikipedia" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.wolfram_alpha" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.you" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.youtube" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.zapier" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.zenguard" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.openapi" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.multion" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.amadeus" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.memorize" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_trends" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_scholar" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_lens" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_jobs" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.google_finance" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.golden_query" [style="dotted"];
		"langchain_community.tools" -> "langchain_community.tools.dataforseo_api_search" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.oobabooga" {
		label="litellm.llms.oobabooga";
		"litellm.llms.oobabooga" -> "litellm.llms.oobabooga.common_utils" [style="dotted"];
		"litellm.llms.oobabooga" -> "litellm.llms.oobabooga.chat" [style="dotted"];
	}
	subgraph "cluster_kivy.core.audio" {
		label="kivy.core.audio";
		"kivy.core.audio" -> "kivy.core.audio.audio_gstplayer" [style="dotted"];
		"kivy.core.audio" -> "kivy.core.audio.audio_avplayer" [style="dotted"];
		"kivy.core.audio" -> "kivy.core.audio.audio_ffpyplayer" [style="dotted"];
		"kivy.core.audio" -> "kivy.core.audio.audio_pygame" [style="dotted"];
		"kivy.core.audio" -> "kivy.core.audio.audio_android" [style="dotted"];
		"kivy.core.audio" -> "kivy.core.audio.audio_sdl2" [style="dotted"];
	}
	subgraph "cluster_openai.types.vector_stores" {
		label="openai.types.vector_stores";
		"openai.types.vector_stores" -> "openai.types.vector_stores.file_list_params" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.vector_store_file" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.file_create_params" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.file_update_params" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.file_content_response" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.vector_store_file_batch" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.file_batch_create_params" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.vector_store_file_deleted" [style="dotted"];
		"openai.types.vector_stores" -> "openai.types.vector_stores.file_batch_list_files_params" [style="dotted"];
	}
	subgraph "cluster_joblib.externals.loky.backend" {
		label="joblib.externals.loky.backend";
		"joblib.externals.loky.backend" -> "joblib.externals.loky.backend._win_reduction" [style="dotted"];
		"joblib.externals.loky.backend" -> "joblib.externals.loky.backend.reduction" [style="dotted"];
		"joblib.externals.loky.backend" -> "joblib.externals.loky.backend.spawn" [style="dotted"];
		"joblib.externals.loky.backend" -> "joblib.externals.loky.backend.context" [style="dotted"];
		"joblib.externals.loky.backend" -> "joblib.externals.loky.backend.queues" [style="dotted"];
		"joblib.externals.loky.backend" -> "joblib.externals.loky.backend.utils" [style="dotted"];
		"joblib.externals.loky.backend" -> "joblib.externals.loky.backend.resource_tracker" [style="dotted"];
		"joblib.externals.loky.backend" -> "joblib.externals.loky.backend._posix_reduction" [style="dotted"];
		"joblib.externals.loky.backend" -> "joblib.externals.loky.backend.process" [style="dotted"];
		"joblib.externals.loky.backend" -> "joblib.externals.loky.backend.synchronize" [style="dotted"];
		"joblib.externals.loky.backend" -> "joblib.externals.loky.backend.popen_loky_win32" [style="dotted"];
		"joblib.externals.loky.backend" -> "joblib.externals.loky.backend.popen_loky_posix" [style="dotted"];
		"joblib.externals.loky.backend" -> "joblib.externals.loky.backend.fork_exec" [style="dotted"];
	}
	subgraph "cluster_yt_dlp.extractor" {
		label="yt_dlp.extractor";
		"yt_dlp.extractor" -> "yt_dlp.extractor.generic" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor._extractors" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.extractors" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.adobepass" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.common" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.commonprotocols" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.youtube" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.openload" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lazy_extractors" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.abc" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.abcnews" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.abcotvs" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.abematv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.academicearth" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.acast" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.acfun" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.adn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.adobeconnect" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.adobetv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.adultswim" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.aenetworks" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.aeonco" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.afreecatv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.agora" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.airtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.aitube" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.aliexpress" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.aljazeera" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.allocine" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.allstar" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.alphaporno" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.alsace20tv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.altcensored" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.alura" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.amadeustv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.amara" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.amazon" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.amazonminitv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.amcnetworks" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.americastestkitchen" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.anchorfm" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.angel" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.antenna" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.anvato" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.aol" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.apa" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.aparat" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.appleconnect" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.applepodcasts" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.appletrailers" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.archiveorg" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.arcpublishing" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ard" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.arkena" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.arnes" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.art19" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.arte" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.asobichannel" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.asobistage" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.atresplayer" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.atscaleconf" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.atvat" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.audimedia" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.audioboom" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.audiodraft" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.audiomack" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.audius" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.awaan" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.axs" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.azmedien" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.baidu" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.banbye" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bandaichannel" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bandcamp" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bandlab" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bannedvideo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bbc" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.beacon" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.beatbump" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.beatport" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.beeg" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.behindkink" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bellmedia" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.berufetv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bet" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bfi" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bfmtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bibeltv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bigflix" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bigo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bild" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bilibili" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.biobiochiletv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bitchute" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.blackboardcollaborate" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bleacherreport" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.blerp" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.blogger" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bloomberg" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bluesky" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bokecc" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bongacams" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.boosty" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bostonglobe" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.box" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.boxcast" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bpb" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.br" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.brainpop" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bravotv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.breitbart" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.brightcove" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.brilliantpala" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bundesliga" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bundestag" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.bunnycdn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.businessinsider" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.buzzfeed" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.byutv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.c56" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.caffeinetv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.callin" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.caltrans" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cam4" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.camdemy" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.camfm" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cammodels" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.camsoda" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.camtasia" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.canal1" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.canalalpha" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.canalc2" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.canalplus" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.canalsurmas" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.caracoltv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cartoonnetwork" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cbc" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cbs" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cbsnews" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cbssports" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ccc" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ccma" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cctv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cda" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cellebrite" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ceskatelevize" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cgtn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.charlierose" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.chaturbate" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.chilloutzone" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.chzzk" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cinemax" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cinetecamilano" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cineverse" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ciscolive" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ciscowebex" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cjsw" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.clipchamp" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.clippit" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cliprs" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.closertotruth" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cloudflarestream" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cloudycdn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.clubic" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.clyp" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cmt" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cnbc" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cnn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.comedycentral" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.commonmistakes" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.condenast" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.contv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.corus" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.coub" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cozytv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cpac" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cracked" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.crackle" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.craftsy" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.crooksandliars" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.crowdbunker" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.crtvg" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cspan" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ctsnews" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ctv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ctvnews" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cultureunplugged" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.curiositystream" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cwtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.cybrary" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dacast" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dailymail" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dailymotion" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dailywire" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.damtomo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dangalplay" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.daum" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.daystar" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dbtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dctp" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.democracynow" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.detik" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.deuxm" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dfb" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dhm" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.digitalconcerthall" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.digiteka" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.digiview" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.discogs" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.disney" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dispeak" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dlf" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dlive" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.douyutv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dplay" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.drbonanza" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dreisat" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.drooble" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dropbox" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dropout" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.drtalks" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.drtuber" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.drtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dtube" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.duboku" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dumpert" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.duoplay" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dvtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.dw" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.eagleplatform" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ebaumsworld" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ebay" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.egghead" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.eggs" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.eighttracks" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.eitb" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.elementorembed" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.elonet" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.elpais" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.eltrecetv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.embedly" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.epicon" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.epidemicsound" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.eplus" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.epoch" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.eporner" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.erocast" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.eroprofile" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.err" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ertgr" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.espn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ettutv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.europa" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.europeantour" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.eurosport" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.euscreen" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.expressen" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.eyedotv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.facebook" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.fancode" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.fathom" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.faz" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.fc2" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.fczenit" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.fifa" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.filmon" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.filmweb" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.firsttv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.fivetv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.flextv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.flickr" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.floatplane" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.folketinget" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.footyroom" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.formula1" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.fourtube" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.fox" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.fox9" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.foxnews" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.foxsports" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.fptplay" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.francaisfacile" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.franceinter" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.francetv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.freesound" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.freespeech" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.freetv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.frontendmasters" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.fujitv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.funk" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.funker530" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.fuyintv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gab" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gaia" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gamedevtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gamejolt" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gamespot" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gamestar" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gaskrank" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gazeta" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gbnews" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gdcvault" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gedidigital" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.genericembeds" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.genius" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.germanupa" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.getcourseru" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gettr" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.giantbomb" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.glide" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.globalplayer" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.globo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.glomex" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gmanetwork" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.go" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.godresource" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.godtube" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gofile" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.golem" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.goodgame" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.googledrive" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.googlepodcasts" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.googlesearch" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.goplay" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gopro" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.goshgay" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gotostage" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gputechconf" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.graspop" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.gronkh" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.groupon" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.harpodeon" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hbo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hearthisat" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.heise" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hellporno" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hgtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hidive" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.historicfilms" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hitrecord" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hketv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hollywoodreporter" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.holodex" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hotnewhiphop" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hotstar" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hrefli" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hrfensehen" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hrti" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hse" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.huajiao" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.huffpost" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hungama" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.huya" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hypem" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hypergryph" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.hytale" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.icareus" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ichinanalive" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.idolplus" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ign" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.iheart" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ilpost" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.iltalehti" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.imdb" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.imgur" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ina" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.inc" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.indavideo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.infoq" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.instagram" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.internazionale" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.internetvideoarchive" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.iprima" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.iqiyi" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.islamchannel" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.israelnationalnews" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.itprotv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.itv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ivi" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ivideon" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ivoox" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.iwara" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ixigua" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.izlesene" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.jamendo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.japandiet" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.jeuxvideo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.jiocinema" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.jiosaavn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.joj" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.joqrag" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.jove" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.jstream" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.jtbc" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.jwplatform" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kakao" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kaltura" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kankanews" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.karaoketv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kelbyone" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kenh14" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.khanacademy" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kick" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kicker" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kickstarter" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kika" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kinja" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kinopoisk" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kommunetv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kompas" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.koo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.krasview" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kth" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ku6" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kukululive" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.kuwo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.la7" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.laracasts" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lastfm" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.laxarxames" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lbry" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lci" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lcp" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.learningonscreen" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lecture2go" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lecturio" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.leeco" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lefigaro" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lego" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lemonde" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lenta" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.libraryofcongress" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.libsyn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lifenews" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.likee" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.limelight" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.linkedin" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.liputan6" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.listennotes" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.litv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.livejournal" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.livestream" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.livestreamfails" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lnk" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.loco" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.loom" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lovehomeporn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lrt" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lsm" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lumni" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.lynda" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.maariv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.magellantv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.magentamusik" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mailru" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mainstreaming" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mangomolo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.manoto" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.manyvids" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.maoritv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.markiza" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.massengeschmacktv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.masters" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.matchtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mbn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mdr" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.medaltv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mediaite" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mediaklikk" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.medialaan" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mediaset" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mediasite" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mediastream" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mediaworksnz" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.medici" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.megaphone" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.megatvcom" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.meipai" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.melonvod" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.metacritic" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mgtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.microsoftembed" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.microsoftstream" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.minds" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.minoto" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mirrativ" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mirrorcouk" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mit" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mitele" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mixch" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mixcloud" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mlb" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mlssoccer" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mocha" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mojevideo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mojvideo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.monstercat" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.motherless" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.motorsport" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.moviepilot" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.moview" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.moviezine" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.movingimage" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.msn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.muenchentv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.murrtube" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.museai" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.musescore" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.musicdex" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mx3" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mxplayer" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.myspace" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.myspass" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.myvideoge" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.myvidster" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.mzaalo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.n1" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nate" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nationalgeographic" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.naver" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nba" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nbc" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ndr" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ndtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nebula" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nekohacker" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nerdcubed" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nest" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.neteasemusic" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.netverse" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.netzkino" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.newgrounds" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.newspicks" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.newsy" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nextmedia" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nexx" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nfb" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nfhsnetwork" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nfl" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nhk" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nhl" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nick" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.niconico" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.niconicochannelplus" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ninaprotocol" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ninecninemedia" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ninegag" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ninenews" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ninenow" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nintendo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nitter" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nobelprize" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.noice" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nonktube" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.noodlemagazine" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.noovo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nosnl" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nova" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.novaplay" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nowness" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.noz" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.npo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.npr" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nrk" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nrl" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nts" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ntvcojp" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ntvde" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ntvru" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nubilesporn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nuum" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nuvid" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nytimes" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nzherald" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nzonscreen" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nzz" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.odkmedia" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.odnoklassniki" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.oftv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.oktoberfesttv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.olympics" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.on24" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ondemandkorea" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.onefootball" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.onenewsnz" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.oneplace" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.onet" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.onionstudios" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.opencast" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.openrec" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ora" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.orf" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.outsidetv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.owncloud" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.packtpub" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.palcomp3" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.panopto" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.paramountplus" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.parler" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.parlview" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.parti" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.patreon" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pbs" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pearvideo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.peekvids" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.peertube" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.peertv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.peloton" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.performgroup" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.periscope" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pgatour" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.philharmoniedeparis" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.phoenix" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.photobucket" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pialive" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.piapro" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.picarto" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.piksel" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pinkbike" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pinterest" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.piramidetv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pixivsketch" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pladform" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.planetmarathi" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.platzi" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.playplustv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.playsuisse" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.playtvak" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.playwire" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pluralsight" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.plutotv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.plvideo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.podbayfm" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.podchaser" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.podomatic" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pokergo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.polsatgo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.polskieradio" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.popcorntimes" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.popcorntv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pornbox" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pornflip" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pornhub" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pornotube" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pornovoisines" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pornoxo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pr0gramm" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.prankcast" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.premiershiprugby" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.presstv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.projectveritas" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.prosiebensat1" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.prx" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.puhutv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.puls4" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.pyvideo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.qdance" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.qingting" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.qqmusic" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.r7" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.radiko" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.radiocanada" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.radiocomercial" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.radiode" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.radiofrance" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.radiojavan" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.radiokapital" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.radioradicale" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.radiozet" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.radlive" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rai" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.raywenderlich" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rbgtum" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rcs" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rcti" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rds" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.redbee" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.redbulltv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.reddit" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.redge" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.redgifs" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.redtube" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rentv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.restudy" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.reuters" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.reverbnation" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rheinmaintv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ridehome" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rinsefm" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rmcdecouverte" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rockstargames" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rokfin" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.roosterteeth" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rottentomatoes" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.roya" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rozhlas" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rte" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rtl2" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rtlnl" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rtnews" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rtp" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rtrfm" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rts" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rtvcplay" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rtve" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rtvs" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rtvslo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rudovideo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rule34video" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rumble" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rutube" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.rutv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ruutu" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ruv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.s4c" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.safari" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.saitosan" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.samplefocus" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sapo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sbs" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sbscokr" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.screen9" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.screencast" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.screencastify" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.screencastomatic" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.screenrec" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.scrippsnetworks" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.scrolller" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.scte" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sejmpl" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sen" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.senalcolombia" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.senategov" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sendtonews" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.servus" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sevenplus" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sexu" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.seznamzpravy" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.shahid" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sharepoint" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sharevideos" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.shemaroome" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.showroomlive" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sibnet" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.simplecast" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sina" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sixplay" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.skeb" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sky" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.skyit" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.skylinewebcams" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.skynewsarabia" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.skynewsau" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.slideshare" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.slideslive" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.slutload" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.smotrim" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.snapchat" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.snotr" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.softwhiteunderbelly" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sohu" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sonyliv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.soundcloud" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.soundgasm" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.southpark" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sovietscloset" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.spankbang" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.spiegel" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.spike" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sport5" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sportbox" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sportdeutschland" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.spotify" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.spreaker" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.springboardplatform" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sprout" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sproutvideo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.srgssr" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.srmediathek" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.stacommu" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.stageplus" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.stanfordoc" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.startrek" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.startv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.steam" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.stitcher" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.storyfire" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.streaks" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.streamable" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.streamcz" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.streetvoice" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.stretchinternet" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.stripchat" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.stv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.subsplash" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.substack" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sunporno" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sverigesradio" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.svt" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.swearnet" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.syfy" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.syvdk" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.sztvhu" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tagesschau" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.taptap" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tass" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tbs" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tbsjp" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.teachable" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.teachertube" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.teachingchannel" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.teamcoco" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.teamtreehouse" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ted" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tele5" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tele13" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.telebruxelles" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.telecaribe" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.telecinco" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.telegraaf" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.telegram" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.telemb" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.telemundo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.telequebec" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.teletask" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.telewebion" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tempo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tencent" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tennistv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tenplay" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.testurl" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tf1" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tfo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.theguardian" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.theholetv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.theintercept" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.theplatform" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.thestar" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.thesun" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.theweatherchannel" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.thisamericanlife" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.thisoldhouse" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.thisvid" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.threeqsdn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.threespeak" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tiktok" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tmz" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tnaflix" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.toggle" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.toggo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tonline" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.toongoggles" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.toutv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.toypics" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.traileraddict" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.triller" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.trovo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.trtcocuk" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.trtworld" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.trueid" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.trunews" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.truth" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.trutv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tube8" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tubetugraz" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tubitv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tumblr" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tunein" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tv2" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tv2dk" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tv2hu" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tv4" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tv5mondeplus" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tv5unis" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tv24ua" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tva" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tvanouvelles" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tvc" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tver" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tvigle" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tviplayer" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tvland" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tvn24" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tvnoe" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tvopengr" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tvp" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tvplay" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tvplayer" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tvw" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.tweakers" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.twentymin" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.twentythreevideo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.twitcasting" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.twitch" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.twitter" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.txxx" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.udemy" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.udn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ufctv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ukcolumn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.uktvplay" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.uliza" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.umg" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.unistra" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.unity" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.unsupported" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.uol" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.uplynk" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.urort" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.urplay" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.usanetwork" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.usatoday" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ustream" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ustudio" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.utreon" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.varzesh3" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vbox7" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.veo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vesti" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vevo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vgtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vh1" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vice" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.viddler" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.videa" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.videocampus_sachsen" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.videodetective" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.videofyme" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.videoken" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.videomore" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.videopress" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vidflex" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vidio" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vidlii" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vidly" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vidyard" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.viewlift" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.viidea" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vimeo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vimm" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.viously" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.viqeo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.viu" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vk" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vocaroo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vodpl" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vodplatform" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.voicy" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.volejtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.voxmedia" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vrsquare" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vrt" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vtm" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vuclip" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.vvvvid" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.walla" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.washingtonpost" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.wat" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.wdr" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.webcamerapl" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.webcaster" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.webofstories" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.weibo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.weiqitv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.weverse" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.wevidi" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.weyyak" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.whowatch" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.whyp" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.wikimedia" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.wimbledon" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.wimtv" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.wistia" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.wordpress" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.worldstarhiphop" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.wppilot" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.wrestleuniverse" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.wsj" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.wwe" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.wykop" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.xanimu" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.xboxclips" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.xhamster" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.xiaohongshu" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.ximalaya" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.xinpianchang" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.xminus" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.xnxx" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.xstream" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.xvideos" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.xxxymovies" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.yahoo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.yandexdisk" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.yandexmusic" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.yandexvideo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.yapfiles" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.yappy" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.yle_areena" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.youjizz" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.youku" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.younow" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.youporn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.zaiko" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.zapiks" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.zattoo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.zdf" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.zee5" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.zeenews" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.zenporn" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.zetland" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.zhihu" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.zingmp3" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.zoom" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.zype" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.once" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.imggaming" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.turner" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.aws" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.nuevo" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.jixie" [style="dotted"];
		"yt_dlp.extractor" -> "yt_dlp.extractor.amp" [style="dotted"];
	}
	subgraph "cluster_langchain_community.document_loaders.parsers" {
		label="langchain_community.document_loaders.parsers";
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.audio" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.doc_intelligence" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.docai" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.grobid" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.html" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.images" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.language" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.pdf" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.vsdx" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.generic" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.registry" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.msword" [style="dotted"];
		"langchain_community.document_loaders.parsers" -> "langchain_community.document_loaders.parsers.txt" [style="dotted"];
	}
	subgraph "cluster_kivy.graphics" {
		label="kivy.graphics";
		"kivy.graphics" -> "kivy.graphics.instructions" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.context_instructions" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.vertex_instructions" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.stencil_instructions" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.gl_instructions" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.fbo" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.boxshadow" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.scissor_instructions" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.transformation" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.cgl" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.context" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.opengl" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.opengl_utils" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.texture" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.vertex" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.shader" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.vbo" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.buffer" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.compiler" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.tesselator" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.svg" [style="dotted"];
		"kivy.graphics" -> "kivy.graphics.cgl_backend" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.scoring" {
		label="langchain.evaluation.scoring";
		"langchain.evaluation.scoring" -> "langchain.evaluation.scoring.eval_chain" [style="dotted"];
		"langchain.evaluation.scoring" -> "langchain.evaluation.scoring.prompt" [style="dotted"];
	}
	subgraph "cluster_datasets.download" {
		label="datasets.download";
		"datasets.download" -> "datasets.download.download_config" [style="dotted"];
		"datasets.download" -> "datasets.download.download_manager" [style="dotted"];
		"datasets.download" -> "datasets.download.streaming_download_manager" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.azure.image_generation" {
		label="litellm.llms.azure.image_generation";
		"litellm.llms.azure.image_generation" -> "litellm.llms.azure.image_generation.dall_e_2_transformation" [style="dotted"];
		"litellm.llms.azure.image_generation" -> "litellm.llms.azure.image_generation.dall_e_3_transformation" [style="dotted"];
		"litellm.llms.azure.image_generation" -> "litellm.llms.azure.image_generation.gpt_transformation" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.folder_based_builder" {
		label="datasets.packaged_modules.folder_based_builder";
		"datasets.packaged_modules.folder_based_builder" -> "datasets.packaged_modules.folder_based_builder.folder_based_builder" [style="dotted"];
	}
	subgraph "cluster_referencing" {
		label="referencing";
		"referencing" -> "referencing.exceptions" [style="dotted"];
		"referencing" -> "referencing._core" [style="dotted"];
		"referencing" -> "referencing._attrs" [style="dotted"];
		"referencing" -> "referencing.typing" [style="dotted"];
		"referencing" -> "referencing.jsonschema" [style="dotted"];
	}
	subgraph "cluster_pygments.formatters" {
		label="pygments.formatters";
		"pygments.formatters" -> "pygments.formatters._mapping" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.HtmlFormatter" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.LatexFormatter" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.BBCodeFormatter" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.bbcode" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.groff" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.html" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.img" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.irc" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.latex" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.other" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.pangomarkup" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.rtf" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.svg" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.terminal" [style="dotted"];
		"pygments.formatters" -> "pygments.formatters.terminal256" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.novita" {
		label="litellm.llms.novita";
		"litellm.llms.novita" -> "litellm.llms.novita.chat" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_lens" {
		label="langchain_community.tools.google_lens";
		"langchain_community.tools.google_lens" -> "langchain_community.tools.google_lens.tool" [style="dotted"];
	}
	subgraph "cluster_docutils.writers.xetex" {
		label="docutils.writers.xetex";
	}
	subgraph "cluster__multiprocess" {
		label="_multiprocess";
		"_multiprocess" -> "_multiprocess.SemLock" [style="dotted"];
		"_multiprocess" -> "_multiprocess.sem_unlink" [style="dotted"];
	}
	subgraph "cluster_traitlets.utils" {
		label="traitlets.utils";
		"traitlets.utils" -> "traitlets.utils.bunch" [style="dotted"];
		"traitlets.utils" -> "traitlets.utils.descriptions" [style="dotted"];
		"traitlets.utils" -> "traitlets.utils.getargspec" [style="dotted"];
		"traitlets.utils" -> "traitlets.utils.importstring" [style="dotted"];
		"traitlets.utils" -> "traitlets.utils.sentinel" [style="dotted"];
		"traitlets.utils" -> "traitlets.utils.warnings" [style="dotted"];
		"traitlets.utils" -> "traitlets.utils.decorators" [style="dotted"];
		"traitlets.utils" -> "traitlets.utils.text" [style="dotted"];
		"traitlets.utils" -> "traitlets.utils.nested_update" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.openai.realtime" {
		label="litellm.llms.openai.realtime";
		"litellm.llms.openai.realtime" -> "litellm.llms.openai.realtime.handler" [style="dotted"];
	}
	subgraph "cluster_IPython.lib" {
		label="IPython.lib";
		"IPython.lib" -> "IPython.lib.display" [style="dotted"];
		"IPython.lib" -> "IPython.lib.pretty" [style="dotted"];
		"IPython.lib" -> "IPython.lib.clipboard" [style="dotted"];
		"IPython.lib" -> "IPython.lib.guisupport" [style="dotted"];
	}
	subgraph "cluster_numpy.strings" {
		label="numpy.strings";
	}
	subgraph "cluster_langchain.retrievers.self_query" {
		label="langchain.retrievers.self_query";
		"langchain.retrievers.self_query" -> "langchain.retrievers.self_query.tencentvectordb" [style="dotted"];
		"langchain.retrievers.self_query" -> "langchain.retrievers.self_query.base" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.lm_studio" {
		label="litellm.llms.lm_studio";
		"litellm.llms.lm_studio" -> "litellm.llms.lm_studio.embed" [style="dotted"];
		"litellm.llms.lm_studio" -> "litellm.llms.lm_studio.chat" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.ainetwork" {
		label="langchain_community.agent_toolkits.ainetwork";
		"langchain_community.agent_toolkits.ainetwork" -> "langchain_community.agent_toolkits.ainetwork.toolkit" [style="dotted"];
	}
	subgraph "cluster_kivy.core.window" {
		label="kivy.core.window";
		"kivy.core.window" -> "kivy.core.window.window_egl_rpi" [style="dotted"];
		"kivy.core.window" -> "kivy.core.window.window_info" [style="dotted"];
		"kivy.core.window" -> "kivy.core.window.window_pygame" [style="dotted"];
		"kivy.core.window" -> "kivy.core.window._window_sdl2" [style="dotted"];
		"kivy.core.window" -> "kivy.core.window.window_sdl2" [style="dotted"];
	}
	subgraph "cluster_concurrent.futures" {
		label="concurrent.futures";
		"concurrent.futures" -> "concurrent.futures._base" [style="dotted"];
		"concurrent.futures" -> "concurrent.futures.process" [style="dotted"];
		"concurrent.futures" -> "concurrent.futures.thread" [style="dotted"];
	}
	subgraph "cluster_multiprocessing" {
		label="multiprocessing";
		"multiprocessing" -> "multiprocessing.process" [style="dotted"];
		"multiprocessing" -> "multiprocessing.util" [style="dotted"];
		"multiprocessing" -> "multiprocessing.AuthenticationError" [style="dotted"];
		"multiprocessing" -> "multiprocessing.BufferTooShort" [style="dotted"];
		"multiprocessing" -> "multiprocessing.resource_sharer" [style="dotted"];
		"multiprocessing" -> "multiprocessing.connection" [style="dotted"];
		"multiprocessing" -> "multiprocessing.get_start_method" [style="dotted"];
		"multiprocessing" -> "multiprocessing.set_start_method" [style="dotted"];
		"multiprocessing" -> "multiprocessing.resource_tracker" [style="dotted"];
		"multiprocessing" -> "multiprocessing.spawn" [style="dotted"];
		"multiprocessing" -> "multiprocessing.forkserver" [style="dotted"];
		"multiprocessing" -> "multiprocessing.reduction" [style="dotted"];
		"multiprocessing" -> "multiprocessing.get_context" [style="dotted"];
		"multiprocessing" -> "multiprocessing.TimeoutError" [style="dotted"];
		"multiprocessing" -> "multiprocessing.pool" [style="dotted"];
		"multiprocessing" -> "multiprocessing.shared_memory" [style="dotted"];
		"multiprocessing" -> "multiprocessing.context" [style="dotted"];
		"multiprocessing" -> "multiprocessing.Manager" [style="dotted"];
		"multiprocessing" -> "multiprocessing.freeze_support" [style="dotted"];
		"multiprocessing" -> "multiprocessing.Process" [style="dotted"];
		"multiprocessing" -> "multiprocessing.RLock" [style="dotted"];
		"multiprocessing" -> "multiprocessing.Pool" [style="dotted"];
		"multiprocessing" -> "multiprocessing.cpu_count" [style="dotted"];
		"multiprocessing" -> "multiprocessing.queues" [style="dotted"];
		"multiprocessing" -> "multiprocessing.synchronize" [style="dotted"];
		"multiprocessing" -> "multiprocessing.heap" [style="dotted"];
		"multiprocessing" -> "multiprocessing.managers" [style="dotted"];
		"multiprocessing" -> "multiprocessing.sharedctypes" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_fork" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_spawn_posix" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_forkserver" [style="dotted"];
		"multiprocessing" -> "multiprocessing.popen_spawn_win32" [style="dotted"];
		"multiprocessing" -> "multiprocessing.dummy" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.common_utils.html_forms" {
		label="litellm.proxy.common_utils.html_forms";
		"litellm.proxy.common_utils.html_forms" -> "litellm.proxy.common_utils.html_forms.ui_login" [style="dotted"];
		"litellm.proxy.common_utils.html_forms" -> "litellm.proxy.common_utils.html_forms.jwt_display_template" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.openai_tools" {
		label="langchain.agents.openai_tools";
		"langchain.agents.openai_tools" -> "langchain.agents.openai_tools.base" [style="dotted"];
	}
	subgraph "cluster_docutils.utils.math" {
		label="docutils.utils.math";
		"docutils.utils.math" -> "docutils.utils.math.mathalphabet2unichar" [style="dotted"];
		"docutils.utils.math" -> "docutils.utils.math.tex2unichar" [style="dotted"];
		"docutils.utils.math" -> "docutils.utils.math.latex2mathml" [style="dotted"];
		"docutils.utils.math" -> "docutils.utils.math.math2html" [style="dotted"];
		"docutils.utils.math" -> "docutils.utils.math.tex2mathml_extern" [style="dotted"];
		"docutils.utils.math" -> "docutils.utils.math.unichar2tex" [style="dotted"];
		"docutils.utils.math" -> "docutils.utils.math.mathml_elements" [style="dotted"];
	}
	subgraph "cluster_litellm.types" {
		label="litellm.types";
		"litellm.types" -> "litellm.types.rerank" [style="dotted"];
		"litellm.types" -> "litellm.types.utils" [style="dotted"];
		"litellm.types" -> "litellm.types.router" [style="dotted"];
		"litellm.types" -> "litellm.types.realtime" [style="dotted"];
		"litellm.types" -> "litellm.types.llms" [style="dotted"];
		"litellm.types" -> "litellm.types.responses" [style="dotted"];
		"litellm.types" -> "litellm.types.scheduler" [style="dotted"];
		"litellm.types" -> "litellm.types.guardrails" [style="dotted"];
		"litellm.types" -> "litellm.types.proxy" [style="dotted"];
		"litellm.types" -> "litellm.types.integrations" [style="dotted"];
		"litellm.types" -> "litellm.types.vector_stores" [style="dotted"];
		"litellm.types" -> "litellm.types.mcp_server" [style="dotted"];
		"litellm.types" -> "litellm.types.services" [style="dotted"];
		"litellm.types" -> "litellm.types.passthrough_endpoints" [style="dotted"];
		"litellm.types" -> "litellm.types.tag_management" [style="dotted"];
		"litellm.types" -> "litellm.types.enterprise" [style="dotted"];
		"litellm.types" -> "litellm.types.caching" [style="dotted"];
		"litellm.types" -> "litellm.types.files" [style="dotted"];
		"litellm.types" -> "litellm.types.completion" [style="dotted"];
		"litellm.types" -> "litellm.types.embedding" [style="dotted"];
		"litellm.types" -> "litellm.types.adapter" [style="dotted"];
		"litellm.types" -> "litellm.types.fine_tuning" [style="dotted"];
	}
	subgraph "cluster_litellm.integrations.opik" {
		label="litellm.integrations.opik";
		"litellm.integrations.opik" -> "litellm.integrations.opik.opik" [style="dotted"];
		"litellm.integrations.opik" -> "litellm.integrations.opik.utils" [style="dotted"];
	}
	subgraph "cluster_langchain_community.chains.pebblo_retrieval" {
		label="langchain_community.chains.pebblo_retrieval";
		"langchain_community.chains.pebblo_retrieval" -> "langchain_community.chains.pebblo_retrieval.base" [style="dotted"];
		"langchain_community.chains.pebblo_retrieval" -> "langchain_community.chains.pebblo_retrieval.enforcement_filters" [style="dotted"];
		"langchain_community.chains.pebblo_retrieval" -> "langchain_community.chains.pebblo_retrieval.models" [style="dotted"];
		"langchain_community.chains.pebblo_retrieval" -> "langchain_community.chains.pebblo_retrieval.utilities" [style="dotted"];
	}
	subgraph "cluster_ctypes" {
		label="ctypes";
		"ctypes" -> "ctypes._endian" [style="dotted"];
		"ctypes" -> "ctypes.wintypes" [style="dotted"];
		"ctypes" -> "ctypes.util" [style="dotted"];
		"ctypes" -> "ctypes._aix" [style="dotted"];
		"ctypes" -> "ctypes.macholib" [style="dotted"];
	}
	subgraph "cluster_markdown_it" {
		label="markdown_it";
		"markdown_it" -> "markdown_it.helpers" [style="dotted"];
		"markdown_it" -> "markdown_it.presets" [style="dotted"];
		"markdown_it" -> "markdown_it._punycode" [style="dotted"];
		"markdown_it" -> "markdown_it.rules_block" [style="dotted"];
		"markdown_it" -> "markdown_it.main" [style="dotted"];
		"markdown_it" -> "markdown_it.token" [style="dotted"];
		"markdown_it" -> "markdown_it._compat" [style="dotted"];
		"markdown_it" -> "markdown_it.common" [style="dotted"];
		"markdown_it" -> "markdown_it.parser_block" [style="dotted"];
		"markdown_it" -> "markdown_it.parser_core" [style="dotted"];
		"markdown_it" -> "markdown_it.parser_inline" [style="dotted"];
		"markdown_it" -> "markdown_it.renderer" [style="dotted"];
		"markdown_it" -> "markdown_it.utils" [style="dotted"];
		"markdown_it" -> "markdown_it.ruler" [style="dotted"];
		"markdown_it" -> "markdown_it.rules_core" [style="dotted"];
		"markdown_it" -> "markdown_it.rules_inline" [style="dotted"];
	}
	subgraph "cluster_httpcore._sync" {
		label="httpcore._sync";
		"httpcore._sync" -> "httpcore._sync.connection" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.connection_pool" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.http11" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.http_proxy" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.interfaces" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.http2" [style="dotted"];
		"httpcore._sync" -> "httpcore._sync.socks_proxy" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.management_endpoints" {
		label="litellm.proxy.management_endpoints";
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.budget_management_endpoints" [style="dotted"];
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.common_utils" [style="dotted"];
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.customer_endpoints" [style="dotted"];
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.internal_user_endpoints" [style="dotted"];
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.key_management_endpoints" [style="dotted"];
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.model_management_endpoints" [style="dotted"];
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.organization_endpoints" [style="dotted"];
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.tag_management_endpoints" [style="dotted"];
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.team_callback_endpoints" [style="dotted"];
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.team_endpoints" [style="dotted"];
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.ui_sso" [style="dotted"];
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.sso_helper_utils" [style="dotted"];
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.types" [style="dotted"];
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.common_daily_activity" [style="dotted"];
		"litellm.proxy.management_endpoints" -> "litellm.proxy.management_endpoints.scim" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit" {
		label="prompt_toolkit";
		"prompt_toolkit" -> "prompt_toolkit.application" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.formatted_text" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.shortcuts" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.auto_suggest" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.enums" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.history" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.patch_stdout" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.buffer" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.document" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.clipboard" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.filters" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.selection" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.keys" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.search" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.input" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.utils" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.data_structures" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.win32_types" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.cursor_shapes" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.mouse_events" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.cache" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.renderer" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.output" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.styles" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.layout" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.completion" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.eventloop" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.validation" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.widgets" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.lexers" [style="dotted"];
		"prompt_toolkit" -> "prompt_toolkit.key_binding" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.openai_files_endpoints" {
		label="litellm.proxy.openai_files_endpoints";
		"litellm.proxy.openai_files_endpoints" -> "litellm.proxy.openai_files_endpoints.files_endpoints" [style="dotted"];
		"litellm.proxy.openai_files_endpoints" -> "litellm.proxy.openai_files_endpoints.common_utils" [style="dotted"];
	}
	subgraph "cluster_email.mime" {
		label="email.mime";
		"email.mime" -> "email.mime.multipart" [style="dotted"];
		"email.mime" -> "email.mime.text" [style="dotted"];
		"email.mime" -> "email.mime.nonmultipart" [style="dotted"];
		"email.mime" -> "email.mime.base" [style="dotted"];
	}
	subgraph "cluster_pydantic.plugin" {
		label="pydantic.plugin";
		"pydantic.plugin" -> "pydantic.plugin._schema_validator" [style="dotted"];
		"pydantic.plugin" -> "pydantic.plugin._loader" [style="dotted"];
	}
	subgraph "cluster_langchain_core.output_parsers" {
		label="langchain_core.output_parsers";
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.base" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.json" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.list" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.openai_tools" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.pydantic" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.string" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.transform" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.xml" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.openai_functions" [style="dotted"];
		"langchain_core.output_parsers" -> "langchain_core.output_parsers.format_instructions" [style="dotted"];
	}
	subgraph "cluster_streamlit" {
		label="streamlit";
		"streamlit" -> "streamlit.env_util" [style="dotted"];
		"streamlit" -> "streamlit.util" [style="dotted"];
		"streamlit" -> "streamlit.errors" [style="dotted"];
		"streamlit" -> "streamlit.cli_util" [style="dotted"];
		"streamlit" -> "streamlit.config" [style="dotted"];
		"streamlit" -> "streamlit.file_util" [style="dotted"];
		"streamlit" -> "streamlit.type_util" [style="dotted"];
		"streamlit" -> "streamlit.cursor" [style="dotted"];
		"streamlit" -> "streamlit.url_util" [style="dotted"];
		"streamlit" -> "streamlit.config_util" [style="dotted"];
		"streamlit" -> "streamlit.development" [style="dotted"];
		"streamlit" -> "streamlit.logger" [style="dotted"];
		"streamlit" -> "streamlit.deprecation_util" [style="dotted"];
		"streamlit" -> "streamlit.version" [style="dotted"];
		"streamlit" -> "streamlit.delta_generator_singletons" [style="dotted"];
		"streamlit" -> "streamlit.delta_generator" [style="dotted"];
		"streamlit" -> "streamlit.user_info" [style="dotted"];
		"streamlit" -> "streamlit.column_config" [style="dotted"];
		"streamlit" -> "streamlit.elements" [style="dotted"];
		"streamlit" -> "streamlit.runtime" [style="dotted"];
		"streamlit" -> "streamlit.commands" [style="dotted"];
		"streamlit" -> "streamlit.navigation" [style="dotted"];
		"streamlit" -> "streamlit.components" [style="dotted"];
		"streamlit" -> "streamlit.proto" [style="dotted"];
		"streamlit" -> "streamlit.source_util" [style="dotted"];
		"streamlit" -> "streamlit.string_util" [style="dotted"];
		"streamlit" -> "streamlit.emojis" [style="dotted"];
		"streamlit" -> "streamlit.material_icon_names" [style="dotted"];
		"streamlit" -> "streamlit.error_util" [style="dotted"];
		"streamlit" -> "streamlit.git_util" [style="dotted"];
		"streamlit" -> "streamlit.watcher" [style="dotted"];
		"streamlit" -> "streamlit.dataframe_util" [style="dotted"];
		"streamlit" -> "streamlit.auth_util" [style="dotted"];
		"streamlit" -> "streamlit.vendor" [style="dotted"];
		"streamlit" -> "streamlit.time_util" [style="dotted"];
		"streamlit" -> "streamlit.connections" [style="dotted"];
		"streamlit" -> "streamlit.config_option" [style="dotted"];
	}
	subgraph "cluster_zmq.backend.cython" {
		label="zmq.backend.cython";
		"zmq.backend.cython" -> "zmq.backend.cython._zmq" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.merriam_webster" {
		label="langchain_community.tools.merriam_webster";
		"langchain_community.tools.merriam_webster" -> "langchain_community.tools.merriam_webster.tool" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.cohere.chat" {
		label="litellm.llms.cohere.chat";
		"litellm.llms.cohere.chat" -> "litellm.llms.cohere.chat.v2_transformation" [style="dotted"];
		"litellm.llms.cohere.chat" -> "litellm.llms.cohere.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_grpc._cython" {
		label="grpc._cython";
		"grpc._cython" -> "grpc._cython.cygrpc" [style="dotted"];
	}
	subgraph "cluster_tornado.platform" {
		label="tornado.platform";
		"tornado.platform" -> "tornado.platform.asyncio" [style="dotted"];
	}
	subgraph "cluster_streamlit.runtime.caching.storage" {
		label="streamlit.runtime.caching.storage";
		"streamlit.runtime.caching.storage" -> "streamlit.runtime.caching.storage.cache_storage_protocol" [style="dotted"];
		"streamlit.runtime.caching.storage" -> "streamlit.runtime.caching.storage.local_disk_cache_storage" [style="dotted"];
		"streamlit.runtime.caching.storage" -> "streamlit.runtime.caching.storage.in_memory_cache_storage_wrapper" [style="dotted"];
		"streamlit.runtime.caching.storage" -> "streamlit.runtime.caching.storage.dummy_cache_storage" [style="dotted"];
	}
	subgraph "cluster_numpy.polynomial" {
		label="numpy.polynomial";
		"numpy.polynomial" -> "numpy.polynomial.polyutils" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.polynomial" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.chebyshev" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.legendre" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.hermite" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.hermite_e" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial.laguerre" [style="dotted"];
		"numpy.polynomial" -> "numpy.polynomial._polybase" [style="dotted"];
	}
	subgraph "cluster_numpy.fft" {
		label="numpy.fft";
		"numpy.fft" -> "numpy.fft._pocketfft_umath" [style="dotted"];
		"numpy.fft" -> "numpy.fft._pocketfft" [style="dotted"];
		"numpy.fft" -> "numpy.fft._helper" [style="dotted"];
		"numpy.fft" -> "numpy.fft.helper" [style="dotted"];
	}
	subgraph "cluster_kivy.core.image" {
		label="kivy.core.image";
		"kivy.core.image" -> "kivy.core.image.img_dds" [style="dotted"];
		"kivy.core.image" -> "kivy.core.image.img_ffpyplayer" [style="dotted"];
		"kivy.core.image" -> "kivy.core.image.img_pil" [style="dotted"];
		"kivy.core.image" -> "kivy.core.image.img_pygame" [style="dotted"];
		"kivy.core.image" -> "kivy.core.image._img_sdl2" [style="dotted"];
		"kivy.core.image" -> "kivy.core.image.img_sdl2" [style="dotted"];
		"kivy.core.image" -> "kivy.core.image.img_tex" [style="dotted"];
		"kivy.core.image" -> "kivy.core.image.img_imageio" [style="dotted"];
	}
	subgraph "cluster_langchain_openai.llms" {
		label="langchain_openai.llms";
		"langchain_openai.llms" -> "langchain_openai.llms.azure" [style="dotted"];
		"langchain_openai.llms" -> "langchain_openai.llms.base" [style="dotted"];
	}
	subgraph "cluster_langchain_community.document_loaders.parsers.language" {
		label="langchain_community.document_loaders.parsers.language";
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.language_parser" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.c" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.cobol" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.cpp" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.csharp" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.elixir" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.go" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.java" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.javascript" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.kotlin" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.lua" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.perl" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.php" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.python" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.ruby" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.rust" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.scala" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.sql" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.typescript" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.tree_sitter_segmenter" [style="dotted"];
		"langchain_community.document_loaders.parsers.language" -> "langchain_community.document_loaders.parsers.language.code_segmenter" [style="dotted"];
	}
	subgraph "cluster_xml.sax" {
		label="xml.sax";
		"xml.sax" -> "xml.sax.handler" [style="dotted"];
		"xml.sax" -> "xml.sax.xmlreader" [style="dotted"];
		"xml.sax" -> "xml.sax.saxutils" [style="dotted"];
		"xml.sax" -> "xml.sax._exceptions" [style="dotted"];
		"xml.sax" -> "xml.sax.expatreader" [style="dotted"];
	}
	subgraph "cluster_pandas.core.interchange" {
		label="pandas.core.interchange";
		"pandas.core.interchange" -> "pandas.core.interchange.dataframe_protocol" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.dataframe" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.column" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.utils" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.buffer" [style="dotted"];
		"pandas.core.interchange" -> "pandas.core.interchange.from_dataframe" [style="dotted"];
	}
	subgraph "cluster_IPython.external" {
		label="IPython.external";
		"IPython.external" -> "IPython.external.qt_loaders" [style="dotted"];
		"IPython.external" -> "IPython.external.qt_for_kernel" [style="dotted"];
	}
	subgraph "cluster_openai._extras" {
		label="openai._extras";
		"openai._extras" -> "openai._extras.numpy_proxy" [style="dotted"];
		"openai._extras" -> "openai._extras.pandas_proxy" [style="dotted"];
		"openai._extras" -> "openai._extras.sounddevice_proxy" [style="dotted"];
		"openai._extras" -> "openai._extras._common" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.auth" {
		label="litellm.proxy.auth";
		"litellm.proxy.auth" -> "litellm.proxy.auth.auth_checks" [style="dotted"];
		"litellm.proxy.auth" -> "litellm.proxy.auth.auth_utils" [style="dotted"];
		"litellm.proxy.auth" -> "litellm.proxy.auth.handle_jwt" [style="dotted"];
		"litellm.proxy.auth" -> "litellm.proxy.auth.litellm_license" [style="dotted"];
		"litellm.proxy.auth" -> "litellm.proxy.auth.model_checks" [style="dotted"];
		"litellm.proxy.auth" -> "litellm.proxy.auth.user_api_key_auth" [style="dotted"];
		"litellm.proxy.auth" -> "litellm.proxy.auth.rds_iam_token" [style="dotted"];
		"litellm.proxy.auth" -> "litellm.proxy.auth.route_checks" [style="dotted"];
		"litellm.proxy.auth" -> "litellm.proxy.auth.auth_checks_organization" [style="dotted"];
		"litellm.proxy.auth" -> "litellm.proxy.auth.auth_exception_handler" [style="dotted"];
		"litellm.proxy.auth" -> "litellm.proxy.auth.oauth2_check" [style="dotted"];
		"litellm.proxy.auth" -> "litellm.proxy.auth.oauth2_proxy_hook" [style="dotted"];
	}
	subgraph "cluster_openai.resources.beta" {
		label="openai.resources.beta";
		"openai.resources.beta" -> "openai.resources.beta.beta" [style="dotted"];
		"openai.resources.beta" -> "openai.resources.beta.threads" [style="dotted"];
		"openai.resources.beta" -> "openai.resources.beta.assistants" [style="dotted"];
		"openai.resources.beta" -> "openai.resources.beta.realtime" [style="dotted"];
		"openai.resources.beta" -> "openai.resources.beta.chat" [style="dotted"];
	}
	subgraph "cluster_multidict" {
		label="multidict";
		"multidict" -> "multidict._abc" [style="dotted"];
		"multidict" -> "multidict._multidict" [style="dotted"];
		"multidict" -> "multidict._compat" [style="dotted"];
		"multidict" -> "multidict._multidict_py" [style="dotted"];
	}
	subgraph "cluster_pandas.io" {
		label="pandas.io";
		"pandas.io" -> "pandas.io.formats" [style="dotted"];
		"pandas.io" -> "pandas.io.json" [style="dotted"];
		"pandas.io" -> "pandas.io.stata" [style="dotted"];
		"pandas.io" -> "pandas.io.pytables" [style="dotted"];
		"pandas.io" -> "pandas.io.sql" [style="dotted"];
		"pandas.io" -> "pandas.io.clipboards" [style="dotted"];
		"pandas.io" -> "pandas.io.gbq" [style="dotted"];
		"pandas.io" -> "pandas.io.api" [style="dotted"];
		"pandas.io" -> "pandas.io.common" [style="dotted"];
		"pandas.io" -> "pandas.io._util" [style="dotted"];
		"pandas.io" -> "pandas.io.excel" [style="dotted"];
		"pandas.io" -> "pandas.io.parsers" [style="dotted"];
		"pandas.io" -> "pandas.io.pickle" [style="dotted"];
		"pandas.io" -> "pandas.io.clipboard" [style="dotted"];
		"pandas.io" -> "pandas.io.feather_format" [style="dotted"];
		"pandas.io" -> "pandas.io.parquet" [style="dotted"];
		"pandas.io" -> "pandas.io.orc" [style="dotted"];
		"pandas.io" -> "pandas.io.xml" [style="dotted"];
		"pandas.io" -> "pandas.io.sas" [style="dotted"];
		"pandas.io" -> "pandas.io.html" [style="dotted"];
		"pandas.io" -> "pandas.io.spss" [style="dotted"];
	}
	subgraph "cluster__distutils_hack" {
		label="_distutils_hack";
		"_distutils_hack" -> "_distutils_hack.override" [style="dotted"];
	}
	subgraph "cluster_rich" {
		label="rich";
		"rich" -> "rich.errors" [style="dotted"];
		"rich" -> "rich.box" [style="dotted"];
		"rich" -> "rich.themes" [style="dotted"];
		"rich" -> "rich._extension" [style="dotted"];
		"rich" -> "rich.console" [style="dotted"];
		"rich" -> "rich._inspect" [style="dotted"];
		"rich" -> "rich.filesize" [style="dotted"];
		"rich" -> "rich.markup" [style="dotted"];
		"rich" -> "rich.progress" [style="dotted"];
		"rich" -> "rich.syntax" [style="dotted"];
		"rich" -> "rich.table" [style="dotted"];
		"rich" -> "rich._loop" [style="dotted"];
		"rich" -> "rich._pick" [style="dotted"];
		"rich" -> "rich._ratio" [style="dotted"];
		"rich" -> "rich.align" [style="dotted"];
		"rich" -> "rich.jupyter" [style="dotted"];
		"rich" -> "rich.measure" [style="dotted"];
		"rich" -> "rich.padding" [style="dotted"];
		"rich" -> "rich.protocol" [style="dotted"];
		"rich" -> "rich.segment" [style="dotted"];
		"rich" -> "rich.style" [style="dotted"];
		"rich" -> "rich.text" [style="dotted"];
		"rich" -> "rich.highlighter" [style="dotted"];
		"rich" -> "rich._timer" [style="dotted"];
		"rich" -> "rich._wrap" [style="dotted"];
		"rich" -> "rich.cells" [style="dotted"];
		"rich" -> "rich.containers" [style="dotted"];
		"rich" -> "rich.control" [style="dotted"];
		"rich" -> "rich.emoji" [style="dotted"];
		"rich" -> "rich.ansi" [style="dotted"];
		"rich" -> "rich.color" [style="dotted"];
		"rich" -> "rich._palettes" [style="dotted"];
		"rich" -> "rich.color_triplet" [style="dotted"];
		"rich" -> "rich.repr" [style="dotted"];
		"rich" -> "rich.terminal_theme" [style="dotted"];
		"rich" -> "rich.palette" [style="dotted"];
		"rich" -> "rich._emoji_codes" [style="dotted"];
		"rich" -> "rich._emoji_replace" [style="dotted"];
		"rich" -> "rich.columns" [style="dotted"];
		"rich" -> "rich.constrain" [style="dotted"];
		"rich" -> "rich._cell_widths" [style="dotted"];
		"rich" -> "rich.panel" [style="dotted"];
		"rich" -> "rich.pretty" [style="dotted"];
		"rich" -> "rich.abc" [style="dotted"];
		"rich" -> "rich.traceback" [style="dotted"];
		"rich" -> "rich.scope" [style="dotted"];
		"rich" -> "rich.theme" [style="dotted"];
		"rich" -> "rich.default_styles" [style="dotted"];
		"rich" -> "rich.live" [style="dotted"];
		"rich" -> "rich.progress_bar" [style="dotted"];
		"rich" -> "rich.spinner" [style="dotted"];
		"rich" -> "rich.rule" [style="dotted"];
		"rich" -> "rich._spinners" [style="dotted"];
		"rich" -> "rich.file_proxy" [style="dotted"];
		"rich" -> "rich.live_render" [style="dotted"];
		"rich" -> "rich.screen" [style="dotted"];
		"rich" -> "rich._null_file" [style="dotted"];
		"rich" -> "rich._export_format" [style="dotted"];
		"rich" -> "rich._fileno" [style="dotted"];
		"rich" -> "rich._log_render" [style="dotted"];
		"rich" -> "rich.pager" [style="dotted"];
		"rich" -> "rich.region" [style="dotted"];
		"rich" -> "rich.styled" [style="dotted"];
		"rich" -> "rich._windows" [style="dotted"];
		"rich" -> "rich.status" [style="dotted"];
		"rich" -> "rich.json" [style="dotted"];
		"rich" -> "rich._win32_console" [style="dotted"];
		"rich" -> "rich._windows_renderer" [style="dotted"];
		"rich" -> "rich.__main__" [style="dotted"];
		"rich" -> "rich.markdown" [style="dotted"];
		"rich" -> "rich._stack" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.infinity.embedding" {
		label="litellm.llms.infinity.embedding";
		"litellm.llms.infinity.embedding" -> "litellm.llms.infinity.embedding.transformation" [style="dotted"];
	}
	subgraph "cluster_pydantic.deprecated" {
		label="pydantic.deprecated";
		"pydantic.deprecated" -> "pydantic.deprecated.copy_internals" [style="dotted"];
		"pydantic.deprecated" -> "pydantic.deprecated.parse" [style="dotted"];
		"pydantic.deprecated" -> "pydantic.deprecated.json" [style="dotted"];
		"pydantic.deprecated" -> "pydantic.deprecated.class_validators" [style="dotted"];
		"pydantic.deprecated" -> "pydantic.deprecated.config" [style="dotted"];
		"pydantic.deprecated" -> "pydantic.deprecated.tools" [style="dotted"];
		"pydantic.deprecated" -> "pydantic.deprecated.decorator" [style="dotted"];
	}
	subgraph "cluster_jupyter_client.asynchronous" {
		label="jupyter_client.asynchronous";
		"jupyter_client.asynchronous" -> "jupyter_client.asynchronous.client" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.ddg_search" {
		label="langchain_community.tools.ddg_search";
		"langchain_community.tools.ddg_search" -> "langchain_community.tools.ddg_search.tool" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.json" {
		label="datasets.packaged_modules.json";
		"datasets.packaged_modules.json" -> "datasets.packaged_modules.json.json" [style="dotted"];
	}
	subgraph "cluster_pandas.api" {
		label="pandas.api";
		"pandas.api" -> "pandas.api.extensions" [style="dotted"];
		"pandas.api" -> "pandas.api.indexers" [style="dotted"];
		"pandas.api" -> "pandas.api.interchange" [style="dotted"];
		"pandas.api" -> "pandas.api.types" [style="dotted"];
		"pandas.api" -> "pandas.api.typing" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.parquet" {
		label="datasets.packaged_modules.parquet";
		"datasets.packaged_modules.parquet" -> "datasets.packaged_modules.parquet.parquet" [style="dotted"];
	}
	subgraph "cluster_ipykernel" {
		label="ipykernel";
		"ipykernel" -> "ipykernel._version" [style="dotted"];
		"ipykernel" -> "ipykernel.connect_qtconsole" [style="dotted"];
		"ipykernel" -> "ipykernel.get_connection_file" [style="dotted"];
		"ipykernel" -> "ipykernel.get_connection_info" [style="dotted"];
		"ipykernel" -> "ipykernel.serialize" [style="dotted"];
		"ipykernel" -> "ipykernel.connect" [style="dotted"];
		"ipykernel" -> "ipykernel.embed" [style="dotted"];
		"ipykernel" -> "ipykernel.kernelapp" [style="dotted"];
		"ipykernel" -> "ipykernel.control" [style="dotted"];
		"ipykernel" -> "ipykernel.heartbeat" [style="dotted"];
		"ipykernel" -> "ipykernel.iostream" [style="dotted"];
		"ipykernel" -> "ipykernel.ipkernel" [style="dotted"];
		"ipykernel" -> "ipykernel.parentpoller" [style="dotted"];
		"ipykernel" -> "ipykernel.zmqshell" [style="dotted"];
		"ipykernel" -> "ipykernel.trio_runner" [style="dotted"];
		"ipykernel" -> "ipykernel.pickleutil" [style="dotted"];
		"ipykernel" -> "ipykernel.displayhook" [style="dotted"];
		"ipykernel" -> "ipykernel.jsonutil" [style="dotted"];
		"ipykernel" -> "ipykernel.eventloops" [style="dotted"];
		"ipykernel" -> "ipykernel._eventloop_macos" [style="dotted"];
		"ipykernel" -> "ipykernel.gui" [style="dotted"];
		"ipykernel" -> "ipykernel.kernelspec" [style="dotted"];
		"ipykernel" -> "ipykernel.compiler" [style="dotted"];
		"ipykernel" -> "ipykernel.kernelbase" [style="dotted"];
		"ipykernel" -> "ipykernel.debugger" [style="dotted"];
		"ipykernel" -> "ipykernel.comm" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vertex_ai.context_caching" {
		label="litellm.llms.vertex_ai.context_caching";
		"litellm.llms.vertex_ai.context_caching" -> "litellm.llms.vertex_ai.context_caching.vertex_ai_context_caching" [style="dotted"];
		"litellm.llms.vertex_ai.context_caching" -> "litellm.llms.vertex_ai.context_caching.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.friendliai" {
		label="litellm.llms.friendliai";
		"litellm.llms.friendliai" -> "litellm.llms.friendliai.chat" [style="dotted"];
	}
	subgraph "cluster_grpc_status" {
		label="grpc_status";
		"grpc_status" -> "grpc_status._async" [style="dotted"];
		"grpc_status" -> "grpc_status.rpc_status" [style="dotted"];
		"grpc_status" -> "grpc_status._common" [style="dotted"];
	}
	subgraph "cluster_google.auth.aio" {
		label="google.auth.aio";
		"google.auth.aio" -> "google.auth.aio._helpers" [style="dotted"];
		"google.auth.aio" -> "google.auth.aio.credentials" [style="dotted"];
		"google.auth.aio" -> "google.auth.aio.transport" [style="dotted"];
	}
	subgraph "cluster_litellm.integrations.SlackAlerting" {
		label="litellm.integrations.SlackAlerting";
		"litellm.integrations.SlackAlerting" -> "litellm.integrations.SlackAlerting.slack_alerting" [style="dotted"];
		"litellm.integrations.SlackAlerting" -> "litellm.integrations.SlackAlerting.utils" [style="dotted"];
		"litellm.integrations.SlackAlerting" -> "litellm.integrations.SlackAlerting.budget_alert_types" [style="dotted"];
		"litellm.integrations.SlackAlerting" -> "litellm.integrations.SlackAlerting.batching_handler" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.edenai" {
		label="langchain_community.tools.edenai";
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.audio_speech_to_text" [style="dotted"];
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.audio_text_to_speech" [style="dotted"];
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.edenai_base_tool" [style="dotted"];
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.image_explicitcontent" [style="dotted"];
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.image_objectdetection" [style="dotted"];
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.ocr_identityparser" [style="dotted"];
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.ocr_invoiceparser" [style="dotted"];
		"langchain_community.tools.edenai" -> "langchain_community.tools.edenai.text_moderation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.nasa" {
		label="langchain_community.agent_toolkits.nasa";
		"langchain_community.agent_toolkits.nasa" -> "langchain_community.agent_toolkits.nasa.toolkit" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.ext" {
		label="sqlalchemy.ext";
		"sqlalchemy.ext" -> "sqlalchemy.ext.asyncio" [style="dotted"];
		"sqlalchemy.ext" -> "sqlalchemy.ext.baked" [style="dotted"];
		"sqlalchemy.ext" -> "sqlalchemy.ext.compiler" [style="dotted"];
		"sqlalchemy.ext" -> "sqlalchemy.ext.declarative" [style="dotted"];
	}
	subgraph "cluster_google.auth.compute_engine" {
		label="google.auth.compute_engine";
		"google.auth.compute_engine" -> "google.auth.compute_engine._metadata" [style="dotted"];
		"google.auth.compute_engine" -> "google.auth.compute_engine.credentials" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.wikipedia" {
		label="langchain_community.tools.wikipedia";
		"langchain_community.tools.wikipedia" -> "langchain_community.tools.wikipedia.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.mojeek_search" {
		label="langchain_community.tools.mojeek_search";
		"langchain_community.tools.mojeek_search" -> "langchain_community.tools.mojeek_search.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.json" {
		label="langchain_community.agent_toolkits.json";
		"langchain_community.agent_toolkits.json" -> "langchain_community.agent_toolkits.json.base" [style="dotted"];
		"langchain_community.agent_toolkits.json" -> "langchain_community.agent_toolkits.json.toolkit" [style="dotted"];
		"langchain_community.agent_toolkits.json" -> "langchain_community.agent_toolkits.json.prompt" [style="dotted"];
	}
	subgraph "cluster_zipp" {
		label="zipp";
		"zipp" -> "zipp.glob" [style="dotted"];
		"zipp" -> "zipp._functools" [style="dotted"];
		"zipp" -> "zipp.compat" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.meta_llama.chat" {
		label="litellm.llms.meta_llama.chat";
		"litellm.llms.meta_llama.chat" -> "litellm.llms.meta_llama.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_sqlite3" {
		label="sqlite3";
		"sqlite3" -> "sqlite3.dbapi2" [style="dotted"];
		"sqlite3" -> "sqlite3.dump" [style="dotted"];
	}
	subgraph "cluster_langchain_core.callbacks" {
		label="langchain_core.callbacks";
		"langchain_core.callbacks" -> "langchain_core.callbacks.base" [style="dotted"];
		"langchain_core.callbacks" -> "langchain_core.callbacks.file" [style="dotted"];
		"langchain_core.callbacks" -> "langchain_core.callbacks.manager" [style="dotted"];
		"langchain_core.callbacks" -> "langchain_core.callbacks.stdout" [style="dotted"];
		"langchain_core.callbacks" -> "langchain_core.callbacks.streaming_stdout" [style="dotted"];
		"langchain_core.callbacks" -> "langchain_core.callbacks.usage" [style="dotted"];
	}
	subgraph "cluster_langchain.retrievers" {
		label="langchain.retrievers";
		"langchain.retrievers" -> "langchain.retrievers.contextual_compression" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.ensemble" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.merger_retriever" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.multi_query" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.multi_vector" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.parent_document_retriever" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.re_phraser" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.time_weighted_retriever" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.self_query" [style="dotted"];
		"langchain.retrievers" -> "langchain.retrievers.document_compressors" [style="dotted"];
	}
	subgraph "cluster_litellm.types.llms" {
		label="litellm.types.llms";
		"litellm.types.llms" -> "litellm.types.llms.anthropic" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.openai" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.gemini" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.vertex_ai" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.base" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.custom_http" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.cohere" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.bedrock" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.ollama" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.watsonx" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.anthropic_messages" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.azure_ai" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.databricks" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.custom_llm" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.azure" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.mistral" [style="dotted"];
		"litellm.types.llms" -> "litellm.types.llms.openrouter" [style="dotted"];
	}
	subgraph "cluster_pandas.core.tools" {
		label="pandas.core.tools";
		"pandas.core.tools" -> "pandas.core.tools.numeric" [style="dotted"];
		"pandas.core.tools" -> "pandas.core.tools.datetimes" [style="dotted"];
		"pandas.core.tools" -> "pandas.core.tools.timedeltas" [style="dotted"];
		"pandas.core.tools" -> "pandas.core.tools.times" [style="dotted"];
	}
	subgraph "cluster_joblib.externals.cloudpickle" {
		label="joblib.externals.cloudpickle";
		"joblib.externals.cloudpickle" -> "joblib.externals.cloudpickle.cloudpickle" [style="dotted"];
	}
	subgraph "cluster_openai.types.beta.threads" {
		label="openai.types.beta.threads";
		"openai.types.beta.threads" -> "openai.types.beta.threads.run" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.text" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_url" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.annotation" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_file" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.run_status" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.text_delta" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_delta" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_url_delta" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_url_param" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_content" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_deleted" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.run_list_params" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.annotation_delta" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_file_delta" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_file_param" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.text_delta_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.run_create_params" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.run_update_params" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.text_content_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_delta_event" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_list_params" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.refusal_delta_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.file_path_annotation" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_url_delta_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_content_delta" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_create_params" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_update_params" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.refusal_content_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_file_delta_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_url_content_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.file_citation_annotation" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_file_content_block" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.text_content_block_param" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.file_path_delta_annotation" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.message_content_part_param" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_url_content_block_param" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.file_citation_delta_annotation" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.image_file_content_block_param" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.run_submit_tool_outputs_params" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.required_action_function_tool_call" [style="dotted"];
		"openai.types.beta.threads" -> "openai.types.beta.threads.runs" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor.more_itertools" {
		label="setuptools._vendor.more_itertools";
		"setuptools._vendor.more_itertools" -> "setuptools._vendor.more_itertools.more" [style="dotted"];
		"setuptools._vendor.more_itertools" -> "setuptools._vendor.more_itertools.recipes" [style="dotted"];
	}
	subgraph "cluster_jupyter_client.provisioning" {
		label="jupyter_client.provisioning";
		"jupyter_client.provisioning" -> "jupyter_client.provisioning.factory" [style="dotted"];
		"jupyter_client.provisioning" -> "jupyter_client.provisioning.local_provisioner" [style="dotted"];
		"jupyter_client.provisioning" -> "jupyter_client.provisioning.provisioner_base" [style="dotted"];
	}
	subgraph "cluster_openai.resources.evals.runs" {
		label="openai.resources.evals.runs";
		"openai.resources.evals.runs" -> "openai.resources.evals.runs.runs" [style="dotted"];
		"openai.resources.evals.runs" -> "openai.resources.evals.runs.output_items" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.cassandra_database" {
		label="langchain_community.agent_toolkits.cassandra_database";
		"langchain_community.agent_toolkits.cassandra_database" -> "langchain_community.agent_toolkits.cassandra_database.toolkit" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.openai.completion" {
		label="litellm.llms.openai.completion";
		"litellm.llms.openai.completion" -> "litellm.llms.openai.completion.handler" [style="dotted"];
		"litellm.llms.openai.completion" -> "litellm.llms.openai.completion.transformation" [style="dotted"];
		"litellm.llms.openai.completion" -> "litellm.llms.openai.completion.utils" [style="dotted"];
	}
	subgraph "cluster_dateutil.tz" {
		label="dateutil.tz";
		"dateutil.tz" -> "dateutil.tz.tzfile" [style="dotted"];
		"dateutil.tz" -> "dateutil.tz.tz" [style="dotted"];
		"dateutil.tz" -> "dateutil.tz._common" [style="dotted"];
		"dateutil.tz" -> "dateutil.tz._factories" [style="dotted"];
		"dateutil.tz" -> "dateutil.tz.win" [style="dotted"];
	}
	subgraph "cluster_docutils.writers.pep_html" {
		label="docutils.writers.pep_html";
	}
	subgraph "cluster_litellm.llms.openai.image_variations" {
		label="litellm.llms.openai.image_variations";
		"litellm.llms.openai.image_variations" -> "litellm.llms.openai.image_variations.handler" [style="dotted"];
		"litellm.llms.openai.image_variations" -> "litellm.llms.openai.image_variations.transformation" [style="dotted"];
	}
	subgraph "cluster_pydoc_data" {
		label="pydoc_data";
		"pydoc_data" -> "pydoc_data.topics" [style="dotted"];
	}
	subgraph "cluster_litellm.router_strategy" {
		label="litellm.router_strategy";
		"litellm.router_strategy" -> "litellm.router_strategy.budget_limiter" [style="dotted"];
		"litellm.router_strategy" -> "litellm.router_strategy.least_busy" [style="dotted"];
		"litellm.router_strategy" -> "litellm.router_strategy.lowest_cost" [style="dotted"];
		"litellm.router_strategy" -> "litellm.router_strategy.lowest_latency" [style="dotted"];
		"litellm.router_strategy" -> "litellm.router_strategy.lowest_tpm_rpm" [style="dotted"];
		"litellm.router_strategy" -> "litellm.router_strategy.lowest_tpm_rpm_v2" [style="dotted"];
		"litellm.router_strategy" -> "litellm.router_strategy.simple_shuffle" [style="dotted"];
		"litellm.router_strategy" -> "litellm.router_strategy.tag_based_routing" [style="dotted"];
		"litellm.router_strategy" -> "litellm.router_strategy.base_routing_strategy" [style="dotted"];
	}
	subgraph "cluster_defusedxml" {
		label="defusedxml";
		"defusedxml" -> "defusedxml.common" [style="dotted"];
		"defusedxml" -> "defusedxml.cElementTree" [style="dotted"];
		"defusedxml" -> "defusedxml.ElementTree" [style="dotted"];
		"defusedxml" -> "defusedxml.expatbuilder" [style="dotted"];
		"defusedxml" -> "defusedxml.expatreader" [style="dotted"];
		"defusedxml" -> "defusedxml.pulldom" [style="dotted"];
		"defusedxml" -> "defusedxml.minidom" [style="dotted"];
		"defusedxml" -> "defusedxml.sax" [style="dotted"];
		"defusedxml" -> "defusedxml.xmlrpc" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_scholar" {
		label="langchain_community.tools.google_scholar";
		"langchain_community.tools.google_scholar" -> "langchain_community.tools.google_scholar.tool" [style="dotted"];
	}
	subgraph "cluster_streamlit.navigation" {
		label="streamlit.navigation";
		"streamlit.navigation" -> "streamlit.navigation.page" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.types_utils" {
		label="litellm.proxy.types_utils";
		"litellm.proxy.types_utils" -> "litellm.proxy.types_utils.utils" [style="dotted"];
	}
	subgraph "cluster_google.auth" {
		label="google.auth";
		"google.auth" -> "google.auth.version" [style="dotted"];
		"google.auth" -> "google.auth.environment_vars" [style="dotted"];
		"google.auth" -> "google.auth.exceptions" [style="dotted"];
		"google.auth" -> "google.auth._helpers" [style="dotted"];
		"google.auth" -> "google.auth._cloud_sdk" [style="dotted"];
		"google.auth" -> "google.auth.metrics" [style="dotted"];
		"google.auth" -> "google.auth.crypt" [style="dotted"];
		"google.auth" -> "google.auth.iam" [style="dotted"];
		"google.auth" -> "google.auth._service_account_info" [style="dotted"];
		"google.auth" -> "google.auth.jwt" [style="dotted"];
		"google.auth" -> "google.auth.compute_engine" [style="dotted"];
		"google.auth" -> "google.auth.external_account_authorized_user" [style="dotted"];
		"google.auth" -> "google.auth.impersonated_credentials" [style="dotted"];
		"google.auth" -> "google.auth.external_account" [style="dotted"];
		"google.auth" -> "google.auth.aws" [style="dotted"];
		"google.auth" -> "google.auth.pluggable" [style="dotted"];
		"google.auth" -> "google.auth.identity_pool" [style="dotted"];
		"google.auth" -> "google.auth.api_key" [style="dotted"];
		"google.auth" -> "google.auth._default" [style="dotted"];
		"google.auth" -> "google.auth.credentials" [style="dotted"];
		"google.auth" -> "google.auth._credentials_base" [style="dotted"];
		"google.auth" -> "google.auth._refresh_worker" [style="dotted"];
		"google.auth" -> "google.auth.app_engine" [style="dotted"];
		"google.auth" -> "google.auth._exponential_backoff" [style="dotted"];
		"google.auth" -> "google.auth.transport" [style="dotted"];
		"google.auth" -> "google.auth.aio" [style="dotted"];
	}
	subgraph "cluster_rpds" {
		label="rpds";
		"rpds" -> "rpds.rpds" [style="dotted"];
		"rpds" -> "rpds.HashTrieMap" [style="dotted"];
		"rpds" -> "rpds.HashTrieSet" [style="dotted"];
		"rpds" -> "rpds.List" [style="dotted"];
	}
	subgraph "cluster_setuptools._vendor" {
		label="setuptools._vendor";
		"setuptools._vendor" -> "setuptools._vendor.ordered_set" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.pyparsing" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.packaging" [style="dotted"];
		"setuptools._vendor" -> "setuptools._vendor.more_itertools" [style="dotted"];
	}
	subgraph "cluster_debugpy.server" {
		label="debugpy.server";
		"debugpy.server" -> "debugpy.server.api" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.steam" {
		label="langchain_community.tools.steam";
		"langchain_community.tools.steam" -> "langchain_community.tools.steam.tool" [style="dotted"];
		"langchain_community.tools.steam" -> "langchain_community.tools.steam.prompt" [style="dotted"];
	}
	subgraph "cluster_huggingface_hub.commands" {
		label="huggingface_hub.commands";
		"huggingface_hub.commands" -> "huggingface_hub.commands._cli_utils" [style="dotted"];
		"huggingface_hub.commands" -> "huggingface_hub.commands.delete_cache" [style="dotted"];
	}
	subgraph "cluster_narwhals._pandas_like" {
		label="narwhals._pandas_like";
		"narwhals._pandas_like" -> "narwhals._pandas_like.dataframe" [style="dotted"];
		"narwhals._pandas_like" -> "narwhals._pandas_like.series" [style="dotted"];
		"narwhals._pandas_like" -> "narwhals._pandas_like.utils" [style="dotted"];
		"narwhals._pandas_like" -> "narwhals._pandas_like.group_by" [style="dotted"];
		"narwhals._pandas_like" -> "narwhals._pandas_like.expr" [style="dotted"];
		"narwhals._pandas_like" -> "narwhals._pandas_like.namespace" [style="dotted"];
		"narwhals._pandas_like" -> "narwhals._pandas_like.selectors" [style="dotted"];
		"narwhals._pandas_like" -> "narwhals._pandas_like.typing" [style="dotted"];
		"narwhals._pandas_like" -> "narwhals._pandas_like.series_cat" [style="dotted"];
		"narwhals._pandas_like" -> "narwhals._pandas_like.series_dt" [style="dotted"];
		"narwhals._pandas_like" -> "narwhals._pandas_like.series_list" [style="dotted"];
		"narwhals._pandas_like" -> "narwhals._pandas_like.series_str" [style="dotted"];
		"narwhals._pandas_like" -> "narwhals._pandas_like.series_struct" [style="dotted"];
	}
	subgraph "cluster_pkg_resources._vendor.packaging" {
		label="pkg_resources._vendor.packaging";
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.__about__" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging._compat" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging._structures" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging._typing" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.markers" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.requirements" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.specifiers" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.tags" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.utils" [style="dotted"];
		"pkg_resources._vendor.packaging" -> "pkg_resources._vendor.packaging.version" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.llm_math" {
		label="langchain.chains.llm_math";
		"langchain.chains.llm_math" -> "langchain.chains.llm_math.base" [style="dotted"];
		"langchain.chains.llm_math" -> "langchain.chains.llm_math.prompt" [style="dotted"];
	}
	subgraph "cluster_litellm.types.mcp_server" {
		label="litellm.types.mcp_server";
		"litellm.types.mcp_server" -> "litellm.types.mcp_server.mcp_server_manager" [style="dotted"];
		"litellm.types.mcp_server" -> "litellm.types.mcp_server.tool_registry" [style="dotted"];
	}
	subgraph "cluster_pydantic.experimental" {
		label="pydantic.experimental";
		"pydantic.experimental" -> "pydantic.experimental.arguments_schema" [style="dotted"];
		"pydantic.experimental" -> "pydantic.experimental.pipeline" [style="dotted"];
	}
	subgraph "cluster_IPython.terminal.pt_inputhooks" {
		label="IPython.terminal.pt_inputhooks";
	}
	subgraph "cluster_kivy.core" {
		label="kivy.core";
		"kivy.core" -> "kivy.core.window" [style="dotted"];
		"kivy.core" -> "kivy.core.gl" [style="dotted"];
		"kivy.core" -> "kivy.core.image" [style="dotted"];
		"kivy.core" -> "kivy.core.text" [style="dotted"];
		"kivy.core" -> "kivy.core.clipboard" [style="dotted"];
		"kivy.core" -> "kivy.core.video" [style="dotted"];
		"kivy.core" -> "kivy.core.camera" [style="dotted"];
		"kivy.core" -> "kivy.core.spelling" [style="dotted"];
		"kivy.core" -> "kivy.core.audio" [style="dotted"];
	}
	subgraph "cluster_docutils.writers.html5_polyglot" {
		label="docutils.writers.html5_polyglot";
	}
	subgraph "cluster_sqlalchemy.future" {
		label="sqlalchemy.future";
		"sqlalchemy.future" -> "sqlalchemy.future.engine" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.exact_match" {
		label="langchain.evaluation.exact_match";
		"langchain.evaluation.exact_match" -> "langchain.evaluation.exact_match.base" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.azure_ai" {
		label="litellm.llms.azure_ai";
		"litellm.llms.azure_ai" -> "litellm.llms.azure_ai.embed" [style="dotted"];
		"litellm.llms.azure_ai" -> "litellm.llms.azure_ai.chat" [style="dotted"];
		"litellm.llms.azure_ai" -> "litellm.llms.azure_ai.rerank" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.formatted_text" {
		label="prompt_toolkit.formatted_text";
		"prompt_toolkit.formatted_text" -> "prompt_toolkit.formatted_text.ansi" [style="dotted"];
		"prompt_toolkit.formatted_text" -> "prompt_toolkit.formatted_text.base" [style="dotted"];
		"prompt_toolkit.formatted_text" -> "prompt_toolkit.formatted_text.html" [style="dotted"];
		"prompt_toolkit.formatted_text" -> "prompt_toolkit.formatted_text.pygments" [style="dotted"];
		"prompt_toolkit.formatted_text" -> "prompt_toolkit.formatted_text.utils" [style="dotted"];
	}
	subgraph "cluster_tqdm" {
		label="tqdm";
		"tqdm" -> "tqdm._monitor" [style="dotted"];
		"tqdm" -> "tqdm._tqdm_pandas" [style="dotted"];
		"tqdm" -> "tqdm.cli" [style="dotted"];
		"tqdm" -> "tqdm.gui" [style="dotted"];
		"tqdm" -> "tqdm.std" [style="dotted"];
		"tqdm" -> "tqdm.version" [style="dotted"];
		"tqdm" -> "tqdm.notebook" [style="dotted"];
		"tqdm" -> "tqdm._dist_ver" [style="dotted"];
		"tqdm" -> "tqdm.utils" [style="dotted"];
		"tqdm" -> "tqdm.asyncio" [style="dotted"];
		"tqdm" -> "tqdm.auto" [style="dotted"];
		"tqdm" -> "tqdm.autonotebook" [style="dotted"];
		"tqdm" -> "tqdm.contrib" [style="dotted"];
	}
	subgraph "cluster_pyasn1.type" {
		label="pyasn1.type";
		"pyasn1.type" -> "pyasn1.type.error" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.constraint" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.tag" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.tagmap" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.base" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.namedtype" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.namedval" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.univ" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.char" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.useful" [style="dotted"];
		"pyasn1.type" -> "pyasn1.type.opentype" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy._experimental.mcp_server" {
		label="litellm.proxy._experimental.mcp_server";
		"litellm.proxy._experimental.mcp_server" -> "litellm.proxy._experimental.mcp_server.server" [style="dotted"];
		"litellm.proxy._experimental.mcp_server" -> "litellm.proxy._experimental.mcp_server.tool_registry" [style="dotted"];
		"litellm.proxy._experimental.mcp_server" -> "litellm.proxy._experimental.mcp_server.mcp_server_manager" [style="dotted"];
		"litellm.proxy._experimental.mcp_server" -> "litellm.proxy._experimental.mcp_server.sse_transport" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.openai_like.embedding" {
		label="litellm.llms.openai_like.embedding";
		"litellm.llms.openai_like.embedding" -> "litellm.llms.openai_like.embedding.handler" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.triton.embedding" {
		label="litellm.llms.triton.embedding";
		"litellm.llms.triton.embedding" -> "litellm.llms.triton.embedding.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits" {
		label="langchain_community.agent_toolkits";
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.azure_ai_services" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.azure_cognitive_services" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.connery" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.load_tools" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.sql" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.ainetwork" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.amadeus" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.cassandra_database" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.cogniswitch" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.file_management" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.gmail" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.jira" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.json" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.multion" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.nasa" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.nla" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.office365" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.openapi" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.playwright" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.polygon" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.powerbi" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.slack" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.spark_sql" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.steam" [style="dotted"];
		"langchain_community.agent_toolkits" -> "langchain_community.agent_toolkits.zapier" [style="dotted"];
	}
	subgraph "cluster_langchain_openai.embeddings" {
		label="langchain_openai.embeddings";
		"langchain_openai.embeddings" -> "langchain_openai.embeddings.azure" [style="dotted"];
		"langchain_openai.embeddings" -> "langchain_openai.embeddings.base" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.databricks" {
		label="litellm.llms.databricks";
		"litellm.llms.databricks" -> "litellm.llms.databricks.cost_calculator" [style="dotted"];
		"litellm.llms.databricks" -> "litellm.llms.databricks.streaming_utils" [style="dotted"];
		"litellm.llms.databricks" -> "litellm.llms.databricks.common_utils" [style="dotted"];
		"litellm.llms.databricks" -> "litellm.llms.databricks.embed" [style="dotted"];
		"litellm.llms.databricks" -> "litellm.llms.databricks.chat" [style="dotted"];
	}
	subgraph "cluster_markupsafe" {
		label="markupsafe";
		"markupsafe" -> "markupsafe._speedups" [style="dotted"];
		"markupsafe" -> "markupsafe._native" [style="dotted"];
	}
	subgraph "cluster_multiprocessing.dummy" {
		label="multiprocessing.dummy";
		"multiprocessing.dummy" -> "multiprocessing.dummy.connection" [style="dotted"];
	}
	subgraph "cluster_PIL" {
		label="PIL";
		"PIL" -> "PIL._version" [style="dotted"];
		"PIL" -> "PIL.ExifTags" [style="dotted"];
		"PIL" -> "PIL.ImageMode" [style="dotted"];
		"PIL" -> "PIL.TiffTags" [style="dotted"];
		"PIL" -> "PIL._imaging" [style="dotted"];
		"PIL" -> "PIL.Image" [style="dotted"];
		"PIL" -> "PIL.ImageFile" [style="dotted"];
		"PIL" -> "PIL.GimpGradientFile" [style="dotted"];
		"PIL" -> "PIL.GimpPaletteFile" [style="dotted"];
		"PIL" -> "PIL.ImageColor" [style="dotted"];
		"PIL" -> "PIL.PaletteFile" [style="dotted"];
		"PIL" -> "PIL.ImagePalette" [style="dotted"];
		"PIL" -> "PIL.ImageOps" [style="dotted"];
		"PIL" -> "PIL.TiffImagePlugin" [style="dotted"];
		"PIL" -> "PIL.ImageFilter" [style="dotted"];
		"PIL" -> "PIL.ImageQt" [style="dotted"];
		"PIL" -> "PIL.BmpImagePlugin" [style="dotted"];
		"PIL" -> "PIL.ImageChops" [style="dotted"];
		"PIL" -> "PIL._imagingmath" [style="dotted"];
		"PIL" -> "PIL.ImageMath" [style="dotted"];
		"PIL" -> "PIL.ImageSequence" [style="dotted"];
		"PIL" -> "PIL.GifImagePlugin" [style="dotted"];
		"PIL" -> "PIL.JpegImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PpmImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PngImagePlugin" [style="dotted"];
		"PIL" -> "PIL._imagingcms" [style="dotted"];
		"PIL" -> "PIL.ImageWin" [style="dotted"];
		"PIL" -> "PIL.ImageCms" [style="dotted"];
		"PIL" -> "PIL.ImageShow" [style="dotted"];
		"PIL" -> "PIL.features" [style="dotted"];
		"PIL" -> "PIL.ImageFont" [style="dotted"];
		"PIL" -> "PIL.ImageDraw" [style="dotted"];
		"PIL" -> "PIL.ImagePath" [style="dotted"];
		"PIL" -> "PIL.ImageDraw2" [style="dotted"];
		"PIL" -> "PIL._avif" [style="dotted"];
		"PIL" -> "PIL.Jpeg2KImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PdfParser" [style="dotted"];
		"PIL" -> "PIL._imagingtk" [style="dotted"];
		"PIL" -> "PIL.ImageTk" [style="dotted"];
		"PIL" -> "PIL._webp" [style="dotted"];
		"PIL" -> "PIL._typing" [style="dotted"];
		"PIL" -> "PIL._util" [style="dotted"];
		"PIL" -> "PIL._imagingft" [style="dotted"];
		"PIL" -> "PIL._deprecate" [style="dotted"];
		"PIL" -> "PIL._binary" [style="dotted"];
		"PIL" -> "PIL.AvifImagePlugin" [style="dotted"];
		"PIL" -> "PIL.BlpImagePlugin" [style="dotted"];
		"PIL" -> "PIL.BufrStubImagePlugin" [style="dotted"];
		"PIL" -> "PIL.CurImagePlugin" [style="dotted"];
		"PIL" -> "PIL.DcxImagePlugin" [style="dotted"];
		"PIL" -> "PIL.DdsImagePlugin" [style="dotted"];
		"PIL" -> "PIL.EpsImagePlugin" [style="dotted"];
		"PIL" -> "PIL.FitsImagePlugin" [style="dotted"];
		"PIL" -> "PIL.FliImagePlugin" [style="dotted"];
		"PIL" -> "PIL.FpxImagePlugin" [style="dotted"];
		"PIL" -> "PIL.FtexImagePlugin" [style="dotted"];
		"PIL" -> "PIL.GbrImagePlugin" [style="dotted"];
		"PIL" -> "PIL.GribStubImagePlugin" [style="dotted"];
		"PIL" -> "PIL.Hdf5StubImagePlugin" [style="dotted"];
		"PIL" -> "PIL.IcnsImagePlugin" [style="dotted"];
		"PIL" -> "PIL.IcoImagePlugin" [style="dotted"];
		"PIL" -> "PIL.ImImagePlugin" [style="dotted"];
		"PIL" -> "PIL.ImtImagePlugin" [style="dotted"];
		"PIL" -> "PIL.IptcImagePlugin" [style="dotted"];
		"PIL" -> "PIL.McIdasImagePlugin" [style="dotted"];
		"PIL" -> "PIL.MicImagePlugin" [style="dotted"];
		"PIL" -> "PIL.MpegImagePlugin" [style="dotted"];
		"PIL" -> "PIL.MpoImagePlugin" [style="dotted"];
		"PIL" -> "PIL.MspImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PalmImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PcdImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PcxImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PdfImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PixarImagePlugin" [style="dotted"];
		"PIL" -> "PIL.PsdImagePlugin" [style="dotted"];
		"PIL" -> "PIL.QoiImagePlugin" [style="dotted"];
		"PIL" -> "PIL.SgiImagePlugin" [style="dotted"];
		"PIL" -> "PIL.SpiderImagePlugin" [style="dotted"];
		"PIL" -> "PIL.SunImagePlugin" [style="dotted"];
		"PIL" -> "PIL.TgaImagePlugin" [style="dotted"];
		"PIL" -> "PIL.WebPImagePlugin" [style="dotted"];
		"PIL" -> "PIL.WmfImagePlugin" [style="dotted"];
		"PIL" -> "PIL.XVThumbImagePlugin" [style="dotted"];
		"PIL" -> "PIL.XbmImagePlugin" [style="dotted"];
		"PIL" -> "PIL.XpmImagePlugin" [style="dotted"];
		"PIL" -> "PIL.JpegPresets" [style="dotted"];
	}
	subgraph "cluster_openai.resources.fine_tuning.checkpoints" {
		label="openai.resources.fine_tuning.checkpoints";
		"openai.resources.fine_tuning.checkpoints" -> "openai.resources.fine_tuning.checkpoints.checkpoints" [style="dotted"];
		"openai.resources.fine_tuning.checkpoints" -> "openai.resources.fine_tuning.checkpoints.permissions" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.batches_endpoints" {
		label="litellm.proxy.batches_endpoints";
		"litellm.proxy.batches_endpoints" -> "litellm.proxy.batches_endpoints.endpoints" [style="dotted"];
	}
	subgraph "cluster_jedi" {
		label="jedi";
		"jedi" -> "jedi.debug" [style="dotted"];
		"jedi" -> "jedi.settings" [style="dotted"];
		"jedi" -> "jedi.cache" [style="dotted"];
		"jedi" -> "jedi.api" [style="dotted"];
		"jedi" -> "jedi.plugins" [style="dotted"];
		"jedi" -> "jedi.parser_utils" [style="dotted"];
		"jedi" -> "jedi.file_io" [style="dotted"];
		"jedi" -> "jedi.inference" [style="dotted"];
		"jedi" -> "jedi.common" [style="dotted"];
		"jedi" -> "jedi._compatibility" [style="dotted"];
	}
	subgraph "cluster_langchain_community.vectorstores" {
		label="langchain_community.vectorstores";
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.aerospike" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.alibabacloud_opensearch" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.analyticdb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.annoy" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.apache_doris" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.aperturedb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.astradb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.atlas" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.awadb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.azure_cosmos_db" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.azure_cosmos_db_no_sql" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.azuresearch" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.bagel" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.baiducloud_vector_search" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.baiduvectordb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.bigquery_vector_search" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.cassandra" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.chroma" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.clarifai" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.clickhouse" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.couchbase" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.dashvector" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.databricks_vector_search" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.deeplake" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.dingo" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.docarray" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.documentdb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.duckdb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.ecloud_vector_search" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.elastic_vector_search" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.elasticsearch" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.epsilla" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.faiss" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.hanavector" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.hologres" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.infinispanvs" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.inmemory" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.kdbai" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.kinetica" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.lancedb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.lantern" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.llm_rails" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.manticore_search" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.marqo" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.matching_engine" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.meilisearch" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.milvus" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.momento_vector_index" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.mongodb_atlas" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.myscale" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.neo4j_vector" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.opensearch_vector_search" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.oraclevs" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.pathway" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.pgembedding" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.pgvector" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.pinecone" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.qdrant" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.redis" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.relyt" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.rocksetdb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.scann" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.semadb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.singlestoredb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.sklearn" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.sqlitevec" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.sqlitevss" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.starrocks" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.supabase" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.surrealdb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.tablestore" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.tair" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.tencentvectordb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.thirdai_neuraldb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.tidb_vector" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.tigris" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.tiledb" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.timescalevector" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.typesense" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.upstash" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.usearch" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.vald" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.vdms" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.vearch" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.vectara" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.vespa" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.vlite" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.weaviate" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.yellowbrick" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.zep" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.zep_cloud" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.zilliz" [style="dotted"];
		"langchain_community.vectorstores" -> "langchain_community.vectorstores.utils" [style="dotted"];
	}
	subgraph "cluster_urllib3.contrib._securetransport" {
		label="urllib3.contrib._securetransport";
		"urllib3.contrib._securetransport" -> "urllib3.contrib._securetransport.bindings" [style="dotted"];
		"urllib3.contrib._securetransport" -> "urllib3.contrib._securetransport.low_level" [style="dotted"];
	}
	subgraph "cluster_executing" {
		label="executing";
		"executing" -> "executing.executing" [style="dotted"];
		"executing" -> "executing._pytest_utils" [style="dotted"];
		"executing" -> "executing.version" [style="dotted"];
		"executing" -> "executing._position_node_finder" [style="dotted"];
		"executing" -> "executing._exceptions" [style="dotted"];
	}
	subgraph "cluster_bs4.builder" {
		label="bs4.builder";
		"bs4.builder" -> "bs4.builder._htmlparser" [style="dotted"];
		"bs4.builder" -> "bs4.builder._html5lib" [style="dotted"];
		"bs4.builder" -> "bs4.builder._lxml" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.structured_output" {
		label="langchain.chains.structured_output";
		"langchain.chains.structured_output" -> "langchain.chains.structured_output.base" [style="dotted"];
	}
	subgraph "cluster_markdown_it.rules_inline" {
		label="markdown_it.rules_inline";
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.emphasis" [style="dotted"];
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.strikethrough" [style="dotted"];
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.autolink" [style="dotted"];
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.backticks" [style="dotted"];
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.balance_pairs" [style="dotted"];
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.entity" [style="dotted"];
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.escape" [style="dotted"];
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.fragments_join" [style="dotted"];
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.html_inline" [style="dotted"];
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.image" [style="dotted"];
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.link" [style="dotted"];
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.linkify" [style="dotted"];
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.newline" [style="dotted"];
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.state_inline" [style="dotted"];
		"markdown_it.rules_inline" -> "markdown_it.rules_inline.text" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.query_constructor" {
		label="langchain.chains.query_constructor";
		"langchain.chains.query_constructor" -> "langchain.chains.query_constructor.base" [style="dotted"];
		"langchain.chains.query_constructor" -> "langchain.chains.query_constructor.parser" [style="dotted"];
		"langchain.chains.query_constructor" -> "langchain.chains.query_constructor.schema" [style="dotted"];
		"langchain.chains.query_constructor" -> "langchain.chains.query_constructor.prompt" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_serper" {
		label="langchain_community.tools.google_serper";
		"langchain_community.tools.google_serper" -> "langchain_community.tools.google_serper.tool" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.api" {
		label="langchain.chains.api";
		"langchain.chains.api" -> "langchain.chains.api.open_meteo_docs" [style="dotted"];
		"langchain.chains.api" -> "langchain.chains.api.news_docs" [style="dotted"];
		"langchain.chains.api" -> "langchain.chains.api.tmdb_docs" [style="dotted"];
		"langchain.chains.api" -> "langchain.chains.api.podcast_docs" [style="dotted"];
		"langchain.chains.api" -> "langchain.chains.api.openapi" [style="dotted"];
		"langchain.chains.api" -> "langchain.chains.api.base" [style="dotted"];
		"langchain.chains.api" -> "langchain.chains.api.prompt" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.golden_query" {
		label="langchain_community.tools.golden_query";
		"langchain_community.tools.golden_query" -> "langchain_community.tools.golden_query.tool" [style="dotted"];
	}
	subgraph "cluster_docutils.writers.latex2e" {
		label="docutils.writers.latex2e";
	}
	subgraph "cluster_certifi" {
		label="certifi";
		"certifi" -> "certifi.core" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.vectorstore" {
		label="langchain_community.tools.vectorstore";
		"langchain_community.tools.vectorstore" -> "langchain_community.tools.vectorstore.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.vectorstores.redis" {
		label="langchain_community.vectorstores.redis";
		"langchain_community.vectorstores.redis" -> "langchain_community.vectorstores.redis.base" [style="dotted"];
		"langchain_community.vectorstores.redis" -> "langchain_community.vectorstores.redis.filters" [style="dotted"];
		"langchain_community.vectorstores.redis" -> "langchain_community.vectorstores.redis.schema" [style="dotted"];
		"langchain_community.vectorstores.redis" -> "langchain_community.vectorstores.redis.constants" [style="dotted"];
	}
	subgraph "cluster_streamlit.watcher" {
		label="streamlit.watcher";
		"streamlit.watcher" -> "streamlit.watcher.util" [style="dotted"];
		"streamlit.watcher" -> "streamlit.watcher.local_sources_watcher" [style="dotted"];
		"streamlit.watcher" -> "streamlit.watcher.path_watcher" [style="dotted"];
		"streamlit.watcher" -> "streamlit.watcher.polling_path_watcher" [style="dotted"];
		"streamlit.watcher" -> "streamlit.watcher.event_based_path_watcher" [style="dotted"];
		"streamlit.watcher" -> "streamlit.watcher.folder_black_list" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.lm_studio.chat" {
		label="litellm.llms.lm_studio.chat";
		"litellm.llms.lm_studio.chat" -> "litellm.llms.lm_studio.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.file_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.file_service.transports";
		"google.ai.generativelanguage_v1beta.services.file_service.transports" -> "google.ai.generativelanguage_v1beta.services.file_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.file_service.transports" -> "google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.file_service.transports" -> "google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.file_service.transports" -> "google.ai.generativelanguage_v1beta.services.file_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.file_service.transports" -> "google.ai.generativelanguage_v1beta.services.file_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_cloudpickle" {
		label="cloudpickle";
		"cloudpickle" -> "cloudpickle.cloudpickle" [style="dotted"];
		"cloudpickle" -> "cloudpickle.cloudpickle_fast" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vertex_ai.vertex_ai_partner_models.llama3" {
		label="litellm.llms.vertex_ai.vertex_ai_partner_models.llama3";
		"litellm.llms.vertex_ai.vertex_ai_partner_models.llama3" -> "litellm.llms.vertex_ai.vertex_ai_partner_models.llama3.transformation" [style="dotted"];
	}
	subgraph "cluster_numpy.lib" {
		label="numpy.lib";
		"numpy.lib" -> "numpy.lib.array_utils" [style="dotted"];
		"numpy.lib" -> "numpy.lib.introspect" [style="dotted"];
		"numpy.lib" -> "numpy.lib.mixins" [style="dotted"];
		"numpy.lib" -> "numpy.lib.format" [style="dotted"];
		"numpy.lib" -> "numpy.lib.recfunctions" [style="dotted"];
		"numpy.lib" -> "numpy.lib.npyio" [style="dotted"];
		"numpy.lib" -> "numpy.lib.scimath" [style="dotted"];
		"numpy.lib" -> "numpy.lib.stride_tricks" [style="dotted"];
		"numpy.lib" -> "numpy.lib._type_check_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._index_tricks_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._nanfunctions_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._function_base_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._stride_tricks_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._shape_base_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._twodim_base_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._ufunclike_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._histograms_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._utils_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._arraysetops_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._polynomial_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._npyio_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._arrayterator_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._arraypad_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._version" [style="dotted"];
		"numpy.lib" -> "numpy.lib._iotools" [style="dotted"];
		"numpy.lib" -> "numpy.lib._array_utils_impl" [style="dotted"];
		"numpy.lib" -> "numpy.lib._datasource" [style="dotted"];
		"numpy.lib" -> "numpy.lib._scimath_impl" [style="dotted"];
	}
	subgraph "cluster_openai.types" {
		label="openai.types";
		"openai.types" -> "openai.types.eval_list_params" [style="dotted"];
		"openai.types" -> "openai.types.eval_create_params" [style="dotted"];
		"openai.types" -> "openai.types.eval_update_params" [style="dotted"];
		"openai.types" -> "openai.types.file_list_params" [style="dotted"];
		"openai.types" -> "openai.types.file_create_params" [style="dotted"];
		"openai.types" -> "openai.types.image_edit_params" [style="dotted"];
		"openai.types" -> "openai.types.image_generate_params" [style="dotted"];
		"openai.types" -> "openai.types.image_create_variation_params" [style="dotted"];
		"openai.types" -> "openai.types.batch_list_params" [style="dotted"];
		"openai.types" -> "openai.types.batch_create_params" [style="dotted"];
		"openai.types" -> "openai.types.upload_create_params" [style="dotted"];
		"openai.types" -> "openai.types.upload_complete_params" [style="dotted"];
		"openai.types" -> "openai.types.embedding_create_params" [style="dotted"];
		"openai.types" -> "openai.types.completion_create_params" [style="dotted"];
		"openai.types" -> "openai.types.moderation_create_params" [style="dotted"];
		"openai.types" -> "openai.types.vector_store_list_params" [style="dotted"];
		"openai.types" -> "openai.types.vector_store_create_params" [style="dotted"];
		"openai.types" -> "openai.types.vector_store_search_params" [style="dotted"];
		"openai.types" -> "openai.types.vector_store_update_params" [style="dotted"];
		"openai.types" -> "openai.types.batch" [style="dotted"];
		"openai.types" -> "openai.types.image" [style="dotted"];
		"openai.types" -> "openai.types.model" [style="dotted"];
		"openai.types" -> "openai.types.shared" [style="dotted"];
		"openai.types" -> "openai.types.upload" [style="dotted"];
		"openai.types" -> "openai.types.embedding" [style="dotted"];
		"openai.types" -> "openai.types.chat_model" [style="dotted"];
		"openai.types" -> "openai.types.completion" [style="dotted"];
		"openai.types" -> "openai.types.moderation" [style="dotted"];
		"openai.types" -> "openai.types.audio_model" [style="dotted"];
		"openai.types" -> "openai.types.batch_error" [style="dotted"];
		"openai.types" -> "openai.types.file_object" [style="dotted"];
		"openai.types" -> "openai.types.image_model" [style="dotted"];
		"openai.types" -> "openai.types.file_content" [style="dotted"];
		"openai.types" -> "openai.types.file_deleted" [style="dotted"];
		"openai.types" -> "openai.types.file_purpose" [style="dotted"];
		"openai.types" -> "openai.types.vector_store" [style="dotted"];
		"openai.types" -> "openai.types.model_deleted" [style="dotted"];
		"openai.types" -> "openai.types.embedding_model" [style="dotted"];
		"openai.types" -> "openai.types.images_response" [style="dotted"];
		"openai.types" -> "openai.types.completion_usage" [style="dotted"];
		"openai.types" -> "openai.types.moderation_model" [style="dotted"];
		"openai.types" -> "openai.types.completion_choice" [style="dotted"];
		"openai.types" -> "openai.types.eval_list_response" [style="dotted"];
		"openai.types" -> "openai.types.batch_request_counts" [style="dotted"];
		"openai.types" -> "openai.types.eval_create_response" [style="dotted"];
		"openai.types" -> "openai.types.eval_delete_response" [style="dotted"];
		"openai.types" -> "openai.types.eval_update_response" [style="dotted"];
		"openai.types" -> "openai.types.vector_store_deleted" [style="dotted"];
		"openai.types" -> "openai.types.audio_response_format" [style="dotted"];
		"openai.types" -> "openai.types.eval_retrieve_response" [style="dotted"];
		"openai.types" -> "openai.types.file_chunking_strategy" [style="dotted"];
		"openai.types" -> "openai.types.eval_label_model_grader" [style="dotted"];
		"openai.types" -> "openai.types.eval_string_check_grader" [style="dotted"];
		"openai.types" -> "openai.types.create_embedding_response" [style="dotted"];
		"openai.types" -> "openai.types.moderation_create_response" [style="dotted"];
		"openai.types" -> "openai.types.eval_text_similarity_grader" [style="dotted"];
		"openai.types" -> "openai.types.moderation_text_input_param" [style="dotted"];
		"openai.types" -> "openai.types.file_chunking_strategy_param" [style="dotted"];
		"openai.types" -> "openai.types.vector_store_search_response" [style="dotted"];
		"openai.types" -> "openai.types.websocket_connection_options" [style="dotted"];
		"openai.types" -> "openai.types.static_file_chunking_strategy" [style="dotted"];
		"openai.types" -> "openai.types.eval_custom_data_source_config" [style="dotted"];
		"openai.types" -> "openai.types.eval_string_check_grader_param" [style="dotted"];
		"openai.types" -> "openai.types.moderation_image_url_input_param" [style="dotted"];
		"openai.types" -> "openai.types.auto_file_chunking_strategy_param" [style="dotted"];
		"openai.types" -> "openai.types.eval_text_similarity_grader_param" [style="dotted"];
		"openai.types" -> "openai.types.moderation_multi_modal_input_param" [style="dotted"];
		"openai.types" -> "openai.types.other_file_chunking_strategy_object" [style="dotted"];
		"openai.types" -> "openai.types.static_file_chunking_strategy_param" [style="dotted"];
		"openai.types" -> "openai.types.static_file_chunking_strategy_object" [style="dotted"];
		"openai.types" -> "openai.types.eval_stored_completions_data_source_config" [style="dotted"];
		"openai.types" -> "openai.types.static_file_chunking_strategy_object_param" [style="dotted"];
		"openai.types" -> "openai.types.shared_params" [style="dotted"];
		"openai.types" -> "openai.types.vector_stores" [style="dotted"];
		"openai.types" -> "openai.types.fine_tuning" [style="dotted"];
		"openai.types" -> "openai.types.chat" [style="dotted"];
		"openai.types" -> "openai.types.responses" [style="dotted"];
		"openai.types" -> "openai.types.uploads" [style="dotted"];
		"openai.types" -> "openai.types.evals" [style="dotted"];
		"openai.types" -> "openai.types.audio" [style="dotted"];
		"openai.types" -> "openai.types.beta" [style="dotted"];
	}
	subgraph "cluster_attrs" {
		label="attrs";
		"attrs" -> "attrs.converters" [style="dotted"];
		"attrs" -> "attrs.exceptions" [style="dotted"];
		"attrs" -> "attrs.filters" [style="dotted"];
		"attrs" -> "attrs.setters" [style="dotted"];
		"attrs" -> "attrs.validators" [style="dotted"];
	}
	subgraph "cluster_litellm.integrations.prometheus_helpers" {
		label="litellm.integrations.prometheus_helpers";
		"litellm.integrations.prometheus_helpers" -> "litellm.integrations.prometheus_helpers.prometheus_api" [style="dotted"];
	}
	subgraph "cluster_gitdb" {
		label="gitdb";
		"gitdb" -> "gitdb.base" [style="dotted"];
		"gitdb" -> "gitdb.db" [style="dotted"];
		"gitdb" -> "gitdb.stream" [style="dotted"];
		"gitdb" -> "gitdb.util" [style="dotted"];
		"gitdb" -> "gitdb.exc" [style="dotted"];
		"gitdb" -> "gitdb.typ" [style="dotted"];
		"gitdb" -> "gitdb.fun" [style="dotted"];
		"gitdb" -> "gitdb.const" [style="dotted"];
		"gitdb" -> "gitdb.utils" [style="dotted"];
		"gitdb" -> "gitdb.pack" [style="dotted"];
	}
	subgraph "cluster_altair.typing" {
		label="altair.typing";
	}
	subgraph "cluster_numpy.ma" {
		label="numpy.ma";
		"numpy.ma" -> "numpy.ma.core" [style="dotted"];
		"numpy.ma" -> "numpy.ma.extras" [style="dotted"];
		"numpy.ma" -> "numpy.ma.mrecords" [style="dotted"];
	}
	subgraph "cluster_langchain_community.retrievers" {
		label="langchain_community.retrievers";
		"langchain_community.retrievers" -> "langchain_community.retrievers.arcee" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.arxiv" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.asknews" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.azure_ai_search" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.bedrock" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.bm25" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.breebs" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.chaindesk" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.chatgpt_plugin_retriever" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.cohere_rag_retriever" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.docarray" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.dria_index" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.elastic_search_bm25" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.embedchain" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.google_cloud_documentai_warehouse" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.google_vertex_ai_search" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.kay" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.kendra" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.knn" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.llama_index" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.metal" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.milvus" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.nanopq" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.needle" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.outline" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.pinecone_hybrid_search" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.pubmed" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.qdrant_sparse_vector_retriever" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.rememberizer" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.remote_retriever" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.svm" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.tavily_search_api" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.tfidf" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.thirdai_neuraldb" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.vespa_retriever" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.weaviate_hybrid_search" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.web_research" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.wikipedia" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.you" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.zep" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.zep_cloud" [style="dotted"];
		"langchain_community.retrievers" -> "langchain_community.retrievers.zilliz" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.galadriel.chat" {
		label="litellm.llms.galadriel.chat";
		"litellm.llms.galadriel.chat" -> "litellm.llms.galadriel.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_setuptools.command" {
		label="setuptools.command";
		"setuptools.command" -> "setuptools.command.bdist_egg" [style="dotted"];
		"setuptools.command" -> "setuptools.command.egg_info" [style="dotted"];
		"setuptools.command" -> "setuptools.command.sdist" [style="dotted"];
		"setuptools.command" -> "setuptools.command.setopt" [style="dotted"];
		"setuptools.command" -> "setuptools.command.py36compat" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.shell" {
		label="langchain_community.tools.shell";
		"langchain_community.tools.shell" -> "langchain_community.tools.shell.tool" [style="dotted"];
	}
	subgraph "cluster_numpy.random" {
		label="numpy.random";
		"numpy.random" -> "numpy.random._pickle" [style="dotted"];
		"numpy.random" -> "numpy.random._common" [style="dotted"];
		"numpy.random" -> "numpy.random._bounded_integers" [style="dotted"];
		"numpy.random" -> "numpy.random._generator" [style="dotted"];
		"numpy.random" -> "numpy.random.bit_generator" [style="dotted"];
		"numpy.random" -> "numpy.random._mt19937" [style="dotted"];
		"numpy.random" -> "numpy.random._pcg64" [style="dotted"];
		"numpy.random" -> "numpy.random._philox" [style="dotted"];
		"numpy.random" -> "numpy.random._sfc64" [style="dotted"];
		"numpy.random" -> "numpy.random.mtrand" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vertex_ai.multimodal_embeddings" {
		label="litellm.llms.vertex_ai.multimodal_embeddings";
		"litellm.llms.vertex_ai.multimodal_embeddings" -> "litellm.llms.vertex_ai.multimodal_embeddings.embedding_handler" [style="dotted"];
		"litellm.llms.vertex_ai.multimodal_embeddings" -> "litellm.llms.vertex_ai.multimodal_embeddings.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.snowflake" {
		label="litellm.llms.snowflake";
		"litellm.llms.snowflake" -> "litellm.llms.snowflake.chat" [style="dotted"];
	}
	subgraph "cluster_httpx._transports" {
		label="httpx._transports";
		"httpx._transports" -> "httpx._transports.asgi" [style="dotted"];
		"httpx._transports" -> "httpx._transports.base" [style="dotted"];
		"httpx._transports" -> "httpx._transports.default" [style="dotted"];
		"httpx._transports" -> "httpx._transports.mock" [style="dotted"];
		"httpx._transports" -> "httpx._transports.wsgi" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.sql" {
		label="langchain_community.agent_toolkits.sql";
		"langchain_community.agent_toolkits.sql" -> "langchain_community.agent_toolkits.sql.base" [style="dotted"];
		"langchain_community.agent_toolkits.sql" -> "langchain_community.agent_toolkits.sql.prompt" [style="dotted"];
		"langchain_community.agent_toolkits.sql" -> "langchain_community.agent_toolkits.sql.toolkit" [style="dotted"];
	}
	subgraph "cluster_nbformat.v3" {
		label="nbformat.v3";
		"nbformat.v3" -> "nbformat.v3.convert" [style="dotted"];
		"nbformat.v3" -> "nbformat.v3.nbbase" [style="dotted"];
		"nbformat.v3" -> "nbformat.v3.nbjson" [style="dotted"];
		"nbformat.v3" -> "nbformat.v3.nbpy" [style="dotted"];
		"nbformat.v3" -> "nbformat.v3.rwbase" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.aiohttp_openai" {
		label="litellm.llms.aiohttp_openai";
		"litellm.llms.aiohttp_openai" -> "litellm.llms.aiohttp_openai.chat" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.ai21.chat" {
		label="litellm.llms.ai21.chat";
		"litellm.llms.ai21.chat" -> "litellm.llms.ai21.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_pyasn1_modules" {
		label="pyasn1_modules";
		"pyasn1_modules" -> "pyasn1_modules.pem" [style="dotted"];
		"pyasn1_modules" -> "pyasn1_modules.rfc2251" [style="dotted"];
		"pyasn1_modules" -> "pyasn1_modules.rfc2459" [style="dotted"];
		"pyasn1_modules" -> "pyasn1_modules.rfc5208" [style="dotted"];
	}
	subgraph "cluster_streamlit.components.types" {
		label="streamlit.components.types";
		"streamlit.components.types" -> "streamlit.components.types.base_component_registry" [style="dotted"];
		"streamlit.components.types" -> "streamlit.components.types.base_custom_component" [style="dotted"];
	}
	subgraph "cluster_pydantic_core" {
		label="pydantic_core";
		"pydantic_core" -> "pydantic_core._pydantic_core" [style="dotted"];
		"pydantic_core" -> "pydantic_core.core_schema" [style="dotted"];
	}
	subgraph "cluster_yt_dlp" {
		label="yt_dlp";
		"yt_dlp" -> "yt_dlp.cookies" [style="dotted"];
		"yt_dlp" -> "yt_dlp.webvtt" [style="dotted"];
		"yt_dlp" -> "yt_dlp.extractor" [style="dotted"];
		"yt_dlp" -> "yt_dlp.globals" [style="dotted"];
		"yt_dlp" -> "yt_dlp.options" [style="dotted"];
		"yt_dlp" -> "yt_dlp.plugins" [style="dotted"];
		"yt_dlp" -> "yt_dlp.postprocessor" [style="dotted"];
		"yt_dlp" -> "yt_dlp.update" [style="dotted"];
		"yt_dlp" -> "yt_dlp.utils" [style="dotted"];
		"yt_dlp" -> "yt_dlp.YoutubeDL" [style="dotted"];
		"yt_dlp" -> "yt_dlp.downloader" [style="dotted"];
		"yt_dlp" -> "yt_dlp.networking" [style="dotted"];
		"yt_dlp" -> "yt_dlp.compat" [style="dotted"];
		"yt_dlp" -> "yt_dlp.dependencies" [style="dotted"];
		"yt_dlp" -> "yt_dlp.socks" [style="dotted"];
		"yt_dlp" -> "yt_dlp.jsinterp" [style="dotted"];
		"yt_dlp" -> "yt_dlp.aes" [style="dotted"];
		"yt_dlp" -> "yt_dlp.minicurses" [style="dotted"];
		"yt_dlp" -> "yt_dlp.version" [style="dotted"];
		"yt_dlp" -> "yt_dlp.cache" [style="dotted"];
	}
	subgraph "cluster_huggingface_hub.inference" {
		label="huggingface_hub.inference";
		"huggingface_hub.inference" -> "huggingface_hub.inference._client" [style="dotted"];
		"huggingface_hub.inference" -> "huggingface_hub.inference._generated" [style="dotted"];
		"huggingface_hub.inference" -> "huggingface_hub.inference._common" [style="dotted"];
		"huggingface_hub.inference" -> "huggingface_hub.inference._providers" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.graphql" {
		label="langchain_community.tools.graphql";
		"langchain_community.tools.graphql" -> "langchain_community.tools.graphql.tool" [style="dotted"];
	}
	subgraph "cluster_pyasn1.codec.ber" {
		label="pyasn1.codec.ber";
		"pyasn1.codec.ber" -> "pyasn1.codec.ber.eoo" [style="dotted"];
		"pyasn1.codec.ber" -> "pyasn1.codec.ber.decoder" [style="dotted"];
		"pyasn1.codec.ber" -> "pyasn1.codec.ber.encoder" [style="dotted"];
	}
	subgraph "cluster_pandas._config" {
		label="pandas._config";
		"pandas._config" -> "pandas._config.config" [style="dotted"];
		"pandas._config" -> "pandas._config.dates" [style="dotted"];
		"pandas._config" -> "pandas._config.display" [style="dotted"];
		"pandas._config" -> "pandas._config.localization" [style="dotted"];
	}
	subgraph "cluster_stack_data" {
		label="stack_data";
		"stack_data" -> "stack_data.core" [style="dotted"];
		"stack_data" -> "stack_data.formatting" [style="dotted"];
		"stack_data" -> "stack_data.serializing" [style="dotted"];
		"stack_data" -> "stack_data.version" [style="dotted"];
		"stack_data" -> "stack_data.utils" [style="dotted"];
	}
	subgraph "cluster_docutils.parsers.rst.directives" {
		label="docutils.parsers.rst.directives";
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.admonitions" [style="dotted"];
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.body" [style="dotted"];
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.html" [style="dotted"];
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.images" [style="dotted"];
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.misc" [style="dotted"];
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.parts" [style="dotted"];
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.references" [style="dotted"];
		"docutils.parsers.rst.directives" -> "docutils.parsers.rst.directives.tables" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.pass_through_endpoints" {
		label="litellm.proxy.pass_through_endpoints";
		"litellm.proxy.pass_through_endpoints" -> "litellm.proxy.pass_through_endpoints.llm_passthrough_endpoints" [style="dotted"];
		"litellm.proxy.pass_through_endpoints" -> "litellm.proxy.pass_through_endpoints.pass_through_endpoints" [style="dotted"];
		"litellm.proxy.pass_through_endpoints" -> "litellm.proxy.pass_through_endpoints.streaming_handler" [style="dotted"];
		"litellm.proxy.pass_through_endpoints" -> "litellm.proxy.pass_through_endpoints.success_handler" [style="dotted"];
		"litellm.proxy.pass_through_endpoints" -> "litellm.proxy.pass_through_endpoints.types" [style="dotted"];
		"litellm.proxy.pass_through_endpoints" -> "litellm.proxy.pass_through_endpoints.llm_provider_handlers" [style="dotted"];
		"litellm.proxy.pass_through_endpoints" -> "litellm.proxy.pass_through_endpoints.common_utils" [style="dotted"];
		"litellm.proxy.pass_through_endpoints" -> "litellm.proxy.pass_through_endpoints.passthrough_endpoint_router" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.text" {
		label="datasets.packaged_modules.text";
		"datasets.packaged_modules.text" -> "datasets.packaged_modules.text.text" [style="dotted"];
	}
	subgraph "cluster_litellm.realtime_api" {
		label="litellm.realtime_api";
		"litellm.realtime_api" -> "litellm.realtime_api.main" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.groq.stt" {
		label="litellm.llms.groq.stt";
		"litellm.llms.groq.stt" -> "litellm.llms.groq.stt.transformation" [style="dotted"];
	}
	subgraph "cluster_pyarrow" {
		label="pyarrow";
		"pyarrow" -> "pyarrow._generated_version" [style="dotted"];
		"pyarrow" -> "pyarrow.lib" [style="dotted"];
		"pyarrow" -> "pyarrow.fs" [style="dotted"];
		"pyarrow" -> "pyarrow.ipc" [style="dotted"];
		"pyarrow" -> "pyarrow.types" [style="dotted"];
		"pyarrow" -> "pyarrow.util" [style="dotted"];
		"pyarrow" -> "pyarrow._compute_docstrings" [style="dotted"];
		"pyarrow" -> "pyarrow._feather" [style="dotted"];
		"pyarrow" -> "pyarrow.feather" [style="dotted"];
		"pyarrow" -> "pyarrow.csv" [style="dotted"];
		"pyarrow" -> "pyarrow._acero" [style="dotted"];
		"pyarrow" -> "pyarrow._azurefs" [style="dotted"];
		"pyarrow" -> "pyarrow._compute" [style="dotted"];
		"pyarrow" -> "pyarrow._csv" [style="dotted"];
		"pyarrow" -> "pyarrow._dataset" [style="dotted"];
		"pyarrow" -> "pyarrow._dataset_orc" [style="dotted"];
		"pyarrow" -> "pyarrow._dataset_parquet" [style="dotted"];
		"pyarrow" -> "pyarrow._dataset_parquet_encryption" [style="dotted"];
		"pyarrow" -> "pyarrow._flight" [style="dotted"];
		"pyarrow" -> "pyarrow._fs" [style="dotted"];
		"pyarrow" -> "pyarrow._gcsfs" [style="dotted"];
		"pyarrow" -> "pyarrow._hdfs" [style="dotted"];
		"pyarrow" -> "pyarrow._json" [style="dotted"];
		"pyarrow" -> "pyarrow._orc" [style="dotted"];
		"pyarrow" -> "pyarrow._parquet" [style="dotted"];
		"pyarrow" -> "pyarrow._parquet_encryption" [style="dotted"];
		"pyarrow" -> "pyarrow._s3fs" [style="dotted"];
		"pyarrow" -> "pyarrow._substrait" [style="dotted"];
		"pyarrow" -> "pyarrow.acero" [style="dotted"];
		"pyarrow" -> "pyarrow.benchmark" [style="dotted"];
		"pyarrow" -> "pyarrow.cffi" [style="dotted"];
		"pyarrow" -> "pyarrow.compute" [style="dotted"];
		"pyarrow" -> "pyarrow.conftest" [style="dotted"];
		"pyarrow" -> "pyarrow.cuda" [style="dotted"];
		"pyarrow" -> "pyarrow.dataset" [style="dotted"];
		"pyarrow" -> "pyarrow.flight" [style="dotted"];
		"pyarrow" -> "pyarrow.interchange" [style="dotted"];
		"pyarrow" -> "pyarrow.json" [style="dotted"];
		"pyarrow" -> "pyarrow.jvm" [style="dotted"];
		"pyarrow" -> "pyarrow.orc" [style="dotted"];
		"pyarrow" -> "pyarrow.pandas_compat" [style="dotted"];
		"pyarrow" -> "pyarrow.parquet" [style="dotted"];
		"pyarrow" -> "pyarrow.substrait" [style="dotted"];
		"pyarrow" -> "pyarrow.vendored" [style="dotted"];
		"pyarrow" -> "pyarrow.tests" [style="dotted"];
	}
	subgraph "cluster_pyasn1.codec.der" {
		label="pyasn1.codec.der";
		"pyasn1.codec.der" -> "pyasn1.codec.der.decoder" [style="dotted"];
		"pyasn1.codec.der" -> "pyasn1.codec.der.encoder" [style="dotted"];
	}
	subgraph "cluster_pycparser.ply" {
		label="pycparser.ply";
		"pycparser.ply" -> "pycparser.ply.lex" [style="dotted"];
		"pycparser.ply" -> "pycparser.ply.yacc" [style="dotted"];
	}
	subgraph "cluster_grpc.aio" {
		label="grpc.aio";
		"grpc.aio" -> "grpc.aio._base_call" [style="dotted"];
		"grpc.aio" -> "grpc.aio._base_channel" [style="dotted"];
		"grpc.aio" -> "grpc.aio._base_server" [style="dotted"];
		"grpc.aio" -> "grpc.aio._call" [style="dotted"];
		"grpc.aio" -> "grpc.aio._channel" [style="dotted"];
		"grpc.aio" -> "grpc.aio._interceptor" [style="dotted"];
		"grpc.aio" -> "grpc.aio._metadata" [style="dotted"];
		"grpc.aio" -> "grpc.aio._server" [style="dotted"];
		"grpc.aio" -> "grpc.aio._typing" [style="dotted"];
		"grpc.aio" -> "grpc.aio._utils" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.jina_ai" {
		label="litellm.llms.jina_ai";
		"litellm.llms.jina_ai" -> "litellm.llms.jina_ai.embedding" [style="dotted"];
		"litellm.llms.jina_ai" -> "litellm.llms.jina_ai.rerank" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.infinity.rerank" {
		label="litellm.llms.infinity.rerank";
		"litellm.llms.infinity.rerank" -> "litellm.llms.infinity.rerank.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.embedding_distance" {
		label="langchain.evaluation.embedding_distance";
		"langchain.evaluation.embedding_distance" -> "langchain.evaluation.embedding_distance.base" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.bedrock" {
		label="litellm.llms.bedrock";
		"litellm.llms.bedrock" -> "litellm.llms.bedrock.common_utils" [style="dotted"];
		"litellm.llms.bedrock" -> "litellm.llms.bedrock.base_aws_llm" [style="dotted"];
		"litellm.llms.bedrock" -> "litellm.llms.bedrock.image" [style="dotted"];
		"litellm.llms.bedrock" -> "litellm.llms.bedrock.chat" [style="dotted"];
		"litellm.llms.bedrock" -> "litellm.llms.bedrock.embed" [style="dotted"];
		"litellm.llms.bedrock" -> "litellm.llms.bedrock.rerank" [style="dotted"];
		"litellm.llms.bedrock" -> "litellm.llms.bedrock.messages" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.ext.declarative" {
		label="sqlalchemy.ext.declarative";
		"sqlalchemy.ext.declarative" -> "sqlalchemy.ext.declarative.extensions" [style="dotted"];
	}
	subgraph "cluster_fsspec.implementations" {
		label="fsspec.implementations";
		"fsspec.implementations" -> "fsspec.implementations.arrow" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.asyn_wrapper" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.cache_mapper" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.cache_metadata" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.cached" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.dask" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.data" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.dbfs" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.dirfs" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.ftp" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.git" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.github" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.http" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.http_sync" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.jupyter" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.libarchive" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.local" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.memory" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.reference" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.sftp" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.smb" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.tar" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.webhdfs" [style="dotted"];
		"fsspec.implementations" -> "fsspec.implementations.zip" [style="dotted"];
	}
	subgraph "cluster_langchain_community.chat_models" {
		label="langchain_community.chat_models";
		"langchain_community.chat_models" -> "langchain_community.chat_models.anthropic" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.anyscale" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.azure_openai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.baichuan" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.baidu_qianfan_endpoint" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.bedrock" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.cohere" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.coze" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.databricks" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.deepinfra" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.edenai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.ernie" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.everlyai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.fake" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.fireworks" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.friendli" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.gigachat" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.google_palm" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.gpt_router" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.huggingface" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.human" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.hunyuan" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.javelin_ai_gateway" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.jinachat" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.kinetica" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.konko" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.litellm" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.litellm_router" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.llama_edge" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.llamacpp" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.maritalk" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.minimax" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.mlflow" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.mlflow_ai_gateway" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.mlx" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.moonshot" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.naver" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.oci_data_science" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.oci_generative_ai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.octoai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.ollama" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.openai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.outlines" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.pai_eas_endpoint" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.perplexity" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.premai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.promptlayer_openai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.reka" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.sambanova" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.snowflake" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.solar" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.sparkllm" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.symblai_nebula" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.tongyi" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.vertexai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.volcengine_maas" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.yandex" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.yi" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.yuan2" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.zhipuai" [style="dotted"];
		"langchain_community.chat_models" -> "langchain_community.chat_models.meta" [style="dotted"];
	}
	subgraph "cluster_tokenizers.trainers" {
		label="tokenizers.trainers";
	}
	subgraph "cluster_langchain_community.tools.openapi.utils" {
		label="langchain_community.tools.openapi.utils";
		"langchain_community.tools.openapi.utils" -> "langchain_community.tools.openapi.utils.api_models" [style="dotted"];
		"langchain_community.tools.openapi.utils" -> "langchain_community.tools.openapi.utils.openapi_utils" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.bedrock.rerank" {
		label="litellm.llms.bedrock.rerank";
		"litellm.llms.bedrock.rerank" -> "litellm.llms.bedrock.rerank.handler" [style="dotted"];
		"litellm.llms.bedrock.rerank" -> "litellm.llms.bedrock.rerank.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.eleven_labs" {
		label="langchain_community.tools.eleven_labs";
		"langchain_community.tools.eleven_labs" -> "langchain_community.tools.eleven_labs.text2speech" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.base_llm.image_variations" {
		label="litellm.llms.base_llm.image_variations";
		"litellm.llms.base_llm.image_variations" -> "litellm.llms.base_llm.image_variations.transformation" [style="dotted"];
	}
	subgraph "cluster_packaging" {
		label="packaging";
		"packaging" -> "packaging._manylinux" [style="dotted"];
		"packaging" -> "packaging._musllinux" [style="dotted"];
		"packaging" -> "packaging.requirements" [style="dotted"];
		"packaging" -> "packaging._elffile" [style="dotted"];
		"packaging" -> "packaging._parser" [style="dotted"];
		"packaging" -> "packaging._structures" [style="dotted"];
		"packaging" -> "packaging._tokenizer" [style="dotted"];
		"packaging" -> "packaging.markers" [style="dotted"];
		"packaging" -> "packaging.metadata" [style="dotted"];
		"packaging" -> "packaging.specifiers" [style="dotted"];
		"packaging" -> "packaging.tags" [style="dotted"];
		"packaging" -> "packaging.utils" [style="dotted"];
		"packaging" -> "packaging.version" [style="dotted"];
		"packaging" -> "packaging.licenses" [style="dotted"];
	}
	subgraph "cluster_yt_dlp.networking" {
		label="yt_dlp.networking";
		"yt_dlp.networking" -> "yt_dlp.networking.common" [style="dotted"];
		"yt_dlp.networking" -> "yt_dlp.networking._urllib" [style="dotted"];
		"yt_dlp.networking" -> "yt_dlp.networking._requests" [style="dotted"];
		"yt_dlp.networking" -> "yt_dlp.networking._websockets" [style="dotted"];
		"yt_dlp.networking" -> "yt_dlp.networking._curlcffi" [style="dotted"];
		"yt_dlp.networking" -> "yt_dlp.networking.impersonate" [style="dotted"];
		"yt_dlp.networking" -> "yt_dlp.networking._helper" [style="dotted"];
		"yt_dlp.networking" -> "yt_dlp.networking.exceptions" [style="dotted"];
		"yt_dlp.networking" -> "yt_dlp.networking.websocket" [style="dotted"];
	}
	subgraph "cluster_numpy.matrixlib" {
		label="numpy.matrixlib";
		"numpy.matrixlib" -> "numpy.matrixlib.defmatrix" [style="dotted"];
	}
	subgraph "cluster_litellm.types.proxy.guardrails" {
		label="litellm.types.proxy.guardrails";
		"litellm.types.proxy.guardrails" -> "litellm.types.proxy.guardrails.guardrail_hooks" [style="dotted"];
	}
	subgraph "cluster_openai.resources.evals" {
		label="openai.resources.evals";
		"openai.resources.evals" -> "openai.resources.evals.runs" [style="dotted"];
		"openai.resources.evals" -> "openai.resources.evals.evals" [style="dotted"];
	}
	subgraph "cluster_langchain_core" {
		label="langchain_core";
		"langchain_core" -> "langchain_core._api" [style="dotted"];
		"langchain_core" -> "langchain_core.version" [style="dotted"];
		"langchain_core" -> "langchain_core.messages" [style="dotted"];
		"langchain_core" -> "langchain_core._import_utils" [style="dotted"];
		"langchain_core" -> "langchain_core.exceptions" [style="dotted"];
		"langchain_core" -> "langchain_core.prompt_values" [style="dotted"];
		"langchain_core" -> "langchain_core.beta" [style="dotted"];
		"langchain_core" -> "langchain_core.tracers" [style="dotted"];
		"langchain_core" -> "langchain_core.utils" [style="dotted"];
		"langchain_core" -> "langchain_core.agents" [style="dotted"];
		"langchain_core" -> "langchain_core.outputs" [style="dotted"];
		"langchain_core" -> "langchain_core.load" [style="dotted"];
		"langchain_core" -> "langchain_core.documents" [style="dotted"];
		"langchain_core" -> "langchain_core.callbacks" [style="dotted"];
		"langchain_core" -> "langchain_core.caches" [style="dotted"];
		"langchain_core" -> "langchain_core.runnables" [style="dotted"];
		"langchain_core" -> "langchain_core.embeddings" [style="dotted"];
		"langchain_core" -> "langchain_core.structured_query" [style="dotted"];
		"langchain_core" -> "langchain_core.retrievers" [style="dotted"];
		"langchain_core" -> "langchain_core.memory" [style="dotted"];
		"langchain_core" -> "langchain_core.chat_history" [style="dotted"];
		"langchain_core" -> "langchain_core.stores" [style="dotted"];
		"langchain_core" -> "langchain_core.document_loaders" [style="dotted"];
		"langchain_core" -> "langchain_core.globals" [style="dotted"];
		"langchain_core" -> "langchain_core.chat_sessions" [style="dotted"];
		"langchain_core" -> "langchain_core.rate_limiters" [style="dotted"];
		"langchain_core" -> "langchain_core.env" [style="dotted"];
		"langchain_core" -> "langchain_core.output_parsers" [style="dotted"];
		"langchain_core" -> "langchain_core.example_selectors" [style="dotted"];
		"langchain_core" -> "langchain_core.indexing" [style="dotted"];
		"langchain_core" -> "langchain_core.vectorstores" [style="dotted"];
		"langchain_core" -> "langchain_core.prompts" [style="dotted"];
		"langchain_core" -> "langchain_core.tools" [style="dotted"];
		"langchain_core" -> "langchain_core.language_models" [style="dotted"];
	}
	subgraph "cluster_git" {
		label="git";
		"git" -> "git.exc" [style="dotted"];
		"git" -> "git.types" [style="dotted"];
		"git" -> "git.compat" [style="dotted"];
		"git" -> "git.config" [style="dotted"];
		"git" -> "git.objects" [style="dotted"];
		"git" -> "git.refs" [style="dotted"];
		"git" -> "git.diff" [style="dotted"];
		"git" -> "git.db" [style="dotted"];
		"git" -> "git.cmd" [style="dotted"];
		"git" -> "git.repo" [style="dotted"];
		"git" -> "git.remote" [style="dotted"];
		"git" -> "git.index" [style="dotted"];
		"git" -> "git.util" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.shortcuts" {
		label="prompt_toolkit.shortcuts";
		"prompt_toolkit.shortcuts" -> "prompt_toolkit.shortcuts.dialogs" [style="dotted"];
		"prompt_toolkit.shortcuts" -> "prompt_toolkit.shortcuts.progress_bar" [style="dotted"];
		"prompt_toolkit.shortcuts" -> "prompt_toolkit.shortcuts.prompt" [style="dotted"];
		"prompt_toolkit.shortcuts" -> "prompt_toolkit.shortcuts.utils" [style="dotted"];
	}
	subgraph "cluster_annotated_types" {
		label="annotated_types";
	}
	subgraph "cluster_litellm.llms.jina_ai.rerank" {
		label="litellm.llms.jina_ai.rerank";
		"litellm.llms.jina_ai.rerank" -> "litellm.llms.jina_ai.rerank.transformation" [style="dotted"];
	}
	subgraph "cluster_click" {
		label="click";
		"click" -> "click.types" [style="dotted"];
		"click" -> "click.core" [style="dotted"];
		"click" -> "click.decorators" [style="dotted"];
		"click" -> "click.exceptions" [style="dotted"];
		"click" -> "click.formatting" [style="dotted"];
		"click" -> "click.globals" [style="dotted"];
		"click" -> "click.parser" [style="dotted"];
		"click" -> "click.termui" [style="dotted"];
		"click" -> "click.utils" [style="dotted"];
		"click" -> "click.shell_completion" [style="dotted"];
		"click" -> "click._compat" [style="dotted"];
		"click" -> "click._winconsole" [style="dotted"];
		"click" -> "click._termui_impl" [style="dotted"];
		"click" -> "click._textwrap" [style="dotted"];
	}
	subgraph "cluster_openai.lib.streaming.chat" {
		label="openai.lib.streaming.chat";
		"openai.lib.streaming.chat" -> "openai.lib.streaming.chat._types" [style="dotted"];
		"openai.lib.streaming.chat" -> "openai.lib.streaming.chat._events" [style="dotted"];
		"openai.lib.streaming.chat" -> "openai.lib.streaming.chat._completions" [style="dotted"];
	}
	subgraph "cluster_pandas.core.array_algos" {
		label="pandas.core.array_algos";
		"pandas.core.array_algos" -> "pandas.core.array_algos.datetimelike_accumulations" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.masked_accumulations" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.masked_reductions" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.putmask" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.quantile" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.replace" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.transforms" [style="dotted"];
		"pandas.core.array_algos" -> "pandas.core.array_algos.take" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.polygon" {
		label="langchain_community.agent_toolkits.polygon";
		"langchain_community.agent_toolkits.polygon" -> "langchain_community.agent_toolkits.polygon.toolkit" [style="dotted"];
	}
	subgraph "cluster_black.resources" {
		label="black.resources";
	}
	subgraph "cluster_langchain_community.document_loaders" {
		label="langchain_community.document_loaders";
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.acreom" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.airbyte" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.airbyte_json" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.airtable" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.apify_dataset" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.arcgis_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.arxiv" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.assemblyai" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.astradb" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.async_html" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.athena" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.azlyrics" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.azure_ai_data" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.azure_blob_storage_container" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.azure_blob_storage_file" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.bibtex" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.bigquery" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.bilibili" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.blackboard" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.blob_loaders" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.blockchain" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.brave_search" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.browserbase" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.browserless" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.cassandra" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.chatgpt" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.chm" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.chromium" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.college_confidential" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.concurrent" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.confluence" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.conllu" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.couchbase" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.csv_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.cube_semantic" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.datadog_logs" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.dataframe" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.dedoc" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.diffbot" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.directory" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.discord" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.doc_intelligence" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.docugami" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.docusaurus" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.dropbox" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.duckdb_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.email" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.epub" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.etherscan" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.evernote" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.excel" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.facebook_chat" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.fauna" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.figma" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.firecrawl" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.gcs_directory" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.gcs_file" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.geodataframe" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.git" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.gitbook" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.github" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.glue_catalog" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.google_speech_to_text" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.googledrive" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.gutenberg" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.hn" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.html" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.html_bs" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.hugging_face_dataset" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.hugging_face_model" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.ifixit" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.image" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.image_captions" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.imsdb" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.iugu" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.joplin" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.json_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.kinetica_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.lakefs" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.larksuite" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.llmsherpa" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.markdown" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.mastodon" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.max_compute" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.mediawikidump" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.merge" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.mhtml" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.modern_treasury" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.mongodb" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.needle" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.news" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.notebook" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.notion" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.notiondb" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.obs_directory" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.obs_file" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.obsidian" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.odt" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.onedrive" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.onedrive_file" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.open_city_data" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.oracleadb_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.oracleai" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.org_mode" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.pdf" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.pebblo" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.polars_dataframe" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.powerpoint" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.psychic" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.pubmed" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.pyspark_dataframe" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.python" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.readthedocs" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.recursive_url_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.reddit" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.roam" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.rocksetdb" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.rss" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.rst" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.rtf" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.s3_directory" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.s3_file" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.scrapfly" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.scrapingant" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.sharepoint" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.sitemap" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.slack_directory" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.snowflake_loader" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.spider" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.spreedly" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.sql_database" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.srt" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.stripe" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.surrealdb" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.telegram" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.tencent_cos_directory" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.tencent_cos_file" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.tensorflow_datasets" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.text" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.tidb" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.tomarkdown" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.toml" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.trello" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.tsv" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.twitter" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.unstructured" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.url" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.url_playwright" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.url_selenium" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.vsdx" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.weather" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.web_base" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.whatsapp_chat" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.wikipedia" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.word_document" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.xml" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.xorbits" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.youtube" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.yuque" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.base" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.parsers" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.helpers" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.base_o365" [style="dotted"];
		"langchain_community.document_loaders" -> "langchain_community.document_loaders.generic" [style="dotted"];
	}
	subgraph "cluster_zstandard" {
		label="zstandard";
		"zstandard" -> "zstandard.backend_c" [style="dotted"];
		"zstandard" -> "zstandard.backend_cffi" [style="dotted"];
		"zstandard" -> "zstandard.backend_rust" [style="dotted"];
		"zstandard" -> "zstandard._cffi" [style="dotted"];
	}
	subgraph "cluster_tokenizers" {
		label="tokenizers";
		"tokenizers" -> "tokenizers.tokenizers" [style="dotted"];
		"tokenizers" -> "tokenizers.decoders" [style="dotted"];
		"tokenizers" -> "tokenizers.models" [style="dotted"];
		"tokenizers" -> "tokenizers.normalizers" [style="dotted"];
		"tokenizers" -> "tokenizers.pre_tokenizers" [style="dotted"];
		"tokenizers" -> "tokenizers.processors" [style="dotted"];
		"tokenizers" -> "tokenizers.trainers" [style="dotted"];
		"tokenizers" -> "tokenizers.implementations" [style="dotted"];
	}
	subgraph "cluster_ipykernel.gui" {
		label="ipykernel.gui";
		"ipykernel.gui" -> "ipykernel.gui.gtkembed" [style="dotted"];
		"ipykernel.gui" -> "ipykernel.gui.gtk3embed" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vllm" {
		label="litellm.llms.vllm";
		"litellm.llms.vllm" -> "litellm.llms.vllm.common_utils" [style="dotted"];
		"litellm.llms.vllm" -> "litellm.llms.vllm.completion" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.event" {
		label="sqlalchemy.event";
		"sqlalchemy.event" -> "sqlalchemy.event.legacy" [style="dotted"];
		"sqlalchemy.event" -> "sqlalchemy.event.api" [style="dotted"];
		"sqlalchemy.event" -> "sqlalchemy.event.attr" [style="dotted"];
		"sqlalchemy.event" -> "sqlalchemy.event.base" [style="dotted"];
		"sqlalchemy.event" -> "sqlalchemy.event.registry" [style="dotted"];
	}
	subgraph "cluster_httpx" {
		label="httpx";
		"httpx" -> "httpx.__version__" [style="dotted"];
		"httpx" -> "httpx._api" [style="dotted"];
		"httpx" -> "httpx._auth" [style="dotted"];
		"httpx" -> "httpx._client" [style="dotted"];
		"httpx" -> "httpx._config" [style="dotted"];
		"httpx" -> "httpx._content" [style="dotted"];
		"httpx" -> "httpx._exceptions" [style="dotted"];
		"httpx" -> "httpx._models" [style="dotted"];
		"httpx" -> "httpx._status_codes" [style="dotted"];
		"httpx" -> "httpx._types" [style="dotted"];
		"httpx" -> "httpx._urls" [style="dotted"];
		"httpx" -> "httpx._main" [style="dotted"];
		"httpx" -> "httpx._transports" [style="dotted"];
		"httpx" -> "httpx._urlparse" [style="dotted"];
		"httpx" -> "httpx._utils" [style="dotted"];
		"httpx" -> "httpx._decoders" [style="dotted"];
		"httpx" -> "httpx._multipart" [style="dotted"];
		"httpx" -> "httpx._compat" [style="dotted"];
	}
	subgraph "cluster_numpy.testing" {
		label="numpy.testing";
		"numpy.testing" -> "numpy.testing._private" [style="dotted"];
		"numpy.testing" -> "numpy.testing.overrides" [style="dotted"];
	}
	subgraph "cluster_jiter" {
		label="jiter";
		"jiter" -> "jiter.jiter" [style="dotted"];
		"jiter" -> "jiter.from_json" [style="dotted"];
	}
	subgraph "cluster_grpc.experimental.aio" {
		label="grpc.experimental.aio";
	}
	subgraph "cluster_litellm.integrations.arize" {
		label="litellm.integrations.arize";
		"litellm.integrations.arize" -> "litellm.integrations.arize._utils" [style="dotted"];
		"litellm.integrations.arize" -> "litellm.integrations.arize.arize_phoenix" [style="dotted"];
		"litellm.integrations.arize" -> "litellm.integrations.arize.opentelemetry" [style="dotted"];
		"litellm.integrations.arize" -> "litellm.integrations.arize.arize" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.snowflake.chat" {
		label="litellm.llms.snowflake.chat";
		"litellm.llms.snowflake.chat" -> "litellm.llms.snowflake.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.powerbi" {
		label="langchain_community.tools.powerbi";
		"langchain_community.tools.powerbi" -> "langchain_community.tools.powerbi.tool" [style="dotted"];
		"langchain_community.tools.powerbi" -> "langchain_community.tools.powerbi.prompt" [style="dotted"];
	}
	subgraph "cluster_docutils.writers.s5_html" {
		label="docutils.writers.s5_html";
	}
	subgraph "cluster_git.index" {
		label="git.index";
		"git.index" -> "git.index.base" [style="dotted"];
		"git.index" -> "git.index.typ" [style="dotted"];
		"git.index" -> "git.index.util" [style="dotted"];
		"git.index" -> "git.index.fun" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.qa_with_sources" {
		label="langchain.chains.qa_with_sources";
		"langchain.chains.qa_with_sources" -> "langchain.chains.qa_with_sources.map_reduce_prompt" [style="dotted"];
		"langchain.chains.qa_with_sources" -> "langchain.chains.qa_with_sources.refine_prompts" [style="dotted"];
		"langchain.chains.qa_with_sources" -> "langchain.chains.qa_with_sources.stuff_prompt" [style="dotted"];
		"langchain.chains.qa_with_sources" -> "langchain.chains.qa_with_sources.loading" [style="dotted"];
		"langchain.chains.qa_with_sources" -> "langchain.chains.qa_with_sources.retrieval" [style="dotted"];
		"langchain.chains.qa_with_sources" -> "langchain.chains.qa_with_sources.base" [style="dotted"];
		"langchain.chains.qa_with_sources" -> "langchain.chains.qa_with_sources.vector_db" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.openai_like" {
		label="litellm.llms.openai_like";
		"litellm.llms.openai_like" -> "litellm.llms.openai_like.common_utils" [style="dotted"];
		"litellm.llms.openai_like" -> "litellm.llms.openai_like.embedding" [style="dotted"];
		"litellm.llms.openai_like" -> "litellm.llms.openai_like.chat" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vertex_ai.vertex_ai_partner_models.ai21" {
		label="litellm.llms.vertex_ai.vertex_ai_partner_models.ai21";
		"litellm.llms.vertex_ai.vertex_ai_partner_models.ai21" -> "litellm.llms.vertex_ai.vertex_ai_partner_models.ai21.transformation" [style="dotted"];
	}
	subgraph "cluster_docutils.transforms" {
		label="docutils.transforms";
		"docutils.transforms" -> "docutils.transforms.universal" [style="dotted"];
		"docutils.transforms" -> "docutils.transforms.writer_aux" [style="dotted"];
		"docutils.transforms" -> "docutils.transforms.frontmatter" [style="dotted"];
		"docutils.transforms" -> "docutils.transforms.references" [style="dotted"];
		"docutils.transforms" -> "docutils.transforms.misc" [style="dotted"];
		"docutils.transforms" -> "docutils.transforms.parts" [style="dotted"];
	}
	subgraph "cluster_dateutil" {
		label="dateutil";
		"dateutil" -> "dateutil._version" [style="dotted"];
		"dateutil" -> "dateutil.relativedelta" [style="dotted"];
		"dateutil" -> "dateutil.tz" [style="dotted"];
		"dateutil" -> "dateutil.easter" [style="dotted"];
		"dateutil" -> "dateutil.rrule" [style="dotted"];
		"dateutil" -> "dateutil._common" [style="dotted"];
		"dateutil" -> "dateutil.parser" [style="dotted"];
		"dateutil" -> "dateutil.zoneinfo" [style="dotted"];
	}
	subgraph "cluster_altair" {
		label="altair";
		"altair" -> "altair.vegalite" [style="dotted"];
		"altair" -> "altair.Parameter" [style="dotted"];
		"altair" -> "altair.SchemaBase" [style="dotted"];
		"altair" -> "altair.theme" [style="dotted"];
		"altair" -> "altair.data_transformers" [style="dotted"];
		"altair" -> "altair.vegalite_compilers" [style="dotted"];
		"altair" -> "altair.renderers" [style="dotted"];
		"altair" -> "altair.Chart" [style="dotted"];
		"altair" -> "altair.ConcatChart" [style="dotted"];
		"altair" -> "altair.ConcatSpecGenericSpec" [style="dotted"];
		"altair" -> "altair.FacetChart" [style="dotted"];
		"altair" -> "altair.FacetedUnitSpec" [style="dotted"];
		"altair" -> "altair.FacetSpec" [style="dotted"];
		"altair" -> "altair.HConcatChart" [style="dotted"];
		"altair" -> "altair.HConcatSpecGenericSpec" [style="dotted"];
		"altair" -> "altair.LayerChart" [style="dotted"];
		"altair" -> "altair.LayerSpec" [style="dotted"];
		"altair" -> "altair.NonNormalizedSpec" [style="dotted"];
		"altair" -> "altair.TopLevelConcatSpec" [style="dotted"];
		"altair" -> "altair.TopLevelFacetSpec" [style="dotted"];
		"altair" -> "altair.TopLevelHConcatSpec" [style="dotted"];
		"altair" -> "altair.TopLevelLayerSpec" [style="dotted"];
		"altair" -> "altair.TopLevelUnitSpec" [style="dotted"];
		"altair" -> "altair.TopLevelVConcatSpec" [style="dotted"];
		"altair" -> "altair.UnitSpec" [style="dotted"];
		"altair" -> "altair.UnitSpecWithFrame" [style="dotted"];
		"altair" -> "altair.VConcatChart" [style="dotted"];
		"altair" -> "altair.VConcatSpecGenericSpec" [style="dotted"];
		"altair" -> "altair.jupyter" [style="dotted"];
		"altair" -> "altair.expr" [style="dotted"];
		"altair" -> "altair.utils" [style="dotted"];
		"altair" -> "altair.typing" [style="dotted"];
		"altair" -> "altair._magics" [style="dotted"];
	}
	subgraph "cluster_streamlit.runtime.scriptrunner_utils" {
		label="streamlit.runtime.scriptrunner_utils";
		"streamlit.runtime.scriptrunner_utils" -> "streamlit.runtime.scriptrunner_utils.script_run_context" [style="dotted"];
		"streamlit.runtime.scriptrunner_utils" -> "streamlit.runtime.scriptrunner_utils.script_requests" [style="dotted"];
		"streamlit.runtime.scriptrunner_utils" -> "streamlit.runtime.scriptrunner_utils.exceptions" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.retriever_service" {
		label="google.ai.generativelanguage_v1beta.services.retriever_service";
		"google.ai.generativelanguage_v1beta.services.retriever_service" -> "google.ai.generativelanguage_v1beta.services.retriever_service.pagers" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.retriever_service" -> "google.ai.generativelanguage_v1beta.services.retriever_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.retriever_service" -> "google.ai.generativelanguage_v1beta.services.retriever_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.retriever_service" -> "google.ai.generativelanguage_v1beta.services.retriever_service.transports" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.perplexity" {
		label="litellm.llms.perplexity";
		"litellm.llms.perplexity" -> "litellm.llms.perplexity.chat" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.completion" {
		label="prompt_toolkit.completion";
		"prompt_toolkit.completion" -> "prompt_toolkit.completion.base" [style="dotted"];
		"prompt_toolkit.completion" -> "prompt_toolkit.completion.deduplicate" [style="dotted"];
		"prompt_toolkit.completion" -> "prompt_toolkit.completion.filesystem" [style="dotted"];
		"prompt_toolkit.completion" -> "prompt_toolkit.completion.fuzzy_completer" [style="dotted"];
		"prompt_toolkit.completion" -> "prompt_toolkit.completion.nested" [style="dotted"];
		"prompt_toolkit.completion" -> "prompt_toolkit.completion.word_completer" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.openai.fine_tuning" {
		label="litellm.llms.openai.fine_tuning";
		"litellm.llms.openai.fine_tuning" -> "litellm.llms.openai.fine_tuning.handler" [style="dotted"];
	}
	subgraph "cluster_langchain_core._api" {
		label="langchain_core._api";
		"langchain_core._api" -> "langchain_core._api.beta_decorator" [style="dotted"];
		"langchain_core._api" -> "langchain_core._api.deprecation" [style="dotted"];
		"langchain_core._api" -> "langchain_core._api.path" [style="dotted"];
		"langchain_core._api" -> "langchain_core._api.internal" [style="dotted"];
	}
	subgraph "cluster_pandas.core.dtypes" {
		label="pandas.core.dtypes";
		"pandas.core.dtypes" -> "pandas.core.dtypes.dtypes" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.common" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.missing" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.generic" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.cast" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.inference" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.concat" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.astype" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.base" [style="dotted"];
		"pandas.core.dtypes" -> "pandas.core.dtypes.api" [style="dotted"];
	}
	subgraph "cluster_aiohttp" {
		label="aiohttp";
		"aiohttp" -> "aiohttp.hdrs" [style="dotted"];
		"aiohttp" -> "aiohttp.http" [style="dotted"];
		"aiohttp" -> "aiohttp.multipart" [style="dotted"];
		"aiohttp" -> "aiohttp.client" [style="dotted"];
		"aiohttp" -> "aiohttp.cookiejar" [style="dotted"];
		"aiohttp" -> "aiohttp.formdata" [style="dotted"];
		"aiohttp" -> "aiohttp.helpers" [style="dotted"];
		"aiohttp" -> "aiohttp.payload" [style="dotted"];
		"aiohttp" -> "aiohttp.payload_streamer" [style="dotted"];
		"aiohttp" -> "aiohttp.resolver" [style="dotted"];
		"aiohttp" -> "aiohttp.streams" [style="dotted"];
		"aiohttp" -> "aiohttp.tracing" [style="dotted"];
		"aiohttp" -> "aiohttp.worker" [style="dotted"];
		"aiohttp" -> "aiohttp.web" [style="dotted"];
		"aiohttp" -> "aiohttp.web_app" [style="dotted"];
		"aiohttp" -> "aiohttp.web_log" [style="dotted"];
		"aiohttp" -> "aiohttp.abc" [style="dotted"];
		"aiohttp" -> "aiohttp.web_request" [style="dotted"];
		"aiohttp" -> "aiohttp.web_response" [style="dotted"];
		"aiohttp" -> "aiohttp.compression_utils" [style="dotted"];
		"aiohttp" -> "aiohttp.typedefs" [style="dotted"];
		"aiohttp" -> "aiohttp.http_parser" [style="dotted"];
		"aiohttp" -> "aiohttp.http_writer" [style="dotted"];
		"aiohttp" -> "aiohttp.web_exceptions" [style="dotted"];
		"aiohttp" -> "aiohttp.web_protocol" [style="dotted"];
		"aiohttp" -> "aiohttp.web_urldispatcher" [style="dotted"];
		"aiohttp" -> "aiohttp.web_fileresponse" [style="dotted"];
		"aiohttp" -> "aiohttp.web_routedef" [style="dotted"];
		"aiohttp" -> "aiohttp.base_protocol" [style="dotted"];
		"aiohttp" -> "aiohttp.http_exceptions" [style="dotted"];
		"aiohttp" -> "aiohttp.log" [style="dotted"];
		"aiohttp" -> "aiohttp.tcp_helpers" [style="dotted"];
		"aiohttp" -> "aiohttp.web_server" [style="dotted"];
		"aiohttp" -> "aiohttp.client_exceptions" [style="dotted"];
		"aiohttp" -> "aiohttp.client_reqrep" [style="dotted"];
		"aiohttp" -> "aiohttp.connector" [style="dotted"];
		"aiohttp" -> "aiohttp.client_proto" [style="dotted"];
		"aiohttp" -> "aiohttp._http_writer" [style="dotted"];
		"aiohttp" -> "aiohttp._http_parser" [style="dotted"];
		"aiohttp" -> "aiohttp.web_middlewares" [style="dotted"];
		"aiohttp" -> "aiohttp.web_runner" [style="dotted"];
		"aiohttp" -> "aiohttp.web_ws" [style="dotted"];
		"aiohttp" -> "aiohttp.http_websocket" [style="dotted"];
		"aiohttp" -> "aiohttp._websocket" [style="dotted"];
		"aiohttp" -> "aiohttp.client_ws" [style="dotted"];
	}
	subgraph "cluster_nbformat.corpus" {
		label="nbformat.corpus";
		"nbformat.corpus" -> "nbformat.corpus.words" [style="dotted"];
	}
	subgraph "cluster_xml" {
		label="xml";
		"xml" -> "xml.etree" [style="dotted"];
		"xml" -> "xml.sax" [style="dotted"];
		"xml" -> "xml.parsers" [style="dotted"];
		"xml" -> "xml.dom" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.groq" {
		label="litellm.llms.groq";
		"litellm.llms.groq" -> "litellm.llms.groq.chat" [style="dotted"];
		"litellm.llms.groq" -> "litellm.llms.groq.stt" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.prediction_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.prediction_service.transports";
		"google.ai.generativelanguage_v1beta.services.prediction_service.transports" -> "google.ai.generativelanguage_v1beta.services.prediction_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.prediction_service.transports" -> "google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.prediction_service.transports" -> "google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.prediction_service.transports" -> "google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.prediction_service.transports" -> "google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.triton.completion" {
		label="litellm.llms.triton.completion";
		"litellm.llms.triton.completion" -> "litellm.llms.triton.completion.transformation" [style="dotted"];
	}
	subgraph "cluster_narwhals._duckdb" {
		label="narwhals._duckdb";
		"narwhals._duckdb" -> "narwhals._duckdb.dataframe" [style="dotted"];
		"narwhals._duckdb" -> "narwhals._duckdb.utils" [style="dotted"];
		"narwhals._duckdb" -> "narwhals._duckdb.expr" [style="dotted"];
		"narwhals._duckdb" -> "narwhals._duckdb.group_by" [style="dotted"];
		"narwhals._duckdb" -> "narwhals._duckdb.namespace" [style="dotted"];
		"narwhals._duckdb" -> "narwhals._duckdb.series" [style="dotted"];
		"narwhals._duckdb" -> "narwhals._duckdb.selectors" [style="dotted"];
		"narwhals._duckdb" -> "narwhals._duckdb.expr_dt" [style="dotted"];
		"narwhals._duckdb" -> "narwhals._duckdb.expr_list" [style="dotted"];
		"narwhals._duckdb" -> "narwhals._duckdb.expr_str" [style="dotted"];
		"narwhals._duckdb" -> "narwhals._duckdb.expr_struct" [style="dotted"];
		"narwhals._duckdb" -> "narwhals._duckdb.typing" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.structured_chat" {
		label="langchain.agents.structured_chat";
		"langchain.agents.structured_chat" -> "langchain.agents.structured_chat.base" [style="dotted"];
		"langchain.agents.structured_chat" -> "langchain.agents.structured_chat.output_parser" [style="dotted"];
		"langchain.agents.structured_chat" -> "langchain.agents.structured_chat.prompt" [style="dotted"];
	}
	subgraph "cluster_litellm.rerank_api" {
		label="litellm.rerank_api";
		"litellm.rerank_api" -> "litellm.rerank_api.main" [style="dotted"];
		"litellm.rerank_api" -> "litellm.rerank_api.rerank_utils" [style="dotted"];
	}
	subgraph "cluster_pandas.core._numba" {
		label="pandas.core._numba";
		"pandas.core._numba" -> "pandas.core._numba.executor" [style="dotted"];
		"pandas.core._numba" -> "pandas.core._numba.kernels" [style="dotted"];
		"pandas.core._numba" -> "pandas.core._numba.extensions" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.dialects.postgresql" {
		label="sqlalchemy.dialects.postgresql";
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.array" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.json" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.ranges" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.pg_catalog" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.asyncpg" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.base" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.pg8000" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.psycopg" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.psycopg2" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.psycopg2cffi" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.dml" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.ext" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.hstore" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.named_types" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.types" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql.operators" [style="dotted"];
		"sqlalchemy.dialects.postgresql" -> "sqlalchemy.dialects.postgresql._psycopg_common" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.fireworks_ai" {
		label="litellm.llms.fireworks_ai";
		"litellm.llms.fireworks_ai" -> "litellm.llms.fireworks_ai.cost_calculator" [style="dotted"];
		"litellm.llms.fireworks_ai" -> "litellm.llms.fireworks_ai.embed" [style="dotted"];
		"litellm.llms.fireworks_ai" -> "litellm.llms.fireworks_ai.common_utils" [style="dotted"];
		"litellm.llms.fireworks_ai" -> "litellm.llms.fireworks_ai.audio_transcription" [style="dotted"];
		"litellm.llms.fireworks_ai" -> "litellm.llms.fireworks_ai.completion" [style="dotted"];
		"litellm.llms.fireworks_ai" -> "litellm.llms.fireworks_ai.chat" [style="dotted"];
	}
	subgraph "cluster_tokenizers.decoders" {
		label="tokenizers.decoders";
	}
	subgraph "cluster_litellm.types.proxy.guardrails.guardrail_hooks" {
		label="litellm.types.proxy.guardrails.guardrail_hooks";
		"litellm.types.proxy.guardrails.guardrail_hooks" -> "litellm.types.proxy.guardrails.guardrail_hooks.presidio" [style="dotted"];
		"litellm.types.proxy.guardrails.guardrail_hooks" -> "litellm.types.proxy.guardrails.guardrail_hooks.lakera_ai_v2" [style="dotted"];
		"litellm.types.proxy.guardrails.guardrail_hooks" -> "litellm.types.proxy.guardrails.guardrail_hooks.bedrock_guardrails" [style="dotted"];
	}
	subgraph "cluster_pytz" {
		label="pytz";
		"pytz" -> "pytz.exceptions" [style="dotted"];
		"pytz" -> "pytz.lazy" [style="dotted"];
		"pytz" -> "pytz.tzinfo" [style="dotted"];
		"pytz" -> "pytz.tzfile" [style="dotted"];
	}
	subgraph "cluster_litellm.types.proxy.management_endpoints" {
		label="litellm.types.proxy.management_endpoints";
		"litellm.types.proxy.management_endpoints" -> "litellm.types.proxy.management_endpoints.ui_sso" [style="dotted"];
		"litellm.types.proxy.management_endpoints" -> "litellm.types.proxy.management_endpoints.common_daily_activity" [style="dotted"];
		"litellm.types.proxy.management_endpoints" -> "litellm.types.proxy.management_endpoints.team_endpoints" [style="dotted"];
		"litellm.types.proxy.management_endpoints" -> "litellm.types.proxy.management_endpoints.scim_v2" [style="dotted"];
		"litellm.types.proxy.management_endpoints" -> "litellm.types.proxy.management_endpoints.internal_user_endpoints" [style="dotted"];
	}
	subgraph "cluster_litellm.types.proxy" {
		label="litellm.types.proxy";
		"litellm.types.proxy" -> "litellm.types.proxy.guardrails" [style="dotted"];
		"litellm.types.proxy" -> "litellm.types.proxy.management_endpoints" [style="dotted"];
	}
	subgraph "cluster_narwhals._polars" {
		label="narwhals._polars";
		"narwhals._polars" -> "narwhals._polars.dataframe" [style="dotted"];
		"narwhals._polars" -> "narwhals._polars.namespace" [style="dotted"];
		"narwhals._polars" -> "narwhals._polars.series" [style="dotted"];
		"narwhals._polars" -> "narwhals._polars.utils" [style="dotted"];
		"narwhals._polars" -> "narwhals._polars.expr" [style="dotted"];
		"narwhals._polars" -> "narwhals._polars.group_by" [style="dotted"];
		"narwhals._polars" -> "narwhals._polars.typing" [style="dotted"];
	}
	subgraph "cluster_zoneinfo" {
		label="zoneinfo";
		"zoneinfo" -> "zoneinfo._tzpath" [style="dotted"];
		"zoneinfo" -> "zoneinfo._common" [style="dotted"];
		"zoneinfo" -> "zoneinfo._zoneinfo" [style="dotted"];
	}
	subgraph "cluster_uri_template" {
		label="uri_template";
		"uri_template" -> "uri_template.expansions" [style="dotted"];
		"uri_template" -> "uri_template.uritemplate" [style="dotted"];
		"uri_template" -> "uri_template.variable" [style="dotted"];
		"uri_template" -> "uri_template.charset" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.sleep" {
		label="langchain_community.tools.sleep";
		"langchain_community.tools.sleep" -> "langchain_community.tools.sleep.tool" [style="dotted"];
	}
	subgraph "cluster_kivy.modules" {
		label="kivy.modules";
	}
	subgraph "cluster_litellm.llms.aiohttp_openai.chat" {
		label="litellm.llms.aiohttp_openai.chat";
		"litellm.llms.aiohttp_openai.chat" -> "litellm.llms.aiohttp_openai.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_streamlit.elements" {
		label="streamlit.elements";
		"streamlit.elements" -> "streamlit.elements.dialog_decorator" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.spinner" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.exception" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.lib" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.alert" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.arrow" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.balloons" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.bokeh_chart" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.code" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.deck_gl_json_chart" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.doc_string" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.empty" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.form" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.graphviz_chart" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.heading" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.html" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.iframe" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.image" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.json" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.layouts" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.map" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.markdown" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.media" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.metric" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.plotly_chart" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.progress" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.pyplot" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.snow" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.text" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.toast" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.vega_charts" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.write" [style="dotted"];
		"streamlit.elements" -> "streamlit.elements.widgets" [style="dotted"];
	}
	subgraph "cluster_docutils.parsers.rst" {
		label="docutils.parsers.rst";
		"docutils.parsers.rst" -> "docutils.parsers.rst.directives" [style="dotted"];
		"docutils.parsers.rst" -> "docutils.parsers.rst.roles" [style="dotted"];
		"docutils.parsers.rst" -> "docutils.parsers.rst.tableparser" [style="dotted"];
		"docutils.parsers.rst" -> "docutils.parsers.rst.states" [style="dotted"];
		"docutils.parsers.rst" -> "docutils.parsers.rst.languages" [style="dotted"];
	}
	subgraph "cluster_altair.vegalite.v5.schema" {
		label="altair.vegalite.v5.schema";
		"altair.vegalite.v5.schema" -> "altair.vegalite.v5.schema.core" [style="dotted"];
		"altair.vegalite.v5.schema" -> "altair.vegalite.v5.schema.channels" [style="dotted"];
		"altair.vegalite.v5.schema" -> "altair.vegalite.v5.schema.mixins" [style="dotted"];
		"altair.vegalite.v5.schema" -> "altair.vegalite.v5.schema._typing" [style="dotted"];
		"altair.vegalite.v5.schema" -> "altair.vegalite.v5.schema._config" [style="dotted"];
	}
	subgraph "cluster_openai._utils" {
		label="openai._utils";
		"openai._utils" -> "openai._utils._logs" [style="dotted"];
		"openai._utils" -> "openai._utils._sync" [style="dotted"];
		"openai._utils" -> "openai._utils._proxy" [style="dotted"];
		"openai._utils" -> "openai._utils._utils" [style="dotted"];
		"openai._utils" -> "openai._utils._typing" [style="dotted"];
		"openai._utils" -> "openai._utils._streams" [style="dotted"];
		"openai._utils" -> "openai._utils._transform" [style="dotted"];
		"openai._utils" -> "openai._utils._reflection" [style="dotted"];
	}
	subgraph "cluster_platformdirs" {
		label="platformdirs";
		"platformdirs" -> "platformdirs.api" [style="dotted"];
		"platformdirs" -> "platformdirs.version" [style="dotted"];
		"platformdirs" -> "platformdirs.windows" [style="dotted"];
		"platformdirs" -> "platformdirs.macos" [style="dotted"];
		"platformdirs" -> "platformdirs.unix" [style="dotted"];
		"platformdirs" -> "platformdirs.android" [style="dotted"];
	}
	subgraph "cluster_pandas.io.excel" {
		label="pandas.io.excel";
		"pandas.io.excel" -> "pandas.io.excel._base" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._odswriter" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._openpyxl" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._util" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._xlsxwriter" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._calamine" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._odfreader" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._pyxlsb" [style="dotted"];
		"pandas.io.excel" -> "pandas.io.excel._xlrd" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.management_endpoints.scim" {
		label="litellm.proxy.management_endpoints.scim";
		"litellm.proxy.management_endpoints.scim" -> "litellm.proxy.management_endpoints.scim.scim_v2" [style="dotted"];
		"litellm.proxy.management_endpoints.scim" -> "litellm.proxy.management_endpoints.scim.scim_transformations" [style="dotted"];
	}
	subgraph "cluster_google.rpc" {
		label="google.rpc";
		"google.rpc" -> "google.rpc.error_details_pb2" [style="dotted"];
		"google.rpc" -> "google.rpc.status_pb2" [style="dotted"];
		"google.rpc" -> "google.rpc.code_pb2" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.azure_cognitive_services" {
		label="langchain_community.tools.azure_cognitive_services";
		"langchain_community.tools.azure_cognitive_services" -> "langchain_community.tools.azure_cognitive_services.form_recognizer" [style="dotted"];
		"langchain_community.tools.azure_cognitive_services" -> "langchain_community.tools.azure_cognitive_services.image_analysis" [style="dotted"];
		"langchain_community.tools.azure_cognitive_services" -> "langchain_community.tools.azure_cognitive_services.speech2text" [style="dotted"];
		"langchain_community.tools.azure_cognitive_services" -> "langchain_community.tools.azure_cognitive_services.text2speech" [style="dotted"];
		"langchain_community.tools.azure_cognitive_services" -> "langchain_community.tools.azure_cognitive_services.text_analytics_health" [style="dotted"];
		"langchain_community.tools.azure_cognitive_services" -> "langchain_community.tools.azure_cognitive_services.utils" [style="dotted"];
	}
	subgraph "cluster_langchain_core.utils" {
		label="langchain_core.utils";
		"langchain_core.utils" -> "langchain_core.utils.image" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.aiter" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.env" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.formatting" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.input" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.iter" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.loading" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.pydantic" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.strings" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.utils" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.mustache" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils._merge" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.function_calling" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.json" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.interactive_env" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.json_schema" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.html" [style="dotted"];
		"langchain_core.utils" -> "langchain_core.utils.usage" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.pool" {
		label="sqlalchemy.pool";
		"sqlalchemy.pool" -> "sqlalchemy.pool.events" [style="dotted"];
		"sqlalchemy.pool" -> "sqlalchemy.pool.base" [style="dotted"];
		"sqlalchemy.pool" -> "sqlalchemy.pool.impl" [style="dotted"];
	}
	subgraph "cluster_langchain_core.documents" {
		label="langchain_core.documents";
		"langchain_core.documents" -> "langchain_core.documents.base" [style="dotted"];
		"langchain_core.documents" -> "langchain_core.documents.compressor" [style="dotted"];
		"langchain_core.documents" -> "langchain_core.documents.transformers" [style="dotted"];
	}
	subgraph "cluster_pandas.plotting" {
		label="pandas.plotting";
		"pandas.plotting" -> "pandas.plotting._core" [style="dotted"];
		"pandas.plotting" -> "pandas.plotting._misc" [style="dotted"];
	}
	subgraph "cluster_openai.resources.vector_stores" {
		label="openai.resources.vector_stores";
		"openai.resources.vector_stores" -> "openai.resources.vector_stores.files" [style="dotted"];
		"openai.resources.vector_stores" -> "openai.resources.vector_stores.file_batches" [style="dotted"];
		"openai.resources.vector_stores" -> "openai.resources.vector_stores.vector_stores" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.spark" {
		label="datasets.packaged_modules.spark";
		"datasets.packaged_modules.spark" -> "datasets.packaged_modules.spark.spark" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.fine_tuning_endpoints" {
		label="litellm.proxy.fine_tuning_endpoints";
		"litellm.proxy.fine_tuning_endpoints" -> "litellm.proxy.fine_tuning_endpoints.endpoints" [style="dotted"];
	}
	subgraph "cluster_datasets.utils" {
		label="datasets.utils";
		"datasets.utils" -> "datasets.utils.tqdm" [style="dotted"];
		"datasets.utils" -> "datasets.utils.experimental" [style="dotted"];
		"datasets.utils" -> "datasets.utils.info_utils" [style="dotted"];
		"datasets.utils" -> "datasets.utils.logging" [style="dotted"];
		"datasets.utils" -> "datasets.utils.version" [style="dotted"];
		"datasets.utils" -> "datasets.utils._dataset_viewer" [style="dotted"];
		"datasets.utils" -> "datasets.utils.file_utils" [style="dotted"];
		"datasets.utils" -> "datasets.utils._filelock" [style="dotted"];
		"datasets.utils" -> "datasets.utils.extract" [style="dotted"];
		"datasets.utils" -> "datasets.utils.track" [style="dotted"];
		"datasets.utils" -> "datasets.utils.py_utils" [style="dotted"];
		"datasets.utils" -> "datasets.utils._dill" [style="dotted"];
		"datasets.utils" -> "datasets.utils.hub" [style="dotted"];
		"datasets.utils" -> "datasets.utils.metadata" [style="dotted"];
		"datasets.utils" -> "datasets.utils.typing" [style="dotted"];
		"datasets.utils" -> "datasets.utils.sharding" [style="dotted"];
		"datasets.utils" -> "datasets.utils.doc_utils" [style="dotted"];
		"datasets.utils" -> "datasets.utils.patching" [style="dotted"];
		"datasets.utils" -> "datasets.utils.stratify" [style="dotted"];
		"datasets.utils" -> "datasets.utils.tf_utils" [style="dotted"];
	}
	subgraph "cluster_openai.resources" {
		label="openai.resources";
		"openai.resources" -> "openai.resources.beta" [style="dotted"];
		"openai.resources" -> "openai.resources.chat" [style="dotted"];
		"openai.resources" -> "openai.resources.audio" [style="dotted"];
		"openai.resources" -> "openai.resources.evals" [style="dotted"];
		"openai.resources" -> "openai.resources.files" [style="dotted"];
		"openai.resources" -> "openai.resources.images" [style="dotted"];
		"openai.resources" -> "openai.resources.models" [style="dotted"];
		"openai.resources" -> "openai.resources.batches" [style="dotted"];
		"openai.resources" -> "openai.resources.uploads" [style="dotted"];
		"openai.resources" -> "openai.resources.responses" [style="dotted"];
		"openai.resources" -> "openai.resources.embeddings" [style="dotted"];
		"openai.resources" -> "openai.resources.completions" [style="dotted"];
		"openai.resources" -> "openai.resources.fine_tuning" [style="dotted"];
		"openai.resources" -> "openai.resources.moderations" [style="dotted"];
		"openai.resources" -> "openai.resources.vector_stores" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.hyde" {
		label="langchain.chains.hyde";
		"langchain.chains.hyde" -> "langchain.chains.hyde.base" [style="dotted"];
		"langchain.chains.hyde" -> "langchain.chains.hyde.prompts" [style="dotted"];
	}
	subgraph "cluster_tqdm.contrib" {
		label="tqdm.contrib";
		"tqdm.contrib" -> "tqdm.contrib.concurrent" [style="dotted"];
	}
	subgraph "cluster_docutils" {
		label="docutils";
		"docutils" -> "docutils.io" [style="dotted"];
		"docutils" -> "docutils.languages" [style="dotted"];
		"docutils" -> "docutils.nodes" [style="dotted"];
		"docutils" -> "docutils.frontend" [style="dotted"];
		"docutils" -> "docutils.utils" [style="dotted"];
		"docutils" -> "docutils.writers" [style="dotted"];
		"docutils" -> "docutils.transforms" [style="dotted"];
		"docutils" -> "docutils.statemachine" [style="dotted"];
		"docutils" -> "docutils.readers" [style="dotted"];
		"docutils" -> "docutils.parsers" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.openai.transcriptions" {
		label="litellm.llms.openai.transcriptions";
		"litellm.llms.openai.transcriptions" -> "litellm.llms.openai.transcriptions.handler" [style="dotted"];
		"litellm.llms.openai.transcriptions" -> "litellm.llms.openai.transcriptions.whisper_transformation" [style="dotted"];
		"litellm.llms.openai.transcriptions" -> "litellm.llms.openai.transcriptions.gpt_transformation" [style="dotted"];
	}
	subgraph "cluster_typing_inspection" {
		label="typing_inspection";
		"typing_inspection" -> "typing_inspection.typing_objects" [style="dotted"];
		"typing_inspection" -> "typing_inspection.introspection" [style="dotted"];
	}
	subgraph "cluster_openai.resources.fine_tuning" {
		label="openai.resources.fine_tuning";
		"openai.resources.fine_tuning" -> "openai.resources.fine_tuning.jobs" [style="dotted"];
		"openai.resources.fine_tuning" -> "openai.resources.fine_tuning.checkpoints" [style="dotted"];
		"openai.resources.fine_tuning" -> "openai.resources.fine_tuning.fine_tuning" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.petals" {
		label="litellm.llms.petals";
		"litellm.llms.petals" -> "litellm.llms.petals.common_utils" [style="dotted"];
		"litellm.llms.petals" -> "litellm.llms.petals.completion" [style="dotted"];
	}
	subgraph "cluster_litellm.types.responses" {
		label="litellm.types.responses";
		"litellm.types.responses" -> "litellm.types.responses.main" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.sambanova" {
		label="litellm.llms.sambanova";
		"litellm.llms.sambanova" -> "litellm.llms.sambanova.chat" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules" {
		label="datasets.packaged_modules";
		"datasets.packaged_modules" -> "datasets.packaged_modules.arrow" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.audiofolder" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.cache" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.csv" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.imagefolder" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.json" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.pandas" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.parquet" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.pdffolder" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.sql" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.text" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.videofolder" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.webdataset" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.xml" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.folder_based_builder" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.spark" [style="dotted"];
		"datasets.packaged_modules" -> "datasets.packaged_modules.generator" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.agent_toolkits.conversational_retrieval" {
		label="langchain.agents.agent_toolkits.conversational_retrieval";
		"langchain.agents.agent_toolkits.conversational_retrieval" -> "langchain.agents.agent_toolkits.conversational_retrieval.openai_functions" [style="dotted"];
	}
	subgraph "cluster_langchain.smith" {
		label="langchain.smith";
		"langchain.smith" -> "langchain.smith.evaluation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.bedrock.chat.invoke_transformations" {
		label="litellm.llms.bedrock.chat.invoke_transformations";
		"litellm.llms.bedrock.chat.invoke_transformations" -> "litellm.llms.bedrock.chat.invoke_transformations.amazon_deepseek_transformation" [style="dotted"];
		"litellm.llms.bedrock.chat.invoke_transformations" -> "litellm.llms.bedrock.chat.invoke_transformations.base_invoke_transformation" [style="dotted"];
		"litellm.llms.bedrock.chat.invoke_transformations" -> "litellm.llms.bedrock.chat.invoke_transformations.amazon_llama_transformation" [style="dotted"];
		"litellm.llms.bedrock.chat.invoke_transformations" -> "litellm.llms.bedrock.chat.invoke_transformations.amazon_ai21_transformation" [style="dotted"];
		"litellm.llms.bedrock.chat.invoke_transformations" -> "litellm.llms.bedrock.chat.invoke_transformations.amazon_nova_transformation" [style="dotted"];
		"litellm.llms.bedrock.chat.invoke_transformations" -> "litellm.llms.bedrock.chat.invoke_transformations.anthropic_claude2_transformation" [style="dotted"];
		"litellm.llms.bedrock.chat.invoke_transformations" -> "litellm.llms.bedrock.chat.invoke_transformations.anthropic_claude3_transformation" [style="dotted"];
		"litellm.llms.bedrock.chat.invoke_transformations" -> "litellm.llms.bedrock.chat.invoke_transformations.amazon_cohere_transformation" [style="dotted"];
		"litellm.llms.bedrock.chat.invoke_transformations" -> "litellm.llms.bedrock.chat.invoke_transformations.amazon_mistral_transformation" [style="dotted"];
		"litellm.llms.bedrock.chat.invoke_transformations" -> "litellm.llms.bedrock.chat.invoke_transformations.amazon_titan_transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.triton" {
		label="litellm.llms.triton";
		"litellm.llms.triton" -> "litellm.llms.triton.common_utils" [style="dotted"];
		"litellm.llms.triton" -> "litellm.llms.triton.embedding" [style="dotted"];
		"litellm.llms.triton" -> "litellm.llms.triton.completion" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy" {
		label="sqlalchemy";
		"sqlalchemy" -> "sqlalchemy.util" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.exc" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.event" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.log" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.pool" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.dialects" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.future" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.schema" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.orm" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.engine" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.inspection" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.sql" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.types" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.cyextension" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.ext" [style="dotted"];
		"sqlalchemy" -> "sqlalchemy.connectors" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage" {
		label="google.ai.generativelanguage";
		"google.ai.generativelanguage" -> "google.ai.generativelanguage.gapic_version" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.api.openapi" {
		label="langchain.chains.api.openapi";
		"langchain.chains.api.openapi" -> "langchain.chains.api.openapi.requests_chain" [style="dotted"];
		"langchain.chains.api.openapi" -> "langchain.chains.api.openapi.response_chain" [style="dotted"];
		"langchain.chains.api.openapi" -> "langchain.chains.api.openapi.prompts" [style="dotted"];
	}
	subgraph "cluster_openai.resources.responses" {
		label="openai.resources.responses";
		"openai.resources.responses" -> "openai.resources.responses.responses" [style="dotted"];
		"openai.resources.responses" -> "openai.resources.responses.input_items" [style="dotted"];
	}
	subgraph "cluster_pyasn1" {
		label="pyasn1";
		"pyasn1" -> "pyasn1.error" [style="dotted"];
		"pyasn1" -> "pyasn1.debug" [style="dotted"];
		"pyasn1" -> "pyasn1.compat" [style="dotted"];
		"pyasn1" -> "pyasn1.codec" [style="dotted"];
		"pyasn1" -> "pyasn1.type" [style="dotted"];
	}
	subgraph "cluster_pydeck.widget" {
		label="pydeck.widget";
		"pydeck.widget" -> "pydeck.widget.widget" [style="dotted"];
		"pydeck.widget" -> "pydeck.widget._frontend" [style="dotted"];
		"pydeck.widget" -> "pydeck.widget.debounce" [style="dotted"];
	}
	subgraph "cluster_requests" {
		label="requests";
		"requests" -> "requests.exceptions" [style="dotted"];
		"requests" -> "requests.packages" [style="dotted"];
		"requests" -> "requests.certs" [style="dotted"];
		"requests" -> "requests.utils" [style="dotted"];
		"requests" -> "requests.__version__" [style="dotted"];
		"requests" -> "requests.sessions" [style="dotted"];
		"requests" -> "requests.api" [style="dotted"];
		"requests" -> "requests.models" [style="dotted"];
		"requests" -> "requests.status_codes" [style="dotted"];
		"requests" -> "requests.structures" [style="dotted"];
		"requests" -> "requests.compat" [style="dotted"];
		"requests" -> "requests._internal_utils" [style="dotted"];
		"requests" -> "requests.auth" [style="dotted"];
		"requests" -> "requests.cookies" [style="dotted"];
		"requests" -> "requests.hooks" [style="dotted"];
		"requests" -> "requests.adapters" [style="dotted"];
		"requests" -> "requests.help" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.hosted_vllm.chat" {
		label="litellm.llms.hosted_vllm.chat";
		"litellm.llms.hosted_vllm.chat" -> "litellm.llms.hosted_vllm.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_requests_toolbelt.utils" {
		label="requests_toolbelt.utils";
		"requests_toolbelt.utils" -> "requests_toolbelt.utils.user_agent" [style="dotted"];
	}
	subgraph "cluster_kivy.lib.gstplayer" {
		label="kivy.lib.gstplayer";
	}
	subgraph "cluster_litellm.litellm_core_utils.llm_response_utils" {
		label="litellm.litellm_core_utils.llm_response_utils";
		"litellm.litellm_core_utils.llm_response_utils" -> "litellm.litellm_core_utils.llm_response_utils.convert_dict_to_response" [style="dotted"];
		"litellm.litellm_core_utils.llm_response_utils" -> "litellm.litellm_core_utils.llm_response_utils.get_api_base" [style="dotted"];
		"litellm.litellm_core_utils.llm_response_utils" -> "litellm.litellm_core_utils.llm_response_utils.get_formatted_prompt" [style="dotted"];
		"litellm.litellm_core_utils.llm_response_utils" -> "litellm.litellm_core_utils.llm_response_utils.get_headers" [style="dotted"];
		"litellm.litellm_core_utils.llm_response_utils" -> "litellm.litellm_core_utils.llm_response_utils.response_metadata" [style="dotted"];
	}
	subgraph "cluster_pandas.io.clipboard" {
		label="pandas.io.clipboard";
	}
	subgraph "cluster_litellm.llms.vertex_ai.vertex_ai_partner_models.anthropic" {
		label="litellm.llms.vertex_ai.vertex_ai_partner_models.anthropic";
		"litellm.llms.vertex_ai.vertex_ai_partner_models.anthropic" -> "litellm.llms.vertex_ai.vertex_ai_partner_models.anthropic.transformation" [style="dotted"];
	}
	subgraph "cluster_httpcore._backends" {
		label="httpcore._backends";
		"httpcore._backends" -> "httpcore._backends.base" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.mock" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.sync" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.anyio" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.trio" [style="dotted"];
		"httpcore._backends" -> "httpcore._backends.auto" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.generative_service" {
		label="google.ai.generativelanguage_v1beta.services.generative_service";
		"google.ai.generativelanguage_v1beta.services.generative_service" -> "google.ai.generativelanguage_v1beta.services.generative_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.generative_service" -> "google.ai.generativelanguage_v1beta.services.generative_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.generative_service" -> "google.ai.generativelanguage_v1beta.services.generative_service.transports" [style="dotted"];
	}
	subgraph "cluster_litellm.anthropic_interface" {
		label="litellm.anthropic_interface";
		"litellm.anthropic_interface" -> "litellm.anthropic_interface.messages" [style="dotted"];
	}
	subgraph "cluster_isoduration.parser" {
		label="isoduration.parser";
		"isoduration.parser" -> "isoduration.parser.exceptions" [style="dotted"];
		"isoduration.parser" -> "isoduration.parser.parsing" [style="dotted"];
		"isoduration.parser" -> "isoduration.parser.util" [style="dotted"];
	}
	subgraph "cluster_kivy.input" {
		label="kivy.input";
		"kivy.input" -> "kivy.input.motionevent" [style="dotted"];
		"kivy.input" -> "kivy.input.providers" [style="dotted"];
		"kivy.input" -> "kivy.input.postproc" [style="dotted"];
		"kivy.input" -> "kivy.input.provider" [style="dotted"];
		"kivy.input" -> "kivy.input.factory" [style="dotted"];
		"kivy.input" -> "kivy.input.shape" [style="dotted"];
	}
	subgraph "cluster_langchain_community.storage" {
		label="langchain_community.storage";
		"langchain_community.storage" -> "langchain_community.storage.astradb" [style="dotted"];
		"langchain_community.storage" -> "langchain_community.storage.cassandra" [style="dotted"];
		"langchain_community.storage" -> "langchain_community.storage.mongodb" [style="dotted"];
		"langchain_community.storage" -> "langchain_community.storage.redis" [style="dotted"];
		"langchain_community.storage" -> "langchain_community.storage.sql" [style="dotted"];
		"langchain_community.storage" -> "langchain_community.storage.upstash_redis" [style="dotted"];
	}
	subgraph "cluster_grpc" {
		label="grpc";
		"grpc" -> "grpc._common" [style="dotted"];
		"grpc" -> "grpc._compression" [style="dotted"];
		"grpc" -> "grpc._interceptor" [style="dotted"];
		"grpc" -> "grpc._observability" [style="dotted"];
		"grpc" -> "grpc._cython" [style="dotted"];
		"grpc" -> "grpc._runtime_protos" [style="dotted"];
		"grpc" -> "grpc._grpcio_metadata" [style="dotted"];
		"grpc" -> "grpc._utilities" [style="dotted"];
		"grpc" -> "grpc._plugin_wrapping" [style="dotted"];
		"grpc" -> "grpc._auth" [style="dotted"];
		"grpc" -> "grpc._channel" [style="dotted"];
		"grpc" -> "grpc.experimental" [style="dotted"];
		"grpc" -> "grpc._server" [style="dotted"];
		"grpc" -> "grpc.aio" [style="dotted"];
		"grpc" -> "grpc._typing" [style="dotted"];
		"grpc" -> "grpc._simple_stubs" [style="dotted"];
	}
	subgraph "cluster_xmlrpc" {
		label="xmlrpc";
		"xmlrpc" -> "xmlrpc.server" [style="dotted"];
		"xmlrpc" -> "xmlrpc.client" [style="dotted"];
	}
	subgraph "cluster_jedi.api.refactoring" {
		label="jedi.api.refactoring";
		"jedi.api.refactoring" -> "jedi.api.refactoring.extract" [style="dotted"];
	}
	subgraph "cluster_ptyprocess" {
		label="ptyprocess";
		"ptyprocess" -> "ptyprocess._fork_pty" [style="dotted"];
		"ptyprocess" -> "ptyprocess.ptyprocess" [style="dotted"];
		"ptyprocess" -> "ptyprocess.util" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.topaz" {
		label="litellm.llms.topaz";
		"litellm.llms.topaz" -> "litellm.llms.topaz.common_utils" [style="dotted"];
		"litellm.llms.topaz" -> "litellm.llms.topaz.image_variations" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.discuss_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.discuss_service.transports";
		"google.ai.generativelanguage_v1beta.services.discuss_service.transports" -> "google.ai.generativelanguage_v1beta.services.discuss_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.discuss_service.transports" -> "google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.discuss_service.transports" -> "google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.discuss_service.transports" -> "google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.discuss_service.transports" -> "google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.base_llm.audio_transcription" {
		label="litellm.llms.base_llm.audio_transcription";
		"litellm.llms.base_llm.audio_transcription" -> "litellm.llms.base_llm.audio_transcription.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.chat_message_histories" {
		label="langchain_community.chat_message_histories";
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.astradb" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.cassandra" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.cosmos_db" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.dynamodb" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.elasticsearch" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.file" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.firestore" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.in_memory" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.kafka" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.momento" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.mongodb" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.neo4j" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.postgres" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.redis" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.rocksetdb" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.singlestoredb" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.sql" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.streamlit" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.tidb" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.upstash_redis" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.xata" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.zep" [style="dotted"];
		"langchain_community.chat_message_histories" -> "langchain_community.chat_message_histories.zep_cloud" [style="dotted"];
	}
	subgraph "cluster_langchain_core.embeddings" {
		label="langchain_core.embeddings";
		"langchain_core.embeddings" -> "langchain_core.embeddings.embeddings" [style="dotted"];
		"langchain_core.embeddings" -> "langchain_core.embeddings.fake" [style="dotted"];
	}
	subgraph "cluster_pygments.styles" {
		label="pygments.styles";
		"pygments.styles" -> "pygments.styles._mapping" [style="dotted"];
		"pygments.styles" -> "pygments.styles.abap" [style="dotted"];
		"pygments.styles" -> "pygments.styles.algol" [style="dotted"];
		"pygments.styles" -> "pygments.styles.algol_nu" [style="dotted"];
		"pygments.styles" -> "pygments.styles.arduino" [style="dotted"];
		"pygments.styles" -> "pygments.styles.autumn" [style="dotted"];
		"pygments.styles" -> "pygments.styles.borland" [style="dotted"];
		"pygments.styles" -> "pygments.styles.bw" [style="dotted"];
		"pygments.styles" -> "pygments.styles.coffee" [style="dotted"];
		"pygments.styles" -> "pygments.styles.colorful" [style="dotted"];
		"pygments.styles" -> "pygments.styles.default" [style="dotted"];
		"pygments.styles" -> "pygments.styles.dracula" [style="dotted"];
		"pygments.styles" -> "pygments.styles.emacs" [style="dotted"];
		"pygments.styles" -> "pygments.styles.friendly" [style="dotted"];
		"pygments.styles" -> "pygments.styles.friendly_grayscale" [style="dotted"];
		"pygments.styles" -> "pygments.styles.fruity" [style="dotted"];
		"pygments.styles" -> "pygments.styles.gh_dark" [style="dotted"];
		"pygments.styles" -> "pygments.styles.gruvbox" [style="dotted"];
		"pygments.styles" -> "pygments.styles.igor" [style="dotted"];
		"pygments.styles" -> "pygments.styles.inkpot" [style="dotted"];
		"pygments.styles" -> "pygments.styles.lightbulb" [style="dotted"];
		"pygments.styles" -> "pygments.styles.lilypond" [style="dotted"];
		"pygments.styles" -> "pygments.styles.lovelace" [style="dotted"];
		"pygments.styles" -> "pygments.styles.manni" [style="dotted"];
		"pygments.styles" -> "pygments.styles.material" [style="dotted"];
		"pygments.styles" -> "pygments.styles.monokai" [style="dotted"];
		"pygments.styles" -> "pygments.styles.murphy" [style="dotted"];
		"pygments.styles" -> "pygments.styles.native" [style="dotted"];
		"pygments.styles" -> "pygments.styles.nord" [style="dotted"];
		"pygments.styles" -> "pygments.styles.onedark" [style="dotted"];
		"pygments.styles" -> "pygments.styles.paraiso_dark" [style="dotted"];
		"pygments.styles" -> "pygments.styles.paraiso_light" [style="dotted"];
		"pygments.styles" -> "pygments.styles.pastie" [style="dotted"];
		"pygments.styles" -> "pygments.styles.perldoc" [style="dotted"];
		"pygments.styles" -> "pygments.styles.rainbow_dash" [style="dotted"];
		"pygments.styles" -> "pygments.styles.rrt" [style="dotted"];
		"pygments.styles" -> "pygments.styles.sas" [style="dotted"];
		"pygments.styles" -> "pygments.styles.solarized" [style="dotted"];
		"pygments.styles" -> "pygments.styles.staroffice" [style="dotted"];
		"pygments.styles" -> "pygments.styles.stata_dark" [style="dotted"];
		"pygments.styles" -> "pygments.styles.stata_light" [style="dotted"];
		"pygments.styles" -> "pygments.styles.tango" [style="dotted"];
		"pygments.styles" -> "pygments.styles.trac" [style="dotted"];
		"pygments.styles" -> "pygments.styles.vim" [style="dotted"];
		"pygments.styles" -> "pygments.styles.vs" [style="dotted"];
		"pygments.styles" -> "pygments.styles.xcode" [style="dotted"];
		"pygments.styles" -> "pygments.styles.zenburn" [style="dotted"];
	}
	subgraph "cluster_langchain.utilities" {
		label="langchain.utilities";
		"langchain.utilities" -> "langchain.utilities.asyncio" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.cohere" {
		label="litellm.llms.cohere";
		"litellm.llms.cohere" -> "litellm.llms.cohere.common_utils" [style="dotted"];
		"litellm.llms.cohere" -> "litellm.llms.cohere.chat" [style="dotted"];
		"litellm.llms.cohere" -> "litellm.llms.cohere.embed" [style="dotted"];
		"litellm.llms.cohere" -> "litellm.llms.cohere.rerank_v2" [style="dotted"];
		"litellm.llms.cohere" -> "litellm.llms.cohere.rerank" [style="dotted"];
		"litellm.llms.cohere" -> "litellm.llms.cohere.completion" [style="dotted"];
	}
	subgraph "cluster_zipp.compat" {
		label="zipp.compat";
		"zipp.compat" -> "zipp.compat.overlay" [style="dotted"];
		"zipp.compat" -> "zipp.compat.py310" [style="dotted"];
	}
	subgraph "cluster_aiohttp._websocket" {
		label="aiohttp._websocket";
		"aiohttp._websocket" -> "aiohttp._websocket.reader" [style="dotted"];
		"aiohttp._websocket" -> "aiohttp._websocket.writer" [style="dotted"];
		"aiohttp._websocket" -> "aiohttp._websocket.helpers" [style="dotted"];
		"aiohttp._websocket" -> "aiohttp._websocket.models" [style="dotted"];
		"aiohttp._websocket" -> "aiohttp._websocket.mask" [style="dotted"];
		"aiohttp._websocket" -> "aiohttp._websocket.reader_py" [style="dotted"];
		"aiohttp._websocket" -> "aiohttp._websocket.reader_c" [style="dotted"];
	}
	subgraph "cluster_prometheus_client.openmetrics" {
		label="prometheus_client.openmetrics";
		"prometheus_client.openmetrics" -> "prometheus_client.openmetrics.exposition" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.jira" {
		label="langchain_community.tools.jira";
		"langchain_community.tools.jira" -> "langchain_community.tools.jira.tool" [style="dotted"];
		"langchain_community.tools.jira" -> "langchain_community.tools.jira.prompt" [style="dotted"];
	}
	subgraph "cluster_numpy.char" {
		label="numpy.char";
	}
	subgraph "cluster_langchain.agents.react" {
		label="langchain.agents.react";
		"langchain.agents.react" -> "langchain.agents.react.agent" [style="dotted"];
		"langchain.agents.react" -> "langchain.agents.react.base" [style="dotted"];
		"langchain.agents.react" -> "langchain.agents.react.output_parser" [style="dotted"];
		"langchain.agents.react" -> "langchain.agents.react.textworld_prompt" [style="dotted"];
		"langchain.agents.react" -> "langchain.agents.react.wiki_prompt" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.base_llm.completion" {
		label="litellm.llms.base_llm.completion";
		"litellm.llms.base_llm.completion" -> "litellm.llms.base_llm.completion.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vertex_ai.image_generation" {
		label="litellm.llms.vertex_ai.image_generation";
		"litellm.llms.vertex_ai.image_generation" -> "litellm.llms.vertex_ai.image_generation.cost_calculator" [style="dotted"];
		"litellm.llms.vertex_ai.image_generation" -> "litellm.llms.vertex_ai.image_generation.image_generation_handler" [style="dotted"];
	}
	subgraph "cluster_debugpy._vendored" {
		label="debugpy._vendored";
		"debugpy._vendored" -> "debugpy._vendored._util" [style="dotted"];
		"debugpy._vendored" -> "debugpy._vendored.force_pydevd" [style="dotted"];
	}
	subgraph "cluster_google.auth.aio.transport" {
		label="google.auth.aio.transport";
		"google.auth.aio.transport" -> "google.auth.aio.transport.sessions" [style="dotted"];
		"google.auth.aio.transport" -> "google.auth.aio.transport.aiohttp" [style="dotted"];
	}
	subgraph "cluster_pandas.core.util" {
		label="pandas.core.util";
		"pandas.core.util" -> "pandas.core.util.hashing" [style="dotted"];
		"pandas.core.util" -> "pandas.core.util.numba_" [style="dotted"];
	}
	subgraph "cluster_google.cloud" {
		label="google.cloud";
		"google.cloud" -> "google.cloud.storage" [style="dotted"];
		"google.cloud" -> "google.cloud.bigquery" [style="dotted"];
		"google.cloud" -> "google.cloud.documentai" [style="dotted"];
		"google.cloud" -> "google.cloud.texttospeech" [style="dotted"];
		"google.cloud" -> "google.cloud.aiplatform" [style="dotted"];
		"google.cloud" -> "google.cloud.kms_v1" [style="dotted"];
		"google.cloud" -> "google.cloud.translate" [style="dotted"];
		"google.cloud" -> "google.cloud.discoveryengine_v1beta" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.bing_search" {
		label="langchain_community.tools.bing_search";
		"langchain_community.tools.bing_search" -> "langchain_community.tools.bing_search.tool" [style="dotted"];
	}
	subgraph "cluster_parso.pgen2" {
		label="parso.pgen2";
		"parso.pgen2" -> "parso.pgen2.generator" [style="dotted"];
		"parso.pgen2" -> "parso.pgen2.grammar_parser" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.friendliai.chat" {
		label="litellm.llms.friendliai.chat";
		"litellm.llms.friendliai.chat" -> "litellm.llms.friendliai.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_pyarrow.interchange" {
		label="pyarrow.interchange";
		"pyarrow.interchange" -> "pyarrow.interchange.from_dataframe" [style="dotted"];
		"pyarrow.interchange" -> "pyarrow.interchange.buffer" [style="dotted"];
		"pyarrow.interchange" -> "pyarrow.interchange.column" [style="dotted"];
		"pyarrow.interchange" -> "pyarrow.interchange.dataframe" [style="dotted"];
	}
	subgraph "cluster_xml.dom" {
		label="xml.dom";
		"xml.dom" -> "xml.dom.domreg" [style="dotted"];
		"xml.dom" -> "xml.dom.xmlbuilder" [style="dotted"];
		"xml.dom" -> "xml.dom.minidom" [style="dotted"];
		"xml.dom" -> "xml.dom.pulldom" [style="dotted"];
		"xml.dom" -> "xml.dom.minicompat" [style="dotted"];
		"xml.dom" -> "xml.dom.expatbuilder" [style="dotted"];
		"xml.dom" -> "xml.dom.NodeFilter" [style="dotted"];
	}
	subgraph "cluster_joblib.externals" {
		label="joblib.externals";
		"joblib.externals" -> "joblib.externals.cloudpickle" [style="dotted"];
		"joblib.externals" -> "joblib.externals.loky" [style="dotted"];
	}
	subgraph "cluster_kivy.lib" {
		label="kivy.lib";
		"kivy.lib" -> "kivy.lib.mtdev" [style="dotted"];
		"kivy.lib" -> "kivy.lib.gstplayer" [style="dotted"];
		"kivy.lib" -> "kivy.lib.vidcore_lite" [style="dotted"];
		"kivy.lib" -> "kivy.lib.ddsfile" [style="dotted"];
	}
	subgraph "cluster_litellm.responses.litellm_completion_transformation" {
		label="litellm.responses.litellm_completion_transformation";
		"litellm.responses.litellm_completion_transformation" -> "litellm.responses.litellm_completion_transformation.transformation" [style="dotted"];
		"litellm.responses.litellm_completion_transformation" -> "litellm.responses.litellm_completion_transformation.handler" [style="dotted"];
		"litellm.responses.litellm_completion_transformation" -> "litellm.responses.litellm_completion_transformation.streaming_iterator" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.base_llm" {
		label="litellm.llms.base_llm";
		"litellm.llms.base_llm" -> "litellm.llms.base_llm.base_utils" [style="dotted"];
		"litellm.llms.base_llm" -> "litellm.llms.base_llm.base_model_iterator" [style="dotted"];
		"litellm.llms.base_llm" -> "litellm.llms.base_llm.anthropic_messages" [style="dotted"];
		"litellm.llms.base_llm" -> "litellm.llms.base_llm.audio_transcription" [style="dotted"];
		"litellm.llms.base_llm" -> "litellm.llms.base_llm.chat" [style="dotted"];
		"litellm.llms.base_llm" -> "litellm.llms.base_llm.embedding" [style="dotted"];
		"litellm.llms.base_llm" -> "litellm.llms.base_llm.image_generation" [style="dotted"];
		"litellm.llms.base_llm" -> "litellm.llms.base_llm.responses" [style="dotted"];
		"litellm.llms.base_llm" -> "litellm.llms.base_llm.rerank" [style="dotted"];
		"litellm.llms.base_llm" -> "litellm.llms.base_llm.realtime" [style="dotted"];
		"litellm.llms.base_llm" -> "litellm.llms.base_llm.image_variations" [style="dotted"];
		"litellm.llms.base_llm" -> "litellm.llms.base_llm.files" [style="dotted"];
		"litellm.llms.base_llm" -> "litellm.llms.base_llm.completion" [style="dotted"];
	}
	subgraph "cluster_IPython.extensions" {
		label="IPython.extensions";
		"IPython.extensions" -> "IPython.extensions.storemagic" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.brave_search" {
		label="langchain_community.tools.brave_search";
		"langchain_community.tools.brave_search" -> "langchain_community.tools.brave_search.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_text_splitters" {
		label="langchain_text_splitters";
		"langchain_text_splitters" -> "langchain_text_splitters.base" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.character" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.html" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.json" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.jsx" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.konlpy" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.latex" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.markdown" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.nltk" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.python" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.sentence_transformers" [style="dotted"];
		"langchain_text_splitters" -> "langchain_text_splitters.spacy" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vertex_ai.vertex_ai_partner_models" {
		label="litellm.llms.vertex_ai.vertex_ai_partner_models";
		"litellm.llms.vertex_ai.vertex_ai_partner_models" -> "litellm.llms.vertex_ai.vertex_ai_partner_models.main" [style="dotted"];
		"litellm.llms.vertex_ai.vertex_ai_partner_models" -> "litellm.llms.vertex_ai.vertex_ai_partner_models.ai21" [style="dotted"];
		"litellm.llms.vertex_ai.vertex_ai_partner_models" -> "litellm.llms.vertex_ai.vertex_ai_partner_models.llama3" [style="dotted"];
		"litellm.llms.vertex_ai.vertex_ai_partner_models" -> "litellm.llms.vertex_ai.vertex_ai_partner_models.anthropic" [style="dotted"];
	}
	subgraph "cluster_yt_dlp.dependencies" {
		label="yt_dlp.dependencies";
		"yt_dlp.dependencies" -> "yt_dlp.dependencies.Cryptodome" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.xai" {
		label="litellm.llms.xai";
		"litellm.llms.xai" -> "litellm.llms.xai.common_utils" [style="dotted"];
		"litellm.llms.xai" -> "litellm.llms.xai.chat" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.generative_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.generative_service.transports";
		"google.ai.generativelanguage_v1beta.services.generative_service.transports" -> "google.ai.generativelanguage_v1beta.services.generative_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.generative_service.transports" -> "google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.generative_service.transports" -> "google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.generative_service.transports" -> "google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.generative_service.transports" -> "google.ai.generativelanguage_v1beta.services.generative_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_pyarrow.parquet" {
		label="pyarrow.parquet";
		"pyarrow.parquet" -> "pyarrow.parquet.core" [style="dotted"];
		"pyarrow.parquet" -> "pyarrow.parquet.encryption" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.spark_sql" {
		label="langchain_community.agent_toolkits.spark_sql";
		"langchain_community.agent_toolkits.spark_sql" -> "langchain_community.agent_toolkits.spark_sql.base" [style="dotted"];
		"langchain_community.agent_toolkits.spark_sql" -> "langchain_community.agent_toolkits.spark_sql.toolkit" [style="dotted"];
		"langchain_community.agent_toolkits.spark_sql" -> "langchain_community.agent_toolkits.spark_sql.prompt" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services" {
		label="google.ai.generativelanguage_v1beta.services";
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.text_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.retriever_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.prediction_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.permission_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.model_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.generative_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.file_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.discuss_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services" -> "google.ai.generativelanguage_v1beta.services.cache_service" [style="dotted"];
	}
	subgraph "cluster_jupyter_core.utils" {
		label="jupyter_core.utils";
	}
	subgraph "cluster_sqlalchemy.orm" {
		label="sqlalchemy.orm";
		"sqlalchemy.orm" -> "sqlalchemy.orm.exc" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.collections" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.util" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.loading" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.context" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.evaluator" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.sync" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.persistence" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.bulk_persistence" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.clsregistry" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.strategy_options" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.unitofwork" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.properties" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.relationships" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.descriptor_props" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.state" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.instrumentation" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.path_registry" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.interfaces" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.attributes" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.mapper" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm._orm_constructors" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.base" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.decl_api" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.decl_base" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.dynamic" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.events" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.identity" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.mapped_collection" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.query" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.scoping" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.session" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.writeonly" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm._typing" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.strategies" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.dependency" [style="dotted"];
		"sqlalchemy.orm" -> "sqlalchemy.orm.state_changes" [style="dotted"];
	}
	subgraph "cluster_IPython.testing" {
		label="IPython.testing";
		"IPython.testing" -> "IPython.testing.skipdoctest" [style="dotted"];
	}
	subgraph "cluster_narwhals._arrow" {
		label="narwhals._arrow";
		"narwhals._arrow" -> "narwhals._arrow.utils" [style="dotted"];
		"narwhals._arrow" -> "narwhals._arrow.namespace" [style="dotted"];
		"narwhals._arrow" -> "narwhals._arrow.dataframe" [style="dotted"];
		"narwhals._arrow" -> "narwhals._arrow.expr" [style="dotted"];
		"narwhals._arrow" -> "narwhals._arrow.selectors" [style="dotted"];
		"narwhals._arrow" -> "narwhals._arrow.series" [style="dotted"];
		"narwhals._arrow" -> "narwhals._arrow.typing" [style="dotted"];
		"narwhals._arrow" -> "narwhals._arrow.series_cat" [style="dotted"];
		"narwhals._arrow" -> "narwhals._arrow.series_dt" [style="dotted"];
		"narwhals._arrow" -> "narwhals._arrow.series_list" [style="dotted"];
		"narwhals._arrow" -> "narwhals._arrow.series_str" [style="dotted"];
		"narwhals._arrow" -> "narwhals._arrow.series_struct" [style="dotted"];
		"narwhals._arrow" -> "narwhals._arrow.group_by" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.azure.chat" {
		label="litellm.llms.azure.chat";
		"litellm.llms.azure.chat" -> "litellm.llms.azure.chat.o_series_handler" [style="dotted"];
		"litellm.llms.azure.chat" -> "litellm.llms.azure.chat.gpt_transformation" [style="dotted"];
		"litellm.llms.azure.chat" -> "litellm.llms.azure.chat.o_series_transformation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.cassandra_database" {
		label="langchain_community.tools.cassandra_database";
		"langchain_community.tools.cassandra_database" -> "langchain_community.tools.cassandra_database.tool" [style="dotted"];
	}
	subgraph "cluster_langchain.agents" {
		label="langchain.agents";
		"langchain.agents" -> "langchain.agents.agent" [style="dotted"];
		"langchain.agents" -> "langchain.agents.agent_iterator" [style="dotted"];
		"langchain.agents" -> "langchain.agents.agent_types" [style="dotted"];
		"langchain.agents" -> "langchain.agents.initialize" [style="dotted"];
		"langchain.agents" -> "langchain.agents.loading" [style="dotted"];
		"langchain.agents" -> "langchain.agents.conversational" [style="dotted"];
		"langchain.agents" -> "langchain.agents.conversational_chat" [style="dotted"];
		"langchain.agents" -> "langchain.agents.json_chat" [style="dotted"];
		"langchain.agents" -> "langchain.agents.mrkl" [style="dotted"];
		"langchain.agents" -> "langchain.agents.openai_functions_agent" [style="dotted"];
		"langchain.agents" -> "langchain.agents.openai_functions_multi_agent" [style="dotted"];
		"langchain.agents" -> "langchain.agents.openai_tools" [style="dotted"];
		"langchain.agents" -> "langchain.agents.react" [style="dotted"];
		"langchain.agents" -> "langchain.agents.self_ask_with_search" [style="dotted"];
		"langchain.agents" -> "langchain.agents.structured_chat" [style="dotted"];
		"langchain.agents" -> "langchain.agents.tool_calling_agent" [style="dotted"];
		"langchain.agents" -> "langchain.agents.xml" [style="dotted"];
		"langchain.agents" -> "langchain.agents.output_parsers" [style="dotted"];
		"langchain.agents" -> "langchain.agents.chat" [style="dotted"];
		"langchain.agents" -> "langchain.agents.format_scratchpad" [style="dotted"];
		"langchain.agents" -> "langchain.agents.utils" [style="dotted"];
		"langchain.agents" -> "langchain.agents.types" [style="dotted"];
		"langchain.agents" -> "langchain.agents.agent_toolkits" [style="dotted"];
		"langchain.agents" -> "langchain.agents.tools" [style="dotted"];
	}
	subgraph "cluster_requests_toolbelt.auth" {
		label="requests_toolbelt.auth";
		"requests_toolbelt.auth" -> "requests_toolbelt.auth._digest_auth_compat" [style="dotted"];
		"requests_toolbelt.auth" -> "requests_toolbelt.auth.http_proxy_digest" [style="dotted"];
		"requests_toolbelt.auth" -> "requests_toolbelt.auth.guess" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.retrieval_qa" {
		label="langchain.chains.retrieval_qa";
		"langchain.chains.retrieval_qa" -> "langchain.chains.retrieval_qa.base" [style="dotted"];
	}
	subgraph "cluster_google.api_core.operations_v1" {
		label="google.api_core.operations_v1";
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.pagers" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.abstract_operations_client" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.operations_async_client" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.operations_client" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.pagers_async" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.operations_rest_client_async" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.transports" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.abstract_operations_base_client" [style="dotted"];
		"google.api_core.operations_v1" -> "google.api_core.operations_v1.pagers_base" [style="dotted"];
	}
	subgraph "cluster_streamlit.vendor.pympler" {
		label="streamlit.vendor.pympler";
		"streamlit.vendor.pympler" -> "streamlit.vendor.pympler.asizeof" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.openai_functions_agent" {
		label="langchain.agents.openai_functions_agent";
		"langchain.agents.openai_functions_agent" -> "langchain.agents.openai_functions_agent.base" [style="dotted"];
		"langchain.agents.openai_functions_agent" -> "langchain.agents.openai_functions_agent.agent_token_buffer_memory" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.dialects.mysql" {
		label="sqlalchemy.dialects.mysql";
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.reflection" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.aiomysql" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.asyncmy" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.base" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.cymysql" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.mariadbconnector" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.mysqlconnector" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.mysqldb" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.pymysql" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.pyodbc" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.dml" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.expression" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.mariadb" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.types" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.enumerated" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.json" [style="dotted"];
		"sqlalchemy.dialects.mysql" -> "sqlalchemy.dialects.mysql.reserved_words" [style="dotted"];
	}
	subgraph "cluster_tokenizers.normalizers" {
		label="tokenizers.normalizers";
	}
	subgraph "cluster_google.protobuf.internal" {
		label="google.protobuf.internal";
		"google.protobuf.internal" -> "google.protobuf.internal._api_implementation" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.api_implementation" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.python_edition_defaults" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.python_message" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.containers" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.wire_format" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.encoder" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.decoder" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.type_checkers" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.enum_type_wrapper" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.extension_dict" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.message_listener" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.field_mask" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.well_known_types" [style="dotted"];
		"google.protobuf.internal" -> "google.protobuf.internal.builder" [style="dotted"];
	}
	subgraph "cluster_narwhals._ibis" {
		label="narwhals._ibis";
		"narwhals._ibis" -> "narwhals._ibis.dataframe" [style="dotted"];
		"narwhals._ibis" -> "narwhals._ibis.series" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.replicate" {
		label="litellm.llms.replicate";
		"litellm.llms.replicate" -> "litellm.llms.replicate.common_utils" [style="dotted"];
		"litellm.llms.replicate" -> "litellm.llms.replicate.chat" [style="dotted"];
	}
	subgraph "cluster_datasets.features" {
		label="datasets.features";
		"datasets.features" -> "datasets.features.audio" [style="dotted"];
		"datasets.features" -> "datasets.features.features" [style="dotted"];
		"datasets.features" -> "datasets.features.image" [style="dotted"];
		"datasets.features" -> "datasets.features.pdf" [style="dotted"];
		"datasets.features" -> "datasets.features.translation" [style="dotted"];
		"datasets.features" -> "datasets.features.video" [style="dotted"];
	}
	subgraph "cluster_openai.types.fine_tuning.jobs" {
		label="openai.types.fine_tuning.jobs";
		"openai.types.fine_tuning.jobs" -> "openai.types.fine_tuning.jobs.checkpoint_list_params" [style="dotted"];
		"openai.types.fine_tuning.jobs" -> "openai.types.fine_tuning.jobs.fine_tuning_job_checkpoint" [style="dotted"];
	}
	subgraph "cluster_asyncio" {
		label="asyncio";
		"asyncio" -> "asyncio.constants" [style="dotted"];
		"asyncio" -> "asyncio.format_helpers" [style="dotted"];
		"asyncio" -> "asyncio.base_futures" [style="dotted"];
		"asyncio" -> "asyncio.coroutines" [style="dotted"];
		"asyncio" -> "asyncio.DefaultEventLoopPolicy" [style="dotted"];
		"asyncio" -> "asyncio.events" [style="dotted"];
		"asyncio" -> "asyncio.exceptions" [style="dotted"];
		"asyncio" -> "asyncio.futures" [style="dotted"];
		"asyncio" -> "asyncio.protocols" [style="dotted"];
		"asyncio" -> "asyncio.transports" [style="dotted"];
		"asyncio" -> "asyncio.sslproto" [style="dotted"];
		"asyncio" -> "asyncio.locks" [style="dotted"];
		"asyncio" -> "asyncio.base_tasks" [style="dotted"];
		"asyncio" -> "asyncio.tasks" [style="dotted"];
		"asyncio" -> "asyncio.staggered" [style="dotted"];
		"asyncio" -> "asyncio.trsock" [style="dotted"];
		"asyncio" -> "asyncio.base_events" [style="dotted"];
		"asyncio" -> "asyncio.runners" [style="dotted"];
		"asyncio" -> "asyncio.queues" [style="dotted"];
		"asyncio" -> "asyncio.streams" [style="dotted"];
		"asyncio" -> "asyncio.subprocess" [style="dotted"];
		"asyncio" -> "asyncio.threads" [style="dotted"];
		"asyncio" -> "asyncio.base_subprocess" [style="dotted"];
		"asyncio" -> "asyncio.proactor_events" [style="dotted"];
		"asyncio" -> "asyncio.selector_events" [style="dotted"];
		"asyncio" -> "asyncio.windows_utils" [style="dotted"];
		"asyncio" -> "asyncio.windows_events" [style="dotted"];
		"asyncio" -> "asyncio.unix_events" [style="dotted"];
		"asyncio" -> "asyncio.timeout" [style="dotted"];
		"asyncio" -> "asyncio.Runner" [style="dotted"];
		"asyncio" -> "asyncio.log" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.litellm_proxy.chat" {
		label="litellm.llms.litellm_proxy.chat";
		"litellm.llms.litellm_proxy.chat" -> "litellm.llms.litellm_proxy.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_proto.marshal.collections" {
		label="proto.marshal.collections";
		"proto.marshal.collections" -> "proto.marshal.collections.maps" [style="dotted"];
		"proto.marshal.collections" -> "proto.marshal.collections.repeated" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.cogniswitch" {
		label="langchain_community.agent_toolkits.cogniswitch";
		"langchain_community.agent_toolkits.cogniswitch" -> "langchain_community.agent_toolkits.cogniswitch.toolkit" [style="dotted"];
	}
	subgraph "cluster_kivy.core.spelling" {
		label="kivy.core.spelling";
		"kivy.core.spelling" -> "kivy.core.spelling.spelling_enchant" [style="dotted"];
		"kivy.core.spelling" -> "kivy.core.spelling.spelling_osxappkit" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vertex_ai.gemini_embeddings" {
		label="litellm.llms.vertex_ai.gemini_embeddings";
		"litellm.llms.vertex_ai.gemini_embeddings" -> "litellm.llms.vertex_ai.gemini_embeddings.batch_embed_content_handler" [style="dotted"];
		"litellm.llms.vertex_ai.gemini_embeddings" -> "litellm.llms.vertex_ai.gemini_embeddings.batch_embed_content_transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.credential_endpoints" {
		label="litellm.proxy.credential_endpoints";
		"litellm.proxy.credential_endpoints" -> "litellm.proxy.credential_endpoints.endpoints" [style="dotted"];
	}
	subgraph "cluster_langchain_community.document_transformers" {
		label="langchain_community.document_transformers";
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.beautiful_soup_transformer" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.doctran_text_extract" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.doctran_text_qa" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.doctran_text_translate" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.embeddings_redundant_filter" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.google_translate" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.html2text" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.long_context_reorder" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.markdownify" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.nuclia_text_transform" [style="dotted"];
		"langchain_community.document_transformers" -> "langchain_community.document_transformers.openai_functions" [style="dotted"];
	}
	subgraph "cluster_google.api_core.future" {
		label="google.api_core.future";
		"google.api_core.future" -> "google.api_core.future.base" [style="dotted"];
		"google.api_core.future" -> "google.api_core.future._helpers" [style="dotted"];
		"google.api_core.future" -> "google.api_core.future.polling" [style="dotted"];
		"google.api_core.future" -> "google.api_core.future.async_future" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.health_endpoints" {
		label="litellm.proxy.health_endpoints";
		"litellm.proxy.health_endpoints" -> "litellm.proxy.health_endpoints._health_endpoints" [style="dotted"];
	}
	subgraph "cluster_debugpy.common" {
		label="debugpy.common";
		"debugpy.common" -> "debugpy.common.json" [style="dotted"];
		"debugpy.common" -> "debugpy.common.timestamp" [style="dotted"];
		"debugpy.common" -> "debugpy.common.util" [style="dotted"];
		"debugpy.common" -> "debugpy.common.log" [style="dotted"];
		"debugpy.common" -> "debugpy.common.sockets" [style="dotted"];
	}
	subgraph "cluster_litellm.integrations.gcs_pubsub" {
		label="litellm.integrations.gcs_pubsub";
		"litellm.integrations.gcs_pubsub" -> "litellm.integrations.gcs_pubsub.pub_sub" [style="dotted"];
	}
	subgraph "cluster_langchain_community.query_constructors" {
		label="langchain_community.query_constructors";
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.tencentvectordb" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.astradb" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.chroma" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.dashvector" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.databricks_vector_search" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.deeplake" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.dingo" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.elasticsearch" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.milvus" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.mongodb_atlas" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.myscale" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.neo4j" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.opensearch" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.pgvector" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.pinecone" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.qdrant" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.redis" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.supabase" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.timescalevector" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.vectara" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.weaviate" [style="dotted"];
		"langchain_community.query_constructors" -> "langchain_community.query_constructors.hanavector" [style="dotted"];
	}
	subgraph "cluster_streamlit.elements.widgets" {
		label="streamlit.elements.widgets";
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.audio_input" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.button" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.button_group" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.camera_input" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.chat" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.checkbox" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.color_picker" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.data_editor" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.file_uploader" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.multiselect" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.number_input" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.radio" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.select_slider" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.selectbox" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.slider" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.text_widgets" [style="dotted"];
		"streamlit.elements.widgets" -> "streamlit.elements.widgets.time_widgets" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.voyage" {
		label="litellm.llms.voyage";
		"litellm.llms.voyage" -> "litellm.llms.voyage.embedding" [style="dotted"];
	}
	subgraph "cluster_streamlit.runtime.scriptrunner" {
		label="streamlit.runtime.scriptrunner";
		"streamlit.runtime.scriptrunner" -> "streamlit.runtime.scriptrunner.magic" [style="dotted"];
		"streamlit.runtime.scriptrunner" -> "streamlit.runtime.scriptrunner.script_runner" [style="dotted"];
		"streamlit.runtime.scriptrunner" -> "streamlit.runtime.scriptrunner.script_cache" [style="dotted"];
		"streamlit.runtime.scriptrunner" -> "streamlit.runtime.scriptrunner.exec_code" [style="dotted"];
	}
	subgraph "cluster_docutils.parsers.rst.languages" {
		label="docutils.parsers.rst.languages";
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.en" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.af" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.ar" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.ca" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.cs" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.da" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.de" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.eo" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.es" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.fa" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.fi" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.fr" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.gl" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.he" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.it" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.ja" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.ka" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.ko" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.lt" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.lv" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.nl" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.pl" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.pt_br" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.ru" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.sk" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.sv" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.uk" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.zh_cn" [style="dotted"];
		"docutils.parsers.rst.languages" -> "docutils.parsers.rst.languages.zh_tw" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.guardrails" {
		label="litellm.proxy.guardrails";
		"litellm.proxy.guardrails" -> "litellm.proxy.guardrails.guardrail_endpoints" [style="dotted"];
		"litellm.proxy.guardrails" -> "litellm.proxy.guardrails.init_guardrails" [style="dotted"];
		"litellm.proxy.guardrails" -> "litellm.proxy.guardrails.guardrail_registry" [style="dotted"];
		"litellm.proxy.guardrails" -> "litellm.proxy.guardrails.guardrail_initializers" [style="dotted"];
		"litellm.proxy.guardrails" -> "litellm.proxy.guardrails.guardrail_hooks" [style="dotted"];
		"litellm.proxy.guardrails" -> "litellm.proxy.guardrails.guardrail_helpers" [style="dotted"];
	}
	subgraph "cluster_six.moves" {
		label="six.moves";
		"six.moves" -> "six.moves._thread" [style="dotted"];
		"six.moves" -> "six.moves.winreg" [style="dotted"];
		"six.moves" -> "six.moves.range" [style="dotted"];
	}
	subgraph "cluster_isoduration.operations" {
		label="isoduration.operations";
		"isoduration.operations" -> "isoduration.operations.util" [style="dotted"];
	}
	subgraph "cluster_docutils.readers" {
		label="docutils.readers";
		"docutils.readers" -> "docutils.readers.standalone" [style="dotted"];
	}
	subgraph "cluster_langchain_community.output_parsers" {
		label="langchain_community.output_parsers";
		"langchain_community.output_parsers" -> "langchain_community.output_parsers.rail_parser" [style="dotted"];
	}
	subgraph "cluster_google.protobuf" {
		label="google.protobuf";
		"google.protobuf" -> "google.protobuf.enable_deterministic_proto_serialization" [style="dotted"];
		"google.protobuf" -> "google.protobuf.descriptor" [style="dotted"];
		"google.protobuf" -> "google.protobuf.descriptor_database" [style="dotted"];
		"google.protobuf" -> "google.protobuf.text_encoding" [style="dotted"];
		"google.protobuf" -> "google.protobuf.descriptor_pool" [style="dotted"];
		"google.protobuf" -> "google.protobuf.message" [style="dotted"];
		"google.protobuf" -> "google.protobuf.message_factory" [style="dotted"];
		"google.protobuf" -> "google.protobuf.symbol_database" [style="dotted"];
		"google.protobuf" -> "google.protobuf.unknown_fields" [style="dotted"];
		"google.protobuf" -> "google.protobuf.text_format" [style="dotted"];
		"google.protobuf" -> "google.protobuf.descriptor_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.runtime_version" [style="dotted"];
		"google.protobuf" -> "google.protobuf.reflection" [style="dotted"];
		"google.protobuf" -> "google.protobuf.service_reflection" [style="dotted"];
		"google.protobuf" -> "google.protobuf.duration_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.any_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.timestamp_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.empty_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.field_mask_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.struct_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.wrappers_pb2" [style="dotted"];
		"google.protobuf" -> "google.protobuf.json_format" [style="dotted"];
		"google.protobuf" -> "google.protobuf.internal" [style="dotted"];
		"google.protobuf" -> "google.protobuf.pyext" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.json_chat" {
		label="langchain.agents.json_chat";
		"langchain.agents.json_chat" -> "langchain.agents.json_chat.base" [style="dotted"];
		"langchain.agents.json_chat" -> "langchain.agents.json_chat.prompt" [style="dotted"];
	}
	subgraph "cluster_soupsieve" {
		label="soupsieve";
		"soupsieve" -> "soupsieve.__meta__" [style="dotted"];
		"soupsieve" -> "soupsieve.util" [style="dotted"];
		"soupsieve" -> "soupsieve.css_types" [style="dotted"];
		"soupsieve" -> "soupsieve.css_match" [style="dotted"];
		"soupsieve" -> "soupsieve.css_parser" [style="dotted"];
		"soupsieve" -> "soupsieve.pretty" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.codestral.completion" {
		label="litellm.llms.codestral.completion";
		"litellm.llms.codestral.completion" -> "litellm.llms.codestral.completion.handler" [style="dotted"];
		"litellm.llms.codestral.completion" -> "litellm.llms.codestral.completion.transformation" [style="dotted"];
	}
	subgraph "cluster_ctypes.macholib" {
		label="ctypes.macholib";
		"ctypes.macholib" -> "ctypes.macholib.dyld" [style="dotted"];
		"ctypes.macholib" -> "ctypes.macholib.framework" [style="dotted"];
		"ctypes.macholib" -> "ctypes.macholib.dylib" [style="dotted"];
	}
	subgraph "cluster_kivy.uix.recycleview" {
		label="kivy.uix.recycleview";
		"kivy.uix.recycleview" -> "kivy.uix.recycleview.layout" [style="dotted"];
		"kivy.uix.recycleview" -> "kivy.uix.recycleview.views" [style="dotted"];
		"kivy.uix.recycleview" -> "kivy.uix.recycleview.datamodel" [style="dotted"];
		"kivy.uix.recycleview" -> "kivy.uix.recycleview.__init__" [style="dotted"];
	}
	subgraph "cluster_huggingface_hub.utils" {
		label="huggingface_hub.utils";
		"huggingface_hub.utils" -> "huggingface_hub.utils.tqdm" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._auth" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._cache_assets" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils.logging" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._cache_manager" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._chunk_utils" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._datetime" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._experimental" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._fixes" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._git_credential" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._headers" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._hf_folder" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._http" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._pagination" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._paths" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._runtime" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._safetensors" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._subprocess" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._telemetry" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._typing" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._validators" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._xet" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._lfs" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils._deprecation" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils.sha" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils.insecure_hashlib" [style="dotted"];
		"huggingface_hub.utils" -> "huggingface_hub.utils.endpoint_helpers" [style="dotted"];
	}
	subgraph "cluster_zmq.backend" {
		label="zmq.backend";
		"zmq.backend" -> "zmq.backend.select" [style="dotted"];
		"zmq.backend" -> "zmq.backend.strerror" [style="dotted"];
		"zmq.backend" -> "zmq.backend.zmq_errno" [style="dotted"];
		"zmq.backend" -> "zmq.backend.proxy" [style="dotted"];
		"zmq.backend" -> "zmq.backend.Context" [style="dotted"];
		"zmq.backend" -> "zmq.backend.Socket" [style="dotted"];
		"zmq.backend" -> "zmq.backend.zmq_poll" [style="dotted"];
		"zmq.backend" -> "zmq.backend.Frame" [style="dotted"];
		"zmq.backend" -> "zmq.backend.zmq_version_info" [style="dotted"];
		"zmq.backend" -> "zmq.backend.cython" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.xai.chat" {
		label="litellm.llms.xai.chat";
		"litellm.llms.xai.chat" -> "litellm.llms.xai.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_langsmith.env" {
		label="langsmith.env";
		"langsmith.env" -> "langsmith.env._git" [style="dotted"];
		"langsmith.env" -> "langsmith.env._runtime_env" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_finance" {
		label="langchain_community.tools.google_finance";
		"langchain_community.tools.google_finance" -> "langchain_community.tools.google_finance.tool" [style="dotted"];
	}
	subgraph "cluster_mdurl" {
		label="mdurl";
		"mdurl" -> "mdurl._decode" [style="dotted"];
		"mdurl" -> "mdurl._encode" [style="dotted"];
		"mdurl" -> "mdurl._format" [style="dotted"];
		"mdurl" -> "mdurl._parse" [style="dotted"];
		"mdurl" -> "mdurl._url" [style="dotted"];
	}
	subgraph "cluster_huggingface_hub.inference._providers" {
		label="huggingface_hub.inference._providers";
		"huggingface_hub.inference._providers" -> "huggingface_hub.inference._providers._common" [style="dotted"];
		"huggingface_hub.inference._providers" -> "huggingface_hub.inference._providers.black_forest_labs" [style="dotted"];
		"huggingface_hub.inference._providers" -> "huggingface_hub.inference._providers.cerebras" [style="dotted"];
		"huggingface_hub.inference._providers" -> "huggingface_hub.inference._providers.cohere" [style="dotted"];
		"huggingface_hub.inference._providers" -> "huggingface_hub.inference._providers.fal_ai" [style="dotted"];
		"huggingface_hub.inference._providers" -> "huggingface_hub.inference._providers.fireworks_ai" [style="dotted"];
		"huggingface_hub.inference._providers" -> "huggingface_hub.inference._providers.hf_inference" [style="dotted"];
		"huggingface_hub.inference._providers" -> "huggingface_hub.inference._providers.hyperbolic" [style="dotted"];
		"huggingface_hub.inference._providers" -> "huggingface_hub.inference._providers.nebius" [style="dotted"];
		"huggingface_hub.inference._providers" -> "huggingface_hub.inference._providers.novita" [style="dotted"];
		"huggingface_hub.inference._providers" -> "huggingface_hub.inference._providers.openai" [style="dotted"];
		"huggingface_hub.inference._providers" -> "huggingface_hub.inference._providers.replicate" [style="dotted"];
		"huggingface_hub.inference._providers" -> "huggingface_hub.inference._providers.sambanova" [style="dotted"];
		"huggingface_hub.inference._providers" -> "huggingface_hub.inference._providers.together" [style="dotted"];
	}
	subgraph "cluster_litellm.files" {
		label="litellm.files";
		"litellm.files" -> "litellm.files.main" [style="dotted"];
	}
	subgraph "cluster_cffi" {
		label="cffi";
		"cffi" -> "cffi.model" [style="dotted"];
		"cffi" -> "cffi._pycparser" [style="dotted"];
		"cffi" -> "cffi.cparser" [style="dotted"];
		"cffi" -> "cffi.ffiplatform" [style="dotted"];
		"cffi" -> "cffi.vengine_gen" [style="dotted"];
		"cffi" -> "cffi._imp_emulation" [style="dotted"];
		"cffi" -> "cffi.vengine_cpy" [style="dotted"];
		"cffi" -> "cffi.pkgconfig" [style="dotted"];
		"cffi" -> "cffi.api" [style="dotted"];
		"cffi" -> "cffi.error" [style="dotted"];
		"cffi" -> "cffi.lock" [style="dotted"];
		"cffi" -> "cffi.verifier" [style="dotted"];
		"cffi" -> "cffi._shimmed_dist_utils" [style="dotted"];
		"cffi" -> "cffi.recompiler" [style="dotted"];
		"cffi" -> "cffi.cffi_opcode" [style="dotted"];
		"cffi" -> "cffi.commontypes" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.db.db_transaction_queue" {
		label="litellm.proxy.db.db_transaction_queue";
		"litellm.proxy.db.db_transaction_queue" -> "litellm.proxy.db.db_transaction_queue.spend_log_cleanup" [style="dotted"];
		"litellm.proxy.db.db_transaction_queue" -> "litellm.proxy.db.db_transaction_queue.daily_spend_update_queue" [style="dotted"];
		"litellm.proxy.db.db_transaction_queue" -> "litellm.proxy.db.db_transaction_queue.pod_lock_manager" [style="dotted"];
		"litellm.proxy.db.db_transaction_queue" -> "litellm.proxy.db.db_transaction_queue.redis_update_buffer" [style="dotted"];
		"litellm.proxy.db.db_transaction_queue" -> "litellm.proxy.db.db_transaction_queue.spend_update_queue" [style="dotted"];
		"litellm.proxy.db.db_transaction_queue" -> "litellm.proxy.db.db_transaction_queue.base_update_queue" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.metaphor_search" {
		label="langchain_community.tools.metaphor_search";
		"langchain_community.tools.metaphor_search" -> "langchain_community.tools.metaphor_search.tool" [style="dotted"];
	}
	subgraph "cluster_appnope" {
		label="appnope";
		"appnope" -> "appnope._dummy" [style="dotted"];
		"appnope" -> "appnope._nope" [style="dotted"];
	}
	subgraph "cluster_urllib3.packages.ssl_match_hostname" {
		label="urllib3.packages.ssl_match_hostname";
		"urllib3.packages.ssl_match_hostname" -> "urllib3.packages.ssl_match_hostname._implementation" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.permission_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.permission_service.transports";
		"google.ai.generativelanguage_v1beta.services.permission_service.transports" -> "google.ai.generativelanguage_v1beta.services.permission_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.permission_service.transports" -> "google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.permission_service.transports" -> "google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.permission_service.transports" -> "google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.permission_service.transports" -> "google.ai.generativelanguage_v1beta.services.permission_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_html" {
		label="html";
		"html" -> "html.entities" [style="dotted"];
		"html" -> "html.parser" [style="dotted"];
	}
	subgraph "cluster_packaging.licenses" {
		label="packaging.licenses";
		"packaging.licenses" -> "packaging.licenses._spdx" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.asknews" {
		label="langchain_community.tools.asknews";
		"langchain_community.tools.asknews" -> "langchain_community.tools.asknews.tool" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.fireworks_ai.audio_transcription" {
		label="litellm.llms.fireworks_ai.audio_transcription";
		"litellm.llms.fireworks_ai.audio_transcription" -> "litellm.llms.fireworks_ai.audio_transcription.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.nvidia_nim.chat" {
		label="litellm.llms.nvidia_nim.chat";
		"litellm.llms.nvidia_nim.chat" -> "litellm.llms.nvidia_nim.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.human" {
		label="langchain_community.tools.human";
		"langchain_community.tools.human" -> "langchain_community.tools.human.tool" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.sagemaker" {
		label="litellm.llms.sagemaker";
		"litellm.llms.sagemaker" -> "litellm.llms.sagemaker.common_utils" [style="dotted"];
		"litellm.llms.sagemaker" -> "litellm.llms.sagemaker.completion" [style="dotted"];
		"litellm.llms.sagemaker" -> "litellm.llms.sagemaker.chat" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.amadeus" {
		label="langchain_community.tools.amadeus";
		"langchain_community.tools.amadeus" -> "langchain_community.tools.amadeus.closest_airport" [style="dotted"];
		"langchain_community.tools.amadeus" -> "langchain_community.tools.amadeus.flight_search" [style="dotted"];
		"langchain_community.tools.amadeus" -> "langchain_community.tools.amadeus.utils" [style="dotted"];
		"langchain_community.tools.amadeus" -> "langchain_community.tools.amadeus.base" [style="dotted"];
	}
	subgraph "cluster_git.repo" {
		label="git.repo";
		"git.repo" -> "git.repo.base" [style="dotted"];
		"git.repo" -> "git.repo.fun" [style="dotted"];
	}
	subgraph "cluster_pathspec.patterns" {
		label="pathspec.patterns";
		"pathspec.patterns" -> "pathspec.patterns.gitwildmatch" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.parsing" {
		label="langchain.evaluation.parsing";
		"langchain.evaluation.parsing" -> "langchain.evaluation.parsing.base" [style="dotted"];
		"langchain.evaluation.parsing" -> "langchain.evaluation.parsing.json_distance" [style="dotted"];
		"langchain.evaluation.parsing" -> "langchain.evaluation.parsing.json_schema" [style="dotted"];
	}
	subgraph "cluster_filetype.types" {
		label="filetype.types";
		"filetype.types" -> "filetype.types.archive" [style="dotted"];
		"filetype.types" -> "filetype.types.audio" [style="dotted"];
		"filetype.types" -> "filetype.types.application" [style="dotted"];
		"filetype.types" -> "filetype.types.document" [style="dotted"];
		"filetype.types" -> "filetype.types.font" [style="dotted"];
		"filetype.types" -> "filetype.types.image" [style="dotted"];
		"filetype.types" -> "filetype.types.video" [style="dotted"];
		"filetype.types" -> "filetype.types.base" [style="dotted"];
		"filetype.types" -> "filetype.types.isobmff" [style="dotted"];
	}
	subgraph "cluster_litellm.integrations.vector_stores" {
		label="litellm.integrations.vector_stores";
		"litellm.integrations.vector_stores" -> "litellm.integrations.vector_stores.base_vector_store" [style="dotted"];
		"litellm.integrations.vector_stores" -> "litellm.integrations.vector_stores.bedrock_vector_store" [style="dotted"];
	}
	subgraph "cluster_jedi.inference.compiled" {
		label="jedi.inference.compiled";
		"jedi.inference.compiled" -> "jedi.inference.compiled.value" [style="dotted"];
		"jedi.inference.compiled" -> "jedi.inference.compiled.mixed" [style="dotted"];
		"jedi.inference.compiled" -> "jedi.inference.compiled.access" [style="dotted"];
		"jedi.inference.compiled" -> "jedi.inference.compiled.getattr_static" [style="dotted"];
		"jedi.inference.compiled" -> "jedi.inference.compiled.subprocess" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vertex_ai.text_to_speech" {
		label="litellm.llms.vertex_ai.text_to_speech";
		"litellm.llms.vertex_ai.text_to_speech" -> "litellm.llms.vertex_ai.text_to_speech.text_to_speech_handler" [style="dotted"];
	}
	subgraph "cluster_psutil" {
		label="psutil";
		"psutil" -> "psutil._common" [style="dotted"];
		"psutil" -> "psutil._psutil_windows" [style="dotted"];
		"psutil" -> "psutil._psutil_osx" [style="dotted"];
		"psutil" -> "psutil._psposix" [style="dotted"];
		"psutil" -> "psutil._psutil_posix" [style="dotted"];
		"psutil" -> "psutil._psosx" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.input" {
		label="prompt_toolkit.input";
		"prompt_toolkit.input" -> "prompt_toolkit.input.base" [style="dotted"];
		"prompt_toolkit.input" -> "prompt_toolkit.input.defaults" [style="dotted"];
		"prompt_toolkit.input" -> "prompt_toolkit.input.win32" [style="dotted"];
		"prompt_toolkit.input" -> "prompt_toolkit.input.vt100" [style="dotted"];
		"prompt_toolkit.input" -> "prompt_toolkit.input.win32_pipe" [style="dotted"];
		"prompt_toolkit.input" -> "prompt_toolkit.input.posix_pipe" [style="dotted"];
		"prompt_toolkit.input" -> "prompt_toolkit.input.vt100_parser" [style="dotted"];
		"prompt_toolkit.input" -> "prompt_toolkit.input.ansi_escape_sequences" [style="dotted"];
		"prompt_toolkit.input" -> "prompt_toolkit.input.posix_utils" [style="dotted"];
		"prompt_toolkit.input" -> "prompt_toolkit.input.typeahead" [style="dotted"];
	}
	subgraph "cluster_kivy.extras" {
		label="kivy.extras";
		"kivy.extras" -> "kivy.extras.highlight" [style="dotted"];
	}
	subgraph "cluster_huggingface_hub.inference._generated" {
		label="huggingface_hub.inference._generated";
		"huggingface_hub.inference._generated" -> "huggingface_hub.inference._generated._async_client" [style="dotted"];
		"huggingface_hub.inference._generated" -> "huggingface_hub.inference._generated.types" [style="dotted"];
	}
	subgraph "cluster_pandas._libs.window" {
		label="pandas._libs.window";
		"pandas._libs.window" -> "pandas._libs.window.aggregations" [style="dotted"];
		"pandas._libs.window" -> "pandas._libs.window.indexers" [style="dotted"];
	}
	subgraph "cluster_kivy.core.text" {
		label="kivy.core.text";
		"kivy.core.text" -> "kivy.core.text.text_layout" [style="dotted"];
		"kivy.core.text" -> "kivy.core.text.text_pango" [style="dotted"];
		"kivy.core.text" -> "kivy.core.text.markup" [style="dotted"];
		"kivy.core.text" -> "kivy.core.text.text_sdl2" [style="dotted"];
		"kivy.core.text" -> "kivy.core.text.text_pygame" [style="dotted"];
		"kivy.core.text" -> "kivy.core.text.text_pil" [style="dotted"];
		"kivy.core.text" -> "kivy.core.text._text_sdl2" [style="dotted"];
	}
	subgraph "cluster_urllib" {
		label="urllib";
		"urllib" -> "urllib.urlencode" [style="dotted"];
		"urllib" -> "urllib.pathname2url" [style="dotted"];
		"urllib" -> "urllib.parse" [style="dotted"];
		"urllib" -> "urllib.request" [style="dotted"];
		"urllib" -> "urllib.error" [style="dotted"];
		"urllib" -> "urllib.response" [style="dotted"];
	}
	subgraph "cluster_litellm.router_utils.pre_call_checks" {
		label="litellm.router_utils.pre_call_checks";
		"litellm.router_utils.pre_call_checks" -> "litellm.router_utils.pre_call_checks.prompt_caching_deployment_check" [style="dotted"];
		"litellm.router_utils.pre_call_checks" -> "litellm.router_utils.pre_call_checks.responses_api_deployment_check" [style="dotted"];
	}
	subgraph "cluster_langchain_core.language_models" {
		label="langchain_core.language_models";
		"langchain_core.language_models" -> "langchain_core.language_models.base" [style="dotted"];
		"langchain_core.language_models" -> "langchain_core.language_models.chat_models" [style="dotted"];
		"langchain_core.language_models" -> "langchain_core.language_models.fake" [style="dotted"];
		"langchain_core.language_models" -> "langchain_core.language_models.fake_chat_models" [style="dotted"];
		"langchain_core.language_models" -> "langchain_core.language_models.llms" [style="dotted"];
		"langchain_core.language_models" -> "langchain_core.language_models._utils" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.cache" {
		label="datasets.packaged_modules.cache";
		"datasets.packaged_modules.cache" -> "datasets.packaged_modules.cache.cache" [style="dotted"];
	}
	subgraph "cluster_pandas.core.methods" {
		label="pandas.core.methods";
		"pandas.core.methods" -> "pandas.core.methods.selectn" [style="dotted"];
		"pandas.core.methods" -> "pandas.core.methods.describe" [style="dotted"];
		"pandas.core.methods" -> "pandas.core.methods.to_dict" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.constitutional_ai" {
		label="langchain.chains.constitutional_ai";
		"langchain.chains.constitutional_ai" -> "langchain.chains.constitutional_ai.models" [style="dotted"];
	}
	subgraph "cluster_tokenizers.implementations" {
		label="tokenizers.implementations";
		"tokenizers.implementations" -> "tokenizers.implementations.base_tokenizer" [style="dotted"];
		"tokenizers.implementations" -> "tokenizers.implementations.bert_wordpiece" [style="dotted"];
		"tokenizers.implementations" -> "tokenizers.implementations.byte_level_bpe" [style="dotted"];
		"tokenizers.implementations" -> "tokenizers.implementations.char_level_bpe" [style="dotted"];
		"tokenizers.implementations" -> "tokenizers.implementations.sentencepiece_bpe" [style="dotted"];
		"tokenizers.implementations" -> "tokenizers.implementations.sentencepiece_unigram" [style="dotted"];
	}
	subgraph "cluster_pandas.arrays" {
		label="pandas.arrays";
	}
	subgraph "cluster_openai.types.shared" {
		label="openai.types.shared";
		"openai.types.shared" -> "openai.types.shared.metadata" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.reasoning" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.all_models" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.chat_model" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.error_object" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.compound_filter" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.responses_model" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.reasoning_effort" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.comparison_filter" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.function_definition" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.function_parameters" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.response_format_text" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.response_format_json_object" [style="dotted"];
		"openai.types.shared" -> "openai.types.shared.response_format_json_schema" [style="dotted"];
	}
	subgraph "cluster_pandas.core._numba.kernels" {
		label="pandas.core._numba.kernels";
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.mean_" [style="dotted"];
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.min_max_" [style="dotted"];
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.sum_" [style="dotted"];
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.var_" [style="dotted"];
		"pandas.core._numba.kernels" -> "pandas.core._numba.kernels.shared" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.scenexplain" {
		label="langchain_community.tools.scenexplain";
		"langchain_community.tools.scenexplain" -> "langchain_community.tools.scenexplain.tool" [style="dotted"];
	}
	subgraph "cluster_litellm.caching" {
		label="litellm.caching";
		"litellm.caching" -> "litellm.caching.caching" [style="dotted"];
		"litellm.caching" -> "litellm.caching.disk_cache" [style="dotted"];
		"litellm.caching" -> "litellm.caching.dual_cache" [style="dotted"];
		"litellm.caching" -> "litellm.caching.in_memory_cache" [style="dotted"];
		"litellm.caching" -> "litellm.caching.qdrant_semantic_cache" [style="dotted"];
		"litellm.caching" -> "litellm.caching.redis_cache" [style="dotted"];
		"litellm.caching" -> "litellm.caching.redis_cluster_cache" [style="dotted"];
		"litellm.caching" -> "litellm.caching.redis_semantic_cache" [style="dotted"];
		"litellm.caching" -> "litellm.caching.s3_cache" [style="dotted"];
		"litellm.caching" -> "litellm.caching._internal_lru_cache" [style="dotted"];
		"litellm.caching" -> "litellm.caching.caching_handler" [style="dotted"];
		"litellm.caching" -> "litellm.caching.base_cache" [style="dotted"];
		"litellm.caching" -> "litellm.caching.llm_caching_handler" [style="dotted"];
	}
	subgraph "cluster_openai.types.chat" {
		label="openai.types.chat";
		"openai.types.chat" -> "openai.types.chat.chat_completion" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_role" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_audio" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_chunk" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.completion_list_params" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.parsed_chat_completion" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_deleted" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_message" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_modality" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.completion_create_params" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.completion_update_params" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.parsed_function_tool_call" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_tool_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_audio_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_message_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_store_message" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_token_logprob" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_reasoning_effort" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_message_tool_call" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_content_part_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_tool_message_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_user_message_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_stream_options_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_system_message_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_function_message_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_assistant_message_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_content_part_text_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_developer_message_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_message_tool_call_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_named_tool_choice_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_content_part_image_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_prediction_content_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_tool_choice_option_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_content_part_refusal_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_function_call_option_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.chat_completion_content_part_input_audio_param" [style="dotted"];
		"openai.types.chat" -> "openai.types.chat.completions" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.tavily_search" {
		label="langchain_community.tools.tavily_search";
		"langchain_community.tools.tavily_search" -> "langchain_community.tools.tavily_search.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_cloud" {
		label="langchain_community.tools.google_cloud";
		"langchain_community.tools.google_cloud" -> "langchain_community.tools.google_cloud.texttospeech" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.connery" {
		label="langchain_community.tools.connery";
		"langchain_community.tools.connery" -> "langchain_community.tools.connery.service" [style="dotted"];
		"langchain_community.tools.connery" -> "langchain_community.tools.connery.tool" [style="dotted"];
		"langchain_community.tools.connery" -> "langchain_community.tools.connery.models" [style="dotted"];
	}
	subgraph "cluster_requests_toolbelt.multipart" {
		label="requests_toolbelt.multipart";
		"requests_toolbelt.multipart" -> "requests_toolbelt.multipart.encoder" [style="dotted"];
		"requests_toolbelt.multipart" -> "requests_toolbelt.multipart.decoder" [style="dotted"];
	}
	subgraph "cluster_yaml" {
		label="yaml";
		"yaml" -> "yaml.error" [style="dotted"];
		"yaml" -> "yaml.tokens" [style="dotted"];
		"yaml" -> "yaml.events" [style="dotted"];
		"yaml" -> "yaml.nodes" [style="dotted"];
		"yaml" -> "yaml.loader" [style="dotted"];
		"yaml" -> "yaml.dumper" [style="dotted"];
		"yaml" -> "yaml.cyaml" [style="dotted"];
		"yaml" -> "yaml._yaml" [style="dotted"];
		"yaml" -> "yaml.constructor" [style="dotted"];
		"yaml" -> "yaml.serializer" [style="dotted"];
		"yaml" -> "yaml.representer" [style="dotted"];
		"yaml" -> "yaml.resolver" [style="dotted"];
		"yaml" -> "yaml.emitter" [style="dotted"];
		"yaml" -> "yaml.reader" [style="dotted"];
		"yaml" -> "yaml.scanner" [style="dotted"];
		"yaml" -> "yaml.parser" [style="dotted"];
		"yaml" -> "yaml.composer" [style="dotted"];
	}
	subgraph "cluster_openai.types.audio" {
		label="openai.types.audio";
		"openai.types.audio" -> "openai.types.audio.translation" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.speech_model" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_word" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.translation_verbose" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.speech_create_params" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_include" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_segment" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_verbose" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.translation_create_params" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_stream_event" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_create_params" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.translation_create_response" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_create_response" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_text_done_event" [style="dotted"];
		"openai.types.audio" -> "openai.types.audio.transcription_text_delta_event" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.hooks" {
		label="litellm.proxy.hooks";
		"litellm.proxy.hooks" -> "litellm.proxy.hooks.cache_control_check" [style="dotted"];
		"litellm.proxy.hooks" -> "litellm.proxy.hooks.max_budget_limiter" [style="dotted"];
		"litellm.proxy.hooks" -> "litellm.proxy.hooks.parallel_request_limiter" [style="dotted"];
		"litellm.proxy.hooks" -> "litellm.proxy.hooks.parallel_request_limiter_v2" [style="dotted"];
		"litellm.proxy.hooks" -> "litellm.proxy.hooks.model_max_budget_limiter" [style="dotted"];
		"litellm.proxy.hooks" -> "litellm.proxy.hooks.prompt_injection_detection" [style="dotted"];
		"litellm.proxy.hooks" -> "litellm.proxy.hooks.proxy_track_cost_callback" [style="dotted"];
		"litellm.proxy.hooks" -> "litellm.proxy.hooks.key_management_event_hooks" [style="dotted"];
		"litellm.proxy.hooks" -> "litellm.proxy.hooks.user_management_event_hooks" [style="dotted"];
		"litellm.proxy.hooks" -> "litellm.proxy.hooks.batch_redis_get" [style="dotted"];
		"litellm.proxy.hooks" -> "litellm.proxy.hooks.azure_content_safety" [style="dotted"];
		"litellm.proxy.hooks" -> "litellm.proxy.hooks.dynamic_rate_limiter" [style="dotted"];
	}
	subgraph "cluster_google.api_core.gapic_v1" {
		label="google.api_core.gapic_v1";
		"google.api_core.gapic_v1" -> "google.api_core.gapic_v1.client_info" [style="dotted"];
		"google.api_core.gapic_v1" -> "google.api_core.gapic_v1.config" [style="dotted"];
		"google.api_core.gapic_v1" -> "google.api_core.gapic_v1.config_async" [style="dotted"];
		"google.api_core.gapic_v1" -> "google.api_core.gapic_v1.method" [style="dotted"];
		"google.api_core.gapic_v1" -> "google.api_core.gapic_v1.method_async" [style="dotted"];
		"google.api_core.gapic_v1" -> "google.api_core.gapic_v1.routing_header" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.llamafile.chat" {
		label="litellm.llms.llamafile.chat";
		"litellm.llms.llamafile.chat" -> "litellm.llms.llamafile.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_pandas._libs" {
		label="pandas._libs";
		"pandas._libs" -> "pandas._libs.pandas_parser" [style="dotted"];
		"pandas._libs" -> "pandas._libs.pandas_datetime" [style="dotted"];
		"pandas._libs" -> "pandas._libs.lib" [style="dotted"];
		"pandas._libs" -> "pandas._libs.missing" [style="dotted"];
		"pandas._libs" -> "pandas._libs.algos" [style="dotted"];
		"pandas._libs" -> "pandas._libs.index" [style="dotted"];
		"pandas._libs" -> "pandas._libs.writers" [style="dotted"];
		"pandas._libs" -> "pandas._libs.ops" [style="dotted"];
		"pandas._libs" -> "pandas._libs.tslib" [style="dotted"];
		"pandas._libs" -> "pandas._libs.reshape" [style="dotted"];
		"pandas._libs" -> "pandas._libs.join" [style="dotted"];
		"pandas._libs" -> "pandas._libs.interval" [style="dotted"];
		"pandas._libs" -> "pandas._libs.tslibs" [style="dotted"];
		"pandas._libs" -> "pandas._libs.arrays" [style="dotted"];
		"pandas._libs" -> "pandas._libs.byteswap" [style="dotted"];
		"pandas._libs" -> "pandas._libs.groupby" [style="dotted"];
		"pandas._libs" -> "pandas._libs.hashing" [style="dotted"];
		"pandas._libs" -> "pandas._libs.hashtable" [style="dotted"];
		"pandas._libs" -> "pandas._libs.indexing" [style="dotted"];
		"pandas._libs" -> "pandas._libs.internals" [style="dotted"];
		"pandas._libs" -> "pandas._libs.json" [style="dotted"];
		"pandas._libs" -> "pandas._libs.ops_dispatch" [style="dotted"];
		"pandas._libs" -> "pandas._libs.parsers" [style="dotted"];
		"pandas._libs" -> "pandas._libs.properties" [style="dotted"];
		"pandas._libs" -> "pandas._libs.sas" [style="dotted"];
		"pandas._libs" -> "pandas._libs.sparse" [style="dotted"];
		"pandas._libs" -> "pandas._libs.testing" [style="dotted"];
		"pandas._libs" -> "pandas._libs.window" [style="dotted"];
	}
	subgraph "cluster_pandas.compat" {
		label="pandas.compat";
		"pandas.compat" -> "pandas.compat._constants" [style="dotted"];
		"pandas.compat" -> "pandas.compat.compressors" [style="dotted"];
		"pandas.compat" -> "pandas.compat.numpy" [style="dotted"];
		"pandas.compat" -> "pandas.compat.pyarrow" [style="dotted"];
		"pandas.compat" -> "pandas.compat._optional" [style="dotted"];
		"pandas.compat" -> "pandas.compat.pickle_compat" [style="dotted"];
	}
	subgraph "cluster_litellm.types.passthrough_endpoints" {
		label="litellm.types.passthrough_endpoints";
		"litellm.types.passthrough_endpoints" -> "litellm.types.passthrough_endpoints.pass_through_endpoints" [style="dotted"];
		"litellm.types.passthrough_endpoints" -> "litellm.types.passthrough_endpoints.assembly_ai" [style="dotted"];
		"litellm.types.passthrough_endpoints" -> "litellm.types.passthrough_endpoints.vertex_ai" [style="dotted"];
	}
	subgraph "cluster_openai.resources.audio" {
		label="openai.resources.audio";
		"openai.resources.audio" -> "openai.resources.audio.audio" [style="dotted"];
		"openai.resources.audio" -> "openai.resources.audio.speech" [style="dotted"];
		"openai.resources.audio" -> "openai.resources.audio.translations" [style="dotted"];
		"openai.resources.audio" -> "openai.resources.audio.transcriptions" [style="dotted"];
	}
	subgraph "cluster_importlib" {
		label="importlib";
		"importlib" -> "importlib._bootstrap" [style="dotted"];
		"importlib" -> "importlib._bootstrap_external" [style="dotted"];
		"importlib" -> "importlib.machinery" [style="dotted"];
		"importlib" -> "importlib._common" [style="dotted"];
		"importlib" -> "importlib.util" [style="dotted"];
		"importlib" -> "importlib.metadata" [style="dotted"];
		"importlib" -> "importlib.abc" [style="dotted"];
		"importlib" -> "importlib.resources" [style="dotted"];
	}
	subgraph "cluster_openai.lib.streaming" {
		label="openai.lib.streaming";
		"openai.lib.streaming" -> "openai.lib.streaming._assistants" [style="dotted"];
		"openai.lib.streaming" -> "openai.lib.streaming.responses" [style="dotted"];
		"openai.lib.streaming" -> "openai.lib.streaming.chat" [style="dotted"];
		"openai.lib.streaming" -> "openai.lib.streaming._deltas" [style="dotted"];
	}
	subgraph "cluster_openai.types.evals" {
		label="openai.types.evals";
		"openai.types.evals" -> "openai.types.evals.eval_api_error" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.run_list_params" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.run_create_params" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.run_list_response" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.run_cancel_response" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.run_create_response" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.run_delete_response" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.run_retrieve_response" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.create_eval_jsonl_run_data_source" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.create_eval_completions_run_data_source" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.create_eval_jsonl_run_data_source_param" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.create_eval_completions_run_data_source_param" [style="dotted"];
		"openai.types.evals" -> "openai.types.evals.runs" [style="dotted"];
	}
	subgraph "cluster_pandas.util.version" {
		label="pandas.util.version";
	}
	subgraph "cluster_langchain.evaluation" {
		label="langchain.evaluation";
		"langchain.evaluation" -> "langchain.evaluation.agents" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.comparison" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.criteria" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.embedding_distance" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.loading" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.qa" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.schema" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.scoring" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.string_distance" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.exact_match" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.parsing" [style="dotted"];
		"langchain.evaluation" -> "langchain.evaluation.regex_match" [style="dotted"];
	}
	subgraph "cluster_langchain.memory" {
		label="langchain.memory";
		"langchain.memory" -> "langchain.memory.buffer" [style="dotted"];
		"langchain.memory" -> "langchain.memory.buffer_window" [style="dotted"];
		"langchain.memory" -> "langchain.memory.combined" [style="dotted"];
		"langchain.memory" -> "langchain.memory.entity" [style="dotted"];
		"langchain.memory" -> "langchain.memory.readonly" [style="dotted"];
		"langchain.memory" -> "langchain.memory.simple" [style="dotted"];
		"langchain.memory" -> "langchain.memory.summary" [style="dotted"];
		"langchain.memory" -> "langchain.memory.summary_buffer" [style="dotted"];
		"langchain.memory" -> "langchain.memory.token_buffer" [style="dotted"];
		"langchain.memory" -> "langchain.memory.vectorstore" [style="dotted"];
		"langchain.memory" -> "langchain.memory.vectorstore_token_buffer_memory" [style="dotted"];
		"langchain.memory" -> "langchain.memory.chat_memory" [style="dotted"];
		"langchain.memory" -> "langchain.memory.prompt" [style="dotted"];
		"langchain.memory" -> "langchain.memory.utils" [style="dotted"];
	}
	subgraph "cluster_langchain_community.docstore" {
		label="langchain_community.docstore";
		"langchain_community.docstore" -> "langchain_community.docstore.arbitrary_fn" [style="dotted"];
		"langchain_community.docstore" -> "langchain_community.docstore.in_memory" [style="dotted"];
		"langchain_community.docstore" -> "langchain_community.docstore.wikipedia" [style="dotted"];
		"langchain_community.docstore" -> "langchain_community.docstore.document" [style="dotted"];
		"langchain_community.docstore" -> "langchain_community.docstore.base" [style="dotted"];
	}
	subgraph "cluster_urllib3.packages.six.moves" {
		label="urllib3.packages.six.moves";
		"urllib3.packages.six.moves" -> "urllib3.packages.six.moves.queue" [style="dotted"];
		"urllib3.packages.six.moves" -> "urllib3.packages.six.moves.urllib" [style="dotted"];
		"urllib3.packages.six.moves" -> "urllib3.packages.six.moves.http_client" [style="dotted"];
	}
	subgraph "cluster_IPython.terminal.shortcuts" {
		label="IPython.terminal.shortcuts";
		"IPython.terminal.shortcuts" -> "IPython.terminal.shortcuts.auto_match" [style="dotted"];
		"IPython.terminal.shortcuts" -> "IPython.terminal.shortcuts.auto_suggest" [style="dotted"];
		"IPython.terminal.shortcuts" -> "IPython.terminal.shortcuts.filters" [style="dotted"];
	}
	subgraph "cluster_litellm.anthropic_interface.messages" {
		label="litellm.anthropic_interface.messages";
	}
	subgraph "cluster_litellm.proxy.pass_through_endpoints.llm_provider_handlers" {
		label="litellm.proxy.pass_through_endpoints.llm_provider_handlers";
		"litellm.proxy.pass_through_endpoints.llm_provider_handlers" -> "litellm.proxy.pass_through_endpoints.llm_provider_handlers.anthropic_passthrough_logging_handler" [style="dotted"];
		"litellm.proxy.pass_through_endpoints.llm_provider_handlers" -> "litellm.proxy.pass_through_endpoints.llm_provider_handlers.assembly_passthrough_logging_handler" [style="dotted"];
		"litellm.proxy.pass_through_endpoints.llm_provider_handlers" -> "litellm.proxy.pass_through_endpoints.llm_provider_handlers.cohere_passthrough_logging_handler" [style="dotted"];
		"litellm.proxy.pass_through_endpoints.llm_provider_handlers" -> "litellm.proxy.pass_through_endpoints.llm_provider_handlers.vertex_passthrough_logging_handler" [style="dotted"];
		"litellm.proxy.pass_through_endpoints.llm_provider_handlers" -> "litellm.proxy.pass_through_endpoints.llm_provider_handlers.base_passthrough_logging_handler" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.deepseek" {
		label="litellm.llms.deepseek";
		"litellm.llms.deepseek" -> "litellm.llms.deepseek.cost_calculator" [style="dotted"];
		"litellm.llms.deepseek" -> "litellm.llms.deepseek.chat" [style="dotted"];
	}
	subgraph "cluster_altair.jupyter" {
		label="altair.jupyter";
		"altair.jupyter" -> "altair.jupyter.jupyter_chart" [style="dotted"];
	}
	subgraph "cluster_pydeck.exceptions" {
		label="pydeck.exceptions";
		"pydeck.exceptions" -> "pydeck.exceptions.exceptions" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.eventloop" {
		label="prompt_toolkit.eventloop";
		"prompt_toolkit.eventloop" -> "prompt_toolkit.eventloop.async_generator" [style="dotted"];
		"prompt_toolkit.eventloop" -> "prompt_toolkit.eventloop.inputhook" [style="dotted"];
		"prompt_toolkit.eventloop" -> "prompt_toolkit.eventloop.utils" [style="dotted"];
		"prompt_toolkit.eventloop" -> "prompt_toolkit.eventloop.win32" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vertex_ai.vertex_embeddings" {
		label="litellm.llms.vertex_ai.vertex_embeddings";
		"litellm.llms.vertex_ai.vertex_embeddings" -> "litellm.llms.vertex_ai.vertex_embeddings.embedding_handler" [style="dotted"];
		"litellm.llms.vertex_ai.vertex_embeddings" -> "litellm.llms.vertex_ai.vertex_embeddings.types" [style="dotted"];
		"litellm.llms.vertex_ai.vertex_embeddings" -> "litellm.llms.vertex_ai.vertex_embeddings.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.agents" {
		label="langchain.evaluation.agents";
		"langchain.evaluation.agents" -> "langchain.evaluation.agents.trajectory_eval_chain" [style="dotted"];
		"langchain.evaluation.agents" -> "langchain.evaluation.agents.trajectory_eval_prompt" [style="dotted"];
	}
	subgraph "cluster_openai" {
		label="openai";
		"openai" -> "openai._legacy_response" [style="dotted"];
		"openai" -> "openai.types" [style="dotted"];
		"openai" -> "openai._types" [style="dotted"];
		"openai" -> "openai._utils" [style="dotted"];
		"openai" -> "openai._client" [style="dotted"];
		"openai" -> "openai._models" [style="dotted"];
		"openai" -> "openai._version" [style="dotted"];
		"openai" -> "openai._response" [style="dotted"];
		"openai" -> "openai._constants" [style="dotted"];
		"openai" -> "openai._exceptions" [style="dotted"];
		"openai" -> "openai._base_client" [style="dotted"];
		"openai" -> "openai.lib" [style="dotted"];
		"openai" -> "openai.version" [style="dotted"];
		"openai" -> "openai._module_client" [style="dotted"];
		"openai" -> "openai.resources" [style="dotted"];
		"openai" -> "openai._compat" [style="dotted"];
		"openai" -> "openai._resource" [style="dotted"];
		"openai" -> "openai.pagination" [style="dotted"];
		"openai" -> "openai._streaming" [style="dotted"];
		"openai" -> "openai._extras" [style="dotted"];
		"openai" -> "openai._files" [style="dotted"];
		"openai" -> "openai._qs" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.searchapi" {
		label="langchain_community.tools.searchapi";
		"langchain_community.tools.searchapi" -> "langchain_community.tools.searchapi.tool" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.cohere.rerank" {
		label="litellm.llms.cohere.rerank";
		"litellm.llms.cohere.rerank" -> "litellm.llms.cohere.rerank.transformation" [style="dotted"];
	}
	subgraph "cluster_nbformat" {
		label="nbformat";
		"nbformat" -> "nbformat.v1" [style="dotted"];
		"nbformat" -> "nbformat.v2" [style="dotted"];
		"nbformat" -> "nbformat.v3" [style="dotted"];
		"nbformat" -> "nbformat.validator" [style="dotted"];
		"nbformat" -> "nbformat.v4" [style="dotted"];
		"nbformat" -> "nbformat._version" [style="dotted"];
		"nbformat" -> "nbformat.sentinel" [style="dotted"];
		"nbformat" -> "nbformat.reader" [style="dotted"];
		"nbformat" -> "nbformat.converter" [style="dotted"];
		"nbformat" -> "nbformat.notebooknode" [style="dotted"];
		"nbformat" -> "nbformat._struct" [style="dotted"];
		"nbformat" -> "nbformat.corpus" [style="dotted"];
		"nbformat" -> "nbformat._imports" [style="dotted"];
		"nbformat" -> "nbformat.json_compat" [style="dotted"];
		"nbformat" -> "nbformat.warnings" [style="dotted"];
	}
	subgraph "cluster_parso.python" {
		label="parso.python";
		"parso.python" -> "parso.python.tree" [style="dotted"];
		"parso.python" -> "parso.python.pep8" [style="dotted"];
		"parso.python" -> "parso.python.token" [style="dotted"];
		"parso.python" -> "parso.python.prefix" [style="dotted"];
		"parso.python" -> "parso.python.tokenize" [style="dotted"];
		"parso.python" -> "parso.python.errors" [style="dotted"];
		"parso.python" -> "parso.python.diff" [style="dotted"];
		"parso.python" -> "parso.python.parser" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.anthropic" {
		label="litellm.llms.anthropic";
		"litellm.llms.anthropic" -> "litellm.llms.anthropic.cost_calculation" [style="dotted"];
		"litellm.llms.anthropic" -> "litellm.llms.anthropic.common_utils" [style="dotted"];
		"litellm.llms.anthropic" -> "litellm.llms.anthropic.chat" [style="dotted"];
		"litellm.llms.anthropic" -> "litellm.llms.anthropic.experimental_pass_through" [style="dotted"];
		"litellm.llms.anthropic" -> "litellm.llms.anthropic.completion" [style="dotted"];
	}
	subgraph "cluster_huggingface_hub.serialization" {
		label="huggingface_hub.serialization";
		"huggingface_hub.serialization" -> "huggingface_hub.serialization._base" [style="dotted"];
		"huggingface_hub.serialization" -> "huggingface_hub.serialization._tensorflow" [style="dotted"];
		"huggingface_hub.serialization" -> "huggingface_hub.serialization._torch" [style="dotted"];
		"huggingface_hub.serialization" -> "huggingface_hub.serialization._dduf" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.base_llm.responses" {
		label="litellm.llms.base_llm.responses";
		"litellm.llms.base_llm.responses" -> "litellm.llms.base_llm.responses.transformation" [style="dotted"];
	}
	subgraph "cluster_yt_dlp.compat" {
		label="yt_dlp.compat";
		"yt_dlp.compat" -> "yt_dlp.compat.compat_utils" [style="dotted"];
		"yt_dlp.compat" -> "yt_dlp.compat.imghdr" [style="dotted"];
		"yt_dlp.compat" -> "yt_dlp.compat.urllib" [style="dotted"];
		"yt_dlp.compat" -> "yt_dlp.compat.shutil" [style="dotted"];
		"yt_dlp.compat" -> "yt_dlp.compat._legacy" [style="dotted"];
		"yt_dlp.compat" -> "yt_dlp.compat._deprecated" [style="dotted"];
		"yt_dlp.compat" -> "yt_dlp.compat.types" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.csv" {
		label="datasets.packaged_modules.csv";
		"datasets.packaged_modules.csv" -> "datasets.packaged_modules.csv.csv" [style="dotted"];
	}
	subgraph "cluster_proto.marshal" {
		label="proto.marshal";
		"proto.marshal" -> "proto.marshal.compat" [style="dotted"];
		"proto.marshal" -> "proto.marshal.marshal" [style="dotted"];
		"proto.marshal" -> "proto.marshal.collections" [style="dotted"];
		"proto.marshal" -> "proto.marshal.rules" [style="dotted"];
	}
	subgraph "cluster_frozenlist" {
		label="frozenlist";
		"frozenlist" -> "frozenlist._frozenlist" [style="dotted"];
	}
	subgraph "cluster_openai.lib" {
		label="openai.lib";
		"openai.lib" -> "openai.lib._tools" [style="dotted"];
		"openai.lib" -> "openai.lib._parsing" [style="dotted"];
		"openai.lib" -> "openai.lib.azure" [style="dotted"];
		"openai.lib" -> "openai.lib._old_api" [style="dotted"];
		"openai.lib" -> "openai.lib._pydantic" [style="dotted"];
		"openai.lib" -> "openai.lib.streaming" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.openai_functions" {
		label="langchain.chains.openai_functions";
		"langchain.chains.openai_functions" -> "langchain.chains.openai_functions.base" [style="dotted"];
		"langchain.chains.openai_functions" -> "langchain.chains.openai_functions.citation_fuzzy_match" [style="dotted"];
		"langchain.chains.openai_functions" -> "langchain.chains.openai_functions.extraction" [style="dotted"];
		"langchain.chains.openai_functions" -> "langchain.chains.openai_functions.qa_with_structure" [style="dotted"];
		"langchain.chains.openai_functions" -> "langchain.chains.openai_functions.tagging" [style="dotted"];
		"langchain.chains.openai_functions" -> "langchain.chains.openai_functions.utils" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.slack" {
		label="langchain_community.tools.slack";
		"langchain_community.tools.slack" -> "langchain_community.tools.slack.get_channel" [style="dotted"];
		"langchain_community.tools.slack" -> "langchain_community.tools.slack.get_message" [style="dotted"];
		"langchain_community.tools.slack" -> "langchain_community.tools.slack.schedule_message" [style="dotted"];
		"langchain_community.tools.slack" -> "langchain_community.tools.slack.send_message" [style="dotted"];
		"langchain_community.tools.slack" -> "langchain_community.tools.slack.utils" [style="dotted"];
		"langchain_community.tools.slack" -> "langchain_community.tools.slack.base" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.codestral" {
		label="litellm.llms.codestral";
		"litellm.llms.codestral" -> "litellm.llms.codestral.completion" [style="dotted"];
	}
	subgraph "cluster_pexpect" {
		label="pexpect";
		"pexpect" -> "pexpect.exceptions" [style="dotted"];
		"pexpect" -> "pexpect.utils" [style="dotted"];
		"pexpect" -> "pexpect.expect" [style="dotted"];
		"pexpect" -> "pexpect.pty_spawn" [style="dotted"];
		"pexpect" -> "pexpect.run" [style="dotted"];
		"pexpect" -> "pexpect.spawnbase" [style="dotted"];
		"pexpect" -> "pexpect._async" [style="dotted"];
		"pexpect" -> "pexpect._async_w_await" [style="dotted"];
		"pexpect" -> "pexpect._async_pre_await" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.zenguard" {
		label="langchain_community.tools.zenguard";
		"langchain_community.tools.zenguard" -> "langchain_community.tools.zenguard.tool" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.vertex_ai_endpoints" {
		label="litellm.proxy.vertex_ai_endpoints";
		"litellm.proxy.vertex_ai_endpoints" -> "litellm.proxy.vertex_ai_endpoints.langfuse_endpoints" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.openrouter" {
		label="litellm.llms.openrouter";
		"litellm.llms.openrouter" -> "litellm.llms.openrouter.common_utils" [style="dotted"];
		"litellm.llms.openrouter" -> "litellm.llms.openrouter.chat" [style="dotted"];
	}
	subgraph "cluster_pydantic_settings.sources" {
		label="pydantic_settings.sources";
		"pydantic_settings.sources" -> "pydantic_settings.sources.base" [style="dotted"];
		"pydantic_settings.sources" -> "pydantic_settings.sources.types" [style="dotted"];
		"pydantic_settings.sources" -> "pydantic_settings.sources.providers" [style="dotted"];
		"pydantic_settings.sources" -> "pydantic_settings.sources.utils" [style="dotted"];
	}
	subgraph "cluster_kivy.core.clipboard" {
		label="kivy.core.clipboard";
		"kivy.core.clipboard" -> "kivy.core.clipboard._clipboard_ext" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_gtk3" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_pygame" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_dummy" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard._clipboard_sdl2" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_sdl2" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_nspaste" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_dbusklipper" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_android" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_xclip" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_xsel" [style="dotted"];
		"kivy.core.clipboard" -> "kivy.core.clipboard.clipboard_winctypes" [style="dotted"];
	}
	subgraph "cluster_jupyter_client.ssh" {
		label="jupyter_client.ssh";
		"jupyter_client.ssh" -> "jupyter_client.ssh.tunnel" [style="dotted"];
		"jupyter_client.ssh" -> "jupyter_client.ssh.forward" [style="dotted"];
	}
	subgraph "cluster_multiprocess.dummy" {
		label="multiprocess.dummy";
		"multiprocess.dummy" -> "multiprocess.dummy.connection" [style="dotted"];
	}
	subgraph "cluster_unittest" {
		label="unittest";
		"unittest" -> "unittest.util" [style="dotted"];
		"unittest" -> "unittest.result" [style="dotted"];
		"unittest" -> "unittest.case" [style="dotted"];
		"unittest" -> "unittest.suite" [style="dotted"];
		"unittest" -> "unittest.loader" [style="dotted"];
		"unittest" -> "unittest.runner" [style="dotted"];
		"unittest" -> "unittest.main" [style="dotted"];
		"unittest" -> "unittest.signals" [style="dotted"];
		"unittest" -> "unittest.async_case" [style="dotted"];
		"unittest" -> "unittest._log" [style="dotted"];
		"unittest" -> "unittest.mock" [style="dotted"];
	}
	subgraph "cluster_dateutil.parser" {
		label="dateutil.parser";
		"dateutil.parser" -> "dateutil.parser._parser" [style="dotted"];
		"dateutil.parser" -> "dateutil.parser.isoparser" [style="dotted"];
	}
	subgraph "cluster_altair.vegalite" {
		label="altair.vegalite";
		"altair.vegalite" -> "altair.vegalite.SCHEMA_VERSION" [style="dotted"];
		"altair.vegalite" -> "altair.vegalite.v5" [style="dotted"];
		"altair.vegalite" -> "altair.vegalite.display" [style="dotted"];
		"altair.vegalite" -> "altair.vegalite.data" [style="dotted"];
	}
	subgraph "cluster_importlib_metadata" {
		label="importlib_metadata";
		"importlib_metadata" -> "importlib_metadata._meta" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata._collections" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata._compat" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata._functools" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata._itertools" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata._typing" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata.compat" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata._adapters" [style="dotted"];
		"importlib_metadata" -> "importlib_metadata._text" [style="dotted"];
	}
	subgraph "cluster_narwhals.stable" {
		label="narwhals.stable";
		"narwhals.stable" -> "narwhals.stable.v1" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.agent_toolkits.vectorstore" {
		label="langchain.agents.agent_toolkits.vectorstore";
		"langchain.agents.agent_toolkits.vectorstore" -> "langchain.agents.agent_toolkits.vectorstore.base" [style="dotted"];
		"langchain.agents.agent_toolkits.vectorstore" -> "langchain.agents.agent_toolkits.vectorstore.prompt" [style="dotted"];
		"langchain.agents.agent_toolkits.vectorstore" -> "langchain.agents.agent_toolkits.vectorstore.toolkit" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.model_service" {
		label="google.ai.generativelanguage_v1beta.services.model_service";
		"google.ai.generativelanguage_v1beta.services.model_service" -> "google.ai.generativelanguage_v1beta.services.model_service.pagers" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.model_service" -> "google.ai.generativelanguage_v1beta.services.model_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.model_service" -> "google.ai.generativelanguage_v1beta.services.model_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.model_service" -> "google.ai.generativelanguage_v1beta.services.model_service.transports" [style="dotted"];
	}
	subgraph "cluster_IPython.terminal" {
		label="IPython.terminal";
		"IPython.terminal" -> "IPython.terminal.pt_inputhooks" [style="dotted"];
		"IPython.terminal" -> "IPython.terminal.embed" [style="dotted"];
		"IPython.terminal" -> "IPython.terminal.interactiveshell" [style="dotted"];
		"IPython.terminal" -> "IPython.terminal.debugger" [style="dotted"];
		"IPython.terminal" -> "IPython.terminal.magics" [style="dotted"];
		"IPython.terminal" -> "IPython.terminal.prompts" [style="dotted"];
		"IPython.terminal" -> "IPython.terminal.ptutils" [style="dotted"];
		"IPython.terminal" -> "IPython.terminal.shortcuts" [style="dotted"];
		"IPython.terminal" -> "IPython.terminal.ipapp" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.searx_search" {
		label="langchain_community.tools.searx_search";
		"langchain_community.tools.searx_search" -> "langchain_community.tools.searx_search.tool" [style="dotted"];
	}
	subgraph "cluster_google.api" {
		label="google.api";
		"google.api" -> "google.api.http_pb2" [style="dotted"];
		"google.api" -> "google.api.annotations_pb2" [style="dotted"];
		"google.api" -> "google.api.launch_stage_pb2" [style="dotted"];
		"google.api" -> "google.api.client_pb2" [style="dotted"];
	}
	subgraph "cluster_filelock" {
		label="filelock";
		"filelock" -> "filelock._api" [style="dotted"];
		"filelock" -> "filelock._error" [style="dotted"];
		"filelock" -> "filelock._soft" [style="dotted"];
		"filelock" -> "filelock._unix" [style="dotted"];
		"filelock" -> "filelock._windows" [style="dotted"];
		"filelock" -> "filelock.asyncio" [style="dotted"];
		"filelock" -> "filelock.version" [style="dotted"];
		"filelock" -> "filelock._util" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.openweathermap" {
		label="langchain_community.tools.openweathermap";
		"langchain_community.tools.openweathermap" -> "langchain_community.tools.openweathermap.tool" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.tool_calling_agent" {
		label="langchain.agents.tool_calling_agent";
		"langchain.agents.tool_calling_agent" -> "langchain.agents.tool_calling_agent.base" [style="dotted"];
	}
	subgraph "cluster_exceptiongroup" {
		label="exceptiongroup";
		"exceptiongroup" -> "exceptiongroup._catch" [style="dotted"];
		"exceptiongroup" -> "exceptiongroup._version" [style="dotted"];
		"exceptiongroup" -> "exceptiongroup._exceptions" [style="dotted"];
		"exceptiongroup" -> "exceptiongroup._formatting" [style="dotted"];
		"exceptiongroup" -> "exceptiongroup._suppress" [style="dotted"];
	}
	subgraph "cluster_joblib" {
		label="joblib";
		"joblib" -> "joblib._cloudpickle_wrapper" [style="dotted"];
		"joblib" -> "joblib._parallel_backends" [style="dotted"];
		"joblib" -> "joblib._store_backends" [style="dotted"];
		"joblib" -> "joblib.compressor" [style="dotted"];
		"joblib" -> "joblib.hashing" [style="dotted"];
		"joblib" -> "joblib.logger" [style="dotted"];
		"joblib" -> "joblib.memory" [style="dotted"];
		"joblib" -> "joblib.numpy_pickle" [style="dotted"];
		"joblib" -> "joblib.parallel" [style="dotted"];
		"joblib" -> "joblib._multiprocessing_helpers" [style="dotted"];
		"joblib" -> "joblib._utils" [style="dotted"];
		"joblib" -> "joblib.disk" [style="dotted"];
		"joblib" -> "joblib.externals" [style="dotted"];
		"joblib" -> "joblib._dask" [style="dotted"];
		"joblib" -> "joblib.backports" [style="dotted"];
		"joblib" -> "joblib.numpy_pickle_compat" [style="dotted"];
		"joblib" -> "joblib.numpy_pickle_utils" [style="dotted"];
		"joblib" -> "joblib._memmapping_reducer" [style="dotted"];
		"joblib" -> "joblib.func_inspect" [style="dotted"];
		"joblib" -> "joblib.executor" [style="dotted"];
		"joblib" -> "joblib.pool" [style="dotted"];
	}
	subgraph "cluster_streamlit.runtime.state" {
		label="streamlit.runtime.state";
		"streamlit.runtime.state" -> "streamlit.runtime.state.common" [style="dotted"];
		"streamlit.runtime.state" -> "streamlit.runtime.state.query_params_proxy" [style="dotted"];
		"streamlit.runtime.state" -> "streamlit.runtime.state.safe_session_state" [style="dotted"];
		"streamlit.runtime.state" -> "streamlit.runtime.state.session_state" [style="dotted"];
		"streamlit.runtime.state" -> "streamlit.runtime.state.session_state_proxy" [style="dotted"];
		"streamlit.runtime.state" -> "streamlit.runtime.state.widgets" [style="dotted"];
		"streamlit.runtime.state" -> "streamlit.runtime.state.query_params" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.openapi" {
		label="langchain_community.tools.openapi";
		"langchain_community.tools.openapi" -> "langchain_community.tools.openapi.utils" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.jina_ai.embedding" {
		label="litellm.llms.jina_ai.embedding";
		"litellm.llms.jina_ai.embedding" -> "litellm.llms.jina_ai.embedding.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.base_llm.chat" {
		label="litellm.llms.base_llm.chat";
		"litellm.llms.base_llm.chat" -> "litellm.llms.base_llm.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_grpc.experimental" {
		label="grpc.experimental";
		"grpc.experimental" -> "grpc.experimental.aio" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.ainetwork" {
		label="langchain_community.tools.ainetwork";
		"langchain_community.tools.ainetwork" -> "langchain_community.tools.ainetwork.app" [style="dotted"];
		"langchain_community.tools.ainetwork" -> "langchain_community.tools.ainetwork.owner" [style="dotted"];
		"langchain_community.tools.ainetwork" -> "langchain_community.tools.ainetwork.rule" [style="dotted"];
		"langchain_community.tools.ainetwork" -> "langchain_community.tools.ainetwork.transfer" [style="dotted"];
		"langchain_community.tools.ainetwork" -> "langchain_community.tools.ainetwork.value" [style="dotted"];
		"langchain_community.tools.ainetwork" -> "langchain_community.tools.ainetwork.base" [style="dotted"];
		"langchain_community.tools.ainetwork" -> "langchain_community.tools.ainetwork.utils" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.output_parsers" {
		label="langchain.agents.output_parsers";
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.json" [style="dotted"];
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.openai_functions" [style="dotted"];
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.react_json_single_input" [style="dotted"];
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.react_single_input" [style="dotted"];
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.self_ask" [style="dotted"];
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.tools" [style="dotted"];
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.xml" [style="dotted"];
		"langchain.agents.output_parsers" -> "langchain.agents.output_parsers.openai_tools" [style="dotted"];
	}
	subgraph "cluster_anyio._core" {
		label="anyio._core";
		"anyio._core" -> "anyio._core._eventloop" [style="dotted"];
		"anyio._core" -> "anyio._core._exceptions" [style="dotted"];
		"anyio._core" -> "anyio._core._fileio" [style="dotted"];
		"anyio._core" -> "anyio._core._resources" [style="dotted"];
		"anyio._core" -> "anyio._core._signals" [style="dotted"];
		"anyio._core" -> "anyio._core._sockets" [style="dotted"];
		"anyio._core" -> "anyio._core._streams" [style="dotted"];
		"anyio._core" -> "anyio._core._subprocesses" [style="dotted"];
		"anyio._core" -> "anyio._core._synchronization" [style="dotted"];
		"anyio._core" -> "anyio._core._tasks" [style="dotted"];
		"anyio._core" -> "anyio._core._testing" [style="dotted"];
		"anyio._core" -> "anyio._core._typedattr" [style="dotted"];
	}
	subgraph "cluster_pandas.core.arrays.sparse" {
		label="pandas.core.arrays.sparse";
		"pandas.core.arrays.sparse" -> "pandas.core.arrays.sparse.accessor" [style="dotted"];
		"pandas.core.arrays.sparse" -> "pandas.core.arrays.sparse.array" [style="dotted"];
		"pandas.core.arrays.sparse" -> "pandas.core.arrays.sparse.scipy_sparse" [style="dotted"];
	}
	subgraph "cluster_tenacity.asyncio" {
		label="tenacity.asyncio";
		"tenacity.asyncio" -> "tenacity.asyncio.retry" [style="dotted"];
	}
	subgraph "cluster_blib2to3.pgen2" {
		label="blib2to3.pgen2";
		"blib2to3.pgen2" -> "blib2to3.pgen2.token" [style="dotted"];
		"blib2to3.pgen2" -> "blib2to3.pgen2.parse" [style="dotted"];
		"blib2to3.pgen2" -> "blib2to3.pgen2.pgen" [style="dotted"];
		"blib2to3.pgen2" -> "blib2to3.pgen2.driver" [style="dotted"];
		"blib2to3.pgen2" -> "blib2to3.pgen2.conv" [style="dotted"];
		"blib2to3.pgen2" -> "blib2to3.pgen2.grammar" [style="dotted"];
		"blib2to3.pgen2" -> "blib2to3.pgen2.literals" [style="dotted"];
		"blib2to3.pgen2" -> "blib2to3.pgen2.tokenize" [style="dotted"];
	}
	subgraph "cluster_anyio.streams" {
		label="anyio.streams";
		"anyio.streams" -> "anyio.streams.memory" [style="dotted"];
		"anyio.streams" -> "anyio.streams.stapled" [style="dotted"];
		"anyio.streams" -> "anyio.streams.tls" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.youtube" {
		label="langchain_community.tools.youtube";
		"langchain_community.tools.youtube" -> "langchain_community.tools.youtube.search" [style="dotted"];
	}
	subgraph "cluster_openai.resources.beta.chat" {
		label="openai.resources.beta.chat";
		"openai.resources.beta.chat" -> "openai.resources.beta.chat.chat" [style="dotted"];
		"openai.resources.beta.chat" -> "openai.resources.beta.chat.completions" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.gmail" {
		label="langchain_community.tools.gmail";
		"langchain_community.tools.gmail" -> "langchain_community.tools.gmail.create_draft" [style="dotted"];
		"langchain_community.tools.gmail" -> "langchain_community.tools.gmail.get_message" [style="dotted"];
		"langchain_community.tools.gmail" -> "langchain_community.tools.gmail.get_thread" [style="dotted"];
		"langchain_community.tools.gmail" -> "langchain_community.tools.gmail.search" [style="dotted"];
		"langchain_community.tools.gmail" -> "langchain_community.tools.gmail.send_message" [style="dotted"];
		"langchain_community.tools.gmail" -> "langchain_community.tools.gmail.utils" [style="dotted"];
		"langchain_community.tools.gmail" -> "langchain_community.tools.gmail.base" [style="dotted"];
	}
	subgraph "cluster_yt_dlp.postprocessor" {
		label="yt_dlp.postprocessor";
		"yt_dlp.postprocessor" -> "yt_dlp.postprocessor.common" [style="dotted"];
		"yt_dlp.postprocessor" -> "yt_dlp.postprocessor.embedthumbnail" [style="dotted"];
		"yt_dlp.postprocessor" -> "yt_dlp.postprocessor.exec" [style="dotted"];
		"yt_dlp.postprocessor" -> "yt_dlp.postprocessor.ffmpeg" [style="dotted"];
		"yt_dlp.postprocessor" -> "yt_dlp.postprocessor.metadataparser" [style="dotted"];
		"yt_dlp.postprocessor" -> "yt_dlp.postprocessor.modify_chapters" [style="dotted"];
		"yt_dlp.postprocessor" -> "yt_dlp.postprocessor.movefilesafterdownload" [style="dotted"];
		"yt_dlp.postprocessor" -> "yt_dlp.postprocessor.sponskrub" [style="dotted"];
		"yt_dlp.postprocessor" -> "yt_dlp.postprocessor.sponsorblock" [style="dotted"];
		"yt_dlp.postprocessor" -> "yt_dlp.postprocessor.xattrpp" [style="dotted"];
	}
	subgraph "cluster_langchain.storage" {
		label="langchain.storage";
		"langchain.storage" -> "langchain.storage._lc_store" [style="dotted"];
		"langchain.storage" -> "langchain.storage.encoder_backed" [style="dotted"];
		"langchain.storage" -> "langchain.storage.file_system" [style="dotted"];
		"langchain.storage" -> "langchain.storage.exceptions" [style="dotted"];
	}
	subgraph "cluster_langchain.smith.evaluation" {
		label="langchain.smith.evaluation";
		"langchain.smith.evaluation" -> "langchain.smith.evaluation.config" [style="dotted"];
		"langchain.smith.evaluation" -> "langchain.smith.evaluation.name_generation" [style="dotted"];
		"langchain.smith.evaluation" -> "langchain.smith.evaluation.progress" [style="dotted"];
		"langchain.smith.evaluation" -> "langchain.smith.evaluation.runner_utils" [style="dotted"];
		"langchain.smith.evaluation" -> "langchain.smith.evaluation.string_run_evaluator" [style="dotted"];
	}
	subgraph "cluster_kivy.input.providers" {
		label="kivy.input.providers";
		"kivy.input.providers" -> "kivy.input.providers.tuio" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.mouse" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.wm_touch" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.wm_pen" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.mactouch" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.probesysfs" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.mtdev" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.hidinput" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.linuxwacom" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.androidjoystick" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.leapfinger" [style="dotted"];
		"kivy.input.providers" -> "kivy.input.providers.wm_common" [style="dotted"];
	}
	subgraph "cluster_kivy.uix.behaviors" {
		label="kivy.uix.behaviors";
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.button" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.togglebutton" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.drag" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.focus" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.compoundselection" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.codenavigation" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.emacs" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.cover" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.touchripple" [style="dotted"];
		"kivy.uix.behaviors" -> "kivy.uix.behaviors.knspace" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.chat" {
		label="langchain.agents.chat";
		"langchain.agents.chat" -> "langchain.agents.chat.prompt" [style="dotted"];
		"langchain.agents.chat" -> "langchain.agents.chat.base" [style="dotted"];
		"langchain.agents.chat" -> "langchain.agents.chat.output_parser" [style="dotted"];
	}
	subgraph "cluster_urllib3" {
		label="urllib3";
		"urllib3" -> "urllib3.exceptions" [style="dotted"];
		"urllib3" -> "urllib3._version" [style="dotted"];
		"urllib3" -> "urllib3.connectionpool" [style="dotted"];
		"urllib3" -> "urllib3.filepost" [style="dotted"];
		"urllib3" -> "urllib3.poolmanager" [style="dotted"];
		"urllib3" -> "urllib3.response" [style="dotted"];
		"urllib3" -> "urllib3.packages" [style="dotted"];
		"urllib3" -> "urllib3.util" [style="dotted"];
		"urllib3" -> "urllib3.contrib" [style="dotted"];
		"urllib3" -> "urllib3._collections" [style="dotted"];
		"urllib3" -> "urllib3.connection" [style="dotted"];
		"urllib3" -> "urllib3.request" [style="dotted"];
		"urllib3" -> "urllib3.fields" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.comparison" {
		label="langchain.evaluation.comparison";
		"langchain.evaluation.comparison" -> "langchain.evaluation.comparison.eval_chain" [style="dotted"];
		"langchain.evaluation.comparison" -> "langchain.evaluation.comparison.prompt" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.azure.fine_tuning" {
		label="litellm.llms.azure.fine_tuning";
		"litellm.llms.azure.fine_tuning" -> "litellm.llms.azure.fine_tuning.handler" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta" {
		label="google.ai.generativelanguage_v1beta";
		"google.ai.generativelanguage_v1beta" -> "google.ai.generativelanguage_v1beta.gapic_version" [style="dotted"];
		"google.ai.generativelanguage_v1beta" -> "google.ai.generativelanguage_v1beta.types" [style="dotted"];
		"google.ai.generativelanguage_v1beta" -> "google.ai.generativelanguage_v1beta.services" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.clarifai" {
		label="litellm.llms.clarifai";
		"litellm.llms.clarifai" -> "litellm.llms.clarifai.common_utils" [style="dotted"];
		"litellm.llms.clarifai" -> "litellm.llms.clarifai.chat" [style="dotted"];
	}
	subgraph "cluster_langchain_core.runnables" {
		label="langchain_core.runnables";
		"langchain_core.runnables" -> "langchain_core.runnables.base" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.branch" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.config" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.fallbacks" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.history" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.passthrough" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.router" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.utils" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.graph" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.retry" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.schema" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.configurable" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.graph_ascii" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.graph_png" [style="dotted"];
		"langchain_core.runnables" -> "langchain_core.runnables.graph_mermaid" [style="dotted"];
	}
	subgraph "cluster_tkinter" {
		label="tkinter";
		"tkinter" -> "tkinter.constants" [style="dotted"];
	}
	subgraph "cluster_langchain_core.load" {
		label="langchain_core.load";
		"langchain_core.load" -> "langchain_core.load.load" [style="dotted"];
		"langchain_core.load" -> "langchain_core.load.dump" [style="dotted"];
		"langchain_core.load" -> "langchain_core.load.serializable" [style="dotted"];
		"langchain_core.load" -> "langchain_core.load.mapping" [style="dotted"];
	}
	subgraph "cluster_openai.types.uploads" {
		label="openai.types.uploads";
		"openai.types.uploads" -> "openai.types.uploads.upload_part" [style="dotted"];
		"openai.types.uploads" -> "openai.types.uploads.part_create_params" [style="dotted"];
	}
	subgraph "cluster_async_timeout" {
		label="async_timeout";
	}
	subgraph "cluster_diskcache" {
		label="diskcache";
		"diskcache" -> "diskcache.core" [style="dotted"];
		"diskcache" -> "diskcache.fanout" [style="dotted"];
		"diskcache" -> "diskcache.persistent" [style="dotted"];
		"diskcache" -> "diskcache.recipes" [style="dotted"];
		"diskcache" -> "diskcache.djangocache" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.pdffolder" {
		label="datasets.packaged_modules.pdffolder";
		"datasets.packaged_modules.pdffolder" -> "datasets.packaged_modules.pdffolder.pdffolder" [style="dotted"];
	}
	subgraph "cluster_langchain_community.chains" {
		label="langchain_community.chains";
		"langchain_community.chains" -> "langchain_community.chains.openapi" [style="dotted"];
		"langchain_community.chains" -> "langchain_community.chains.pebblo_retrieval" [style="dotted"];
		"langchain_community.chains" -> "langchain_community.chains.llm_requests" [style="dotted"];
		"langchain_community.chains" -> "langchain_community.chains.graph_qa" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_jobs" {
		label="langchain_community.tools.google_jobs";
		"langchain_community.tools.google_jobs" -> "langchain_community.tools.google_jobs.tool" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.together_ai.completion" {
		label="litellm.llms.together_ai.completion";
		"litellm.llms.together_ai.completion" -> "litellm.llms.together_ai.completion.transformation" [style="dotted"];
	}
	subgraph "cluster_yt_dlp.extractor.youtube" {
		label="yt_dlp.extractor.youtube";
		"yt_dlp.extractor.youtube" -> "yt_dlp.extractor.youtube._base" [style="dotted"];
		"yt_dlp.extractor.youtube" -> "yt_dlp.extractor.youtube._clip" [style="dotted"];
		"yt_dlp.extractor.youtube" -> "yt_dlp.extractor.youtube._mistakes" [style="dotted"];
		"yt_dlp.extractor.youtube" -> "yt_dlp.extractor.youtube._notifications" [style="dotted"];
		"yt_dlp.extractor.youtube" -> "yt_dlp.extractor.youtube._redirect" [style="dotted"];
		"yt_dlp.extractor.youtube" -> "yt_dlp.extractor.youtube._search" [style="dotted"];
		"yt_dlp.extractor.youtube" -> "yt_dlp.extractor.youtube._tab" [style="dotted"];
		"yt_dlp.extractor.youtube" -> "yt_dlp.extractor.youtube._video" [style="dotted"];
	}
	subgraph "cluster_altair.expr" {
		label="altair.expr";
		"altair.expr" -> "altair.expr.core" [style="dotted"];
	}
	subgraph "cluster_gitdb.db" {
		label="gitdb.db";
		"gitdb.db" -> "gitdb.db.base" [style="dotted"];
		"gitdb.db" -> "gitdb.db.loose" [style="dotted"];
		"gitdb.db" -> "gitdb.db.mem" [style="dotted"];
		"gitdb.db" -> "gitdb.db.pack" [style="dotted"];
		"gitdb.db" -> "gitdb.db.git" [style="dotted"];
		"gitdb.db" -> "gitdb.db.ref" [style="dotted"];
	}
	subgraph "cluster_pandas.core.groupby" {
		label="pandas.core.groupby";
		"pandas.core.groupby" -> "pandas.core.groupby.ops" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.grouper" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.base" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.numba_" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.groupby" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.generic" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.PanelGroupBy" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.categorical" [style="dotted"];
		"pandas.core.groupby" -> "pandas.core.groupby.indexing" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.filters" {
		label="prompt_toolkit.filters";
		"prompt_toolkit.filters" -> "prompt_toolkit.filters.emacs_insert_mode" [style="dotted"];
		"prompt_toolkit.filters" -> "prompt_toolkit.filters.vi_insert_mode" [style="dotted"];
		"prompt_toolkit.filters" -> "prompt_toolkit.filters.vi_mode" [style="dotted"];
		"prompt_toolkit.filters" -> "prompt_toolkit.filters.is_searching" [style="dotted"];
		"prompt_toolkit.filters" -> "prompt_toolkit.filters.vi_insert_multiple_mode" [style="dotted"];
		"prompt_toolkit.filters" -> "prompt_toolkit.filters.has_completions" [style="dotted"];
		"prompt_toolkit.filters" -> "prompt_toolkit.filters.is_done" [style="dotted"];
		"prompt_toolkit.filters" -> "prompt_toolkit.filters.app" [style="dotted"];
		"prompt_toolkit.filters" -> "prompt_toolkit.filters.base" [style="dotted"];
		"prompt_toolkit.filters" -> "prompt_toolkit.filters.cli" [style="dotted"];
		"prompt_toolkit.filters" -> "prompt_toolkit.filters.utils" [style="dotted"];
	}
	subgraph "cluster_langchain_community" {
		label="langchain_community";
		"langchain_community" -> "langchain_community.vectorstores" [style="dotted"];
		"langchain_community" -> "langchain_community.utils" [style="dotted"];
		"langchain_community" -> "langchain_community.retrievers" [style="dotted"];
		"langchain_community" -> "langchain_community.document_transformers" [style="dotted"];
		"langchain_community" -> "langchain_community.tools" [style="dotted"];
		"langchain_community" -> "langchain_community.output_parsers" [style="dotted"];
		"langchain_community" -> "langchain_community.chat_models" [style="dotted"];
		"langchain_community" -> "langchain_community.adapters" [style="dotted"];
		"langchain_community" -> "langchain_community.document_loaders" [style="dotted"];
		"langchain_community" -> "langchain_community.query_constructors" [style="dotted"];
		"langchain_community" -> "langchain_community.storage" [style="dotted"];
		"langchain_community" -> "langchain_community.graphs" [style="dotted"];
		"langchain_community" -> "langchain_community.embeddings" [style="dotted"];
		"langchain_community" -> "langchain_community.utilities" [style="dotted"];
		"langchain_community" -> "langchain_community.llms" [style="dotted"];
		"langchain_community" -> "langchain_community.docstore" [style="dotted"];
		"langchain_community" -> "langchain_community.agent_toolkits" [style="dotted"];
		"langchain_community" -> "langchain_community.chains" [style="dotted"];
		"langchain_community" -> "langchain_community.memory" [style="dotted"];
		"langchain_community" -> "langchain_community.chat_message_histories" [style="dotted"];
	}
	subgraph "cluster_langchain_community.chains.openapi" {
		label="langchain_community.chains.openapi";
		"langchain_community.chains.openapi" -> "langchain_community.chains.openapi.chain" [style="dotted"];
		"langchain_community.chains.openapi" -> "langchain_community.chains.openapi.response_chain" [style="dotted"];
		"langchain_community.chains.openapi" -> "langchain_community.chains.openapi.prompts" [style="dotted"];
		"langchain_community.chains.openapi" -> "langchain_community.chains.openapi.requests_chain" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.bedrock.embed" {
		label="litellm.llms.bedrock.embed";
		"litellm.llms.bedrock.embed" -> "litellm.llms.bedrock.embed.embedding" [style="dotted"];
		"litellm.llms.bedrock.embed" -> "litellm.llms.bedrock.embed.amazon_titan_g1_transformation" [style="dotted"];
		"litellm.llms.bedrock.embed" -> "litellm.llms.bedrock.embed.amazon_titan_multimodal_transformation" [style="dotted"];
		"litellm.llms.bedrock.embed" -> "litellm.llms.bedrock.embed.amazon_titan_v2_transformation" [style="dotted"];
		"litellm.llms.bedrock.embed" -> "litellm.llms.bedrock.embed.cohere_transformation" [style="dotted"];
	}
	subgraph "cluster_docutils.utils" {
		label="docutils.utils";
		"docutils.utils" -> "docutils.utils.punctuation_chars" [style="dotted"];
		"docutils.utils" -> "docutils.utils.roman" [style="dotted"];
		"docutils.utils" -> "docutils.utils.urischemes" [style="dotted"];
		"docutils.utils" -> "docutils.utils.smartquotes" [style="dotted"];
		"docutils.utils" -> "docutils.utils.code_analyzer" [style="dotted"];
		"docutils.utils" -> "docutils.utils.math" [style="dotted"];
	}
	subgraph "cluster_numpy.rec" {
		label="numpy.rec";
	}
	subgraph "cluster_streamlit.commands" {
		label="streamlit.commands";
		"streamlit.commands" -> "streamlit.commands.experimental_query_params" [style="dotted"];
		"streamlit.commands" -> "streamlit.commands.echo" [style="dotted"];
		"streamlit.commands" -> "streamlit.commands.logo" [style="dotted"];
		"streamlit.commands" -> "streamlit.commands.navigation" [style="dotted"];
		"streamlit.commands" -> "streamlit.commands.page_config" [style="dotted"];
		"streamlit.commands" -> "streamlit.commands.execution_control" [style="dotted"];
	}
	subgraph "cluster_urllib3.contrib" {
		label="urllib3.contrib";
		"urllib3.contrib" -> "urllib3.contrib._appengine_environ" [style="dotted"];
		"urllib3.contrib" -> "urllib3.contrib.pyopenssl" [style="dotted"];
		"urllib3.contrib" -> "urllib3.contrib.socks" [style="dotted"];
		"urllib3.contrib" -> "urllib3.contrib.appengine" [style="dotted"];
		"urllib3.contrib" -> "urllib3.contrib.ntlmpool" [style="dotted"];
		"urllib3.contrib" -> "urllib3.contrib.securetransport" [style="dotted"];
		"urllib3.contrib" -> "urllib3.contrib._securetransport" [style="dotted"];
	}
	subgraph "cluster_pydantic_settings.sources.providers" {
		label="pydantic_settings.sources.providers";
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.aws" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.azure" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.cli" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.dotenv" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.env" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.gcp" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.json" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.pyproject" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.secrets" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.toml" [style="dotted"];
		"pydantic_settings.sources.providers" -> "pydantic_settings.sources.providers.yaml" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.audiofolder" {
		label="datasets.packaged_modules.audiofolder";
		"datasets.packaged_modules.audiofolder" -> "datasets.packaged_modules.audiofolder.audiofolder" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.hosted_vllm" {
		label="litellm.llms.hosted_vllm";
		"litellm.llms.hosted_vllm" -> "litellm.llms.hosted_vllm.chat" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.steam" {
		label="langchain_community.agent_toolkits.steam";
		"langchain_community.agent_toolkits.steam" -> "langchain_community.agent_toolkits.steam.toolkit" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.json" {
		label="langchain_community.tools.json";
		"langchain_community.tools.json" -> "langchain_community.tools.json.tool" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.nscale.chat" {
		label="litellm.llms.nscale.chat";
		"litellm.llms.nscale.chat" -> "litellm.llms.nscale.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_altair.utils" {
		label="altair.utils";
		"altair.utils" -> "altair.utils.core" [style="dotted"];
		"altair.utils" -> "altair.utils.deprecation" [style="dotted"];
		"altair.utils" -> "altair.utils.html" [style="dotted"];
		"altair.utils" -> "altair.utils.plugin_registry" [style="dotted"];
		"altair.utils" -> "altair.utils.schemapi" [style="dotted"];
		"altair.utils" -> "altair.utils.mimebundle" [style="dotted"];
		"altair.utils" -> "altair.utils._show" [style="dotted"];
		"altair.utils" -> "altair.utils.display" [style="dotted"];
		"altair.utils" -> "altair.utils._vegafusion_data" [style="dotted"];
		"altair.utils" -> "altair.utils._importers" [style="dotted"];
		"altair.utils" -> "altair.utils.data" [style="dotted"];
		"altair.utils" -> "altair.utils._dfi_types" [style="dotted"];
		"altair.utils" -> "altair.utils.compiler" [style="dotted"];
		"altair.utils" -> "altair.utils.save" [style="dotted"];
		"altair.utils" -> "altair.utils.server" [style="dotted"];
		"altair.utils" -> "altair.utils._transformed_data" [style="dotted"];
		"altair.utils" -> "altair.utils.selection" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.lexers" {
		label="prompt_toolkit.lexers";
		"prompt_toolkit.lexers" -> "prompt_toolkit.lexers.base" [style="dotted"];
		"prompt_toolkit.lexers" -> "prompt_toolkit.lexers.pygments" [style="dotted"];
	}
	subgraph "cluster_langchain_core.outputs" {
		label="langchain_core.outputs";
		"langchain_core.outputs" -> "langchain_core.outputs.chat_generation" [style="dotted"];
		"langchain_core.outputs" -> "langchain_core.outputs.chat_result" [style="dotted"];
		"langchain_core.outputs" -> "langchain_core.outputs.generation" [style="dotted"];
		"langchain_core.outputs" -> "langchain_core.outputs.llm_result" [style="dotted"];
		"langchain_core.outputs" -> "langchain_core.outputs.run_info" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.custom_httpx" {
		label="litellm.llms.custom_httpx";
		"litellm.llms.custom_httpx" -> "litellm.llms.custom_httpx.http_handler" [style="dotted"];
		"litellm.llms.custom_httpx" -> "litellm.llms.custom_httpx.httpx_handler" [style="dotted"];
		"litellm.llms.custom_httpx" -> "litellm.llms.custom_httpx.aiohttp_handler" [style="dotted"];
		"litellm.llms.custom_httpx" -> "litellm.llms.custom_httpx.llm_http_handler" [style="dotted"];
	}
	subgraph "cluster_langsmith.testing" {
		label="langsmith.testing";
		"langsmith.testing" -> "langsmith.testing._internal" [style="dotted"];
	}
	subgraph "cluster_rsa" {
		label="rsa";
		"rsa" -> "rsa.transform" [style="dotted"];
		"rsa" -> "rsa.parallel" [style="dotted"];
		"rsa" -> "rsa.key" [style="dotted"];
		"rsa" -> "rsa.pkcs1" [style="dotted"];
		"rsa" -> "rsa.common" [style="dotted"];
		"rsa" -> "rsa.core" [style="dotted"];
		"rsa" -> "rsa.prime" [style="dotted"];
		"rsa" -> "rsa.pem" [style="dotted"];
		"rsa" -> "rsa.randnum" [style="dotted"];
		"rsa" -> "rsa.asn1" [style="dotted"];
	}
	subgraph "cluster_pandas.compat.numpy" {
		label="pandas.compat.numpy";
		"pandas.compat.numpy" -> "pandas.compat.numpy.function" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.openrouter.chat" {
		label="litellm.llms.openrouter.chat";
		"litellm.llms.openrouter.chat" -> "litellm.llms.openrouter.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.batch_completion" {
		label="litellm.batch_completion";
		"litellm.batch_completion" -> "litellm.batch_completion.main" [style="dotted"];
	}
	subgraph "cluster_langchain_community.utils" {
		label="langchain_community.utils";
		"langchain_community.utils" -> "langchain_community.utils.math" [style="dotted"];
		"langchain_community.utils" -> "langchain_community.utils.user_agent" [style="dotted"];
		"langchain_community.utils" -> "langchain_community.utils.openai" [style="dotted"];
		"langchain_community.utils" -> "langchain_community.utils.google" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.together_ai" {
		label="litellm.llms.together_ai";
		"litellm.llms.together_ai" -> "litellm.llms.together_ai.cost_calculator" [style="dotted"];
		"litellm.llms.together_ai" -> "litellm.llms.together_ai.chat" [style="dotted"];
		"litellm.llms.together_ai" -> "litellm.llms.together_ai.rerank" [style="dotted"];
		"litellm.llms.together_ai" -> "litellm.llms.together_ai.completion" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.litellm_proxy" {
		label="litellm.llms.litellm_proxy";
		"litellm.llms.litellm_proxy" -> "litellm.llms.litellm_proxy.chat" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vertex_ai.batches" {
		label="litellm.llms.vertex_ai.batches";
		"litellm.llms.vertex_ai.batches" -> "litellm.llms.vertex_ai.batches.handler" [style="dotted"];
		"litellm.llms.vertex_ai.batches" -> "litellm.llms.vertex_ai.batches.transformation" [style="dotted"];
	}
	subgraph "cluster_streamlit.components.lib" {
		label="streamlit.components.lib";
		"streamlit.components.lib" -> "streamlit.components.lib.local_component_registry" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.response_api_endpoints" {
		label="litellm.proxy.response_api_endpoints";
		"litellm.proxy.response_api_endpoints" -> "litellm.proxy.response_api_endpoints.endpoints" [style="dotted"];
	}
	subgraph "cluster_markdown_it.common" {
		label="markdown_it.common";
		"markdown_it.common" -> "markdown_it.common.normalize_url" [style="dotted"];
		"markdown_it.common" -> "markdown_it.common.utils" [style="dotted"];
		"markdown_it.common" -> "markdown_it.common.html_re" [style="dotted"];
		"markdown_it.common" -> "markdown_it.common.entities" [style="dotted"];
		"markdown_it.common" -> "markdown_it.common.html_blocks" [style="dotted"];
	}
	subgraph "cluster_langsmith._internal" {
		label="langsmith._internal";
		"langsmith._internal" -> "langsmith._internal._aiter" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._patch" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._orjson" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._background_thread" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._beta_decorator" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._compressed_traces" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._constants" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._multipart" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._operations" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._serde" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal.otel" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._edit_distance" [style="dotted"];
		"langsmith._internal" -> "langsmith._internal._embedding_distance" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.featherless_ai" {
		label="litellm.llms.featherless_ai";
		"litellm.llms.featherless_ai" -> "litellm.llms.featherless_ai.chat" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.nscale" {
		label="litellm.llms.nscale";
		"litellm.llms.nscale" -> "litellm.llms.nscale.chat" [style="dotted"];
	}
	subgraph "cluster_debugpy" {
		label="debugpy";
		"debugpy" -> "debugpy._version" [style="dotted"];
		"debugpy" -> "debugpy.adapter" [style="dotted"];
		"debugpy" -> "debugpy.public_api" [style="dotted"];
		"debugpy" -> "debugpy.common" [style="dotted"];
		"debugpy" -> "debugpy.server" [style="dotted"];
		"debugpy" -> "debugpy._vendored" [style="dotted"];
	}
	subgraph "cluster_litellm.fine_tuning" {
		label="litellm.fine_tuning";
		"litellm.fine_tuning" -> "litellm.fine_tuning.main" [style="dotted"];
	}
	subgraph "cluster_litellm.litellm_core_utils.llm_cost_calc" {
		label="litellm.litellm_core_utils.llm_cost_calc";
		"litellm.litellm_core_utils.llm_cost_calc" -> "litellm.litellm_core_utils.llm_cost_calc.tool_call_cost_tracking" [style="dotted"];
		"litellm.litellm_core_utils.llm_cost_calc" -> "litellm.litellm_core_utils.llm_cost_calc.utils" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.nlp_cloud" {
		label="litellm.llms.nlp_cloud";
		"litellm.llms.nlp_cloud" -> "litellm.llms.nlp_cloud.chat" [style="dotted"];
		"litellm.llms.nlp_cloud" -> "litellm.llms.nlp_cloud.common_utils" [style="dotted"];
	}
	subgraph "cluster_litellm.assistants" {
		label="litellm.assistants";
		"litellm.assistants" -> "litellm.assistants.main" [style="dotted"];
		"litellm.assistants" -> "litellm.assistants.utils" [style="dotted"];
	}
	subgraph "cluster_google" {
		label="google";
		"google" -> "google.auth" [style="dotted"];
		"google" -> "google.oauth2" [style="dotted"];
		"google" -> "google._upb" [style="dotted"];
		"google" -> "google.protobuf" [style="dotted"];
		"google" -> "google.cloud" [style="dotted"];
		"google" -> "google.api_core" [style="dotted"];
		"google" -> "google.rpc" [style="dotted"];
		"google" -> "google.api" [style="dotted"];
		"google" -> "google.longrunning" [style="dotted"];
		"google" -> "google.ai" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.azure.completion" {
		label="litellm.llms.azure.completion";
		"litellm.llms.azure.completion" -> "litellm.llms.azure.completion.handler" [style="dotted"];
		"litellm.llms.azure.completion" -> "litellm.llms.azure.completion.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.gemini.files" {
		label="litellm.llms.gemini.files";
		"litellm.llms.gemini.files" -> "litellm.llms.gemini.files.transformation" [style="dotted"];
	}
	subgraph "cluster_narwhals.stable.v1" {
		label="narwhals.stable.v1";
		"narwhals.stable.v1" -> "narwhals.stable.v1.dtypes" [style="dotted"];
		"narwhals.stable.v1" -> "narwhals.stable.v1.dependencies" [style="dotted"];
		"narwhals.stable.v1" -> "narwhals.stable.v1._namespace" [style="dotted"];
		"narwhals.stable.v1" -> "narwhals.stable.v1._dtypes" [style="dotted"];
		"narwhals.stable.v1" -> "narwhals.stable.v1.typing" [style="dotted"];
	}
	subgraph "cluster_streamlit.runtime" {
		label="streamlit.runtime";
		"streamlit.runtime" -> "streamlit.runtime.caching" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.runtime" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.session_manager" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.connection_factory" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.fragment" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.metrics_util" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.secrets" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.context" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.forward_msg_cache" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.pages_manager" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.uploaded_file_manager" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.stats" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.scriptrunner" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.scriptrunner_utils" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.app_session" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.script_data" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.forward_msg_queue" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.state" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.media_file_manager" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.memory_session_storage" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.websocket_session_manager" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.media_file_storage" [style="dotted"];
		"streamlit.runtime" -> "streamlit.runtime.context_util" [style="dotted"];
	}
	subgraph "cluster_gitdb.utils" {
		label="gitdb.utils";
		"gitdb.utils" -> "gitdb.utils.encoding" [style="dotted"];
	}
	subgraph "cluster_setuptools" {
		label="setuptools";
		"setuptools" -> "setuptools._deprecation_warning" [style="dotted"];
		"setuptools" -> "setuptools.version" [style="dotted"];
		"setuptools" -> "setuptools.extension" [style="dotted"];
		"setuptools" -> "setuptools.windows_support" [style="dotted"];
		"setuptools" -> "setuptools.dist" [style="dotted"];
		"setuptools" -> "setuptools.depends" [style="dotted"];
		"setuptools" -> "setuptools.monkey" [style="dotted"];
		"setuptools" -> "setuptools.msvc" [style="dotted"];
		"setuptools" -> "setuptools._vendor" [style="dotted"];
		"setuptools" -> "setuptools._imp" [style="dotted"];
		"setuptools" -> "setuptools.py34compat" [style="dotted"];
		"setuptools" -> "setuptools.extern" [style="dotted"];
		"setuptools" -> "setuptools.command" [style="dotted"];
		"setuptools" -> "setuptools.config" [style="dotted"];
		"setuptools" -> "setuptools.installer" [style="dotted"];
		"setuptools" -> "setuptools.wheel" [style="dotted"];
		"setuptools" -> "setuptools.unicode_utils" [style="dotted"];
		"setuptools" -> "setuptools.glob" [style="dotted"];
	}
	subgraph "cluster_arrow" {
		label="arrow";
		"arrow" -> "arrow._version" [style="dotted"];
		"arrow" -> "arrow.locales" [style="dotted"];
		"arrow" -> "arrow.formatter" [style="dotted"];
		"arrow" -> "arrow.parser" [style="dotted"];
		"arrow" -> "arrow.api" [style="dotted"];
		"arrow" -> "arrow.arrow" [style="dotted"];
		"arrow" -> "arrow.factory" [style="dotted"];
		"arrow" -> "arrow.constants" [style="dotted"];
		"arrow" -> "arrow.util" [style="dotted"];
	}
	subgraph "cluster_litellm.responses" {
		label="litellm.responses";
		"litellm.responses" -> "litellm.responses.litellm_completion_transformation" [style="dotted"];
		"litellm.responses" -> "litellm.responses.utils" [style="dotted"];
		"litellm.responses" -> "litellm.responses.streaming_iterator" [style="dotted"];
		"litellm.responses" -> "litellm.responses.main" [style="dotted"];
	}
	subgraph "cluster_numpy" {
		label="numpy";
		"numpy" -> "numpy._globals" [style="dotted"];
		"numpy" -> "numpy._expired_attrs_2_0" [style="dotted"];
		"numpy" -> "numpy.version" [style="dotted"];
		"numpy" -> "numpy._distributor_init_local" [style="dotted"];
		"numpy" -> "numpy._distributor_init" [style="dotted"];
		"numpy" -> "numpy.__config__" [style="dotted"];
		"numpy" -> "numpy._core" [style="dotted"];
		"numpy" -> "numpy.lib" [style="dotted"];
		"numpy" -> "numpy.matrixlib" [style="dotted"];
		"numpy" -> "numpy.linalg" [style="dotted"];
		"numpy" -> "numpy.fft" [style="dotted"];
		"numpy" -> "numpy.dtypes" [style="dotted"];
		"numpy" -> "numpy.random" [style="dotted"];
		"numpy" -> "numpy.polynomial" [style="dotted"];
		"numpy" -> "numpy.ma" [style="dotted"];
		"numpy" -> "numpy.ctypeslib" [style="dotted"];
		"numpy" -> "numpy.exceptions" [style="dotted"];
		"numpy" -> "numpy.testing" [style="dotted"];
		"numpy" -> "numpy.matlib" [style="dotted"];
		"numpy" -> "numpy.f2py" [style="dotted"];
		"numpy" -> "numpy.typing" [style="dotted"];
		"numpy" -> "numpy.rec" [style="dotted"];
		"numpy" -> "numpy.char" [style="dotted"];
		"numpy" -> "numpy.core" [style="dotted"];
		"numpy" -> "numpy.strings" [style="dotted"];
		"numpy" -> "numpy._pytesttester" [style="dotted"];
		"numpy" -> "numpy.byte_bounds" [style="dotted"];
		"numpy" -> "numpy._typing" [style="dotted"];
		"numpy" -> "numpy._utils" [style="dotted"];
	}
	subgraph "cluster_anyio.abc" {
		label="anyio.abc";
		"anyio.abc" -> "anyio.abc._eventloop" [style="dotted"];
		"anyio.abc" -> "anyio.abc._resources" [style="dotted"];
		"anyio.abc" -> "anyio.abc._sockets" [style="dotted"];
		"anyio.abc" -> "anyio.abc._streams" [style="dotted"];
		"anyio.abc" -> "anyio.abc._subprocesses" [style="dotted"];
		"anyio.abc" -> "anyio.abc._tasks" [style="dotted"];
		"anyio.abc" -> "anyio.abc._testing" [style="dotted"];
	}
	subgraph "cluster_pydeck.nbextension" {
		label="pydeck.nbextension";
	}
	subgraph "cluster_litellm.llms.vertex_ai.fine_tuning" {
		label="litellm.llms.vertex_ai.fine_tuning";
		"litellm.llms.vertex_ai.fine_tuning" -> "litellm.llms.vertex_ai.fine_tuning.handler" [style="dotted"];
	}
	subgraph "cluster_langchain_core.messages" {
		label="langchain_core.messages";
		"langchain_core.messages" -> "langchain_core.messages.ai" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.base" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.chat" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.content_blocks" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.function" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.human" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.modifier" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.system" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.tool" [style="dotted"];
		"langchain_core.messages" -> "langchain_core.messages.utils" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.base_llm.image_generation" {
		label="litellm.llms.base_llm.image_generation";
		"litellm.llms.base_llm.image_generation" -> "litellm.llms.base_llm.image_generation.transformation" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.engine" {
		label="sqlalchemy.engine";
		"sqlalchemy.engine" -> "sqlalchemy.engine.processors" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.characteristics" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.cursor" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.events" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.util" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.base" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.create" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.interfaces" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.mock" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.reflection" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.result" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.row" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.url" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine._py_row" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine._py_util" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine.default" [style="dotted"];
		"sqlalchemy.engine" -> "sqlalchemy.engine._py_processors" [style="dotted"];
	}
	subgraph "cluster_langchain._api" {
		label="langchain._api";
		"langchain._api" -> "langchain._api.deprecation" [style="dotted"];
		"langchain._api" -> "langchain._api.module_import" [style="dotted"];
		"langchain._api" -> "langchain._api.interactive_env" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.format_scratchpad" {
		label="langchain.agents.format_scratchpad";
		"langchain.agents.format_scratchpad" -> "langchain.agents.format_scratchpad.log" [style="dotted"];
		"langchain.agents.format_scratchpad" -> "langchain.agents.format_scratchpad.log_to_messages" [style="dotted"];
		"langchain.agents.format_scratchpad" -> "langchain.agents.format_scratchpad.openai_functions" [style="dotted"];
		"langchain.agents.format_scratchpad" -> "langchain.agents.format_scratchpad.tools" [style="dotted"];
		"langchain.agents.format_scratchpad" -> "langchain.agents.format_scratchpad.xml" [style="dotted"];
		"langchain.agents.format_scratchpad" -> "langchain.agents.format_scratchpad.openai_tools" [style="dotted"];
	}
	subgraph "cluster_sniffio" {
		label="sniffio";
		"sniffio" -> "sniffio._version" [style="dotted"];
		"sniffio" -> "sniffio._impl" [style="dotted"];
	}
	subgraph "cluster_markdown_it.rules_block" {
		label="markdown_it.rules_block";
		"markdown_it.rules_block" -> "markdown_it.rules_block.blockquote" [style="dotted"];
		"markdown_it.rules_block" -> "markdown_it.rules_block.code" [style="dotted"];
		"markdown_it.rules_block" -> "markdown_it.rules_block.fence" [style="dotted"];
		"markdown_it.rules_block" -> "markdown_it.rules_block.heading" [style="dotted"];
		"markdown_it.rules_block" -> "markdown_it.rules_block.hr" [style="dotted"];
		"markdown_it.rules_block" -> "markdown_it.rules_block.html_block" [style="dotted"];
		"markdown_it.rules_block" -> "markdown_it.rules_block.lheading" [style="dotted"];
		"markdown_it.rules_block" -> "markdown_it.rules_block.list" [style="dotted"];
		"markdown_it.rules_block" -> "markdown_it.rules_block.paragraph" [style="dotted"];
		"markdown_it.rules_block" -> "markdown_it.rules_block.reference" [style="dotted"];
		"markdown_it.rules_block" -> "markdown_it.rules_block.state_block" [style="dotted"];
		"markdown_it.rules_block" -> "markdown_it.rules_block.table" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.meta_llama" {
		label="litellm.llms.meta_llama";
		"litellm.llms.meta_llama" -> "litellm.llms.meta_llama.chat" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.deepseek.chat" {
		label="litellm.llms.deepseek.chat";
		"litellm.llms.deepseek.chat" -> "litellm.llms.deepseek.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.steamship_image_generation" {
		label="langchain_community.tools.steamship_image_generation";
		"langchain_community.tools.steamship_image_generation" -> "langchain_community.tools.steamship_image_generation.tool" [style="dotted"];
		"langchain_community.tools.steamship_image_generation" -> "langchain_community.tools.steamship_image_generation.utils" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.anthropic_endpoints" {
		label="litellm.proxy.anthropic_endpoints";
		"litellm.proxy.anthropic_endpoints" -> "litellm.proxy.anthropic_endpoints.endpoints" [style="dotted"];
	}
	subgraph "cluster_streamlit.runtime.caching" {
		label="streamlit.runtime.caching";
		"streamlit.runtime.caching" -> "streamlit.runtime.caching.cache_data_api" [style="dotted"];
		"streamlit.runtime.caching" -> "streamlit.runtime.caching.cache_errors" [style="dotted"];
		"streamlit.runtime.caching" -> "streamlit.runtime.caching.cache_resource_api" [style="dotted"];
		"streamlit.runtime.caching" -> "streamlit.runtime.caching.legacy_cache_api" [style="dotted"];
		"streamlit.runtime.caching" -> "streamlit.runtime.caching.storage" [style="dotted"];
		"streamlit.runtime.caching" -> "streamlit.runtime.caching.cache_utils" [style="dotted"];
		"streamlit.runtime.caching" -> "streamlit.runtime.caching.cached_message_replay" [style="dotted"];
		"streamlit.runtime.caching" -> "streamlit.runtime.caching.hashing" [style="dotted"];
		"streamlit.runtime.caching" -> "streamlit.runtime.caching.cache_type" [style="dotted"];
	}
	subgraph "cluster_openai.lib.streaming.responses" {
		label="openai.lib.streaming.responses";
		"openai.lib.streaming.responses" -> "openai.lib.streaming.responses._events" [style="dotted"];
		"openai.lib.streaming.responses" -> "openai.lib.streaming.responses._responses" [style="dotted"];
		"openai.lib.streaming.responses" -> "openai.lib.streaming.responses._types" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.watsonx" {
		label="litellm.llms.watsonx";
		"litellm.llms.watsonx" -> "litellm.llms.watsonx.common_utils" [style="dotted"];
		"litellm.llms.watsonx" -> "litellm.llms.watsonx.chat" [style="dotted"];
		"litellm.llms.watsonx" -> "litellm.llms.watsonx.embed" [style="dotted"];
		"litellm.llms.watsonx" -> "litellm.llms.watsonx.completion" [style="dotted"];
	}
	subgraph "cluster_pkg_resources._vendor" {
		label="pkg_resources._vendor";
		"pkg_resources._vendor" -> "pkg_resources._vendor.appdirs" [style="dotted"];
		"pkg_resources._vendor" -> "pkg_resources._vendor.pyparsing" [style="dotted"];
		"pkg_resources._vendor" -> "pkg_resources._vendor.packaging" [style="dotted"];
	}
	subgraph "cluster_litellm.secret_managers" {
		label="litellm.secret_managers";
		"litellm.secret_managers" -> "litellm.secret_managers.main" [style="dotted"];
		"litellm.secret_managers" -> "litellm.secret_managers.aws_secret_manager" [style="dotted"];
		"litellm.secret_managers" -> "litellm.secret_managers.google_kms" [style="dotted"];
		"litellm.secret_managers" -> "litellm.secret_managers.aws_secret_manager_v2" [style="dotted"];
		"litellm.secret_managers" -> "litellm.secret_managers.google_secret_manager" [style="dotted"];
		"litellm.secret_managers" -> "litellm.secret_managers.hashicorp_secret_manager" [style="dotted"];
		"litellm.secret_managers" -> "litellm.secret_managers.base_secret_manager" [style="dotted"];
		"litellm.secret_managers" -> "litellm.secret_managers.get_azure_ad_token_provider" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.ai21" {
		label="litellm.llms.ai21";
		"litellm.llms.ai21" -> "litellm.llms.ai21.chat" [style="dotted"];
	}
	subgraph "cluster_docutils.writers.odf_odt" {
		label="docutils.writers.odf_odt";
		"docutils.writers.odf_odt" -> "docutils.writers.odf_odt.pygmentsformatter" [style="dotted"];
		"docutils.writers.odf_odt" -> "docutils.writers.odf_odt.prepstyles" [style="dotted"];
	}
	subgraph "cluster_yt_dlp.compat.urllib" {
		label="yt_dlp.compat.urllib";
		"yt_dlp.compat.urllib" -> "yt_dlp.compat.urllib.request" [style="dotted"];
	}
	subgraph "cluster_litellm.router_utils" {
		label="litellm.router_utils";
		"litellm.router_utils" -> "litellm.router_utils.get_retry_from_policy" [style="dotted"];
		"litellm.router_utils" -> "litellm.router_utils.add_retry_fallback_headers" [style="dotted"];
		"litellm.router_utils" -> "litellm.router_utils.batch_utils" [style="dotted"];
		"litellm.router_utils" -> "litellm.router_utils.client_initalization_utils" [style="dotted"];
		"litellm.router_utils" -> "litellm.router_utils.clientside_credential_handler" [style="dotted"];
		"litellm.router_utils" -> "litellm.router_utils.cooldown_cache" [style="dotted"];
		"litellm.router_utils" -> "litellm.router_utils.cooldown_handlers" [style="dotted"];
		"litellm.router_utils" -> "litellm.router_utils.fallback_event_handlers" [style="dotted"];
		"litellm.router_utils" -> "litellm.router_utils.handle_error" [style="dotted"];
		"litellm.router_utils" -> "litellm.router_utils.pattern_match_deployments" [style="dotted"];
		"litellm.router_utils" -> "litellm.router_utils.router_callbacks" [style="dotted"];
		"litellm.router_utils" -> "litellm.router_utils.pre_call_checks" [style="dotted"];
		"litellm.router_utils" -> "litellm.router_utils.prompt_caching_cache" [style="dotted"];
		"litellm.router_utils" -> "litellm.router_utils.cooldown_callbacks" [style="dotted"];
	}
	subgraph "cluster_traitlets.config" {
		label="traitlets.config";
		"traitlets.config" -> "traitlets.config.Application" [style="dotted"];
		"traitlets.config" -> "traitlets.config.argcomplete_config" [style="dotted"];
		"traitlets.config" -> "traitlets.config.application" [style="dotted"];
		"traitlets.config" -> "traitlets.config.configurable" [style="dotted"];
		"traitlets.config" -> "traitlets.config.loader" [style="dotted"];
	}
	subgraph "cluster_pydantic.v1" {
		label="pydantic.v1";
		"pydantic.v1" -> "pydantic.v1.errors" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.dataclasses" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.annotated_types" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.class_validators" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.config" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.decorator" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.env_settings" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.error_wrappers" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.fields" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.main" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.networks" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.parse" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.tools" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.types" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.version" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.datetime_parse" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.utils" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.validators" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.typing" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.json" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.schema" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.color" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1._hypothesis_plugin" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.generics" [style="dotted"];
		"pydantic.v1" -> "pydantic.v1.mypy" [style="dotted"];
	}
	subgraph "cluster_litellm.integrations.azure_storage" {
		label="litellm.integrations.azure_storage";
		"litellm.integrations.azure_storage" -> "litellm.integrations.azure_storage.azure_storage" [style="dotted"];
	}
	subgraph "cluster_pandas.core.indexers" {
		label="pandas.core.indexers";
		"pandas.core.indexers" -> "pandas.core.indexers.utils" [style="dotted"];
		"pandas.core.indexers" -> "pandas.core.indexers.objects" [style="dotted"];
	}
	subgraph "cluster_datasets.filesystems" {
		label="datasets.filesystems";
		"datasets.filesystems" -> "datasets.filesystems.compression" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.pandas" {
		label="datasets.packaged_modules.pandas";
		"datasets.packaged_modules.pandas" -> "datasets.packaged_modules.pandas.pandas" [style="dotted"];
	}
	subgraph "cluster_langsmith.evaluation" {
		label="langsmith.evaluation";
		"langsmith.evaluation" -> "langsmith.evaluation._arunner" [style="dotted"];
		"langsmith.evaluation" -> "langsmith.evaluation._runner" [style="dotted"];
		"langsmith.evaluation" -> "langsmith.evaluation.evaluator" [style="dotted"];
		"langsmith.evaluation" -> "langsmith.evaluation.string_evaluator" [style="dotted"];
		"langsmith.evaluation" -> "langsmith.evaluation.integrations" [style="dotted"];
		"langsmith.evaluation" -> "langsmith.evaluation._name_generation" [style="dotted"];
	}
	subgraph "cluster_dbm" {
		label="dbm";
		"dbm" -> "dbm.ndbm" [style="dotted"];
		"dbm" -> "dbm.dumb" [style="dotted"];
		"dbm" -> "dbm.gnu" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.slack" {
		label="langchain_community.agent_toolkits.slack";
		"langchain_community.agent_toolkits.slack" -> "langchain_community.agent_toolkits.slack.toolkit" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.permission_service" {
		label="google.ai.generativelanguage_v1beta.services.permission_service";
		"google.ai.generativelanguage_v1beta.services.permission_service" -> "google.ai.generativelanguage_v1beta.services.permission_service.pagers" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.permission_service" -> "google.ai.generativelanguage_v1beta.services.permission_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.permission_service" -> "google.ai.generativelanguage_v1beta.services.permission_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.permission_service" -> "google.ai.generativelanguage_v1beta.services.permission_service.transports" [style="dotted"];
	}
	subgraph "cluster_openai.resources.chat" {
		label="openai.resources.chat";
		"openai.resources.chat" -> "openai.resources.chat.chat" [style="dotted"];
		"openai.resources.chat" -> "openai.resources.chat.completions" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.cache_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.cache_service.transports";
		"google.ai.generativelanguage_v1beta.services.cache_service.transports" -> "google.ai.generativelanguage_v1beta.services.cache_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.cache_service.transports" -> "google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.cache_service.transports" -> "google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.cache_service.transports" -> "google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.cache_service.transports" -> "google.ai.generativelanguage_v1beta.services.cache_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_pkg_resources.extern" {
		label="pkg_resources.extern";
		"pkg_resources.extern" -> "pkg_resources.extern.appdirs" [style="dotted"];
		"pkg_resources.extern" -> "pkg_resources.extern.packaging" [style="dotted"];
	}
	subgraph "cluster_numpy.testing._private" {
		label="numpy.testing._private";
		"numpy.testing._private" -> "numpy.testing._private.extbuild" [style="dotted"];
		"numpy.testing._private" -> "numpy.testing._private.utils" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.databricks.embed" {
		label="litellm.llms.databricks.embed";
		"litellm.llms.databricks.embed" -> "litellm.llms.databricks.embed.handler" [style="dotted"];
		"litellm.llms.databricks.embed" -> "litellm.llms.databricks.embed.transformation" [style="dotted"];
	}
	subgraph "cluster_regex" {
		label="regex";
		"regex" -> "regex.DEFAULT_VERSION" [style="dotted"];
		"regex" -> "regex.regex" [style="dotted"];
		"regex" -> "regex._regex_core" [style="dotted"];
		"regex" -> "regex._regex" [style="dotted"];
	}
	subgraph "cluster_zmq.eventloop" {
		label="zmq.eventloop";
		"zmq.eventloop" -> "zmq.eventloop.zmqstream" [style="dotted"];
	}
	subgraph "cluster_google.protobuf.pyext" {
		label="google.protobuf.pyext";
		"google.protobuf.pyext" -> "google.protobuf.pyext._message" [style="dotted"];
		"google.protobuf.pyext" -> "google.protobuf.pyext.cpp_message" [style="dotted"];
	}
	subgraph "cluster_streamlit.vendor" {
		label="streamlit.vendor";
		"streamlit.vendor" -> "streamlit.vendor.pympler" [style="dotted"];
	}
	subgraph "cluster_streamlit.proto" {
		label="streamlit.proto";
		"streamlit.proto" -> "streamlit.proto.AutoRerun_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Common_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Block_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.WidthConfig_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Alert_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Arrow_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Audio_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.LabelVisibilityMessage_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.AudioInput_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Balloons_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.ArrowNamedDataSet_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.ArrowVegaLiteChart_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.BokehChart_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Button_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.ButtonGroup_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.DownloadButton_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.CameraInput_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.ChatInput_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Checkbox_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Code_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.ColorPicker_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.DataFrame_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.DateInput_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.DeckGlJsonChart_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.DocString_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Empty_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Exception_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Favicon_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.FileUploader_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.GraphVizChart_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Html_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.IFrame_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Image_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Json_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.LinkButton_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.NumberInput_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Markdown_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Metric_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.MultiSelect_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.PageLink_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.PlotlyChart_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Components_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Progress_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Snow_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Spinner_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Radio_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Selectbox_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Skeleton_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Slider_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Text_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.TextArea_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.TextInput_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.TimeInput_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Toast_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.NamedDataSet_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.VegaLiteChart_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Video_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Heading_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Element_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Delta_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.GitInfo_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Logo_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.AppPage_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.Navigation_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.SessionStatus_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.NewSession_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.PageConfig_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.PageInfo_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.PageProfile_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.PageNotFound_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.PagesChanged_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.ParentMessage_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.SessionEvent_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.AuthRedirect_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.ClientState_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.ForwardMsg_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.openmetrics_data_model_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.WidgetStates_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.BackMsg_pb2" [style="dotted"];
		"streamlit.proto" -> "streamlit.proto.RootContainer_pb2" [style="dotted"];
	}
	subgraph "cluster_langchain.tools" {
		label="langchain.tools";
		"langchain.tools" -> "langchain.tools.render" [style="dotted"];
	}
	subgraph "cluster_tiktoken" {
		label="tiktoken";
		"tiktoken" -> "tiktoken._tiktoken" [style="dotted"];
		"tiktoken" -> "tiktoken.core" [style="dotted"];
		"tiktoken" -> "tiktoken.model" [style="dotted"];
		"tiktoken" -> "tiktoken.registry" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.file_management" {
		label="langchain_community.tools.file_management";
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.copy" [style="dotted"];
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.delete" [style="dotted"];
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.file_search" [style="dotted"];
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.list_dir" [style="dotted"];
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.move" [style="dotted"];
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.read" [style="dotted"];
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.write" [style="dotted"];
		"langchain_community.tools.file_management" -> "langchain_community.tools.file_management.utils" [style="dotted"];
	}
	subgraph "cluster_kivy.effects" {
		label="kivy.effects";
		"kivy.effects" -> "kivy.effects.dampedscroll" [style="dotted"];
		"kivy.effects" -> "kivy.effects.scroll" [style="dotted"];
		"kivy.effects" -> "kivy.effects.kinetic" [style="dotted"];
		"kivy.effects" -> "kivy.effects.opacityscroll" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.connery" {
		label="langchain_community.agent_toolkits.connery";
		"langchain_community.agent_toolkits.connery" -> "langchain_community.agent_toolkits.connery.toolkit" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.azure_ai_services" {
		label="langchain_community.tools.azure_ai_services";
		"langchain_community.tools.azure_ai_services" -> "langchain_community.tools.azure_ai_services.document_intelligence" [style="dotted"];
		"langchain_community.tools.azure_ai_services" -> "langchain_community.tools.azure_ai_services.image_analysis" [style="dotted"];
		"langchain_community.tools.azure_ai_services" -> "langchain_community.tools.azure_ai_services.speech_to_text" [style="dotted"];
		"langchain_community.tools.azure_ai_services" -> "langchain_community.tools.azure_ai_services.text_analytics_for_health" [style="dotted"];
		"langchain_community.tools.azure_ai_services" -> "langchain_community.tools.azure_ai_services.text_to_speech" [style="dotted"];
		"langchain_community.tools.azure_ai_services" -> "langchain_community.tools.azure_ai_services.utils" [style="dotted"];
	}
	subgraph "cluster_urllib3.util" {
		label="urllib3.util";
		"urllib3.util" -> "urllib3.util.connection" [style="dotted"];
		"urllib3.util" -> "urllib3.util.request" [style="dotted"];
		"urllib3.util" -> "urllib3.util.response" [style="dotted"];
		"urllib3.util" -> "urllib3.util.retry" [style="dotted"];
		"urllib3.util" -> "urllib3.util.ssl_" [style="dotted"];
		"urllib3.util" -> "urllib3.util.timeout" [style="dotted"];
		"urllib3.util" -> "urllib3.util.url" [style="dotted"];
		"urllib3.util" -> "urllib3.util.wait" [style="dotted"];
		"urllib3.util" -> "urllib3.util.ssltransport" [style="dotted"];
		"urllib3.util" -> "urllib3.util.proxy" [style="dotted"];
		"urllib3.util" -> "urllib3.util.queue" [style="dotted"];
	}
	subgraph "cluster_jedi.inference.value" {
		label="jedi.inference.value";
		"jedi.inference.value" -> "jedi.inference.value.iterable" [style="dotted"];
		"jedi.inference.value" -> "jedi.inference.value.module" [style="dotted"];
		"jedi.inference.value" -> "jedi.inference.value.klass" [style="dotted"];
		"jedi.inference.value" -> "jedi.inference.value.function" [style="dotted"];
		"jedi.inference.value" -> "jedi.inference.value.instance" [style="dotted"];
		"jedi.inference.value" -> "jedi.inference.value.dynamic_arrays" [style="dotted"];
		"jedi.inference.value" -> "jedi.inference.value.decorator" [style="dotted"];
		"jedi.inference.value" -> "jedi.inference.value.namespace" [style="dotted"];
	}
	subgraph "cluster_dill" {
		label="dill";
		"dill" -> "dill.__info__" [style="dotted"];
		"dill" -> "dill._shims" [style="dotted"];
		"dill" -> "dill.diff" [style="dotted"];
		"dill" -> "dill._dill" [style="dotted"];
		"dill" -> "dill.session" [style="dotted"];
		"dill" -> "dill.detect" [style="dotted"];
		"dill" -> "dill.logger" [style="dotted"];
		"dill" -> "dill.source" [style="dotted"];
		"dill" -> "dill.temp" [style="dotted"];
		"dill" -> "dill.settings" [style="dotted"];
		"dill" -> "dill.objtypes" [style="dotted"];
		"dill" -> "dill._objects" [style="dotted"];
		"dill" -> "dill.pointers" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.azure_ai.chat" {
		label="litellm.llms.azure_ai.chat";
		"litellm.llms.azure_ai.chat" -> "litellm.llms.azure_ai.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_kivy.uix" {
		label="kivy.uix";
		"kivy.uix" -> "kivy.uix.boxlayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.button" [style="dotted"];
		"kivy.uix" -> "kivy.uix.label" [style="dotted"];
		"kivy.uix" -> "kivy.uix.filechooser" [style="dotted"];
		"kivy.uix" -> "kivy.uix.image" [style="dotted"];
		"kivy.uix" -> "kivy.uix.widget" [style="dotted"];
		"kivy.uix" -> "kivy.uix.vkeyboard" [style="dotted"];
		"kivy.uix" -> "kivy.uix.scatter" [style="dotted"];
		"kivy.uix" -> "kivy.uix.behaviors" [style="dotted"];
		"kivy.uix" -> "kivy.uix.relativelayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.floatlayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.layout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.screenmanager" [style="dotted"];
		"kivy.uix" -> "kivy.uix.settings" [style="dotted"];
		"kivy.uix" -> "kivy.uix.tabbedpanel" [style="dotted"];
		"kivy.uix" -> "kivy.uix.colorpicker" [style="dotted"];
		"kivy.uix" -> "kivy.uix.scrollview" [style="dotted"];
		"kivy.uix" -> "kivy.uix.gridlayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.popup" [style="dotted"];
		"kivy.uix" -> "kivy.uix.textinput" [style="dotted"];
		"kivy.uix" -> "kivy.uix.togglebutton" [style="dotted"];
		"kivy.uix" -> "kivy.uix.bubble" [style="dotted"];
		"kivy.uix" -> "kivy.uix.modalview" [style="dotted"];
		"kivy.uix" -> "kivy.uix.anchorlayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.stencilview" [style="dotted"];
		"kivy.uix" -> "kivy.uix.recycleboxlayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.accordion" [style="dotted"];
		"kivy.uix" -> "kivy.uix.carousel" [style="dotted"];
		"kivy.uix" -> "kivy.uix.checkbox" [style="dotted"];
		"kivy.uix" -> "kivy.uix.actionbar" [style="dotted"];
		"kivy.uix" -> "kivy.uix.dropdown" [style="dotted"];
		"kivy.uix" -> "kivy.uix.effectwidget" [style="dotted"];
		"kivy.uix" -> "kivy.uix.spinner" [style="dotted"];
		"kivy.uix" -> "kivy.uix.slider" [style="dotted"];
		"kivy.uix" -> "kivy.uix.stacklayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.pagelayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.recyclelayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.video" [style="dotted"];
		"kivy.uix" -> "kivy.uix.rst" [style="dotted"];
		"kivy.uix" -> "kivy.uix.splitter" [style="dotted"];
		"kivy.uix" -> "kivy.uix.sandbox" [style="dotted"];
		"kivy.uix" -> "kivy.uix.treeview" [style="dotted"];
		"kivy.uix" -> "kivy.uix.videoplayer" [style="dotted"];
		"kivy.uix" -> "kivy.uix.switch" [style="dotted"];
		"kivy.uix" -> "kivy.uix.progressbar" [style="dotted"];
		"kivy.uix" -> "kivy.uix.camera" [style="dotted"];
		"kivy.uix" -> "kivy.uix.codeinput" [style="dotted"];
		"kivy.uix" -> "kivy.uix.gesturesurface" [style="dotted"];
		"kivy.uix" -> "kivy.uix.recyclegridlayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.scatterlayout" [style="dotted"];
		"kivy.uix" -> "kivy.uix.recycleview" [style="dotted"];
	}
	subgraph "cluster_jedi.inference" {
		label="jedi.inference";
		"jedi.inference" -> "jedi.inference.flow_analysis" [style="dotted"];
		"jedi.inference" -> "jedi.inference.analysis" [style="dotted"];
		"jedi.inference" -> "jedi.inference.arguments" [style="dotted"];
		"jedi.inference" -> "jedi.inference.docstrings" [style="dotted"];
		"jedi.inference" -> "jedi.inference.imports" [style="dotted"];
		"jedi.inference" -> "jedi.inference.finder" [style="dotted"];
		"jedi.inference" -> "jedi.inference.compiled" [style="dotted"];
		"jedi.inference" -> "jedi.inference.sys_path" [style="dotted"];
		"jedi.inference" -> "jedi.inference.recursion" [style="dotted"];
		"jedi.inference" -> "jedi.inference.cache" [style="dotted"];
		"jedi.inference" -> "jedi.inference.helpers" [style="dotted"];
		"jedi.inference" -> "jedi.inference.names" [style="dotted"];
		"jedi.inference" -> "jedi.inference.base_value" [style="dotted"];
		"jedi.inference" -> "jedi.inference.value" [style="dotted"];
		"jedi.inference" -> "jedi.inference.syntax_tree" [style="dotted"];
		"jedi.inference" -> "jedi.inference.utils" [style="dotted"];
		"jedi.inference" -> "jedi.inference.references" [style="dotted"];
		"jedi.inference" -> "jedi.inference.gradual" [style="dotted"];
		"jedi.inference" -> "jedi.inference.lazy_value" [style="dotted"];
		"jedi.inference" -> "jedi.inference.filters" [style="dotted"];
		"jedi.inference" -> "jedi.inference.context" [style="dotted"];
		"jedi.inference" -> "jedi.inference.param" [style="dotted"];
		"jedi.inference" -> "jedi.inference.signature" [style="dotted"];
		"jedi.inference" -> "jedi.inference.docstring_utils" [style="dotted"];
		"jedi.inference" -> "jedi.inference.star_args" [style="dotted"];
		"jedi.inference" -> "jedi.inference.parser_cache" [style="dotted"];
		"jedi.inference" -> "jedi.inference.dynamic_params" [style="dotted"];
	}
	subgraph "cluster_pandas.core.computation" {
		label="pandas.core.computation";
		"pandas.core.computation" -> "pandas.core.computation.expressions" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.expr" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.api" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.check" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.ops" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.parsing" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.scope" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.common" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.eval" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.engines" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.align" [style="dotted"];
		"pandas.core.computation" -> "pandas.core.computation.pytables" [style="dotted"];
	}
	subgraph "cluster_fsspec" {
		label="fsspec";
		"fsspec" -> "fsspec.caching" [style="dotted"];
		"fsspec" -> "fsspec._version" [style="dotted"];
		"fsspec" -> "fsspec.callbacks" [style="dotted"];
		"fsspec" -> "fsspec.compression" [style="dotted"];
		"fsspec" -> "fsspec.core" [style="dotted"];
		"fsspec" -> "fsspec.exceptions" [style="dotted"];
		"fsspec" -> "fsspec.mapping" [style="dotted"];
		"fsspec" -> "fsspec.registry" [style="dotted"];
		"fsspec" -> "fsspec.spec" [style="dotted"];
		"fsspec" -> "fsspec.archive" [style="dotted"];
		"fsspec" -> "fsspec.asyn" [style="dotted"];
		"fsspec" -> "fsspec.config" [style="dotted"];
		"fsspec" -> "fsspec.conftest" [style="dotted"];
		"fsspec" -> "fsspec.dircache" [style="dotted"];
		"fsspec" -> "fsspec.fuse" [style="dotted"];
		"fsspec" -> "fsspec.generic" [style="dotted"];
		"fsspec" -> "fsspec.gui" [style="dotted"];
		"fsspec" -> "fsspec.implementations" [style="dotted"];
		"fsspec" -> "fsspec.json" [style="dotted"];
		"fsspec" -> "fsspec.parquet" [style="dotted"];
		"fsspec" -> "fsspec.transaction" [style="dotted"];
		"fsspec" -> "fsspec.utils" [style="dotted"];
	}
	subgraph "cluster_orjson" {
		label="orjson";
		"orjson" -> "orjson.orjson" [style="dotted"];
		"orjson" -> "orjson.OPT_NON_STR_KEYS" [style="dotted"];
		"orjson" -> "orjson.OPT_SERIALIZE_DATACLASS" [style="dotted"];
		"orjson" -> "orjson.OPT_SERIALIZE_NUMPY" [style="dotted"];
		"orjson" -> "orjson.OPT_SERIALIZE_UUID" [style="dotted"];
		"orjson" -> "orjson.Fragment" [style="dotted"];
		"orjson" -> "orjson.JSONDecodeError" [style="dotted"];
		"orjson" -> "orjson.dumps" [style="dotted"];
		"orjson" -> "orjson.loads" [style="dotted"];
	}
	subgraph "cluster_pandas.core.indexes" {
		label="pandas.core.indexes";
		"pandas.core.indexes" -> "pandas.core.indexes.base" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.api" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.datetimes" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.timedeltas" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.multi" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.frozen" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.datetimelike" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.extension" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.range" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.category" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.interval" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.period" [style="dotted"];
		"pandas.core.indexes" -> "pandas.core.indexes.accessors" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.base_llm.embedding" {
		label="litellm.llms.base_llm.embedding";
		"litellm.llms.base_llm.embedding" -> "litellm.llms.base_llm.embedding.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.azure_ai.embed" {
		label="litellm.llms.azure_ai.embed";
		"litellm.llms.azure_ai.embed" -> "litellm.llms.azure_ai.embed.handler" [style="dotted"];
		"litellm.llms.azure_ai.embed" -> "litellm.llms.azure_ai.embed.cohere_transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.fireworks_ai.chat" {
		label="litellm.llms.fireworks_ai.chat";
		"litellm.llms.fireworks_ai.chat" -> "litellm.llms.fireworks_ai.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.reddit_search" {
		label="langchain_community.tools.reddit_search";
		"langchain_community.tools.reddit_search" -> "langchain_community.tools.reddit_search.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.bearly" {
		label="langchain_community.tools.bearly";
		"langchain_community.tools.bearly" -> "langchain_community.tools.bearly.tool" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.openai_functions_multi_agent" {
		label="langchain.agents.openai_functions_multi_agent";
		"langchain.agents.openai_functions_multi_agent" -> "langchain.agents.openai_functions_multi_agent.base" [style="dotted"];
	}
	subgraph "cluster_encodings" {
		label="encodings";
		"encodings" -> "encodings.aliases" [style="dotted"];
		"encodings" -> "encodings.mbcs" [style="dotted"];
		"encodings" -> "encodings.cp437" [style="dotted"];
		"encodings" -> "encodings.ascii" [style="dotted"];
		"encodings" -> "encodings.base64_codec" [style="dotted"];
		"encodings" -> "encodings.big5" [style="dotted"];
		"encodings" -> "encodings.big5hkscs" [style="dotted"];
		"encodings" -> "encodings.bz2_codec" [style="dotted"];
		"encodings" -> "encodings.charmap" [style="dotted"];
		"encodings" -> "encodings.cp037" [style="dotted"];
		"encodings" -> "encodings.cp1006" [style="dotted"];
		"encodings" -> "encodings.cp1026" [style="dotted"];
		"encodings" -> "encodings.cp1125" [style="dotted"];
		"encodings" -> "encodings.cp1140" [style="dotted"];
		"encodings" -> "encodings.cp1250" [style="dotted"];
		"encodings" -> "encodings.cp1251" [style="dotted"];
		"encodings" -> "encodings.cp1252" [style="dotted"];
		"encodings" -> "encodings.cp1253" [style="dotted"];
		"encodings" -> "encodings.cp1254" [style="dotted"];
		"encodings" -> "encodings.cp1255" [style="dotted"];
		"encodings" -> "encodings.cp1256" [style="dotted"];
		"encodings" -> "encodings.cp1257" [style="dotted"];
		"encodings" -> "encodings.cp1258" [style="dotted"];
		"encodings" -> "encodings.cp273" [style="dotted"];
		"encodings" -> "encodings.cp424" [style="dotted"];
		"encodings" -> "encodings.cp500" [style="dotted"];
		"encodings" -> "encodings.cp720" [style="dotted"];
		"encodings" -> "encodings.cp737" [style="dotted"];
		"encodings" -> "encodings.cp775" [style="dotted"];
		"encodings" -> "encodings.cp850" [style="dotted"];
		"encodings" -> "encodings.cp852" [style="dotted"];
		"encodings" -> "encodings.cp855" [style="dotted"];
		"encodings" -> "encodings.cp856" [style="dotted"];
		"encodings" -> "encodings.cp857" [style="dotted"];
		"encodings" -> "encodings.cp858" [style="dotted"];
		"encodings" -> "encodings.cp860" [style="dotted"];
		"encodings" -> "encodings.cp861" [style="dotted"];
		"encodings" -> "encodings.cp862" [style="dotted"];
		"encodings" -> "encodings.cp863" [style="dotted"];
		"encodings" -> "encodings.cp864" [style="dotted"];
		"encodings" -> "encodings.cp865" [style="dotted"];
		"encodings" -> "encodings.cp866" [style="dotted"];
		"encodings" -> "encodings.cp869" [style="dotted"];
		"encodings" -> "encodings.cp874" [style="dotted"];
		"encodings" -> "encodings.cp875" [style="dotted"];
		"encodings" -> "encodings.cp932" [style="dotted"];
		"encodings" -> "encodings.cp949" [style="dotted"];
		"encodings" -> "encodings.cp950" [style="dotted"];
		"encodings" -> "encodings.euc_jis_2004" [style="dotted"];
		"encodings" -> "encodings.euc_jisx0213" [style="dotted"];
		"encodings" -> "encodings.euc_jp" [style="dotted"];
		"encodings" -> "encodings.euc_kr" [style="dotted"];
		"encodings" -> "encodings.gb18030" [style="dotted"];
		"encodings" -> "encodings.gb2312" [style="dotted"];
		"encodings" -> "encodings.gbk" [style="dotted"];
		"encodings" -> "encodings.hex_codec" [style="dotted"];
		"encodings" -> "encodings.hp_roman8" [style="dotted"];
		"encodings" -> "encodings.hz" [style="dotted"];
		"encodings" -> "encodings.idna" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_1" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_2" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_2004" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_3" [style="dotted"];
		"encodings" -> "encodings.iso2022_jp_ext" [style="dotted"];
		"encodings" -> "encodings.iso2022_kr" [style="dotted"];
		"encodings" -> "encodings.iso8859_1" [style="dotted"];
		"encodings" -> "encodings.iso8859_10" [style="dotted"];
		"encodings" -> "encodings.iso8859_11" [style="dotted"];
		"encodings" -> "encodings.iso8859_13" [style="dotted"];
		"encodings" -> "encodings.iso8859_14" [style="dotted"];
		"encodings" -> "encodings.iso8859_15" [style="dotted"];
		"encodings" -> "encodings.iso8859_16" [style="dotted"];
		"encodings" -> "encodings.iso8859_2" [style="dotted"];
		"encodings" -> "encodings.iso8859_3" [style="dotted"];
		"encodings" -> "encodings.iso8859_4" [style="dotted"];
		"encodings" -> "encodings.iso8859_5" [style="dotted"];
		"encodings" -> "encodings.iso8859_6" [style="dotted"];
		"encodings" -> "encodings.iso8859_7" [style="dotted"];
		"encodings" -> "encodings.iso8859_8" [style="dotted"];
		"encodings" -> "encodings.iso8859_9" [style="dotted"];
		"encodings" -> "encodings.johab" [style="dotted"];
		"encodings" -> "encodings.koi8_r" [style="dotted"];
		"encodings" -> "encodings.koi8_t" [style="dotted"];
		"encodings" -> "encodings.koi8_u" [style="dotted"];
		"encodings" -> "encodings.kz1048" [style="dotted"];
		"encodings" -> "encodings.latin_1" [style="dotted"];
		"encodings" -> "encodings.mac_arabic" [style="dotted"];
		"encodings" -> "encodings.mac_croatian" [style="dotted"];
		"encodings" -> "encodings.mac_cyrillic" [style="dotted"];
		"encodings" -> "encodings.mac_farsi" [style="dotted"];
		"encodings" -> "encodings.mac_greek" [style="dotted"];
		"encodings" -> "encodings.mac_iceland" [style="dotted"];
		"encodings" -> "encodings.mac_latin2" [style="dotted"];
		"encodings" -> "encodings.mac_roman" [style="dotted"];
		"encodings" -> "encodings.mac_romanian" [style="dotted"];
		"encodings" -> "encodings.mac_turkish" [style="dotted"];
		"encodings" -> "encodings.oem" [style="dotted"];
		"encodings" -> "encodings.palmos" [style="dotted"];
		"encodings" -> "encodings.ptcp154" [style="dotted"];
		"encodings" -> "encodings.punycode" [style="dotted"];
		"encodings" -> "encodings.quopri_codec" [style="dotted"];
		"encodings" -> "encodings.raw_unicode_escape" [style="dotted"];
		"encodings" -> "encodings.rot_13" [style="dotted"];
		"encodings" -> "encodings.shift_jis" [style="dotted"];
		"encodings" -> "encodings.shift_jis_2004" [style="dotted"];
		"encodings" -> "encodings.shift_jisx0213" [style="dotted"];
		"encodings" -> "encodings.tis_620" [style="dotted"];
		"encodings" -> "encodings.undefined" [style="dotted"];
		"encodings" -> "encodings.unicode_escape" [style="dotted"];
		"encodings" -> "encodings.utf_16" [style="dotted"];
		"encodings" -> "encodings.utf_16_be" [style="dotted"];
		"encodings" -> "encodings.utf_16_le" [style="dotted"];
		"encodings" -> "encodings.utf_32" [style="dotted"];
		"encodings" -> "encodings.utf_32_be" [style="dotted"];
		"encodings" -> "encodings.utf_32_le" [style="dotted"];
		"encodings" -> "encodings.utf_7" [style="dotted"];
		"encodings" -> "encodings.utf_8" [style="dotted"];
		"encodings" -> "encodings.utf_8_sig" [style="dotted"];
		"encodings" -> "encodings.uu_codec" [style="dotted"];
		"encodings" -> "encodings.zlib_codec" [style="dotted"];
	}
	subgraph "cluster_pandas.api.interchange" {
		label="pandas.api.interchange";
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.text_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.text_service.transports";
		"google.ai.generativelanguage_v1beta.services.text_service.transports" -> "google.ai.generativelanguage_v1beta.services.text_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.text_service.transports" -> "google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.text_service.transports" -> "google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.text_service.transports" -> "google.ai.generativelanguage_v1beta.services.text_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.text_service.transports" -> "google.ai.generativelanguage_v1beta.services.text_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_numpy._typing" {
		label="numpy._typing";
		"numpy._typing" -> "numpy._typing._nested_sequence" [style="dotted"];
		"numpy._typing" -> "numpy._typing._nbit" [style="dotted"];
		"numpy._typing" -> "numpy._typing._char_codes" [style="dotted"];
		"numpy._typing" -> "numpy._typing._scalars" [style="dotted"];
		"numpy._typing" -> "numpy._typing._shape" [style="dotted"];
		"numpy._typing" -> "numpy._typing._dtype_like" [style="dotted"];
		"numpy._typing" -> "numpy._typing._array_like" [style="dotted"];
		"numpy._typing" -> "numpy._typing._ufunc" [style="dotted"];
		"numpy._typing" -> "numpy._typing._add_docstring" [style="dotted"];
	}
	subgraph "cluster_openai.resources.chat.completions" {
		label="openai.resources.chat.completions";
		"openai.resources.chat.completions" -> "openai.resources.chat.completions.messages" [style="dotted"];
		"openai.resources.chat.completions" -> "openai.resources.chat.completions.completions" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.bedrock.messages" {
		label="litellm.llms.bedrock.messages";
		"litellm.llms.bedrock.messages" -> "litellm.llms.bedrock.messages.invoke_transformations" [style="dotted"];
	}
	subgraph "cluster_pandas.core.internals" {
		label="pandas.core.internals";
		"pandas.core.internals" -> "pandas.core.internals.Block" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.api" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.array_manager" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.base" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.concat" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.managers" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.blocks" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.construction" [style="dotted"];
		"pandas.core.internals" -> "pandas.core.internals.ops" [style="dotted"];
	}
	subgraph "cluster_litellm.types.integrations" {
		label="litellm.types.integrations";
		"litellm.types.integrations" -> "litellm.types.integrations.slack_alerting" [style="dotted"];
		"litellm.types.integrations" -> "litellm.types.integrations.gcs_bucket" [style="dotted"];
		"litellm.types.integrations" -> "litellm.types.integrations.prometheus" [style="dotted"];
		"litellm.types.integrations" -> "litellm.types.integrations.langfuse" [style="dotted"];
		"litellm.types.integrations" -> "litellm.types.integrations.base_health_check" [style="dotted"];
		"litellm.types.integrations" -> "litellm.types.integrations.datadog" [style="dotted"];
		"litellm.types.integrations" -> "litellm.types.integrations.arize_phoenix" [style="dotted"];
		"litellm.types.integrations" -> "litellm.types.integrations.arize" [style="dotted"];
		"litellm.types.integrations" -> "litellm.types.integrations.rag" [style="dotted"];
		"litellm.types.integrations" -> "litellm.types.integrations.langsmith" [style="dotted"];
		"litellm.types.integrations" -> "litellm.types.integrations.datadog_llm_obs" [style="dotted"];
		"litellm.types.integrations" -> "litellm.types.integrations.argilla" [style="dotted"];
		"litellm.types.integrations" -> "litellm.types.integrations.anthropic_cache_control_hook" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy" {
		label="litellm.proxy";
		"litellm.proxy" -> "litellm.proxy._types" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.proxy_server" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.caching_routes" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.common_request_processing" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.health_check" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.litellm_pre_call_utils" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.route_llm_request" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.utils" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.guardrails" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy._experimental" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.vertex_ai_endpoints" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.hooks" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.db" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.auth" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.ui_crud_endpoints" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.types_utils" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.spend_tracking" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.response_api_endpoints" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.rerank_endpoints" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.pass_through_endpoints" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.openai_files_endpoints" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.middleware" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.management_helpers" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.management_endpoints" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.common_utils" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.health_endpoints" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.fine_tuning_endpoints" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.credential_endpoints" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.batches_endpoints" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.anthropic_endpoints" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.analytics_endpoints" [style="dotted"];
		"litellm.proxy" -> "litellm.proxy.proxy_cli" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy._experimental" {
		label="litellm.proxy._experimental";
		"litellm.proxy._experimental" -> "litellm.proxy._experimental.mcp_server" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.cloudflare" {
		label="litellm.llms.cloudflare";
		"litellm.llms.cloudflare" -> "litellm.llms.cloudflare.chat" [style="dotted"];
	}
	subgraph "cluster_docutils.writers.html4css1" {
		label="docutils.writers.html4css1";
	}
	subgraph "cluster_ipywidgets.widgets" {
		label="ipywidgets.widgets";
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.domwidget" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.valuewidget" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.trait_types" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_core" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_bool" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_button" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_box" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_float" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_int" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_color" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_date" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_datetime" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_time" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_output" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_selection" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_selectioncontainer" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_string" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_controller" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.interaction" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_link" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_layout" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_media" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_tagsinput" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_style" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_templates" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_upload" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.widget_description" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.utils" [style="dotted"];
		"ipywidgets.widgets" -> "ipywidgets.widgets.docutils" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.base_llm.files" {
		label="litellm.llms.base_llm.files";
		"litellm.llms.base_llm.files" -> "litellm.llms.base_llm.files.transformation" [style="dotted"];
	}
	subgraph "cluster_pydantic" {
		label="pydantic";
		"pydantic" -> "pydantic.BaseModel" [style="dotted"];
		"pydantic" -> "pydantic.PydanticSchemaGenerationError" [style="dotted"];
		"pydantic" -> "pydantic.PydanticUserError" [style="dotted"];
		"pydantic" -> "pydantic.types" [style="dotted"];
		"pydantic" -> "pydantic._migration" [style="dotted"];
		"pydantic" -> "pydantic.version" [style="dotted"];
		"pydantic" -> "pydantic.dataclasses" [style="dotted"];
		"pydantic" -> "pydantic.aliases" [style="dotted"];
		"pydantic" -> "pydantic.annotated_handlers" [style="dotted"];
		"pydantic" -> "pydantic.config" [style="dotted"];
		"pydantic" -> "pydantic.errors" [style="dotted"];
		"pydantic" -> "pydantic.fields" [style="dotted"];
		"pydantic" -> "pydantic.functional_serializers" [style="dotted"];
		"pydantic" -> "pydantic.functional_validators" [style="dotted"];
		"pydantic" -> "pydantic.json_schema" [style="dotted"];
		"pydantic" -> "pydantic.main" [style="dotted"];
		"pydantic" -> "pydantic.networks" [style="dotted"];
		"pydantic" -> "pydantic.type_adapter" [style="dotted"];
		"pydantic" -> "pydantic.validate_call_decorator" [style="dotted"];
		"pydantic" -> "pydantic.warnings" [style="dotted"];
		"pydantic" -> "pydantic.root_model" [style="dotted"];
		"pydantic" -> "pydantic.validate_arguments" [style="dotted"];
		"pydantic" -> "pydantic._internal" [style="dotted"];
		"pydantic" -> "pydantic.alias_generators" [style="dotted"];
		"pydantic" -> "pydantic.class_validators" [style="dotted"];
		"pydantic" -> "pydantic.color" [style="dotted"];
		"pydantic" -> "pydantic.datetime_parse" [style="dotted"];
		"pydantic" -> "pydantic.decorator" [style="dotted"];
		"pydantic" -> "pydantic.deprecated" [style="dotted"];
		"pydantic" -> "pydantic.env_settings" [style="dotted"];
		"pydantic" -> "pydantic.error_wrappers" [style="dotted"];
		"pydantic" -> "pydantic.experimental" [style="dotted"];
		"pydantic" -> "pydantic.generics" [style="dotted"];
		"pydantic" -> "pydantic.json" [style="dotted"];
		"pydantic" -> "pydantic.mypy" [style="dotted"];
		"pydantic" -> "pydantic.parse" [style="dotted"];
		"pydantic" -> "pydantic.plugin" [style="dotted"];
		"pydantic" -> "pydantic.schema" [style="dotted"];
		"pydantic" -> "pydantic.tools" [style="dotted"];
		"pydantic" -> "pydantic.typing" [style="dotted"];
		"pydantic" -> "pydantic.utils" [style="dotted"];
		"pydantic" -> "pydantic.v1" [style="dotted"];
		"pydantic" -> "pydantic.validators" [style="dotted"];
	}
	subgraph "cluster_openai.lib._parsing" {
		label="openai.lib._parsing";
		"openai.lib._parsing" -> "openai.lib._parsing._completions" [style="dotted"];
		"openai.lib._parsing" -> "openai.lib._parsing._responses" [style="dotted"];
	}
	subgraph "cluster_pydantic._internal" {
		label="pydantic._internal";
		"pydantic._internal" -> "pydantic._internal._git" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._repr" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._typing_extra" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._internal_dataclass" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._config" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._core_metadata" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._decorators" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._generics" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._fields" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._forward_ref" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._mock_val_ser" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._model_construction" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._discriminated_union" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._known_annotated_metadata" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._validate_call" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._decorators_v1" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._validators" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._import_utils" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._utils" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._namespace_utils" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._schema_generation_shared" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._generate_schema" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._core_utils" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._docs_extraction" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._schema_gather" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._dataclasses" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._serializers" [style="dotted"];
		"pydantic._internal" -> "pydantic._internal._signature" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.jira" {
		label="langchain_community.agent_toolkits.jira";
		"langchain_community.agent_toolkits.jira" -> "langchain_community.agent_toolkits.jira.toolkit" [style="dotted"];
	}
	subgraph "cluster_openai.types.evals.runs" {
		label="openai.types.evals.runs";
		"openai.types.evals.runs" -> "openai.types.evals.runs.output_item_list_params" [style="dotted"];
		"openai.types.evals.runs" -> "openai.types.evals.runs.output_item_list_response" [style="dotted"];
		"openai.types.evals.runs" -> "openai.types.evals.runs.output_item_retrieve_response" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.azure.responses" {
		label="litellm.llms.azure.responses";
		"litellm.llms.azure.responses" -> "litellm.llms.azure.responses.transformation" [style="dotted"];
	}
	subgraph "cluster_pandas.core" {
		label="pandas.core";
		"pandas.core" -> "pandas.core.roperator" [style="dotted"];
		"pandas.core" -> "pandas.core.missing" [style="dotted"];
		"pandas.core" -> "pandas.core.nanops" [style="dotted"];
		"pandas.core" -> "pandas.core.indexing" [style="dotted"];
		"pandas.core" -> "pandas.core.sample" [style="dotted"];
		"pandas.core" -> "pandas.core.algorithms" [style="dotted"];
		"pandas.core" -> "pandas.core.arraylike" [style="dotted"];
		"pandas.core" -> "pandas.core.config_init" [style="dotted"];
		"pandas.core" -> "pandas.core.api" [style="dotted"];
		"pandas.core" -> "pandas.core.frame" [style="dotted"];
		"pandas.core" -> "pandas.core.generic" [style="dotted"];
		"pandas.core" -> "pandas.core.resample" [style="dotted"];
		"pandas.core" -> "pandas.core.series" [style="dotted"];
		"pandas.core" -> "pandas.core.base" [style="dotted"];
		"pandas.core" -> "pandas.core.common" [style="dotted"];
		"pandas.core" -> "pandas.core.dtypes" [style="dotted"];
		"pandas.core" -> "pandas.core.construction" [style="dotted"];
		"pandas.core" -> "pandas.core.internals" [style="dotted"];
		"pandas.core" -> "pandas.core.ops" [style="dotted"];
		"pandas.core" -> "pandas.core.util" [style="dotted"];
		"pandas.core" -> "pandas.core.computation" [style="dotted"];
		"pandas.core" -> "pandas.core.sorting" [style="dotted"];
		"pandas.core" -> "pandas.core.arrays" [style="dotted"];
		"pandas.core" -> "pandas.core.accessor" [style="dotted"];
		"pandas.core" -> "pandas.core.strings" [style="dotted"];
		"pandas.core" -> "pandas.core.groupby" [style="dotted"];
		"pandas.core" -> "pandas.core.apply" [style="dotted"];
		"pandas.core" -> "pandas.core.window" [style="dotted"];
		"pandas.core" -> "pandas.core.shared_docs" [style="dotted"];
		"pandas.core" -> "pandas.core.tools" [style="dotted"];
		"pandas.core" -> "pandas.core._numba" [style="dotted"];
		"pandas.core" -> "pandas.core.indexers" [style="dotted"];
		"pandas.core" -> "pandas.core.array_algos" [style="dotted"];
		"pandas.core" -> "pandas.core.reshape" [style="dotted"];
		"pandas.core" -> "pandas.core.indexes" [style="dotted"];
		"pandas.core" -> "pandas.core.methods" [style="dotted"];
		"pandas.core" -> "pandas.core.flags" [style="dotted"];
		"pandas.core" -> "pandas.core.interchange" [style="dotted"];
	}
	subgraph "cluster_traitlets" {
		label="traitlets";
		"traitlets" -> "traitlets.traitlets" [style="dotted"];
		"traitlets" -> "traitlets._version" [style="dotted"];
		"traitlets" -> "traitlets.utils" [style="dotted"];
		"traitlets" -> "traitlets.log" [style="dotted"];
		"traitlets" -> "traitlets.config" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.huggingface" {
		label="litellm.llms.huggingface";
		"litellm.llms.huggingface" -> "litellm.llms.huggingface.common_utils" [style="dotted"];
		"litellm.llms.huggingface" -> "litellm.llms.huggingface.embedding" [style="dotted"];
		"litellm.llms.huggingface" -> "litellm.llms.huggingface.chat" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.empower.chat" {
		label="litellm.llms.empower.chat";
		"litellm.llms.empower.chat" -> "litellm.llms.empower.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_kivy.eventmanager" {
		label="kivy.eventmanager";
	}
	subgraph "cluster_requests_toolbelt.adapters" {
		label="requests_toolbelt.adapters";
		"requests_toolbelt.adapters" -> "requests_toolbelt.adapters.ssl" [style="dotted"];
		"requests_toolbelt.adapters" -> "requests_toolbelt.adapters.source" [style="dotted"];
	}
	subgraph "cluster_pandas.core.reshape" {
		label="pandas.core.reshape";
		"pandas.core.reshape" -> "pandas.core.reshape.api" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.concat" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.tile" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.util" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.reshape" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.merge" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.melt" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.pivot" [style="dotted"];
		"pandas.core.reshape" -> "pandas.core.reshape.encoding" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.requests" {
		label="langchain_community.tools.requests";
		"langchain_community.tools.requests" -> "langchain_community.tools.requests.tool" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.multion" {
		label="langchain_community.tools.multion";
		"langchain_community.tools.multion" -> "langchain_community.tools.multion.close_session" [style="dotted"];
		"langchain_community.tools.multion" -> "langchain_community.tools.multion.create_session" [style="dotted"];
		"langchain_community.tools.multion" -> "langchain_community.tools.multion.update_session" [style="dotted"];
	}
	subgraph "cluster_langchain.evaluation.regex_match" {
		label="langchain.evaluation.regex_match";
		"langchain.evaluation.regex_match" -> "langchain.evaluation.regex_match.base" [style="dotted"];
	}
	subgraph "cluster_zmq.utils" {
		label="zmq.utils";
		"zmq.utils" -> "zmq.utils.jsonapi" [style="dotted"];
		"zmq.utils" -> "zmq.utils.garbage" [style="dotted"];
		"zmq.utils" -> "zmq.utils.interop" [style="dotted"];
	}
	subgraph "cluster_tokenizers.models" {
		label="tokenizers.models";
	}
	subgraph "cluster_google.api_core" {
		label="google.api_core";
		"google.api_core" -> "google.api_core.version" [style="dotted"];
		"google.api_core" -> "google.api_core.exceptions" [style="dotted"];
		"google.api_core" -> "google.api_core.client_info" [style="dotted"];
		"google.api_core" -> "google.api_core.datetime_helpers" [style="dotted"];
		"google.api_core" -> "google.api_core.retry" [style="dotted"];
		"google.api_core" -> "google.api_core.timeout" [style="dotted"];
		"google.api_core" -> "google.api_core.retry_async" [style="dotted"];
		"google.api_core" -> "google.api_core.grpc_helpers" [style="dotted"];
		"google.api_core" -> "google.api_core.grpc_helpers_async" [style="dotted"];
		"google.api_core" -> "google.api_core.gapic_v1" [style="dotted"];
		"google.api_core" -> "google.api_core.client_logging" [style="dotted"];
		"google.api_core" -> "google.api_core.rest_helpers" [style="dotted"];
		"google.api_core" -> "google.api_core.rest_streaming" [style="dotted"];
		"google.api_core" -> "google.api_core.path_template" [style="dotted"];
		"google.api_core" -> "google.api_core.protobuf_helpers" [style="dotted"];
		"google.api_core" -> "google.api_core.operation" [style="dotted"];
		"google.api_core" -> "google.api_core.operation_async" [style="dotted"];
		"google.api_core" -> "google.api_core.page_iterator_async" [style="dotted"];
		"google.api_core" -> "google.api_core.operations_v1" [style="dotted"];
		"google.api_core" -> "google.api_core.client_options" [style="dotted"];
		"google.api_core" -> "google.api_core.page_iterator" [style="dotted"];
		"google.api_core" -> "google.api_core.future" [style="dotted"];
		"google.api_core" -> "google.api_core._rest_streaming_base" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.e2b_data_analysis" {
		label="langchain_community.tools.e2b_data_analysis";
		"langchain_community.tools.e2b_data_analysis" -> "langchain_community.tools.e2b_data_analysis.tool" [style="dotted"];
		"langchain_community.tools.e2b_data_analysis" -> "langchain_community.tools.e2b_data_analysis.unparse" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.sagemaker.completion" {
		label="litellm.llms.sagemaker.completion";
		"litellm.llms.sagemaker.completion" -> "litellm.llms.sagemaker.completion.handler" [style="dotted"];
		"litellm.llms.sagemaker.completion" -> "litellm.llms.sagemaker.completion.transformation" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.prediction_service" {
		label="google.ai.generativelanguage_v1beta.services.prediction_service";
		"google.ai.generativelanguage_v1beta.services.prediction_service" -> "google.ai.generativelanguage_v1beta.services.prediction_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.prediction_service" -> "google.ai.generativelanguage_v1beta.services.prediction_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.prediction_service" -> "google.ai.generativelanguage_v1beta.services.prediction_service.transports" [style="dotted"];
	}
	subgraph "cluster_pandas.core.window" {
		label="pandas.core.window";
		"pandas.core.window" -> "pandas.core.window.ewm" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.expanding" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.rolling" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window._Rolling_and_Expanding" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.doc" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.common" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.numba_" [style="dotted"];
		"pandas.core.window" -> "pandas.core.window.online" [style="dotted"];
	}
	subgraph "cluster_git.objects.submodule" {
		label="git.objects.submodule";
		"git.objects.submodule" -> "git.objects.submodule.base" [style="dotted"];
		"git.objects.submodule" -> "git.objects.submodule.root" [style="dotted"];
		"git.objects.submodule" -> "git.objects.submodule.util" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.retriever_service.transports" {
		label="google.ai.generativelanguage_v1beta.services.retriever_service.transports";
		"google.ai.generativelanguage_v1beta.services.retriever_service.transports" -> "google.ai.generativelanguage_v1beta.services.retriever_service.transports.base" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.retriever_service.transports" -> "google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.retriever_service.transports" -> "google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.retriever_service.transports" -> "google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.retriever_service.transports" -> "google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest_base" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.common_utils" {
		label="litellm.proxy.common_utils";
		"litellm.proxy.common_utils" -> "litellm.proxy.common_utils.callback_utils" [style="dotted"];
		"litellm.proxy.common_utils" -> "litellm.proxy.common_utils.debug_utils" [style="dotted"];
		"litellm.proxy.common_utils" -> "litellm.proxy.common_utils.encrypt_decrypt_utils" [style="dotted"];
		"litellm.proxy.common_utils" -> "litellm.proxy.common_utils.http_parsing_utils" [style="dotted"];
		"litellm.proxy.common_utils" -> "litellm.proxy.common_utils.load_config_utils" [style="dotted"];
		"litellm.proxy.common_utils" -> "litellm.proxy.common_utils.openai_endpoint_utils" [style="dotted"];
		"litellm.proxy.common_utils" -> "litellm.proxy.common_utils.proxy_state" [style="dotted"];
		"litellm.proxy.common_utils" -> "litellm.proxy.common_utils.reset_budget_job" [style="dotted"];
		"litellm.proxy.common_utils" -> "litellm.proxy.common_utils.swagger_utils" [style="dotted"];
		"litellm.proxy.common_utils" -> "litellm.proxy.common_utils.admin_ui_utils" [style="dotted"];
		"litellm.proxy.common_utils" -> "litellm.proxy.common_utils.html_forms" [style="dotted"];
		"litellm.proxy.common_utils" -> "litellm.proxy.common_utils.timezone_utils" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.ext.asyncio" {
		label="sqlalchemy.ext.asyncio";
		"sqlalchemy.ext.asyncio" -> "sqlalchemy.ext.asyncio.exc" [style="dotted"];
		"sqlalchemy.ext.asyncio" -> "sqlalchemy.ext.asyncio.engine" [style="dotted"];
		"sqlalchemy.ext.asyncio" -> "sqlalchemy.ext.asyncio.result" [style="dotted"];
		"sqlalchemy.ext.asyncio" -> "sqlalchemy.ext.asyncio.scoping" [style="dotted"];
		"sqlalchemy.ext.asyncio" -> "sqlalchemy.ext.asyncio.session" [style="dotted"];
		"sqlalchemy.ext.asyncio" -> "sqlalchemy.ext.asyncio.base" [style="dotted"];
	}
	subgraph "cluster_nbformat.v2" {
		label="nbformat.v2";
		"nbformat.v2" -> "nbformat.v2.convert" [style="dotted"];
		"nbformat.v2" -> "nbformat.v2.nbbase" [style="dotted"];
		"nbformat.v2" -> "nbformat.v2.nbjson" [style="dotted"];
		"nbformat.v2" -> "nbformat.v2.nbpy" [style="dotted"];
		"nbformat.v2" -> "nbformat.v2.nbxml" [style="dotted"];
		"nbformat.v2" -> "nbformat.v2.rwbase" [style="dotted"];
	}
	subgraph "cluster_datasets.io" {
		label="datasets.io";
		"datasets.io" -> "datasets.io.generator" [style="dotted"];
		"datasets.io" -> "datasets.io.spark" [style="dotted"];
		"datasets.io" -> "datasets.io.abc" [style="dotted"];
		"datasets.io" -> "datasets.io.csv" [style="dotted"];
		"datasets.io" -> "datasets.io.json" [style="dotted"];
		"datasets.io" -> "datasets.io.parquet" [style="dotted"];
		"datasets.io" -> "datasets.io.text" [style="dotted"];
		"datasets.io" -> "datasets.io.sql" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.openai.chat" {
		label="litellm.llms.openai.chat";
		"litellm.llms.openai.chat" -> "litellm.llms.openai.chat.gpt_transformation" [style="dotted"];
		"litellm.llms.openai.chat" -> "litellm.llms.openai.chat.o_series_transformation" [style="dotted"];
		"litellm.llms.openai.chat" -> "litellm.llms.openai.chat.gpt_audio_transformation" [style="dotted"];
	}
	subgraph "cluster_numpy.linalg" {
		label="numpy.linalg";
		"numpy.linalg" -> "numpy.linalg._umath_linalg" [style="dotted"];
		"numpy.linalg" -> "numpy.linalg._linalg" [style="dotted"];
		"numpy.linalg" -> "numpy.linalg.linalg" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.amadeus" {
		label="langchain_community.agent_toolkits.amadeus";
		"langchain_community.agent_toolkits.amadeus" -> "langchain_community.agent_toolkits.amadeus.toolkit" [style="dotted"];
	}
	subgraph "cluster_httpcore" {
		label="httpcore";
		"httpcore" -> "httpcore._api" [style="dotted"];
		"httpcore" -> "httpcore._async" [style="dotted"];
		"httpcore" -> "httpcore._exceptions" [style="dotted"];
		"httpcore" -> "httpcore._models" [style="dotted"];
		"httpcore" -> "httpcore._ssl" [style="dotted"];
		"httpcore" -> "httpcore._sync" [style="dotted"];
		"httpcore" -> "httpcore._backends" [style="dotted"];
		"httpcore" -> "httpcore._utils" [style="dotted"];
		"httpcore" -> "httpcore._synchronization" [style="dotted"];
		"httpcore" -> "httpcore._trace" [style="dotted"];
	}
	subgraph "cluster_pandas.tseries" {
		label="pandas.tseries";
		"pandas.tseries" -> "pandas.tseries.frequencies" [style="dotted"];
		"pandas.tseries" -> "pandas.tseries.offsets" [style="dotted"];
		"pandas.tseries" -> "pandas.tseries.api" [style="dotted"];
		"pandas.tseries" -> "pandas.tseries.holiday" [style="dotted"];
	}
	subgraph "cluster_jedi.plugins" {
		label="jedi.plugins";
		"jedi.plugins" -> "jedi.plugins.stdlib" [style="dotted"];
		"jedi.plugins" -> "jedi.plugins.flask" [style="dotted"];
		"jedi.plugins" -> "jedi.plugins.pytest" [style="dotted"];
		"jedi.plugins" -> "jedi.plugins.django" [style="dotted"];
		"jedi.plugins" -> "jedi.plugins.registry" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.application" {
		label="prompt_toolkit.application";
		"prompt_toolkit.application" -> "prompt_toolkit.application.run_in_terminal" [style="dotted"];
		"prompt_toolkit.application" -> "prompt_toolkit.application.application" [style="dotted"];
		"prompt_toolkit.application" -> "prompt_toolkit.application.current" [style="dotted"];
		"prompt_toolkit.application" -> "prompt_toolkit.application.dummy" [style="dotted"];
	}
	subgraph "cluster_webcolors" {
		label="webcolors";
		"webcolors" -> "webcolors._conversion" [style="dotted"];
		"webcolors" -> "webcolors._definitions" [style="dotted"];
		"webcolors" -> "webcolors._html5" [style="dotted"];
		"webcolors" -> "webcolors._normalization" [style="dotted"];
		"webcolors" -> "webcolors._types" [style="dotted"];
	}
	subgraph "cluster_filetype" {
		label="filetype";
		"filetype" -> "filetype.filetype" [style="dotted"];
		"filetype" -> "filetype.helpers" [style="dotted"];
		"filetype" -> "filetype.match" [style="dotted"];
		"filetype" -> "filetype.types" [style="dotted"];
		"filetype" -> "filetype.utils" [style="dotted"];
	}
	subgraph "cluster_docutils.writers" {
		label="docutils.writers";
		"docutils.writers" -> "docutils.writers._html_base" [style="dotted"];
		"docutils.writers" -> "docutils.writers.docutils_xml" [style="dotted"];
		"docutils.writers" -> "docutils.writers.manpage" [style="dotted"];
		"docutils.writers" -> "docutils.writers.null" [style="dotted"];
		"docutils.writers" -> "docutils.writers.pseudoxml" [style="dotted"];
		"docutils.writers" -> "docutils.writers.xetex" [style="dotted"];
		"docutils.writers" -> "docutils.writers.latex2e" [style="dotted"];
		"docutils.writers" -> "docutils.writers.s5_html" [style="dotted"];
		"docutils.writers" -> "docutils.writers.html4css1" [style="dotted"];
		"docutils.writers" -> "docutils.writers.pep_html" [style="dotted"];
		"docutils.writers" -> "docutils.writers.odf_odt" [style="dotted"];
		"docutils.writers" -> "docutils.writers.html5_polyglot" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.spend_tracking" {
		label="litellm.proxy.spend_tracking";
		"litellm.proxy.spend_tracking" -> "litellm.proxy.spend_tracking.spend_management_endpoints" [style="dotted"];
		"litellm.proxy.spend_tracking" -> "litellm.proxy.spend_tracking.spend_tracking_utils" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.openai.responses" {
		label="litellm.llms.openai.responses";
		"litellm.llms.openai.responses" -> "litellm.llms.openai.responses.transformation" [style="dotted"];
	}
	subgraph "cluster_http" {
		label="http";
		"http" -> "http.client" [style="dotted"];
		"http" -> "http.cookiejar" [style="dotted"];
		"http" -> "http.server" [style="dotted"];
		"http" -> "http.cookies" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.topaz.image_variations" {
		label="litellm.llms.topaz.image_variations";
		"litellm.llms.topaz.image_variations" -> "litellm.llms.topaz.image_variations.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.vertex_ai.vertex_model_garden" {
		label="litellm.llms.vertex_ai.vertex_model_garden";
		"litellm.llms.vertex_ai.vertex_model_garden" -> "litellm.llms.vertex_ai.vertex_model_garden.main" [style="dotted"];
	}
	subgraph "cluster_parso" {
		label="parso";
		"parso" -> "parso.tree" [style="dotted"];
		"parso" -> "parso.parser" [style="dotted"];
		"parso" -> "parso.grammar" [style="dotted"];
		"parso" -> "parso.utils" [style="dotted"];
		"parso" -> "parso.file_io" [style="dotted"];
		"parso" -> "parso.cache" [style="dotted"];
		"parso" -> "parso.python" [style="dotted"];
		"parso" -> "parso.normalizer" [style="dotted"];
		"parso" -> "parso._compatibility" [style="dotted"];
		"parso" -> "parso.pgen2" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.lm_studio.embed" {
		label="litellm.llms.lm_studio.embed";
		"litellm.llms.lm_studio.embed" -> "litellm.llms.lm_studio.embed.transformation" [style="dotted"];
	}
	subgraph "cluster_zmq.green" {
		label="zmq.green";
		"zmq.green" -> "zmq.green.core" [style="dotted"];
		"zmq.green" -> "zmq.green.poll" [style="dotted"];
		"zmq.green" -> "zmq.green.device" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.bedrock.messages.invoke_transformations" {
		label="litellm.llms.bedrock.messages.invoke_transformations";
		"litellm.llms.bedrock.messages.invoke_transformations" -> "litellm.llms.bedrock.messages.invoke_transformations.anthropic_claude3_transformation" [style="dotted"];
	}
	subgraph "cluster_distutils.command" {
		label="distutils.command";
		"distutils.command" -> "distutils.command.build_ext" [style="dotted"];
		"distutils.command" -> "distutils.command.sdist" [style="dotted"];
		"distutils.command" -> "distutils.command.bdist" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.cogniswitch" {
		label="langchain_community.tools.cogniswitch";
		"langchain_community.tools.cogniswitch" -> "langchain_community.tools.cogniswitch.tool" [style="dotted"];
	}
	subgraph "cluster_kivy.lib.vidcore_lite" {
		label="kivy.lib.vidcore_lite";
		"kivy.lib.vidcore_lite" -> "kivy.lib.vidcore_lite.bcm" [style="dotted"];
		"kivy.lib.vidcore_lite" -> "kivy.lib.vidcore_lite.egl" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.empower" {
		label="litellm.llms.empower";
		"litellm.llms.empower" -> "litellm.llms.empower.chat" [style="dotted"];
	}
	subgraph "cluster_anyio._backends" {
		label="anyio._backends";
		"anyio._backends" -> "anyio._backends._asyncio" [style="dotted"];
		"anyio._backends" -> "anyio._backends._trio" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.sql" {
		label="sqlalchemy.sql";
		"sqlalchemy.sql" -> "sqlalchemy.sql.roles" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.operators" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.coercions" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.type_api" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.base" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.ddl" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.util" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.expression" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.dml" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.crud" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.visitors" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql._typing" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.compiler" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.elements" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.lambdas" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.selectable" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.schema" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.traversals" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.annotation" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.events" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.default_comparator" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.cache_key" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.sqltypes" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.functions" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql._dml_constructors" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql._elements_constructors" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql._selectable_constructors" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql.naming" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql._py_util" [style="dotted"];
		"sqlalchemy.sql" -> "sqlalchemy.sql._orm_types" [style="dotted"];
	}
	subgraph "cluster_pydeck.io" {
		label="pydeck.io";
		"pydeck.io" -> "pydeck.io.html" [style="dotted"];
	}
	subgraph "cluster_langchain.agents.mrkl" {
		label="langchain.agents.mrkl";
		"langchain.agents.mrkl" -> "langchain.agents.mrkl.base" [style="dotted"];
		"langchain.agents.mrkl" -> "langchain.agents.mrkl.prompt" [style="dotted"];
		"langchain.agents.mrkl" -> "langchain.agents.mrkl.output_parser" [style="dotted"];
	}
	subgraph "cluster_huggingface_hub" {
		label="huggingface_hub";
		"huggingface_hub" -> "huggingface_hub.constants" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._commit_scheduler" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._inference_endpoints" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._login" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._snapshot_download" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._space_api" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._tensorboard_logger" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._webhooks_payload" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._webhooks_server" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.community" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.fastai_utils" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.file_download" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.hf_api" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.hf_file_system" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.hub_mixin" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.inference_api" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.keras_mixin" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.repocard" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.repocard_data" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.repository" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.serialization" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.utils" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.inference" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.errors" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.commands" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub.lfs" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._commit_api" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._upload_large_folder" [style="dotted"];
		"huggingface_hub" -> "huggingface_hub._local_folder" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.widgets" {
		label="prompt_toolkit.widgets";
		"prompt_toolkit.widgets" -> "prompt_toolkit.widgets.base" [style="dotted"];
		"prompt_toolkit.widgets" -> "prompt_toolkit.widgets.dialogs" [style="dotted"];
		"prompt_toolkit.widgets" -> "prompt_toolkit.widgets.menus" [style="dotted"];
		"prompt_toolkit.widgets" -> "prompt_toolkit.widgets.toolbars" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.watsonx.chat" {
		label="litellm.llms.watsonx.chat";
		"litellm.llms.watsonx.chat" -> "litellm.llms.watsonx.chat.handler" [style="dotted"];
		"litellm.llms.watsonx.chat" -> "litellm.llms.watsonx.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.deepinfra" {
		label="litellm.llms.deepinfra";
		"litellm.llms.deepinfra" -> "litellm.llms.deepinfra.chat" [style="dotted"];
	}
	subgraph "cluster_datasets" {
		label="datasets";
		"datasets" -> "datasets.config" [style="dotted"];
		"datasets" -> "datasets.Features" [style="dotted"];
		"datasets" -> "datasets.arrow_dataset" [style="dotted"];
		"datasets" -> "datasets.arrow_reader" [style="dotted"];
		"datasets" -> "datasets.builder" [style="dotted"];
		"datasets" -> "datasets.combine" [style="dotted"];
		"datasets" -> "datasets.dataset_dict" [style="dotted"];
		"datasets" -> "datasets.download" [style="dotted"];
		"datasets" -> "datasets.features" [style="dotted"];
		"datasets" -> "datasets.fingerprint" [style="dotted"];
		"datasets" -> "datasets.info" [style="dotted"];
		"datasets" -> "datasets.inspect" [style="dotted"];
		"datasets" -> "datasets.iterable_dataset" [style="dotted"];
		"datasets" -> "datasets.load" [style="dotted"];
		"datasets" -> "datasets.splits" [style="dotted"];
		"datasets" -> "datasets.utils" [style="dotted"];
		"datasets" -> "datasets.exceptions" [style="dotted"];
		"datasets" -> "datasets.filesystems" [style="dotted"];
		"datasets" -> "datasets.table" [style="dotted"];
		"datasets" -> "datasets.naming" [style="dotted"];
		"datasets" -> "datasets.parallel" [style="dotted"];
		"datasets" -> "datasets.data_files" [style="dotted"];
		"datasets" -> "datasets.packaged_modules" [style="dotted"];
		"datasets" -> "datasets.formatting" [style="dotted"];
		"datasets" -> "datasets.io" [style="dotted"];
		"datasets" -> "datasets.arrow_writer" [style="dotted"];
		"datasets" -> "datasets.keyhash" [style="dotted"];
		"datasets" -> "datasets.streaming" [style="dotted"];
		"datasets" -> "datasets.search" [style="dotted"];
	}
	subgraph "cluster_streamlit.components.v1" {
		label="streamlit.components.v1";
		"streamlit.components.v1" -> "streamlit.components.v1.component_arrow" [style="dotted"];
		"streamlit.components.v1" -> "streamlit.components.v1.component_registry" [style="dotted"];
		"streamlit.components.v1" -> "streamlit.components.v1.custom_component" [style="dotted"];
	}
	subgraph "cluster_langchain_core.indexing" {
		label="langchain_core.indexing";
		"langchain_core.indexing" -> "langchain_core.indexing.api" [style="dotted"];
		"langchain_core.indexing" -> "langchain_core.indexing.base" [style="dotted"];
	}
	subgraph "cluster_jupyter_client.blocking" {
		label="jupyter_client.blocking";
		"jupyter_client.blocking" -> "jupyter_client.blocking.client" [style="dotted"];
	}
	subgraph "cluster_litellm.batches" {
		label="litellm.batches";
		"litellm.batches" -> "litellm.batches.main" [style="dotted"];
		"litellm.batches" -> "litellm.batches.batch_utils" [style="dotted"];
	}
	subgraph "cluster_litellm" {
		label="litellm";
		"litellm" -> "litellm.get_secret_str" [style="dotted"];
		"litellm" -> "litellm.get_secret" [style="dotted"];
		"litellm" -> "litellm.print_verbose" [style="dotted"];
		"litellm" -> "litellm.stream_chunk_builder" [style="dotted"];
		"litellm" -> "litellm.CreateFileRequest" [style="dotted"];
		"litellm" -> "litellm.vertex_chat_completion" [style="dotted"];
		"litellm" -> "litellm._logging" [style="dotted"];
		"litellm" -> "litellm.constants" [style="dotted"];
		"litellm" -> "litellm.timeout" [style="dotted"];
		"litellm" -> "litellm.cost_calculator" [style="dotted"];
		"litellm" -> "litellm.utils" [style="dotted"];
		"litellm" -> "litellm.main" [style="dotted"];
		"litellm" -> "litellm.integrations" [style="dotted"];
		"litellm" -> "litellm.exceptions" [style="dotted"];
		"litellm" -> "litellm.budget_manager" [style="dotted"];
		"litellm" -> "litellm.router" [style="dotted"];
		"litellm" -> "litellm.scheduler" [style="dotted"];
		"litellm" -> "litellm.anthropic_interface" [style="dotted"];
		"litellm" -> "litellm._service_logger" [style="dotted"];
		"litellm" -> "litellm.litellm_core_utils" [style="dotted"];
		"litellm" -> "litellm.llms" [style="dotted"];
		"litellm" -> "litellm.types" [style="dotted"];
		"litellm" -> "litellm.responses" [style="dotted"];
		"litellm" -> "litellm.caching" [style="dotted"];
		"litellm" -> "litellm._version" [style="dotted"];
		"litellm" -> "litellm.secret_managers" [style="dotted"];
		"litellm" -> "litellm.vector_stores" [style="dotted"];
		"litellm" -> "litellm.router_utils" [style="dotted"];
		"litellm" -> "litellm.router_strategy" [style="dotted"];
		"litellm" -> "litellm.realtime_api" [style="dotted"];
		"litellm" -> "litellm.batches" [style="dotted"];
		"litellm" -> "litellm.proxy" [style="dotted"];
		"litellm" -> "litellm._redis" [style="dotted"];
		"litellm" -> "litellm.files" [style="dotted"];
		"litellm" -> "litellm.assistants" [style="dotted"];
		"litellm" -> "litellm.batch_completion" [style="dotted"];
		"litellm" -> "litellm.rerank_api" [style="dotted"];
		"litellm" -> "litellm.fine_tuning" [style="dotted"];
	}
	subgraph "cluster_pandas.core.arrays.arrow" {
		label="pandas.core.arrays.arrow";
		"pandas.core.arrays.arrow" -> "pandas.core.arrays.arrow.accessors" [style="dotted"];
		"pandas.core.arrays.arrow" -> "pandas.core.arrays.arrow.array" [style="dotted"];
		"pandas.core.arrays.arrow" -> "pandas.core.arrays.arrow._arrow_utils" [style="dotted"];
		"pandas.core.arrays.arrow" -> "pandas.core.arrays.arrow.extension_types" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.bedrock.chat" {
		label="litellm.llms.bedrock.chat";
		"litellm.llms.bedrock.chat" -> "litellm.llms.bedrock.chat.converse_handler" [style="dotted"];
		"litellm.llms.bedrock.chat" -> "litellm.llms.bedrock.chat.invoke_handler" [style="dotted"];
		"litellm.llms.bedrock.chat" -> "litellm.llms.bedrock.chat.converse_transformation" [style="dotted"];
		"litellm.llms.bedrock.chat" -> "litellm.llms.bedrock.chat.invoke_transformations" [style="dotted"];
	}
	subgraph "cluster_pydeck" {
		label="pydeck";
		"pydeck" -> "pydeck.bindings" [style="dotted"];
		"pydeck" -> "pydeck.nbextension" [style="dotted"];
		"pydeck" -> "pydeck._version" [style="dotted"];
		"pydeck" -> "pydeck.settings" [style="dotted"];
		"pydeck" -> "pydeck.types" [style="dotted"];
		"pydeck" -> "pydeck.exceptions" [style="dotted"];
		"pydeck" -> "pydeck.data_utils" [style="dotted"];
		"pydeck" -> "pydeck.widget" [style="dotted"];
		"pydeck" -> "pydeck.frontend_semver" [style="dotted"];
		"pydeck" -> "pydeck.io" [style="dotted"];
	}
	subgraph "cluster_pandas._libs.tslibs" {
		label="pandas._libs.tslibs";
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.dtypes" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.conversion" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.nattype" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.np_datetime" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.offsets" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.parsing" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.period" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.timedeltas" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.timestamps" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.timezones" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.tzconversion" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.vectorized" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.fields" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.base" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.ccalendar" [style="dotted"];
		"pandas._libs.tslibs" -> "pandas._libs.tslibs.strptime" [style="dotted"];
	}
	subgraph "cluster_numpy.f2py" {
		label="numpy.f2py";
		"numpy.f2py" -> "numpy.f2py.__version__" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.cfuncs" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.capi_maps" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.cb_rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.symbolic" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.crackfortran" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.func2subr" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.common_rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.use_rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.f90mod_rules" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.f2py2e" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.diagnose" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py.auxfuncs" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py._backends" [style="dotted"];
		"numpy.f2py" -> "numpy.f2py._isocbind" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.base_llm.rerank" {
		label="litellm.llms.base_llm.rerank";
		"litellm.llms.base_llm.rerank" -> "litellm.llms.base_llm.rerank.transformation" [style="dotted"];
	}
	subgraph "cluster_black" {
		label="black";
		"black" -> "black.cache" [style="dotted"];
		"black" -> "black.comments" [style="dotted"];
		"black" -> "black.const" [style="dotted"];
		"black" -> "black.files" [style="dotted"];
		"black" -> "black.handle_ipynb_magics" [style="dotted"];
		"black" -> "black.linegen" [style="dotted"];
		"black" -> "black.lines" [style="dotted"];
		"black" -> "black.mode" [style="dotted"];
		"black" -> "black.nodes" [style="dotted"];
		"black" -> "black.output" [style="dotted"];
		"black" -> "black.parsing" [style="dotted"];
		"black" -> "black.ranges" [style="dotted"];
		"black" -> "black.report" [style="dotted"];
		"black" -> "black.concurrency" [style="dotted"];
		"black" -> "black.__main__" [style="dotted"];
		"black" -> "black._width_table" [style="dotted"];
		"black" -> "black.brackets" [style="dotted"];
		"black" -> "black.debug" [style="dotted"];
		"black" -> "black.numerics" [style="dotted"];
		"black" -> "black.resources" [style="dotted"];
		"black" -> "black.rusty" [style="dotted"];
		"black" -> "black.schema" [style="dotted"];
		"black" -> "black.strings" [style="dotted"];
		"black" -> "black.trans" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.cerebras" {
		label="litellm.llms.cerebras";
		"litellm.llms.cerebras" -> "litellm.llms.cerebras.chat" [style="dotted"];
	}
	subgraph "cluster_zmq" {
		label="zmq";
		"zmq" -> "zmq.backend" [style="dotted"];
		"zmq" -> "zmq.constants" [style="dotted"];
		"zmq" -> "zmq.zmq_version" [style="dotted"];
		"zmq" -> "zmq.zmq_version_info" [style="dotted"];
		"zmq" -> "zmq.error" [style="dotted"];
		"zmq" -> "zmq.ZMQError" [style="dotted"];
		"zmq" -> "zmq.sugar" [style="dotted"];
		"zmq" -> "zmq._future" [style="dotted"];
		"zmq" -> "zmq.green" [style="dotted"];
		"zmq" -> "zmq.asyncio" [style="dotted"];
		"zmq" -> "zmq.utils" [style="dotted"];
		"zmq" -> "zmq.eventloop" [style="dotted"];
		"zmq" -> "zmq._typing" [style="dotted"];
	}
	subgraph "cluster_langchain.chains.question_answering" {
		label="langchain.chains.question_answering";
		"langchain.chains.question_answering" -> "langchain.chains.question_answering.map_reduce_prompt" [style="dotted"];
		"langchain.chains.question_answering" -> "langchain.chains.question_answering.refine_prompts" [style="dotted"];
		"langchain.chains.question_answering" -> "langchain.chains.question_answering.stuff_prompt" [style="dotted"];
		"langchain.chains.question_answering" -> "langchain.chains.question_answering.chain" [style="dotted"];
		"langchain.chains.question_answering" -> "langchain.chains.question_answering.map_rerank_prompt" [style="dotted"];
	}
	subgraph "cluster_openai.types.fine_tuning.checkpoints" {
		label="openai.types.fine_tuning.checkpoints";
		"openai.types.fine_tuning.checkpoints" -> "openai.types.fine_tuning.checkpoints.permission_create_params" [style="dotted"];
		"openai.types.fine_tuning.checkpoints" -> "openai.types.fine_tuning.checkpoints.permission_create_response" [style="dotted"];
		"openai.types.fine_tuning.checkpoints" -> "openai.types.fine_tuning.checkpoints.permission_delete_response" [style="dotted"];
		"openai.types.fine_tuning.checkpoints" -> "openai.types.fine_tuning.checkpoints.permission_retrieve_params" [style="dotted"];
		"openai.types.fine_tuning.checkpoints" -> "openai.types.fine_tuning.checkpoints.permission_retrieve_response" [style="dotted"];
	}
	subgraph "cluster_openai.resources.beta.threads" {
		label="openai.resources.beta.threads";
		"openai.resources.beta.threads" -> "openai.resources.beta.threads.runs" [style="dotted"];
		"openai.resources.beta.threads" -> "openai.resources.beta.threads.threads" [style="dotted"];
		"openai.resources.beta.threads" -> "openai.resources.beta.threads.messages" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.xml" {
		label="datasets.packaged_modules.xml";
		"datasets.packaged_modules.xml" -> "datasets.packaged_modules.xml.xml" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.dialects.oracle" {
		label="sqlalchemy.dialects.oracle";
		"sqlalchemy.dialects.oracle" -> "sqlalchemy.dialects.oracle.dictionary" [style="dotted"];
		"sqlalchemy.dialects.oracle" -> "sqlalchemy.dialects.oracle.base" [style="dotted"];
		"sqlalchemy.dialects.oracle" -> "sqlalchemy.dialects.oracle.cx_oracle" [style="dotted"];
		"sqlalchemy.dialects.oracle" -> "sqlalchemy.dialects.oracle.oracledb" [style="dotted"];
		"sqlalchemy.dialects.oracle" -> "sqlalchemy.dialects.oracle.vector" [style="dotted"];
		"sqlalchemy.dialects.oracle" -> "sqlalchemy.dialects.oracle.types" [style="dotted"];
	}
	subgraph "cluster_langchain_openai" {
		label="langchain_openai";
		"langchain_openai" -> "langchain_openai.chat_models" [style="dotted"];
		"langchain_openai" -> "langchain_openai.embeddings" [style="dotted"];
		"langchain_openai" -> "langchain_openai.llms" [style="dotted"];
	}
	subgraph "cluster_langchain_community.llms" {
		label="langchain_community.llms";
		"langchain_community.llms" -> "langchain_community.llms.ai21" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.aleph_alpha" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.amazon_api_gateway" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.anthropic" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.anyscale" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.aphrodite" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.arcee" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.aviary" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.azureml_endpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.baichuan" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.baidu_qianfan_endpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.bananadev" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.baseten" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.beam" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.bedrock" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.bigdl_llm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.bittensor" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.cerebriumai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.chatglm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.clarifai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.cohere" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.ctransformers" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.ctranslate2" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.databricks" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.deepinfra" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.deepsparse" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.edenai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.fake" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.fireworks" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.forefrontai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.friendli" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.gigachat" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.google_palm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.gooseai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.gpt4all" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.gradient_ai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.huggingface_endpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.huggingface_hub" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.huggingface_pipeline" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.huggingface_text_gen_inference" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.human" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.ipex_llm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.javelin_ai_gateway" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.koboldai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.konko" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.llamacpp" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.llamafile" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.manifest" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.minimax" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.mlflow" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.mlflow_ai_gateway" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.mlx_pipeline" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.modal" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.mosaicml" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.nlpcloud" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.oci_data_science_model_deployment_endpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.oci_generative_ai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.octoai_endpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.ollama" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.opaqueprompts" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.openai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.openllm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.openlm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.outlines" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.pai_eas_endpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.petals" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.pipelineai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.predibase" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.predictionguard" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.promptlayer_openai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.replicate" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.rwkv" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.sagemaker_endpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.sambanova" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.self_hosted" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.self_hosted_hugging_face" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.stochasticai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.symblai_nebula" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.textgen" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.titan_takeoff" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.together" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.tongyi" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.vertexai" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.vllm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.watsonxllm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.weight_only_quantization" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.writer" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.xinference" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.yandex" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.yuan2" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.volcengine_maas" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.sparkllm" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.you" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.yi" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.Anthropic" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.Banana" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.CerebriumAI" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.Cohere" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.ForefrontAI" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.GooseAI" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.HuggingFaceHub" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.HuggingFaceTextGenInference" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.LlamaCpp" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.Modal" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.OpenAI" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.Petals" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.PipelineAI" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.SagemakerEndpoint" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.StochasticAI" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.Writer" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.utils" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.solar" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.moonshot" [style="dotted"];
		"langchain_community.llms" -> "langchain_community.llms.loading" [style="dotted"];
	}
	subgraph "cluster_urllib3.packages.backports" {
		label="urllib3.packages.backports";
		"urllib3.packages.backports" -> "urllib3.packages.backports.makefile" [style="dotted"];
	}
	subgraph "cluster_fqdn" {
		label="fqdn";
		"fqdn" -> "fqdn._compat" [style="dotted"];
	}
	subgraph "cluster_markdown_it.rules_core" {
		label="markdown_it.rules_core";
		"markdown_it.rules_core" -> "markdown_it.rules_core.block" [style="dotted"];
		"markdown_it.rules_core" -> "markdown_it.rules_core.inline" [style="dotted"];
		"markdown_it.rules_core" -> "markdown_it.rules_core.linkify" [style="dotted"];
		"markdown_it.rules_core" -> "markdown_it.rules_core.normalize" [style="dotted"];
		"markdown_it.rules_core" -> "markdown_it.rules_core.replacements" [style="dotted"];
		"markdown_it.rules_core" -> "markdown_it.rules_core.smartquotes" [style="dotted"];
		"markdown_it.rules_core" -> "markdown_it.rules_core.state_core" [style="dotted"];
		"markdown_it.rules_core" -> "markdown_it.rules_core.text_join" [style="dotted"];
	}
	subgraph "cluster_jedi.api" {
		label="jedi.api";
		"jedi.api" -> "jedi.api.completion_cache" [style="dotted"];
		"jedi.api" -> "jedi.api.classes" [style="dotted"];
		"jedi.api" -> "jedi.api.interpreter" [style="dotted"];
		"jedi.api" -> "jedi.api.helpers" [style="dotted"];
		"jedi.api" -> "jedi.api.completion" [style="dotted"];
		"jedi.api" -> "jedi.api.keywords" [style="dotted"];
		"jedi.api" -> "jedi.api.environment" [style="dotted"];
		"jedi.api" -> "jedi.api.project" [style="dotted"];
		"jedi.api" -> "jedi.api.errors" [style="dotted"];
		"jedi.api" -> "jedi.api.refactoring" [style="dotted"];
		"jedi.api" -> "jedi.api.exceptions" [style="dotted"];
		"jedi.api" -> "jedi.api.strings" [style="dotted"];
		"jedi.api" -> "jedi.api.file_name" [style="dotted"];
	}
	subgraph "cluster_pure_eval" {
		label="pure_eval";
		"pure_eval" -> "pure_eval.core" [style="dotted"];
		"pure_eval" -> "pure_eval.my_getattr_static" [style="dotted"];
		"pure_eval" -> "pure_eval.version" [style="dotted"];
		"pure_eval" -> "pure_eval.utils" [style="dotted"];
	}
	subgraph "cluster_pandas.api.typing" {
		label="pandas.api.typing";
	}
	subgraph "cluster_openai.types.chat.completions" {
		label="openai.types.chat.completions";
		"openai.types.chat.completions" -> "openai.types.chat.completions.message_list_params" [style="dotted"];
	}
	subgraph "cluster_websocket" {
		label="websocket";
		"websocket" -> "websocket._abnf" [style="dotted"];
		"websocket" -> "websocket._logging" [style="dotted"];
		"websocket" -> "websocket._app" [style="dotted"];
		"websocket" -> "websocket._core" [style="dotted"];
		"websocket" -> "websocket._exceptions" [style="dotted"];
		"websocket" -> "websocket._socket" [style="dotted"];
		"websocket" -> "websockets" [style="dotted"];
		"websocket" -> "websocket._ssl_compat" [style="dotted"];
		"websocket" -> "websocket._utils" [style="dotted"];
		"websocket" -> "websocket._handshake" [style="dotted"];
		"websocket" -> "websocket._http" [style="dotted"];
		"websocket" -> "websocket._url" [style="dotted"];
		"websocket" -> "websocket._cookiejar" [style="dotted"];
	}
	subgraph "cluster_zmq.sugar" {
		label="zmq.sugar";
		"zmq.sugar" -> "zmq.sugar.context" [style="dotted"];
		"zmq.sugar" -> "zmq.sugar.frame" [style="dotted"];
		"zmq.sugar" -> "zmq.sugar.poll" [style="dotted"];
		"zmq.sugar" -> "zmq.sugar.socket" [style="dotted"];
		"zmq.sugar" -> "zmq.sugar.tracker" [style="dotted"];
		"zmq.sugar" -> "zmq.sugar.version" [style="dotted"];
		"zmq.sugar" -> "zmq.sugar.stopwatch" [style="dotted"];
		"zmq.sugar" -> "zmq.sugar.attrsettr" [style="dotted"];
	}
	subgraph "cluster_pandas.errors" {
		label="pandas.errors";
	}
	subgraph "cluster_google._upb" {
		label="google._upb";
		"google._upb" -> "google._upb._message" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.guardrails.guardrail_hooks" {
		label="litellm.proxy.guardrails.guardrail_hooks";
		"litellm.proxy.guardrails.guardrail_hooks" -> "litellm.proxy.guardrails.guardrail_hooks.aporia_ai" [style="dotted"];
		"litellm.proxy.guardrails.guardrail_hooks" -> "litellm.proxy.guardrails.guardrail_hooks.bedrock_guardrails" [style="dotted"];
		"litellm.proxy.guardrails.guardrail_hooks" -> "litellm.proxy.guardrails.guardrail_hooks.lakera_ai" [style="dotted"];
		"litellm.proxy.guardrails.guardrail_hooks" -> "litellm.proxy.guardrails.guardrail_hooks.lakera_ai_v2" [style="dotted"];
		"litellm.proxy.guardrails.guardrail_hooks" -> "litellm.proxy.guardrails.guardrail_hooks.aim" [style="dotted"];
		"litellm.proxy.guardrails.guardrail_hooks" -> "litellm.proxy.guardrails.guardrail_hooks.presidio" [style="dotted"];
		"litellm.proxy.guardrails.guardrail_hooks" -> "litellm.proxy.guardrails.guardrail_hooks.guardrails_ai" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.petals.completion" {
		label="litellm.llms.petals.completion";
		"litellm.llms.petals.completion" -> "litellm.llms.petals.completion.handler" [style="dotted"];
		"litellm.llms.petals.completion" -> "litellm.llms.petals.completion.transformation" [style="dotted"];
	}
	subgraph "cluster_blib2to3" {
		label="blib2to3";
		"blib2to3" -> "blib2to3.pygram" [style="dotted"];
		"blib2to3" -> "blib2to3.pgen2" [style="dotted"];
		"blib2to3" -> "blib2to3.pytree" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.azure.files" {
		label="litellm.llms.azure.files";
		"litellm.llms.azure.files" -> "litellm.llms.azure.files.handler" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.voyage.embedding" {
		label="litellm.llms.voyage.embedding";
		"litellm.llms.voyage.embedding" -> "litellm.llms.voyage.embedding.transformation" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.playwright" {
		label="langchain_community.tools.playwright";
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.click" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.current_page" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.extract_hyperlinks" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.extract_text" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.get_elements" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.navigate" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.navigate_back" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.base" [style="dotted"];
		"langchain_community.tools.playwright" -> "langchain_community.tools.playwright.utils" [style="dotted"];
	}
	subgraph "cluster_datasets.packaged_modules.generator" {
		label="datasets.packaged_modules.generator";
		"datasets.packaged_modules.generator" -> "datasets.packaged_modules.generator.generator" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.groq.chat" {
		label="litellm.llms.groq.chat";
		"litellm.llms.groq.chat" -> "litellm.llms.groq.chat.handler" [style="dotted"];
		"litellm.llms.groq.chat" -> "litellm.llms.groq.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_streamlit.connections" {
		label="streamlit.connections";
		"streamlit.connections" -> "streamlit.connections.base_connection" [style="dotted"];
		"streamlit.connections" -> "streamlit.connections.snowflake_connection" [style="dotted"];
		"streamlit.connections" -> "streamlit.connections.snowpark_connection" [style="dotted"];
		"streamlit.connections" -> "streamlit.connections.sql_connection" [style="dotted"];
		"streamlit.connections" -> "streamlit.connections.util" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.memorize" {
		label="langchain_community.tools.memorize";
		"langchain_community.tools.memorize" -> "langchain_community.tools.memorize.tool" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.output" {
		label="prompt_toolkit.output";
		"prompt_toolkit.output" -> "prompt_toolkit.output.base" [style="dotted"];
		"prompt_toolkit.output" -> "prompt_toolkit.output.color_depth" [style="dotted"];
		"prompt_toolkit.output" -> "prompt_toolkit.output.defaults" [style="dotted"];
		"prompt_toolkit.output" -> "prompt_toolkit.output.windows10" [style="dotted"];
		"prompt_toolkit.output" -> "prompt_toolkit.output.vt100" [style="dotted"];
		"prompt_toolkit.output" -> "prompt_toolkit.output.win32" [style="dotted"];
		"prompt_toolkit.output" -> "prompt_toolkit.output.flush_stdout" [style="dotted"];
		"prompt_toolkit.output" -> "prompt_toolkit.output.plain_text" [style="dotted"];
		"prompt_toolkit.output" -> "prompt_toolkit.output.conemu" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.types" {
		label="google.ai.generativelanguage_v1beta.types";
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.content" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.cached_content" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.cache_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.citation" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.safety" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.discuss_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.file" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.file_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.retriever" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.generative_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.model" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.tuned_model" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.model_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.permission" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.permission_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.prediction_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.retriever_service" [style="dotted"];
		"google.ai.generativelanguage_v1beta.types" -> "google.ai.generativelanguage_v1beta.types.text_service" [style="dotted"];
	}
	subgraph "cluster_kivy.deps" {
		label="kivy.deps";
	}
	subgraph "cluster_datasets.packaged_modules.imagefolder" {
		label="datasets.packaged_modules.imagefolder";
		"datasets.packaged_modules.imagefolder" -> "datasets.packaged_modules.imagefolder.imagefolder" [style="dotted"];
	}
	subgraph "cluster_cachetools" {
		label="cachetools";
		"cachetools" -> "cachetools.keys" [style="dotted"];
		"cachetools" -> "cachetools._decorators" [style="dotted"];
	}
	subgraph "cluster_google.ai" {
		label="google.ai";
		"google.ai" -> "google.ai.generativelanguage" [style="dotted"];
		"google.ai" -> "google.ai.generativelanguage_v1beta" [style="dotted"];
	}
	subgraph "cluster_litellm.integrations.agentops" {
		label="litellm.integrations.agentops";
		"litellm.integrations.agentops" -> "litellm.integrations.agentops.agentops" [style="dotted"];
	}
	subgraph "cluster_idna" {
		label="idna";
		"idna" -> "idna.package_data" [style="dotted"];
		"idna" -> "idna.idnadata" [style="dotted"];
		"idna" -> "idna.core" [style="dotted"];
		"idna" -> "idna.intranges" [style="dotted"];
		"idna" -> "idna.uts46data" [style="dotted"];
	}
	subgraph "cluster_langchain_core.tracers" {
		label="langchain_core.tracers";
		"langchain_core.tracers" -> "langchain_core.tracers.base" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.langchain" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.evaluation" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.log_stream" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.schemas" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.stdout" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.root_listeners" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.event_stream" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers._streaming" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.context" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.run_collector" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.core" [style="dotted"];
		"langchain_core.tracers" -> "langchain_core.tracers.memory_stream" [style="dotted"];
	}
	subgraph "cluster_google.ai.generativelanguage_v1beta.services.cache_service" {
		label="google.ai.generativelanguage_v1beta.services.cache_service";
		"google.ai.generativelanguage_v1beta.services.cache_service" -> "google.ai.generativelanguage_v1beta.services.cache_service.pagers" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.cache_service" -> "google.ai.generativelanguage_v1beta.services.cache_service.async_client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.cache_service" -> "google.ai.generativelanguage_v1beta.services.cache_service.client" [style="dotted"];
		"google.ai.generativelanguage_v1beta.services.cache_service" -> "google.ai.generativelanguage_v1beta.services.cache_service.transports" [style="dotted"];
	}
	subgraph "cluster_distutils" {
		label="distutils";
		"distutils" -> "distutils.log" [style="dotted"];
		"distutils" -> "distutils.sysconfig" [style="dotted"];
		"distutils" -> "distutils.archive_util" [style="dotted"];
		"distutils" -> "distutils.core" [style="dotted"];
		"distutils" -> "distutils.errors" [style="dotted"];
		"distutils" -> "distutils.util" [style="dotted"];
		"distutils" -> "distutils.msvc9compiler" [style="dotted"];
		"distutils" -> "distutils.ccompiler" [style="dotted"];
		"distutils" -> "distutils.spawn" [style="dotted"];
		"distutils" -> "distutils.dir_util" [style="dotted"];
		"distutils" -> "distutils.file_util" [style="dotted"];
		"distutils" -> "distutils.dep_util" [style="dotted"];
		"distutils" -> "distutils.debug" [style="dotted"];
		"distutils" -> "distutils.text_file" [style="dotted"];
		"distutils" -> "distutils.fancy_getopt" [style="dotted"];
		"distutils" -> "distutils.extension" [style="dotted"];
		"distutils" -> "distutils._msvccompiler" [style="dotted"];
		"distutils" -> "distutils.command" [style="dotted"];
		"distutils" -> "distutils.filelist" [style="dotted"];
		"distutils" -> "distutils.version" [style="dotted"];
		"distutils" -> "distutils.cmd" [style="dotted"];
		"distutils" -> "distutils.dist" [style="dotted"];
		"distutils" -> "distutils.versionpredicate" [style="dotted"];
		"distutils" -> "distutils.config" [style="dotted"];
	}
	subgraph "cluster_langchain_core.document_loaders" {
		label="langchain_core.document_loaders";
		"langchain_core.document_loaders" -> "langchain_core.document_loaders.base" [style="dotted"];
		"langchain_core.document_loaders" -> "langchain_core.document_loaders.blob_loaders" [style="dotted"];
		"langchain_core.document_loaders" -> "langchain_core.document_loaders.langsmith" [style="dotted"];
	}
	subgraph "cluster_jupyter_client" {
		label="jupyter_client";
		"jupyter_client" -> "jupyter_client._version" [style="dotted"];
		"jupyter_client" -> "jupyter_client.kernelspec" [style="dotted"];
		"jupyter_client" -> "jupyter_client.asynchronous" [style="dotted"];
		"jupyter_client" -> "jupyter_client.blocking" [style="dotted"];
		"jupyter_client" -> "jupyter_client.client" [style="dotted"];
		"jupyter_client" -> "jupyter_client.connect" [style="dotted"];
		"jupyter_client" -> "jupyter_client.launcher" [style="dotted"];
		"jupyter_client" -> "jupyter_client.manager" [style="dotted"];
		"jupyter_client" -> "jupyter_client.multikernelmanager" [style="dotted"];
		"jupyter_client" -> "jupyter_client.provisioning" [style="dotted"];
		"jupyter_client" -> "jupyter_client.session" [style="dotted"];
		"jupyter_client" -> "jupyter_client.localinterfaces" [style="dotted"];
		"jupyter_client" -> "jupyter_client.win_interrupt" [style="dotted"];
		"jupyter_client" -> "jupyter_client.utils" [style="dotted"];
		"jupyter_client" -> "jupyter_client.managerabc" [style="dotted"];
		"jupyter_client" -> "jupyter_client.channels" [style="dotted"];
		"jupyter_client" -> "jupyter_client.channelsabc" [style="dotted"];
		"jupyter_client" -> "jupyter_client.clientabc" [style="dotted"];
		"jupyter_client" -> "jupyter_client.jsonutil" [style="dotted"];
		"jupyter_client" -> "jupyter_client.adapter" [style="dotted"];
		"jupyter_client" -> "jupyter_client.ssh" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.base_llm.realtime" {
		label="litellm.llms.base_llm.realtime";
		"litellm.llms.base_llm.realtime" -> "litellm.llms.base_llm.realtime.transformation" [style="dotted"];
	}
	subgraph "cluster_openai.types.beta.realtime" {
		label="openai.types.beta.realtime";
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.session" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.error_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.realtime_response" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_done_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.session_update_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.realtime_client_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.realtime_server_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_cancel_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_create_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.session_create_params" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.session_created_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.session_updated_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.transcription_session" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_created_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.realtime_connect_params" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.realtime_response_usage" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.session_create_response" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.realtime_response_status" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_text_done_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_content" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.rate_limits_updated_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_audio_done_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_text_delta_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_created_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_audio_delta_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.session_update_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.realtime_client_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_cancel_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_create_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.transcription_session_update" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_create_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_delete_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_clear_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_content_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_created_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_deleted_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_append_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_commit_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_output_item_done_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_retrieve_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_truncate_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_with_reference" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_cleared_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_content_part_done_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_output_item_added_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_truncated_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_content_part_added_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_committed_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.transcription_session_update_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.transcription_session_create_params" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.transcription_session_updated_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_create_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_delete_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_clear_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_audio_transcript_done_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_append_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_commit_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_audio_transcript_delta_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_retrieve_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_truncate_event_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_with_reference_param" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_speech_started_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.input_audio_buffer_speech_stopped_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_function_call_arguments_done_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.response_function_call_arguments_delta_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_input_audio_transcription_delta_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_input_audio_transcription_failed_event" [style="dotted"];
		"openai.types.beta.realtime" -> "openai.types.beta.realtime.conversation_item_input_audio_transcription_completed_event" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.openai" {
		label="litellm.llms.openai";
		"litellm.llms.openai" -> "litellm.llms.openai.cost_calculation" [style="dotted"];
		"litellm.llms.openai" -> "litellm.llms.openai.openai" [style="dotted"];
		"litellm.llms.openai" -> "litellm.llms.openai.common_utils" [style="dotted"];
		"litellm.llms.openai" -> "litellm.llms.openai.chat" [style="dotted"];
		"litellm.llms.openai" -> "litellm.llms.openai.transcriptions" [style="dotted"];
		"litellm.llms.openai" -> "litellm.llms.openai.image_variations" [style="dotted"];
		"litellm.llms.openai" -> "litellm.llms.openai.completion" [style="dotted"];
		"litellm.llms.openai" -> "litellm.llms.openai.realtime" [style="dotted"];
		"litellm.llms.openai" -> "litellm.llms.openai.image_generation" [style="dotted"];
		"litellm.llms.openai" -> "litellm.llms.openai.fine_tuning" [style="dotted"];
		"litellm.llms.openai" -> "litellm.llms.openai.responses" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.base_llm.anthropic_messages" {
		label="litellm.llms.base_llm.anthropic_messages";
		"litellm.llms.base_llm.anthropic_messages" -> "litellm.llms.base_llm.anthropic_messages.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.ui_crud_endpoints" {
		label="litellm.proxy.ui_crud_endpoints";
		"litellm.proxy.ui_crud_endpoints" -> "litellm.proxy.ui_crud_endpoints.proxy_setting_endpoints" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.google_places" {
		label="langchain_community.tools.google_places";
		"langchain_community.tools.google_places" -> "langchain_community.tools.google_places.tool" [style="dotted"];
	}
	subgraph "cluster_yt_dlp.utils" {
		label="yt_dlp.utils";
		"yt_dlp.utils" -> "yt_dlp.utils.traversal" [style="dotted"];
		"yt_dlp.utils" -> "yt_dlp.utils.NO_DEFAULT" [style="dotted"];
		"yt_dlp.utils" -> "yt_dlp.utils.Popen" [style="dotted"];
		"yt_dlp.utils" -> "yt_dlp.utils.deprecation_warning" [style="dotted"];
		"yt_dlp.utils" -> "yt_dlp.utils.format_field" [style="dotted"];
		"yt_dlp.utils" -> "yt_dlp.utils.remove_end" [style="dotted"];
		"yt_dlp.utils" -> "yt_dlp.utils.shell_quote" [style="dotted"];
		"yt_dlp.utils" -> "yt_dlp.utils.system_identifier" [style="dotted"];
		"yt_dlp.utils" -> "yt_dlp.utils.version_tuple" [style="dotted"];
		"yt_dlp.utils" -> "yt_dlp.utils._utils" [style="dotted"];
		"yt_dlp.utils" -> "yt_dlp.utils.networking" [style="dotted"];
		"yt_dlp.utils" -> "yt_dlp.utils._legacy" [style="dotted"];
		"yt_dlp.utils" -> "yt_dlp.utils._deprecated" [style="dotted"];
		"yt_dlp.utils" -> "yt_dlp.utils.progress" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.nasa" {
		label="langchain_community.tools.nasa";
		"langchain_community.tools.nasa" -> "langchain_community.tools.nasa.tool" [style="dotted"];
		"langchain_community.tools.nasa" -> "langchain_community.tools.nasa.prompt" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.mistral" {
		label="litellm.llms.mistral";
		"litellm.llms.mistral" -> "litellm.llms.mistral.mistral_chat_transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.deprecated_providers" {
		label="litellm.llms.deprecated_providers";
		"litellm.llms.deprecated_providers" -> "litellm.llms.deprecated_providers.aleph_alpha" [style="dotted"];
		"litellm.llms.deprecated_providers" -> "litellm.llms.deprecated_providers.palm" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.nuclia" {
		label="langchain_community.tools.nuclia";
		"langchain_community.tools.nuclia" -> "langchain_community.tools.nuclia.tool" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.azure" {
		label="litellm.llms.azure";
		"litellm.llms.azure" -> "litellm.llms.azure.cost_calculation" [style="dotted"];
		"litellm.llms.azure" -> "litellm.llms.azure.audio_transcriptions" [style="dotted"];
		"litellm.llms.azure" -> "litellm.llms.azure.azure" [style="dotted"];
		"litellm.llms.azure" -> "litellm.llms.azure.common_utils" [style="dotted"];
		"litellm.llms.azure" -> "litellm.llms.azure.completion" [style="dotted"];
		"litellm.llms.azure" -> "litellm.llms.azure.chat" [style="dotted"];
		"litellm.llms.azure" -> "litellm.llms.azure.realtime" [style="dotted"];
		"litellm.llms.azure" -> "litellm.llms.azure.batches" [style="dotted"];
		"litellm.llms.azure" -> "litellm.llms.azure.image_generation" [style="dotted"];
		"litellm.llms.azure" -> "litellm.llms.azure.files" [style="dotted"];
		"litellm.llms.azure" -> "litellm.llms.azure.fine_tuning" [style="dotted"];
		"litellm.llms.azure" -> "litellm.llms.azure.assistants" [style="dotted"];
		"litellm.llms.azure" -> "litellm.llms.azure.responses" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.github" {
		label="litellm.llms.github";
		"litellm.llms.github" -> "litellm.llms.github.chat" [style="dotted"];
	}
	subgraph "cluster_litellm.types.enterprise.enterprise_callbacks" {
		label="litellm.types.enterprise.enterprise_callbacks";
		"litellm.types.enterprise.enterprise_callbacks" -> "litellm.types.enterprise.enterprise_callbacks.send_emails" [style="dotted"];
	}
	subgraph "cluster_pandas.core.ops" {
		label="pandas.core.ops";
		"pandas.core.ops" -> "pandas.core.ops.missing" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.array_ops" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.common" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.docstrings" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.invalid" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.mask_ops" [style="dotted"];
		"pandas.core.ops" -> "pandas.core.ops.dispatch" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.anthropic.chat" {
		label="litellm.llms.anthropic.chat";
		"litellm.llms.anthropic.chat" -> "litellm.llms.anthropic.chat.handler" [style="dotted"];
		"litellm.llms.anthropic.chat" -> "litellm.llms.anthropic.chat.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.huggingface.embedding" {
		label="litellm.llms.huggingface.embedding";
		"litellm.llms.huggingface.embedding" -> "litellm.llms.huggingface.embedding.handler" [style="dotted"];
		"litellm.llms.huggingface.embedding" -> "litellm.llms.huggingface.embedding.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.analytics_endpoints" {
		label="litellm.proxy.analytics_endpoints";
		"litellm.proxy.analytics_endpoints" -> "litellm.proxy.analytics_endpoints.analytics_endpoints" [style="dotted"];
	}
	subgraph "cluster_tokenizers.pre_tokenizers" {
		label="tokenizers.pre_tokenizers";
	}
	subgraph "cluster_httpx_sse" {
		label="httpx_sse";
		"httpx_sse" -> "httpx_sse._api" [style="dotted"];
		"httpx_sse" -> "httpx_sse._exceptions" [style="dotted"];
		"httpx_sse" -> "httpx_sse._models" [style="dotted"];
		"httpx_sse" -> "httpx_sse._decoders" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.nla" {
		label="langchain_community.agent_toolkits.nla";
		"langchain_community.agent_toolkits.nla" -> "langchain_community.agent_toolkits.nla.toolkit" [style="dotted"];
		"langchain_community.agent_toolkits.nla" -> "langchain_community.agent_toolkits.nla.tool" [style="dotted"];
	}
	subgraph "cluster_markdown_it.helpers" {
		label="markdown_it.helpers";
		"markdown_it.helpers" -> "markdown_it.helpers.parse_link_destination" [style="dotted"];
		"markdown_it.helpers" -> "markdown_it.helpers.parse_link_label" [style="dotted"];
		"markdown_it.helpers" -> "markdown_it.helpers.parse_link_title" [style="dotted"];
	}
	subgraph "cluster_jinja2" {
		label="jinja2";
		"jinja2" -> "jinja2.nodes" [style="dotted"];
		"jinja2" -> "jinja2.bccache" [style="dotted"];
		"jinja2" -> "jinja2.environment" [style="dotted"];
		"jinja2" -> "jinja2.exceptions" [style="dotted"];
		"jinja2" -> "jinja2.loaders" [style="dotted"];
		"jinja2" -> "jinja2.runtime" [style="dotted"];
		"jinja2" -> "jinja2.utils" [style="dotted"];
		"jinja2" -> "jinja2.meta" [style="dotted"];
		"jinja2" -> "jinja2.ext" [style="dotted"];
		"jinja2" -> "jinja2.defaults" [style="dotted"];
		"jinja2" -> "jinja2.lexer" [style="dotted"];
		"jinja2" -> "jinja2.parser" [style="dotted"];
		"jinja2" -> "jinja2._identifier" [style="dotted"];
		"jinja2" -> "jinja2.filters" [style="dotted"];
		"jinja2" -> "jinja2.tests" [style="dotted"];
		"jinja2" -> "jinja2.async_utils" [style="dotted"];
		"jinja2" -> "jinja2.sandbox" [style="dotted"];
		"jinja2" -> "jinja2.compiler" [style="dotted"];
		"jinja2" -> "jinja2.idtracking" [style="dotted"];
		"jinja2" -> "jinja2.optimizer" [style="dotted"];
		"jinja2" -> "jinja2.visitor" [style="dotted"];
		"jinja2" -> "jinja2.constants" [style="dotted"];
		"jinja2" -> "jinja2.debug" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.fireworks_ai.completion" {
		label="litellm.llms.fireworks_ai.completion";
		"litellm.llms.fireworks_ai.completion" -> "litellm.llms.fireworks_ai.completion.transformation" [style="dotted"];
	}
	subgraph "cluster_litellm.integrations._types" {
		label="litellm.integrations._types";
		"litellm.integrations._types" -> "litellm.integrations._types.open_inference" [style="dotted"];
	}
	subgraph "cluster_git.objects" {
		label="git.objects";
		"git.objects" -> "git.objects.base" [style="dotted"];
		"git.objects" -> "git.objects.blob" [style="dotted"];
		"git.objects" -> "git.objects.commit" [style="dotted"];
		"git.objects" -> "git.objects.submodule" [style="dotted"];
		"git.objects" -> "git.objects.tag" [style="dotted"];
		"git.objects" -> "git.objects.tree" [style="dotted"];
		"git.objects" -> "git.objects.util" [style="dotted"];
		"git.objects" -> "git.objects.fun" [style="dotted"];
	}
	subgraph "cluster_narwhals" {
		label="narwhals";
		"narwhals" -> "narwhals.dtypes" [style="dotted"];
		"narwhals" -> "narwhals.selectors" [style="dotted"];
		"narwhals" -> "narwhals.dependencies" [style="dotted"];
		"narwhals" -> "narwhals.exceptions" [style="dotted"];
		"narwhals" -> "narwhals.dataframe" [style="dotted"];
		"narwhals" -> "narwhals.expr" [style="dotted"];
		"narwhals" -> "narwhals.functions" [style="dotted"];
		"narwhals" -> "narwhals.schema" [style="dotted"];
		"narwhals" -> "narwhals.series" [style="dotted"];
		"narwhals" -> "narwhals.translate" [style="dotted"];
		"narwhals" -> "narwhals.utils" [style="dotted"];
		"narwhals" -> "narwhals.typing" [style="dotted"];
		"narwhals" -> "narwhals._translate" [style="dotted"];
		"narwhals" -> "narwhals._enum" [style="dotted"];
		"narwhals" -> "narwhals._compliant" [style="dotted"];
		"narwhals" -> "narwhals._namespace" [style="dotted"];
		"narwhals" -> "narwhals._expression_parsing" [style="dotted"];
		"narwhals" -> "narwhals._arrow" [style="dotted"];
		"narwhals" -> "narwhals._duration" [style="dotted"];
		"narwhals" -> "narwhals._pandas_like" [style="dotted"];
		"narwhals" -> "narwhals._dask" [style="dotted"];
		"narwhals" -> "narwhals._polars" [style="dotted"];
		"narwhals" -> "narwhals._duckdb" [style="dotted"];
		"narwhals" -> "narwhals._interchange" [style="dotted"];
		"narwhals" -> "narwhals._spark_like" [style="dotted"];
		"narwhals" -> "narwhals._ibis" [style="dotted"];
		"narwhals" -> "narwhals.stable" [style="dotted"];
		"narwhals" -> "narwhals.series_cat" [style="dotted"];
		"narwhals" -> "narwhals.series_dt" [style="dotted"];
		"narwhals" -> "narwhals.series_list" [style="dotted"];
		"narwhals" -> "narwhals.series_str" [style="dotted"];
		"narwhals" -> "narwhals.series_struct" [style="dotted"];
		"narwhals" -> "narwhals.expr_cat" [style="dotted"];
		"narwhals" -> "narwhals.expr_dt" [style="dotted"];
		"narwhals" -> "narwhals.expr_list" [style="dotted"];
		"narwhals" -> "narwhals.expr_name" [style="dotted"];
		"narwhals" -> "narwhals.expr_str" [style="dotted"];
		"narwhals" -> "narwhals.expr_struct" [style="dotted"];
		"narwhals" -> "narwhals.group_by" [style="dotted"];
	}
	subgraph "cluster_openai.types.responses" {
		label="openai.types.responses";
		"openai.types.responses" -> "openai.types.responses.tool" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.tool_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.computer_tool" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.function_tool" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_item" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_error" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_usage" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.parsed_response" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_status" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.web_search_tool" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.file_search_tool" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.tool_choice_types" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_item_list" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.computer_tool_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.function_tool_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_includable" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_file" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_text" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.tool_choice_options" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_error_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_image" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_item" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_text" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_text_config" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.tool_choice_function" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_failed_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_stream_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.web_search_tool_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.file_search_tool_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.input_item_list_params" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_create_params" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_created_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_content" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_message" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_refusal" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_reasoning_item" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.tool_choice_types_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.easy_input_message_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_completed_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_retrieve_params" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_text_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_audio_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_incomplete_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_file_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_item_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_text_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_text_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_audio_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_in_progress_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_image_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_text_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_text_config_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.tool_choice_function_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_computer_tool_call" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_format_text_config" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_tool_call" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_message_item" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_refusal_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_web_search" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_content_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_refusal_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_message_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_refusal_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_reasoning_item_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_file_search_tool_call" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_item_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_content_part_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_tool_call_item" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_output_item_added_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_computer_tool_call_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_content_part_added_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_format_text_config_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_tool_call_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_web_search_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_code_interpreter_tool_call" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_message_content_list" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_audio_transcript_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_file_search_tool_call_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_text_annotation_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_audio_transcript_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_computer_tool_call_output_item" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_format_text_json_schema_config" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_tool_call_output_item" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_web_search_call_completed_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_web_search_call_searching_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_file_search_call_completed_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_file_search_call_searching_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_input_message_content_list_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_web_search_call_in_progress_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_file_search_call_in_progress_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_call_arguments_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_function_call_arguments_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_computer_tool_call_output_screenshot" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_format_text_json_schema_config_param" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_code_interpreter_call_code_done_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_code_interpreter_call_completed_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_code_interpreter_call_code_delta_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_code_interpreter_call_in_progress_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_code_interpreter_call_interpreting_event" [style="dotted"];
		"openai.types.responses" -> "openai.types.responses.response_computer_tool_call_output_screenshot_param" [style="dotted"];
	}
	subgraph "cluster_toml" {
		label="toml";
		"toml" -> "toml.encoder" [style="dotted"];
		"toml" -> "toml.decoder" [style="dotted"];
		"toml" -> "toml.tz" [style="dotted"];
	}
	subgraph "cluster_sqlalchemy.dialects" {
		label="sqlalchemy.dialects";
		"sqlalchemy.dialects" -> "sqlalchemy.dialects.sqlite" [style="dotted"];
		"sqlalchemy.dialects" -> "sqlalchemy.dialects._typing" [style="dotted"];
		"sqlalchemy.dialects" -> "sqlalchemy.dialects.postgresql" [style="dotted"];
		"sqlalchemy.dialects" -> "sqlalchemy.dialects.oracle" [style="dotted"];
		"sqlalchemy.dialects" -> "sqlalchemy.dialects.mysql" [style="dotted"];
		"sqlalchemy.dialects" -> "sqlalchemy.dialects.mssql" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.wolfram_alpha" {
		label="langchain_community.tools.wolfram_alpha";
		"langchain_community.tools.wolfram_alpha" -> "langchain_community.tools.wolfram_alpha.tool" [style="dotted"];
	}
	subgraph "cluster_bs4" {
		label="bs4";
		"bs4" -> "bs4.builder" [style="dotted"];
		"bs4" -> "bs4.dammit" [style="dotted"];
		"bs4" -> "bs4.css" [style="dotted"];
		"bs4" -> "bs4._deprecation" [style="dotted"];
		"bs4" -> "bs4.element" [style="dotted"];
		"bs4" -> "bs4.formatter" [style="dotted"];
		"bs4" -> "bs4.filter" [style="dotted"];
		"bs4" -> "bs4._typing" [style="dotted"];
		"bs4" -> "bs4.exceptions" [style="dotted"];
		"bs4" -> "bs4._warnings" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.playwright" {
		label="langchain_community.agent_toolkits.playwright";
		"langchain_community.agent_toolkits.playwright" -> "langchain_community.agent_toolkits.playwright.toolkit" [style="dotted"];
	}
	subgraph "cluster_litellm.proxy.middleware" {
		label="litellm.proxy.middleware";
		"litellm.proxy.middleware" -> "litellm.proxy.middleware.prometheus_auth_middleware" [style="dotted"];
	}
	subgraph "cluster_langchain_community.tools.financial_datasets" {
		label="langchain_community.tools.financial_datasets";
		"langchain_community.tools.financial_datasets" -> "langchain_community.tools.financial_datasets.balance_sheets" [style="dotted"];
		"langchain_community.tools.financial_datasets" -> "langchain_community.tools.financial_datasets.cash_flow_statements" [style="dotted"];
		"langchain_community.tools.financial_datasets" -> "langchain_community.tools.financial_datasets.income_statements" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.office365" {
		label="langchain_community.agent_toolkits.office365";
		"langchain_community.agent_toolkits.office365" -> "langchain_community.agent_toolkits.office365.toolkit" [style="dotted"];
	}
	subgraph "cluster_openai.resources.fine_tuning.jobs" {
		label="openai.resources.fine_tuning.jobs";
		"openai.resources.fine_tuning.jobs" -> "openai.resources.fine_tuning.jobs.jobs" [style="dotted"];
		"openai.resources.fine_tuning.jobs" -> "openai.resources.fine_tuning.jobs.checkpoints" [style="dotted"];
	}
	subgraph "cluster_langchain_community.agent_toolkits.zapier" {
		label="langchain_community.agent_toolkits.zapier";
		"langchain_community.agent_toolkits.zapier" -> "langchain_community.agent_toolkits.zapier.toolkit" [style="dotted"];
	}
	subgraph "cluster_pyasn1.codec" {
		label="pyasn1.codec";
		"pyasn1.codec" -> "pyasn1.codec.ber" [style="dotted"];
		"pyasn1.codec" -> "pyasn1.codec.streaming" [style="dotted"];
		"pyasn1.codec" -> "pyasn1.codec.cer" [style="dotted"];
		"pyasn1.codec" -> "pyasn1.codec.der" [style="dotted"];
	}
	subgraph "cluster_prompt_toolkit.clipboard" {
		label="prompt_toolkit.clipboard";
		"prompt_toolkit.clipboard" -> "prompt_toolkit.clipboard.base" [style="dotted"];
		"prompt_toolkit.clipboard" -> "prompt_toolkit.clipboard.in_memory" [style="dotted"];
	}
	subgraph "cluster_litellm.llms.ollama" {
		label="litellm.llms.ollama";
		"litellm.llms.ollama" -> "litellm.llms.ollama.completion" [style="dotted"];
		"litellm.llms.ollama" -> "litellm.llms.ollama.common_utils" [style="dotted"];
	}
	subgraph "cluster_pandas.core.strings" {
		label="pandas.core.strings";
		"pandas.core.strings" -> "pandas.core.strings.object_array" [style="dotted"];
		"pandas.core.strings" -> "pandas.core.strings.base" [style="dotted"];
		"pandas.core.strings" -> "pandas.core.strings.accessor" [style="dotted"];
	}
	subgraph "cluster_litellm.litellm_core_utils.audio_utils" {
		label="litellm.litellm_core_utils.audio_utils";
		"litellm.litellm_core_utils.audio_utils" -> "litellm.litellm_core_utils.audio_utils.utils" [style="dotted"];
	}
	"<PyiModuleGraph>" -> "gc" [];
	"<PyiModuleGraph>" -> "time" [];
	"<PyiModuleGraph>" -> "codecs" [];
	"<PyiModuleGraph>" -> "_sre" [];
	"<PyiModuleGraph>" -> "posix" [];
	"<PyiModuleGraph>" -> "posixpath" [];
	"<PyiModuleGraph>" -> "_posixsubprocess" [];
	"<PyiModuleGraph>" -> "_datetime" [];
	"<PyiModuleGraph>" -> "datetime" [];
	"<PyiModuleGraph>" -> "_pickle" [];
	"<PyiModuleGraph>" -> "warnings" [];
	"<PyiModuleGraph>" -> "stat" [];
	"<PyiModuleGraph>" -> "io" [];
	"<PyiModuleGraph>" -> "reprlib" [];
	"<PyiModuleGraph>" -> "genericpath" [];
	"<PyiModuleGraph>" -> "ntpath" [];
	"<PyiModuleGraph>" -> "collections" [];
	"<PyiModuleGraph>" -> "sre_constants" [];
	"<PyiModuleGraph>" -> "locale" [];
	"<PyiModuleGraph>" -> "types" [];
	"<PyiModuleGraph>" -> "_weakrefset" [];
	"<PyiModuleGraph>" -> "traceback" [];
	"<PyiModuleGraph>" -> "os" [];
	"<PyiModuleGraph>" -> "enum" [];
	"<PyiModuleGraph>" -> "operator" [];
	"<PyiModuleGraph>" -> "linecache" [];
	"<PyiModuleGraph>" -> "keyword" [];
	"<PyiModuleGraph>" -> "weakref" [];
	"<PyiModuleGraph>" -> "heapq" [];
	"<PyiModuleGraph>" -> "sre_compile" [];
	"<PyiModuleGraph>" -> "_collections_abc" [];
	"<PyiModuleGraph>" -> "abc" [];
	"<PyiModuleGraph>" -> "functools" [];
	"<PyiModuleGraph>" -> "_bootlocale" [];
	"<PyiModuleGraph>" -> "sre_parse" [];
	"<PyiModuleGraph>" -> "copyreg" [];
	"<PyiModuleGraph>" -> "re" [];
	"<PyiModuleGraph>" -> "encodings" [];
	"<PyiModuleGraph>" -> "/Users/andik/Downloads/fire_service/fire_detection_kivy.py" [];
	"<PyiModuleGraph>" -> "zipimport" [];
	"<PyiModuleGraph>" -> "_ssl" [];
	"<PyiModuleGraph>" -> "_json" [];
	"<PyiModuleGraph>" -> "_curses" [];
	"<PyiModuleGraph>" -> "_elementtree" [];
	"<PyiModuleGraph>" -> "_thread" [];
	"<PyiModuleGraph>" -> "queue" [];
	"urllib3.packages.six.moves.queue" -> "queue" [];
	"urllib3.packages.six" -> "__future__" [];
	"urllib3.packages.six" -> "functools" [];
	"urllib3.packages.six" -> "itertools" [];
	"urllib3.packages.six" -> "operator" [];
	"urllib3.packages.six" -> "sys" [];
	"urllib3.packages.six" -> "types" [];
	"urllib3.packages.six" -> "struct" [];
	"urllib3.packages.six" -> "io" [];
	"urllib3.packages.six" -> "StringIO" [];
	"urllib3.packages" -> "__future__" [];
	"urllib3" -> "__future__" [];
	"urllib3" -> "logging" [];
	"urllib3" -> "warnings" [];
	"urllib3.util.url" -> "__future__" [];
	"urllib3.util.url" -> "re" [];
	"urllib3.util.url" -> "collections" [];
	"urllib3.util.url" -> "idna" [];
	"urllib3.util" -> "__future__" [];
	"urllib3.util.wait" -> "errno" [];
	"urllib3.util.wait" -> "select" [];
	"urllib3.util.wait" -> "sys" [];
	"urllib3.util.wait" -> "functools" [];
	"urllib3.util.wait" -> "time" [];
	"urllib3.util.ssl_" -> "__future__" [];
	"urllib3.util.ssl_" -> "hmac" [];
	"urllib3.util.ssl_" -> "os" [];
	"urllib3.util.ssl_" -> "sys" [];
	"urllib3.util.ssl_" -> "warnings" [];
	"urllib3.util.ssl_" -> "binascii" [];
	"urllib3.util.ssl_" -> "hashlib" [];
	"urllib3.util.ssl_" -> "ssl" [];
	"urllib3.util.ssltransport" -> "io" [];
	"urllib3.util.ssltransport" -> "socket" [];
	"urllib3.util.ssltransport" -> "ssl" [];
	"socket" -> "_socket" [];
	"socket" -> "os" [];
	"socket" -> "sys" [];
	"socket" -> "io" [];
	"socket" -> "selectors" [];
	"socket" -> "enum" [];
	"socket" -> "errno" [];
	"socket" -> "array" [];
	"selectors" -> "abc" [];
	"selectors" -> "collections" [];
	"selectors" -> "math" [];
	"selectors" -> "select" [];
	"selectors" -> "sys" [];
	"ssl" -> "sys" [];
	"ssl" -> "os" [];
	"ssl" -> "collections" [];
	"ssl" -> "enum" [];
	"ssl" -> "_ssl" [];
	"ssl" -> "socket" [];
	"ssl" -> "base64" [];
	"ssl" -> "errno" [];
	"ssl" -> "warnings" [];
	"ssl" -> "time" [];
	"ssl" -> "calendar" [];
	"calendar" -> "sys" [];
	"calendar" -> "datetime" [];
	"calendar" -> "locale" [];
	"calendar" -> "itertools" [];
	"calendar" -> "argparse" [];
	"argparse" -> "os" [];
	"argparse" -> "re" [];
	"argparse" -> "sys" [];
	"argparse" -> "gettext" [];
	"argparse" -> "copy" [];
	"argparse" -> "shutil" [];
	"argparse" -> "textwrap" [];
	"argparse" -> "warnings" [];
	"textwrap" -> "re" [];
	"shutil" -> "os" [];
	"shutil" -> "sys" [];
	"shutil" -> "stat" [];
	"shutil" -> "fnmatch" [];
	"shutil" -> "collections" [];
	"shutil" -> "errno" [];
	"shutil" -> "zlib" [];
	"shutil" -> "bz2" [];
	"shutil" -> "lzma" [];
	"shutil" -> "pwd" [];
	"shutil" -> "grp" [];
	"shutil" -> "posix" [];
	"shutil" -> "nt" [];
	"shutil" -> "tarfile" [];
	"shutil" -> "zipfile" [];
	"zipfile" -> "binascii" [];
	"zipfile" -> "io" [];
	"zipfile" -> "itertools" [];
	"zipfile" -> "os" [];
	"zipfile" -> "posixpath" [];
	"zipfile" -> "shutil" [];
	"zipfile" -> "stat" [];
	"zipfile" -> "struct" [];
	"zipfile" -> "sys" [];
	"zipfile" -> "threading" [];
	"zipfile" -> "time" [];
	"zipfile" -> "contextlib" [];
	"zipfile" -> "zlib" [];
	"zipfile" -> "bz2" [];
	"zipfile" -> "lzma" [];
	"zipfile" -> "warnings" [];
	"zipfile" -> "py_compile" [];
	"zipfile" -> "argparse" [];
	"py_compile" -> "enum" [];
	"py_compile" -> "os" [];
	"py_compile" -> "os.path" [];
	"py_compile" -> "sys" [];
	"py_compile" -> "traceback" [];
	"os.path" -> "posixpath" [];
	"os.path" -> "os" [];
	"importlib.machinery" -> "_imp" [];
	"importlib" -> "_imp" [];
	"importlib" -> "sys" [];
	"importlib" -> "_frozen_importlib" [];
	"importlib" -> "_frozen_importlib_external" [];
	"importlib" -> "types" [];
	"importlib" -> "warnings" [];
	"importlib._common" -> "os" [];
	"importlib._common" -> "pathlib" [];
	"importlib._common" -> "zipfile" [];
	"importlib._common" -> "tempfile" [];
	"importlib._common" -> "functools" [];
	"importlib._common" -> "contextlib" [];
	"tempfile" -> "functools" [];
	"tempfile" -> "warnings" [];
	"tempfile" -> "io" [];
	"tempfile" -> "os" [];
	"tempfile" -> "shutil" [];
	"tempfile" -> "errno" [];
	"tempfile" -> "random" [];
	"tempfile" -> "sys" [];
	"tempfile" -> "types" [];
	"tempfile" -> "weakref" [];
	"tempfile" -> "_thread" [];
	"random" -> "warnings" [];
	"random" -> "math" [];
	"random" -> "os" [];
	"random" -> "_collections_abc" [];
	"random" -> "itertools" [];
	"random" -> "bisect" [];
	"random" -> "_random" [];
	"random" -> "_sha512" [];
	"random" -> "hashlib" [];
	"random" -> "statistics" [];
	"random" -> "time" [];
	"statistics" -> "math" [];
	"statistics" -> "numbers" [];
	"statistics" -> "random" [];
	"statistics" -> "fractions" [];
	"statistics" -> "decimal" [];
	"statistics" -> "itertools" [];
	"statistics" -> "bisect" [];
	"statistics" -> "operator" [];
	"statistics" -> "collections" [];
	"statistics" -> "_statistics" [];
	"decimal" -> "_decimal" [];
	"decimal" -> "_pydecimal" [];
	"_pydecimal" -> "math" [];
	"_pydecimal" -> "numbers" [];
	"_pydecimal" -> "sys" [];
	"_pydecimal" -> "collections" [];
	"_pydecimal" -> "contextvars" [];
	"_pydecimal" -> "re" [];
	"_pydecimal" -> "locale" [];
	"_pydecimal" -> "itertools" [];
	"contextvars" -> "_contextvars" [];
	"fractions" -> "decimal" [];
	"fractions" -> "math" [];
	"fractions" -> "numbers" [];
	"fractions" -> "operator" [];
	"fractions" -> "re" [];
	"fractions" -> "sys" [];
	"numbers" -> "abc" [];
	"bisect" -> "_bisect" [];
	"pathlib" -> "fnmatch" [];
	"pathlib" -> "functools" [];
	"pathlib" -> "io" [];
	"pathlib" -> "ntpath" [];
	"pathlib" -> "os" [];
	"pathlib" -> "posixpath" [];
	"pathlib" -> "re" [];
	"pathlib" -> "sys" [];
	"pathlib" -> "_collections_abc" [];
	"pathlib" -> "errno" [];
	"pathlib" -> "operator" [];
	"pathlib" -> "stat" [];
	"pathlib" -> "nt" [];
	"pathlib" -> "pwd" [];
	"pathlib" -> "grp" [];
	"urllib.parse" -> "re" [];
	"urllib.parse" -> "sys" [];
	"urllib.parse" -> "types" [];
	"urllib.parse" -> "collections" [];
	"urllib.parse" -> "warnings" [];
	"urllib.parse" -> "unicodedata" [];
	"importlib._bootstrap" -> "_frozen_importlib_external" [];
	"importlib._bootstrap_external" -> "_imp" [];
	"importlib._bootstrap_external" -> "_io" [];
	"importlib._bootstrap_external" -> "sys" [];
	"importlib._bootstrap_external" -> "_warnings" [];
	"importlib._bootstrap_external" -> "marshal" [];
	"importlib._bootstrap_external" -> "nt" [];
	"importlib._bootstrap_external" -> "winreg" [];
	"importlib._bootstrap_external" -> "posix" [];
	"importlib._bootstrap_external" -> "tokenize" [];
	"importlib.metadata" -> "io" [];
	"importlib.metadata" -> "os" [];
	"importlib.metadata" -> "re" [];
	"importlib.metadata" -> "abc" [];
	"importlib.metadata" -> "csv" [];
	"importlib.metadata" -> "sys" [];
	"importlib.metadata" -> "email" [];
	"importlib.metadata" -> "pathlib" [];
	"importlib.metadata" -> "zipfile" [];
	"importlib.metadata" -> "operator" [];
	"importlib.metadata" -> "functools" [];
	"importlib.metadata" -> "itertools" [];
	"importlib.metadata" -> "posixpath" [];
	"importlib.metadata" -> "collections" [];
	"importlib.metadata" -> "configparser" [];
	"importlib.metadata" -> "contextlib" [];
	"importlib.metadata" -> "pep517" [];
	"importlib.abc" -> "_frozen_importlib" [];
	"importlib.abc" -> "_frozen_importlib_external" [];
	"importlib.abc" -> "abc" [];
	"importlib.abc" -> "warnings" [];
	"importlib.abc" -> "typing" [];
	"typing" -> "abc" [];
	"typing" -> "collections" [];
	"typing" -> "contextlib" [];
	"typing" -> "functools" [];
	"typing" -> "operator" [];
	"typing" -> "re" [];
	"typing" -> "sys" [];
	"typing" -> "types" [];
	"configparser" -> "collections" [];
	"configparser" -> "functools" [];
	"configparser" -> "io" [];
	"configparser" -> "itertools" [];
	"configparser" -> "os" [];
	"configparser" -> "re" [];
	"configparser" -> "sys" [];
	"configparser" -> "warnings" [];
	"email.parser" -> "io" [];
	"email._policybase" -> "abc" [];
	"email.utils" -> "os" [];
	"email.utils" -> "re" [];
	"email.utils" -> "time" [];
	"email.utils" -> "random" [];
	"email.utils" -> "socket" [];
	"email.utils" -> "datetime" [];
	"email._parseaddr" -> "time" [];
	"email._parseaddr" -> "calendar" [];
	"email.feedparser" -> "re" [];
	"email.feedparser" -> "collections" [];
	"email.feedparser" -> "io" [];
	"email.message" -> "re" [];
	"email.message" -> "uu" [];
	"email.message" -> "quopri" [];
	"email.message" -> "io" [];
	"email.policy" -> "re" [];
	"email.policy" -> "sys" [];
	"email.contentmanager" -> "binascii" [];
	"email.quoprimime" -> "re" [];
	"email.quoprimime" -> "string" [];
	"string" -> "_string" [];
	"string" -> "re" [];
	"string" -> "collections" [];
	"email.headerregistry" -> "types" [];
	"email.iterators" -> "sys" [];
	"email.iterators" -> "io" [];
	"email.generator" -> "re" [];
	"email.generator" -> "sys" [];
	"email.generator" -> "time" [];
	"email.generator" -> "random" [];
	"email.generator" -> "copy" [];
	"email.generator" -> "io" [];
	"email._encoded_words" -> "re" [];
	"email._encoded_words" -> "base64" [];
	"email._encoded_words" -> "binascii" [];
	"email._encoded_words" -> "functools" [];
	"email._encoded_words" -> "string" [];
	"quopri" -> "binascii" [];
	"quopri" -> "io" [];
	"quopri" -> "sys" [];
	"quopri" -> "getopt" [];
	"getopt" -> "os" [];
	"getopt" -> "gettext" [];
	"getopt" -> "sys" [];
	"uu" -> "binascii" [];
	"uu" -> "os" [];
	"uu" -> "sys" [];
	"uu" -> "optparse" [];
	"optparse" -> "sys" [];
	"optparse" -> "os" [];
	"optparse" -> "textwrap" [];
	"optparse" -> "gettext" [];
	"email._header_value_parser" -> "re" [];
	"email._header_value_parser" -> "sys" [];
	"email._header_value_parser" -> "urllib" [];
	"email._header_value_parser" -> "string" [];
	"email._header_value_parser" -> "operator" [];
	"email.header" -> "re" [];
	"email.header" -> "binascii" [];
	"email.base64mime" -> "base64" [];
	"email.base64mime" -> "binascii" [];
	"email.charset" -> "functools" [];
	"email.encoders" -> "base64" [];
	"email.encoders" -> "quopri" [];
	"csv" -> "re" [];
	"csv" -> "_csv" [];
	"csv" -> "io" [];
	"tokenize" -> "builtins" [];
	"tokenize" -> "codecs" [];
	"tokenize" -> "collections" [];
	"tokenize" -> "io" [];
	"tokenize" -> "itertools" [];
	"tokenize" -> "re" [];
	"tokenize" -> "sys" [];
	"tokenize" -> "token" [];
	"tokenize" -> "argparse" [];
	"contextlib" -> "abc" [];
	"contextlib" -> "sys" [];
	"contextlib" -> "_collections_abc" [];
	"contextlib" -> "collections" [];
	"contextlib" -> "functools" [];
	"contextlib" -> "types" [];
	"threading" -> "os" [];
	"threading" -> "sys" [];
	"threading" -> "_thread" [];
	"threading" -> "functools" [];
	"threading" -> "time" [];
	"threading" -> "_weakrefset" [];
	"threading" -> "itertools" [];
	"threading" -> "_collections" [];
	"threading" -> "collections" [];
	"threading" -> "traceback" [];
	"threading" -> "_threading_local" [];
	"_threading_local" -> "weakref" [];
	"_threading_local" -> "contextlib" [];
	"_threading_local" -> "threading" [];
	"tarfile" -> "builtins" [];
	"tarfile" -> "sys" [];
	"tarfile" -> "os" [];
	"tarfile" -> "io" [];
	"tarfile" -> "shutil" [];
	"tarfile" -> "stat" [];
	"tarfile" -> "time" [];
	"tarfile" -> "struct" [];
	"tarfile" -> "copy" [];
	"tarfile" -> "re" [];
	"tarfile" -> "pwd" [];
	"tarfile" -> "grp" [];
	"tarfile" -> "zlib" [];
	"tarfile" -> "bz2" [];
	"tarfile" -> "lzma" [];
	"tarfile" -> "gzip" [];
	"tarfile" -> "argparse" [];
	"gzip" -> "struct" [];
	"gzip" -> "sys" [];
	"gzip" -> "time" [];
	"gzip" -> "os" [];
	"gzip" -> "zlib" [];
	"gzip" -> "builtins" [];
	"gzip" -> "io" [];
	"gzip" -> "_compression" [];
	"gzip" -> "warnings" [];
	"gzip" -> "errno" [];
	"gzip" -> "argparse" [];
	"_compression" -> "io" [];
	"lzma" -> "builtins" [];
	"lzma" -> "io" [];
	"lzma" -> "os" [];
	"lzma" -> "_lzma" [];
	"lzma" -> "_compression" [];
	"bz2" -> "builtins" [];
	"bz2" -> "io" [];
	"bz2" -> "os" [];
	"bz2" -> "_compression" [];
	"bz2" -> "threading" [];
	"bz2" -> "_bz2" [];
	"fnmatch" -> "os" [];
	"fnmatch" -> "posixpath" [];
	"fnmatch" -> "re" [];
	"fnmatch" -> "functools" [];
	"fnmatch" -> "itertools" [];
	"copy" -> "types" [];
	"copy" -> "weakref" [];
	"copy" -> "copyreg" [];
	"copy" -> "'org.python'" [];
	"gettext" -> "os" [];
	"gettext" -> "re" [];
	"gettext" -> "sys" [];
	"gettext" -> "warnings" [];
	"gettext" -> "locale" [];
	"gettext" -> "builtins" [];
	"gettext" -> "struct" [];
	"gettext" -> "errno" [];
	"gettext" -> "copy" [];
	"base64" -> "re" [];
	"base64" -> "struct" [];
	"base64" -> "binascii" [];
	"base64" -> "sys" [];
	"base64" -> "getopt" [];
	"hashlib" -> "_sha1" [];
	"hashlib" -> "_md5" [];
	"hashlib" -> "_sha256" [];
	"hashlib" -> "_sha512" [];
	"hashlib" -> "_blake2" [];
	"hashlib" -> "_sha3" [];
	"hashlib" -> "_hashlib" [];
	"hashlib" -> "logging" [];
	"hmac" -> "warnings" [];
	"hmac" -> "_hashlib" [];
	"hmac" -> "_operator" [];
	"hmac" -> "hashlib" [];
	"urllib3.util.response" -> "__future__" [];
	"urllib3.util.response" -> "urllib3.packages.six.moves" [];
	"urllib3.util.connection" -> "__future__" [];
	"urllib3.util.connection" -> "socket" [];
	"urllib3.contrib._appengine_environ" -> "os" [];
	"urllib3.contrib.pyopenssl" -> "__future__" [];
	"urllib3.contrib.pyopenssl" -> "OpenSSL" [];
	"urllib3.contrib.pyopenssl" -> "cryptography" [];
	"urllib3.contrib.pyopenssl" -> "'cryptography.hazmat'" [];
	"urllib3.contrib.pyopenssl" -> "'cryptography.x509'" [];
	"urllib3.contrib.pyopenssl" -> "io" [];
	"urllib3.contrib.pyopenssl" -> "socket" [];
	"urllib3.contrib.pyopenssl" -> "logging" [];
	"urllib3.contrib.pyopenssl" -> "ssl" [];
	"urllib3.contrib.pyopenssl" -> "sys" [];
	"urllib3.contrib.pyopenssl" -> "'OpenSSL.crypto'" [];
	"urllib3.contrib.pyopenssl" -> "idna" [];
	"urllib3.packages.backports.makefile" -> "io" [];
	"urllib3.packages.backports.makefile" -> "socket" [];
	"idna.intranges" -> "bisect" [];
	"idna.intranges" -> "typing" [];
	"idna.core" -> "bisect" [];
	"idna.core" -> "unicodedata" [];
	"idna.core" -> "re" [];
	"idna.core" -> "typing" [];
	"idna.uts46data" -> "typing" [];
	"urllib3.util.timeout" -> "__future__" [];
	"urllib3.util.timeout" -> "time" [];
	"urllib3.util.timeout" -> "socket" [];
	"urllib3.util.retry" -> "__future__" [];
	"urllib3.util.retry" -> "email" [];
	"urllib3.util.retry" -> "logging" [];
	"urllib3.util.retry" -> "re" [];
	"urllib3.util.retry" -> "time" [];
	"urllib3.util.retry" -> "warnings" [];
	"urllib3.util.retry" -> "collections" [];
	"urllib3.util.retry" -> "itertools" [];
	"urllib3.util.request" -> "__future__" [];
	"urllib3.util.request" -> "base64" [];
	"urllib3.util.request" -> "brotli" [];
	"urllib3.response" -> "__future__" [];
	"urllib3.response" -> "io" [];
	"urllib3.response" -> "logging" [];
	"urllib3.response" -> "zlib" [];
	"urllib3.response" -> "contextlib" [];
	"urllib3.response" -> "socket" [];
	"urllib3.response" -> "brotli" [];
	"urllib3.connection" -> "__future__" [];
	"urllib3.connection" -> "datetime" [];
	"urllib3.connection" -> "logging" [];
	"urllib3.connection" -> "os" [];
	"urllib3.connection" -> "re" [];
	"urllib3.connection" -> "socket" [];
	"urllib3.connection" -> "warnings" [];
	"urllib3.connection" -> "ssl" [];
	"urllib3._collections" -> "__future__" [];
	"urllib3._collections" -> "collections" [];
	"urllib3._collections" -> "threading" [];
	"urllib3.poolmanager" -> "__future__" [];
	"urllib3.poolmanager" -> "collections" [];
	"urllib3.poolmanager" -> "functools" [];
	"urllib3.poolmanager" -> "logging" [];
	"urllib3.poolmanager" -> "'urllib3.packages.six.moves.urllib.parse'" [];
	"urllib3.request" -> "__future__" [];
	"urllib3.request" -> "'urllib3.packages.six.moves.urllib.parse'" [];
	"urllib3.filepost" -> "__future__" [];
	"urllib3.filepost" -> "binascii" [];
	"urllib3.filepost" -> "codecs" [];
	"urllib3.filepost" -> "os" [];
	"urllib3.filepost" -> "io" [];
	"urllib3.fields" -> "__future__" [];
	"urllib3.fields" -> "mimetypes" [];
	"urllib3.fields" -> "re" [];
	"mimetypes" -> "os" [];
	"mimetypes" -> "sys" [];
	"mimetypes" -> "posixpath" [];
	"mimetypes" -> "winreg" [];
	"mimetypes" -> "getopt" [];
	"urllib3.connectionpool" -> "__future__" [];
	"urllib3.connectionpool" -> "errno" [];
	"urllib3.connectionpool" -> "logging" [];
	"urllib3.connectionpool" -> "socket" [];
	"urllib3.connectionpool" -> "sys" [];
	"urllib3.connectionpool" -> "warnings" [];
	"urllib3.connectionpool" -> "urllib3.packages.six.moves" [];
	"urllib3.util.queue" -> "collections" [];
	"urllib3.util.queue" -> "urllib3.packages.six.moves" [];
	"urllib3.util.queue" -> "Queue" [];
	"urllib3.exceptions" -> "__future__" [];
	"logging" -> "sys" [];
	"logging" -> "os" [];
	"logging" -> "time" [];
	"logging" -> "io" [];
	"logging" -> "re" [];
	"logging" -> "traceback" [];
	"logging" -> "warnings" [];
	"logging" -> "weakref" [];
	"logging" -> "string" [];
	"logging" -> "threading" [];
	"logging" -> "pickle" [];
	"logging" -> "atexit" [];
	"pickle" -> "types" [];
	"pickle" -> "copyreg" [];
	"pickle" -> "itertools" [];
	"pickle" -> "functools" [];
	"pickle" -> "sys" [];
	"pickle" -> "struct" [];
	"pickle" -> "re" [];
	"pickle" -> "io" [];
	"pickle" -> "codecs" [];
	"pickle" -> "_compat_pickle" [];
	"pickle" -> "_pickle" [];
	"pickle" -> "org" [];
	"pickle" -> "pprint" [];
	"pprint" -> "collections" [];
	"pprint" -> "re" [];
	"pprint" -> "sys" [];
	"pprint" -> "types" [];
	"pprint" -> "io" [];
	"pprint" -> "time" [];
	"urllib3.packages.ssl_match_hostname" -> "sys" [];
	"urllib3.packages.ssl_match_hostname" -> "ssl" [];
	"urllib3.packages.ssl_match_hostname" -> "'backports.ssl_match_hostname'" [];
	"urllib3.packages.ssl_match_hostname._implementation" -> "re" [];
	"urllib3.packages.ssl_match_hostname._implementation" -> "sys" [];
	"urllib3.packages.ssl_match_hostname._implementation" -> "ipaddress" [];
	"ipaddress" -> "functools" [];
	"ipaddress" -> "re" [];
	"struct" -> "_struct" [];
	"importlib.util" -> "contextlib" [];
	"importlib.util" -> "_imp" [];
	"importlib.util" -> "functools" [];
	"importlib.util" -> "sys" [];
	"importlib.util" -> "types" [];
	"importlib.util" -> "warnings" [];
	"queue" -> "threading" [];
	"queue" -> "types" [];
	"queue" -> "collections" [];
	"queue" -> "heapq" [];
	"queue" -> "time" [];
	"queue" -> "_queue" [];
	"http.client" -> "io" [];
	"http.client" -> "re" [];
	"http.client" -> "socket" [];
	"http.client" -> "ssl" [];
	"http.client" -> "warnings" [];
	"http" -> "enum" [];
	"_elementtree" -> "pyexpat" [];
	"xml.sax.expatreader" -> "sys" [];
	"xml.sax.expatreader" -> "_weakref" [];
	"xml.sax.expatreader" -> "weakref" [];
	"xml.sax.saxutils" -> "os" [];
	"xml.sax.saxutils" -> "io" [];
	"xml.sax.saxutils" -> "codecs" [];
	"xml.sax.saxutils" -> "sys" [];
	"urllib.request" -> "base64" [];
	"urllib.request" -> "bisect" [];
	"urllib.request" -> "email" [];
	"urllib.request" -> "hashlib" [];
	"urllib.request" -> "io" [];
	"urllib.request" -> "os" [];
	"urllib.request" -> "posixpath" [];
	"urllib.request" -> "re" [];
	"urllib.request" -> "socket" [];
	"urllib.request" -> "string" [];
	"urllib.request" -> "sys" [];
	"urllib.request" -> "time" [];
	"urllib.request" -> "tempfile" [];
	"urllib.request" -> "contextlib" [];
	"urllib.request" -> "warnings" [];
	"urllib.request" -> "ssl" [];
	"urllib.request" -> "mimetypes" [];
	"urllib.request" -> "ftplib" [];
	"urllib.request" -> "nturl2path" [];
	"urllib.request" -> "getpass" [];
	"urllib.request" -> "fnmatch" [];
	"urllib.request" -> "_scproxy" [];
	"urllib.request" -> "winreg" [];
	"getpass" -> "contextlib" [];
	"getpass" -> "io" [];
	"getpass" -> "os" [];
	"getpass" -> "sys" [];
	"getpass" -> "warnings" [];
	"getpass" -> "pwd" [];
	"getpass" -> "termios" [];
	"getpass" -> "msvcrt" [];
	"nturl2path" -> "string" [];
	"ftplib" -> "sys" [];
	"ftplib" -> "socket" [];
	"ftplib" -> "ssl" [];
	"ftplib" -> "warnings" [];
	"ftplib" -> "re" [];
	"ftplib" -> "netrc" [];
	"netrc" -> "os" [];
	"netrc" -> "shlex" [];
	"netrc" -> "stat" [];
	"netrc" -> "pwd" [];
	"shlex" -> "os" [];
	"shlex" -> "re" [];
	"shlex" -> "sys" [];
	"shlex" -> "collections" [];
	"shlex" -> "io" [];
	"shlex" -> "warnings" [];
	"http.cookiejar" -> "os" [];
	"http.cookiejar" -> "copy" [];
	"http.cookiejar" -> "datetime" [];
	"http.cookiejar" -> "re" [];
	"http.cookiejar" -> "time" [];
	"http.cookiejar" -> "threading" [];
	"http.cookiejar" -> "calendar" [];
	"http.cookiejar" -> "logging" [];
	"http.cookiejar" -> "io" [];
	"http.cookiejar" -> "warnings" [];
	"http.cookiejar" -> "traceback" [];
	"urllib.response" -> "tempfile" [];
	"xml.sax" -> "io" [];
	"xml.sax" -> "os" [];
	"xml.sax" -> "sys" [];
	"xml.sax" -> "'org.python'" [];
	"xml.parsers.expat" -> "sys" [];
	"xml.parsers.expat" -> "pyexpat" [];
	"xml.sax._exceptions" -> "sys" [];
	"xml.sax._exceptions" -> "'java.lang'" [];
	"xml.etree.ElementTree" -> "sys" [];
	"xml.etree.ElementTree" -> "re" [];
	"xml.etree.ElementTree" -> "warnings" [];
	"xml.etree.ElementTree" -> "io" [];
	"xml.etree.ElementTree" -> "collections" [];
	"xml.etree.ElementTree" -> "contextlib" [];
	"xml.etree.ElementTree" -> "locale" [];
	"xml.etree.ElementTree" -> "pyexpat" [];
	"xml.etree.ElementTree" -> "_elementtree" [];
	"xml.etree.ElementPath" -> "re" [];
	"xml.etree.ElementInclude" -> "copy" [];
	"_curses" -> "curses" [];
	"curses" -> "_curses" [];
	"curses" -> "os" [];
	"curses" -> "sys" [];
	"curses.has_key" -> "_curses" [];
	"json.decoder" -> "re" [];
	"json.decoder" -> "_json" [];
	"json.scanner" -> "re" [];
	"json.scanner" -> "_json" [];
	"json" -> "codecs" [];
	"json.encoder" -> "re" [];
	"json.encoder" -> "_json" [];
	"_ssl" -> "socket" [];
	"zipimport" -> "_frozen_importlib_external" [];
	"zipimport" -> "_frozen_importlib" [];
	"zipimport" -> "_imp" [];
	"zipimport" -> "_io" [];
	"zipimport" -> "marshal" [];
	"zipimport" -> "sys" [];
	"zipimport" -> "time" [];
	"zipimport" -> "os" [];
	"zipimport" -> "zlib" [];
	"zipimport" -> "io" [];
	"zipimport" -> "pathlib" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "kivy" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "PIL" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "ai_agent" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "warnings" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "stat" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "io" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "reprlib" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "genericpath" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "ntpath" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "collections" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "codecs" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "sre_constants" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "locale" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "posixpath" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "types" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "_weakrefset" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "traceback" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "os" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "enum" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "operator" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "linecache" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "keyword" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "weakref" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "heapq" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "sre_compile" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "_collections_abc" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "abc" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "functools" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "_bootlocale" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "sre_parse" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "copyreg" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "re" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "encodings" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgutil.py" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_multiprocessing.py" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_inspect.py" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "/Users/andik/flask_env/lib/python3.9/site-packages/_pyinstaller_hooks_contrib/rthooks/pyi_rth_traitlets.py" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth__tkinter.py" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_setuptools.py" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_kivy.py" [];
	"/Users/andik/Downloads/fire_service/fire_detection_kivy.py" -> "/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_gstreamer.py" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_gstreamer.py" -> "os" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_gstreamer.py" -> "sys" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_kivy.py" -> "os" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_kivy.py" -> "sys" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_setuptools.py" -> "os" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_setuptools.py" -> "setuptools" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_setuptools.py" -> "_distutils_hack" [];
	"_distutils_hack" -> "sys" [];
	"_distutils_hack" -> "os" [];
	"_distutils_hack" -> "re" [];
	"_distutils_hack" -> "importlib" [];
	"_distutils_hack" -> "warnings" [];
	"_distutils_hack" -> "traceback" [];
	"setuptools" -> "fnmatch" [];
	"setuptools" -> "functools" [];
	"setuptools" -> "os" [];
	"setuptools" -> "re" [];
	"setuptools" -> "syslog" [];
	"setuptools._vendor.pyparsing" -> "string" [];
	"setuptools._vendor.pyparsing" -> "weakref" [];
	"setuptools._vendor.pyparsing" -> "copy" [];
	"setuptools._vendor.pyparsing" -> "sys" [];
	"setuptools._vendor.pyparsing" -> "warnings" [];
	"setuptools._vendor.pyparsing" -> "re" [];
	"setuptools._vendor.pyparsing" -> "sre_constants" [];
	"setuptools._vendor.pyparsing" -> "collections" [];
	"setuptools._vendor.pyparsing" -> "pprint" [];
	"setuptools._vendor.pyparsing" -> "traceback" [];
	"setuptools._vendor.pyparsing" -> "types" [];
	"setuptools._vendor.pyparsing" -> "datetime" [];
	"setuptools._vendor.pyparsing" -> "_thread" [];
	"setuptools._vendor.pyparsing" -> "threading" [];
	"setuptools._vendor.pyparsing" -> "ordereddict" [];
	"setuptools._vendor.pyparsing" -> "__builtin__" [];
	"setuptools._vendor.pyparsing" -> "pdb" [];
	"setuptools._vendor.pyparsing" -> "uuid" [];
	"uuid" -> "os" [];
	"uuid" -> "sys" [];
	"uuid" -> "enum" [];
	"uuid" -> "platform" [];
	"uuid" -> "io" [];
	"uuid" -> "shutil" [];
	"uuid" -> "subprocess" [];
	"uuid" -> "socket" [];
	"uuid" -> "_uuid" [];
	"uuid" -> "random" [];
	"uuid" -> "time" [];
	"uuid" -> "hashlib" [];
	"subprocess" -> "builtins" [];
	"subprocess" -> "errno" [];
	"subprocess" -> "io" [];
	"subprocess" -> "os" [];
	"subprocess" -> "time" [];
	"subprocess" -> "signal" [];
	"subprocess" -> "sys" [];
	"subprocess" -> "threading" [];
	"subprocess" -> "warnings" [];
	"subprocess" -> "contextlib" [];
	"subprocess" -> "types" [];
	"subprocess" -> "pwd" [];
	"subprocess" -> "grp" [];
	"subprocess" -> "msvcrt" [];
	"subprocess" -> "_winapi" [];
	"subprocess" -> "_posixsubprocess" [];
	"subprocess" -> "select" [];
	"subprocess" -> "selectors" [];
	"signal" -> "_signal" [];
	"signal" -> "functools" [];
	"signal" -> "enum" [];
	"platform" -> "collections" [];
	"platform" -> "os" [];
	"platform" -> "re" [];
	"platform" -> "sys" [];
	"platform" -> "subprocess" [];
	"platform" -> "functools" [];
	"platform" -> "itertools" [];
	"platform" -> "winreg" [];
	"platform" -> "_winreg" [];
	"platform" -> "plistlib" [];
	"platform" -> "java" [];
	"platform" -> "'java.lang'" [];
	"platform" -> "socket" [];
	"platform" -> "struct" [];
	"platform" -> "vms_lib" [];
	"plistlib" -> "binascii" [];
	"plistlib" -> "codecs" [];
	"plistlib" -> "datetime" [];
	"plistlib" -> "enum" [];
	"plistlib" -> "io" [];
	"plistlib" -> "itertools" [];
	"plistlib" -> "os" [];
	"plistlib" -> "re" [];
	"plistlib" -> "struct" [];
	"pdb" -> "os" [];
	"pdb" -> "io" [];
	"pdb" -> "re" [];
	"pdb" -> "sys" [];
	"pdb" -> "cmd" [];
	"pdb" -> "bdb" [];
	"pdb" -> "dis" [];
	"pdb" -> "code" [];
	"pdb" -> "glob" [];
	"pdb" -> "pprint" [];
	"pdb" -> "signal" [];
	"pdb" -> "inspect" [];
	"pdb" -> "tokenize" [];
	"pdb" -> "traceback" [];
	"pdb" -> "linecache" [];
	"pdb" -> "readline" [];
	"pdb" -> "shlex" [];
	"pdb" -> "runpy" [];
	"pdb" -> "pydoc" [];
	"pdb" -> "getopt" [];
	"pdb" -> "pdb" [];
	"pydoc" -> "builtins" [];
	"pydoc" -> "inspect" [];
	"pydoc" -> "io" [];
	"pydoc" -> "os" [];
	"pydoc" -> "pkgutil" [];
	"pydoc" -> "platform" [];
	"pydoc" -> "re" [];
	"pydoc" -> "sys" [];
	"pydoc" -> "sysconfig" [];
	"pydoc" -> "time" [];
	"pydoc" -> "tokenize" [];
	"pydoc" -> "warnings" [];
	"pydoc" -> "collections" [];
	"pydoc" -> "reprlib" [];
	"pydoc" -> "traceback" [];
	"pydoc" -> "tempfile" [];
	"pydoc" -> "subprocess" [];
	"pydoc" -> "tty" [];
	"pydoc" -> "textwrap" [];
	"pydoc" -> "select" [];
	"pydoc" -> "threading" [];
	"pydoc" -> "webbrowser" [];
	"pydoc" -> "getopt" [];
	"webbrowser" -> "os" [];
	"webbrowser" -> "shlex" [];
	"webbrowser" -> "shutil" [];
	"webbrowser" -> "sys" [];
	"webbrowser" -> "subprocess" [];
	"webbrowser" -> "threading" [];
	"webbrowser" -> "copy" [];
	"webbrowser" -> "glob" [];
	"webbrowser" -> "pwd" [];
	"webbrowser" -> "socket" [];
	"webbrowser" -> "tempfile" [];
	"webbrowser" -> "getopt" [];
	"http.server" -> "copy" [];
	"http.server" -> "datetime" [];
	"http.server" -> "html" [];
	"http.server" -> "io" [];
	"http.server" -> "mimetypes" [];
	"http.server" -> "os" [];
	"http.server" -> "posixpath" [];
	"http.server" -> "select" [];
	"http.server" -> "shutil" [];
	"http.server" -> "socket" [];
	"http.server" -> "socketserver" [];
	"http.server" -> "sys" [];
	"http.server" -> "time" [];
	"http.server" -> "contextlib" [];
	"http.server" -> "functools" [];
	"http.server" -> "pwd" [];
	"http.server" -> "base64" [];
	"http.server" -> "binascii" [];
	"http.server" -> "subprocess" [];
	"http.server" -> "argparse" [];
	"socketserver" -> "socket" [];
	"socketserver" -> "selectors" [];
	"socketserver" -> "os" [];
	"socketserver" -> "sys" [];
	"socketserver" -> "threading" [];
	"socketserver" -> "io" [];
	"socketserver" -> "time" [];
	"socketserver" -> "traceback" [];
	"html" -> "re" [];
	"tty" -> "termios" [];
	"sysconfig" -> "os" [];
	"sysconfig" -> "sys" [];
	"sysconfig" -> "os.path" [];
	"sysconfig" -> "re" [];
	"sysconfig" -> "pprint" [];
	"sysconfig" -> "types" [];
	"sysconfig" -> "_imp" [];
	"sysconfig" -> "_osx_support" [];
	"sysconfig" -> "warnings" [];
	"sysconfig" -> "_aix_support" [];
	"sysconfig" -> "_sysconfigdata__darwin_darwin" [];
	"_aix_support" -> "sys" [];
	"_aix_support" -> "sysconfig" [];
	"_aix_support" -> "subprocess" [];
	"_aix_support" -> "_bootsubprocess" [];
	"_bootsubprocess" -> "os" [];
	"_osx_support" -> "os" [];
	"_osx_support" -> "re" [];
	"_osx_support" -> "sys" [];
	"_osx_support" -> "contextlib" [];
	"_osx_support" -> "tempfile" [];
	"pkgutil" -> "collections" [];
	"pkgutil" -> "functools" [];
	"pkgutil" -> "importlib" [];
	"pkgutil" -> "os" [];
	"pkgutil" -> "os.path" [];
	"pkgutil" -> "re" [];
	"pkgutil" -> "sys" [];
	"pkgutil" -> "types" [];
	"pkgutil" -> "warnings" [];
	"pkgutil" -> "marshal" [];
	"pkgutil" -> "inspect" [];
	"pkgutil" -> "zipimport" [];
	"runpy" -> "sys" [];
	"runpy" -> "io" [];
	"runpy" -> "types" [];
	"runpy" -> "os" [];
	"runpy" -> "pkgutil" [];
	"runpy" -> "warnings" [];
	"inspect" -> "abc" [];
	"inspect" -> "ast" [];
	"inspect" -> "dis" [];
	"inspect" -> "enum" [];
	"inspect" -> "itertools" [];
	"inspect" -> "linecache" [];
	"inspect" -> "os" [];
	"inspect" -> "re" [];
	"inspect" -> "sys" [];
	"inspect" -> "tokenize" [];
	"inspect" -> "token" [];
	"inspect" -> "types" [];
	"inspect" -> "warnings" [];
	"inspect" -> "functools" [];
	"inspect" -> "builtins" [];
	"inspect" -> "operator" [];
	"inspect" -> "collections" [];
	"inspect" -> "argparse" [];
	"inspect" -> "importlib" [];
	"ast" -> "sys" [];
	"ast" -> "_ast" [];
	"ast" -> "contextlib" [];
	"ast" -> "enum" [];
	"ast" -> "inspect" [];
	"ast" -> "collections" [];
	"ast" -> "warnings" [];
	"ast" -> "argparse" [];
	"glob" -> "contextlib" [];
	"glob" -> "os" [];
	"glob" -> "re" [];
	"glob" -> "fnmatch" [];
	"glob" -> "sys" [];
	"code" -> "sys" [];
	"code" -> "traceback" [];
	"code" -> "codeop" [];
	"code" -> "readline" [];
	"code" -> "argparse" [];
	"codeop" -> "__future__" [];
	"codeop" -> "warnings" [];
	"dis" -> "sys" [];
	"dis" -> "types" [];
	"dis" -> "collections" [];
	"dis" -> "io" [];
	"dis" -> "opcode" [];
	"dis" -> "argparse" [];
	"opcode" -> "_opcode" [];
	"bdb" -> "fnmatch" [];
	"bdb" -> "sys" [];
	"bdb" -> "os" [];
	"bdb" -> "inspect" [];
	"bdb" -> "linecache" [];
	"bdb" -> "reprlib" [];
	"cmd" -> "string" [];
	"cmd" -> "sys" [];
	"cmd" -> "readline" [];
	"setuptools._vendor.packaging.version" -> "__future__" [];
	"setuptools._vendor.packaging.version" -> "collections" [];
	"setuptools._vendor.packaging.version" -> "itertools" [];
	"setuptools._vendor.packaging.version" -> "re" [];
	"setuptools._vendor.packaging.version" -> "typing" [];
	"setuptools._vendor.packaging.utils" -> "__future__" [];
	"setuptools._vendor.packaging.utils" -> "re" [];
	"setuptools._vendor.packaging.utils" -> "typing" [];
	"setuptools._vendor.packaging.tags" -> "__future__" [];
	"setuptools._vendor.packaging.tags" -> "imp" [];
	"setuptools._vendor.packaging.tags" -> "logging" [];
	"setuptools._vendor.packaging.tags" -> "os" [];
	"setuptools._vendor.packaging.tags" -> "platform" [];
	"setuptools._vendor.packaging.tags" -> "re" [];
	"setuptools._vendor.packaging.tags" -> "struct" [];
	"setuptools._vendor.packaging.tags" -> "sys" [];
	"setuptools._vendor.packaging.tags" -> "sysconfig" [];
	"setuptools._vendor.packaging.tags" -> "warnings" [];
	"setuptools._vendor.packaging.tags" -> "typing" [];
	"setuptools._vendor.packaging.tags" -> "_manylinux" [];
	"setuptools._vendor.packaging.tags" -> "ctypes" [];
	"ctypes" -> "os" [];
	"ctypes" -> "sys" [];
	"ctypes" -> "types" [];
	"ctypes" -> "_ctypes" [];
	"ctypes" -> "struct" [];
	"ctypes" -> "nt" [];
	"ctypes._endian" -> "sys" [];
	"imp" -> "_imp" [];
	"imp" -> "importlib" [];
	"imp" -> "os" [];
	"imp" -> "sys" [];
	"imp" -> "tokenize" [];
	"imp" -> "types" [];
	"imp" -> "warnings" [];
	"setuptools._vendor.packaging.specifiers" -> "__future__" [];
	"setuptools._vendor.packaging.specifiers" -> "abc" [];
	"setuptools._vendor.packaging.specifiers" -> "functools" [];
	"setuptools._vendor.packaging.specifiers" -> "itertools" [];
	"setuptools._vendor.packaging.specifiers" -> "re" [];
	"setuptools._vendor.packaging.specifiers" -> "typing" [];
	"setuptools._vendor.packaging.requirements" -> "__future__" [];
	"setuptools._vendor.packaging.requirements" -> "string" [];
	"setuptools._vendor.packaging.requirements" -> "re" [];
	"setuptools._vendor.packaging.requirements" -> "'setuptools.extern.pyparsing'" [];
	"setuptools._vendor.packaging.requirements" -> "urllib" [];
	"setuptools._vendor.packaging.requirements" -> "typing" [];
	"setuptools._vendor.packaging.markers" -> "__future__" [];
	"setuptools._vendor.packaging.markers" -> "operator" [];
	"setuptools._vendor.packaging.markers" -> "os" [];
	"setuptools._vendor.packaging.markers" -> "platform" [];
	"setuptools._vendor.packaging.markers" -> "sys" [];
	"setuptools._vendor.packaging.markers" -> "'setuptools.extern.pyparsing'" [];
	"setuptools._vendor.packaging.markers" -> "typing" [];
	"setuptools._vendor.packaging._typing" -> "typing" [];
	"setuptools._vendor.packaging._structures" -> "__future__" [];
	"setuptools._vendor.packaging._compat" -> "__future__" [];
	"setuptools._vendor.packaging._compat" -> "sys" [];
	"setuptools._vendor.packaging._compat" -> "typing" [];
	"setuptools._vendor.packaging.__about__" -> "__future__" [];
	"setuptools._vendor.packaging" -> "__future__" [];
	"setuptools._vendor.ordered_set" -> "itertools" [];
	"setuptools._vendor.ordered_set" -> "collections" [];
	"setuptools._vendor.more_itertools.recipes" -> "warnings" [];
	"setuptools._vendor.more_itertools.recipes" -> "collections" [];
	"setuptools._vendor.more_itertools.recipes" -> "itertools" [];
	"setuptools._vendor.more_itertools.recipes" -> "operator" [];
	"setuptools._vendor.more_itertools.recipes" -> "random" [];
	"setuptools._vendor.more_itertools.more" -> "warnings" [];
	"setuptools._vendor.more_itertools.more" -> "collections" [];
	"setuptools._vendor.more_itertools.more" -> "functools" [];
	"setuptools._vendor.more_itertools.more" -> "heapq" [];
	"setuptools._vendor.more_itertools.more" -> "itertools" [];
	"setuptools._vendor.more_itertools.more" -> "math" [];
	"setuptools._vendor.more_itertools.more" -> "queue" [];
	"setuptools._vendor.more_itertools.more" -> "random" [];
	"setuptools._vendor.more_itertools.more" -> "operator" [];
	"setuptools._vendor.more_itertools.more" -> "sys" [];
	"setuptools._vendor.more_itertools.more" -> "time" [];
	"concurrent.futures.thread" -> "itertools" [];
	"concurrent.futures.thread" -> "queue" [];
	"concurrent.futures.thread" -> "threading" [];
	"concurrent.futures.thread" -> "types" [];
	"concurrent.futures.thread" -> "weakref" [];
	"concurrent.futures.thread" -> "os" [];
	"concurrent.futures.process" -> "os" [];
	"concurrent.futures.process" -> "queue" [];
	"concurrent.futures.process" -> "multiprocessing" [];
	"concurrent.futures.process" -> "threading" [];
	"concurrent.futures.process" -> "weakref" [];
	"concurrent.futures.process" -> "functools" [];
	"concurrent.futures.process" -> "itertools" [];
	"concurrent.futures.process" -> "sys" [];
	"concurrent.futures.process" -> "traceback" [];
	"multiprocessing.queues" -> "sys" [];
	"multiprocessing.queues" -> "os" [];
	"multiprocessing.queues" -> "threading" [];
	"multiprocessing.queues" -> "collections" [];
	"multiprocessing.queues" -> "time" [];
	"multiprocessing.queues" -> "types" [];
	"multiprocessing.queues" -> "weakref" [];
	"multiprocessing.queues" -> "errno" [];
	"multiprocessing.queues" -> "queue" [];
	"multiprocessing.queues" -> "_multiprocessing" [];
	"multiprocessing.queues" -> "traceback" [];
	"multiprocessing.synchronize" -> "threading" [];
	"multiprocessing.synchronize" -> "sys" [];
	"multiprocessing.synchronize" -> "tempfile" [];
	"multiprocessing.synchronize" -> "_multiprocessing" [];
	"multiprocessing.synchronize" -> "time" [];
	"multiprocessing.synchronize" -> "struct" [];
	"multiprocessing.heap" -> "bisect" [];
	"multiprocessing.heap" -> "collections" [];
	"multiprocessing.heap" -> "mmap" [];
	"multiprocessing.heap" -> "os" [];
	"multiprocessing.heap" -> "sys" [];
	"multiprocessing.heap" -> "tempfile" [];
	"multiprocessing.heap" -> "threading" [];
	"multiprocessing.heap" -> "_winapi" [];
	"multiprocessing.resource_tracker" -> "os" [];
	"multiprocessing.resource_tracker" -> "signal" [];
	"multiprocessing.resource_tracker" -> "sys" [];
	"multiprocessing.resource_tracker" -> "threading" [];
	"multiprocessing.resource_tracker" -> "warnings" [];
	"multiprocessing.resource_tracker" -> "_multiprocessing" [];
	"multiprocessing.resource_tracker" -> "_posixshmem" [];
	"multiprocessing.spawn" -> "os" [];
	"multiprocessing.spawn" -> "sys" [];
	"multiprocessing.spawn" -> "runpy" [];
	"multiprocessing.spawn" -> "types" [];
	"multiprocessing.spawn" -> "msvcrt" [];
	"multiprocessing.spawn" -> "_winapi" [];
	"multiprocessing.process" -> "os" [];
	"multiprocessing.process" -> "sys" [];
	"multiprocessing.process" -> "signal" [];
	"multiprocessing.process" -> "itertools" [];
	"multiprocessing.process" -> "threading" [];
	"multiprocessing.process" -> "_weakrefset" [];
	"multiprocessing.process" -> "traceback" [];
	"multiprocessing.util" -> "os" [];
	"multiprocessing.util" -> "itertools" [];
	"multiprocessing.util" -> "sys" [];
	"multiprocessing.util" -> "weakref" [];
	"multiprocessing.util" -> "atexit" [];
	"multiprocessing.util" -> "threading" [];
	"multiprocessing.util" -> "subprocess" [];
	"multiprocessing.util" -> "logging" [];
	"multiprocessing.util" -> "shutil" [];
	"multiprocessing.util" -> "tempfile" [];
	"multiprocessing.util" -> "traceback" [];
	"multiprocessing.util" -> "_posixsubprocess" [];
	"multiprocessing.forkserver" -> "errno" [];
	"multiprocessing.forkserver" -> "os" [];
	"multiprocessing.forkserver" -> "selectors" [];
	"multiprocessing.forkserver" -> "signal" [];
	"multiprocessing.forkserver" -> "socket" [];
	"multiprocessing.forkserver" -> "struct" [];
	"multiprocessing.forkserver" -> "sys" [];
	"multiprocessing.forkserver" -> "threading" [];
	"multiprocessing.forkserver" -> "warnings" [];
	"multiprocessing.context" -> "os" [];
	"multiprocessing.context" -> "sys" [];
	"multiprocessing.context" -> "threading" [];
	"multiprocessing.popen_spawn_win32" -> "os" [];
	"multiprocessing.popen_spawn_win32" -> "msvcrt" [];
	"multiprocessing.popen_spawn_win32" -> "signal" [];
	"multiprocessing.popen_spawn_win32" -> "sys" [];
	"multiprocessing.popen_spawn_win32" -> "_winapi" [];
	"multiprocessing.popen_forkserver" -> "io" [];
	"multiprocessing.popen_forkserver" -> "os" [];
	"multiprocessing.popen_spawn_posix" -> "io" [];
	"multiprocessing.popen_spawn_posix" -> "os" [];
	"multiprocessing.popen_fork" -> "os" [];
	"multiprocessing.popen_fork" -> "signal" [];
	"multiprocessing.sharedctypes" -> "ctypes" [];
	"multiprocessing.sharedctypes" -> "weakref" [];
	"multiprocessing.pool" -> "collections" [];
	"multiprocessing.pool" -> "itertools" [];
	"multiprocessing.pool" -> "os" [];
	"multiprocessing.pool" -> "queue" [];
	"multiprocessing.pool" -> "threading" [];
	"multiprocessing.pool" -> "time" [];
	"multiprocessing.pool" -> "traceback" [];
	"multiprocessing.pool" -> "types" [];
	"multiprocessing.pool" -> "warnings" [];
	"multiprocessing.dummy" -> "threading" [];
	"multiprocessing.dummy" -> "sys" [];
	"multiprocessing.dummy" -> "weakref" [];
	"multiprocessing.dummy" -> "array" [];
	"multiprocessing.dummy" -> "queue" [];
	"multiprocessing.dummy.connection" -> "queue" [];
	"multiprocessing.managers" -> "sys" [];
	"multiprocessing.managers" -> "threading" [];
	"multiprocessing.managers" -> "signal" [];
	"multiprocessing.managers" -> "array" [];
	"multiprocessing.managers" -> "queue" [];
	"multiprocessing.managers" -> "time" [];
	"multiprocessing.managers" -> "types" [];
	"multiprocessing.managers" -> "os" [];
	"multiprocessing.managers" -> "traceback" [];
	"multiprocessing.shared_memory" -> "functools" [];
	"multiprocessing.shared_memory" -> "mmap" [];
	"multiprocessing.shared_memory" -> "os" [];
	"multiprocessing.shared_memory" -> "errno" [];
	"multiprocessing.shared_memory" -> "struct" [];
	"multiprocessing.shared_memory" -> "secrets" [];
	"multiprocessing.shared_memory" -> "types" [];
	"multiprocessing.shared_memory" -> "_winapi" [];
	"multiprocessing.shared_memory" -> "_posixshmem" [];
	"secrets" -> "base64" [];
	"secrets" -> "binascii" [];
	"secrets" -> "hmac" [];
	"secrets" -> "random" [];
	"multiprocessing.reduction" -> "abc" [];
	"multiprocessing.reduction" -> "copyreg" [];
	"multiprocessing.reduction" -> "functools" [];
	"multiprocessing.reduction" -> "io" [];
	"multiprocessing.reduction" -> "os" [];
	"multiprocessing.reduction" -> "pickle" [];
	"multiprocessing.reduction" -> "socket" [];
	"multiprocessing.reduction" -> "sys" [];
	"multiprocessing.reduction" -> "_winapi" [];
	"multiprocessing.reduction" -> "array" [];
	"multiprocessing.resource_sharer" -> "os" [];
	"multiprocessing.resource_sharer" -> "signal" [];
	"multiprocessing.resource_sharer" -> "socket" [];
	"multiprocessing.resource_sharer" -> "sys" [];
	"multiprocessing.resource_sharer" -> "threading" [];
	"multiprocessing.connection" -> "io" [];
	"multiprocessing.connection" -> "os" [];
	"multiprocessing.connection" -> "sys" [];
	"multiprocessing.connection" -> "socket" [];
	"multiprocessing.connection" -> "struct" [];
	"multiprocessing.connection" -> "time" [];
	"multiprocessing.connection" -> "tempfile" [];
	"multiprocessing.connection" -> "itertools" [];
	"multiprocessing.connection" -> "_multiprocessing" [];
	"multiprocessing.connection" -> "_winapi" [];
	"multiprocessing.connection" -> "hmac" [];
	"multiprocessing.connection" -> "selectors" [];
	"xmlrpc.client" -> "base64" [];
	"xmlrpc.client" -> "sys" [];
	"xmlrpc.client" -> "time" [];
	"xmlrpc.client" -> "datetime" [];
	"xmlrpc.client" -> "decimal" [];
	"xmlrpc.client" -> "errno" [];
	"xmlrpc.client" -> "io" [];
	"xmlrpc.client" -> "gzip" [];
	"xmlrpc.server" -> "functools" [];
	"xmlrpc.server" -> "inspect" [];
	"xmlrpc.server" -> "html" [];
	"xmlrpc.server" -> "socketserver" [];
	"xmlrpc.server" -> "sys" [];
	"xmlrpc.server" -> "os" [];
	"xmlrpc.server" -> "re" [];
	"xmlrpc.server" -> "pydoc" [];
	"xmlrpc.server" -> "traceback" [];
	"xmlrpc.server" -> "fcntl" [];
	"xmlrpc.server" -> "datetime" [];
	"multiprocessing" -> "sys" [];
	"concurrent.futures._base" -> "collections" [];
	"concurrent.futures._base" -> "logging" [];
	"concurrent.futures._base" -> "threading" [];
	"concurrent.futures._base" -> "time" [];
	"concurrent.futures._base" -> "types" [];
	"setuptools.msvc" -> "json" [];
	"setuptools.msvc" -> "io" [];
	"setuptools.msvc" -> "os" [];
	"setuptools.msvc" -> "os.path" [];
	"setuptools.msvc" -> "sys" [];
	"setuptools.msvc" -> "contextlib" [];
	"setuptools.msvc" -> "platform" [];
	"setuptools.msvc" -> "itertools" [];
	"setuptools.msvc" -> "subprocess" [];
	"setuptools.msvc" -> "'setuptools.extern.packaging.version'" [];
	"setuptools.msvc" -> "'setuptools.extern.more_itertools'" [];
	"setuptools.msvc" -> "winreg" [];
	"setuptools.msvc" -> "glob" [];
	"distutils.msvc9compiler" -> "os" [];
	"distutils.msvc9compiler" -> "subprocess" [];
	"distutils.msvc9compiler" -> "sys" [];
	"distutils.msvc9compiler" -> "re" [];
	"distutils.msvc9compiler" -> "winreg" [];
	"distutils.log" -> "sys" [];
	"distutils" -> "sys" [];
	"distutils" -> "_sysconfigdata__darwin_darwin" [];
	"distutils.archive_util" -> "os" [];
	"distutils.archive_util" -> "warnings" [];
	"distutils.archive_util" -> "sys" [];
	"distutils.archive_util" -> "zipfile" [];
	"distutils.archive_util" -> "pwd" [];
	"distutils.archive_util" -> "grp" [];
	"distutils.archive_util" -> "tarfile" [];
	"distutils.dir_util" -> "os" [];
	"distutils.dir_util" -> "errno" [];
	"distutils.file_util" -> "os" [];
	"distutils.file_util" -> "stat" [];
	"distutils.file_util" -> "os.path" [];
	"distutils.file_util" -> "errno" [];
	"distutils.dep_util" -> "os" [];
	"distutils.dep_util" -> "stat" [];
	"distutils.spawn" -> "sys" [];
	"distutils.spawn" -> "os" [];
	"distutils.spawn" -> "subprocess" [];
	"distutils.debug" -> "os" [];
	"distutils.sysconfig" -> "_imp" [];
	"distutils.sysconfig" -> "os" [];
	"distutils.sysconfig" -> "re" [];
	"distutils.sysconfig" -> "sys" [];
	"distutils.sysconfig" -> "_osx_support" [];
	"distutils.sysconfig" -> "warnings" [];
	"distutils.text_file" -> "sys" [];
	"distutils.text_file" -> "io" [];
	"distutils.ccompiler" -> "sys" [];
	"distutils.ccompiler" -> "os" [];
	"distutils.ccompiler" -> "re" [];
	"distutils.ccompiler" -> "tempfile" [];
	"distutils.fancy_getopt" -> "sys" [];
	"distutils.fancy_getopt" -> "string" [];
	"distutils.fancy_getopt" -> "re" [];
	"distutils.fancy_getopt" -> "getopt" [];
	"distutils.command.build_ext" -> "contextlib" [];
	"distutils.command.build_ext" -> "os" [];
	"distutils.command.build_ext" -> "re" [];
	"distutils.command.build_ext" -> "sys" [];
	"distutils.command.build_ext" -> "distutils" [];
	"distutils.command.build_ext" -> "site" [];
	"distutils._msvccompiler" -> "os" [];
	"distutils._msvccompiler" -> "subprocess" [];
	"distutils._msvccompiler" -> "winreg" [];
	"distutils._msvccompiler" -> "itertools" [];
	"site" -> "sys" [];
	"site" -> "os" [];
	"site" -> "builtins" [];
	"site" -> "_sitebuiltins" [];
	"site" -> "io" [];
	"site" -> "traceback" [];
	"site" -> "atexit" [];
	"site" -> "readline" [];
	"site" -> "rlcompleter" [];
	"site" -> "sitecustomize" [];
	"site" -> "usercustomize" [];
	"site" -> "textwrap" [];
	"rlcompleter" -> "atexit" [];
	"rlcompleter" -> "builtins" [];
	"rlcompleter" -> "keyword" [];
	"rlcompleter" -> "re" [];
	"rlcompleter" -> "readline" [];
	"_sitebuiltins" -> "sys" [];
	"_sitebuiltins" -> "os" [];
	"_sitebuiltins" -> "pydoc" [];
	"distutils.extension" -> "os" [];
	"distutils.extension" -> "warnings" [];
	"setuptools.monkey" -> "sys" [];
	"setuptools.monkey" -> "platform" [];
	"setuptools.monkey" -> "types" [];
	"setuptools.monkey" -> "functools" [];
	"setuptools.monkey" -> "importlib" [];
	"setuptools.monkey" -> "inspect" [];
	"distutils.filelist" -> "os" [];
	"distutils.filelist" -> "re" [];
	"distutils.filelist" -> "fnmatch" [];
	"distutils.filelist" -> "functools" [];
	"setuptools.depends" -> "sys" [];
	"setuptools.depends" -> "marshal" [];
	"setuptools.depends" -> "contextlib" [];
	"setuptools.depends" -> "dis" [];
	"setuptools._imp" -> "os" [];
	"setuptools.py34compat" -> "importlib" [];
	"distutils.version" -> "re" [];
	"setuptools.dist" -> "io" [];
	"setuptools.dist" -> "sys" [];
	"setuptools.dist" -> "re" [];
	"setuptools.dist" -> "os" [];
	"setuptools.dist" -> "warnings" [];
	"setuptools.dist" -> "numbers" [];
	"setuptools.dist" -> "glob" [];
	"setuptools.dist" -> "itertools" [];
	"setuptools.dist" -> "textwrap" [];
	"setuptools.dist" -> "typing" [];
	"setuptools.dist" -> "collections" [];
	"setuptools.dist" -> "email" [];
	"setuptools.dist" -> "'setuptools.extern.more_itertools'" [];
	"setuptools.dist" -> "pkg_resources" [];
	"setuptools.dist" -> "configparser" [];
	"setuptools.dist" -> "shlex" [];
	"setuptools.installer" -> "glob" [];
	"setuptools.installer" -> "os" [];
	"setuptools.installer" -> "subprocess" [];
	"setuptools.installer" -> "sys" [];
	"setuptools.installer" -> "tempfile" [];
	"setuptools.installer" -> "distutils" [];
	"setuptools.installer" -> "pkg_resources" [];
	"setuptools.wheel" -> "distutils" [];
	"setuptools.wheel" -> "email" [];
	"setuptools.wheel" -> "itertools" [];
	"setuptools.wheel" -> "os" [];
	"setuptools.wheel" -> "posixpath" [];
	"setuptools.wheel" -> "re" [];
	"setuptools.wheel" -> "zipfile" [];
	"setuptools.wheel" -> "pkg_resources" [];
	"setuptools.wheel" -> "'setuptools.extern.packaging.tags'" [];
	"setuptools.wheel" -> "'setuptools.extern.packaging.utils'" [];
	"setuptools.command.egg_info" -> "distutils" [];
	"setuptools.command.egg_info" -> "functools" [];
	"setuptools.command.egg_info" -> "os" [];
	"setuptools.command.egg_info" -> "re" [];
	"setuptools.command.egg_info" -> "sys" [];
	"setuptools.command.egg_info" -> "io" [];
	"setuptools.command.egg_info" -> "warnings" [];
	"setuptools.command.egg_info" -> "time" [];
	"setuptools.command.egg_info" -> "collections" [];
	"setuptools.command.egg_info" -> "setuptools" [];
	"setuptools.command.egg_info" -> "pkg_resources" [];
	"setuptools.glob" -> "os" [];
	"setuptools.glob" -> "re" [];
	"setuptools.glob" -> "fnmatch" [];
	"setuptools.unicode_utils" -> "unicodedata" [];
	"setuptools.unicode_utils" -> "sys" [];
	"setuptools.command.bdist_egg" -> "distutils" [];
	"setuptools.command.bdist_egg" -> "types" [];
	"setuptools.command.bdist_egg" -> "sys" [];
	"setuptools.command.bdist_egg" -> "os" [];
	"setuptools.command.bdist_egg" -> "re" [];
	"setuptools.command.bdist_egg" -> "textwrap" [];
	"setuptools.command.bdist_egg" -> "marshal" [];
	"setuptools.command.bdist_egg" -> "pkg_resources" [];
	"setuptools.command.bdist_egg" -> "setuptools" [];
	"setuptools.command.bdist_egg" -> "sysconfig" [];
	"setuptools.command.bdist_egg" -> "zipfile" [];
	"setuptools.command.setopt" -> "distutils" [];
	"setuptools.command.setopt" -> "os" [];
	"setuptools.command.setopt" -> "configparser" [];
	"setuptools.command.setopt" -> "setuptools" [];
	"setuptools.command.sdist" -> "distutils" [];
	"setuptools.command.sdist" -> "os" [];
	"setuptools.command.sdist" -> "sys" [];
	"setuptools.command.sdist" -> "io" [];
	"setuptools.command.sdist" -> "contextlib" [];
	"setuptools.command.sdist" -> "pkg_resources" [];
	"setuptools.command.py36compat" -> "os" [];
	"setuptools.command.py36compat" -> "glob" [];
	"distutils.command.sdist" -> "os" [];
	"distutils.command.sdist" -> "sys" [];
	"distutils.command.sdist" -> "glob" [];
	"distutils.command.sdist" -> "warnings" [];
	"distutils.command.sdist" -> "distutils" [];
	"pkg_resources" -> "sys" [];
	"pkg_resources" -> "os" [];
	"pkg_resources" -> "io" [];
	"pkg_resources" -> "time" [];
	"pkg_resources" -> "re" [];
	"pkg_resources" -> "types" [];
	"pkg_resources" -> "zipfile" [];
	"pkg_resources" -> "zipimport" [];
	"pkg_resources" -> "warnings" [];
	"pkg_resources" -> "stat" [];
	"pkg_resources" -> "functools" [];
	"pkg_resources" -> "pkgutil" [];
	"pkg_resources" -> "operator" [];
	"pkg_resources" -> "platform" [];
	"pkg_resources" -> "collections" [];
	"pkg_resources" -> "plistlib" [];
	"pkg_resources" -> "errno" [];
	"pkg_resources" -> "tempfile" [];
	"pkg_resources" -> "textwrap" [];
	"pkg_resources" -> "itertools" [];
	"pkg_resources" -> "inspect" [];
	"pkg_resources" -> "ntpath" [];
	"pkg_resources" -> "posixpath" [];
	"pkg_resources" -> "importlib" [];
	"pkg_resources" -> "_imp" [];
	"pkg_resources" -> "imp" [];
	"pkg_resources" -> "os.path" [];
	"pkg_resources" -> "sysconfig" [];
	"pkg_resources" -> "linecache" [];
	"pkg_resources" -> "packaging" [];
	"packaging.version" -> "__future__" [];
	"packaging.version" -> "itertools" [];
	"packaging.version" -> "re" [];
	"packaging.version" -> "typing" [];
	"packaging.utils" -> "__future__" [];
	"packaging.utils" -> "functools" [];
	"packaging.utils" -> "re" [];
	"packaging.utils" -> "typing" [];
	"packaging.tags" -> "__future__" [];
	"packaging.tags" -> "logging" [];
	"packaging.tags" -> "platform" [];
	"packaging.tags" -> "re" [];
	"packaging.tags" -> "struct" [];
	"packaging.tags" -> "subprocess" [];
	"packaging.tags" -> "sys" [];
	"packaging.tags" -> "sysconfig" [];
	"packaging.tags" -> "typing" [];
	"packaging.specifiers" -> "__future__" [];
	"packaging.specifiers" -> "abc" [];
	"packaging.specifiers" -> "itertools" [];
	"packaging.specifiers" -> "re" [];
	"packaging.specifiers" -> "typing" [];
	"packaging.requirements" -> "__future__" [];
	"packaging.requirements" -> "typing" [];
	"packaging.metadata" -> "__future__" [];
	"packaging.metadata" -> "pathlib" [];
	"packaging.metadata" -> "sys" [];
	"packaging.metadata" -> "typing" [];
	"packaging.markers" -> "__future__" [];
	"packaging.markers" -> "operator" [];
	"packaging.markers" -> "os" [];
	"packaging.markers" -> "platform" [];
	"packaging.markers" -> "sys" [];
	"packaging.markers" -> "typing" [];
	"packaging.licenses._spdx" -> "__future__" [];
	"packaging.licenses._spdx" -> "typing" [];
	"packaging.licenses" -> "__future__" [];
	"packaging.licenses" -> "re" [];
	"packaging.licenses" -> "typing" [];
	"packaging._tokenizer" -> "__future__" [];
	"packaging._tokenizer" -> "contextlib" [];
	"packaging._tokenizer" -> "re" [];
	"packaging._tokenizer" -> "dataclasses" [];
	"packaging._tokenizer" -> "typing" [];
	"dataclasses" -> "re" [];
	"dataclasses" -> "sys" [];
	"dataclasses" -> "copy" [];
	"dataclasses" -> "types" [];
	"dataclasses" -> "inspect" [];
	"dataclasses" -> "keyword" [];
	"dataclasses" -> "builtins" [];
	"dataclasses" -> "functools" [];
	"dataclasses" -> "_thread" [];
	"packaging._parser" -> "__future__" [];
	"packaging._parser" -> "ast" [];
	"packaging._parser" -> "typing" [];
	"packaging._musllinux" -> "__future__" [];
	"packaging._musllinux" -> "functools" [];
	"packaging._musllinux" -> "re" [];
	"packaging._musllinux" -> "subprocess" [];
	"packaging._musllinux" -> "sys" [];
	"packaging._musllinux" -> "typing" [];
	"packaging._musllinux" -> "sysconfig" [];
	"packaging._manylinux" -> "__future__" [];
	"packaging._manylinux" -> "collections" [];
	"packaging._manylinux" -> "contextlib" [];
	"packaging._manylinux" -> "functools" [];
	"packaging._manylinux" -> "os" [];
	"packaging._manylinux" -> "re" [];
	"packaging._manylinux" -> "sys" [];
	"packaging._manylinux" -> "warnings" [];
	"packaging._manylinux" -> "typing" [];
	"packaging._manylinux" -> "ctypes" [];
	"packaging._manylinux" -> "_manylinux" [];
	"packaging._elffile" -> "__future__" [];
	"packaging._elffile" -> "enum" [];
	"packaging._elffile" -> "os" [];
	"packaging._elffile" -> "struct" [];
	"packaging._elffile" -> "typing" [];
	"packaging" -> "pkg_resources" [];
	"pkg_resources._vendor.pyparsing" -> "string" [];
	"pkg_resources._vendor.pyparsing" -> "weakref" [];
	"pkg_resources._vendor.pyparsing" -> "copy" [];
	"pkg_resources._vendor.pyparsing" -> "sys" [];
	"pkg_resources._vendor.pyparsing" -> "warnings" [];
	"pkg_resources._vendor.pyparsing" -> "re" [];
	"pkg_resources._vendor.pyparsing" -> "sre_constants" [];
	"pkg_resources._vendor.pyparsing" -> "collections" [];
	"pkg_resources._vendor.pyparsing" -> "pprint" [];
	"pkg_resources._vendor.pyparsing" -> "traceback" [];
	"pkg_resources._vendor.pyparsing" -> "types" [];
	"pkg_resources._vendor.pyparsing" -> "datetime" [];
	"pkg_resources._vendor.pyparsing" -> "_thread" [];
	"pkg_resources._vendor.pyparsing" -> "threading" [];
	"pkg_resources._vendor.pyparsing" -> "ordereddict" [];
	"pkg_resources._vendor.pyparsing" -> "__builtin__" [];
	"pkg_resources._vendor.pyparsing" -> "pdb" [];
	"pkg_resources._vendor.pyparsing" -> "uuid" [];
	"pkg_resources._vendor.packaging.version" -> "__future__" [];
	"pkg_resources._vendor.packaging.version" -> "collections" [];
	"pkg_resources._vendor.packaging.version" -> "itertools" [];
	"pkg_resources._vendor.packaging.version" -> "re" [];
	"pkg_resources._vendor.packaging.version" -> "typing" [];
	"pkg_resources._vendor.packaging.utils" -> "__future__" [];
	"pkg_resources._vendor.packaging.utils" -> "re" [];
	"pkg_resources._vendor.packaging.utils" -> "typing" [];
	"pkg_resources._vendor.packaging.tags" -> "__future__" [];
	"pkg_resources._vendor.packaging.tags" -> "imp" [];
	"pkg_resources._vendor.packaging.tags" -> "logging" [];
	"pkg_resources._vendor.packaging.tags" -> "os" [];
	"pkg_resources._vendor.packaging.tags" -> "platform" [];
	"pkg_resources._vendor.packaging.tags" -> "re" [];
	"pkg_resources._vendor.packaging.tags" -> "struct" [];
	"pkg_resources._vendor.packaging.tags" -> "sys" [];
	"pkg_resources._vendor.packaging.tags" -> "sysconfig" [];
	"pkg_resources._vendor.packaging.tags" -> "warnings" [];
	"pkg_resources._vendor.packaging.tags" -> "typing" [];
	"pkg_resources._vendor.packaging.tags" -> "_manylinux" [];
	"pkg_resources._vendor.packaging.tags" -> "ctypes" [];
	"pkg_resources._vendor.packaging.specifiers" -> "__future__" [];
	"pkg_resources._vendor.packaging.specifiers" -> "abc" [];
	"pkg_resources._vendor.packaging.specifiers" -> "functools" [];
	"pkg_resources._vendor.packaging.specifiers" -> "itertools" [];
	"pkg_resources._vendor.packaging.specifiers" -> "re" [];
	"pkg_resources._vendor.packaging.specifiers" -> "typing" [];
	"pkg_resources._vendor.packaging.requirements" -> "__future__" [];
	"pkg_resources._vendor.packaging.requirements" -> "string" [];
	"pkg_resources._vendor.packaging.requirements" -> "re" [];
	"pkg_resources._vendor.packaging.requirements" -> "'pkg_resources.extern.pyparsing'" [];
	"pkg_resources._vendor.packaging.requirements" -> "urllib" [];
	"pkg_resources._vendor.packaging.requirements" -> "typing" [];
	"pkg_resources._vendor.packaging.markers" -> "__future__" [];
	"pkg_resources._vendor.packaging.markers" -> "operator" [];
	"pkg_resources._vendor.packaging.markers" -> "os" [];
	"pkg_resources._vendor.packaging.markers" -> "platform" [];
	"pkg_resources._vendor.packaging.markers" -> "sys" [];
	"pkg_resources._vendor.packaging.markers" -> "'pkg_resources.extern.pyparsing'" [];
	"pkg_resources._vendor.packaging.markers" -> "typing" [];
	"pkg_resources._vendor.packaging._typing" -> "typing" [];
	"pkg_resources._vendor.packaging._structures" -> "__future__" [];
	"pkg_resources._vendor.packaging._compat" -> "__future__" [];
	"pkg_resources._vendor.packaging._compat" -> "sys" [];
	"pkg_resources._vendor.packaging._compat" -> "typing" [];
	"pkg_resources._vendor.packaging.__about__" -> "__future__" [];
	"pkg_resources._vendor.packaging" -> "__future__" [];
	"pkg_resources._vendor.appdirs" -> "sys" [];
	"pkg_resources._vendor.appdirs" -> "os" [];
	"pkg_resources._vendor.appdirs" -> "platform" [];
	"pkg_resources._vendor.appdirs" -> "winreg" [];
	"pkg_resources._vendor.appdirs" -> "_winreg" [];
	"pkg_resources._vendor.appdirs" -> "win32com" [];
	"pkg_resources._vendor.appdirs" -> "win32api" [];
	"pkg_resources._vendor.appdirs" -> "ctypes" [];
	"pkg_resources._vendor.appdirs" -> "array" [];
	"pkg_resources._vendor.appdirs" -> "com" [];
	"pkg_resources._vendor.appdirs" -> "'com.sun'" [];
	"pkg_resources._vendor.appdirs" -> "'win32com.shell'" [];
	"pkg_resources.extern" -> "sys" [];
	"setuptools.config" -> "ast" [];
	"setuptools.config" -> "io" [];
	"setuptools.config" -> "os" [];
	"setuptools.config" -> "sys" [];
	"setuptools.config" -> "warnings" [];
	"setuptools.config" -> "functools" [];
	"setuptools.config" -> "importlib" [];
	"setuptools.config" -> "collections" [];
	"setuptools.config" -> "glob" [];
	"setuptools.config" -> "contextlib" [];
	"setuptools.config" -> "'setuptools.extern.packaging.version'" [];
	"setuptools.config" -> "'setuptools.extern.packaging.specifiers'" [];
	"setuptools.command" -> "sys" [];
	"distutils.command.bdist" -> "os" [];
	"setuptools.extern" -> "sys" [];
	"distutils.dist" -> "sys" [];
	"distutils.dist" -> "os" [];
	"distutils.dist" -> "re" [];
	"distutils.dist" -> "email" [];
	"distutils.dist" -> "warnings" [];
	"distutils.dist" -> "pprint" [];
	"distutils.dist" -> "configparser" [];
	"distutils.versionpredicate" -> "re" [];
	"distutils.versionpredicate" -> "operator" [];
	"distutils.cmd" -> "sys" [];
	"distutils.cmd" -> "os" [];
	"distutils.cmd" -> "re" [];
	"setuptools.windows_support" -> "platform" [];
	"setuptools.windows_support" -> "ctypes" [];
	"setuptools.extension" -> "re" [];
	"setuptools.extension" -> "functools" [];
	"setuptools.version" -> "pkg_resources" [];
	"distutils.util" -> "os" [];
	"distutils.util" -> "re" [];
	"distutils.util" -> "string" [];
	"distutils.util" -> "sys" [];
	"distutils.util" -> "_aix_support" [];
	"distutils.util" -> "_osx_support" [];
	"distutils.util" -> "pwd" [];
	"distutils.util" -> "subprocess" [];
	"distutils.util" -> "tempfile" [];
	"distutils.util" -> "py_compile" [];
	"distutils.core" -> "os" [];
	"distutils.core" -> "sys" [];
	"distutils.config" -> "os" [];
	"distutils.config" -> "configparser" [];
	"distutils.config" -> "cgi" [];
	"cgi" -> "io" [];
	"cgi" -> "sys" [];
	"cgi" -> "os" [];
	"cgi" -> "html" [];
	"cgi" -> "locale" [];
	"cgi" -> "tempfile" [];
	"cgi" -> "traceback" [];
	"cgi" -> "re" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth__tkinter.py" -> "os" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth__tkinter.py" -> "sys" [];
	"traitlets.traitlets" -> "__future__" [];
	"traitlets.traitlets" -> "contextlib" [];
	"traitlets.traitlets" -> "enum" [];
	"traitlets.traitlets" -> "inspect" [];
	"traitlets.traitlets" -> "os" [];
	"traitlets.traitlets" -> "re" [];
	"traitlets.traitlets" -> "sys" [];
	"traitlets.traitlets" -> "types" [];
	"traitlets.traitlets" -> "typing" [];
	"traitlets.traitlets" -> "ast" [];
	"traitlets.traitlets" -> "typing_extensions" [];
	"traitlets" -> "__future__" [];
	"traitlets" -> "typing" [];
	"traitlets.utils.decorators" -> "__future__" [];
	"traitlets.utils.decorators" -> "copy" [];
	"traitlets.utils.decorators" -> "inspect" [];
	"traitlets.utils.decorators" -> "typing" [];
	"traitlets.utils" -> "__future__" [];
	"traitlets.utils" -> "os" [];
	"traitlets.utils" -> "pathlib" [];
	"traitlets.utils" -> "typing" [];
	"traitlets._version" -> "__future__" [];
	"traitlets._version" -> "re" [];
	"traitlets._version" -> "typing" [];
	"typing_extensions" -> "abc" [];
	"typing_extensions" -> "builtins" [];
	"typing_extensions" -> "collections" [];
	"typing_extensions" -> "contextlib" [];
	"typing_extensions" -> "enum" [];
	"typing_extensions" -> "functools" [];
	"typing_extensions" -> "inspect" [];
	"typing_extensions" -> "keyword" [];
	"typing_extensions" -> "operator" [];
	"typing_extensions" -> "sys" [];
	"typing_extensions" -> "types" [];
	"typing_extensions" -> "typing" [];
	"typing_extensions" -> "warnings" [];
	"typing_extensions" -> "_socket" [];
	"asyncio.coroutines" -> "functools" [];
	"asyncio.coroutines" -> "inspect" [];
	"asyncio.coroutines" -> "os" [];
	"asyncio.coroutines" -> "sys" [];
	"asyncio.coroutines" -> "traceback" [];
	"asyncio.coroutines" -> "types" [];
	"asyncio.coroutines" -> "warnings" [];
	"asyncio.log" -> "logging" [];
	"asyncio.format_helpers" -> "functools" [];
	"asyncio.format_helpers" -> "inspect" [];
	"asyncio.format_helpers" -> "reprlib" [];
	"asyncio.format_helpers" -> "sys" [];
	"asyncio.format_helpers" -> "traceback" [];
	"asyncio.constants" -> "enum" [];
	"asyncio.base_futures" -> "reprlib" [];
	"asyncio.base_futures" -> "_thread" [];
	"asyncio" -> "sys" [];
	"asyncio.unix_events" -> "errno" [];
	"asyncio.unix_events" -> "io" [];
	"asyncio.unix_events" -> "itertools" [];
	"asyncio.unix_events" -> "os" [];
	"asyncio.unix_events" -> "selectors" [];
	"asyncio.unix_events" -> "signal" [];
	"asyncio.unix_events" -> "socket" [];
	"asyncio.unix_events" -> "stat" [];
	"asyncio.unix_events" -> "subprocess" [];
	"asyncio.unix_events" -> "sys" [];
	"asyncio.unix_events" -> "threading" [];
	"asyncio.unix_events" -> "warnings" [];
	"asyncio.windows_events" -> "_overlapped" [];
	"asyncio.windows_events" -> "_winapi" [];
	"asyncio.windows_events" -> "errno" [];
	"asyncio.windows_events" -> "math" [];
	"asyncio.windows_events" -> "msvcrt" [];
	"asyncio.windows_events" -> "socket" [];
	"asyncio.windows_events" -> "struct" [];
	"asyncio.windows_events" -> "time" [];
	"asyncio.windows_events" -> "weakref" [];
	"asyncio.windows_utils" -> "sys" [];
	"asyncio.windows_utils" -> "_winapi" [];
	"asyncio.windows_utils" -> "itertools" [];
	"asyncio.windows_utils" -> "msvcrt" [];
	"asyncio.windows_utils" -> "os" [];
	"asyncio.windows_utils" -> "subprocess" [];
	"asyncio.windows_utils" -> "tempfile" [];
	"asyncio.windows_utils" -> "warnings" [];
	"asyncio.selector_events" -> "collections" [];
	"asyncio.selector_events" -> "errno" [];
	"asyncio.selector_events" -> "functools" [];
	"asyncio.selector_events" -> "selectors" [];
	"asyncio.selector_events" -> "socket" [];
	"asyncio.selector_events" -> "warnings" [];
	"asyncio.selector_events" -> "weakref" [];
	"asyncio.selector_events" -> "ssl" [];
	"asyncio.proactor_events" -> "io" [];
	"asyncio.proactor_events" -> "os" [];
	"asyncio.proactor_events" -> "socket" [];
	"asyncio.proactor_events" -> "warnings" [];
	"asyncio.proactor_events" -> "signal" [];
	"asyncio.proactor_events" -> "threading" [];
	"asyncio.proactor_events" -> "collections" [];
	"asyncio.base_subprocess" -> "collections" [];
	"asyncio.base_subprocess" -> "subprocess" [];
	"asyncio.base_subprocess" -> "warnings" [];
	"asyncio.threads" -> "functools" [];
	"asyncio.threads" -> "contextvars" [];
	"asyncio.subprocess" -> "subprocess" [];
	"asyncio.subprocess" -> "warnings" [];
	"asyncio.streams" -> "socket" [];
	"asyncio.streams" -> "sys" [];
	"asyncio.streams" -> "warnings" [];
	"asyncio.streams" -> "weakref" [];
	"asyncio.queues" -> "collections" [];
	"asyncio.queues" -> "heapq" [];
	"asyncio.queues" -> "warnings" [];
	"asyncio.base_events" -> "collections" [];
	"asyncio.base_events" -> "functools" [];
	"asyncio.base_events" -> "heapq" [];
	"asyncio.base_events" -> "itertools" [];
	"asyncio.base_events" -> "os" [];
	"asyncio.base_events" -> "socket" [];
	"asyncio.base_events" -> "stat" [];
	"asyncio.base_events" -> "subprocess" [];
	"asyncio.base_events" -> "threading" [];
	"asyncio.base_events" -> "time" [];
	"asyncio.base_events" -> "traceback" [];
	"asyncio.base_events" -> "sys" [];
	"asyncio.base_events" -> "warnings" [];
	"asyncio.base_events" -> "weakref" [];
	"asyncio.base_events" -> "ssl" [];
	"asyncio.trsock" -> "socket" [];
	"asyncio.trsock" -> "warnings" [];
	"asyncio.staggered" -> "contextlib" [];
	"asyncio.staggered" -> "typing" [];
	"asyncio.tasks" -> "contextvars" [];
	"asyncio.tasks" -> "functools" [];
	"asyncio.tasks" -> "inspect" [];
	"asyncio.tasks" -> "itertools" [];
	"asyncio.tasks" -> "types" [];
	"asyncio.tasks" -> "warnings" [];
	"asyncio.tasks" -> "weakref" [];
	"asyncio.tasks" -> "_asyncio" [];
	"asyncio.base_tasks" -> "linecache" [];
	"asyncio.base_tasks" -> "traceback" [];
	"asyncio.locks" -> "collections" [];
	"asyncio.locks" -> "warnings" [];
	"asyncio.sslproto" -> "collections" [];
	"asyncio.sslproto" -> "warnings" [];
	"asyncio.sslproto" -> "ssl" [];
	"asyncio.futures" -> "contextvars" [];
	"asyncio.futures" -> "logging" [];
	"asyncio.futures" -> "sys" [];
	"asyncio.futures" -> "_asyncio" [];
	"asyncio.events" -> "contextvars" [];
	"asyncio.events" -> "os" [];
	"asyncio.events" -> "socket" [];
	"asyncio.events" -> "subprocess" [];
	"asyncio.events" -> "sys" [];
	"asyncio.events" -> "threading" [];
	"asyncio.events" -> "_asyncio" [];
	"traitlets.utils.warnings" -> "__future__" [];
	"traitlets.utils.warnings" -> "inspect" [];
	"traitlets.utils.warnings" -> "os" [];
	"traitlets.utils.warnings" -> "typing" [];
	"traitlets.utils.warnings" -> "warnings" [];
	"traitlets.utils.sentinel" -> "__future__" [];
	"traitlets.utils.sentinel" -> "typing" [];
	"traitlets.utils.importstring" -> "__future__" [];
	"traitlets.utils.importstring" -> "typing" [];
	"traitlets.utils.getargspec" -> "__future__" [];
	"traitlets.utils.getargspec" -> "inspect" [];
	"traitlets.utils.getargspec" -> "functools" [];
	"traitlets.utils.getargspec" -> "typing" [];
	"traitlets.utils.descriptions" -> "__future__" [];
	"traitlets.utils.descriptions" -> "inspect" [];
	"traitlets.utils.descriptions" -> "re" [];
	"traitlets.utils.descriptions" -> "types" [];
	"traitlets.utils.descriptions" -> "typing" [];
	"traitlets.utils.bunch" -> "__future__" [];
	"traitlets.utils.bunch" -> "typing" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py" -> "os" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py" -> "pathlib" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py" -> "sys" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py" -> "pkg_resources" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgres.py" -> "pyimod02_importers" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_inspect.py" -> "inspect" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_inspect.py" -> "os" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_inspect.py" -> "sys" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_inspect.py" -> "zipfile" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_multiprocessing.py" -> "sys" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_multiprocessing.py" -> "multiprocessing" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_multiprocessing.py" -> "subprocess" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgutil.py" -> "pkgutil" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/PyInstaller/hooks/rthooks/pyi_rth_pkgutil.py" -> "pyimod02_importers" [];
	"ai_agent" -> "PIL" [];
	"ai_agent" -> "io" [];
	"ai_agent" -> "os" [];
	"ai_agent" -> "base64" [];
	"ai_agent" -> "dotenv" [];
	"ai_agent" -> "langchain_google_genai" [];
	"ai_agent" -> "pyDatalog" [];
	"pyDatalog.pyDatalog" -> "collections" [];
	"pyDatalog.pyDatalog" -> "inspect" [];
	"pyDatalog.pyDatalog" -> "string" [];
	"pyDatalog.pyDatalog" -> "weakref" [];
	"sqlalchemy.orm.attributes" -> "__future__" [];
	"sqlalchemy.orm.attributes" -> "dataclasses" [];
	"sqlalchemy.orm.attributes" -> "operator" [];
	"sqlalchemy.orm.attributes" -> "typing" [];
	"sqlalchemy.orm.attributes" -> "sqlalchemy" [];
	"sqlalchemy.sql.selectable" -> "__future__" [];
	"sqlalchemy.sql.selectable" -> "collections" [];
	"sqlalchemy.sql.selectable" -> "enum" [];
	"sqlalchemy.sql.selectable" -> "itertools" [];
	"sqlalchemy.sql.selectable" -> "typing" [];
	"sqlalchemy.sql.selectable" -> "sqlalchemy" [];
	"sqlalchemy.sql.schema" -> "__future__" [];
	"sqlalchemy.sql.schema" -> "abc" [];
	"sqlalchemy.sql.schema" -> "collections" [];
	"sqlalchemy.sql.schema" -> "enum" [];
	"sqlalchemy.sql.schema" -> "operator" [];
	"sqlalchemy.sql.schema" -> "typing" [];
	"sqlalchemy.sql.schema" -> "sqlalchemy" [];
	"sqlalchemy.engine.reflection" -> "__future__" [];
	"sqlalchemy.engine.reflection" -> "contextlib" [];
	"sqlalchemy.engine.reflection" -> "dataclasses" [];
	"sqlalchemy.engine.reflection" -> "enum" [];
	"sqlalchemy.engine.reflection" -> "typing" [];
	"sqlalchemy.engine.reflection" -> "sqlalchemy" [];
	"sqlalchemy.util.topological" -> "__future__" [];
	"sqlalchemy.util.topological" -> "typing" [];
	"sqlalchemy.util.topological" -> "sqlalchemy" [];
	"sqlalchemy.engine.base" -> "__future__" [];
	"sqlalchemy.engine.base" -> "contextlib" [];
	"sqlalchemy.engine.base" -> "sys" [];
	"sqlalchemy.engine.base" -> "typing" [];
	"sqlalchemy.engine.base" -> "sqlalchemy" [];
	"sqlalchemy.pool.impl" -> "__future__" [];
	"sqlalchemy.pool.impl" -> "threading" [];
	"sqlalchemy.pool.impl" -> "traceback" [];
	"sqlalchemy.pool.impl" -> "typing" [];
	"sqlalchemy.pool.impl" -> "weakref" [];
	"sqlalchemy.pool.impl" -> "sqlalchemy" [];
	"sqlalchemy.util.queue" -> "__future__" [];
	"sqlalchemy.util.queue" -> "asyncio" [];
	"sqlalchemy.util.queue" -> "collections" [];
	"sqlalchemy.util.queue" -> "threading" [];
	"sqlalchemy.util.queue" -> "time" [];
	"sqlalchemy.util.queue" -> "typing" [];
	"sqlalchemy.util.langhelpers" -> "__future__" [];
	"sqlalchemy.util.langhelpers" -> "collections" [];
	"sqlalchemy.util.langhelpers" -> "enum" [];
	"sqlalchemy.util.langhelpers" -> "functools" [];
	"sqlalchemy.util.langhelpers" -> "inspect" [];
	"sqlalchemy.util.langhelpers" -> "itertools" [];
	"sqlalchemy.util.langhelpers" -> "operator" [];
	"sqlalchemy.util.langhelpers" -> "re" [];
	"sqlalchemy.util.langhelpers" -> "sys" [];
	"sqlalchemy.util.langhelpers" -> "textwrap" [];
	"sqlalchemy.util.langhelpers" -> "threading" [];
	"sqlalchemy.util.langhelpers" -> "types" [];
	"sqlalchemy.util.langhelpers" -> "typing" [];
	"sqlalchemy.util.langhelpers" -> "warnings" [];
	"sqlalchemy.util.langhelpers" -> "sqlalchemy" [];
	"sqlalchemy.util.langhelpers" -> "annotationlib" [];
	"sqlalchemy.util._has_cy" -> "os" [];
	"sqlalchemy.util._has_cy" -> "typing" [];
	"sqlalchemy.util.compat" -> "__future__" [];
	"sqlalchemy.util.compat" -> "base64" [];
	"sqlalchemy.util.compat" -> "dataclasses" [];
	"sqlalchemy.util.compat" -> "hashlib" [];
	"sqlalchemy.util.compat" -> "inspect" [];
	"sqlalchemy.util.compat" -> "operator" [];
	"sqlalchemy.util.compat" -> "platform" [];
	"sqlalchemy.util.compat" -> "sys" [];
	"sqlalchemy.util.compat" -> "typing" [];
	"sqlalchemy.util.compat" -> "importlib" [];
	"sqlalchemy.util.compat" -> "importlib_metadata" [];
	"importlib_metadata" -> "__future__" [];
	"importlib_metadata" -> "abc" [];
	"importlib_metadata" -> "collections" [];
	"importlib_metadata" -> "email" [];
	"importlib_metadata" -> "functools" [];
	"importlib_metadata" -> "itertools" [];
	"importlib_metadata" -> "operator" [];
	"importlib_metadata" -> "os" [];
	"importlib_metadata" -> "pathlib" [];
	"importlib_metadata" -> "posixpath" [];
	"importlib_metadata" -> "re" [];
	"importlib_metadata" -> "sys" [];
	"importlib_metadata" -> "textwrap" [];
	"importlib_metadata" -> "types" [];
	"importlib_metadata" -> "contextlib" [];
	"importlib_metadata" -> "importlib" [];
	"importlib_metadata" -> "typing" [];
	"importlib_metadata" -> "csv" [];
	"importlib_metadata" -> "json" [];
	"importlib_metadata" -> "inspect" [];
	"zipp.compat.overlay" -> "importlib" [];
	"zipp.compat.overlay" -> "sys" [];
	"zipp.compat.overlay" -> "types" [];
	"zipp.compat.overlay" -> "zipp" [];
	"zipp" -> "functools" [];
	"zipp" -> "io" [];
	"zipp" -> "itertools" [];
	"zipp" -> "pathlib" [];
	"zipp" -> "posixpath" [];
	"zipp" -> "re" [];
	"zipp" -> "stat" [];
	"zipp" -> "sys" [];
	"zipp" -> "zipfile" [];
	"zipp._functools" -> "collections" [];
	"zipp._functools" -> "functools" [];
	"zipp.glob" -> "os" [];
	"zipp.glob" -> "re" [];
	"zipp.compat.py310" -> "io" [];
	"zipp.compat.py310" -> "sys" [];
	"importlib_metadata._adapters" -> "re" [];
	"importlib_metadata._adapters" -> "textwrap" [];
	"importlib_metadata._text" -> "re" [];
	"importlib_metadata.compat.py311" -> "os" [];
	"importlib_metadata.compat.py311" -> "pathlib" [];
	"importlib_metadata.compat.py311" -> "sys" [];
	"importlib_metadata.compat.py311" -> "types" [];
	"importlib_metadata.compat.py39" -> "__future__" [];
	"importlib_metadata.compat.py39" -> "typing" [];
	"importlib_metadata.compat.py39" -> "importlib_metadata" [];
	"importlib_metadata._typing" -> "functools" [];
	"importlib_metadata._typing" -> "typing" [];
	"importlib_metadata._itertools" -> "collections" [];
	"importlib_metadata._itertools" -> "itertools" [];
	"importlib_metadata._functools" -> "functools" [];
	"importlib_metadata._functools" -> "types" [];
	"importlib_metadata._compat" -> "platform" [];
	"importlib_metadata._compat" -> "sys" [];
	"importlib_metadata._collections" -> "collections" [];
	"importlib_metadata._collections" -> "typing" [];
	"importlib_metadata._meta" -> "__future__" [];
	"importlib_metadata._meta" -> "os" [];
	"importlib_metadata._meta" -> "typing" [];
	"sqlalchemy.util._collections" -> "__future__" [];
	"sqlalchemy.util._collections" -> "operator" [];
	"sqlalchemy.util._collections" -> "threading" [];
	"sqlalchemy.util._collections" -> "types" [];
	"sqlalchemy.util._collections" -> "typing" [];
	"sqlalchemy.util._collections" -> "weakref" [];
	"sqlalchemy.util._py_collections" -> "__future__" [];
	"sqlalchemy.util._py_collections" -> "itertools" [];
	"sqlalchemy.util._py_collections" -> "typing" [];
	"sqlalchemy.util.concurrency" -> "__future__" [];
	"sqlalchemy.util.concurrency" -> "asyncio" [];
	"sqlalchemy.util.concurrency" -> "typing" [];
	"sqlalchemy.util.concurrency" -> "greenlet" [];
	"sqlalchemy.util._concurrency_py3k" -> "__future__" [];
	"sqlalchemy.util._concurrency_py3k" -> "asyncio" [];
	"sqlalchemy.util._concurrency_py3k" -> "contextvars" [];
	"sqlalchemy.util._concurrency_py3k" -> "sys" [];
	"sqlalchemy.util._concurrency_py3k" -> "typing" [];
	"sqlalchemy.util._concurrency_py3k" -> "sqlalchemy" [];
	"sqlalchemy.util._concurrency_py3k" -> "greenlet" [];
	"sqlalchemy.pool.base" -> "__future__" [];
	"sqlalchemy.pool.base" -> "collections" [];
	"sqlalchemy.pool.base" -> "dataclasses" [];
	"sqlalchemy.pool.base" -> "enum" [];
	"sqlalchemy.pool.base" -> "threading" [];
	"sqlalchemy.pool.base" -> "time" [];
	"sqlalchemy.pool.base" -> "typing" [];
	"sqlalchemy.pool.base" -> "weakref" [];
	"sqlalchemy.pool.base" -> "sqlalchemy" [];
	"sqlalchemy.pool.events" -> "__future__" [];
	"sqlalchemy.pool.events" -> "typing" [];
	"sqlalchemy.pool.events" -> "sqlalchemy" [];
	"sqlalchemy.engine.url" -> "__future__" [];
	"sqlalchemy.engine.url" -> "re" [];
	"sqlalchemy.engine.url" -> "typing" [];
	"sqlalchemy.engine.url" -> "sqlalchemy" [];
	"sqlalchemy.dialects" -> "__future__" [];
	"sqlalchemy.dialects" -> "typing" [];
	"sqlalchemy.sql.util" -> "__future__" [];
	"sqlalchemy.sql.util" -> "collections" [];
	"sqlalchemy.sql.util" -> "copy" [];
	"sqlalchemy.sql.util" -> "itertools" [];
	"sqlalchemy.sql.util" -> "typing" [];
	"sqlalchemy.sql.util" -> "sqlalchemy" [];
	"sqlalchemy.engine.row" -> "__future__" [];
	"sqlalchemy.engine.row" -> "abc" [];
	"sqlalchemy.engine.row" -> "operator" [];
	"sqlalchemy.engine.row" -> "typing" [];
	"sqlalchemy.engine.result" -> "__future__" [];
	"sqlalchemy.engine.result" -> "enum" [];
	"sqlalchemy.engine.result" -> "functools" [];
	"sqlalchemy.engine.result" -> "itertools" [];
	"sqlalchemy.engine.result" -> "operator" [];
	"sqlalchemy.engine.result" -> "typing" [];
	"sqlalchemy.engine.result" -> "sqlalchemy" [];
	"sqlalchemy.engine._py_row" -> "__future__" [];
	"sqlalchemy.engine._py_row" -> "operator" [];
	"sqlalchemy.engine._py_row" -> "typing" [];
	"sqlalchemy.log" -> "__future__" [];
	"sqlalchemy.log" -> "logging" [];
	"sqlalchemy.log" -> "sys" [];
	"sqlalchemy.log" -> "typing" [];
	"sqlalchemy.engine.util" -> "__future__" [];
	"sqlalchemy.engine.util" -> "typing" [];
	"sqlalchemy.engine.util" -> "sqlalchemy" [];
	"sqlalchemy.engine._py_util" -> "__future__" [];
	"sqlalchemy.engine._py_util" -> "typing" [];
	"sqlalchemy.engine._py_util" -> "sqlalchemy" [];
	"sqlalchemy.engine.interfaces" -> "__future__" [];
	"sqlalchemy.engine.interfaces" -> "enum" [];
	"sqlalchemy.engine.interfaces" -> "types" [];
	"sqlalchemy.engine.interfaces" -> "typing" [];
	"sqlalchemy.engine.interfaces" -> "sqlalchemy" [];
	"sqlalchemy.engine.cursor" -> "__future__" [];
	"sqlalchemy.engine.cursor" -> "collections" [];
	"sqlalchemy.engine.cursor" -> "functools" [];
	"sqlalchemy.engine.cursor" -> "operator" [];
	"sqlalchemy.engine.cursor" -> "typing" [];
	"sqlalchemy.engine.cursor" -> "sqlalchemy" [];
	"sqlalchemy.engine.default" -> "__future__" [];
	"sqlalchemy.engine.default" -> "functools" [];
	"sqlalchemy.engine.default" -> "operator" [];
	"sqlalchemy.engine.default" -> "random" [];
	"sqlalchemy.engine.default" -> "re" [];
	"sqlalchemy.engine.default" -> "time" [];
	"sqlalchemy.engine.default" -> "typing" [];
	"sqlalchemy.engine.default" -> "weakref" [];
	"sqlalchemy.engine.default" -> "sqlalchemy" [];
	"sqlalchemy.engine.default" -> "types" [];
	"sqlalchemy.sql.expression" -> "__future__" [];
	"sqlalchemy.sql.lambdas" -> "__future__" [];
	"sqlalchemy.sql.lambdas" -> "inspect" [];
	"sqlalchemy.sql.lambdas" -> "itertools" [];
	"sqlalchemy.sql.lambdas" -> "operator" [];
	"sqlalchemy.sql.lambdas" -> "threading" [];
	"sqlalchemy.sql.lambdas" -> "types" [];
	"sqlalchemy.sql.lambdas" -> "typing" [];
	"sqlalchemy.sql.lambdas" -> "weakref" [];
	"sqlalchemy.sql.lambdas" -> "sqlalchemy" [];
	"sqlalchemy.sql._selectable_constructors" -> "__future__" [];
	"sqlalchemy.sql._selectable_constructors" -> "typing" [];
	"sqlalchemy.sql._elements_constructors" -> "__future__" [];
	"sqlalchemy.sql._elements_constructors" -> "typing" [];
	"sqlalchemy.sql._dml_constructors" -> "__future__" [];
	"sqlalchemy.sql._dml_constructors" -> "typing" [];
	"sqlalchemy.engine.characteristics" -> "__future__" [];
	"sqlalchemy.engine.characteristics" -> "abc" [];
	"sqlalchemy.engine.characteristics" -> "typing" [];
	"sqlalchemy.engine.mock" -> "__future__" [];
	"sqlalchemy.engine.mock" -> "operator" [];
	"sqlalchemy.engine.mock" -> "typing" [];
	"sqlalchemy.engine.mock" -> "sqlalchemy" [];
	"sqlalchemy.engine.create" -> "__future__" [];
	"sqlalchemy.engine.create" -> "inspect" [];
	"sqlalchemy.engine.create" -> "typing" [];
	"sqlalchemy.engine.create" -> "sqlalchemy" [];
	"sqlalchemy.engine.events" -> "__future__" [];
	"sqlalchemy.engine.events" -> "typing" [];
	"sqlalchemy.engine.events" -> "sqlalchemy" [];
	"sqlalchemy.engine.processors" -> "__future__" [];
	"sqlalchemy.engine.processors" -> "typing" [];
	"sqlalchemy.engine._py_processors" -> "__future__" [];
	"sqlalchemy.engine._py_processors" -> "datetime" [];
	"sqlalchemy.engine._py_processors" -> "decimal" [];
	"sqlalchemy.engine._py_processors" -> "typing" [];
	"sqlalchemy.sql.ddl" -> "__future__" [];
	"sqlalchemy.sql.ddl" -> "contextlib" [];
	"sqlalchemy.sql.ddl" -> "typing" [];
	"sqlalchemy.sql.ddl" -> "sqlalchemy" [];
	"sqlalchemy.sql.functions" -> "__future__" [];
	"sqlalchemy.sql.functions" -> "datetime" [];
	"sqlalchemy.sql.functions" -> "decimal" [];
	"sqlalchemy.sql.functions" -> "typing" [];
	"sqlalchemy.sql.functions" -> "sqlalchemy" [];
	"sqlalchemy.sql.dml" -> "__future__" [];
	"sqlalchemy.sql.dml" -> "operator" [];
	"sqlalchemy.sql.dml" -> "typing" [];
	"sqlalchemy.sql.dml" -> "sqlalchemy" [];
	"sqlalchemy.sql.compiler" -> "__future__" [];
	"sqlalchemy.sql.compiler" -> "collections" [];
	"sqlalchemy.sql.compiler" -> "contextlib" [];
	"sqlalchemy.sql.compiler" -> "enum" [];
	"sqlalchemy.sql.compiler" -> "functools" [];
	"sqlalchemy.sql.compiler" -> "itertools" [];
	"sqlalchemy.sql.compiler" -> "operator" [];
	"sqlalchemy.sql.compiler" -> "re" [];
	"sqlalchemy.sql.compiler" -> "time" [];
	"sqlalchemy.sql.compiler" -> "typing" [];
	"sqlalchemy.sql.compiler" -> "sqlalchemy" [];
	"sqlalchemy.sql.crud" -> "__future__" [];
	"sqlalchemy.sql.crud" -> "functools" [];
	"sqlalchemy.sql.crud" -> "operator" [];
	"sqlalchemy.sql.crud" -> "typing" [];
	"sqlalchemy.sql.crud" -> "sqlalchemy" [];
	"sqlalchemy.sql.sqltypes" -> "__future__" [];
	"sqlalchemy.sql.sqltypes" -> "datetime" [];
	"sqlalchemy.sql.sqltypes" -> "decimal" [];
	"sqlalchemy.sql.sqltypes" -> "enum" [];
	"sqlalchemy.sql.sqltypes" -> "json" [];
	"sqlalchemy.sql.sqltypes" -> "pickle" [];
	"sqlalchemy.sql.sqltypes" -> "typing" [];
	"sqlalchemy.sql.sqltypes" -> "uuid" [];
	"sqlalchemy.sql.sqltypes" -> "sqlalchemy" [];
	"sqlalchemy.sql.type_api" -> "__future__" [];
	"sqlalchemy.sql.type_api" -> "enum" [];
	"sqlalchemy.sql.type_api" -> "types" [];
	"sqlalchemy.sql.type_api" -> "typing" [];
	"sqlalchemy.sql.type_api" -> "sqlalchemy" [];
	"sqlalchemy.sql.traversals" -> "__future__" [];
	"sqlalchemy.sql.traversals" -> "collections" [];
	"sqlalchemy.sql.traversals" -> "itertools" [];
	"sqlalchemy.sql.traversals" -> "operator" [];
	"sqlalchemy.sql.traversals" -> "typing" [];
	"sqlalchemy.sql.traversals" -> "sqlalchemy" [];
	"sqlalchemy.sql.operators" -> "__future__" [];
	"sqlalchemy.sql.operators" -> "enum" [];
	"sqlalchemy.sql.operators" -> "operator" [];
	"sqlalchemy.sql.operators" -> "typing" [];
	"sqlalchemy.sql.operators" -> "sqlalchemy" [];
	"sqlalchemy.sql.elements" -> "__future__" [];
	"sqlalchemy.sql.elements" -> "decimal" [];
	"sqlalchemy.sql.elements" -> "enum" [];
	"sqlalchemy.sql.elements" -> "itertools" [];
	"sqlalchemy.sql.elements" -> "operator" [];
	"sqlalchemy.sql.elements" -> "re" [];
	"sqlalchemy.sql.elements" -> "typing" [];
	"sqlalchemy.sql.elements" -> "sqlalchemy" [];
	"sqlalchemy.sql.annotation" -> "__future__" [];
	"sqlalchemy.sql.annotation" -> "typing" [];
	"sqlalchemy.sql.annotation" -> "sqlalchemy" [];
	"sqlalchemy.sql._typing" -> "__future__" [];
	"sqlalchemy.sql._typing" -> "operator" [];
	"sqlalchemy.sql._typing" -> "typing" [];
	"sqlalchemy.sql._typing" -> "sqlalchemy" [];
	"sqlalchemy.sql._typing" -> "datetime" [];
	"sqlalchemy.sql._typing" -> "decimal" [];
	"sqlalchemy.sql._typing" -> "uuid" [];
	"sqlalchemy.event.base" -> "__future__" [];
	"sqlalchemy.event.base" -> "typing" [];
	"sqlalchemy.event.base" -> "weakref" [];
	"sqlalchemy.event.base" -> "sqlalchemy" [];
	"sqlalchemy.event.registry" -> "__future__" [];
	"sqlalchemy.event.registry" -> "collections" [];
	"sqlalchemy.event.registry" -> "types" [];
	"sqlalchemy.event.registry" -> "typing" [];
	"sqlalchemy.event.registry" -> "weakref" [];
	"sqlalchemy.event.registry" -> "sqlalchemy" [];
	"sqlalchemy.event.attr" -> "__future__" [];
	"sqlalchemy.event.attr" -> "collections" [];
	"sqlalchemy.event.attr" -> "itertools" [];
	"sqlalchemy.event.attr" -> "threading" [];
	"sqlalchemy.event.attr" -> "types" [];
	"sqlalchemy.event.attr" -> "typing" [];
	"sqlalchemy.event.attr" -> "weakref" [];
	"sqlalchemy.event.attr" -> "sqlalchemy" [];
	"sqlalchemy.event.legacy" -> "__future__" [];
	"sqlalchemy.event.legacy" -> "typing" [];
	"sqlalchemy.event.legacy" -> "sqlalchemy" [];
	"sqlalchemy.orm.writeonly" -> "__future__" [];
	"sqlalchemy.orm.writeonly" -> "typing" [];
	"sqlalchemy.orm.writeonly" -> "sqlalchemy" [];
	"sqlalchemy.orm.mapper" -> "__future__" [];
	"sqlalchemy.orm.mapper" -> "collections" [];
	"sqlalchemy.orm.mapper" -> "functools" [];
	"sqlalchemy.orm.mapper" -> "itertools" [];
	"sqlalchemy.orm.mapper" -> "sys" [];
	"sqlalchemy.orm.mapper" -> "threading" [];
	"sqlalchemy.orm.mapper" -> "typing" [];
	"sqlalchemy.orm.mapper" -> "weakref" [];
	"sqlalchemy.orm.mapper" -> "sqlalchemy" [];
	"sqlalchemy.orm.events" -> "__future__" [];
	"sqlalchemy.orm.events" -> "typing" [];
	"sqlalchemy.orm.events" -> "weakref" [];
	"sqlalchemy.orm.events" -> "sqlalchemy" [];
	"sqlalchemy.orm.context" -> "__future__" [];
	"sqlalchemy.orm.context" -> "itertools" [];
	"sqlalchemy.orm.context" -> "typing" [];
	"sqlalchemy.orm.context" -> "sqlalchemy" [];
	"sqlalchemy.orm.unitofwork" -> "__future__" [];
	"sqlalchemy.orm.unitofwork" -> "typing" [];
	"sqlalchemy.orm.unitofwork" -> "sqlalchemy" [];
	"sqlalchemy.orm.session" -> "__future__" [];
	"sqlalchemy.orm.session" -> "contextlib" [];
	"sqlalchemy.orm.session" -> "enum" [];
	"sqlalchemy.orm.session" -> "itertools" [];
	"sqlalchemy.orm.session" -> "sys" [];
	"sqlalchemy.orm.session" -> "typing" [];
	"sqlalchemy.orm.session" -> "weakref" [];
	"sqlalchemy.orm.session" -> "sqlalchemy" [];
	"sqlalchemy.orm.state_changes" -> "__future__" [];
	"sqlalchemy.orm.state_changes" -> "contextlib" [];
	"sqlalchemy.orm.state_changes" -> "enum" [];
	"sqlalchemy.orm.state_changes" -> "typing" [];
	"sqlalchemy.orm.state_changes" -> "sqlalchemy" [];
	"sqlalchemy.orm.identity" -> "__future__" [];
	"sqlalchemy.orm.identity" -> "typing" [];
	"sqlalchemy.orm.identity" -> "weakref" [];
	"sqlalchemy.orm.identity" -> "sqlalchemy" [];
	"sqlalchemy.orm.bulk_persistence" -> "__future__" [];
	"sqlalchemy.orm.bulk_persistence" -> "typing" [];
	"sqlalchemy.orm.bulk_persistence" -> "sqlalchemy" [];
	"sqlalchemy.orm.persistence" -> "__future__" [];
	"sqlalchemy.orm.persistence" -> "itertools" [];
	"sqlalchemy.orm.persistence" -> "operator" [];
	"sqlalchemy.orm.persistence" -> "sqlalchemy" [];
	"sqlalchemy.orm.sync" -> "__future__" [];
	"sqlalchemy.orm.evaluator" -> "__future__" [];
	"sqlalchemy.orm.evaluator" -> "typing" [];
	"sqlalchemy.orm.evaluator" -> "sqlalchemy" [];
	"sqlalchemy.orm.scoping" -> "__future__" [];
	"sqlalchemy.orm.scoping" -> "typing" [];
	"sqlalchemy.orm.scoping" -> "sqlalchemy" [];
	"sqlalchemy.orm.query" -> "__future__" [];
	"sqlalchemy.orm.query" -> "operator" [];
	"sqlalchemy.orm.query" -> "typing" [];
	"sqlalchemy.orm.query" -> "sqlalchemy" [];
	"sqlalchemy.orm.descriptor_props" -> "__future__" [];
	"sqlalchemy.orm.descriptor_props" -> "dataclasses" [];
	"sqlalchemy.orm.descriptor_props" -> "inspect" [];
	"sqlalchemy.orm.descriptor_props" -> "itertools" [];
	"sqlalchemy.orm.descriptor_props" -> "operator" [];
	"sqlalchemy.orm.descriptor_props" -> "typing" [];
	"sqlalchemy.orm.descriptor_props" -> "weakref" [];
	"sqlalchemy.orm.descriptor_props" -> "sqlalchemy" [];
	"sqlalchemy.orm.decl_base" -> "__future__" [];
	"sqlalchemy.orm.decl_base" -> "collections" [];
	"sqlalchemy.orm.decl_base" -> "dataclasses" [];
	"sqlalchemy.orm.decl_base" -> "re" [];
	"sqlalchemy.orm.decl_base" -> "typing" [];
	"sqlalchemy.orm.decl_base" -> "weakref" [];
	"sqlalchemy.orm.decl_base" -> "sqlalchemy" [];
	"sqlalchemy.orm.clsregistry" -> "__future__" [];
	"sqlalchemy.orm.clsregistry" -> "re" [];
	"sqlalchemy.orm.clsregistry" -> "typing" [];
	"sqlalchemy.orm.clsregistry" -> "weakref" [];
	"sqlalchemy.orm.clsregistry" -> "sqlalchemy" [];
	"sqlalchemy.orm.dependency" -> "__future__" [];
	"sqlalchemy.orm.dependency" -> "sqlalchemy" [];
	"sqlalchemy.orm.decl_api" -> "__future__" [];
	"sqlalchemy.orm.decl_api" -> "itertools" [];
	"sqlalchemy.orm.decl_api" -> "re" [];
	"sqlalchemy.orm.decl_api" -> "typing" [];
	"sqlalchemy.orm.decl_api" -> "weakref" [];
	"sqlalchemy.orm.decl_api" -> "sqlalchemy" [];
	"sqlalchemy.orm._orm_constructors" -> "__future__" [];
	"sqlalchemy.orm._orm_constructors" -> "typing" [];
	"sqlalchemy.orm._orm_constructors" -> "sqlalchemy" [];
	"sqlalchemy.schema" -> "__future__" [];
	"sqlalchemy.sql.naming" -> "__future__" [];
	"sqlalchemy.sql.naming" -> "re" [];
	"sqlalchemy.sql.naming" -> "sqlalchemy" [];
	"sqlalchemy.sql.events" -> "__future__" [];
	"sqlalchemy.sql.events" -> "typing" [];
	"sqlalchemy.sql.events" -> "sqlalchemy" [];
	"sqlalchemy.orm.path_registry" -> "__future__" [];
	"sqlalchemy.orm.path_registry" -> "functools" [];
	"sqlalchemy.orm.path_registry" -> "itertools" [];
	"sqlalchemy.orm.path_registry" -> "logging" [];
	"sqlalchemy.orm.path_registry" -> "operator" [];
	"sqlalchemy.orm.path_registry" -> "typing" [];
	"sqlalchemy.orm.path_registry" -> "sqlalchemy" [];
	"sqlalchemy.orm.properties" -> "__future__" [];
	"sqlalchemy.orm.properties" -> "typing" [];
	"sqlalchemy.orm.properties" -> "sqlalchemy" [];
	"sqlalchemy.orm.strategy_options" -> "__future__" [];
	"sqlalchemy.orm.strategy_options" -> "typing" [];
	"sqlalchemy.orm.strategy_options" -> "sqlalchemy" [];
	"sqlalchemy.orm.loading" -> "__future__" [];
	"sqlalchemy.orm.loading" -> "typing" [];
	"sqlalchemy.orm.loading" -> "sqlalchemy" [];
	"sqlalchemy.orm.instrumentation" -> "__future__" [];
	"sqlalchemy.orm.instrumentation" -> "typing" [];
	"sqlalchemy.orm.instrumentation" -> "weakref" [];
	"sqlalchemy.orm.instrumentation" -> "sqlalchemy" [];
	"sqlalchemy.orm.strategies" -> "__future__" [];
	"sqlalchemy.orm.strategies" -> "collections" [];
	"sqlalchemy.orm.strategies" -> "itertools" [];
	"sqlalchemy.orm.strategies" -> "typing" [];
	"sqlalchemy.orm.strategies" -> "sqlalchemy" [];
	"sqlalchemy.orm.util" -> "__future__" [];
	"sqlalchemy.orm.util" -> "enum" [];
	"sqlalchemy.orm.util" -> "functools" [];
	"sqlalchemy.orm.util" -> "re" [];
	"sqlalchemy.orm.util" -> "types" [];
	"sqlalchemy.orm.util" -> "typing" [];
	"sqlalchemy.orm.util" -> "weakref" [];
	"sqlalchemy.orm.util" -> "sqlalchemy" [];
	"sqlalchemy.orm.state" -> "__future__" [];
	"sqlalchemy.orm.state" -> "typing" [];
	"sqlalchemy.orm.state" -> "weakref" [];
	"sqlalchemy.orm.state" -> "sqlalchemy" [];
	"sqlalchemy.ext.asyncio.session" -> "__future__" [];
	"sqlalchemy.ext.asyncio.session" -> "asyncio" [];
	"sqlalchemy.ext.asyncio.session" -> "typing" [];
	"sqlalchemy.ext.asyncio.session" -> "sqlalchemy" [];
	"sqlalchemy.ext.asyncio.result" -> "__future__" [];
	"sqlalchemy.ext.asyncio.result" -> "operator" [];
	"sqlalchemy.ext.asyncio.result" -> "typing" [];
	"sqlalchemy.ext.asyncio.result" -> "sqlalchemy" [];
	"sqlalchemy.ext.asyncio.exc" -> "sqlalchemy" [];
	"sqlalchemy.ext.asyncio.base" -> "__future__" [];
	"sqlalchemy.ext.asyncio.base" -> "abc" [];
	"sqlalchemy.ext.asyncio.base" -> "functools" [];
	"sqlalchemy.ext.asyncio.base" -> "typing" [];
	"sqlalchemy.ext.asyncio.base" -> "weakref" [];
	"sqlalchemy.ext.asyncio.base" -> "sqlalchemy" [];
	"sqlalchemy.ext.asyncio.engine" -> "__future__" [];
	"sqlalchemy.ext.asyncio.engine" -> "asyncio" [];
	"sqlalchemy.ext.asyncio.engine" -> "contextlib" [];
	"sqlalchemy.ext.asyncio.engine" -> "typing" [];
	"sqlalchemy.ext.asyncio.engine" -> "sqlalchemy" [];
	"sqlalchemy.ext.asyncio.scoping" -> "__future__" [];
	"sqlalchemy.ext.asyncio.scoping" -> "typing" [];
	"sqlalchemy.ext.asyncio.scoping" -> "sqlalchemy" [];
	"sqlalchemy.orm.relationships" -> "__future__" [];
	"sqlalchemy.orm.relationships" -> "collections" [];
	"sqlalchemy.orm.relationships" -> "dataclasses" [];
	"sqlalchemy.orm.relationships" -> "inspect" [];
	"sqlalchemy.orm.relationships" -> "itertools" [];
	"sqlalchemy.orm.relationships" -> "re" [];
	"sqlalchemy.orm.relationships" -> "typing" [];
	"sqlalchemy.orm.relationships" -> "weakref" [];
	"sqlalchemy.orm.relationships" -> "sqlalchemy" [];
	"sqlalchemy.util.typing" -> "__future__" [];
	"sqlalchemy.util.typing" -> "builtins" [];
	"sqlalchemy.util.typing" -> "collections" [];
	"sqlalchemy.util.typing" -> "re" [];
	"sqlalchemy.util.typing" -> "sys" [];
	"sqlalchemy.util.typing" -> "typing" [];
	"sqlalchemy.util.typing" -> "typing_extensions" [];
	"sqlalchemy.util.typing" -> "types" [];
	"sqlalchemy.sql.visitors" -> "__future__" [];
	"sqlalchemy.sql.visitors" -> "collections" [];
	"sqlalchemy.sql.visitors" -> "enum" [];
	"sqlalchemy.sql.visitors" -> "itertools" [];
	"sqlalchemy.sql.visitors" -> "operator" [];
	"sqlalchemy.sql.visitors" -> "typing" [];
	"sqlalchemy.sql.visitors" -> "sqlalchemy" [];
	"sqlalchemy.sql._py_util" -> "__future__" [];
	"sqlalchemy.sql._py_util" -> "typing" [];
	"sqlalchemy.sql.roles" -> "__future__" [];
	"sqlalchemy.sql.roles" -> "typing" [];
	"sqlalchemy.sql.roles" -> "sqlalchemy" [];
	"sqlalchemy.sql.coercions" -> "__future__" [];
	"sqlalchemy.sql.coercions" -> "numbers" [];
	"sqlalchemy.sql.coercions" -> "re" [];
	"sqlalchemy.sql.coercions" -> "typing" [];
	"sqlalchemy.sql.coercions" -> "sqlalchemy" [];
	"sqlalchemy.sql.cache_key" -> "__future__" [];
	"sqlalchemy.sql.cache_key" -> "enum" [];
	"sqlalchemy.sql.cache_key" -> "itertools" [];
	"sqlalchemy.sql.cache_key" -> "typing" [];
	"sqlalchemy.sql.cache_key" -> "sqlalchemy" [];
	"sqlalchemy.sql.base" -> "__future__" [];
	"sqlalchemy.sql.base" -> "collections" [];
	"sqlalchemy.sql.base" -> "enum" [];
	"sqlalchemy.sql.base" -> "itertools" [];
	"sqlalchemy.sql.base" -> "operator" [];
	"sqlalchemy.sql.base" -> "re" [];
	"sqlalchemy.sql.base" -> "typing" [];
	"sqlalchemy.sql.base" -> "sqlalchemy" [];
	"sqlalchemy.sql._orm_types" -> "__future__" [];
	"sqlalchemy.sql" -> "typing" [];
	"sqlalchemy.sql.default_comparator" -> "__future__" [];
	"sqlalchemy.sql.default_comparator" -> "typing" [];
	"sqlalchemy.sql.default_comparator" -> "sqlalchemy" [];
	"sqlalchemy.util" -> "collections" [];
	"sqlalchemy.util" -> "functools" [];
	"sqlalchemy.util.deprecations" -> "__future__" [];
	"sqlalchemy.util.deprecations" -> "re" [];
	"sqlalchemy.util.deprecations" -> "typing" [];
	"sqlalchemy.util.deprecations" -> "sqlalchemy" [];
	"sqlalchemy.util.preloaded" -> "__future__" [];
	"sqlalchemy.util.preloaded" -> "sys" [];
	"sqlalchemy.util.preloaded" -> "typing" [];
	"sqlalchemy.util.preloaded" -> "sqlalchemy" [];
	"sqlalchemy.inspection" -> "__future__" [];
	"sqlalchemy.inspection" -> "typing" [];
	"sqlalchemy.exc" -> "__future__" [];
	"sqlalchemy.exc" -> "typing" [];
	"sqlalchemy.event" -> "__future__" [];
	"sqlalchemy.event.api" -> "__future__" [];
	"sqlalchemy.event.api" -> "typing" [];
	"sqlalchemy.event.api" -> "sqlalchemy" [];
	"sqlalchemy" -> "__future__" [];
	"sqlalchemy" -> "typing" [];
	"sqlalchemy" -> "psycopg2" [];
	"sqlalchemy.dialects.sqlite.dml" -> "__future__" [];
	"sqlalchemy.dialects.sqlite.dml" -> "typing" [];
	"sqlalchemy.dialects.sqlite.dml" -> "sqlalchemy" [];
	"sqlalchemy.dialects._typing" -> "__future__" [];
	"sqlalchemy.dialects._typing" -> "typing" [];
	"sqlalchemy.dialects.sqlite.pysqlite" -> "math" [];
	"sqlalchemy.dialects.sqlite.pysqlite" -> "os" [];
	"sqlalchemy.dialects.sqlite.pysqlite" -> "re" [];
	"sqlalchemy.dialects.sqlite.pysqlite" -> "sqlalchemy" [];
	"sqlalchemy.dialects.sqlite.pysqlite" -> "sqlite3" [];
	"sqlite3.dbapi2" -> "datetime" [];
	"sqlite3.dbapi2" -> "time" [];
	"sqlite3.dbapi2" -> "_sqlite3" [];
	"sqlalchemy.dialects.sqlite.pysqlcipher" -> "sqlalchemy" [];
	"sqlalchemy.dialects.sqlite.pysqlcipher" -> "sqlcipher3" [];
	"sqlalchemy.dialects.sqlite.pysqlcipher" -> "pysqlcipher3" [];
	"sqlalchemy.dialects.sqlite.base" -> "__future__" [];
	"sqlalchemy.dialects.sqlite.base" -> "datetime" [];
	"sqlalchemy.dialects.sqlite.base" -> "numbers" [];
	"sqlalchemy.dialects.sqlite.base" -> "re" [];
	"sqlalchemy.dialects.sqlite.base" -> "typing" [];
	"sqlalchemy.dialects.sqlite.base" -> "sqlalchemy" [];
	"sqlalchemy.dialects.sqlite.json" -> "sqlalchemy" [];
	"sqlalchemy.dialects.sqlite.aiosqlite" -> "asyncio" [];
	"sqlalchemy.dialects.sqlite.aiosqlite" -> "collections" [];
	"sqlalchemy.dialects.sqlite.aiosqlite" -> "functools" [];
	"sqlalchemy.dialects.sqlite.aiosqlite" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql" -> "types" [];
	"sqlalchemy.dialects.postgresql.types" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.types" -> "datetime" [];
	"sqlalchemy.dialects.postgresql.types" -> "typing" [];
	"sqlalchemy.dialects.postgresql.types" -> "uuid" [];
	"sqlalchemy.dialects.postgresql.named_types" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.named_types" -> "types" [];
	"sqlalchemy.dialects.postgresql.named_types" -> "typing" [];
	"sqlalchemy.dialects.postgresql.named_types" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.hstore" -> "re" [];
	"sqlalchemy.dialects.postgresql.hstore" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.ext" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.ext" -> "typing" [];
	"sqlalchemy.dialects.postgresql.dml" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.dml" -> "typing" [];
	"sqlalchemy.dialects.postgresql.dml" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.psycopg2cffi" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.psycopg2" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.psycopg2" -> "logging" [];
	"sqlalchemy.dialects.postgresql.psycopg2" -> "re" [];
	"sqlalchemy.dialects.postgresql.psycopg2" -> "typing" [];
	"sqlalchemy.dialects.postgresql.psycopg2" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.psycopg2" -> "psycopg2" [];
	"sqlalchemy.dialects.postgresql._psycopg_common" -> "__future__" [];
	"sqlalchemy.dialects.postgresql._psycopg_common" -> "decimal" [];
	"sqlalchemy.dialects.postgresql._psycopg_common" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "collections" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "logging" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "re" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "typing" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "psycopg" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "'psycopg.adapt'" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "'psycopg.types'" [];
	"sqlalchemy.dialects.postgresql.psycopg" -> "'psycopg.pq'" [];
	"sqlalchemy.dialects.postgresql.pg8000" -> "decimal" [];
	"sqlalchemy.dialects.postgresql.pg8000" -> "re" [];
	"sqlalchemy.dialects.postgresql.pg8000" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.base" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.base" -> "collections" [];
	"sqlalchemy.dialects.postgresql.base" -> "functools" [];
	"sqlalchemy.dialects.postgresql.base" -> "re" [];
	"sqlalchemy.dialects.postgresql.base" -> "typing" [];
	"sqlalchemy.dialects.postgresql.base" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "collections" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "decimal" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "json" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "re" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "time" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.asyncpg" -> "asyncpg" [];
	"sqlalchemy.dialects.postgresql.pg_catalog" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.pg_catalog" -> "typing" [];
	"sqlalchemy.dialects.postgresql.pg_catalog" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.ranges" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.ranges" -> "dataclasses" [];
	"sqlalchemy.dialects.postgresql.ranges" -> "datetime" [];
	"sqlalchemy.dialects.postgresql.ranges" -> "decimal" [];
	"sqlalchemy.dialects.postgresql.ranges" -> "typing" [];
	"sqlalchemy.dialects.postgresql.ranges" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.json" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.json" -> "typing" [];
	"sqlalchemy.dialects.postgresql.json" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.array" -> "__future__" [];
	"sqlalchemy.dialects.postgresql.array" -> "re" [];
	"sqlalchemy.dialects.postgresql.array" -> "typing" [];
	"sqlalchemy.dialects.postgresql.array" -> "sqlalchemy" [];
	"sqlalchemy.dialects.oracle" -> "types" [];
	"sqlalchemy.dialects.oracle.vector" -> "__future__" [];
	"sqlalchemy.dialects.oracle.vector" -> "array" [];
	"sqlalchemy.dialects.oracle.vector" -> "dataclasses" [];
	"sqlalchemy.dialects.oracle.vector" -> "enum" [];
	"sqlalchemy.dialects.oracle.vector" -> "typing" [];
	"sqlalchemy.dialects.oracle.oracledb" -> "__future__" [];
	"sqlalchemy.dialects.oracle.oracledb" -> "collections" [];
	"sqlalchemy.dialects.oracle.oracledb" -> "re" [];
	"sqlalchemy.dialects.oracle.oracledb" -> "typing" [];
	"sqlalchemy.dialects.oracle.oracledb" -> "sqlalchemy" [];
	"sqlalchemy.dialects.oracle.oracledb" -> "oracledb" [];
	"sqlalchemy.connectors.asyncio" -> "__future__" [];
	"sqlalchemy.connectors.asyncio" -> "collections" [];
	"sqlalchemy.dialects.oracle.cx_oracle" -> "__future__" [];
	"sqlalchemy.dialects.oracle.cx_oracle" -> "decimal" [];
	"sqlalchemy.dialects.oracle.cx_oracle" -> "random" [];
	"sqlalchemy.dialects.oracle.cx_oracle" -> "re" [];
	"sqlalchemy.dialects.oracle.cx_oracle" -> "sqlalchemy" [];
	"sqlalchemy.dialects.oracle.cx_oracle" -> "cx_Oracle" [];
	"sqlalchemy.dialects.oracle.types" -> "__future__" [];
	"sqlalchemy.dialects.oracle.types" -> "datetime" [];
	"sqlalchemy.dialects.oracle.types" -> "typing" [];
	"sqlalchemy.dialects.oracle.types" -> "sqlalchemy" [];
	"sqlalchemy.dialects.oracle.base" -> "__future__" [];
	"sqlalchemy.dialects.oracle.base" -> "collections" [];
	"sqlalchemy.dialects.oracle.base" -> "dataclasses" [];
	"sqlalchemy.dialects.oracle.base" -> "functools" [];
	"sqlalchemy.dialects.oracle.base" -> "re" [];
	"sqlalchemy.dialects.oracle.base" -> "sqlalchemy" [];
	"sqlalchemy.dialects.oracle.dictionary" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.expression" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.dml" -> "__future__" [];
	"sqlalchemy.dialects.mysql.dml" -> "typing" [];
	"sqlalchemy.dialects.mysql.dml" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.pyodbc" -> "re" [];
	"sqlalchemy.dialects.mysql.pyodbc" -> "sqlalchemy" [];
	"sqlalchemy.connectors.pyodbc" -> "__future__" [];
	"sqlalchemy.connectors.pyodbc" -> "re" [];
	"sqlalchemy.connectors.pyodbc" -> "types" [];
	"sqlalchemy.connectors.pyodbc" -> "typing" [];
	"sqlalchemy.connectors.pyodbc" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.types" -> "datetime" [];
	"sqlalchemy.dialects.mysql.types" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.mysqldb" -> "re" [];
	"sqlalchemy.dialects.mysql.mysqldb" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.mysqlconnector" -> "re" [];
	"sqlalchemy.dialects.mysql.mysqlconnector" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.mysqlconnector" -> "mysql" [];
	"sqlalchemy.dialects.mysql.mysqlconnector" -> "'mysql.connector'" [];
	"sqlalchemy.dialects.mysql.mariadbconnector" -> "re" [];
	"sqlalchemy.dialects.mysql.mariadbconnector" -> "uuid" [];
	"sqlalchemy.dialects.mysql.mariadbconnector" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.cymysql" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.base" -> "__future__" [];
	"sqlalchemy.dialects.mysql.base" -> "array" [];
	"sqlalchemy.dialects.mysql.base" -> "collections" [];
	"sqlalchemy.dialects.mysql.base" -> "itertools" [];
	"sqlalchemy.dialects.mysql.base" -> "re" [];
	"sqlalchemy.dialects.mysql.base" -> "typing" [];
	"sqlalchemy.dialects.mysql.base" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.json" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.enumerated" -> "re" [];
	"sqlalchemy.dialects.mysql.enumerated" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.asyncmy" -> "collections" [];
	"sqlalchemy.dialects.mysql.asyncmy" -> "contextlib" [];
	"sqlalchemy.dialects.mysql.asyncmy" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.asyncmy" -> "asyncmy" [];
	"sqlalchemy.dialects.mysql.aiomysql" -> "collections" [];
	"sqlalchemy.dialects.mysql.aiomysql" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.aiomysql" -> "'pymysql.constants'" [];
	"sqlalchemy.dialects.mysql.reflection" -> "re" [];
	"sqlalchemy.dialects.mysql.reflection" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql.pyodbc" -> "datetime" [];
	"sqlalchemy.dialects.mssql.pyodbc" -> "decimal" [];
	"sqlalchemy.dialects.mssql.pyodbc" -> "re" [];
	"sqlalchemy.dialects.mssql.pyodbc" -> "struct" [];
	"sqlalchemy.dialects.mssql.pyodbc" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql.json" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql.pymssql" -> "re" [];
	"sqlalchemy.dialects.mssql.pymssql" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql.aioodbc" -> "__future__" [];
	"sqlalchemy.connectors.aioodbc" -> "__future__" [];
	"sqlalchemy.connectors.aioodbc" -> "typing" [];
	"sqlalchemy.connectors.aioodbc" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql.information_schema" -> "sqlalchemy" [];
	"sqlalchemy.ext.compiler" -> "__future__" [];
	"sqlalchemy.ext.compiler" -> "typing" [];
	"sqlalchemy.ext.compiler" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql.base" -> "__future__" [];
	"sqlalchemy.dialects.mssql.base" -> "codecs" [];
	"sqlalchemy.dialects.mssql.base" -> "datetime" [];
	"sqlalchemy.dialects.mssql.base" -> "operator" [];
	"sqlalchemy.dialects.mssql.base" -> "re" [];
	"sqlalchemy.dialects.mssql.base" -> "typing" [];
	"sqlalchemy.dialects.mssql.base" -> "uuid" [];
	"sqlalchemy.dialects.mssql.base" -> "sqlalchemy" [];
	"sqlalchemy.ext.baked" -> "logging" [];
	"sqlalchemy.ext.baked" -> "sqlalchemy" [];
	"sqlalchemy.types" -> "__future__" [];
	"sqlalchemy.orm.base" -> "__future__" [];
	"sqlalchemy.orm.base" -> "enum" [];
	"sqlalchemy.orm.base" -> "operator" [];
	"sqlalchemy.orm.base" -> "typing" [];
	"sqlalchemy.orm.base" -> "sqlalchemy" [];
	"sqlalchemy.orm.dynamic" -> "__future__" [];
	"sqlalchemy.orm.dynamic" -> "typing" [];
	"sqlalchemy.orm.dynamic" -> "sqlalchemy" [];
	"sqlalchemy.orm._typing" -> "__future__" [];
	"sqlalchemy.orm._typing" -> "operator" [];
	"sqlalchemy.orm._typing" -> "typing" [];
	"sqlalchemy.orm.interfaces" -> "__future__" [];
	"sqlalchemy.orm.interfaces" -> "collections" [];
	"sqlalchemy.orm.interfaces" -> "dataclasses" [];
	"sqlalchemy.orm.interfaces" -> "typing" [];
	"sqlalchemy.orm.interfaces" -> "sqlalchemy" [];
	"sqlalchemy.orm.exc" -> "__future__" [];
	"sqlalchemy.orm.exc" -> "typing" [];
	"sqlalchemy.orm.exc" -> "sqlalchemy" [];
	"sqlalchemy.orm.collections" -> "__future__" [];
	"sqlalchemy.orm.collections" -> "operator" [];
	"sqlalchemy.orm.collections" -> "threading" [];
	"sqlalchemy.orm.collections" -> "typing" [];
	"sqlalchemy.orm.collections" -> "weakref" [];
	"sqlalchemy.orm.collections" -> "sqlalchemy" [];
	"sqlalchemy.orm.mapped_collection" -> "__future__" [];
	"sqlalchemy.orm.mapped_collection" -> "operator" [];
	"sqlalchemy.orm.mapped_collection" -> "typing" [];
	"sqlalchemy.orm.mapped_collection" -> "sqlalchemy" [];
	"sqlalchemy.orm" -> "__future__" [];
	"sqlalchemy.orm" -> "typing" [];
	"sqlalchemy.ext.declarative" -> "sqlalchemy" [];
	"sqlalchemy.ext.declarative.extensions" -> "__future__" [];
	"sqlalchemy.ext.declarative.extensions" -> "collections" [];
	"sqlalchemy.ext.declarative.extensions" -> "contextlib" [];
	"sqlalchemy.ext.declarative.extensions" -> "typing" [];
	"sqlalchemy.ext.declarative.extensions" -> "sqlalchemy" [];
	"pyDatalog.util" -> "sys" [];
	"pyDatalog.util" -> "threading" [];
	"pyDatalog.util" -> "__builtin__" [];
	"pyDatalog.util" -> "builtins" [];
	"pyDatalog.pyParser" -> "ast" [];
	"pyDatalog.pyParser" -> "collections" [];
	"pyDatalog.pyParser" -> "inspect" [];
	"pyDatalog.pyParser" -> "re" [];
	"pyDatalog.pyParser" -> "string" [];
	"pyDatalog.pyParser" -> "sys" [];
	"pyDatalog.pyParser" -> "threading" [];
	"pyDatalog.Aggregate" -> "itertools" [];
	"pyDatalog.Aggregate" -> "statistics" [];
	"pyDatalog.UserList" -> "collections" [];
	"pyDatalog.pyEngine" -> "collections" [];
	"pyDatalog.pyEngine" -> "gc" [];
	"pyDatalog.pyEngine" -> "logging" [];
	"pyDatalog.pyEngine" -> "re" [];
	"pyDatalog.pyEngine" -> "threading" [];
	"pyDatalog.pyEngine" -> "weakref" [];
	"pyDatalog.Logic" -> "copy" [];
	"pyDatalog.Logic" -> "threading" [];
	"langchain_core.messages" -> "typing" [];
	"langchain_core.messages.utils" -> "__future__" [];
	"langchain_core.messages.utils" -> "base64" [];
	"langchain_core.messages.utils" -> "inspect" [];
	"langchain_core.messages.utils" -> "json" [];
	"langchain_core.messages.utils" -> "logging" [];
	"langchain_core.messages.utils" -> "math" [];
	"langchain_core.messages.utils" -> "functools" [];
	"langchain_core.messages.utils" -> "typing" [];
	"langchain_core.messages.utils" -> "pydantic" [];
	"langchain_core.messages.utils" -> "langchain_text_splitters" [];
	"langchain_core.runnables.base" -> "__future__" [];
	"langchain_core.runnables.base" -> "asyncio" [];
	"langchain_core.runnables.base" -> "collections" [];
	"langchain_core.runnables.base" -> "contextlib" [];
	"langchain_core.runnables.base" -> "functools" [];
	"langchain_core.runnables.base" -> "inspect" [];
	"langchain_core.runnables.base" -> "threading" [];
	"langchain_core.runnables.base" -> "abc" [];
	"langchain_core.runnables.base" -> "itertools" [];
	"langchain_core.runnables.base" -> "operator" [];
	"langchain_core.runnables.base" -> "types" [];
	"langchain_core.runnables.base" -> "typing" [];
	"langchain_core.runnables.base" -> "pydantic" [];
	"langchain_core.runnables.base" -> "typing_extensions" [];
	"langchain_core.beta.runnables.context" -> "asyncio" [];
	"langchain_core.beta.runnables.context" -> "threading" [];
	"langchain_core.beta.runnables.context" -> "collections" [];
	"langchain_core.beta.runnables.context" -> "functools" [];
	"langchain_core.beta.runnables.context" -> "itertools" [];
	"langchain_core.beta.runnables.context" -> "typing" [];
	"langchain_core.beta.runnables.context" -> "pydantic" [];
	"langchain_core.beta.runnables.context" -> "typing_extensions" [];
	"langchain_core.runnables.configurable" -> "__future__" [];
	"langchain_core.runnables.configurable" -> "enum" [];
	"langchain_core.runnables.configurable" -> "threading" [];
	"langchain_core.runnables.configurable" -> "abc" [];
	"langchain_core.runnables.configurable" -> "functools" [];
	"langchain_core.runnables.configurable" -> "typing" [];
	"langchain_core.runnables.configurable" -> "weakref" [];
	"langchain_core.runnables.configurable" -> "pydantic" [];
	"langchain_core.runnables.configurable" -> "typing_extensions" [];
	"langchain_core.tracers._streaming" -> "abc" [];
	"langchain_core.tracers._streaming" -> "typing" [];
	"langchain_core.tracers._streaming" -> "uuid" [];
	"langchain_core.tracers" -> "typing" [];
	"langchain_core.tracers.stdout" -> "json" [];
	"langchain_core.tracers.stdout" -> "typing" [];
	"langchain_core.utils.input" -> "typing" [];
	"langchain_core.utils" -> "typing" [];
	"langchain_core.utils.mustache" -> "__future__" [];
	"langchain_core.utils.mustache" -> "logging" [];
	"langchain_core.utils.mustache" -> "types" [];
	"langchain_core.utils.mustache" -> "typing" [];
	"langchain_core.utils.mustache" -> "typing_extensions" [];
	"langchain_core.utils.utils" -> "contextlib" [];
	"langchain_core.utils.utils" -> "datetime" [];
	"langchain_core.utils.utils" -> "functools" [];
	"langchain_core.utils.utils" -> "importlib" [];
	"langchain_core.utils.utils" -> "os" [];
	"langchain_core.utils.utils" -> "warnings" [];
	"langchain_core.utils.utils" -> "typing" [];
	"langchain_core.utils.utils" -> "pydantic" [];
	"langchain_core.utils.utils" -> "requests" [];
	"langchain_core.utils.utils" -> "typing_extensions" [];
	"requests" -> "warnings" [];
	"requests" -> "charset_normalizer" [];
	"requests" -> "chardet" [];
	"requests" -> "ssl" [];
	"requests" -> "cryptography" [];
	"requests" -> "logging" [];
	"requests.structures" -> "collections" [];
	"requests.compat" -> "importlib" [];
	"requests.compat" -> "sys" [];
	"requests.compat" -> "simplejson" [];
	"requests.compat" -> "json" [];
	"requests.compat" -> "collections" [];
	"requests.compat" -> "http" [];
	"requests.compat" -> "io" [];
	"http.cookies" -> "re" [];
	"http.cookies" -> "string" [];
	"http.cookies" -> "types" [];
	"http.cookies" -> "time" [];
	"requests.models" -> "datetime" [];
	"requests.models" -> "io" [];
	"requests.models" -> "idna" [];
	"requests.cookies" -> "calendar" [];
	"requests.cookies" -> "copy" [];
	"requests.cookies" -> "time" [];
	"requests.cookies" -> "threading" [];
	"requests.cookies" -> "dummy_threading" [];
	"requests.auth" -> "hashlib" [];
	"requests.auth" -> "os" [];
	"requests.auth" -> "re" [];
	"requests.auth" -> "threading" [];
	"requests.auth" -> "time" [];
	"requests.auth" -> "warnings" [];
	"requests.auth" -> "base64" [];
	"requests._internal_utils" -> "re" [];
	"requests.sessions" -> "os" [];
	"requests.sessions" -> "sys" [];
	"requests.sessions" -> "time" [];
	"requests.sessions" -> "collections" [];
	"requests.sessions" -> "datetime" [];
	"requests.adapters" -> "os.path" [];
	"requests.adapters" -> "socket" [];
	"requests.adapters" -> "typing" [];
	"requests.adapters" -> "warnings" [];
	"requests.adapters" -> "ssl" [];
	"urllib3.contrib.socks" -> "__future__" [];
	"urllib3.contrib.socks" -> "socks" [];
	"urllib3.contrib.socks" -> "warnings" [];
	"urllib3.contrib.socks" -> "socket" [];
	"urllib3.contrib.socks" -> "ssl" [];
	"requests.utils" -> "codecs" [];
	"requests.utils" -> "contextlib" [];
	"requests.utils" -> "io" [];
	"requests.utils" -> "os" [];
	"requests.utils" -> "re" [];
	"requests.utils" -> "socket" [];
	"requests.utils" -> "struct" [];
	"requests.utils" -> "sys" [];
	"requests.utils" -> "tempfile" [];
	"requests.utils" -> "warnings" [];
	"requests.utils" -> "zipfile" [];
	"requests.utils" -> "collections" [];
	"requests.utils" -> "winreg" [];
	"requests.utils" -> "netrc" [];
	"requests.certs" -> "certifi" [];
	"certifi.core" -> "sys" [];
	"certifi.core" -> "atexit" [];
	"certifi.core" -> "os" [];
	"certifi.core" -> "types" [];
	"certifi.core" -> "typing" [];
	"importlib.resources" -> "os" [];
	"importlib.resources" -> "contextlib" [];
	"importlib.resources" -> "io" [];
	"importlib.resources" -> "pathlib" [];
	"importlib.resources" -> "types" [];
	"importlib.resources" -> "typing" [];
	"importlib.resources" -> "'typing.io'" [];
	"requests.packages" -> "sys" [];
	"charset_normalizer" -> "__future__" [];
	"charset_normalizer" -> "logging" [];
	"charset_normalizer.version" -> "__future__" [];
	"charset_normalizer.utils" -> "__future__" [];
	"charset_normalizer.utils" -> "importlib" [];
	"charset_normalizer.utils" -> "logging" [];
	"charset_normalizer.utils" -> "unicodedata" [];
	"charset_normalizer.utils" -> "codecs" [];
	"charset_normalizer.utils" -> "functools" [];
	"charset_normalizer.utils" -> "re" [];
	"charset_normalizer.utils" -> "typing" [];
	"charset_normalizer.utils" -> "_multibytecodec" [];
	"charset_normalizer.constant" -> "__future__" [];
	"charset_normalizer.constant" -> "codecs" [];
	"charset_normalizer.constant" -> "re" [];
	"charset_normalizer.models" -> "__future__" [];
	"charset_normalizer.models" -> "hashlib" [];
	"charset_normalizer.models" -> "json" [];
	"charset_normalizer.models" -> "re" [];
	"charset_normalizer.models" -> "typing" [];
	"charset_normalizer.cd" -> "__future__" [];
	"charset_normalizer.cd" -> "importlib" [];
	"charset_normalizer.cd" -> "codecs" [];
	"charset_normalizer.cd" -> "collections" [];
	"charset_normalizer.cd" -> "functools" [];
	"charset_normalizer.cd" -> "typing" [];
	"charset_normalizer.md" -> "__future__" [];
	"charset_normalizer.md" -> "functools" [];
	"charset_normalizer.md" -> "logging" [];
	"charset_normalizer.legacy" -> "__future__" [];
	"charset_normalizer.legacy" -> "typing" [];
	"charset_normalizer.legacy" -> "warnings" [];
	"charset_normalizer.legacy" -> "typing_extensions" [];
	"charset_normalizer.api" -> "__future__" [];
	"charset_normalizer.api" -> "logging" [];
	"charset_normalizer.api" -> "os" [];
	"charset_normalizer.api" -> "typing" [];
	"langchain_core.utils.strings" -> "typing" [];
	"langchain_core.utils.loading" -> "warnings" [];
	"langchain_core.utils.loading" -> "typing" [];
	"langchain_core._api.deprecation" -> "contextlib" [];
	"langchain_core._api.deprecation" -> "functools" [];
	"langchain_core._api.deprecation" -> "inspect" [];
	"langchain_core._api.deprecation" -> "warnings" [];
	"langchain_core._api.deprecation" -> "typing" [];
	"langchain_core._api.deprecation" -> "typing_extensions" [];
	"langchain_core._api.internal" -> "inspect" [];
	"langchain_core.utils.formatting" -> "string" [];
	"langchain_core.utils.formatting" -> "typing" [];
	"langchain_core.utils.env" -> "__future__" [];
	"langchain_core.utils.env" -> "os" [];
	"langchain_core.utils.env" -> "typing" [];
	"langchain_core.utils.image" -> "typing" [];
	"langchain_core.tracers.evaluation" -> "__future__" [];
	"langchain_core.tracers.evaluation" -> "logging" [];
	"langchain_core.tracers.evaluation" -> "threading" [];
	"langchain_core.tracers.evaluation" -> "weakref" [];
	"langchain_core.tracers.evaluation" -> "typing" [];
	"langchain_core.tracers.evaluation" -> "uuid" [];
	"langchain_core.tracers.evaluation" -> "langsmith" [];
	"langchain_core.tracers.context" -> "__future__" [];
	"langchain_core.tracers.context" -> "contextlib" [];
	"langchain_core.tracers.context" -> "contextvars" [];
	"langchain_core.tracers.context" -> "typing" [];
	"langchain_core.tracers.context" -> "uuid" [];
	"langchain_core.tracers.context" -> "langsmith" [];
	"langchain_core.callbacks.base" -> "__future__" [];
	"langchain_core.callbacks.base" -> "logging" [];
	"langchain_core.callbacks.base" -> "typing" [];
	"langchain_core.callbacks.base" -> "typing_extensions" [];
	"langchain_core.callbacks.base" -> "uuid" [];
	"langchain_core.callbacks.base" -> "tenacity" [];
	"langchain_core.outputs" -> "typing" [];
	"langchain_core.outputs.run_info" -> "__future__" [];
	"langchain_core.outputs.run_info" -> "uuid" [];
	"langchain_core.outputs.run_info" -> "pydantic" [];
	"langchain_core.outputs.llm_result" -> "__future__" [];
	"langchain_core.outputs.llm_result" -> "copy" [];
	"langchain_core.outputs.llm_result" -> "typing" [];
	"langchain_core.outputs.llm_result" -> "pydantic" [];
	"langchain_core.outputs.generation" -> "__future__" [];
	"langchain_core.outputs.generation" -> "typing" [];
	"langchain_core.utils._merge" -> "__future__" [];
	"langchain_core.utils._merge" -> "typing" [];
	"langchain_core.load" -> "typing" [];
	"langchain_core.load.dump" -> "json" [];
	"langchain_core.load.dump" -> "typing" [];
	"langchain_core.load.dump" -> "pydantic" [];
	"langchain_core.load.load" -> "importlib" [];
	"langchain_core.load.load" -> "json" [];
	"langchain_core.load.load" -> "os" [];
	"langchain_core.load.load" -> "typing" [];
	"langchain_core.outputs.chat_result" -> "typing" [];
	"langchain_core.outputs.chat_result" -> "pydantic" [];
	"langchain_core.outputs.chat_generation" -> "__future__" [];
	"langchain_core.outputs.chat_generation" -> "typing" [];
	"langchain_core.outputs.chat_generation" -> "pydantic" [];
	"langchain_core.outputs.chat_generation" -> "typing_extensions" [];
	"langchain_core.documents" -> "typing" [];
	"langchain_core.documents.transformers" -> "__future__" [];
	"langchain_core.documents.transformers" -> "abc" [];
	"langchain_core.documents.transformers" -> "typing" [];
	"langchain_core.documents.compressor" -> "__future__" [];
	"langchain_core.documents.compressor" -> "abc" [];
	"langchain_core.documents.compressor" -> "typing" [];
	"langchain_core.documents.compressor" -> "pydantic" [];
	"langchain_core.documents.base" -> "__future__" [];
	"langchain_core.documents.base" -> "contextlib" [];
	"langchain_core.documents.base" -> "mimetypes" [];
	"langchain_core.documents.base" -> "io" [];
	"langchain_core.documents.base" -> "pathlib" [];
	"langchain_core.documents.base" -> "typing" [];
	"langchain_core.documents.base" -> "pydantic" [];
	"langchain_core.agents" -> "__future__" [];
	"langchain_core.agents" -> "json" [];
	"langchain_core.agents" -> "typing" [];
	"langchain_core.callbacks" -> "typing" [];
	"langchain_core.callbacks.usage" -> "threading" [];
	"langchain_core.callbacks.usage" -> "contextlib" [];
	"langchain_core.callbacks.usage" -> "contextvars" [];
	"langchain_core.callbacks.usage" -> "typing" [];
	"langchain_core.callbacks.usage" -> "typing_extensions" [];
	"langchain_core.callbacks.streaming_stdout" -> "__future__" [];
	"langchain_core.callbacks.streaming_stdout" -> "sys" [];
	"langchain_core.callbacks.streaming_stdout" -> "typing" [];
	"langchain_core.callbacks.streaming_stdout" -> "typing_extensions" [];
	"langchain_core.callbacks.stdout" -> "__future__" [];
	"langchain_core.callbacks.stdout" -> "typing" [];
	"langchain_core.callbacks.stdout" -> "typing_extensions" [];
	"langchain_core.callbacks.file" -> "__future__" [];
	"langchain_core.callbacks.file" -> "pathlib" [];
	"langchain_core.callbacks.file" -> "typing" [];
	"langchain_core.callbacks.file" -> "typing_extensions" [];
	"tenacity" -> "dataclasses" [];
	"tenacity" -> "functools" [];
	"tenacity" -> "sys" [];
	"tenacity" -> "threading" [];
	"tenacity" -> "time" [];
	"tenacity" -> "typing" [];
	"tenacity" -> "warnings" [];
	"tenacity" -> "abc" [];
	"tenacity" -> "concurrent" [];
	"tenacity" -> "tornado" [];
	"tenacity" -> "types" [];
	"tenacity" -> "typing_extensions" [];
	"tenacity.tornadoweb" -> "sys" [];
	"tenacity.tornadoweb" -> "typing" [];
	"tenacity.tornadoweb" -> "tornado" [];
	"tornado.concurrent" -> "asyncio" [];
	"tornado.concurrent" -> "concurrent" [];
	"tornado.concurrent" -> "functools" [];
	"tornado.concurrent" -> "sys" [];
	"tornado.concurrent" -> "types" [];
	"tornado.concurrent" -> "typing" [];
	"tornado.ioloop" -> "asyncio" [];
	"tornado.ioloop" -> "datetime" [];
	"tornado.ioloop" -> "functools" [];
	"tornado.ioloop" -> "numbers" [];
	"tornado.ioloop" -> "os" [];
	"tornado.ioloop" -> "sys" [];
	"tornado.ioloop" -> "time" [];
	"tornado.ioloop" -> "math" [];
	"tornado.ioloop" -> "random" [];
	"tornado.ioloop" -> "warnings" [];
	"tornado.ioloop" -> "inspect" [];
	"tornado.ioloop" -> "typing" [];
	"tornado.ioloop" -> "typing_extensions" [];
	"tornado.process" -> "asyncio" [];
	"tornado.process" -> "os" [];
	"tornado.process" -> "multiprocessing" [];
	"tornado.process" -> "signal" [];
	"tornado.process" -> "subprocess" [];
	"tornado.process" -> "sys" [];
	"tornado.process" -> "time" [];
	"tornado.process" -> "binascii" [];
	"tornado.process" -> "typing" [];
	"tornado.process" -> "random" [];
	"tornado.iostream" -> "asyncio" [];
	"tornado.iostream" -> "collections" [];
	"tornado.iostream" -> "errno" [];
	"tornado.iostream" -> "io" [];
	"tornado.iostream" -> "numbers" [];
	"tornado.iostream" -> "os" [];
	"tornado.iostream" -> "socket" [];
	"tornado.iostream" -> "ssl" [];
	"tornado.iostream" -> "sys" [];
	"tornado.iostream" -> "re" [];
	"tornado.iostream" -> "typing" [];
	"tornado.iostream" -> "types" [];
	"tornado.iostream" -> "doctest" [];
	"doctest" -> "__future__" [];
	"doctest" -> "difflib" [];
	"doctest" -> "inspect" [];
	"doctest" -> "linecache" [];
	"doctest" -> "os" [];
	"doctest" -> "pdb" [];
	"doctest" -> "re" [];
	"doctest" -> "sys" [];
	"doctest" -> "traceback" [];
	"doctest" -> "unittest" [];
	"doctest" -> "io" [];
	"doctest" -> "collections" [];
	"doctest" -> "builtins" [];
	"doctest" -> "argparse" [];
	"unittest" -> "os.path" [];
	"unittest.async_case" -> "asyncio" [];
	"unittest.async_case" -> "inspect" [];
	"unittest.signals" -> "signal" [];
	"unittest.signals" -> "weakref" [];
	"unittest.signals" -> "functools" [];
	"unittest.main" -> "sys" [];
	"unittest.main" -> "argparse" [];
	"unittest.main" -> "os" [];
	"unittest.runner" -> "sys" [];
	"unittest.runner" -> "time" [];
	"unittest.runner" -> "warnings" [];
	"unittest.loader" -> "os" [];
	"unittest.loader" -> "re" [];
	"unittest.loader" -> "sys" [];
	"unittest.loader" -> "traceback" [];
	"unittest.loader" -> "types" [];
	"unittest.loader" -> "functools" [];
	"unittest.loader" -> "warnings" [];
	"unittest.loader" -> "fnmatch" [];
	"unittest.suite" -> "sys" [];
	"unittest.case" -> "sys" [];
	"unittest.case" -> "functools" [];
	"unittest.case" -> "difflib" [];
	"unittest.case" -> "pprint" [];
	"unittest.case" -> "re" [];
	"unittest.case" -> "warnings" [];
	"unittest.case" -> "collections" [];
	"unittest.case" -> "contextlib" [];
	"unittest.case" -> "traceback" [];
	"unittest.case" -> "types" [];
	"unittest._log" -> "logging" [];
	"unittest._log" -> "collections" [];
	"unittest.result" -> "io" [];
	"unittest.result" -> "sys" [];
	"unittest.result" -> "traceback" [];
	"unittest.result" -> "functools" [];
	"unittest.util" -> "collections" [];
	"unittest.util" -> "os.path" [];
	"difflib" -> "heapq" [];
	"difflib" -> "collections" [];
	"difflib" -> "types" [];
	"difflib" -> "re" [];
	"difflib" -> "difflib" [];
	"tornado.netutil" -> "asyncio" [];
	"tornado.netutil" -> "errno" [];
	"tornado.netutil" -> "os" [];
	"tornado.netutil" -> "sys" [];
	"tornado.netutil" -> "socket" [];
	"tornado.netutil" -> "ssl" [];
	"tornado.netutil" -> "stat" [];
	"tornado.netutil" -> "typing" [];
	"tornado.platform.asyncio" -> "asyncio" [];
	"tornado.platform.asyncio" -> "atexit" [];
	"tornado.platform.asyncio" -> "errno" [];
	"tornado.platform.asyncio" -> "functools" [];
	"tornado.platform.asyncio" -> "select" [];
	"tornado.platform.asyncio" -> "socket" [];
	"tornado.platform.asyncio" -> "sys" [];
	"tornado.platform.asyncio" -> "threading" [];
	"tornado.platform.asyncio" -> "typing" [];
	"tornado.platform.asyncio" -> "warnings" [];
	"tornado.util" -> "array" [];
	"tornado.util" -> "asyncio" [];
	"tornado.util" -> "atexit" [];
	"tornado.util" -> "inspect" [];
	"tornado.util" -> "os" [];
	"tornado.util" -> "re" [];
	"tornado.util" -> "typing" [];
	"tornado.util" -> "zlib" [];
	"tornado.util" -> "datetime" [];
	"tornado.util" -> "types" [];
	"tornado.util" -> "unittest" [];
	"tornado.util" -> "sys" [];
	"tornado.util" -> "doctest" [];
	"tornado.log" -> "logging" [];
	"tornado.log" -> "sys" [];
	"tornado.log" -> "colorama" [];
	"tornado.log" -> "curses" [];
	"tornado.log" -> "typing" [];
	"tornado.options" -> "datetime" [];
	"tornado.options" -> "numbers" [];
	"tornado.options" -> "re" [];
	"tornado.options" -> "sys" [];
	"tornado.options" -> "os" [];
	"tornado.options" -> "textwrap" [];
	"tornado.options" -> "typing" [];
	"tornado.escape" -> "html" [];
	"tornado.escape" -> "json" [];
	"tornado.escape" -> "re" [];
	"tornado.escape" -> "typing" [];
	"logging.handlers" -> "socket" [];
	"logging.handlers" -> "os" [];
	"logging.handlers" -> "pickle" [];
	"logging.handlers" -> "struct" [];
	"logging.handlers" -> "time" [];
	"logging.handlers" -> "re" [];
	"logging.handlers" -> "stat" [];
	"logging.handlers" -> "queue" [];
	"logging.handlers" -> "threading" [];
	"logging.handlers" -> "copy" [];
	"logging.handlers" -> "smtplib" [];
	"logging.handlers" -> "win32evtlogutil" [];
	"logging.handlers" -> "win32evtlog" [];
	"logging.handlers" -> "base64" [];
	"smtplib" -> "socket" [];
	"smtplib" -> "io" [];
	"smtplib" -> "re" [];
	"smtplib" -> "base64" [];
	"smtplib" -> "hmac" [];
	"smtplib" -> "copy" [];
	"smtplib" -> "datetime" [];
	"smtplib" -> "sys" [];
	"smtplib" -> "ssl" [];
	"smtplib" -> "warnings" [];
	"tornado.gen" -> "asyncio" [];
	"tornado.gen" -> "builtins" [];
	"tornado.gen" -> "collections" [];
	"tornado.gen" -> "datetime" [];
	"tornado.gen" -> "functools" [];
	"tornado.gen" -> "inspect" [];
	"tornado.gen" -> "sys" [];
	"tornado.gen" -> "types" [];
	"tornado.gen" -> "contextvars" [];
	"tornado.gen" -> "typing" [];
	"tenacity.asyncio" -> "functools" [];
	"tenacity.asyncio" -> "sys" [];
	"tenacity.asyncio" -> "typing" [];
	"tenacity.asyncio" -> "trio" [];
	"tenacity.asyncio" -> "sniffio" [];
	"tenacity.asyncio" -> "asyncio" [];
	"sniffio._impl" -> "contextvars" [];
	"sniffio._impl" -> "typing" [];
	"sniffio._impl" -> "sys" [];
	"sniffio._impl" -> "threading" [];
	"sniffio._impl" -> "asyncio" [];
	"sniffio._impl" -> "'curio.meta'" [];
	"tenacity.asyncio.retry" -> "abc" [];
	"tenacity.asyncio.retry" -> "typing" [];
	"tenacity.asyncio.retry" -> "tenacity" [];
	"tornado" -> "importlib" [];
	"tornado" -> "typing" [];
	"tornado.autoreload" -> "os" [];
	"tornado.autoreload" -> "sys" [];
	"tornado.autoreload" -> "functools" [];
	"tornado.autoreload" -> "pkgutil" [];
	"tornado.autoreload" -> "traceback" [];
	"tornado.autoreload" -> "types" [];
	"tornado.autoreload" -> "subprocess" [];
	"tornado.autoreload" -> "weakref" [];
	"tornado.autoreload" -> "signal" [];
	"tornado.autoreload" -> "typing" [];
	"tornado.autoreload" -> "optparse" [];
	"tornado.autoreload" -> "runpy" [];
	"tornado.template" -> "datetime" [];
	"tornado.template" -> "io" [];
	"tornado.template" -> "linecache" [];
	"tornado.template" -> "os.path" [];
	"tornado.template" -> "posixpath" [];
	"tornado.template" -> "re" [];
	"tornado.template" -> "threading" [];
	"tornado.template" -> "typing" [];
	"tornado.locale" -> "codecs" [];
	"tornado.locale" -> "csv" [];
	"tornado.locale" -> "datetime" [];
	"tornado.locale" -> "gettext" [];
	"tornado.locale" -> "glob" [];
	"tornado.locale" -> "os" [];
	"tornado.locale" -> "re" [];
	"tornado.locale" -> "typing" [];
	"tenacity.before_sleep" -> "typing" [];
	"tenacity.before_sleep" -> "logging" [];
	"tenacity.after" -> "typing" [];
	"tenacity.after" -> "logging" [];
	"tenacity.before" -> "typing" [];
	"tenacity.before" -> "logging" [];
	"tenacity.wait" -> "abc" [];
	"tenacity.wait" -> "random" [];
	"tenacity.wait" -> "typing" [];
	"tenacity.stop" -> "abc" [];
	"tenacity.stop" -> "typing" [];
	"tenacity.stop" -> "threading" [];
	"tenacity.nap" -> "time" [];
	"tenacity.nap" -> "typing" [];
	"tenacity.nap" -> "threading" [];
	"tenacity.retry" -> "abc" [];
	"tenacity.retry" -> "re" [];
	"tenacity.retry" -> "typing" [];
	"tenacity._utils" -> "functools" [];
	"tenacity._utils" -> "inspect" [];
	"tenacity._utils" -> "sys" [];
	"tenacity._utils" -> "typing" [];
	"tenacity._utils" -> "datetime" [];
	"langchain_core.tracers.run_collector" -> "typing" [];
	"langchain_core.tracers.run_collector" -> "uuid" [];
	"langsmith.utils" -> "__future__" [];
	"langsmith.utils" -> "contextlib" [];
	"langsmith.utils" -> "contextvars" [];
	"langsmith.utils" -> "copy" [];
	"langsmith.utils" -> "enum" [];
	"langsmith.utils" -> "functools" [];
	"langsmith.utils" -> "logging" [];
	"langsmith.utils" -> "os" [];
	"langsmith.utils" -> "pathlib" [];
	"langsmith.utils" -> "socket" [];
	"langsmith.utils" -> "subprocess" [];
	"langsmith.utils" -> "sys" [];
	"langsmith.utils" -> "threading" [];
	"langsmith.utils" -> "traceback" [];
	"langsmith.utils" -> "typing" [];
	"langsmith.utils" -> "urllib" [];
	"langsmith.utils" -> "requests" [];
	"langsmith.utils" -> "typing_extensions" [];
	"langsmith.utils" -> "vcr" [];
	"langsmith.utils" -> "packaging" [];
	"langsmith._internal._patch" -> "functools" [];
	"langsmith._internal._patch" -> "packaging" [];
	"langsmith._internal._orjson" -> "orjson" [];
	"langsmith._internal._orjson" -> "dataclasses" [];
	"langsmith._internal._orjson" -> "json" [];
	"langsmith._internal._orjson" -> "uuid" [];
	"langsmith._internal._orjson" -> "typing" [];
	"orjson" -> "uuid" [];
	"orjson" -> "zoneinfo" [];
	"orjson" -> "enum" [];
	"orjson" -> "json" [];
	"orjson" -> "dataclasses" [];
	"zoneinfo" -> "_zoneinfo" [];
	"zoneinfo._zoneinfo" -> "bisect" [];
	"zoneinfo._zoneinfo" -> "calendar" [];
	"zoneinfo._zoneinfo" -> "collections" [];
	"zoneinfo._zoneinfo" -> "functools" [];
	"zoneinfo._zoneinfo" -> "re" [];
	"zoneinfo._zoneinfo" -> "weakref" [];
	"zoneinfo._zoneinfo" -> "datetime" [];
	"zoneinfo._zoneinfo" -> "pickle" [];
	"zoneinfo._common" -> "struct" [];
	"zoneinfo._tzpath" -> "os" [];
	"zoneinfo._tzpath" -> "sysconfig" [];
	"zoneinfo._tzpath" -> "warnings" [];
	"zoneinfo._tzpath" -> "importlib" [];
	"langsmith._internal._aiter" -> "asyncio" [];
	"langsmith._internal._aiter" -> "contextvars" [];
	"langsmith._internal._aiter" -> "functools" [];
	"langsmith._internal._aiter" -> "inspect" [];
	"langsmith._internal._aiter" -> "collections" [];
	"langsmith._internal._aiter" -> "contextlib" [];
	"langsmith._internal._aiter" -> "typing" [];
	"langsmith.schemas" -> "__future__" [];
	"langsmith.schemas" -> "datetime" [];
	"langsmith.schemas" -> "decimal" [];
	"langsmith.schemas" -> "enum" [];
	"langsmith.schemas" -> "typing" [];
	"langsmith.schemas" -> "uuid" [];
	"langsmith.schemas" -> "typing_extensions" [];
	"langsmith.schemas" -> "pydantic" [];
	"langsmith.schemas" -> "pathlib" [];
	"pydantic.v1.version" -> "cython" [];
	"pydantic.v1.version" -> "platform" [];
	"pydantic.v1.version" -> "sys" [];
	"pydantic.v1.version" -> "importlib" [];
	"pydantic.v1.version" -> "pathlib" [];
	"pydantic.v1.types" -> "abc" [];
	"pydantic.v1.types" -> "math" [];
	"pydantic.v1.types" -> "re" [];
	"pydantic.v1.types" -> "warnings" [];
	"pydantic.v1.types" -> "datetime" [];
	"pydantic.v1.types" -> "decimal" [];
	"pydantic.v1.types" -> "enum" [];
	"pydantic.v1.types" -> "pathlib" [];
	"pydantic.v1.types" -> "types" [];
	"pydantic.v1.types" -> "typing" [];
	"pydantic.v1.types" -> "uuid" [];
	"pydantic.v1.types" -> "weakref" [];
	"pydantic.v1.types" -> "typing_extensions" [];
	"pydantic.v1.typing" -> "sys" [];
	"pydantic.v1.typing" -> "typing" [];
	"pydantic.v1.typing" -> "os" [];
	"pydantic.v1.typing" -> "typing_extensions" [];
	"pydantic.v1.typing" -> "types" [];
	"pydantic.v1.validators" -> "math" [];
	"pydantic.v1.validators" -> "re" [];
	"pydantic.v1.validators" -> "collections" [];
	"pydantic.v1.validators" -> "datetime" [];
	"pydantic.v1.validators" -> "decimal" [];
	"pydantic.v1.validators" -> "enum" [];
	"pydantic.v1.validators" -> "ipaddress" [];
	"pydantic.v1.validators" -> "pathlib" [];
	"pydantic.v1.validators" -> "typing" [];
	"pydantic.v1.validators" -> "uuid" [];
	"pydantic.v1.validators" -> "warnings" [];
	"pydantic.v1.validators" -> "typing_extensions" [];
	"pydantic.v1.utils" -> "keyword" [];
	"pydantic.v1.utils" -> "warnings" [];
	"pydantic.v1.utils" -> "weakref" [];
	"pydantic.v1.utils" -> "collections" [];
	"pydantic.v1.utils" -> "copy" [];
	"pydantic.v1.utils" -> "itertools" [];
	"pydantic.v1.utils" -> "types" [];
	"pydantic.v1.utils" -> "typing" [];
	"pydantic.v1.utils" -> "typing_extensions" [];
	"pydantic.v1.utils" -> "inspect" [];
	"pydantic.v1.utils" -> "pathlib" [];
	"pydantic.v1.utils" -> "importlib" [];
	"pydantic.v1.datetime_parse" -> "re" [];
	"pydantic.v1.datetime_parse" -> "datetime" [];
	"pydantic.v1.datetime_parse" -> "typing" [];
	"pydantic.v1.tools" -> "json" [];
	"pydantic.v1.tools" -> "functools" [];
	"pydantic.v1.tools" -> "pathlib" [];
	"pydantic.v1.tools" -> "typing" [];
	"pydantic.v1.parse" -> "json" [];
	"pydantic.v1.parse" -> "pickle" [];
	"pydantic.v1.parse" -> "enum" [];
	"pydantic.v1.parse" -> "pathlib" [];
	"pydantic.v1.parse" -> "typing" [];
	"pydantic.v1.networks" -> "re" [];
	"pydantic.v1.networks" -> "ipaddress" [];
	"pydantic.v1.networks" -> "typing" [];
	"pydantic.v1.networks" -> "email_validator" [];
	"pydantic.v1.networks" -> "typing_extensions" [];
	"pydantic.v1.main" -> "warnings" [];
	"pydantic.v1.main" -> "abc" [];
	"pydantic.v1.main" -> "copy" [];
	"pydantic.v1.main" -> "enum" [];
	"pydantic.v1.main" -> "functools" [];
	"pydantic.v1.main" -> "pathlib" [];
	"pydantic.v1.main" -> "types" [];
	"pydantic.v1.main" -> "typing" [];
	"pydantic.v1.main" -> "typing_extensions" [];
	"pydantic.v1.main" -> "inspect" [];
	"pydantic.v1.schema" -> "re" [];
	"pydantic.v1.schema" -> "warnings" [];
	"pydantic.v1.schema" -> "collections" [];
	"pydantic.v1.schema" -> "dataclasses" [];
	"pydantic.v1.schema" -> "datetime" [];
	"pydantic.v1.schema" -> "decimal" [];
	"pydantic.v1.schema" -> "enum" [];
	"pydantic.v1.schema" -> "ipaddress" [];
	"pydantic.v1.schema" -> "pathlib" [];
	"pydantic.v1.schema" -> "typing" [];
	"pydantic.v1.schema" -> "uuid" [];
	"pydantic.v1.schema" -> "typing_extensions" [];
	"pydantic.v1.schema" -> "inspect" [];
	"pydantic.v1.json" -> "datetime" [];
	"pydantic.v1.json" -> "collections" [];
	"pydantic.v1.json" -> "decimal" [];
	"pydantic.v1.json" -> "enum" [];
	"pydantic.v1.json" -> "ipaddress" [];
	"pydantic.v1.json" -> "pathlib" [];
	"pydantic.v1.json" -> "re" [];
	"pydantic.v1.json" -> "types" [];
	"pydantic.v1.json" -> "typing" [];
	"pydantic.v1.json" -> "uuid" [];
	"pydantic.v1.json" -> "dataclasses" [];
	"pydantic.v1.color" -> "math" [];
	"pydantic.v1.color" -> "re" [];
	"pydantic.v1.color" -> "colorsys" [];
	"pydantic.v1.color" -> "typing" [];
	"pydantic.v1.fields" -> "copy" [];
	"pydantic.v1.fields" -> "re" [];
	"pydantic.v1.fields" -> "collections" [];
	"pydantic.v1.fields" -> "typing" [];
	"pydantic.v1.fields" -> "typing_extensions" [];
	"pydantic.v1.error_wrappers" -> "json" [];
	"pydantic.v1.error_wrappers" -> "typing" [];
	"pydantic.v1.error_wrappers" -> "typing_extensions" [];
	"pydantic.v1.env_settings" -> "os" [];
	"pydantic.v1.env_settings" -> "warnings" [];
	"pydantic.v1.env_settings" -> "pathlib" [];
	"pydantic.v1.env_settings" -> "typing" [];
	"pydantic.v1.env_settings" -> "dotenv" [];
	"pydantic.v1.decorator" -> "functools" [];
	"pydantic.v1.decorator" -> "typing" [];
	"pydantic.v1.decorator" -> "inspect" [];
	"pydantic.v1.config" -> "json" [];
	"pydantic.v1.config" -> "enum" [];
	"pydantic.v1.config" -> "typing" [];
	"pydantic.v1.config" -> "typing_extensions" [];
	"pydantic.v1.class_validators" -> "warnings" [];
	"pydantic.v1.class_validators" -> "collections" [];
	"pydantic.v1.class_validators" -> "functools" [];
	"pydantic.v1.class_validators" -> "itertools" [];
	"pydantic.v1.class_validators" -> "types" [];
	"pydantic.v1.class_validators" -> "typing" [];
	"pydantic.v1.class_validators" -> "inspect" [];
	"pydantic.v1.annotated_types" -> "sys" [];
	"pydantic.v1.annotated_types" -> "typing" [];
	"pydantic.v1.annotated_types" -> "typing_extensions" [];
	"pydantic.v1.dataclasses" -> "copy" [];
	"pydantic.v1.dataclasses" -> "dataclasses" [];
	"pydantic.v1.dataclasses" -> "sys" [];
	"pydantic.v1.dataclasses" -> "contextlib" [];
	"pydantic.v1.dataclasses" -> "functools" [];
	"pydantic.v1.dataclasses" -> "typing" [];
	"pydantic.v1.dataclasses" -> "typing_extensions" [];
	"pydantic.v1.errors" -> "decimal" [];
	"pydantic.v1.errors" -> "pathlib" [];
	"pydantic.v1.errors" -> "typing" [];
	"httpx" -> "sys" [];
	"httpx._main" -> "__future__" [];
	"httpx._main" -> "functools" [];
	"httpx._main" -> "json" [];
	"httpx._main" -> "sys" [];
	"httpx._main" -> "typing" [];
	"httpx._main" -> "click" [];
	"httpx._main" -> "httpcore" [];
	"rich.table" -> "dataclasses" [];
	"rich.table" -> "typing" [];
	"rich._timer" -> "time" [];
	"rich._timer" -> "contextlib" [];
	"rich._timer" -> "typing" [];
	"rich.highlighter" -> "re" [];
	"rich.highlighter" -> "abc" [];
	"rich.highlighter" -> "typing" [];
	"rich.highlighter" -> "json" [];
	"rich.text" -> "re" [];
	"rich.text" -> "functools" [];
	"rich.text" -> "math" [];
	"rich.text" -> "operator" [];
	"rich.text" -> "typing" [];
	"rich.ansi" -> "re" [];
	"rich.ansi" -> "sys" [];
	"rich.ansi" -> "contextlib" [];
	"rich.ansi" -> "typing" [];
	"rich.ansi" -> "io" [];
	"rich.ansi" -> "os" [];
	"rich.ansi" -> "pty" [];
	"pty" -> "select" [];
	"pty" -> "os" [];
	"pty" -> "sys" [];
	"pty" -> "tty" [];
	"pty" -> "fcntl" [];
	"rich.color" -> "re" [];
	"rich.color" -> "sys" [];
	"rich.color" -> "colorsys" [];
	"rich.color" -> "enum" [];
	"rich.color" -> "functools" [];
	"rich.color" -> "typing" [];
	"rich.terminal_theme" -> "typing" [];
	"rich.palette" -> "math" [];
	"rich.palette" -> "functools" [];
	"rich.palette" -> "typing" [];
	"rich.palette" -> "colorsys" [];
	"rich.repr" -> "inspect" [];
	"rich.repr" -> "functools" [];
	"rich.repr" -> "typing" [];
	"rich.color_triplet" -> "typing" [];
	"rich.emoji" -> "sys" [];
	"rich.emoji" -> "typing" [];
	"rich.emoji" -> "typing_extensions" [];
	"rich.columns" -> "collections" [];
	"rich.columns" -> "itertools" [];
	"rich.columns" -> "operator" [];
	"rich.columns" -> "typing" [];
	"rich.columns" -> "os" [];
	"rich.constrain" -> "typing" [];
	"rich._emoji_replace" -> "typing" [];
	"rich._emoji_replace" -> "re" [];
	"rich.control" -> "sys" [];
	"rich.control" -> "time" [];
	"rich.control" -> "typing" [];
	"rich.control" -> "typing_extensions" [];
	"rich.containers" -> "itertools" [];
	"rich.containers" -> "typing" [];
	"rich.cells" -> "__future__" [];
	"rich.cells" -> "functools" [];
	"rich.cells" -> "typing" [];
	"rich._wrap" -> "__future__" [];
	"rich._wrap" -> "re" [];
	"rich._wrap" -> "typing" [];
	"rich.style" -> "sys" [];
	"rich.style" -> "functools" [];
	"rich.style" -> "marshal" [];
	"rich.style" -> "random" [];
	"rich.style" -> "typing" [];
	"rich.segment" -> "enum" [];
	"rich.segment" -> "functools" [];
	"rich.segment" -> "itertools" [];
	"rich.segment" -> "logging" [];
	"rich.segment" -> "operator" [];
	"rich.segment" -> "typing" [];
	"rich.protocol" -> "typing" [];
	"rich.protocol" -> "inspect" [];
	"rich.padding" -> "typing" [];
	"rich.measure" -> "operator" [];
	"rich.measure" -> "typing" [];
	"rich.jupyter" -> "typing" [];
	"IPython.lib.display" -> "html" [];
	"IPython.lib.display" -> "os.path" [];
	"IPython.lib.display" -> "os" [];
	"IPython.lib.display" -> "typing" [];
	"IPython.lib.display" -> "mimetypes" [];
	"IPython.lib.display" -> "io" [];
	"IPython.lib.display" -> "wave" [];
	"IPython.lib.display" -> "numpy" [];
	"IPython.lib.display" -> "array" [];
	"IPython.lib.display" -> "sys" [];
	"IPython.lib.display" -> "base64" [];
	"IPython.lib.display" -> "pygments" [];
	"pygments.formatters" -> "re" [];
	"pygments.formatters" -> "sys" [];
	"pygments.formatters" -> "types" [];
	"pygments.formatters" -> "fnmatch" [];
	"pygments.formatters" -> "os.path" [];
	"pygments" -> "io" [];
	"pygments.lexers.wren" -> "re" [];
	"pygments.lexers.wowtoc" -> "re" [];
	"pygments.lexers.wgsl" -> "pygments" [];
	"pygments.lexers.webmisc" -> "re" [];
	"pygments.lexers.vip" -> "re" [];
	"pygments.lexers.urbi" -> "re" [];
	"pygments.lexers.unicon" -> "re" [];
	"pygments.lexers.ul4" -> "re" [];
	"pygments.lexers.typoscript" -> "re" [];
	"pygments.lexers.tnt" -> "re" [];
	"pygments.lexers.tls" -> "re" [];
	"pygments.lexers.textfmts" -> "re" [];
	"pygments.lexers.textedit" -> "re" [];
	"pygments.lexers.textedit" -> "bisect" [];
	"pygments.lexers.teraterm" -> "re" [];
	"pygments.lexers.templates" -> "re" [];
	"pygments.lexers.supercollider" -> "re" [];
	"pygments.lexers.stata" -> "re" [];
	"pygments.lexers.sql" -> "collections" [];
	"pygments.lexers.sql" -> "re" [];
	"pygments.lexers.special" -> "ast" [];
	"pygments.lexers.special" -> "gzip" [];
	"pygments.lexers.special" -> "bz2" [];
	"pygments.lexers.shell" -> "re" [];
	"pygments.lexers.scripting" -> "re" [];
	"pygments.lexers.scdoc" -> "re" [];
	"pygments.lexers.sas" -> "re" [];
	"pygments.lexers.ruby" -> "re" [];
	"pygments.lexers.robotframework" -> "re" [];
	"pygments.lexers.resource" -> "re" [];
	"pygments.lexers.rebol" -> "re" [];
	"pygments.lexers.rdf" -> "re" [];
	"pygments.lexers.r" -> "re" [];
	"pygments.lexers.qlik" -> "re" [];
	"pygments.lexers.python" -> "keyword" [];
	"pygments.lexers.python" -> "pygments" [];
	"pygments.lexers.prolog" -> "re" [];
	"pygments.lexers.php" -> "re" [];
	"pygments.lexers.phix" -> "re" [];
	"pygments.lexers.perl" -> "re" [];
	"pygments.lexers.pascal" -> "re" [];
	"pygments.scanner" -> "re" [];
	"pygments.lexers.parsers" -> "re" [];
	"pygments.lexers.parasail" -> "re" [];
	"pygments.lexers.objective" -> "re" [];
	"pygments.lexers.oberon" -> "re" [];
	"pygments.lexers.nix" -> "re" [];
	"pygments.lexers.nimrod" -> "re" [];
	"pygments.lexers.ncl" -> "re" [];
	"pygments.lexers.mojo" -> "keyword" [];
	"pygments.lexers.mojo" -> "pygments" [];
	"pygments.lexers.modula2" -> "re" [];
	"pygments.lexers.modeling" -> "re" [];
	"pygments.lexers.ml" -> "re" [];
	"pygments.lexers.mime" -> "re" [];
	"pygments.lexers.maxima" -> "re" [];
	"pygments.lexers.matlab" -> "re" [];
	"pygments.lexers.markup" -> "re" [];
	"pygments.lexers.make" -> "re" [];
	"pygments.lexers.lisp" -> "re" [];
	"pygments.lexers.lilypond" -> "re" [];
	"pygments.lexers.lean" -> "re" [];
	"pygments.lexers.ldap" -> "re" [];
	"pygments.lexers.jvm" -> "re" [];
	"pygments.lexers.jvm" -> "pygments" [];
	"pygments.lexers.jsx" -> "re" [];
	"pygments.lexers.javascript" -> "re" [];
	"pygments.lexers.int_fiction" -> "re" [];
	"pygments.lexers.installers" -> "re" [];
	"pygments.lexers.inferno" -> "re" [];
	"pygments.lexers.igor" -> "re" [];
	"pygments.lexers.idl" -> "re" [];
	"pygments.lexers.html" -> "re" [];
	"pygments.lexers.hdl" -> "re" [];
	"pygments.lexers.haxe" -> "re" [];
	"pygments.lexers.haskell" -> "re" [];
	"pygments.lexers.haskell" -> "pygments" [];
	"pygments.lexers.gsql" -> "re" [];
	"pygments.lexers.graph" -> "re" [];
	"pygments.lexers.gdscript" -> "re" [];
	"pygments.lexers.futhark" -> "pygments" [];
	"pygments.lexers.foxpro" -> "re" [];
	"pygments.lexers.fortran" -> "re" [];
	"pygments.lexers.forth" -> "re" [];
	"pygments.lexers.fantom" -> "string" [];
	"pygments.lexers.ezhil" -> "re" [];
	"pygments.lexers.erlang" -> "re" [];
	"pygments.lexers.ecl" -> "re" [];
	"pygments.lexers.dylan" -> "re" [];
	"pygments.lexers.dsls" -> "re" [];
	"pygments.lexers.dotnet" -> "re" [];
	"pygments.lexers.dotnet" -> "pygments" [];
	"pygments.lexers.dns" -> "re" [];
	"pygments.lexers.diff" -> "re" [];
	"pygments.lexers.dalvik" -> "re" [];
	"pygments.lexers.css" -> "re" [];
	"pygments.lexers.css" -> "copy" [];
	"pygments.lexers.csound" -> "re" [];
	"pygments.lexers.crystal" -> "re" [];
	"pygments.lexers.configs" -> "re" [];
	"pygments.lexers.comal" -> "re" [];
	"pygments.lexers.codeql" -> "re" [];
	"pygments.lexers.carbon" -> "re" [];
	"pygments.lexers.c_like" -> "re" [];
	"pygments.lexers.c_cpp" -> "re" [];
	"pygments.lexers.business" -> "re" [];
	"pygments.lexers.blueprint" -> "re" [];
	"pygments.lexers.bibtex" -> "re" [];
	"pygments.lexers.basic" -> "re" [];
	"pygments.lexers.asn1" -> "re" [];
	"pygments.lexers.asm" -> "re" [];
	"pygments.lexers.asc" -> "re" [];
	"pygments.lexers.apdlexer" -> "re" [];
	"pygments.lexers.amdgpu" -> "re" [];
	"pygments.lexers.ambient" -> "re" [];
	"pygments.lexers.algebra" -> "re" [];
	"pygments.lexers.ada" -> "re" [];
	"pygments.lexers.actionscript" -> "re" [];
	"pygments.lexers._sourcemod_builtins" -> "re" [];
	"pygments.lexers._scilab_builtins" -> "subprocess" [];
	"pygments.lexers._postgres_builtins" -> "re" [];
	"pygments.lexers._php_builtins" -> "glob" [];
	"pygments.lexers._php_builtins" -> "os" [];
	"pygments.lexers._php_builtins" -> "pprint" [];
	"pygments.lexers._php_builtins" -> "re" [];
	"pygments.lexers._php_builtins" -> "shutil" [];
	"pygments.lexers._php_builtins" -> "tarfile" [];
	"pygments.lexers._mysql_builtins" -> "re" [];
	"pygments.lexers._lua_builtins" -> "re" [];
	"pygments.lexers._lua_builtins" -> "pprint" [];
	"pygments.lexers._cocoa_builtins" -> "os" [];
	"pygments.lexers._cocoa_builtins" -> "re" [];
	"pygments.formatters.rtf" -> "collections" [];
	"pygments.formatters.other" -> "gzip" [];
	"pygments.formatters.other" -> "bz2" [];
	"pygments.formatters.latex" -> "io" [];
	"pygments.formatters.img" -> "os" [];
	"pygments.formatters.img" -> "sys" [];
	"pygments.formatters.img" -> "subprocess" [];
	"pygments.formatters.img" -> "PIL" [];
	"pygments.formatters.img" -> "_winreg" [];
	"pygments.formatters.img" -> "winreg" [];
	"PIL.ImageFont" -> "__future__" [];
	"PIL.ImageFont" -> "base64" [];
	"PIL.ImageFont" -> "os" [];
	"PIL.ImageFont" -> "sys" [];
	"PIL.ImageFont" -> "warnings" [];
	"PIL.ImageFont" -> "enum" [];
	"PIL.ImageFont" -> "io" [];
	"PIL.ImageFont" -> "types" [];
	"PIL.ImageFont" -> "typing" [];
	"PIL._imagingft" -> "typing" [];
	"PIL._imaging" -> "typing" [];
	"PIL.ImageFile" -> "__future__" [];
	"PIL.ImageFile" -> "abc" [];
	"PIL.ImageFile" -> "io" [];
	"PIL.ImageFile" -> "itertools" [];
	"PIL.ImageFile" -> "logging" [];
	"PIL.ImageFile" -> "os" [];
	"PIL.ImageFile" -> "struct" [];
	"PIL.ImageFile" -> "typing" [];
	"PIL.ImageFile" -> "mmap" [];
	"PIL.TiffImagePlugin" -> "__future__" [];
	"PIL.TiffImagePlugin" -> "io" [];
	"PIL.TiffImagePlugin" -> "itertools" [];
	"PIL.TiffImagePlugin" -> "logging" [];
	"PIL.TiffImagePlugin" -> "math" [];
	"PIL.TiffImagePlugin" -> "os" [];
	"PIL.TiffImagePlugin" -> "struct" [];
	"PIL.TiffImagePlugin" -> "warnings" [];
	"PIL.TiffImagePlugin" -> "fractions" [];
	"PIL.TiffImagePlugin" -> "numbers" [];
	"PIL.TiffImagePlugin" -> "typing" [];
	"PIL._binary" -> "__future__" [];
	"PIL._binary" -> "struct" [];
	"PIL.TiffTags" -> "__future__" [];
	"PIL.TiffTags" -> "typing" [];
	"PIL.ImagePalette" -> "__future__" [];
	"PIL.ImagePalette" -> "array" [];
	"PIL.ImagePalette" -> "typing" [];
	"PIL.ImagePalette" -> "random" [];
	"PIL.PaletteFile" -> "__future__" [];
	"PIL.PaletteFile" -> "typing" [];
	"PIL.ImageColor" -> "__future__" [];
	"PIL.ImageColor" -> "re" [];
	"PIL.ImageColor" -> "functools" [];
	"PIL.ImageColor" -> "colorsys" [];
	"PIL.GimpPaletteFile" -> "__future__" [];
	"PIL.GimpPaletteFile" -> "re" [];
	"PIL.GimpPaletteFile" -> "io" [];
	"PIL.GimpPaletteFile" -> "typing" [];
	"PIL.GimpGradientFile" -> "__future__" [];
	"PIL.GimpGradientFile" -> "math" [];
	"PIL.GimpGradientFile" -> "typing" [];
	"PIL.ImageOps" -> "__future__" [];
	"PIL.ImageOps" -> "functools" [];
	"PIL.ImageOps" -> "operator" [];
	"PIL.ImageOps" -> "re" [];
	"PIL.ImageOps" -> "typing" [];
	"PIL._deprecate" -> "__future__" [];
	"PIL._deprecate" -> "warnings" [];
	"PIL.ExifTags" -> "__future__" [];
	"PIL.ExifTags" -> "enum" [];
	"PIL._util" -> "__future__" [];
	"PIL._util" -> "os" [];
	"PIL._util" -> "typing" [];
	"PIL._typing" -> "__future__" [];
	"PIL._typing" -> "os" [];
	"PIL._typing" -> "sys" [];
	"PIL._typing" -> "typing" [];
	"PIL._typing" -> "numbers" [];
	"PIL._typing" -> "types" [];
	"PIL._typing" -> "typing_extensions" [];
	"numpy._pytesttester" -> "sys" [];
	"numpy._pytesttester" -> "os" [];
	"numpy._pytesttester" -> "warnings" [];
	"numpy.testing" -> "unittest" [];
	"numpy.testing.overrides" -> "numpy" [];
	"numpy.lib.recfunctions" -> "itertools" [];
	"numpy.lib.recfunctions" -> "numpy" [];
	"numpy.lib._iotools" -> "numpy" [];
	"numpy._utils" -> "functools" [];
	"numpy._utils" -> "warnings" [];
	"numpy._core.numeric" -> "functools" [];
	"numpy._core.numeric" -> "itertools" [];
	"numpy._core.numeric" -> "operator" [];
	"numpy._core.numeric" -> "sys" [];
	"numpy._core.numeric" -> "warnings" [];
	"numpy._core.numeric" -> "numbers" [];
	"numpy._core.numeric" -> "builtins" [];
	"numpy._core.numeric" -> "math" [];
	"numpy._core.numeric" -> "numpy" [];
	"numpy._core.arrayprint" -> "functools" [];
	"numpy._core.arrayprint" -> "numbers" [];
	"numpy._core.arrayprint" -> "sys" [];
	"numpy._core.arrayprint" -> "_thread" [];
	"numpy._core.arrayprint" -> "_dummy_thread" [];
	"numpy._core.arrayprint" -> "numpy" [];
	"numpy._core.arrayprint" -> "operator" [];
	"numpy._core.arrayprint" -> "warnings" [];
	"numpy._core.arrayprint" -> "contextlib" [];
	"numpy._core.fromnumeric" -> "functools" [];
	"numpy._core.fromnumeric" -> "types" [];
	"numpy._core.fromnumeric" -> "warnings" [];
	"numpy._core.fromnumeric" -> "numpy" [];
	"numpy._core._methods" -> "os" [];
	"numpy._core._methods" -> "pickle" [];
	"numpy._core._methods" -> "warnings" [];
	"numpy._core._methods" -> "contextlib" [];
	"numpy.lib._stride_tricks_impl" -> "numpy" [];
	"numpy._globals" -> "enum" [];
	"numpy._core._ufunc_config" -> "contextlib" [];
	"numpy._core._ufunc_config" -> "contextvars" [];
	"numpy._core._ufunc_config" -> "functools" [];
	"numpy._core.shape_base" -> "functools" [];
	"numpy._core.shape_base" -> "itertools" [];
	"numpy._core.shape_base" -> "operator" [];
	"numpy._core.shape_base" -> "warnings" [];
	"numpy._core.numerictypes" -> "numbers" [];
	"numpy._core.numerictypes" -> "warnings" [];
	"numpy._core.numerictypes" -> "builtins" [];
	"numpy._core._dtype" -> "numpy" [];
	"numpy._core.multiarray" -> "functools" [];
	"numpy._core" -> "os" [];
	"numpy._core" -> "sys" [];
	"numpy._core" -> "warnings" [];
	"numpy._core" -> "copyreg" [];
	"numpy._core._internal" -> "ast" [];
	"numpy._core._internal" -> "re" [];
	"numpy._core._internal" -> "sys" [];
	"numpy._core._internal" -> "warnings" [];
	"numpy._core._internal" -> "numpy" [];
	"numpy._core._internal" -> "ctypes" [];
	"numpy._core._dtype_ctypes" -> "numpy" [];
	"numpy._core._dtype_ctypes" -> "ctypes" [];
	"numpy._core._dtype_ctypes" -> "_ctypes" [];
	"numpy._core._add_newdocs_scalars" -> "sys" [];
	"numpy._core._add_newdocs_scalars" -> "os" [];
	"numpy._core.einsumfunc" -> "itertools" [];
	"numpy._core.einsumfunc" -> "operator" [];
	"numpy._core._machar" -> "math" [];
	"numpy._core.function_base" -> "functools" [];
	"numpy._core.function_base" -> "warnings" [];
	"numpy._core.function_base" -> "operator" [];
	"numpy._core.function_base" -> "types" [];
	"numpy._core.function_base" -> "numpy" [];
	"numpy._core.memmap" -> "contextlib" [];
	"numpy._core.memmap" -> "operator" [];
	"numpy._core.memmap" -> "numpy" [];
	"numpy._core.memmap" -> "mmap" [];
	"numpy._core.memmap" -> "os.path" [];
	"numpy._core.getlimits" -> "warnings" [];
	"numpy._core.records" -> "os" [];
	"numpy._core.records" -> "warnings" [];
	"numpy._core.records" -> "collections" [];
	"numpy._core.records" -> "contextlib" [];
	"numpy.ma.mrecords" -> "warnings" [];
	"numpy.ma.mrecords" -> "numpy" [];
	"numpy.ma.extras" -> "itertools" [];
	"numpy.ma.extras" -> "warnings" [];
	"numpy.ma.extras" -> "numpy" [];
	"numpy.lib._index_tricks_impl" -> "functools" [];
	"numpy.lib._index_tricks_impl" -> "sys" [];
	"numpy.lib._index_tricks_impl" -> "math" [];
	"numpy.lib._index_tricks_impl" -> "warnings" [];
	"numpy.lib._index_tricks_impl" -> "numpy" [];
	"numpy.matrixlib.defmatrix" -> "sys" [];
	"numpy.matrixlib.defmatrix" -> "warnings" [];
	"numpy.matrixlib.defmatrix" -> "ast" [];
	"numpy.linalg.linalg" -> "warnings" [];
	"numpy.linalg._linalg" -> "functools" [];
	"numpy.linalg._linalg" -> "operator" [];
	"numpy.linalg._linalg" -> "warnings" [];
	"numpy.linalg._linalg" -> "typing" [];
	"numpy.linalg._linalg" -> "numpy" [];
	"numpy.lib._twodim_base_impl" -> "functools" [];
	"numpy.lib._twodim_base_impl" -> "operator" [];
	"numpy.lib._twodim_base_impl" -> "numpy" [];
	"numpy.lib._function_base_impl" -> "builtins" [];
	"numpy.lib._function_base_impl" -> "functools" [];
	"numpy.lib._function_base_impl" -> "re" [];
	"numpy.lib._function_base_impl" -> "sys" [];
	"numpy.lib._function_base_impl" -> "warnings" [];
	"numpy.lib._function_base_impl" -> "numpy" [];
	"numpy.lib._histograms_impl" -> "contextlib" [];
	"numpy.lib._histograms_impl" -> "functools" [];
	"numpy.lib._histograms_impl" -> "operator" [];
	"numpy.lib._histograms_impl" -> "warnings" [];
	"numpy.lib._histograms_impl" -> "numpy" [];
	"numpy.ma.core" -> "builtins" [];
	"numpy.ma.core" -> "inspect" [];
	"numpy.ma.core" -> "operator" [];
	"numpy.ma.core" -> "warnings" [];
	"numpy.ma.core" -> "textwrap" [];
	"numpy.ma.core" -> "re" [];
	"numpy.ma.core" -> "functools" [];
	"numpy.ma.core" -> "typing" [];
	"numpy.ma.core" -> "numpy" [];
	"numpy.ma.core" -> "copy" [];
	"numpy._utils._inspect" -> "types" [];
	"numpy.lib" -> "math" [];
	"numpy.lib" -> "warnings" [];
	"numpy.lib._version" -> "re" [];
	"numpy.lib._arraypad_impl" -> "numpy" [];
	"numpy.lib._arrayterator_impl" -> "operator" [];
	"numpy.lib._arrayterator_impl" -> "functools" [];
	"numpy.lib._npyio_impl" -> "os" [];
	"numpy.lib._npyio_impl" -> "re" [];
	"numpy.lib._npyio_impl" -> "functools" [];
	"numpy.lib._npyio_impl" -> "itertools" [];
	"numpy.lib._npyio_impl" -> "warnings" [];
	"numpy.lib._npyio_impl" -> "weakref" [];
	"numpy.lib._npyio_impl" -> "contextlib" [];
	"numpy.lib._npyio_impl" -> "operator" [];
	"numpy.lib._npyio_impl" -> "pickle" [];
	"numpy.lib._npyio_impl" -> "numpy" [];
	"numpy.lib._npyio_impl" -> "zipfile" [];
	"numpy.lib._datasource" -> "os" [];
	"numpy.lib._datasource" -> "bz2" [];
	"numpy.lib._datasource" -> "gzip" [];
	"numpy.lib._datasource" -> "lzma" [];
	"numpy.lib._datasource" -> "tempfile" [];
	"numpy.lib._datasource" -> "shutil" [];
	"numpy.lib._polynomial_impl" -> "functools" [];
	"numpy.lib._polynomial_impl" -> "re" [];
	"numpy.lib._polynomial_impl" -> "warnings" [];
	"numpy.lib._arraysetops_impl" -> "functools" [];
	"numpy.lib._arraysetops_impl" -> "warnings" [];
	"numpy.lib._arraysetops_impl" -> "typing" [];
	"numpy.lib._arraysetops_impl" -> "numpy" [];
	"numpy.lib._utils_impl" -> "os" [];
	"numpy.lib._utils_impl" -> "sys" [];
	"numpy.lib._utils_impl" -> "textwrap" [];
	"numpy.lib._utils_impl" -> "types" [];
	"numpy.lib._utils_impl" -> "re" [];
	"numpy.lib._utils_impl" -> "warnings" [];
	"numpy.lib._utils_impl" -> "functools" [];
	"numpy.lib._utils_impl" -> "platform" [];
	"numpy.lib._utils_impl" -> "numpy" [];
	"numpy.lib._utils_impl" -> "pprint" [];
	"numpy.lib._utils_impl" -> "threadpoolctl" [];
	"numpy.lib._utils_impl" -> "pydoc" [];
	"numpy.lib._utils_impl" -> "inspect" [];
	"numpy.lib._utils_impl" -> "ast" [];
	"numpy.lib._ufunclike_impl" -> "warnings" [];
	"numpy.lib._ufunclike_impl" -> "functools" [];
	"numpy.lib._shape_base_impl" -> "functools" [];
	"numpy.lib._shape_base_impl" -> "warnings" [];
	"numpy.lib._nanfunctions_impl" -> "functools" [];
	"numpy.lib._nanfunctions_impl" -> "warnings" [];
	"numpy.lib._nanfunctions_impl" -> "numpy" [];
	"numpy.lib._type_check_impl" -> "functools" [];
	"numpy.lib.format" -> "io" [];
	"numpy.lib.format" -> "os" [];
	"numpy.lib.format" -> "pickle" [];
	"numpy.lib.format" -> "warnings" [];
	"numpy.lib.format" -> "numpy" [];
	"numpy.lib.format" -> "struct" [];
	"numpy.lib.format" -> "tokenize" [];
	"numpy.lib.format" -> "ast" [];
	"numpy.lib.introspect" -> "re" [];
	"numpy._core.umath" -> "numpy" [];
	"numpy._core.overrides" -> "collections" [];
	"numpy._core.overrides" -> "functools" [];
	"numpy._core.overrides" -> "os" [];
	"numpy.testing._private.extbuild" -> "os" [];
	"numpy.testing._private.extbuild" -> "pathlib" [];
	"numpy.testing._private.extbuild" -> "subprocess" [];
	"numpy.testing._private.extbuild" -> "sys" [];
	"numpy.testing._private.extbuild" -> "sysconfig" [];
	"numpy.testing._private.extbuild" -> "textwrap" [];
	"numpy.testing._private.utils" -> "os" [];
	"numpy.testing._private.utils" -> "sys" [];
	"numpy.testing._private.utils" -> "platform" [];
	"numpy.testing._private.utils" -> "re" [];
	"numpy.testing._private.utils" -> "gc" [];
	"numpy.testing._private.utils" -> "operator" [];
	"numpy.testing._private.utils" -> "warnings" [];
	"numpy.testing._private.utils" -> "functools" [];
	"numpy.testing._private.utils" -> "shutil" [];
	"numpy.testing._private.utils" -> "contextlib" [];
	"numpy.testing._private.utils" -> "tempfile" [];
	"numpy.testing._private.utils" -> "pprint" [];
	"numpy.testing._private.utils" -> "sysconfig" [];
	"numpy.testing._private.utils" -> "numpy" [];
	"numpy.testing._private.utils" -> "io" [];
	"numpy.testing._private.utils" -> "win32pdh" [];
	"numpy.testing._private.utils" -> "time" [];
	"numpy.testing._private.utils" -> "traceback" [];
	"numpy.testing._private.utils" -> "difflib" [];
	"numpy.testing._private.utils" -> "doctest" [];
	"numpy.testing._private.utils" -> "subprocess" [];
	"numpy.testing._private.utils" -> "unittest" [];
	"numpy.testing._private.utils" -> "inspect" [];
	"numpy.testing._private.utils" -> "psutil" [];
	"psutil" -> "collections" [];
	"psutil" -> "contextlib" [];
	"psutil" -> "datetime" [];
	"psutil" -> "functools" [];
	"psutil" -> "os" [];
	"psutil" -> "signal" [];
	"psutil" -> "socket" [];
	"psutil" -> "subprocess" [];
	"psutil" -> "sys" [];
	"psutil" -> "threading" [];
	"psutil" -> "time" [];
	"psutil" -> "pwd" [];
	"psutil._psosx" -> "errno" [];
	"psutil._psosx" -> "functools" [];
	"psutil._psosx" -> "os" [];
	"psutil._psosx" -> "collections" [];
	"psutil._psposix" -> "enum" [];
	"psutil._psposix" -> "glob" [];
	"psutil._psposix" -> "os" [];
	"psutil._psposix" -> "signal" [];
	"psutil._psposix" -> "time" [];
	"psutil._common" -> "collections" [];
	"psutil._common" -> "enum" [];
	"psutil._common" -> "functools" [];
	"psutil._common" -> "os" [];
	"psutil._common" -> "socket" [];
	"psutil._common" -> "stat" [];
	"psutil._common" -> "sys" [];
	"psutil._common" -> "threading" [];
	"psutil._common" -> "warnings" [];
	"psutil._common" -> "ipaddress" [];
	"psutil._common" -> "curses" [];
	"psutil._common" -> "ctypes" [];
	"psutil._common" -> "inspect" [];
	"numpy._typing._add_docstring" -> "re" [];
	"numpy._typing._add_docstring" -> "textwrap" [];
	"numpy._typing._array_like" -> "__future__" [];
	"numpy._typing._array_like" -> "sys" [];
	"numpy._typing._array_like" -> "typing" [];
	"numpy._typing._array_like" -> "numpy" [];
	"numpy._typing._nested_sequence" -> "__future__" [];
	"numpy._typing._nested_sequence" -> "typing" [];
	"numpy._typing" -> "__future__" [];
	"numpy._typing" -> "typing" [];
	"numpy._typing._dtype_like" -> "typing" [];
	"numpy._typing._dtype_like" -> "numpy" [];
	"numpy._typing._shape" -> "typing" [];
	"numpy._typing._scalars" -> "typing" [];
	"numpy._typing._scalars" -> "numpy" [];
	"numpy._typing._char_codes" -> "typing" [];
	"numpy._typing._nbit" -> "typing" [];
	"PIL.features" -> "__future__" [];
	"PIL.features" -> "collections" [];
	"PIL.features" -> "os" [];
	"PIL.features" -> "sys" [];
	"PIL.features" -> "warnings" [];
	"PIL.features" -> "typing" [];
	"PIL.ImageDraw" -> "__future__" [];
	"PIL.ImageDraw" -> "math" [];
	"PIL.ImageDraw" -> "struct" [];
	"PIL.ImageDraw" -> "types" [];
	"PIL.ImageDraw" -> "typing" [];
	"PIL.ImageDraw2" -> "__future__" [];
	"PIL.ImageDraw2" -> "typing" [];
	"PIL.ImagePath" -> "__future__" [];
	"pygments.formatters.html" -> "functools" [];
	"pygments.formatters.html" -> "os" [];
	"pygments.formatters.html" -> "sys" [];
	"pygments.formatters.html" -> "os.path" [];
	"pygments.formatters.html" -> "io" [];
	"pygments.formatters.html" -> "ctags" [];
	"pygments.formatters.groff" -> "math" [];
	"pygments.unistring" -> "unicodedata" [];
	"pygments.formatter" -> "codecs" [];
	"pygments.lexer" -> "re" [];
	"pygments.lexer" -> "sys" [];
	"pygments.lexer" -> "time" [];
	"pygments.lexer" -> "chardet" [];
	"pygments.regexopt" -> "re" [];
	"pygments.regexopt" -> "os.path" [];
	"pygments.regexopt" -> "itertools" [];
	"pygments.regexopt" -> "operator" [];
	"pygments.filters" -> "re" [];
	"numpy" -> "os" [];
	"numpy" -> "sys" [];
	"numpy" -> "warnings" [];
	"numpy" -> "pathlib" [];
	"numpy._core.strings" -> "sys" [];
	"numpy._core.strings" -> "numpy" [];
	"numpy.core._utils" -> "warnings" [];
	"numpy._core.defchararray" -> "functools" [];
	"numpy.f2py" -> "sys" [];
	"numpy.f2py" -> "subprocess" [];
	"numpy.f2py" -> "os" [];
	"numpy.f2py" -> "warnings" [];
	"numpy.f2py.diagnose" -> "os" [];
	"numpy.f2py.diagnose" -> "sys" [];
	"numpy.f2py.diagnose" -> "tempfile" [];
	"numpy.f2py.diagnose" -> "numpy" [];
	"numpy.f2py.diagnose" -> "numpy_distutils" [];
	"numpy.f2py.diagnose" -> "'numpy_distutils.command'" [];
	"numpy.f2py.diagnose" -> "'numpy_distutils.fcompiler'" [];
	"numpy.f2py.diagnose" -> "'numpy_distutils.cpuinfo'" [];
	"numpy.f2py.f2py2e" -> "sys" [];
	"numpy.f2py.f2py2e" -> "os" [];
	"numpy.f2py.f2py2e" -> "pprint" [];
	"numpy.f2py.f2py2e" -> "re" [];
	"numpy.f2py.f2py2e" -> "pathlib" [];
	"numpy.f2py.f2py2e" -> "itertools" [];
	"numpy.f2py.f2py2e" -> "argparse" [];
	"numpy.f2py.f2py2e" -> "copy" [];
	"numpy.f2py.f2py2e" -> "tempfile" [];
	"numpy.f2py._backends._distutils" -> "os" [];
	"numpy.f2py._backends._distutils" -> "sys" [];
	"numpy.f2py._backends._distutils" -> "shutil" [];
	"numpy.f2py._backends._distutils" -> "warnings" [];
	"numpy.f2py._backends._backend" -> "__future__" [];
	"numpy.f2py._backends._backend" -> "abc" [];
	"numpy.f2py._backends._meson" -> "__future__" [];
	"numpy.f2py._backends._meson" -> "os" [];
	"numpy.f2py._backends._meson" -> "errno" [];
	"numpy.f2py._backends._meson" -> "shutil" [];
	"numpy.f2py._backends._meson" -> "subprocess" [];
	"numpy.f2py._backends._meson" -> "sys" [];
	"numpy.f2py._backends._meson" -> "re" [];
	"numpy.f2py._backends._meson" -> "pathlib" [];
	"numpy.f2py._backends._meson" -> "string" [];
	"numpy.f2py._backends._meson" -> "itertools" [];
	"numpy.f2py._backends._meson" -> "warnings" [];
	"numpy.f2py.auxfuncs" -> "pprint" [];
	"numpy.f2py.auxfuncs" -> "sys" [];
	"numpy.f2py.auxfuncs" -> "re" [];
	"numpy.f2py.auxfuncs" -> "types" [];
	"numpy.f2py.auxfuncs" -> "functools" [];
	"numpy.f2py.auxfuncs" -> "copy" [];
	"numpy.f2py.f90mod_rules" -> "numpy" [];
	"numpy.f2py.rules" -> "os" [];
	"numpy.f2py.rules" -> "sys" [];
	"numpy.f2py.rules" -> "time" [];
	"numpy.f2py.rules" -> "copy" [];
	"numpy.f2py.rules" -> "pathlib" [];
	"numpy.f2py.func2subr" -> "copy" [];
	"numpy.f2py.crackfortran" -> "sys" [];
	"numpy.f2py.crackfortran" -> "string" [];
	"numpy.f2py.crackfortran" -> "fileinput" [];
	"numpy.f2py.crackfortran" -> "re" [];
	"numpy.f2py.crackfortran" -> "os" [];
	"numpy.f2py.crackfortran" -> "copy" [];
	"numpy.f2py.crackfortran" -> "platform" [];
	"numpy.f2py.crackfortran" -> "codecs" [];
	"numpy.f2py.crackfortran" -> "pathlib" [];
	"numpy.f2py.crackfortran" -> "charset_normalizer" [];
	"fileinput" -> "sys" [];
	"fileinput" -> "os" [];
	"fileinput" -> "types" [];
	"fileinput" -> "warnings" [];
	"fileinput" -> "gzip" [];
	"fileinput" -> "bz2" [];
	"fileinput" -> "getopt" [];
	"numpy.f2py.symbolic" -> "re" [];
	"numpy.f2py.symbolic" -> "warnings" [];
	"numpy.f2py.symbolic" -> "enum" [];
	"numpy.f2py.symbolic" -> "math" [];
	"numpy.f2py.capi_maps" -> "copy" [];
	"numpy.f2py.capi_maps" -> "re" [];
	"numpy.f2py.capi_maps" -> "os" [];
	"numpy.f2py.cfuncs" -> "sys" [];
	"numpy.f2py.cfuncs" -> "copy" [];
	"numpy.matlib" -> "warnings" [];
	"numpy.ctypeslib" -> "os" [];
	"numpy.ctypeslib" -> "ctypes" [];
	"numpy.ctypeslib" -> "sys" [];
	"numpy.ctypeslib" -> "sysconfig" [];
	"numpy.polynomial._polybase" -> "os" [];
	"numpy.polynomial._polybase" -> "abc" [];
	"numpy.polynomial._polybase" -> "numbers" [];
	"numpy.polynomial._polybase" -> "typing" [];
	"numpy.polynomial._polybase" -> "numpy" [];
	"numpy.polynomial.laguerre" -> "numpy" [];
	"numpy.polynomial.hermite_e" -> "numpy" [];
	"numpy.polynomial.hermite" -> "numpy" [];
	"numpy.polynomial.legendre" -> "numpy" [];
	"numpy.polynomial.chebyshev" -> "numpy" [];
	"numpy.polynomial.polynomial" -> "numpy" [];
	"numpy.polynomial.polyutils" -> "operator" [];
	"numpy.polynomial.polyutils" -> "functools" [];
	"numpy.polynomial.polyutils" -> "warnings" [];
	"numpy.polynomial.polyutils" -> "numpy" [];
	"numpy.random.mtrand" -> "builtins" [];
	"numpy.random.mtrand" -> "typing" [];
	"numpy.random.mtrand" -> "numpy" [];
	"numpy.random._sfc64" -> "typing" [];
	"numpy.random._sfc64" -> "numpy" [];
	"numpy.random._philox" -> "typing" [];
	"numpy.random._philox" -> "numpy" [];
	"numpy.random._pcg64" -> "typing" [];
	"numpy.random._mt19937" -> "typing" [];
	"numpy.random._mt19937" -> "numpy" [];
	"numpy.random.bit_generator" -> "abc" [];
	"numpy.random.bit_generator" -> "threading" [];
	"numpy.random.bit_generator" -> "typing" [];
	"numpy.random.bit_generator" -> "numpy" [];
	"numpy.random._generator" -> "typing" [];
	"numpy.random._generator" -> "numpy" [];
	"numpy.random._pickle" -> "__future__" [];
	"numpy.fft.helper" -> "warnings" [];
	"numpy.fft._pocketfft" -> "functools" [];
	"numpy.fft._pocketfft" -> "warnings" [];
	"numpy.__config__" -> "enum" [];
	"numpy.__config__" -> "yaml" [];
	"numpy.__config__" -> "warnings" [];
	"numpy.__config__" -> "json" [];
	"yaml" -> "io" [];
	"yaml.resolver" -> "re" [];
	"yaml.representer" -> "datetime" [];
	"yaml.representer" -> "copyreg" [];
	"yaml.representer" -> "types" [];
	"yaml.representer" -> "base64" [];
	"yaml.representer" -> "collections" [];
	"yaml.constructor" -> "datetime" [];
	"yaml.constructor" -> "base64" [];
	"yaml.constructor" -> "binascii" [];
	"yaml.constructor" -> "re" [];
	"yaml.constructor" -> "sys" [];
	"yaml.constructor" -> "types" [];
	"yaml.reader" -> "codecs" [];
	"yaml.reader" -> "re" [];
	"wave" -> "chunk" [];
	"wave" -> "collections" [];
	"wave" -> "audioop" [];
	"wave" -> "builtins" [];
	"wave" -> "struct" [];
	"wave" -> "sys" [];
	"chunk" -> "struct" [];
	"IPython.core.display" -> "binascii" [];
	"IPython.core.display" -> "html" [];
	"IPython.core.display" -> "json" [];
	"IPython.core.display" -> "mimetypes" [];
	"IPython.core.display" -> "os" [];
	"IPython.core.display" -> "struct" [];
	"IPython.core.display" -> "warnings" [];
	"IPython.core.display" -> "copy" [];
	"IPython.core.display" -> "os.path" [];
	"IPython.core.display" -> "pathlib" [];
	"IPython.core.display" -> "gzip" [];
	"IPython.core.display" -> "io" [];
	"matplotlib_inline.backend_inline" -> "matplotlib" [];
	"matplotlib_inline.backend_inline" -> "'matplotlib.backends'" [];
	"matplotlib_inline.backend_inline" -> "'matplotlib._pylab_helpers'" [];
	"matplotlib_inline.backend_inline" -> "'matplotlib.figure'" [];
	"matplotlib_inline.config" -> "traitlets" [];
	"matplotlib_inline.config" -> "PIL" [];
	"traitlets.config.configurable" -> "__future__" [];
	"traitlets.config.configurable" -> "logging" [];
	"traitlets.config.configurable" -> "typing" [];
	"traitlets.config.configurable" -> "copy" [];
	"traitlets.config.configurable" -> "textwrap" [];
	"traitlets.config.configurable" -> "difflib" [];
	"traitlets.config.configurable" -> "traitlets" [];
	"traitlets.config" -> "__future__" [];
	"traitlets.config.application" -> "__future__" [];
	"traitlets.config.application" -> "functools" [];
	"traitlets.config.application" -> "json" [];
	"traitlets.config.application" -> "logging" [];
	"traitlets.config.application" -> "os" [];
	"traitlets.config.application" -> "pprint" [];
	"traitlets.config.application" -> "re" [];
	"traitlets.config.application" -> "sys" [];
	"traitlets.config.application" -> "typing" [];
	"traitlets.config.application" -> "collections" [];
	"traitlets.config.application" -> "contextlib" [];
	"traitlets.config.application" -> "copy" [];
	"traitlets.config.application" -> "textwrap" [];
	"traitlets.utils.nested_update" -> "__future__" [];
	"traitlets.utils.nested_update" -> "typing" [];
	"logging.config" -> "errno" [];
	"logging.config" -> "io" [];
	"logging.config" -> "re" [];
	"logging.config" -> "struct" [];
	"logging.config" -> "sys" [];
	"logging.config" -> "threading" [];
	"logging.config" -> "traceback" [];
	"logging.config" -> "socketserver" [];
	"logging.config" -> "configparser" [];
	"logging.config" -> "json" [];
	"logging.config" -> "select" [];
	"traitlets.config.argcomplete_config" -> "__future__" [];
	"traitlets.config.argcomplete_config" -> "argparse" [];
	"traitlets.config.argcomplete_config" -> "os" [];
	"traitlets.config.argcomplete_config" -> "typing" [];
	"traitlets.config.argcomplete_config" -> "argcomplete" [];
	"traitlets.log" -> "__future__" [];
	"traitlets.log" -> "logging" [];
	"traitlets.log" -> "typing" [];
	"traitlets.config.loader" -> "__future__" [];
	"traitlets.config.loader" -> "argparse" [];
	"traitlets.config.loader" -> "copy" [];
	"traitlets.config.loader" -> "functools" [];
	"traitlets.config.loader" -> "json" [];
	"traitlets.config.loader" -> "os" [];
	"traitlets.config.loader" -> "re" [];
	"traitlets.config.loader" -> "sys" [];
	"traitlets.config.loader" -> "typing" [];
	"traitlets.config.loader" -> "logging" [];
	"traitlets.config.loader" -> "argcomplete" [];
	"traitlets.utils.text" -> "__future__" [];
	"traitlets.utils.text" -> "re" [];
	"traitlets.utils.text" -> "textwrap" [];
	"traitlets.utils.text" -> "typing" [];
	"IPython.core.pylabtools" -> "io" [];
	"IPython.core.pylabtools" -> "binascii" [];
	"IPython.core.pylabtools" -> "functools" [];
	"IPython.core.pylabtools" -> "warnings" [];
	"IPython.utils.decorators" -> "typing" [];
	"IPython.utils.io" -> "atexit" [];
	"IPython.utils.io" -> "os" [];
	"IPython.utils.io" -> "sys" [];
	"IPython.utils.io" -> "tempfile" [];
	"IPython.utils.io" -> "pathlib" [];
	"IPython.utils.io" -> "warnings" [];
	"IPython.utils.capture" -> "sys" [];
	"IPython.utils.capture" -> "io" [];
	"IPython.core.displayhook" -> "builtins" [];
	"IPython.core.displayhook" -> "sys" [];
	"IPython.core.displayhook" -> "io" [];
	"IPython.core.displayhook" -> "tokenize" [];
	"IPython.core.displayhook" -> "traitlets" [];
	"IPython.core.displayhook" -> "warnings" [];
	"IPython.core.displayhook" -> "gc" [];
	"IPython.core.displaypub" -> "sys" [];
	"IPython.core.displaypub" -> "traitlets" [];
	"IPython.utils.generics" -> "functools" [];
	"IPython.utils.tokenutil" -> "collections" [];
	"IPython.utils.tokenutil" -> "io" [];
	"IPython.utils.tokenutil" -> "keyword" [];
	"IPython.utils.tokenutil" -> "tokenize" [];
	"IPython.utils.tokenutil" -> "typing" [];
	"IPython.utils.openpy" -> "io" [];
	"IPython.utils.openpy" -> "pathlib" [];
	"IPython.utils.openpy" -> "re" [];
	"IPython.utils.openpy" -> "tokenize" [];
	"IPython.utils.PyColorize" -> "keyword" [];
	"IPython.utils.PyColorize" -> "os" [];
	"IPython.utils.PyColorize" -> "sys" [];
	"IPython.utils.PyColorize" -> "token" [];
	"IPython.utils.PyColorize" -> "tokenize" [];
	"IPython.utils.PyColorize" -> "io" [];
	"IPython.utils.PyColorize" -> "warnings" [];
	"IPython.utils.colorable" -> "pygments" [];
	"IPython.utils.colorable" -> "traitlets" [];
	"IPython.utils.coloransi" -> "os" [];
	"IPython.utils.docs" -> "os" [];
	"IPython.core.interactiveshell" -> "abc" [];
	"IPython.core.interactiveshell" -> "ast" [];
	"IPython.core.interactiveshell" -> "atexit" [];
	"IPython.core.interactiveshell" -> "bdb" [];
	"IPython.core.interactiveshell" -> "builtins" [];
	"IPython.core.interactiveshell" -> "functools" [];
	"IPython.core.interactiveshell" -> "inspect" [];
	"IPython.core.interactiveshell" -> "os" [];
	"IPython.core.interactiveshell" -> "re" [];
	"IPython.core.interactiveshell" -> "runpy" [];
	"IPython.core.interactiveshell" -> "shutil" [];
	"IPython.core.interactiveshell" -> "subprocess" [];
	"IPython.core.interactiveshell" -> "sys" [];
	"IPython.core.interactiveshell" -> "tempfile" [];
	"IPython.core.interactiveshell" -> "traceback" [];
	"IPython.core.interactiveshell" -> "types" [];
	"IPython.core.interactiveshell" -> "warnings" [];
	"IPython.core.interactiveshell" -> "io" [];
	"IPython.core.interactiveshell" -> "logging" [];
	"IPython.core.interactiveshell" -> "pathlib" [];
	"IPython.core.interactiveshell" -> "typing" [];
	"IPython.core.interactiveshell" -> "pickleshare" [];
	"IPython.core.interactiveshell" -> "traitlets" [];
	"IPython.core.interactiveshell" -> "docrepr" [];
	"IPython.core.interactiveshell" -> "exceptiongroup" [];
	"IPython.core.interactiveshell" -> "site" [];
	"IPython.core.interactiveshell" -> "nbformat" [];
	"nbformat" -> "__future__" [];
	"nbformat" -> "pathlib" [];
	"nbformat.notebooknode" -> "__future__" [];
	"nbformat._struct" -> "__future__" [];
	"nbformat._struct" -> "typing" [];
	"nbformat.converter" -> "__future__" [];
	"nbformat.reader" -> "__future__" [];
	"nbformat.reader" -> "json" [];
	"nbformat.sentinel" -> "__future__" [];
	"nbformat._version" -> "__future__" [];
	"nbformat._version" -> "re" [];
	"nbformat.v4" -> "__future__" [];
	"nbformat.v4.nbjson" -> "__future__" [];
	"nbformat.v4.nbjson" -> "copy" [];
	"nbformat.v4.nbjson" -> "json" [];
	"nbformat.v4.rwbase" -> "__future__" [];
	"nbformat.v4.nbbase" -> "__future__" [];
	"nbformat.v4.nbbase" -> "nbformat" [];
	"nbformat.corpus.words" -> "__future__" [];
	"nbformat.corpus.words" -> "uuid" [];
	"nbformat.v4.convert" -> "__future__" [];
	"nbformat.v4.convert" -> "json" [];
	"nbformat.v4.convert" -> "re" [];
	"nbformat.v4.convert" -> "nbformat" [];
	"nbformat.validator" -> "__future__" [];
	"nbformat.validator" -> "json" [];
	"nbformat.validator" -> "pprint" [];
	"nbformat.validator" -> "warnings" [];
	"nbformat.validator" -> "copy" [];
	"nbformat.validator" -> "pathlib" [];
	"nbformat.validator" -> "textwrap" [];
	"nbformat.validator" -> "typing" [];
	"nbformat.warnings" -> "__future__" [];
	"nbformat.json_compat" -> "__future__" [];
	"nbformat.json_compat" -> "os" [];
	"nbformat.json_compat" -> "fastjsonschema" [];
	"nbformat.json_compat" -> "jsonschema" [];
	"jsonschema.exceptions" -> "__future__" [];
	"jsonschema.exceptions" -> "collections" [];
	"jsonschema.exceptions" -> "pprint" [];
	"jsonschema.exceptions" -> "textwrap" [];
	"jsonschema.exceptions" -> "typing" [];
	"jsonschema.exceptions" -> "heapq" [];
	"jsonschema.exceptions" -> "itertools" [];
	"jsonschema.exceptions" -> "warnings" [];
	"jsonschema._types" -> "__future__" [];
	"jsonschema._types" -> "typing" [];
	"jsonschema._types" -> "numbers" [];
	"jsonschema._types" -> "rpds" [];
	"jsonschema._utils" -> "itertools" [];
	"jsonschema._utils" -> "re" [];
	"referencing.exceptions" -> "__future__" [];
	"referencing.exceptions" -> "typing" [];
	"referencing.typing" -> "__future__" [];
	"referencing.typing" -> "typing" [];
	"referencing.typing" -> "typing_extensions" [];
	"referencing._core" -> "__future__" [];
	"referencing._core" -> "enum" [];
	"referencing._core" -> "typing" [];
	"referencing._core" -> "rpds" [];
	"referencing._core" -> "typing_extensions" [];
	"referencing.jsonschema" -> "__future__" [];
	"referencing.jsonschema" -> "typing" [];
	"referencing._attrs" -> "__future__" [];
	"referencing._attrs" -> "typing" [];
	"attr.validators" -> "operator" [];
	"attr.validators" -> "re" [];
	"attr.validators" -> "contextlib" [];
	"attr.exceptions" -> "__future__" [];
	"attr.exceptions" -> "typing" [];
	"attr.converters" -> "typing" [];
	"attr._compat" -> "inspect" [];
	"attr._compat" -> "platform" [];
	"attr._compat" -> "sys" [];
	"attr._compat" -> "threading" [];
	"attr._compat" -> "typing" [];
	"attr._compat" -> "annotationlib" [];
	"attr._make" -> "__future__" [];
	"attr._make" -> "abc" [];
	"attr._make" -> "contextlib" [];
	"attr._make" -> "copy" [];
	"attr._make" -> "enum" [];
	"attr._make" -> "inspect" [];
	"attr._make" -> "itertools" [];
	"attr._make" -> "linecache" [];
	"attr._make" -> "sys" [];
	"attr._make" -> "types" [];
	"attr._make" -> "unicodedata" [];
	"attr._make" -> "functools" [];
	"attr._make" -> "typing" [];
	"attr._make" -> "warnings" [];
	"attr._next_gen" -> "functools" [];
	"attr._funcs" -> "copy" [];
	"attr._funcs" -> "typing" [];
	"attr" -> "functools" [];
	"attr" -> "typing" [];
	"attr._version_info" -> "functools" [];
	"attr._cmp" -> "functools" [];
	"attr._cmp" -> "types" [];
	"jsonschema" -> "warnings" [];
	"jsonschema" -> "importlib" [];
	"jsonschema.protocols" -> "__future__" [];
	"jsonschema.protocols" -> "typing" [];
	"jsonschema.validators" -> "__future__" [];
	"jsonschema.validators" -> "collections" [];
	"jsonschema.validators" -> "functools" [];
	"jsonschema.validators" -> "operator" [];
	"jsonschema.validators" -> "typing" [];
	"jsonschema.validators" -> "warnings" [];
	"jsonschema.validators" -> "contextlib" [];
	"jsonschema.validators" -> "json" [];
	"jsonschema.validators" -> "reprlib" [];
	"jsonschema.validators" -> "jsonschema_specifications" [];
	"jsonschema.validators" -> "rpds" [];
	"jsonschema.validators" -> "requests" [];
	"jsonschema_specifications._core" -> "json" [];
	"jsonschema_specifications._core" -> "importlib_resources" [];
	"jsonschema_specifications._core" -> "referencing" [];
	"jsonschema._typing" -> "typing" [];
	"jsonschema._legacy_keywords" -> "re" [];
	"jsonschema._keywords" -> "fractions" [];
	"jsonschema._keywords" -> "re" [];
	"jsonschema._format" -> "__future__" [];
	"jsonschema._format" -> "contextlib" [];
	"jsonschema._format" -> "datetime" [];
	"jsonschema._format" -> "uuid" [];
	"jsonschema._format" -> "ipaddress" [];
	"jsonschema._format" -> "re" [];
	"jsonschema._format" -> "typing" [];
	"jsonschema._format" -> "warnings" [];
	"jsonschema._format" -> "fqdn" [];
	"jsonschema._format" -> "idna" [];
	"jsonschema._format" -> "rfc3987" [];
	"jsonschema._format" -> "rfc3986_validator" [];
	"jsonschema._format" -> "rfc3339_validator" [];
	"jsonschema._format" -> "webcolors" [];
	"jsonschema._format" -> "jsonpointer" [];
	"jsonschema._format" -> "uri_template" [];
	"jsonschema._format" -> "isoduration" [];
	"isoduration.types" -> "__future__" [];
	"isoduration.types" -> "dataclasses" [];
	"isoduration.types" -> "datetime" [];
	"isoduration.types" -> "decimal" [];
	"isoduration.operations" -> "__future__" [];
	"isoduration.operations" -> "datetime" [];
	"isoduration.operations" -> "decimal" [];
	"isoduration.operations" -> "typing" [];
	"isoduration.operations.util" -> "decimal" [];
	"isoduration.parser.util" -> "re" [];
	"isoduration.parser.util" -> "typing" [];
	"isoduration.parser.parsing" -> "collections" [];
	"isoduration.parser.parsing" -> "decimal" [];
	"isoduration.parser.parsing" -> "arrow" [];
	"arrow.factory" -> "calendar" [];
	"arrow.factory" -> "datetime" [];
	"arrow.factory" -> "decimal" [];
	"arrow.factory" -> "time" [];
	"arrow.factory" -> "typing" [];
	"arrow.factory" -> "dateutil" [];
	"arrow.util" -> "datetime" [];
	"arrow.util" -> "typing" [];
	"dateutil.rrule" -> "calendar" [];
	"dateutil.rrule" -> "datetime" [];
	"dateutil.rrule" -> "heapq" [];
	"dateutil.rrule" -> "itertools" [];
	"dateutil.rrule" -> "re" [];
	"dateutil.rrule" -> "sys" [];
	"dateutil.rrule" -> "functools" [];
	"dateutil.rrule" -> "warnings" [];
	"dateutil.rrule" -> "six" [];
	"dateutil.rrule" -> "six.moves" [];
	"dateutil.rrule" -> "math" [];
	"dateutil.rrule" -> "fractions" [];
	"dateutil.parser" -> "functools" [];
	"dateutil.parser" -> "warnings" [];
	"dateutil.parser.isoparser" -> "datetime" [];
	"dateutil.parser.isoparser" -> "calendar" [];
	"dateutil.parser.isoparser" -> "dateutil" [];
	"dateutil.parser.isoparser" -> "functools" [];
	"dateutil.parser.isoparser" -> "re" [];
	"dateutil.parser.isoparser" -> "six" [];
	"dateutil.parser._parser" -> "__future__" [];
	"dateutil.parser._parser" -> "datetime" [];
	"dateutil.parser._parser" -> "re" [];
	"dateutil.parser._parser" -> "string" [];
	"dateutil.parser._parser" -> "time" [];
	"dateutil.parser._parser" -> "warnings" [];
	"dateutil.parser._parser" -> "calendar" [];
	"dateutil.parser._parser" -> "io" [];
	"dateutil.parser._parser" -> "six" [];
	"dateutil.parser._parser" -> "decimal" [];
	"dateutil.parser._parser" -> "dateutil" [];
	"dateutil.relativedelta" -> "datetime" [];
	"dateutil.relativedelta" -> "calendar" [];
	"dateutil.relativedelta" -> "operator" [];
	"dateutil.relativedelta" -> "math" [];
	"dateutil.relativedelta" -> "six" [];
	"dateutil.relativedelta" -> "warnings" [];
	"dateutil.easter" -> "datetime" [];
	"six.moves._thread" -> "_thread" [];
	"six.moves" -> "six" [];
	"six" -> "__future__" [];
	"six" -> "functools" [];
	"six" -> "itertools" [];
	"six" -> "operator" [];
	"six" -> "sys" [];
	"six" -> "types" [];
	"six" -> "struct" [];
	"six" -> "io" [];
	"six" -> "StringIO" [];
	"arrow.constants" -> "sys" [];
	"arrow.constants" -> "datetime" [];
	"arrow.constants" -> "typing_extensions" [];
	"arrow.constants" -> "typing" [];
	"dateutil.tz.tz" -> "datetime" [];
	"dateutil.tz.tz" -> "struct" [];
	"dateutil.tz.tz" -> "time" [];
	"dateutil.tz.tz" -> "sys" [];
	"dateutil.tz.tz" -> "os" [];
	"dateutil.tz.tz" -> "bisect" [];
	"dateutil.tz.tz" -> "weakref" [];
	"dateutil.tz.tz" -> "collections" [];
	"dateutil.tz.tz" -> "six" [];
	"dateutil.tz.tz" -> "six.moves" [];
	"dateutil.tz.tz" -> "warnings" [];
	"dateutil.tz.tz" -> "dateutil" [];
	"dateutil.tz.tz" -> "contextlib" [];
	"dateutil.zoneinfo" -> "warnings" [];
	"dateutil.zoneinfo" -> "json" [];
	"dateutil.zoneinfo" -> "tarfile" [];
	"dateutil.zoneinfo" -> "pkgutil" [];
	"dateutil.zoneinfo" -> "io" [];
	"dateutil.tz.win" -> "datetime" [];
	"dateutil.tz.win" -> "struct" [];
	"dateutil.tz.win" -> "six.moves" [];
	"dateutil.tz.win" -> "six" [];
	"dateutil.tz.win" -> "ctypes" [];
	"dateutil.tz._factories" -> "datetime" [];
	"dateutil.tz._factories" -> "weakref" [];
	"dateutil.tz._factories" -> "collections" [];
	"dateutil.tz._factories" -> "six.moves" [];
	"dateutil.tz._common" -> "six" [];
	"dateutil.tz._common" -> "functools" [];
	"dateutil.tz._common" -> "datetime" [];
	"dateutil" -> "sys" [];
	"dateutil" -> "importlib" [];
	"arrow.arrow" -> "calendar" [];
	"arrow.arrow" -> "re" [];
	"arrow.arrow" -> "sys" [];
	"arrow.arrow" -> "datetime" [];
	"arrow.arrow" -> "math" [];
	"arrow.arrow" -> "time" [];
	"arrow.arrow" -> "typing" [];
	"arrow.arrow" -> "dateutil" [];
	"arrow.arrow" -> "typing_extensions" [];
	"arrow.api" -> "datetime" [];
	"arrow.api" -> "time" [];
	"arrow.api" -> "typing" [];
	"arrow.parser" -> "re" [];
	"arrow.parser" -> "sys" [];
	"arrow.parser" -> "datetime" [];
	"arrow.parser" -> "functools" [];
	"arrow.parser" -> "typing" [];
	"arrow.parser" -> "dateutil" [];
	"arrow.parser" -> "typing_extensions" [];
	"arrow.formatter" -> "re" [];
	"arrow.formatter" -> "sys" [];
	"arrow.formatter" -> "datetime" [];
	"arrow.formatter" -> "typing" [];
	"arrow.formatter" -> "dateutil" [];
	"arrow.formatter" -> "typing_extensions" [];
	"arrow.locales" -> "sys" [];
	"arrow.locales" -> "math" [];
	"arrow.locales" -> "typing" [];
	"arrow.locales" -> "typing_extensions" [];
	"isoduration.formatter" -> "__future__" [];
	"isoduration.formatter" -> "typing" [];
	"isoduration.formatter.formatting" -> "__future__" [];
	"isoduration.formatter.formatting" -> "typing" [];
	"isoduration.formatter.checking" -> "__future__" [];
	"isoduration.formatter.checking" -> "typing" [];
	"uri_template" -> "__future__" [];
	"uri_template.variable" -> "__future__" [];
	"uri_template.charset" -> "__future__" [];
	"uri_template.uritemplate" -> "__future__" [];
	"uri_template.uritemplate" -> "re" [];
	"uri_template.uritemplate" -> "typing" [];
	"uri_template.expansions" -> "__future__" [];
	"uri_template.expansions" -> "collections" [];
	"uri_template.expansions" -> "typing" [];
	"jsonpointer" -> "copy" [];
	"jsonpointer" -> "re" [];
	"jsonpointer" -> "itertools" [];
	"webcolors._types" -> "typing" [];
	"webcolors._html5" -> "string" [];
	"webcolors._definitions" -> "re" [];
	"webcolors._definitions" -> "typing" [];
	"rfc3339_validator" -> "re" [];
	"rfc3339_validator" -> "calendar" [];
	"rfc3339_validator" -> "six" [];
	"rfc3986_validator" -> "re" [];
	"fqdn" -> "re" [];
	"fqdn._compat" -> "sys" [];
	"fqdn._compat" -> "functools" [];
	"fqdn._compat" -> "cached_property" [];
	"fastjsonschema" -> "functools" [];
	"fastjsonschema.ref_resolver" -> "contextlib" [];
	"fastjsonschema.ref_resolver" -> "json" [];
	"fastjsonschema.ref_resolver" -> "re" [];
	"fastjsonschema.ref_resolver" -> "urllib" [];
	"fastjsonschema.exceptions" -> "re" [];
	"fastjsonschema.draft06" -> "decimal" [];
	"fastjsonschema.generator" -> "collections" [];
	"fastjsonschema.generator" -> "decimal" [];
	"fastjsonschema.generator" -> "re" [];
	"fastjsonschema.draft04" -> "decimal" [];
	"fastjsonschema.draft04" -> "re" [];
	"nbformat._imports" -> "__future__" [];
	"nbformat.v3" -> "__future__" [];
	"nbformat.v3" -> "os" [];
	"nbformat.v3.nbpy" -> "__future__" [];
	"nbformat.v3.nbpy" -> "re" [];
	"nbformat.v3.nbpy" -> "ast" [];
	"nbformat.v3.rwbase" -> "__future__" [];
	"nbformat.v3.rwbase" -> "base64" [];
	"nbformat.v3.nbjson" -> "__future__" [];
	"nbformat.v3.nbjson" -> "copy" [];
	"nbformat.v3.nbjson" -> "json" [];
	"nbformat.v3.nbbase" -> "__future__" [];
	"nbformat.v3.nbbase" -> "warnings" [];
	"nbformat.v3.convert" -> "__future__" [];
	"nbformat.v2" -> "__future__" [];
	"nbformat.v2" -> "os" [];
	"nbformat.v2.nbxml" -> "__future__" [];
	"nbformat.v2.nbpy" -> "__future__" [];
	"nbformat.v2.nbpy" -> "re" [];
	"nbformat.v2.nbpy" -> "ast" [];
	"nbformat.v2.rwbase" -> "__future__" [];
	"nbformat.v2.rwbase" -> "base64" [];
	"nbformat.v2.nbjson" -> "__future__" [];
	"nbformat.v2.nbjson" -> "copy" [];
	"nbformat.v2.nbjson" -> "json" [];
	"nbformat.v2.nbbase" -> "__future__" [];
	"nbformat.v2.convert" -> "__future__" [];
	"nbformat.v1" -> "__future__" [];
	"nbformat.v1.nbjson" -> "__future__" [];
	"nbformat.v1.nbjson" -> "json" [];
	"nbformat.v1.rwbase" -> "__future__" [];
	"nbformat.v1.nbbase" -> "__future__" [];
	"nbformat.v1.convert" -> "__future__" [];
	"IPython.utils._process_win32" -> "os" [];
	"IPython.utils._process_win32" -> "sys" [];
	"IPython.utils._process_win32" -> "ctypes" [];
	"IPython.utils._process_win32" -> "time" [];
	"IPython.utils._process_win32" -> "subprocess" [];
	"IPython.utils._process_win32" -> "threading" [];
	"IPython.utils.encoding" -> "sys" [];
	"IPython.utils.encoding" -> "locale" [];
	"IPython.utils.encoding" -> "warnings" [];
	"IPython.utils._process_common" -> "subprocess" [];
	"IPython.utils._process_common" -> "shlex" [];
	"IPython.utils._process_common" -> "sys" [];
	"IPython.utils._process_common" -> "os" [];
	"IPython.utils._process_common" -> "errno" [];
	"IPython.core.magics.script" -> "asyncio" [];
	"IPython.core.magics.script" -> "atexit" [];
	"IPython.core.magics.script" -> "errno" [];
	"IPython.core.magics.script" -> "os" [];
	"IPython.core.magics.script" -> "signal" [];
	"IPython.core.magics.script" -> "sys" [];
	"IPython.core.magics.script" -> "time" [];
	"IPython.core.magics.script" -> "subprocess" [];
	"IPython.core.magics.script" -> "threading" [];
	"IPython.core.magics.script" -> "traitlets" [];
	"IPython.core.magic_arguments" -> "argparse" [];
	"IPython.core.magic_arguments" -> "re" [];
	"IPython.core.magics.pylab" -> "warnings" [];
	"IPython.core.magics.packaging" -> "functools" [];
	"IPython.core.magics.packaging" -> "re" [];
	"IPython.core.magics.packaging" -> "shlex" [];
	"IPython.core.magics.packaging" -> "sys" [];
	"IPython.core.magics.packaging" -> "pathlib" [];
	"IPython.core.magics.osm" -> "io" [];
	"IPython.core.magics.osm" -> "os" [];
	"IPython.core.magics.osm" -> "pathlib" [];
	"IPython.core.magics.osm" -> "re" [];
	"IPython.core.magics.osm" -> "sys" [];
	"IPython.core.magics.osm" -> "pprint" [];
	"IPython.core.magics.osm" -> "traitlets" [];
	"IPython.core.magics.osm" -> "warnings" [];
	"IPython.utils.terminal" -> "os" [];
	"IPython.utils.terminal" -> "sys" [];
	"IPython.utils.terminal" -> "warnings" [];
	"IPython.utils.terminal" -> "shutil" [];
	"IPython.utils.terminal" -> "ctypes" [];
	"IPython.core.magics.namespace" -> "gc" [];
	"IPython.core.magics.namespace" -> "re" [];
	"IPython.core.magics.namespace" -> "sys" [];
	"IPython.core.magics.namespace" -> "numpy" [];
	"IPython.core.magics.logging" -> "os" [];
	"IPython.core.magics.logging" -> "sys" [];
	"IPython.core.magics.logging" -> "warnings" [];
	"IPython.core.magics.logging" -> "traitlets" [];
	"IPython.core.magics.history" -> "os" [];
	"IPython.core.magics.history" -> "sys" [];
	"IPython.core.magics.history" -> "io" [];
	"IPython.core.magics.history" -> "fnmatch" [];
	"IPython.core.magics.execution" -> "ast" [];
	"IPython.core.magics.execution" -> "bdb" [];
	"IPython.core.magics.execution" -> "builtins" [];
	"IPython.core.magics.execution" -> "copy" [];
	"IPython.core.magics.execution" -> "cProfile" [];
	"IPython.core.magics.execution" -> "gc" [];
	"IPython.core.magics.execution" -> "itertools" [];
	"IPython.core.magics.execution" -> "math" [];
	"IPython.core.magics.execution" -> "os" [];
	"IPython.core.magics.execution" -> "pstats" [];
	"IPython.core.magics.execution" -> "re" [];
	"IPython.core.magics.execution" -> "shlex" [];
	"IPython.core.magics.execution" -> "sys" [];
	"IPython.core.magics.execution" -> "time" [];
	"IPython.core.magics.execution" -> "timeit" [];
	"IPython.core.magics.execution" -> "typing" [];
	"IPython.core.magics.execution" -> "io" [];
	"IPython.core.magics.execution" -> "logging" [];
	"IPython.core.magics.execution" -> "pathlib" [];
	"IPython.core.magics.execution" -> "pdb" [];
	"IPython.core.magics.execution" -> "textwrap" [];
	"IPython.core.magics.execution" -> "warnings" [];
	"IPython.core.magics.ast_mod" -> "ast" [];
	"IPython.core.magics.ast_mod" -> "copy" [];
	"IPython.core.magics.ast_mod" -> "typing" [];
	"IPython.utils.timing" -> "time" [];
	"IPython.utils.timing" -> "resource" [];
	"IPython.utils.module_paths" -> "importlib" [];
	"IPython.utils.module_paths" -> "sys" [];
	"IPython.utils.contexts" -> "warnings" [];
	"timeit" -> "gc" [];
	"timeit" -> "sys" [];
	"timeit" -> "time" [];
	"timeit" -> "itertools" [];
	"timeit" -> "linecache" [];
	"timeit" -> "traceback" [];
	"timeit" -> "getopt" [];
	"timeit" -> "os" [];
	"timeit" -> "warnings" [];
	"pstats" -> "sys" [];
	"pstats" -> "os" [];
	"pstats" -> "time" [];
	"pstats" -> "marshal" [];
	"pstats" -> "re" [];
	"pstats" -> "enum" [];
	"pstats" -> "functools" [];
	"pstats" -> "dataclasses" [];
	"pstats" -> "typing" [];
	"pstats" -> "cmd" [];
	"pstats" -> "readline" [];
	"cProfile" -> "_lsprof" [];
	"cProfile" -> "profile" [];
	"cProfile" -> "pstats" [];
	"cProfile" -> "marshal" [];
	"cProfile" -> "os" [];
	"cProfile" -> "sys" [];
	"cProfile" -> "runpy" [];
	"cProfile" -> "optparse" [];
	"profile" -> "sys" [];
	"profile" -> "time" [];
	"profile" -> "marshal" [];
	"profile" -> "pstats" [];
	"profile" -> "os" [];
	"profile" -> "optparse" [];
	"profile" -> "runpy" [];
	"IPython.core.magics.config" -> "re" [];
	"IPython.core.magics.config" -> "logging" [];
	"IPython.core.magics.code" -> "inspect" [];
	"IPython.core.magics.code" -> "io" [];
	"IPython.core.magics.code" -> "os" [];
	"IPython.core.magics.code" -> "re" [];
	"IPython.core.magics.code" -> "sys" [];
	"IPython.core.magics.code" -> "ast" [];
	"IPython.core.magics.code" -> "itertools" [];
	"IPython.core.magics.code" -> "pathlib" [];
	"IPython.core.magics.code" -> "warnings" [];
	"IPython.core.magics.code" -> "logging" [];
	"IPython.core.magics.basic" -> "logging" [];
	"IPython.core.magics.basic" -> "io" [];
	"IPython.core.magics.basic" -> "os" [];
	"IPython.core.magics.basic" -> "pprint" [];
	"IPython.core.magics.basic" -> "sys" [];
	"IPython.core.magics.basic" -> "warnings" [];
	"IPython.core.magics.basic" -> "nbformat" [];
	"IPython.core.magics.auto" -> "logging" [];
	"IPython.core.completerlib" -> "glob" [];
	"IPython.core.completerlib" -> "inspect" [];
	"IPython.core.completerlib" -> "os" [];
	"IPython.core.completerlib" -> "re" [];
	"IPython.core.completerlib" -> "sys" [];
	"IPython.core.completerlib" -> "importlib" [];
	"IPython.core.completerlib" -> "time" [];
	"IPython.core.completerlib" -> "zipimport" [];
	"IPython.core.completerlib" -> "IPython" [];
	"IPython.core.completerlib" -> "typing" [];
	"IPython.core.completer" -> "__future__" [];
	"IPython.core.completer" -> "builtins" [];
	"IPython.core.completer" -> "enum" [];
	"IPython.core.completer" -> "glob" [];
	"IPython.core.completer" -> "inspect" [];
	"IPython.core.completer" -> "itertools" [];
	"IPython.core.completer" -> "keyword" [];
	"IPython.core.completer" -> "os" [];
	"IPython.core.completer" -> "re" [];
	"IPython.core.completer" -> "string" [];
	"IPython.core.completer" -> "sys" [];
	"IPython.core.completer" -> "tokenize" [];
	"IPython.core.completer" -> "time" [];
	"IPython.core.completer" -> "unicodedata" [];
	"IPython.core.completer" -> "uuid" [];
	"IPython.core.completer" -> "warnings" [];
	"IPython.core.completer" -> "ast" [];
	"IPython.core.completer" -> "collections" [];
	"IPython.core.completer" -> "contextlib" [];
	"IPython.core.completer" -> "dataclasses" [];
	"IPython.core.completer" -> "functools" [];
	"IPython.core.completer" -> "types" [];
	"IPython.core.completer" -> "typing" [];
	"IPython.core.completer" -> "traitlets" [];
	"IPython.core.completer" -> "jedi" [];
	"IPython.core.completer" -> "typing_extensions" [];
	"IPython.core.completer" -> "cProfile" [];
	"jedi.api.classes" -> "re" [];
	"jedi.api.classes" -> "pathlib" [];
	"jedi.api.classes" -> "typing" [];
	"jedi.api.classes" -> "jedi" [];
	"jedi.api.completion_cache" -> "typing" [];
	"jedi.api" -> "sys" [];
	"jedi.api" -> "pathlib" [];
	"jedi.api" -> "parso" [];
	"jedi.inference.gradual.utils" -> "pathlib" [];
	"jedi.inference.gradual.typeshed" -> "os" [];
	"jedi.inference.gradual.typeshed" -> "re" [];
	"jedi.inference.gradual.typeshed" -> "functools" [];
	"jedi.inference.gradual.typeshed" -> "collections" [];
	"jedi.inference.gradual.typeshed" -> "typing" [];
	"jedi.inference.gradual.typeshed" -> "pathlib" [];
	"jedi.inference.gradual.typeshed" -> "jedi" [];
	"jedi.inference.gradual.annotation" -> "re" [];
	"jedi.inference.gradual.annotation" -> "inspect" [];
	"jedi.inference.gradual.annotation" -> "parso" [];
	"jedi.inference.gradual.annotation" -> "jedi" [];
	"jedi.inference.param" -> "collections" [];
	"jedi.inference.param" -> "inspect" [];
	"jedi.inference.param" -> "jedi" [];
	"jedi.inference.gradual.type_var" -> "jedi" [];
	"jedi.inference.gradual.typing" -> "itertools" [];
	"jedi.inference.gradual.typing" -> "jedi" [];
	"jedi.inference.compiled.value" -> "re" [];
	"jedi.inference.compiled.value" -> "functools" [];
	"jedi.inference.compiled.value" -> "inspect" [];
	"jedi.inference.compiled.value" -> "pathlib" [];
	"jedi.inference.compiled.value" -> "typing" [];
	"jedi.inference.compiled.value" -> "jedi" [];
	"jedi.inference.docstrings" -> "re" [];
	"jedi.inference.docstrings" -> "warnings" [];
	"jedi.inference.docstrings" -> "parso" [];
	"jedi.inference.docstrings" -> "jedi" [];
	"jedi.inference.docstrings" -> "numpydoc" [];
	"jedi.inference.signature" -> "inspect" [];
	"jedi.inference.signature" -> "jedi" [];
	"jedi.inference.star_args" -> "inspect" [];
	"jedi.inference.star_args" -> "parso" [];
	"jedi.inference.compiled.access" -> "inspect" [];
	"jedi.inference.compiled.access" -> "types" [];
	"jedi.inference.compiled.access" -> "traceback" [];
	"jedi.inference.compiled.access" -> "sys" [];
	"jedi.inference.compiled.access" -> "operator" [];
	"jedi.inference.compiled.access" -> "collections" [];
	"jedi.inference.compiled.access" -> "warnings" [];
	"jedi.inference.compiled.access" -> "re" [];
	"jedi.inference.compiled.access" -> "builtins" [];
	"jedi.inference.compiled.access" -> "typing" [];
	"jedi.inference.compiled.access" -> "pathlib" [];
	"jedi.inference.compiled.getattr_static" -> "types" [];
	"jedi.inference.compiled.getattr_static" -> "jedi" [];
	"jedi.inference.value.klass" -> "jedi" [];
	"jedi.plugins" -> "functools" [];
	"jedi.plugins.django" -> "inspect" [];
	"jedi.plugins.django" -> "jedi" [];
	"jedi.inference.value.instance" -> "abc" [];
	"jedi.inference.value.instance" -> "jedi" [];
	"jedi.plugins.pytest" -> "sys" [];
	"jedi.plugins.pytest" -> "typing" [];
	"jedi.plugins.pytest" -> "pathlib" [];
	"jedi.plugins.pytest" -> "pkg_resources" [];
	"jedi.plugins.stdlib" -> "parso" [];
	"jedi.plugins.stdlib" -> "os" [];
	"jedi.plugins.stdlib" -> "inspect" [];
	"jedi.plugins.stdlib" -> "jedi" [];
	"jedi.inference.value.function" -> "jedi" [];
	"jedi.inference.flow_analysis" -> "typing" [];
	"jedi.inference.recursion" -> "contextlib" [];
	"jedi.inference.recursion" -> "jedi" [];
	"jedi.inference.gradual.generics" -> "jedi" [];
	"jedi.inference.value.dynamic_arrays" -> "jedi" [];
	"jedi.inference.context" -> "abc" [];
	"jedi.inference.context" -> "contextlib" [];
	"jedi.inference.context" -> "pathlib" [];
	"jedi.inference.context" -> "typing" [];
	"jedi.inference.context" -> "jedi" [];
	"jedi.inference.finder" -> "jedi" [];
	"jedi.inference.filters" -> "abc" [];
	"jedi.inference.filters" -> "typing" [];
	"jedi.inference.filters" -> "weakref" [];
	"jedi.inference.cache" -> "functools" [];
	"jedi.inference.cache" -> "jedi" [];
	"jedi.common" -> "contextlib" [];
	"jedi.inference.analysis" -> "jedi" [];
	"jedi.inference.value.module" -> "os" [];
	"jedi.inference.value.module" -> "pathlib" [];
	"jedi.inference.value.module" -> "typing" [];
	"jedi.inference.syntax_tree" -> "copy" [];
	"jedi.inference.syntax_tree" -> "itertools" [];
	"jedi.inference.syntax_tree" -> "jedi" [];
	"jedi.inference.sys_path" -> "os" [];
	"jedi.inference.sys_path" -> "re" [];
	"jedi.inference.sys_path" -> "pathlib" [];
	"jedi.inference.sys_path" -> "jedi" [];
	"jedi.inference.helpers" -> "copy" [];
	"jedi.inference.helpers" -> "sys" [];
	"jedi.inference.helpers" -> "re" [];
	"jedi.inference.helpers" -> "os" [];
	"jedi.inference.helpers" -> "itertools" [];
	"jedi.inference.helpers" -> "contextlib" [];
	"jedi.inference.arguments" -> "re" [];
	"jedi.inference.arguments" -> "itertools" [];
	"jedi.inference.arguments" -> "jedi" [];
	"jedi.inference.references" -> "os" [];
	"jedi.inference.references" -> "re" [];
	"jedi.inference.references" -> "parso" [];
	"jedi.inference.imports" -> "os" [];
	"jedi.inference.imports" -> "pathlib" [];
	"jedi.inference.imports" -> "jedi" [];
	"jedi.inference.value.namespace" -> "pathlib" [];
	"jedi.inference.value.namespace" -> "typing" [];
	"jedi.inference.compiled.subprocess.functions" -> "sys" [];
	"jedi.inference.compiled.subprocess.functions" -> "os" [];
	"jedi.inference.compiled.subprocess.functions" -> "inspect" [];
	"jedi.inference.compiled.subprocess.functions" -> "importlib" [];
	"jedi.inference.compiled.subprocess.functions" -> "pathlib" [];
	"jedi.inference.compiled.subprocess.functions" -> "zipfile" [];
	"jedi.inference.compiled.subprocess.functions" -> "zipimport" [];
	"jedi.inference.compiled.subprocess.functions" -> "jedi" [];
	"jedi.inference.compiled.subprocess" -> "collections" [];
	"jedi.inference.compiled.subprocess" -> "os" [];
	"jedi.inference.compiled.subprocess" -> "sys" [];
	"jedi.inference.compiled.subprocess" -> "queue" [];
	"jedi.inference.compiled.subprocess" -> "subprocess" [];
	"jedi.inference.compiled.subprocess" -> "traceback" [];
	"jedi.inference.compiled.subprocess" -> "weakref" [];
	"jedi.inference.compiled.subprocess" -> "functools" [];
	"jedi.inference.compiled.subprocess" -> "threading" [];
	"jedi.inference.compiled.subprocess" -> "typing" [];
	"jedi.inference.compiled.subprocess" -> "jedi" [];
	"jedi._compatibility" -> "errno" [];
	"jedi._compatibility" -> "sys" [];
	"jedi._compatibility" -> "pickle" [];
	"jedi._compatibility" -> "typing" [];
	"jedi.inference" -> "parso" [];
	"jedi.api.refactoring.extract" -> "textwrap" [];
	"jedi.api.refactoring.extract" -> "parso" [];
	"jedi.api.refactoring.extract" -> "jedi" [];
	"jedi.api.refactoring" -> "difflib" [];
	"jedi.api.refactoring" -> "pathlib" [];
	"jedi.api.refactoring" -> "typing" [];
	"jedi.api.refactoring" -> "parso" [];
	"jedi.api.project" -> "json" [];
	"jedi.api.project" -> "pathlib" [];
	"jedi.api.project" -> "itertools" [];
	"jedi.api.project" -> "jedi" [];
	"jedi.api.environment" -> "os" [];
	"jedi.api.environment" -> "sys" [];
	"jedi.api.environment" -> "hashlib" [];
	"jedi.api.environment" -> "filecmp" [];
	"jedi.api.environment" -> "collections" [];
	"jedi.api.environment" -> "shutil" [];
	"jedi.api.environment" -> "typing" [];
	"jedi.api.environment" -> "parso" [];
	"jedi.api.environment" -> "winreg" [];
	"filecmp" -> "os" [];
	"filecmp" -> "stat" [];
	"filecmp" -> "itertools" [];
	"filecmp" -> "types" [];
	"filecmp" -> "sys" [];
	"filecmp" -> "getopt" [];
	"jedi.api.completion" -> "re" [];
	"jedi.api.completion" -> "textwrap" [];
	"jedi.api.completion" -> "inspect" [];
	"jedi.api.completion" -> "parso" [];
	"jedi.api.completion" -> "jedi" [];
	"jedi.api.file_name" -> "os" [];
	"jedi.api.strings" -> "re" [];
	"parso.python.token" -> "__future__" [];
	"parso.python.token" -> "enum" [];
	"jedi.file_io" -> "os" [];
	"jedi.file_io" -> "parso" [];
	"parso.file_io" -> "os" [];
	"parso.file_io" -> "pathlib" [];
	"parso.file_io" -> "typing" [];
	"jedi.parser_utils" -> "re" [];
	"jedi.parser_utils" -> "textwrap" [];
	"jedi.parser_utils" -> "ast" [];
	"jedi.parser_utils" -> "inspect" [];
	"jedi.parser_utils" -> "weakref" [];
	"jedi.parser_utils" -> "parso" [];
	"parso.cache" -> "time" [];
	"parso.cache" -> "os" [];
	"parso.cache" -> "sys" [];
	"parso.cache" -> "hashlib" [];
	"parso.cache" -> "gc" [];
	"parso.cache" -> "shutil" [];
	"parso.cache" -> "platform" [];
	"parso.cache" -> "logging" [];
	"parso.cache" -> "warnings" [];
	"parso.cache" -> "pickle" [];
	"parso.cache" -> "pathlib" [];
	"parso.cache" -> "typing" [];
	"parso.python.tree" -> "re" [];
	"parso.python.tree" -> "collections" [];
	"parso.python.tree" -> "typing" [];
	"parso.utils" -> "re" [];
	"parso.utils" -> "sys" [];
	"parso.utils" -> "ast" [];
	"parso.utils" -> "functools" [];
	"parso.utils" -> "typing" [];
	"parso.python.prefix" -> "re" [];
	"parso.python.prefix" -> "codecs" [];
	"parso.python.prefix" -> "typing" [];
	"parso.python.tokenize" -> "__future__" [];
	"parso.python.tokenize" -> "sys" [];
	"parso.python.tokenize" -> "re" [];
	"parso.python.tokenize" -> "itertools" [];
	"parso.python.tokenize" -> "codecs" [];
	"parso.python.tokenize" -> "typing" [];
	"parso.python.pep8" -> "re" [];
	"parso.python.pep8" -> "contextlib" [];
	"parso.python.pep8" -> "typing" [];
	"parso.normalizer" -> "contextlib" [];
	"parso.normalizer" -> "typing" [];
	"parso.python.errors" -> "codecs" [];
	"parso.python.errors" -> "sys" [];
	"parso.python.errors" -> "warnings" [];
	"parso.python.errors" -> "re" [];
	"parso.python.errors" -> "contextlib" [];
	"parso.grammar" -> "hashlib" [];
	"parso.grammar" -> "os" [];
	"parso.grammar" -> "typing" [];
	"parso.grammar" -> "pathlib" [];
	"parso.python.diff" -> "re" [];
	"parso.python.diff" -> "difflib" [];
	"parso.python.diff" -> "collections" [];
	"parso.python.diff" -> "logging" [];
	"parso.python.diff" -> "parso" [];
	"parso.pgen2.generator" -> "ast" [];
	"parso.pgen2.generator" -> "typing" [];
	"parso.pgen2.grammar_parser" -> "typing" [];
	"parso._compatibility" -> "platform" [];
	"parso.parser" -> "typing" [];
	"jedi.api.keywords" -> "pydoc" [];
	"jedi.api.keywords" -> "contextlib" [];
	"jedi.api.keywords" -> "typing" [];
	"jedi.api.keywords" -> "pydoc_data" [];
	"jedi.inference.base_value" -> "functools" [];
	"jedi.inference.base_value" -> "operator" [];
	"jedi.inference.base_value" -> "itertools" [];
	"jedi.inference.base_value" -> "jedi" [];
	"jedi.inference.gradual.conversion" -> "jedi" [];
	"jedi.inference.names" -> "abc" [];
	"jedi.inference.names" -> "inspect" [];
	"jedi.inference.names" -> "typing" [];
	"jedi.inference.dynamic_params" -> "jedi" [];
	"jedi.inference.compiled.mixed" -> "inspect" [];
	"jedi.inference.compiled.mixed" -> "pathlib" [];
	"jedi.inference.compiled.mixed" -> "jedi" [];
	"jedi.cache" -> "time" [];
	"jedi.cache" -> "functools" [];
	"jedi.cache" -> "typing" [];
	"jedi.inference.utils" -> "functools" [];
	"jedi.inference.utils" -> "re" [];
	"jedi.inference.utils" -> "os" [];
	"jedi.debug" -> "os" [];
	"jedi.debug" -> "time" [];
	"jedi.debug" -> "contextlib" [];
	"jedi.debug" -> "typing" [];
	"jedi.debug" -> "colorama" [];
	"jedi.settings" -> "os" [];
	"jedi.settings" -> "platform" [];
	"parso.tree" -> "abc" [];
	"parso.tree" -> "typing" [];
	"jedi.api.helpers" -> "re" [];
	"jedi.api.helpers" -> "collections" [];
	"jedi.api.helpers" -> "textwrap" [];
	"jedi.api.helpers" -> "itertools" [];
	"jedi.api.helpers" -> "functools" [];
	"jedi.api.helpers" -> "inspect" [];
	"IPython.utils.dir2" -> "inspect" [];
	"IPython.utils.dir2" -> "types" [];
	"IPython.core.guarded_eval" -> "inspect" [];
	"IPython.core.guarded_eval" -> "typing" [];
	"IPython.core.guarded_eval" -> "ast" [];
	"IPython.core.guarded_eval" -> "builtins" [];
	"IPython.core.guarded_eval" -> "collections" [];
	"IPython.core.guarded_eval" -> "operator" [];
	"IPython.core.guarded_eval" -> "sys" [];
	"IPython.core.guarded_eval" -> "functools" [];
	"IPython.core.guarded_eval" -> "dataclasses" [];
	"IPython.core.guarded_eval" -> "types" [];
	"IPython.core.guarded_eval" -> "typing_extensions" [];
	"IPython.core.async_helpers" -> "ast" [];
	"IPython.core.async_helpers" -> "asyncio" [];
	"IPython.core.async_helpers" -> "inspect" [];
	"IPython.core.async_helpers" -> "functools" [];
	"IPython.core.async_helpers" -> "curio" [];
	"IPython.core.async_helpers" -> "trio" [];
	"exceptiongroup" -> "os" [];
	"exceptiongroup" -> "sys" [];
	"exceptiongroup" -> "traceback" [];
	"exceptiongroup" -> "contextlib" [];
	"exceptiongroup._suppress" -> "__future__" [];
	"exceptiongroup._suppress" -> "sys" [];
	"exceptiongroup._suppress" -> "contextlib" [];
	"exceptiongroup._suppress" -> "types" [];
	"exceptiongroup._suppress" -> "typing" [];
	"exceptiongroup._formatting" -> "__future__" [];
	"exceptiongroup._formatting" -> "sys" [];
	"exceptiongroup._formatting" -> "textwrap" [];
	"exceptiongroup._formatting" -> "traceback" [];
	"exceptiongroup._formatting" -> "functools" [];
	"exceptiongroup._formatting" -> "types" [];
	"exceptiongroup._formatting" -> "typing" [];
	"exceptiongroup._formatting" -> "apport_python_hook" [];
	"exceptiongroup._exceptions" -> "__future__" [];
	"exceptiongroup._exceptions" -> "functools" [];
	"exceptiongroup._exceptions" -> "inspect" [];
	"exceptiongroup._exceptions" -> "typing" [];
	"exceptiongroup._version" -> "typing" [];
	"exceptiongroup._catch" -> "__future__" [];
	"exceptiongroup._catch" -> "inspect" [];
	"exceptiongroup._catch" -> "sys" [];
	"exceptiongroup._catch" -> "contextlib" [];
	"exceptiongroup._catch" -> "types" [];
	"exceptiongroup._catch" -> "typing" [];
	"IPython.utils.text" -> "os" [];
	"IPython.utils.text" -> "re" [];
	"IPython.utils.text" -> "string" [];
	"IPython.utils.text" -> "sys" [];
	"IPython.utils.text" -> "textwrap" [];
	"IPython.utils.text" -> "warnings" [];
	"IPython.utils.text" -> "pathlib" [];
	"IPython.utils.text" -> "typing" [];
	"IPython.utils.syspathcontext" -> "sys" [];
	"IPython.utils.syspathcontext" -> "warnings" [];
	"IPython.utils.strdispatch" -> "re" [];
	"IPython.utils.process" -> "os" [];
	"IPython.utils.process" -> "shutil" [];
	"IPython.utils.process" -> "sys" [];
	"IPython.utils._process_posix" -> "errno" [];
	"IPython.utils._process_posix" -> "os" [];
	"IPython.utils._process_posix" -> "subprocess" [];
	"IPython.utils._process_posix" -> "sys" [];
	"IPython.utils._process_posix" -> "pexpect" [];
	"pexpect" -> "sys" [];
	"pexpect.run" -> "sys" [];
	"pexpect.run" -> "types" [];
	"pexpect.pty_spawn" -> "os" [];
	"pexpect.pty_spawn" -> "sys" [];
	"pexpect.pty_spawn" -> "time" [];
	"pexpect.pty_spawn" -> "pty" [];
	"pexpect.pty_spawn" -> "tty" [];
	"pexpect.pty_spawn" -> "errno" [];
	"pexpect.pty_spawn" -> "signal" [];
	"pexpect.pty_spawn" -> "contextlib" [];
	"pexpect.pty_spawn" -> "ptyprocess" [];
	"pexpect.spawnbase" -> "io" [];
	"pexpect.spawnbase" -> "codecs" [];
	"pexpect.spawnbase" -> "os" [];
	"pexpect.spawnbase" -> "sys" [];
	"pexpect.spawnbase" -> "re" [];
	"pexpect.spawnbase" -> "errno" [];
	"pexpect._async" -> "sys" [];
	"pexpect._async_pre_await" -> "asyncio" [];
	"pexpect._async_pre_await" -> "errno" [];
	"pexpect._async_pre_await" -> "signal" [];
	"pexpect._async_w_await" -> "asyncio" [];
	"pexpect._async_w_await" -> "errno" [];
	"pexpect._async_w_await" -> "signal" [];
	"pexpect._async_w_await" -> "sys" [];
	"ptyprocess.ptyprocess" -> "codecs" [];
	"ptyprocess.ptyprocess" -> "errno" [];
	"ptyprocess.ptyprocess" -> "fcntl" [];
	"ptyprocess.ptyprocess" -> "io" [];
	"ptyprocess.ptyprocess" -> "os" [];
	"ptyprocess.ptyprocess" -> "pty" [];
	"ptyprocess.ptyprocess" -> "resource" [];
	"ptyprocess.ptyprocess" -> "signal" [];
	"ptyprocess.ptyprocess" -> "struct" [];
	"ptyprocess.ptyprocess" -> "sys" [];
	"ptyprocess.ptyprocess" -> "termios" [];
	"ptyprocess.ptyprocess" -> "time" [];
	"ptyprocess.ptyprocess" -> "builtins" [];
	"ptyprocess.ptyprocess" -> "__builtin__" [];
	"ptyprocess._fork_pty" -> "os" [];
	"ptyprocess._fork_pty" -> "errno" [];
	"ptyprocess._fork_pty" -> "pty" [];
	"ptyprocess.util" -> "shutil" [];
	"ptyprocess.util" -> "os" [];
	"ptyprocess.util" -> "sys" [];
	"pexpect.expect" -> "time" [];
	"pexpect.utils" -> "os" [];
	"pexpect.utils" -> "sys" [];
	"pexpect.utils" -> "stat" [];
	"pexpect.utils" -> "select" [];
	"pexpect.utils" -> "time" [];
	"pexpect.utils" -> "errno" [];
	"pexpect.exceptions" -> "traceback" [];
	"pexpect.exceptions" -> "sys" [];
	"IPython.utils._process_cli" -> "clr" [];
	"IPython.utils._process_cli" -> "System" [];
	"IPython.utils._process_cli" -> "os" [];
	"IPython.utils.path" -> "os" [];
	"IPython.utils.path" -> "sys" [];
	"IPython.utils.path" -> "errno" [];
	"IPython.utils.path" -> "shutil" [];
	"IPython.utils.path" -> "random" [];
	"IPython.utils.path" -> "glob" [];
	"IPython.utils.path" -> "ctypes" [];
	"IPython.utils.path" -> "winreg" [];
	"IPython.paths" -> "os.path" [];
	"IPython.paths" -> "tempfile" [];
	"IPython.paths" -> "warnings" [];
	"IPython.core.usage" -> "sys" [];
	"IPython.core.profiledir" -> "os" [];
	"IPython.core.profiledir" -> "shutil" [];
	"IPython.core.profiledir" -> "errno" [];
	"IPython.core.profiledir" -> "pathlib" [];
	"IPython.core.profiledir" -> "traitlets" [];
	"IPython.core.payload" -> "traitlets" [];
	"IPython.core.macro" -> "re" [];
	"IPython.core.logger" -> "glob" [];
	"IPython.core.logger" -> "io" [];
	"IPython.core.logger" -> "logging" [];
	"IPython.core.logger" -> "os" [];
	"IPython.core.logger" -> "time" [];
	"IPython.core.inputtransformer2" -> "ast" [];
	"IPython.core.inputtransformer2" -> "codeop" [];
	"IPython.core.inputtransformer2" -> "re" [];
	"IPython.core.inputtransformer2" -> "sys" [];
	"IPython.core.inputtransformer2" -> "tokenize" [];
	"IPython.core.inputtransformer2" -> "typing" [];
	"IPython.core.inputtransformer2" -> "warnings" [];
	"IPython.core.history" -> "atexit" [];
	"IPython.core.history" -> "datetime" [];
	"IPython.core.history" -> "pathlib" [];
	"IPython.core.history" -> "re" [];
	"IPython.core.history" -> "sqlite3" [];
	"IPython.core.history" -> "threading" [];
	"IPython.core.history" -> "decorator" [];
	"IPython.core.history" -> "traitlets" [];
	"decorator" -> "re" [];
	"decorator" -> "sys" [];
	"decorator" -> "inspect" [];
	"decorator" -> "operator" [];
	"decorator" -> "itertools" [];
	"decorator" -> "functools" [];
	"decorator" -> "contextlib" [];
	"IPython.core.formatters" -> "abc" [];
	"IPython.core.formatters" -> "sys" [];
	"IPython.core.formatters" -> "traceback" [];
	"IPython.core.formatters" -> "warnings" [];
	"IPython.core.formatters" -> "io" [];
	"IPython.core.formatters" -> "decorator" [];
	"IPython.core.formatters" -> "traitlets" [];
	"IPython.core.formatters" -> "typing" [];
	"IPython.core.formatters" -> "numpy" [];
	"IPython.lib.pretty" -> "contextlib" [];
	"IPython.lib.pretty" -> "datetime" [];
	"IPython.lib.pretty" -> "os" [];
	"IPython.lib.pretty" -> "re" [];
	"IPython.lib.pretty" -> "sys" [];
	"IPython.lib.pretty" -> "types" [];
	"IPython.lib.pretty" -> "collections" [];
	"IPython.lib.pretty" -> "inspect" [];
	"IPython.lib.pretty" -> "io" [];
	"IPython.lib.pretty" -> "warnings" [];
	"IPython.lib.pretty" -> "random" [];
	"IPython.core.extensions" -> "os" [];
	"IPython.core.extensions" -> "os.path" [];
	"IPython.core.extensions" -> "sys" [];
	"IPython.core.extensions" -> "importlib" [];
	"IPython.core.extensions" -> "traitlets" [];
	"IPython.core.display_trap" -> "sys" [];
	"IPython.core.display_trap" -> "traitlets" [];
	"IPython.core.debugger" -> "inspect" [];
	"IPython.core.debugger" -> "linecache" [];
	"IPython.core.debugger" -> "sys" [];
	"IPython.core.debugger" -> "re" [];
	"IPython.core.debugger" -> "os" [];
	"IPython.core.debugger" -> "IPython" [];
	"IPython.core.debugger" -> "contextlib" [];
	"IPython.core.debugger" -> "pdb" [];
	"IPython.core.debugger" -> "reprlib" [];
	"IPython.terminal.interactiveshell" -> "asyncio" [];
	"IPython.terminal.interactiveshell" -> "os" [];
	"IPython.terminal.interactiveshell" -> "sys" [];
	"IPython.terminal.interactiveshell" -> "warnings" [];
	"IPython.terminal.interactiveshell" -> "typing" [];
	"IPython.terminal.interactiveshell" -> "traitlets" [];
	"IPython.terminal.interactiveshell" -> "prompt_toolkit" [];
	"IPython.terminal.interactiveshell" -> "black" [];
	"IPython.terminal.interactiveshell" -> "yapf" [];
	"IPython.terminal.interactiveshell" -> "'yapf.yapflib'" [];
	"IPython.terminal.interactiveshell" -> "colorama" [];
	"black" -> "io" [];
	"black" -> "json" [];
	"black" -> "platform" [];
	"black" -> "re" [];
	"black" -> "sys" [];
	"black" -> "tokenize" [];
	"black" -> "traceback" [];
	"black" -> "contextlib" [];
	"black" -> "dataclasses" [];
	"black" -> "datetime" [];
	"black" -> "enum" [];
	"black" -> "pathlib" [];
	"black" -> "typing" [];
	"black" -> "click" [];
	"black" -> "mypy_extensions" [];
	"black" -> "pathspec" [];
	"black" -> "_black_version" [];
	"black" -> "multiprocessing" [];
	"black" -> "platformdirs" [];
	"black" -> "blib2to3" [];
	"blib2to3.pygram" -> "os" [];
	"blib2to3.pygram" -> "typing" [];
	"blib2to3.pgen2.tokenize" -> "builtins" [];
	"blib2to3.pgen2.tokenize" -> "sys" [];
	"blib2to3.pgen2.tokenize" -> "re" [];
	"blib2to3.pgen2.tokenize" -> "typing" [];
	"blib2to3.pgen2.tokenize" -> "codecs" [];
	"blib2to3.pgen2.pgen" -> "os" [];
	"blib2to3.pgen2.pgen" -> "typing" [];
	"blib2to3.pgen2.parse" -> "contextlib" [];
	"blib2to3.pgen2.parse" -> "typing" [];
	"blib2to3.pgen2.literals" -> "re" [];
	"blib2to3.pgen2.grammar" -> "os" [];
	"blib2to3.pgen2.grammar" -> "pickle" [];
	"blib2to3.pgen2.grammar" -> "tempfile" [];
	"blib2to3.pgen2.grammar" -> "typing" [];
	"blib2to3.pgen2.grammar" -> "pprint" [];
	"blib2to3.pgen2.driver" -> "io" [];
	"blib2to3.pgen2.driver" -> "logging" [];
	"blib2to3.pgen2.driver" -> "os" [];
	"blib2to3.pgen2.driver" -> "pkgutil" [];
	"blib2to3.pgen2.driver" -> "sys" [];
	"blib2to3.pgen2.driver" -> "contextlib" [];
	"blib2to3.pgen2.driver" -> "dataclasses" [];
	"blib2to3.pgen2.driver" -> "typing" [];
	"blib2to3.pgen2.conv" -> "re" [];
	"blib2to3.pgen2.conv" -> "pgen2" [];
	"blib2to3" -> "30fcd23745efe32ce681__mypyc" [];
	"blib2to3" -> "dataclasses" [];
	"blib2to3" -> "pkgutil" [];
	"blib2to3" -> "tempfile" [];
	"black.trans" -> "re" [];
	"black.trans" -> "abc" [];
	"black.trans" -> "collections" [];
	"black.trans" -> "dataclasses" [];
	"black.trans" -> "typing" [];
	"black.trans" -> "mypy_extensions" [];
	"black.strings" -> "re" [];
	"black.strings" -> "sys" [];
	"black.strings" -> "functools" [];
	"black.strings" -> "typing" [];
	"black.schema" -> "json" [];
	"black.schema" -> "typing" [];
	"black.rusty" -> "typing" [];
	"black.debug" -> "dataclasses" [];
	"black.debug" -> "typing" [];
	"black.brackets" -> "dataclasses" [];
	"black.brackets" -> "typing" [];
	"black._width_table" -> "typing" [];
	"platformdirs" -> "__future__" [];
	"platformdirs" -> "os" [];
	"platformdirs" -> "sys" [];
	"platformdirs" -> "typing" [];
	"platformdirs" -> "pathlib" [];
	"platformdirs.android" -> "__future__" [];
	"platformdirs.android" -> "os" [];
	"platformdirs.android" -> "re" [];
	"platformdirs.android" -> "sys" [];
	"platformdirs.android" -> "functools" [];
	"platformdirs.android" -> "typing" [];
	"platformdirs.android" -> "android" [];
	"platformdirs.android" -> "jnius" [];
	"platformdirs.unix" -> "__future__" [];
	"platformdirs.unix" -> "os" [];
	"platformdirs.unix" -> "sys" [];
	"platformdirs.unix" -> "configparser" [];
	"platformdirs.unix" -> "pathlib" [];
	"platformdirs.unix" -> "typing" [];
	"platformdirs.macos" -> "__future__" [];
	"platformdirs.macos" -> "os.path" [];
	"platformdirs.macos" -> "sys" [];
	"platformdirs.macos" -> "typing" [];
	"platformdirs.macos" -> "pathlib" [];
	"platformdirs.windows" -> "__future__" [];
	"platformdirs.windows" -> "os" [];
	"platformdirs.windows" -> "sys" [];
	"platformdirs.windows" -> "functools" [];
	"platformdirs.windows" -> "typing" [];
	"platformdirs.windows" -> "winreg" [];
	"platformdirs.windows" -> "ctypes" [];
	"platformdirs.version" -> "typing" [];
	"platformdirs.api" -> "__future__" [];
	"platformdirs.api" -> "os" [];
	"platformdirs.api" -> "abc" [];
	"platformdirs.api" -> "pathlib" [];
	"platformdirs.api" -> "typing" [];
	"black.concurrency" -> "asyncio" [];
	"black.concurrency" -> "logging" [];
	"black.concurrency" -> "os" [];
	"black.concurrency" -> "signal" [];
	"black.concurrency" -> "sys" [];
	"black.concurrency" -> "traceback" [];
	"black.concurrency" -> "multiprocessing" [];
	"black.concurrency" -> "pathlib" [];
	"black.concurrency" -> "typing" [];
	"black.concurrency" -> "mypy_extensions" [];
	"black.concurrency" -> "uvloop" [];
	"blib2to3.pytree" -> "typing" [];
	"blib2to3.pytree" -> "sys" [];
	"blib2to3.pytree" -> "io" [];
	"blib2to3.pgen2.token" -> "typing" [];
	"black.report" -> "dataclasses" [];
	"black.report" -> "enum" [];
	"black.report" -> "pathlib" [];
	"black.report" -> "click" [];
	"black.ranges" -> "difflib" [];
	"black.ranges" -> "dataclasses" [];
	"black.ranges" -> "typing" [];
	"black.parsing" -> "ast" [];
	"black.parsing" -> "sys" [];
	"black.parsing" -> "warnings" [];
	"black.parsing" -> "blib2to3" [];
	"black.output" -> "json" [];
	"black.output" -> "re" [];
	"black.output" -> "tempfile" [];
	"black.output" -> "typing" [];
	"black.output" -> "click" [];
	"black.output" -> "mypy_extensions" [];
	"black.output" -> "difflib" [];
	"black.nodes" -> "sys" [];
	"black.nodes" -> "typing" [];
	"black.nodes" -> "typing_extensions" [];
	"black.nodes" -> "mypy_extensions" [];
	"black.nodes" -> "blib2to3" [];
	"black.mode" -> "dataclasses" [];
	"black.mode" -> "enum" [];
	"black.mode" -> "hashlib" [];
	"black.mode" -> "operator" [];
	"black.mode" -> "typing" [];
	"black.lines" -> "itertools" [];
	"black.lines" -> "math" [];
	"black.lines" -> "dataclasses" [];
	"black.lines" -> "typing" [];
	"black.linegen" -> "re" [];
	"black.linegen" -> "sys" [];
	"black.linegen" -> "dataclasses" [];
	"black.linegen" -> "enum" [];
	"black.linegen" -> "functools" [];
	"black.linegen" -> "typing" [];
	"black.handle_ipynb_magics" -> "ast" [];
	"black.handle_ipynb_magics" -> "collections" [];
	"black.handle_ipynb_magics" -> "dataclasses" [];
	"black.handle_ipynb_magics" -> "re" [];
	"black.handle_ipynb_magics" -> "secrets" [];
	"black.handle_ipynb_magics" -> "sys" [];
	"black.handle_ipynb_magics" -> "functools" [];
	"black.handle_ipynb_magics" -> "typing" [];
	"black.handle_ipynb_magics" -> "typing_extensions" [];
	"black.handle_ipynb_magics" -> "tokenize_rt" [];
	"black.files" -> "io" [];
	"black.files" -> "os" [];
	"black.files" -> "sys" [];
	"black.files" -> "functools" [];
	"black.files" -> "pathlib" [];
	"black.files" -> "re" [];
	"black.files" -> "typing" [];
	"black.files" -> "mypy_extensions" [];
	"black.files" -> "pathspec" [];
	"black.files" -> "tomllib" [];
	"black.files" -> "colorama" [];
	"black.files" -> "'colorama.initialise'" [];
	"tomli._parser" -> "__future__" [];
	"tomli._parser" -> "string" [];
	"tomli._parser" -> "sys" [];
	"tomli._parser" -> "types" [];
	"tomli._parser" -> "typing" [];
	"tomli._parser" -> "warnings" [];
	"tomli._types" -> "typing" [];
	"tomli._re" -> "__future__" [];
	"tomli._re" -> "datetime" [];
	"tomli._re" -> "functools" [];
	"tomli._re" -> "re" [];
	"tomli._re" -> "typing" [];
	"black.comments" -> "re" [];
	"black.comments" -> "dataclasses" [];
	"black.comments" -> "functools" [];
	"black.comments" -> "typing" [];
	"black.cache" -> "hashlib" [];
	"black.cache" -> "os" [];
	"black.cache" -> "pickle" [];
	"black.cache" -> "sys" [];
	"black.cache" -> "tempfile" [];
	"black.cache" -> "dataclasses" [];
	"black.cache" -> "pathlib" [];
	"black.cache" -> "typing" [];
	"black.cache" -> "platformdirs" [];
	"black.cache" -> "_black_version" [];
	"black.cache" -> "typing_extensions" [];
	"pathspec.patterns.gitwildmatch" -> "re" [];
	"pathspec.patterns.gitwildmatch" -> "warnings" [];
	"pathspec.patterns.gitwildmatch" -> "typing" [];
	"pathspec.patterns.gitwildmatch" -> "pathspec" [];
	"pathspec.pattern" -> "dataclasses" [];
	"pathspec.pattern" -> "re" [];
	"pathspec.pattern" -> "warnings" [];
	"pathspec.pattern" -> "typing" [];
	"pathspec.util" -> "os" [];
	"pathspec.util" -> "os.path" [];
	"pathspec.util" -> "pathlib" [];
	"pathspec.util" -> "posixpath" [];
	"pathspec.util" -> "stat" [];
	"pathspec.util" -> "sys" [];
	"pathspec.util" -> "warnings" [];
	"pathspec.util" -> "dataclasses" [];
	"pathspec.util" -> "typing" [];
	"pathspec.pathspec" -> "itertools" [];
	"pathspec.pathspec" -> "typing" [];
	"pathspec.gitignore" -> "typing" [];
	"mypy_extensions" -> "typing" [];
	"mypy_extensions" -> "sys" [];
	"mypy_extensions" -> "warnings" [];
	"click.core" -> "enum" [];
	"click.core" -> "errno" [];
	"click.core" -> "inspect" [];
	"click.core" -> "os" [];
	"click.core" -> "sys" [];
	"click.core" -> "typing" [];
	"click.core" -> "collections" [];
	"click.core" -> "contextlib" [];
	"click.core" -> "functools" [];
	"click.core" -> "gettext" [];
	"click.core" -> "itertools" [];
	"click.core" -> "types" [];
	"click.core" -> "typing_extensions" [];
	"click.decorators" -> "inspect" [];
	"click.decorators" -> "types" [];
	"click.decorators" -> "typing" [];
	"click.decorators" -> "functools" [];
	"click.decorators" -> "gettext" [];
	"click.decorators" -> "typing_extensions" [];
	"click.decorators" -> "importlib" [];
	"click.decorators" -> "importlib_metadata" [];
	"click.shell_completion" -> "os" [];
	"click.shell_completion" -> "re" [];
	"click.shell_completion" -> "typing" [];
	"click.shell_completion" -> "gettext" [];
	"click.shell_completion" -> "subprocess" [];
	"click.utils" -> "os" [];
	"click.utils" -> "re" [];
	"click.utils" -> "sys" [];
	"click.utils" -> "typing" [];
	"click.utils" -> "functools" [];
	"click.utils" -> "types" [];
	"click.utils" -> "typing_extensions" [];
	"click.utils" -> "errno" [];
	"click.utils" -> "glob" [];
	"click._compat" -> "codecs" [];
	"click._compat" -> "io" [];
	"click._compat" -> "os" [];
	"click._compat" -> "re" [];
	"click._compat" -> "sys" [];
	"click._compat" -> "typing" [];
	"click._compat" -> "weakref" [];
	"click._compat" -> "errno" [];
	"click._compat" -> "random" [];
	"click._compat" -> "locale" [];
	"click._compat" -> "colorama" [];
	"click._winconsole" -> "io" [];
	"click._winconsole" -> "sys" [];
	"click._winconsole" -> "time" [];
	"click._winconsole" -> "typing" [];
	"click._winconsole" -> "ctypes" [];
	"click._winconsole" -> "msvcrt" [];
	"click.termui" -> "inspect" [];
	"click.termui" -> "io" [];
	"click.termui" -> "itertools" [];
	"click.termui" -> "sys" [];
	"click.termui" -> "typing" [];
	"click.termui" -> "gettext" [];
	"click.termui" -> "getpass" [];
	"click._termui_impl" -> "contextlib" [];
	"click._termui_impl" -> "math" [];
	"click._termui_impl" -> "os" [];
	"click._termui_impl" -> "sys" [];
	"click._termui_impl" -> "time" [];
	"click._termui_impl" -> "typing" [];
	"click._termui_impl" -> "gettext" [];
	"click._termui_impl" -> "io" [];
	"click._termui_impl" -> "types" [];
	"click._termui_impl" -> "operator" [];
	"click._termui_impl" -> "shutil" [];
	"click._termui_impl" -> "tempfile" [];
	"click._termui_impl" -> "subprocess" [];
	"click._termui_impl" -> "webbrowser" [];
	"click._termui_impl" -> "msvcrt" [];
	"click._termui_impl" -> "tty" [];
	"click._termui_impl" -> "termios" [];
	"click.parser" -> "typing" [];
	"click.parser" -> "collections" [];
	"click.parser" -> "gettext" [];
	"click.parser" -> "typing_extensions" [];
	"click.parser" -> "shlex" [];
	"click.parser" -> "difflib" [];
	"click.globals" -> "typing" [];
	"click.globals" -> "threading" [];
	"click.globals" -> "typing_extensions" [];
	"click.formatting" -> "typing" [];
	"click.formatting" -> "contextlib" [];
	"click.formatting" -> "gettext" [];
	"click.formatting" -> "shutil" [];
	"click._textwrap" -> "textwrap" [];
	"click._textwrap" -> "typing" [];
	"click._textwrap" -> "contextlib" [];
	"click.exceptions" -> "typing" [];
	"click.exceptions" -> "gettext" [];
	"click.types" -> "os" [];
	"click.types" -> "stat" [];
	"click.types" -> "sys" [];
	"click.types" -> "typing" [];
	"click.types" -> "datetime" [];
	"click.types" -> "gettext" [];
	"click.types" -> "typing_extensions" [];
	"click.types" -> "operator" [];
	"click.types" -> "uuid" [];
	"click.types" -> "pathlib" [];
	"IPython.terminal.shortcuts.auto_suggest" -> "re" [];
	"IPython.terminal.shortcuts.auto_suggest" -> "tokenize" [];
	"IPython.terminal.shortcuts.auto_suggest" -> "io" [];
	"IPython.terminal.shortcuts.auto_suggest" -> "typing" [];
	"IPython.terminal.shortcuts.auto_suggest" -> "warnings" [];
	"prompt_toolkit.document" -> "__future__" [];
	"prompt_toolkit.document" -> "bisect" [];
	"prompt_toolkit.document" -> "re" [];
	"prompt_toolkit.document" -> "string" [];
	"prompt_toolkit.document" -> "weakref" [];
	"prompt_toolkit.document" -> "typing" [];
	"prompt_toolkit.selection" -> "__future__" [];
	"prompt_toolkit.selection" -> "enum" [];
	"prompt_toolkit.clipboard" -> "__future__" [];
	"prompt_toolkit.clipboard.in_memory" -> "__future__" [];
	"prompt_toolkit.clipboard.in_memory" -> "collections" [];
	"prompt_toolkit.clipboard.base" -> "__future__" [];
	"prompt_toolkit.clipboard.base" -> "abc" [];
	"prompt_toolkit.clipboard.base" -> "typing" [];
	"prompt_toolkit.key_binding.bindings.named_commands" -> "__future__" [];
	"prompt_toolkit.key_binding.bindings.named_commands" -> "typing" [];
	"prompt_toolkit.application.run_in_terminal" -> "__future__" [];
	"prompt_toolkit.application.run_in_terminal" -> "asyncio" [];
	"prompt_toolkit.application.run_in_terminal" -> "contextlib" [];
	"prompt_toolkit.application.run_in_terminal" -> "typing" [];
	"prompt_toolkit.application" -> "__future__" [];
	"prompt_toolkit.application.dummy" -> "__future__" [];
	"prompt_toolkit.application.dummy" -> "typing" [];
	"prompt_toolkit.input" -> "__future__" [];
	"prompt_toolkit.input.defaults" -> "__future__" [];
	"prompt_toolkit.input.defaults" -> "io" [];
	"prompt_toolkit.input.defaults" -> "sys" [];
	"prompt_toolkit.input.defaults" -> "typing" [];
	"prompt_toolkit.input.posix_pipe" -> "__future__" [];
	"prompt_toolkit.input.posix_pipe" -> "sys" [];
	"prompt_toolkit.input.posix_pipe" -> "os" [];
	"prompt_toolkit.input.posix_pipe" -> "contextlib" [];
	"prompt_toolkit.input.posix_pipe" -> "typing" [];
	"prompt_toolkit.utils" -> "__future__" [];
	"prompt_toolkit.utils" -> "os" [];
	"prompt_toolkit.utils" -> "signal" [];
	"prompt_toolkit.utils" -> "sys" [];
	"prompt_toolkit.utils" -> "threading" [];
	"prompt_toolkit.utils" -> "collections" [];
	"prompt_toolkit.utils" -> "typing" [];
	"prompt_toolkit.utils" -> "wcwidth" [];
	"prompt_toolkit.output.windows10" -> "__future__" [];
	"prompt_toolkit.output.windows10" -> "sys" [];
	"prompt_toolkit.output.windows10" -> "ctypes" [];
	"prompt_toolkit.output.windows10" -> "typing" [];
	"prompt_toolkit.output.win32" -> "__future__" [];
	"prompt_toolkit.output.win32" -> "sys" [];
	"prompt_toolkit.output.win32" -> "os" [];
	"prompt_toolkit.output.win32" -> "ctypes" [];
	"prompt_toolkit.output.win32" -> "typing" [];
	"prompt_toolkit.cursor_shapes" -> "__future__" [];
	"prompt_toolkit.cursor_shapes" -> "abc" [];
	"prompt_toolkit.cursor_shapes" -> "enum" [];
	"prompt_toolkit.cursor_shapes" -> "typing" [];
	"prompt_toolkit.key_binding.vi_state" -> "__future__" [];
	"prompt_toolkit.key_binding.vi_state" -> "enum" [];
	"prompt_toolkit.key_binding.vi_state" -> "typing" [];
	"prompt_toolkit.key_binding.vi_state" -> "'prompt_toolkit.key_binding.key_bindings.vi'" [];
	"prompt_toolkit.output.vt100" -> "__future__" [];
	"prompt_toolkit.output.vt100" -> "io" [];
	"prompt_toolkit.output.vt100" -> "os" [];
	"prompt_toolkit.output.vt100" -> "sys" [];
	"prompt_toolkit.output.vt100" -> "typing" [];
	"prompt_toolkit.output.flush_stdout" -> "__future__" [];
	"prompt_toolkit.output.flush_stdout" -> "errno" [];
	"prompt_toolkit.output.flush_stdout" -> "os" [];
	"prompt_toolkit.output.flush_stdout" -> "sys" [];
	"prompt_toolkit.output.flush_stdout" -> "contextlib" [];
	"prompt_toolkit.output.flush_stdout" -> "typing" [];
	"prompt_toolkit.output.color_depth" -> "__future__" [];
	"prompt_toolkit.output.color_depth" -> "os" [];
	"prompt_toolkit.output.color_depth" -> "enum" [];
	"prompt_toolkit.output.defaults" -> "__future__" [];
	"prompt_toolkit.output.defaults" -> "sys" [];
	"prompt_toolkit.output.defaults" -> "typing" [];
	"prompt_toolkit.output.conemu" -> "__future__" [];
	"prompt_toolkit.output.conemu" -> "sys" [];
	"prompt_toolkit.output.conemu" -> "typing" [];
	"prompt_toolkit.output.plain_text" -> "__future__" [];
	"prompt_toolkit.output.plain_text" -> "typing" [];
	"prompt_toolkit.output.base" -> "__future__" [];
	"prompt_toolkit.output.base" -> "abc" [];
	"prompt_toolkit.output.base" -> "typing" [];
	"prompt_toolkit.win32_types" -> "__future__" [];
	"prompt_toolkit.win32_types" -> "ctypes" [];
	"prompt_toolkit.win32_types" -> "typing" [];
	"prompt_toolkit.data_structures" -> "__future__" [];
	"prompt_toolkit.data_structures" -> "typing" [];
	"wcwidth.wcwidth" -> "__future__" [];
	"wcwidth.wcwidth" -> "os" [];
	"wcwidth.wcwidth" -> "sys" [];
	"wcwidth.wcwidth" -> "warnings" [];
	"wcwidth.wcwidth" -> "functools" [];
	"wcwidth.wcwidth" -> "backports" [];
	"prompt_toolkit.input.win32_pipe" -> "__future__" [];
	"prompt_toolkit.input.win32_pipe" -> "sys" [];
	"prompt_toolkit.input.win32_pipe" -> "contextlib" [];
	"prompt_toolkit.input.win32_pipe" -> "ctypes" [];
	"prompt_toolkit.input.win32_pipe" -> "typing" [];
	"prompt_toolkit.input.vt100_parser" -> "__future__" [];
	"prompt_toolkit.input.vt100_parser" -> "re" [];
	"prompt_toolkit.input.vt100_parser" -> "typing" [];
	"prompt_toolkit.input.ansi_escape_sequences" -> "__future__" [];
	"prompt_toolkit.eventloop.win32" -> "__future__" [];
	"prompt_toolkit.eventloop.win32" -> "sys" [];
	"prompt_toolkit.eventloop.win32" -> "ctypes" [];
	"prompt_toolkit.input.vt100" -> "__future__" [];
	"prompt_toolkit.input.vt100" -> "sys" [];
	"prompt_toolkit.input.vt100" -> "contextlib" [];
	"prompt_toolkit.input.vt100" -> "io" [];
	"prompt_toolkit.input.vt100" -> "termios" [];
	"prompt_toolkit.input.vt100" -> "tty" [];
	"prompt_toolkit.input.vt100" -> "asyncio" [];
	"prompt_toolkit.input.vt100" -> "typing" [];
	"prompt_toolkit.input.posix_utils" -> "__future__" [];
	"prompt_toolkit.input.posix_utils" -> "os" [];
	"prompt_toolkit.input.posix_utils" -> "select" [];
	"prompt_toolkit.input.posix_utils" -> "codecs" [];
	"prompt_toolkit.input.win32" -> "__future__" [];
	"prompt_toolkit.input.win32" -> "os" [];
	"prompt_toolkit.input.win32" -> "sys" [];
	"prompt_toolkit.input.win32" -> "abc" [];
	"prompt_toolkit.input.win32" -> "asyncio" [];
	"prompt_toolkit.input.win32" -> "contextlib" [];
	"prompt_toolkit.input.win32" -> "msvcrt" [];
	"prompt_toolkit.input.win32" -> "ctypes" [];
	"prompt_toolkit.input.win32" -> "typing" [];
	"prompt_toolkit.mouse_events" -> "__future__" [];
	"prompt_toolkit.mouse_events" -> "enum" [];
	"prompt_toolkit.input.base" -> "__future__" [];
	"prompt_toolkit.input.base" -> "abc" [];
	"prompt_toolkit.input.base" -> "contextlib" [];
	"prompt_toolkit.input.base" -> "typing" [];
	"prompt_toolkit.application.application" -> "__future__" [];
	"prompt_toolkit.application.application" -> "asyncio" [];
	"prompt_toolkit.application.application" -> "contextvars" [];
	"prompt_toolkit.application.application" -> "os" [];
	"prompt_toolkit.application.application" -> "re" [];
	"prompt_toolkit.application.application" -> "signal" [];
	"prompt_toolkit.application.application" -> "sys" [];
	"prompt_toolkit.application.application" -> "threading" [];
	"prompt_toolkit.application.application" -> "time" [];
	"prompt_toolkit.application.application" -> "contextlib" [];
	"prompt_toolkit.application.application" -> "subprocess" [];
	"prompt_toolkit.application.application" -> "traceback" [];
	"prompt_toolkit.application.application" -> "typing" [];
	"prompt_toolkit.application.application" -> "pdb" [];
	"prompt_toolkit.application.application" -> "types" [];
	"prompt_toolkit.application.application" -> "ctypes" [];
	"prompt_toolkit.renderer" -> "__future__" [];
	"prompt_toolkit.renderer" -> "asyncio" [];
	"prompt_toolkit.renderer" -> "collections" [];
	"prompt_toolkit.renderer" -> "enum" [];
	"prompt_toolkit.renderer" -> "typing" [];
	"prompt_toolkit.layout.screen" -> "__future__" [];
	"prompt_toolkit.layout.screen" -> "collections" [];
	"prompt_toolkit.layout.screen" -> "typing" [];
	"prompt_toolkit.layout" -> "__future__" [];
	"prompt_toolkit.layout.scrollable_pane" -> "__future__" [];
	"prompt_toolkit.layout.menus" -> "__future__" [];
	"prompt_toolkit.layout.menus" -> "math" [];
	"prompt_toolkit.layout.menus" -> "itertools" [];
	"prompt_toolkit.layout.menus" -> "typing" [];
	"prompt_toolkit.layout.menus" -> "weakref" [];
	"prompt_toolkit.layout.utils" -> "__future__" [];
	"prompt_toolkit.layout.utils" -> "typing" [];
	"prompt_toolkit.layout.utils" -> "typing_extensions" [];
	"prompt_toolkit.formatted_text.base" -> "__future__" [];
	"prompt_toolkit.formatted_text.base" -> "typing" [];
	"prompt_toolkit.formatted_text.base" -> "typing_extensions" [];
	"prompt_toolkit.completion" -> "__future__" [];
	"prompt_toolkit.completion.word_completer" -> "__future__" [];
	"prompt_toolkit.completion.word_completer" -> "typing" [];
	"prompt_toolkit.completion.nested" -> "__future__" [];
	"prompt_toolkit.completion.nested" -> "typing" [];
	"prompt_toolkit.completion.fuzzy_completer" -> "__future__" [];
	"prompt_toolkit.completion.fuzzy_completer" -> "re" [];
	"prompt_toolkit.completion.fuzzy_completer" -> "typing" [];
	"prompt_toolkit.completion.filesystem" -> "__future__" [];
	"prompt_toolkit.completion.filesystem" -> "os" [];
	"prompt_toolkit.completion.filesystem" -> "typing" [];
	"prompt_toolkit.completion.deduplicate" -> "__future__" [];
	"prompt_toolkit.completion.deduplicate" -> "typing" [];
	"prompt_toolkit.completion.base" -> "__future__" [];
	"prompt_toolkit.completion.base" -> "abc" [];
	"prompt_toolkit.completion.base" -> "typing" [];
	"prompt_toolkit.layout.margins" -> "__future__" [];
	"prompt_toolkit.layout.margins" -> "abc" [];
	"prompt_toolkit.layout.margins" -> "typing" [];
	"prompt_toolkit.layout.dimension" -> "__future__" [];
	"prompt_toolkit.layout.dimension" -> "typing" [];
	"prompt_toolkit.layout.dimension" -> "typing_extensions" [];
	"prompt_toolkit.layout.mouse_handlers" -> "__future__" [];
	"prompt_toolkit.layout.mouse_handlers" -> "collections" [];
	"prompt_toolkit.layout.mouse_handlers" -> "typing" [];
	"prompt_toolkit.layout.layout" -> "__future__" [];
	"prompt_toolkit.layout.layout" -> "typing" [];
	"prompt_toolkit.layout.dummy" -> "__future__" [];
	"prompt_toolkit.layout.containers" -> "__future__" [];
	"prompt_toolkit.layout.containers" -> "abc" [];
	"prompt_toolkit.layout.containers" -> "enum" [];
	"prompt_toolkit.layout.containers" -> "functools" [];
	"prompt_toolkit.layout.containers" -> "typing" [];
	"prompt_toolkit.layout.containers" -> "typing_extensions" [];
	"prompt_toolkit.formatted_text.utils" -> "__future__" [];
	"prompt_toolkit.formatted_text.utils" -> "typing" [];
	"prompt_toolkit.key_binding.emacs_state" -> "__future__" [];
	"prompt_toolkit.key_binding.defaults" -> "__future__" [];
	"prompt_toolkit.key_binding.bindings.vi" -> "__future__" [];
	"prompt_toolkit.key_binding.bindings.vi" -> "codecs" [];
	"prompt_toolkit.key_binding.bindings.vi" -> "string" [];
	"prompt_toolkit.key_binding.bindings.vi" -> "enum" [];
	"prompt_toolkit.key_binding.bindings.vi" -> "itertools" [];
	"prompt_toolkit.key_binding.bindings.vi" -> "typing" [];
	"prompt_toolkit.key_binding.bindings.search" -> "__future__" [];
	"prompt_toolkit.key_binding.bindings.search" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.digraphs" -> "__future__" [];
	"prompt_toolkit.filters.app" -> "__future__" [];
	"prompt_toolkit.filters.app" -> "typing" [];
	"prompt_toolkit.filters.base" -> "__future__" [];
	"prompt_toolkit.filters.base" -> "abc" [];
	"prompt_toolkit.filters.base" -> "typing" [];
	"prompt_toolkit.key_binding.bindings.mouse" -> "__future__" [];
	"prompt_toolkit.key_binding.bindings.mouse" -> "sys" [];
	"prompt_toolkit.key_binding.bindings.mouse" -> "typing" [];
	"prompt_toolkit.key_binding.bindings.emacs" -> "__future__" [];
	"prompt_toolkit.key_binding.bindings.cpr" -> "__future__" [];
	"prompt_toolkit.key_binding.bindings.basic" -> "__future__" [];
	"prompt_toolkit.key_binding.bindings.page_navigation" -> "__future__" [];
	"prompt_toolkit.key_binding.bindings.scroll" -> "__future__" [];
	"prompt_toolkit.input.typeahead" -> "__future__" [];
	"prompt_toolkit.input.typeahead" -> "collections" [];
	"prompt_toolkit.eventloop.utils" -> "__future__" [];
	"prompt_toolkit.eventloop.utils" -> "asyncio" [];
	"prompt_toolkit.eventloop.utils" -> "contextvars" [];
	"prompt_toolkit.eventloop.utils" -> "sys" [];
	"prompt_toolkit.eventloop.utils" -> "time" [];
	"prompt_toolkit.eventloop.utils" -> "types" [];
	"prompt_toolkit.eventloop.utils" -> "typing" [];
	"prompt_toolkit.cache" -> "__future__" [];
	"prompt_toolkit.cache" -> "collections" [];
	"prompt_toolkit.cache" -> "functools" [];
	"prompt_toolkit.cache" -> "typing" [];
	"prompt_toolkit.application.current" -> "__future__" [];
	"prompt_toolkit.application.current" -> "contextlib" [];
	"prompt_toolkit.application.current" -> "contextvars" [];
	"prompt_toolkit.application.current" -> "typing" [];
	"prompt_toolkit.eventloop" -> "__future__" [];
	"prompt_toolkit.eventloop.inputhook" -> "__future__" [];
	"prompt_toolkit.eventloop.inputhook" -> "asyncio" [];
	"prompt_toolkit.eventloop.inputhook" -> "os" [];
	"prompt_toolkit.eventloop.inputhook" -> "select" [];
	"prompt_toolkit.eventloop.inputhook" -> "selectors" [];
	"prompt_toolkit.eventloop.inputhook" -> "sys" [];
	"prompt_toolkit.eventloop.inputhook" -> "threading" [];
	"prompt_toolkit.eventloop.inputhook" -> "typing" [];
	"prompt_toolkit.eventloop.inputhook" -> "_typeshed" [];
	"prompt_toolkit.eventloop.inputhook" -> "typing_extensions" [];
	"prompt_toolkit.eventloop.async_generator" -> "__future__" [];
	"prompt_toolkit.eventloop.async_generator" -> "asyncio" [];
	"prompt_toolkit.eventloop.async_generator" -> "contextlib" [];
	"prompt_toolkit.eventloop.async_generator" -> "queue" [];
	"prompt_toolkit.eventloop.async_generator" -> "typing" [];
	"prompt_toolkit.key_binding.bindings.completion" -> "__future__" [];
	"prompt_toolkit.key_binding.bindings.completion" -> "asyncio" [];
	"prompt_toolkit.key_binding.bindings.completion" -> "math" [];
	"prompt_toolkit.key_binding.bindings.completion" -> "typing" [];
	"prompt_toolkit.shortcuts.prompt" -> "__future__" [];
	"prompt_toolkit.shortcuts.prompt" -> "asyncio" [];
	"prompt_toolkit.shortcuts.prompt" -> "contextlib" [];
	"prompt_toolkit.shortcuts.prompt" -> "enum" [];
	"prompt_toolkit.shortcuts.prompt" -> "functools" [];
	"prompt_toolkit.shortcuts.prompt" -> "typing" [];
	"prompt_toolkit.widgets.toolbars" -> "__future__" [];
	"prompt_toolkit.widgets.toolbars" -> "typing" [];
	"prompt_toolkit.widgets" -> "__future__" [];
	"prompt_toolkit.widgets.menus" -> "__future__" [];
	"prompt_toolkit.widgets.menus" -> "typing" [];
	"prompt_toolkit.widgets.dialogs" -> "__future__" [];
	"prompt_toolkit.widgets.dialogs" -> "typing" [];
	"prompt_toolkit.key_binding.bindings.focus" -> "__future__" [];
	"prompt_toolkit.widgets.base" -> "__future__" [];
	"prompt_toolkit.widgets.base" -> "functools" [];
	"prompt_toolkit.widgets.base" -> "typing" [];
	"prompt_toolkit.validation" -> "__future__" [];
	"prompt_toolkit.validation" -> "abc" [];
	"prompt_toolkit.validation" -> "typing" [];
	"prompt_toolkit.lexers" -> "__future__" [];
	"prompt_toolkit.lexers.pygments" -> "__future__" [];
	"prompt_toolkit.lexers.pygments" -> "re" [];
	"prompt_toolkit.lexers.pygments" -> "abc" [];
	"prompt_toolkit.lexers.pygments" -> "typing" [];
	"prompt_toolkit.lexers.base" -> "__future__" [];
	"prompt_toolkit.lexers.base" -> "abc" [];
	"prompt_toolkit.lexers.base" -> "typing" [];
	"prompt_toolkit.key_binding.bindings.open_in_editor" -> "__future__" [];
	"prompt_toolkit.key_binding.bindings.auto_suggest" -> "__future__" [];
	"prompt_toolkit.key_binding.bindings.auto_suggest" -> "re" [];
	"prompt_toolkit.search" -> "__future__" [];
	"prompt_toolkit.search" -> "enum" [];
	"prompt_toolkit.search" -> "typing" [];
	"prompt_toolkit.layout.controls" -> "__future__" [];
	"prompt_toolkit.layout.controls" -> "time" [];
	"prompt_toolkit.layout.controls" -> "abc" [];
	"prompt_toolkit.layout.controls" -> "typing" [];
	"prompt_toolkit.keys" -> "__future__" [];
	"prompt_toolkit.keys" -> "enum" [];
	"prompt_toolkit.key_binding.key_processor" -> "__future__" [];
	"prompt_toolkit.key_binding.key_processor" -> "weakref" [];
	"prompt_toolkit.key_binding.key_processor" -> "asyncio" [];
	"prompt_toolkit.key_binding.key_processor" -> "collections" [];
	"prompt_toolkit.key_binding.key_processor" -> "typing" [];
	"prompt_toolkit.key_binding.key_bindings" -> "__future__" [];
	"prompt_toolkit.key_binding.key_bindings" -> "abc" [];
	"prompt_toolkit.key_binding.key_bindings" -> "inspect" [];
	"prompt_toolkit.key_binding.key_bindings" -> "typing" [];
	"prompt_toolkit.key_binding" -> "__future__" [];
	"prompt_toolkit.buffer" -> "__future__" [];
	"prompt_toolkit.buffer" -> "asyncio" [];
	"prompt_toolkit.buffer" -> "logging" [];
	"prompt_toolkit.buffer" -> "os" [];
	"prompt_toolkit.buffer" -> "re" [];
	"prompt_toolkit.buffer" -> "shlex" [];
	"prompt_toolkit.buffer" -> "shutil" [];
	"prompt_toolkit.buffer" -> "subprocess" [];
	"prompt_toolkit.buffer" -> "tempfile" [];
	"prompt_toolkit.buffer" -> "collections" [];
	"prompt_toolkit.buffer" -> "enum" [];
	"prompt_toolkit.buffer" -> "functools" [];
	"prompt_toolkit.buffer" -> "typing" [];
	"IPython.terminal.shortcuts.filters" -> "ast" [];
	"IPython.terminal.shortcuts.filters" -> "re" [];
	"IPython.terminal.shortcuts.filters" -> "signal" [];
	"IPython.terminal.shortcuts.filters" -> "sys" [];
	"IPython.terminal.shortcuts.filters" -> "typing" [];
	"IPython.terminal.shortcuts" -> "os" [];
	"IPython.terminal.shortcuts" -> "signal" [];
	"IPython.terminal.shortcuts" -> "sys" [];
	"IPython.terminal.shortcuts" -> "warnings" [];
	"IPython.terminal.shortcuts" -> "dataclasses" [];
	"IPython.terminal.shortcuts" -> "typing" [];
	"IPython.lib.clipboard" -> "os" [];
	"IPython.lib.clipboard" -> "subprocess" [];
	"IPython.lib.clipboard" -> "win32clipboard" [];
	"IPython.terminal.shortcuts.auto_match" -> "re" [];
	"IPython.terminal.ptutils" -> "unicodedata" [];
	"IPython.terminal.ptutils" -> "wcwidth" [];
	"IPython.terminal.ptutils" -> "os" [];
	"IPython.terminal.ptutils" -> "sys" [];
	"IPython.terminal.ptutils" -> "traceback" [];
	"IPython.terminal.prompts" -> "sys" [];
	"IPython.terminal.pt_inputhooks" -> "importlib" [];
	"IPython.terminal.pt_inputhooks" -> "os" [];
	"IPython.terminal.pt_inputhooks" -> "typing" [];
	"IPython.external.qt_for_kernel" -> "os" [];
	"IPython.external.qt_for_kernel" -> "sys" [];
	"IPython.external" -> "typing" [];
	"IPython.external.qt_loaders" -> "sys" [];
	"IPython.external.qt_loaders" -> "os" [];
	"IPython.external.qt_loaders" -> "types" [];
	"IPython.external.qt_loaders" -> "functools" [];
	"IPython.external.qt_loaders" -> "operator" [];
	"IPython.external.qt_loaders" -> "sip" [];
	"IPython.terminal.magics" -> "logging" [];
	"IPython.terminal.magics" -> "os" [];
	"IPython.terminal.magics" -> "sys" [];
	"IPython.terminal.debugger" -> "asyncio" [];
	"IPython.terminal.debugger" -> "os" [];
	"IPython.terminal.debugger" -> "sys" [];
	"IPython.terminal.debugger" -> "pathlib" [];
	"IPython.terminal.debugger" -> "prompt_toolkit" [];
	"IPython.terminal.debugger" -> "types" [];
	"IPython.terminal.debugger" -> "pdb" [];
	"IPython.terminal.embed" -> "sys" [];
	"IPython.terminal.embed" -> "warnings" [];
	"IPython.terminal.embed" -> "traitlets" [];
	"IPython.terminal.embed" -> "typing" [];
	"IPython.terminal.ipapp" -> "logging" [];
	"IPython.terminal.ipapp" -> "os" [];
	"IPython.terminal.ipapp" -> "sys" [];
	"IPython.terminal.ipapp" -> "warnings" [];
	"IPython.terminal.ipapp" -> "traitlets" [];
	"IPython.extensions.storemagic" -> "inspect" [];
	"IPython.extensions.storemagic" -> "os" [];
	"IPython.extensions.storemagic" -> "sys" [];
	"IPython.extensions.storemagic" -> "textwrap" [];
	"IPython.extensions.storemagic" -> "traitlets" [];
	"IPython.extensions.storemagic" -> "pprint" [];
	"IPython.core.shellapp" -> "glob" [];
	"IPython.core.shellapp" -> "itertools" [];
	"IPython.core.shellapp" -> "os" [];
	"IPython.core.shellapp" -> "sys" [];
	"IPython.core.shellapp" -> "traitlets" [];
	"IPython.core.application" -> "atexit" [];
	"IPython.core.application" -> "copy" [];
	"IPython.core.application" -> "logging" [];
	"IPython.core.application" -> "os" [];
	"IPython.core.application" -> "shutil" [];
	"IPython.core.application" -> "sys" [];
	"IPython.core.application" -> "pathlib" [];
	"IPython.core.application" -> "traitlets" [];
	"IPython.core.crashhandler" -> "sys" [];
	"IPython.core.crashhandler" -> "traceback" [];
	"IPython.core.crashhandler" -> "pprint" [];
	"IPython.core.crashhandler" -> "pathlib" [];
	"IPython.core.crashhandler" -> "typing" [];
	"IPython.utils.sysinfo" -> "os" [];
	"IPython.utils.sysinfo" -> "platform" [];
	"IPython.utils.sysinfo" -> "pprint" [];
	"IPython.utils.sysinfo" -> "sys" [];
	"IPython.utils.sysinfo" -> "subprocess" [];
	"IPython.utils.sysinfo" -> "pathlib" [];
	"IPython.utils.sysinfo" -> "warnings" [];
	"prompt_toolkit" -> "__future__" [];
	"prompt_toolkit" -> "re" [];
	"prompt_toolkit" -> "importlib" [];
	"prompt_toolkit.styles.pygments" -> "__future__" [];
	"prompt_toolkit.styles.pygments" -> "typing" [];
	"prompt_toolkit.styles.style" -> "__future__" [];
	"prompt_toolkit.styles.style" -> "itertools" [];
	"prompt_toolkit.styles.style" -> "re" [];
	"prompt_toolkit.styles.style" -> "enum" [];
	"prompt_toolkit.styles.style" -> "typing" [];
	"prompt_toolkit.styles.named_colors" -> "__future__" [];
	"prompt_toolkit.styles.base" -> "__future__" [];
	"prompt_toolkit.styles.base" -> "abc" [];
	"prompt_toolkit.styles.base" -> "typing" [];
	"prompt_toolkit.styles" -> "__future__" [];
	"prompt_toolkit.styles.style_transformation" -> "__future__" [];
	"prompt_toolkit.styles.style_transformation" -> "abc" [];
	"prompt_toolkit.styles.style_transformation" -> "colorsys" [];
	"prompt_toolkit.styles.style_transformation" -> "typing" [];
	"prompt_toolkit.styles.defaults" -> "__future__" [];
	"prompt_toolkit.shortcuts" -> "__future__" [];
	"prompt_toolkit.shortcuts.utils" -> "__future__" [];
	"prompt_toolkit.shortcuts.utils" -> "typing" [];
	"prompt_toolkit.shortcuts.progress_bar" -> "__future__" [];
	"prompt_toolkit.shortcuts.progress_bar.formatters" -> "__future__" [];
	"prompt_toolkit.shortcuts.progress_bar.formatters" -> "datetime" [];
	"prompt_toolkit.shortcuts.progress_bar.formatters" -> "time" [];
	"prompt_toolkit.shortcuts.progress_bar.formatters" -> "abc" [];
	"prompt_toolkit.shortcuts.progress_bar.formatters" -> "typing" [];
	"prompt_toolkit.shortcuts.progress_bar.base" -> "__future__" [];
	"prompt_toolkit.shortcuts.progress_bar.base" -> "contextvars" [];
	"prompt_toolkit.shortcuts.progress_bar.base" -> "datetime" [];
	"prompt_toolkit.shortcuts.progress_bar.base" -> "functools" [];
	"prompt_toolkit.shortcuts.progress_bar.base" -> "os" [];
	"prompt_toolkit.shortcuts.progress_bar.base" -> "signal" [];
	"prompt_toolkit.shortcuts.progress_bar.base" -> "threading" [];
	"prompt_toolkit.shortcuts.progress_bar.base" -> "traceback" [];
	"prompt_toolkit.shortcuts.progress_bar.base" -> "typing" [];
	"prompt_toolkit.shortcuts.dialogs" -> "__future__" [];
	"prompt_toolkit.shortcuts.dialogs" -> "functools" [];
	"prompt_toolkit.shortcuts.dialogs" -> "asyncio" [];
	"prompt_toolkit.shortcuts.dialogs" -> "typing" [];
	"prompt_toolkit.patch_stdout" -> "__future__" [];
	"prompt_toolkit.patch_stdout" -> "asyncio" [];
	"prompt_toolkit.patch_stdout" -> "queue" [];
	"prompt_toolkit.patch_stdout" -> "sys" [];
	"prompt_toolkit.patch_stdout" -> "threading" [];
	"prompt_toolkit.patch_stdout" -> "time" [];
	"prompt_toolkit.patch_stdout" -> "contextlib" [];
	"prompt_toolkit.patch_stdout" -> "typing" [];
	"prompt_toolkit.output" -> "__future__" [];
	"prompt_toolkit.layout.processors" -> "__future__" [];
	"prompt_toolkit.layout.processors" -> "re" [];
	"prompt_toolkit.layout.processors" -> "abc" [];
	"prompt_toolkit.layout.processors" -> "typing" [];
	"prompt_toolkit.history" -> "__future__" [];
	"prompt_toolkit.history" -> "datetime" [];
	"prompt_toolkit.history" -> "os" [];
	"prompt_toolkit.history" -> "threading" [];
	"prompt_toolkit.history" -> "abc" [];
	"prompt_toolkit.history" -> "asyncio" [];
	"prompt_toolkit.history" -> "typing" [];
	"prompt_toolkit.formatted_text" -> "__future__" [];
	"prompt_toolkit.formatted_text.pygments" -> "__future__" [];
	"prompt_toolkit.formatted_text.pygments" -> "typing" [];
	"prompt_toolkit.formatted_text.html" -> "__future__" [];
	"prompt_toolkit.formatted_text.html" -> "string" [];
	"prompt_toolkit.formatted_text.html" -> "typing" [];
	"prompt_toolkit.formatted_text.ansi" -> "__future__" [];
	"prompt_toolkit.formatted_text.ansi" -> "string" [];
	"prompt_toolkit.formatted_text.ansi" -> "typing" [];
	"prompt_toolkit.filters" -> "__future__" [];
	"prompt_toolkit.filters.utils" -> "__future__" [];
	"prompt_toolkit.filters.cli" -> "__future__" [];
	"prompt_toolkit.enums" -> "__future__" [];
	"prompt_toolkit.enums" -> "enum" [];
	"prompt_toolkit.auto_suggest" -> "__future__" [];
	"prompt_toolkit.auto_suggest" -> "abc" [];
	"prompt_toolkit.auto_suggest" -> "typing" [];
	"IPython.core.excolors" -> "os" [];
	"IPython.core.compilerop" -> "__future__" [];
	"IPython.core.compilerop" -> "ast" [];
	"IPython.core.compilerop" -> "codeop" [];
	"IPython.core.compilerop" -> "functools" [];
	"IPython.core.compilerop" -> "hashlib" [];
	"IPython.core.compilerop" -> "linecache" [];
	"IPython.core.compilerop" -> "operator" [];
	"IPython.core.compilerop" -> "time" [];
	"IPython.core.compilerop" -> "contextlib" [];
	"IPython.core.compilerop" -> "warnings" [];
	"IPython.core.builtin_trap" -> "builtins" [];
	"IPython.core.builtin_trap" -> "traitlets" [];
	"IPython.core.alias" -> "os" [];
	"IPython.core.alias" -> "re" [];
	"IPython.core.alias" -> "sys" [];
	"IPython.core.alias" -> "traitlets" [];
	"IPython.core.alias" -> "logging" [];
	"IPython.core.ultratb" -> "functools" [];
	"IPython.core.ultratb" -> "inspect" [];
	"IPython.core.ultratb" -> "linecache" [];
	"IPython.core.ultratb" -> "pydoc" [];
	"IPython.core.ultratb" -> "sys" [];
	"IPython.core.ultratb" -> "time" [];
	"IPython.core.ultratb" -> "traceback" [];
	"IPython.core.ultratb" -> "types" [];
	"IPython.core.ultratb" -> "typing" [];
	"IPython.core.ultratb" -> "stack_data" [];
	"IPython.core.ultratb" -> "IPython" [];
	"stack_data.serializing" -> "inspect" [];
	"stack_data.serializing" -> "logging" [];
	"stack_data.serializing" -> "sys" [];
	"stack_data.serializing" -> "traceback" [];
	"stack_data.serializing" -> "collections" [];
	"stack_data.serializing" -> "html" [];
	"stack_data.serializing" -> "types" [];
	"stack_data.serializing" -> "typing" [];
	"stack_data.utils" -> "ast" [];
	"stack_data.utils" -> "itertools" [];
	"stack_data.utils" -> "types" [];
	"stack_data.utils" -> "collections" [];
	"stack_data.utils" -> "typing" [];
	"stack_data.utils" -> "asttokens" [];
	"stack_data.utils" -> "pygments" [];
	"asttokens.asttokens" -> "abc" [];
	"asttokens.asttokens" -> "ast" [];
	"asttokens.asttokens" -> "bisect" [];
	"asttokens.asttokens" -> "sys" [];
	"asttokens.asttokens" -> "token" [];
	"asttokens.asttokens" -> "typing" [];
	"asttokens.mark_tokens" -> "ast" [];
	"asttokens.mark_tokens" -> "numbers" [];
	"asttokens.mark_tokens" -> "sys" [];
	"asttokens.mark_tokens" -> "token" [];
	"asttokens.mark_tokens" -> "typing" [];
	"asttokens.astroid_compat" -> "astroid" [];
	"asttokens.astroid_compat" -> "'astroid.nodes'" [];
	"asttokens.astroid_compat" -> "'astroid.node_classes'" [];
	"asttokens.util" -> "ast" [];
	"asttokens.util" -> "collections" [];
	"asttokens.util" -> "io" [];
	"asttokens.util" -> "sys" [];
	"asttokens.util" -> "token" [];
	"asttokens.util" -> "tokenize" [];
	"asttokens.util" -> "abc" [];
	"asttokens.util" -> "functools" [];
	"asttokens.util" -> "typing" [];
	"asttokens.util" -> "astroid" [];
	"asttokens.line_numbers" -> "bisect" [];
	"asttokens.line_numbers" -> "re" [];
	"asttokens.line_numbers" -> "typing" [];
	"stack_data.formatting" -> "inspect" [];
	"stack_data.formatting" -> "sys" [];
	"stack_data.formatting" -> "traceback" [];
	"stack_data.formatting" -> "types" [];
	"stack_data.formatting" -> "typing" [];
	"stack_data.core" -> "ast" [];
	"stack_data.core" -> "html" [];
	"stack_data.core" -> "os" [];
	"stack_data.core" -> "sys" [];
	"stack_data.core" -> "collections" [];
	"stack_data.core" -> "enum" [];
	"stack_data.core" -> "textwrap" [];
	"stack_data.core" -> "types" [];
	"stack_data.core" -> "typing" [];
	"stack_data.core" -> "executing" [];
	"stack_data.core" -> "pure_eval" [];
	"pure_eval.my_getattr_static" -> "types" [];
	"pure_eval.utils" -> "collections" [];
	"pure_eval.utils" -> "datetime" [];
	"pure_eval.utils" -> "decimal" [];
	"pure_eval.utils" -> "fractions" [];
	"pure_eval.utils" -> "ast" [];
	"pure_eval.utils" -> "enum" [];
	"pure_eval.utils" -> "typing" [];
	"pure_eval.core" -> "ast" [];
	"pure_eval.core" -> "builtins" [];
	"pure_eval.core" -> "operator" [];
	"pure_eval.core" -> "collections" [];
	"pure_eval.core" -> "contextlib" [];
	"pure_eval.core" -> "types" [];
	"pure_eval.core" -> "typing" [];
	"executing" -> "collections" [];
	"executing._pytest_utils" -> "sys" [];
	"executing._pytest_utils" -> "pytest" [];
	"executing.executing" -> "__future__" [];
	"executing.executing" -> "ast" [];
	"executing.executing" -> "dis" [];
	"executing.executing" -> "inspect" [];
	"executing.executing" -> "io" [];
	"executing.executing" -> "linecache" [];
	"executing.executing" -> "re" [];
	"executing.executing" -> "sys" [];
	"executing.executing" -> "types" [];
	"executing.executing" -> "collections" [];
	"executing.executing" -> "copy" [];
	"executing.executing" -> "functools" [];
	"executing.executing" -> "itertools" [];
	"executing.executing" -> "operator" [];
	"executing.executing" -> "pathlib" [];
	"executing.executing" -> "threading" [];
	"executing.executing" -> "tokenize" [];
	"executing.executing" -> "typing" [];
	"executing.executing" -> "asttokens" [];
	"executing._position_node_finder" -> "ast" [];
	"executing._position_node_finder" -> "sys" [];
	"executing._position_node_finder" -> "dis" [];
	"executing._position_node_finder" -> "types" [];
	"executing._position_node_finder" -> "typing" [];
	"executing._position_node_finder" -> "functools" [];
	"IPython.core.prefilter" -> "keyword" [];
	"IPython.core.prefilter" -> "re" [];
	"IPython.core.prefilter" -> "traitlets" [];
	"IPython.core.splitinput" -> "re" [];
	"IPython.core.splitinput" -> "sys" [];
	"IPython.core.page" -> "os" [];
	"IPython.core.page" -> "io" [];
	"IPython.core.page" -> "re" [];
	"IPython.core.page" -> "sys" [];
	"IPython.core.page" -> "tempfile" [];
	"IPython.core.page" -> "subprocess" [];
	"IPython.core.page" -> "pathlib" [];
	"IPython.core.page" -> "IPython" [];
	"IPython.core.page" -> "termios" [];
	"IPython.core.page" -> "curses" [];
	"IPython.core.page" -> "msvcrt" [];
	"IPython.core.oinspect" -> "dataclasses" [];
	"IPython.core.oinspect" -> "inspect" [];
	"IPython.core.oinspect" -> "textwrap" [];
	"IPython.core.oinspect" -> "ast" [];
	"IPython.core.oinspect" -> "html" [];
	"IPython.core.oinspect" -> "io" [];
	"IPython.core.oinspect" -> "linecache" [];
	"IPython.core.oinspect" -> "os" [];
	"IPython.core.oinspect" -> "sys" [];
	"IPython.core.oinspect" -> "types" [];
	"IPython.core.oinspect" -> "warnings" [];
	"IPython.core.oinspect" -> "typing" [];
	"IPython.core.oinspect" -> "typing_extensions" [];
	"IPython.core.oinspect" -> "pygments" [];
	"IPython.utils.wildcard" -> "re" [];
	"IPython.utils.wildcard" -> "types" [];
	"IPython.core.magic" -> "os" [];
	"IPython.core.magic" -> "re" [];
	"IPython.core.magic" -> "sys" [];
	"IPython.core.magic" -> "getopt" [];
	"IPython.core.magic" -> "traitlets" [];
	"IPython.core.magic" -> "logging" [];
	"IPython.core.hooks" -> "os" [];
	"IPython.core.hooks" -> "subprocess" [];
	"IPython.core.hooks" -> "sys" [];
	"xml.dom.minidom" -> "io" [];
	"xml.dom.pulldom" -> "warnings" [];
	"xml.dom.pulldom" -> "io" [];
	"xml.dom.xmlbuilder" -> "copy" [];
	"xml.dom.xmlbuilder" -> "posixpath" [];
	"xml.dom.domreg" -> "sys" [];
	"xml.dom.domreg" -> "os" [];
	"IPython.core.payloadpage" -> "warnings" [];
	"IPython.testing" -> "os" [];
	"IPython.utils.py3compat" -> "platform" [];
	"IPython.utils.py3compat" -> "builtins" [];
	"IPython" -> "sys" [];
	"IPython" -> "warnings" [];
	"ipykernel.kernelapp" -> "__future__" [];
	"ipykernel.kernelapp" -> "atexit" [];
	"ipykernel.kernelapp" -> "errno" [];
	"ipykernel.kernelapp" -> "logging" [];
	"ipykernel.kernelapp" -> "os" [];
	"ipykernel.kernelapp" -> "signal" [];
	"ipykernel.kernelapp" -> "sys" [];
	"ipykernel.kernelapp" -> "traceback" [];
	"ipykernel.kernelapp" -> "typing" [];
	"ipykernel.kernelapp" -> "functools" [];
	"ipykernel.kernelapp" -> "io" [];
	"ipykernel.kernelapp" -> "pathlib" [];
	"ipykernel.kernelapp" -> "zmq" [];
	"ipykernel.kernelapp" -> "tornado" [];
	"ipykernel.kernelapp" -> "faulthandler" [];
	"ipykernel.kernelapp" -> "asyncio" [];
	"ipykernel.kernelapp" -> "pdb" [];
	"ipykernel.serialize" -> "pickle" [];
	"ipykernel.serialize" -> "warnings" [];
	"ipykernel.serialize" -> "itertools" [];
	"ipykernel.serialize" -> "'ipyparallel.serialize'" [];
	"ipykernel.pickleutil" -> "copy" [];
	"ipykernel.pickleutil" -> "pickle" [];
	"ipykernel.pickleutil" -> "sys" [];
	"ipykernel.pickleutil" -> "typing" [];
	"ipykernel.pickleutil" -> "warnings" [];
	"ipykernel.pickleutil" -> "types" [];
	"ipykernel.pickleutil" -> "'ipyparallel.serialize'" [];
	"ipykernel.pickleutil" -> "dill" [];
	"ipykernel.pickleutil" -> "cloudpickle" [];
	"ipykernel.pickleutil" -> "numpy" [];
	"cloudpickle.cloudpickle" -> "_collections_abc" [];
	"cloudpickle.cloudpickle" -> "collections" [];
	"cloudpickle.cloudpickle" -> "abc" [];
	"cloudpickle.cloudpickle" -> "builtins" [];
	"cloudpickle.cloudpickle" -> "copyreg" [];
	"cloudpickle.cloudpickle" -> "dataclasses" [];
	"cloudpickle.cloudpickle" -> "dis" [];
	"cloudpickle.cloudpickle" -> "enum" [];
	"cloudpickle.cloudpickle" -> "io" [];
	"cloudpickle.cloudpickle" -> "itertools" [];
	"cloudpickle.cloudpickle" -> "logging" [];
	"cloudpickle.cloudpickle" -> "opcode" [];
	"cloudpickle.cloudpickle" -> "pickle" [];
	"cloudpickle.cloudpickle" -> "platform" [];
	"cloudpickle.cloudpickle" -> "struct" [];
	"cloudpickle.cloudpickle" -> "sys" [];
	"cloudpickle.cloudpickle" -> "threading" [];
	"cloudpickle.cloudpickle" -> "types" [];
	"cloudpickle.cloudpickle" -> "typing" [];
	"cloudpickle.cloudpickle" -> "uuid" [];
	"cloudpickle.cloudpickle" -> "warnings" [];
	"cloudpickle.cloudpickle" -> "weakref" [];
	"dill" -> "os" [];
	"dill" -> "sys" [];
	"dill" -> "version" [];
	"dill" -> "importlib" [];
	"dill._objects" -> "warnings" [];
	"dill._objects" -> "sys" [];
	"dill._objects" -> "queue" [];
	"dill._objects" -> "dbm" [];
	"dill._objects" -> "io" [];
	"dill._objects" -> "re" [];
	"dill._objects" -> "array" [];
	"dill._objects" -> "collections" [];
	"dill._objects" -> "codecs" [];
	"dill._objects" -> "struct" [];
	"dill._objects" -> "dataclasses" [];
	"dill._objects" -> "datetime" [];
	"dill._objects" -> "calendar" [];
	"dill._objects" -> "weakref" [];
	"dill._objects" -> "pprint" [];
	"dill._objects" -> "decimal" [];
	"dill._objects" -> "numbers" [];
	"dill._objects" -> "functools" [];
	"dill._objects" -> "itertools" [];
	"dill._objects" -> "operator" [];
	"dill._objects" -> "tempfile" [];
	"dill._objects" -> "shelve" [];
	"dill._objects" -> "zlib" [];
	"dill._objects" -> "gzip" [];
	"dill._objects" -> "zipfile" [];
	"dill._objects" -> "tarfile" [];
	"dill._objects" -> "csv" [];
	"dill._objects" -> "hashlib" [];
	"dill._objects" -> "hmac" [];
	"dill._objects" -> "os" [];
	"dill._objects" -> "logging" [];
	"dill._objects" -> "optparse" [];
	"dill._objects" -> "threading" [];
	"dill._objects" -> "socket" [];
	"dill._objects" -> "contextlib" [];
	"dill._objects" -> "bz2" [];
	"dill._objects" -> "sqlite3" [];
	"dill._objects" -> "ctypes" [];
	"dill._objects" -> "fractions" [];
	"dill._objects" -> "argparse" [];
	"dill._objects" -> "_pyio" [];
	"dill._objects" -> "xdrlib" [];
	"dill._objects" -> "numpy" [];
	"dill._objects" -> "symtable" [];
	"dill._objects" -> "types" [];
	"symtable" -> "_symtable" [];
	"symtable" -> "weakref" [];
	"symtable" -> "os" [];
	"symtable" -> "sys" [];
	"xdrlib" -> "struct" [];
	"xdrlib" -> "io" [];
	"xdrlib" -> "functools" [];
	"_pyio" -> "os" [];
	"_pyio" -> "abc" [];
	"_pyio" -> "codecs" [];
	"_pyio" -> "errno" [];
	"_pyio" -> "stat" [];
	"_pyio" -> "sys" [];
	"_pyio" -> "_thread" [];
	"_pyio" -> "msvcrt" [];
	"_pyio" -> "io" [];
	"_pyio" -> "warnings" [];
	"_pyio" -> "_io" [];
	"_pyio" -> "locale" [];
	"dbm.ndbm" -> "_dbm" [];
	"shelve" -> "pickle" [];
	"shelve" -> "io" [];
	"shelve" -> "dbm" [];
	"dbm.gnu" -> "_gdbm" [];
	"dbm.dumb" -> "ast" [];
	"dbm.dumb" -> "io" [];
	"dbm.dumb" -> "os" [];
	"dbm" -> "io" [];
	"dbm" -> "os" [];
	"dbm" -> "struct" [];
	"dbm" -> "sys" [];
	"dill.settings" -> "pickle" [];
	"dill.temp" -> "contextlib" [];
	"dill.temp" -> "sys" [];
	"dill.temp" -> "io" [];
	"dill.temp" -> "codecs" [];
	"dill.temp" -> "tempfile" [];
	"dill.source" -> "linecache" [];
	"dill.source" -> "re" [];
	"dill.source" -> "inspect" [];
	"dill.source" -> "tokenize" [];
	"dill.source" -> "readline" [];
	"dill.source" -> "sys" [];
	"dill.source" -> "types" [];
	"dill.logger" -> "codecs" [];
	"dill.logger" -> "contextlib" [];
	"dill.logger" -> "locale" [];
	"dill.logger" -> "logging" [];
	"dill.logger" -> "math" [];
	"dill.logger" -> "os" [];
	"dill.logger" -> "functools" [];
	"dill.logger" -> "typing" [];
	"dill.detect" -> "dis" [];
	"dill.detect" -> "inspect" [];
	"dill.detect" -> "builtins" [];
	"dill.detect" -> "gc" [];
	"dill.detect" -> "sys" [];
	"dill.pointers" -> "gc" [];
	"dill.pointers" -> "sys" [];
	"dill.session" -> "re" [];
	"dill.session" -> "os" [];
	"dill.session" -> "sys" [];
	"dill.session" -> "warnings" [];
	"dill.session" -> "typing" [];
	"dill.session" -> "pathlib" [];
	"dill.session" -> "tempfile" [];
	"dill.session" -> "collections" [];
	"dill.session" -> "types" [];
	"dill.session" -> "io" [];
	"dill.session" -> "pickletools" [];
	"pickletools" -> "codecs" [];
	"pickletools" -> "io" [];
	"pickletools" -> "pickle" [];
	"pickletools" -> "re" [];
	"pickletools" -> "sys" [];
	"pickletools" -> "struct" [];
	"pickletools" -> "doctest" [];
	"pickletools" -> "argparse" [];
	"dill._dill" -> "__future__" [];
	"dill._dill" -> "warnings" [];
	"dill._dill" -> "os" [];
	"dill._dill" -> "sys" [];
	"dill._dill" -> "builtins" [];
	"dill._dill" -> "pickle" [];
	"dill._dill" -> "_thread" [];
	"dill._dill" -> "types" [];
	"dill._dill" -> "marshal" [];
	"dill._dill" -> "gc" [];
	"dill._dill" -> "abc" [];
	"dill._dill" -> "dataclasses" [];
	"dill._dill" -> "weakref" [];
	"dill._dill" -> "collections" [];
	"dill._dill" -> "enum" [];
	"dill._dill" -> "functools" [];
	"dill._dill" -> "operator" [];
	"dill._dill" -> "ctypes" [];
	"dill._dill" -> "numpy" [];
	"dill._dill" -> "_pyio" [];
	"dill._dill" -> "io" [];
	"dill._dill" -> "socket" [];
	"dill._dill" -> "inspect" [];
	"dill._dill" -> "typing" [];
	"dill._dill" -> "diff" [];
	"dill._dill" -> "winreg" [];
	"dill._dill" -> "threading" [];
	"dill._dill" -> "tempfile" [];
	"dill._dill" -> "subprocess" [];
	"dill._shims" -> "inspect" [];
	"dill._shims" -> "sys" [];
	"ipykernel._version" -> "re" [];
	"ipykernel._version" -> "typing" [];
	"ipykernel.trio_runner" -> "builtins" [];
	"ipykernel.trio_runner" -> "logging" [];
	"ipykernel.trio_runner" -> "signal" [];
	"ipykernel.trio_runner" -> "threading" [];
	"ipykernel.trio_runner" -> "traceback" [];
	"ipykernel.trio_runner" -> "warnings" [];
	"ipykernel.trio_runner" -> "trio" [];
	"ipykernel.zmqshell" -> "os" [];
	"ipykernel.zmqshell" -> "sys" [];
	"ipykernel.zmqshell" -> "warnings" [];
	"ipykernel.zmqshell" -> "pathlib" [];
	"ipykernel.zmqshell" -> "threading" [];
	"ipykernel.zmqshell" -> "traitlets" [];
	"ipykernel.zmqshell" -> "ipyparallel" [];
	"ipykernel.eventloops" -> "os" [];
	"ipykernel.eventloops" -> "platform" [];
	"ipykernel.eventloops" -> "sys" [];
	"ipykernel.eventloops" -> "functools" [];
	"ipykernel.eventloops" -> "zmq" [];
	"ipykernel.eventloops" -> "operator" [];
	"ipykernel.eventloops" -> "wx" [];
	"ipykernel.eventloops" -> "signal" [];
	"ipykernel.eventloops" -> "tkinter" [];
	"ipykernel.eventloops" -> "asyncio" [];
	"ipykernel.eventloops" -> "nest_asyncio" [];
	"ipykernel.eventloops" -> "PyQt5" [];
	"ipykernel.eventloops" -> "PySide2" [];
	"ipykernel.eventloops" -> "PyQt6" [];
	"ipykernel.eventloops" -> "PySide6" [];
	"IPython.lib.guisupport" -> "wx" [];
	"ipykernel._eventloop_macos" -> "ctypes" [];
	"ipykernel._eventloop_macos" -> "threading" [];
	"ctypes.util" -> "os" [];
	"ctypes.util" -> "shutil" [];
	"ctypes.util" -> "subprocess" [];
	"ctypes.util" -> "sys" [];
	"ctypes.util" -> "re" [];
	"ctypes.util" -> "tempfile" [];
	"ctypes.util" -> "struct" [];
	"ctypes._aix" -> "re" [];
	"ctypes._aix" -> "os" [];
	"ctypes._aix" -> "sys" [];
	"ctypes._aix" -> "subprocess" [];
	"ctypes.macholib.dyld" -> "os" [];
	"ctypes.macholib.dyld" -> "sys" [];
	"ctypes.macholib.dyld" -> "itertools" [];
	"ctypes.macholib.dyld" -> "_ctypes" [];
	"ctypes.macholib.dylib" -> "re" [];
	"ctypes.macholib.framework" -> "re" [];
	"ipykernel.gui.gtk3embed" -> "sys" [];
	"ipykernel.gui.gtk3embed" -> "warnings" [];
	"ipykernel.gui.gtk3embed" -> "gi" [];
	"ipykernel.gui.gtk3embed" -> "'gi.repository'" [];
	"ipykernel.gui.gtkembed" -> "sys" [];
	"ipykernel.gui.gtkembed" -> "warnings" [];
	"ipykernel.gui.gtkembed" -> "gobject" [];
	"ipykernel.gui.gtkembed" -> "gtk" [];
	"nest_asyncio" -> "asyncio" [];
	"nest_asyncio" -> "os" [];
	"nest_asyncio" -> "sys" [];
	"nest_asyncio" -> "threading" [];
	"nest_asyncio" -> "contextlib" [];
	"nest_asyncio" -> "heapq" [];
	"tkinter" -> "enum" [];
	"tkinter" -> "sys" [];
	"tkinter" -> "types" [];
	"tkinter" -> "_tkinter" [];
	"tkinter" -> "re" [];
	"tkinter" -> "os" [];
	"tkinter" -> "traceback" [];
	"ipykernel.jsonutil" -> "math" [];
	"ipykernel.jsonutil" -> "numbers" [];
	"ipykernel.jsonutil" -> "re" [];
	"ipykernel.jsonutil" -> "types" [];
	"ipykernel.jsonutil" -> "binascii" [];
	"ipykernel.jsonutil" -> "datetime" [];
	"jupyter_client._version" -> "re" [];
	"jupyter_client._version" -> "typing" [];
	"jupyter_client.provisioning.provisioner_base" -> "os" [];
	"jupyter_client.provisioning.provisioner_base" -> "abc" [];
	"jupyter_client.provisioning.provisioner_base" -> "typing" [];
	"jupyter_client.provisioning.provisioner_base" -> "string" [];
	"jupyter_client.provisioning.local_provisioner" -> "asyncio" [];
	"jupyter_client.provisioning.local_provisioner" -> "os" [];
	"jupyter_client.provisioning.local_provisioner" -> "signal" [];
	"jupyter_client.provisioning.local_provisioner" -> "sys" [];
	"jupyter_client.provisioning.local_provisioner" -> "typing" [];
	"jupyter_client.provisioning.local_provisioner" -> "errno" [];
	"jupyter_client.win_interrupt" -> "ctypes" [];
	"jupyter_client.win_interrupt" -> "typing" [];
	"jupyter_client.localinterfaces" -> "__future__" [];
	"jupyter_client.localinterfaces" -> "os" [];
	"jupyter_client.localinterfaces" -> "re" [];
	"jupyter_client.localinterfaces" -> "socket" [];
	"jupyter_client.localinterfaces" -> "subprocess" [];
	"jupyter_client.localinterfaces" -> "typing" [];
	"jupyter_client.localinterfaces" -> "warnings" [];
	"jupyter_client.localinterfaces" -> "psutil" [];
	"jupyter_client.localinterfaces" -> "netifaces" [];
	"jupyter_client.provisioning.factory" -> "glob" [];
	"jupyter_client.provisioning.factory" -> "sys" [];
	"jupyter_client.provisioning.factory" -> "os" [];
	"jupyter_client.provisioning.factory" -> "typing" [];
	"jupyter_client.provisioning.factory" -> "importlib_metadata" [];
	"jupyter_client.multikernelmanager" -> "__future__" [];
	"jupyter_client.multikernelmanager" -> "asyncio" [];
	"jupyter_client.multikernelmanager" -> "json" [];
	"jupyter_client.multikernelmanager" -> "os" [];
	"jupyter_client.multikernelmanager" -> "socket" [];
	"jupyter_client.multikernelmanager" -> "typing" [];
	"jupyter_client.multikernelmanager" -> "uuid" [];
	"jupyter_client.multikernelmanager" -> "functools" [];
	"jupyter_client.multikernelmanager" -> "pathlib" [];
	"jupyter_client.multikernelmanager" -> "zmq" [];
	"jupyter_client.multikernelmanager" -> "traitlets" [];
	"jupyter_client.utils" -> "__future__" [];
	"jupyter_client.utils" -> "os" [];
	"jupyter_client.utils" -> "typing" [];
	"jupyter_core.utils" -> "__future__" [];
	"jupyter_core.utils" -> "asyncio" [];
	"jupyter_core.utils" -> "atexit" [];
	"jupyter_core.utils" -> "errno" [];
	"jupyter_core.utils" -> "inspect" [];
	"jupyter_core.utils" -> "sys" [];
	"jupyter_core.utils" -> "threading" [];
	"jupyter_core.utils" -> "warnings" [];
	"jupyter_core.utils" -> "contextvars" [];
	"jupyter_core.utils" -> "pathlib" [];
	"jupyter_core.utils" -> "types" [];
	"jupyter_core.utils" -> "typing" [];
	"jupyter_core" -> "__future__" [];
	"jupyter_core.version" -> "__future__" [];
	"jupyter_core.version" -> "re" [];
	"jupyter_client.manager" -> "asyncio" [];
	"jupyter_client.manager" -> "functools" [];
	"jupyter_client.manager" -> "os" [];
	"jupyter_client.manager" -> "re" [];
	"jupyter_client.manager" -> "signal" [];
	"jupyter_client.manager" -> "sys" [];
	"jupyter_client.manager" -> "typing" [];
	"jupyter_client.manager" -> "uuid" [];
	"jupyter_client.manager" -> "warnings" [];
	"jupyter_client.manager" -> "contextlib" [];
	"jupyter_client.manager" -> "enum" [];
	"jupyter_client.manager" -> "zmq" [];
	"jupyter_client.manager" -> "traitlets" [];
	"jupyter_client.managerabc" -> "abc" [];
	"jupyter_client.managerabc" -> "typing" [];
	"jupyter_client.launcher" -> "os" [];
	"jupyter_client.launcher" -> "sys" [];
	"jupyter_client.launcher" -> "warnings" [];
	"jupyter_client.launcher" -> "subprocess" [];
	"jupyter_client.launcher" -> "typing" [];
	"jupyter_client.launcher" -> "_winapi" [];
	"jupyter_client.launcher" -> "_subprocess" [];
	"jupyter_client.client" -> "asyncio" [];
	"jupyter_client.client" -> "inspect" [];
	"jupyter_client.client" -> "sys" [];
	"jupyter_client.client" -> "time" [];
	"jupyter_client.client" -> "typing" [];
	"jupyter_client.client" -> "functools" [];
	"jupyter_client.client" -> "getpass" [];
	"jupyter_client.client" -> "queue" [];
	"jupyter_client.client" -> "traitlets" [];
	"jupyter_client.client" -> "IPython" [];
	"jupyter_client.clientabc" -> "__future__" [];
	"jupyter_client.clientabc" -> "abc" [];
	"jupyter_client.clientabc" -> "typing" [];
	"jupyter_client.channelsabc" -> "abc" [];
	"jupyter_client.channels" -> "asyncio" [];
	"jupyter_client.channels" -> "atexit" [];
	"jupyter_client.channels" -> "time" [];
	"jupyter_client.channels" -> "typing" [];
	"jupyter_client.channels" -> "queue" [];
	"jupyter_client.channels" -> "threading" [];
	"zmq.asyncio" -> "__future__" [];
	"zmq.asyncio" -> "asyncio" [];
	"zmq.asyncio" -> "selectors" [];
	"zmq.asyncio" -> "sys" [];
	"zmq.asyncio" -> "warnings" [];
	"zmq.asyncio" -> "weakref" [];
	"zmq._future" -> "__future__" [];
	"zmq._future" -> "warnings" [];
	"zmq._future" -> "asyncio" [];
	"zmq._future" -> "collections" [];
	"zmq._future" -> "functools" [];
	"zmq._future" -> "itertools" [];
	"zmq._future" -> "typing" [];
	"jupyter_client.blocking.client" -> "__future__" [];
	"jupyter_client.blocking.client" -> "typing" [];
	"jupyter_client.blocking.client" -> "traitlets" [];
	"jupyter_client.asynchronous.client" -> "__future__" [];
	"jupyter_client.asynchronous.client" -> "typing" [];
	"jupyter_client.asynchronous.client" -> "traitlets" [];
	"jupyter_client.kernelspec" -> "__future__" [];
	"jupyter_client.kernelspec" -> "json" [];
	"jupyter_client.kernelspec" -> "os" [];
	"jupyter_client.kernelspec" -> "re" [];
	"jupyter_client.kernelspec" -> "shutil" [];
	"jupyter_client.kernelspec" -> "typing" [];
	"jupyter_client.kernelspec" -> "warnings" [];
	"jupyter_client.kernelspec" -> "traitlets" [];
	"ipykernel.kernelspec" -> "__future__" [];
	"ipykernel.kernelspec" -> "errno" [];
	"ipykernel.kernelspec" -> "json" [];
	"ipykernel.kernelspec" -> "os" [];
	"ipykernel.kernelspec" -> "platform" [];
	"ipykernel.kernelspec" -> "shutil" [];
	"ipykernel.kernelspec" -> "stat" [];
	"ipykernel.kernelspec" -> "sys" [];
	"ipykernel.kernelspec" -> "tempfile" [];
	"ipykernel.kernelspec" -> "pathlib" [];
	"ipykernel.kernelspec" -> "typing" [];
	"ipykernel.kernelspec" -> "traitlets" [];
	"ipykernel.kernelspec" -> "argparse" [];
	"ipykernel.displayhook" -> "__future__" [];
	"ipykernel.displayhook" -> "builtins" [];
	"ipykernel.displayhook" -> "sys" [];
	"ipykernel.displayhook" -> "typing" [];
	"ipykernel.displayhook" -> "traitlets" [];
	"ipykernel.parentpoller" -> "ctypes" [];
	"ipykernel.parentpoller" -> "os" [];
	"ipykernel.parentpoller" -> "platform" [];
	"ipykernel.parentpoller" -> "signal" [];
	"ipykernel.parentpoller" -> "time" [];
	"ipykernel.parentpoller" -> "warnings" [];
	"ipykernel.parentpoller" -> "_thread" [];
	"ipykernel.parentpoller" -> "threading" [];
	"ipykernel.parentpoller" -> "errno" [];
	"ipykernel.parentpoller" -> "_winapi" [];
	"ipykernel.parentpoller" -> "_subprocess" [];
	"ipykernel.ipkernel" -> "asyncio" [];
	"ipykernel.ipkernel" -> "builtins" [];
	"ipykernel.ipkernel" -> "gc" [];
	"ipykernel.ipkernel" -> "getpass" [];
	"ipykernel.ipkernel" -> "os" [];
	"ipykernel.ipkernel" -> "signal" [];
	"ipykernel.ipkernel" -> "sys" [];
	"ipykernel.ipkernel" -> "threading" [];
	"ipykernel.ipkernel" -> "typing" [];
	"ipykernel.ipkernel" -> "contextlib" [];
	"ipykernel.ipkernel" -> "functools" [];
	"ipykernel.ipkernel" -> "comm" [];
	"ipykernel.ipkernel" -> "traitlets" [];
	"ipykernel.ipkernel" -> "appnope" [];
	"ipykernel.ipkernel" -> "'ipyparallel.serialize'" [];
	"ipykernel.ipkernel" -> "warnings" [];
	"appnope" -> "re" [];
	"appnope" -> "sys" [];
	"appnope" -> "platform" [];
	"appnope._nope" -> "contextlib" [];
	"appnope._nope" -> "ctypes" [];
	"appnope._dummy" -> "contextlib" [];
	"ipykernel.debugger" -> "os" [];
	"ipykernel.debugger" -> "re" [];
	"ipykernel.debugger" -> "sys" [];
	"ipykernel.debugger" -> "typing" [];
	"ipykernel.debugger" -> "pathlib" [];
	"ipykernel.debugger" -> "zmq" [];
	"ipykernel.debugger" -> "_pydevd_bundle" [];
	"ipykernel.debugger" -> "'_pydevd_bundle.pydevd_suspended_frames'" [];
	"ipykernel.debugger" -> "'_pydevd_bundle.pydevd_api'" [];
	"debugpy.server.api" -> "codecs" [];
	"debugpy.server.api" -> "os" [];
	"debugpy.server.api" -> "pydevd" [];
	"debugpy.server.api" -> "socket" [];
	"debugpy.server.api" -> "sys" [];
	"debugpy.server.api" -> "threading" [];
	"debugpy.server.api" -> "debugpy" [];
	"debugpy.server.api" -> "'_pydevd_bundle.pydevd_constants'" [];
	"debugpy.server.api" -> "pydevd_file_utils" [];
	"debugpy.server.api" -> "subprocess" [];
	"debugpy.common.util" -> "inspect" [];
	"debugpy.common.util" -> "os" [];
	"debugpy.common.util" -> "sys" [];
	"debugpy.common.sockets" -> "socket" [];
	"debugpy.common.sockets" -> "sys" [];
	"debugpy.common.sockets" -> "threading" [];
	"debugpy.common.log" -> "atexit" [];
	"debugpy.common.log" -> "contextlib" [];
	"debugpy.common.log" -> "functools" [];
	"debugpy.common.log" -> "inspect" [];
	"debugpy.common.log" -> "io" [];
	"debugpy.common.log" -> "os" [];
	"debugpy.common.log" -> "platform" [];
	"debugpy.common.log" -> "sys" [];
	"debugpy.common.log" -> "threading" [];
	"debugpy.common.log" -> "traceback" [];
	"debugpy.common.log" -> "debugpy" [];
	"debugpy.common.log" -> "sysconfig" [];
	"debugpy.common.log" -> "site" [];
	"debugpy.common.log" -> "importlib_metadata" [];
	"debugpy.common.log" -> "importlib" [];
	"debugpy.common.timestamp" -> "time" [];
	"debugpy.common.json" -> "builtins" [];
	"debugpy.common.json" -> "json" [];
	"debugpy.common.json" -> "numbers" [];
	"debugpy.common.json" -> "operator" [];
	"debugpy.common" -> "__future__" [];
	"debugpy.common" -> "os" [];
	"debugpy.common" -> "typing" [];
	"debugpy.adapter" -> "__future__" [];
	"debugpy.adapter" -> "typing" [];
	"debugpy" -> "sys" [];
	"debugpy.public_api" -> "__future__" [];
	"debugpy.public_api" -> "functools" [];
	"debugpy.public_api" -> "typing" [];
	"debugpy._version" -> "json" [];
	"debugpy._vendored.force_pydevd" -> "importlib" [];
	"debugpy._vendored.force_pydevd" -> "os" [];
	"debugpy._vendored.force_pydevd" -> "warnings" [];
	"debugpy._vendored.force_pydevd" -> "pydevd" [];
	"debugpy._vendored.force_pydevd" -> "debugpy" [];
	"debugpy._vendored.force_pydevd" -> "_pydevd_bundle" [];
	"debugpy._vendored" -> "contextlib" [];
	"debugpy._vendored" -> "importlib" [];
	"debugpy._vendored" -> "os" [];
	"debugpy._vendored" -> "sys" [];
	"debugpy._vendored._util" -> "contextlib" [];
	"debugpy._vendored._util" -> "os" [];
	"jupyter_client.jsonutil" -> "math" [];
	"jupyter_client.jsonutil" -> "numbers" [];
	"jupyter_client.jsonutil" -> "re" [];
	"jupyter_client.jsonutil" -> "types" [];
	"jupyter_client.jsonutil" -> "warnings" [];
	"jupyter_client.jsonutil" -> "binascii" [];
	"jupyter_client.jsonutil" -> "datetime" [];
	"jupyter_client.jsonutil" -> "typing" [];
	"zmq.utils.jsonapi" -> "__future__" [];
	"zmq.utils.jsonapi" -> "json" [];
	"zmq.utils.jsonapi" -> "typing" [];
	"tornado.queues" -> "collections" [];
	"tornado.queues" -> "datetime" [];
	"tornado.queues" -> "heapq" [];
	"tornado.queues" -> "typing" [];
	"tornado.locks" -> "collections" [];
	"tornado.locks" -> "datetime" [];
	"tornado.locks" -> "types" [];
	"tornado.locks" -> "typing" [];
	"ipykernel.kernelbase" -> "__future__" [];
	"ipykernel.kernelbase" -> "asyncio" [];
	"ipykernel.kernelbase" -> "inspect" [];
	"ipykernel.kernelbase" -> "itertools" [];
	"ipykernel.kernelbase" -> "logging" [];
	"ipykernel.kernelbase" -> "os" [];
	"ipykernel.kernelbase" -> "socket" [];
	"ipykernel.kernelbase" -> "sys" [];
	"ipykernel.kernelbase" -> "threading" [];
	"ipykernel.kernelbase" -> "time" [];
	"ipykernel.kernelbase" -> "typing" [];
	"ipykernel.kernelbase" -> "uuid" [];
	"ipykernel.kernelbase" -> "warnings" [];
	"ipykernel.kernelbase" -> "datetime" [];
	"ipykernel.kernelbase" -> "functools" [];
	"ipykernel.kernelbase" -> "signal" [];
	"ipykernel.kernelbase" -> "psutil" [];
	"ipykernel.kernelbase" -> "zmq" [];
	"ipykernel.kernelbase" -> "tornado" [];
	"ipykernel.kernelbase" -> "traceback" [];
	"ipykernel.compiler" -> "os" [];
	"ipykernel.compiler" -> "sys" [];
	"ipykernel.compiler" -> "tempfile" [];
	"ipykernel.compiler" -> "ctypes" [];
	"ipykernel.comm.manager" -> "logging" [];
	"ipykernel.comm.manager" -> "traitlets" [];
	"comm.base_comm" -> "__future__" [];
	"comm.base_comm" -> "contextlib" [];
	"comm.base_comm" -> "logging" [];
	"comm.base_comm" -> "typing" [];
	"comm.base_comm" -> "uuid" [];
	"comm.base_comm" -> "IPython" [];
	"ipykernel.comm.comm" -> "uuid" [];
	"ipykernel.comm.comm" -> "typing" [];
	"ipykernel.comm.comm" -> "warnings" [];
	"ipykernel.comm.comm" -> "traitlets" [];
	"comm" -> "__future__" [];
	"comm" -> "typing" [];
	"ipykernel.iostream" -> "asyncio" [];
	"ipykernel.iostream" -> "atexit" [];
	"ipykernel.iostream" -> "contextvars" [];
	"ipykernel.iostream" -> "io" [];
	"ipykernel.iostream" -> "os" [];
	"ipykernel.iostream" -> "sys" [];
	"ipykernel.iostream" -> "threading" [];
	"ipykernel.iostream" -> "traceback" [];
	"ipykernel.iostream" -> "warnings" [];
	"ipykernel.iostream" -> "binascii" [];
	"ipykernel.iostream" -> "collections" [];
	"ipykernel.iostream" -> "typing" [];
	"ipykernel.iostream" -> "zmq" [];
	"ipykernel.heartbeat" -> "errno" [];
	"ipykernel.heartbeat" -> "socket" [];
	"ipykernel.heartbeat" -> "pathlib" [];
	"ipykernel.heartbeat" -> "threading" [];
	"ipykernel.heartbeat" -> "zmq" [];
	"ipykernel.control" -> "threading" [];
	"ipykernel.connect" -> "__future__" [];
	"ipykernel.connect" -> "json" [];
	"ipykernel.connect" -> "sys" [];
	"ipykernel.connect" -> "subprocess" [];
	"ipykernel.connect" -> "typing" [];
	"ipykernel.connect" -> "jupyter_client" [];
	"zmq.eventloop.zmqstream" -> "__future__" [];
	"zmq.eventloop.zmqstream" -> "asyncio" [];
	"zmq.eventloop.zmqstream" -> "pickle" [];
	"zmq.eventloop.zmqstream" -> "warnings" [];
	"zmq.eventloop.zmqstream" -> "queue" [];
	"zmq.eventloop.zmqstream" -> "typing" [];
	"zmq.eventloop.zmqstream" -> "zmq" [];
	"jupyter_core.paths" -> "__future__" [];
	"jupyter_core.paths" -> "errno" [];
	"jupyter_core.paths" -> "os" [];
	"jupyter_core.paths" -> "site" [];
	"jupyter_core.paths" -> "stat" [];
	"jupyter_core.paths" -> "sys" [];
	"jupyter_core.paths" -> "tempfile" [];
	"jupyter_core.paths" -> "warnings" [];
	"jupyter_core.paths" -> "contextlib" [];
	"jupyter_core.paths" -> "pathlib" [];
	"jupyter_core.paths" -> "typing" [];
	"jupyter_core.paths" -> "platformdirs" [];
	"jupyter_core.paths" -> "win32api" [];
	"jupyter_core.paths" -> "ntsecuritycon" [];
	"jupyter_core.paths" -> "win32security" [];
	"jupyter_core.paths" -> "ctypes" [];
	"jupyter_client.session" -> "__future__" [];
	"jupyter_client.session" -> "hashlib" [];
	"jupyter_client.session" -> "hmac" [];
	"jupyter_client.session" -> "json" [];
	"jupyter_client.session" -> "logging" [];
	"jupyter_client.session" -> "os" [];
	"jupyter_client.session" -> "pickle" [];
	"jupyter_client.session" -> "pprint" [];
	"jupyter_client.session" -> "random" [];
	"jupyter_client.session" -> "typing" [];
	"jupyter_client.session" -> "warnings" [];
	"jupyter_client.session" -> "binascii" [];
	"jupyter_client.session" -> "datetime" [];
	"jupyter_client.session" -> "traitlets" [];
	"jupyter_client.adapter" -> "json" [];
	"jupyter_client.adapter" -> "re" [];
	"jupyter_client.adapter" -> "typing" [];
	"jupyter_client.connect" -> "__future__" [];
	"jupyter_client.connect" -> "errno" [];
	"jupyter_client.connect" -> "glob" [];
	"jupyter_client.connect" -> "json" [];
	"jupyter_client.connect" -> "os" [];
	"jupyter_client.connect" -> "socket" [];
	"jupyter_client.connect" -> "stat" [];
	"jupyter_client.connect" -> "tempfile" [];
	"jupyter_client.connect" -> "warnings" [];
	"jupyter_client.connect" -> "getpass" [];
	"jupyter_client.connect" -> "typing" [];
	"jupyter_client.connect" -> "zmq" [];
	"jupyter_client.connect" -> "traitlets" [];
	"jupyter_client.ssh.tunnel" -> "__future__" [];
	"jupyter_client.ssh.tunnel" -> "atexit" [];
	"jupyter_client.ssh.tunnel" -> "os" [];
	"jupyter_client.ssh.tunnel" -> "re" [];
	"jupyter_client.ssh.tunnel" -> "signal" [];
	"jupyter_client.ssh.tunnel" -> "socket" [];
	"jupyter_client.ssh.tunnel" -> "sys" [];
	"jupyter_client.ssh.tunnel" -> "warnings" [];
	"jupyter_client.ssh.tunnel" -> "getpass" [];
	"jupyter_client.ssh.tunnel" -> "multiprocessing" [];
	"jupyter_client.ssh.tunnel" -> "typing" [];
	"jupyter_client.ssh.tunnel" -> "paramiko" [];
	"jupyter_client.ssh.tunnel" -> "pexpect" [];
	"jupyter_client.ssh.forward" -> "logging" [];
	"jupyter_client.ssh.forward" -> "select" [];
	"jupyter_client.ssh.forward" -> "socketserver" [];
	"jupyter_client.ssh.forward" -> "typing" [];
	"zmq" -> "__future__" [];
	"zmq" -> "os" [];
	"zmq" -> "sys" [];
	"zmq" -> "contextlib" [];
	"zmq" -> "os.path" [];
	"zmq.backend.cython._zmq" -> "__future__" [];
	"zmq.backend.cython._zmq" -> "cython" [];
	"zmq.backend.cython._zmq" -> "pathlib" [];
	"zmq.backend.cython._zmq" -> "warnings" [];
	"zmq.backend.cython._zmq" -> "threading" [];
	"zmq.backend.cython._zmq" -> "time" [];
	"zmq.backend.cython._zmq" -> "weakref" [];
	"zmq.backend.cython._zmq" -> "'cython.cimports'" [];
	"zmq.backend.cython._zmq" -> "zmq" [];
	"zmq.utils.garbage" -> "atexit" [];
	"zmq.utils.garbage" -> "struct" [];
	"zmq.utils.garbage" -> "warnings" [];
	"zmq.utils.garbage" -> "collections" [];
	"zmq.utils.garbage" -> "os" [];
	"zmq.utils.garbage" -> "threading" [];
	"zmq.utils.garbage" -> "zmq" [];
	"zmq.green" -> "__future__" [];
	"zmq.green" -> "typing" [];
	"zmq.green.device" -> "__future__" [];
	"zmq.green.device" -> "zmq" [];
	"zmq.green.poll" -> "__future__" [];
	"zmq.green.poll" -> "gevent" [];
	"zmq.green.poll" -> "zmq" [];
	"zmq.green.core" -> "__future__" [];
	"zmq.green.core" -> "sys" [];
	"zmq.green.core" -> "time" [];
	"zmq.green.core" -> "warnings" [];
	"zmq.green.core" -> "gevent" [];
	"zmq.green.core" -> "'gevent.event'" [];
	"zmq.green.core" -> "'gevent.hub'" [];
	"zmq.green.core" -> "zmq" [];
	"zmq.green.core" -> "'gevent.core'" [];
	"zmq.sugar" -> "__future__" [];
	"zmq.sugar.stopwatch" -> "warnings" [];
	"zmq.sugar.stopwatch" -> "time" [];
	"zmq.sugar.version" -> "__future__" [];
	"zmq.sugar.version" -> "re" [];
	"zmq.sugar.version" -> "typing" [];
	"zmq.sugar.tracker" -> "__future__" [];
	"zmq.sugar.tracker" -> "time" [];
	"zmq.sugar.tracker" -> "threading" [];
	"zmq.sugar.socket" -> "__future__" [];
	"zmq.sugar.socket" -> "errno" [];
	"zmq.sugar.socket" -> "pickle" [];
	"zmq.sugar.socket" -> "random" [];
	"zmq.sugar.socket" -> "sys" [];
	"zmq.sugar.socket" -> "typing" [];
	"zmq.sugar.socket" -> "warnings" [];
	"zmq.sugar.socket" -> "zmq" [];
	"zmq.sugar.attrsettr" -> "__future__" [];
	"zmq.sugar.attrsettr" -> "errno" [];
	"zmq.sugar.attrsettr" -> "typing" [];
	"zmq.sugar.attrsettr" -> "zmq" [];
	"zmq.utils.interop" -> "typing" [];
	"zmq.utils.interop" -> "cffi" [];
	"cffi.api" -> "sys" [];
	"cffi.api" -> "types" [];
	"cffi.api" -> "collections" [];
	"cffi.api" -> "_cffi_backend" [];
	"cffi.api" -> "os" [];
	"cffi.api" -> "sysconfig" [];
	"cffi.api" -> "re" [];
	"cffi.recompiler" -> "os" [];
	"cffi.recompiler" -> "sys" [];
	"cffi.recompiler" -> "io" [];
	"cffi._shimmed_dist_utils" -> "sys" [];
	"cffi._shimmed_dist_utils" -> "setuptools" [];
	"cffi._shimmed_dist_utils" -> "distutils" [];
	"cffi.verifier" -> "sys" [];
	"cffi.verifier" -> "os" [];
	"cffi.verifier" -> "binascii" [];
	"cffi.verifier" -> "shutil" [];
	"cffi.verifier" -> "io" [];
	"cffi.verifier" -> "imp" [];
	"cffi.verifier" -> "_cffi_backend" [];
	"cffi.lock" -> "sys" [];
	"cffi.lock" -> "thread" [];
	"cffi.lock" -> "dummy_thread" [];
	"cffi.lock" -> "_thread" [];
	"cffi.lock" -> "_dummy_thread" [];
	"cffi.pkgconfig" -> "sys" [];
	"cffi.pkgconfig" -> "os" [];
	"cffi.pkgconfig" -> "subprocess" [];
	"cffi.vengine_cpy" -> "sys" [];
	"cffi.vengine_cpy" -> "warnings" [];
	"cffi._imp_emulation" -> "imp" [];
	"cffi._imp_emulation" -> "_imp" [];
	"cffi._imp_emulation" -> "importlib" [];
	"cffi._imp_emulation" -> "os" [];
	"cffi._imp_emulation" -> "sys" [];
	"cffi._imp_emulation" -> "tokenize" [];
	"cffi.vengine_gen" -> "sys" [];
	"cffi.vengine_gen" -> "os" [];
	"cffi.vengine_gen" -> "types" [];
	"cffi.ffiplatform" -> "sys" [];
	"cffi.ffiplatform" -> "os" [];
	"cffi.ffiplatform" -> "os.path" [];
	"cffi.ffiplatform" -> "cStringIO" [];
	"cffi.ffiplatform" -> "io" [];
	"cffi.cparser" -> "pycparser" [];
	"cffi.cparser" -> "weakref" [];
	"cffi.cparser" -> "re" [];
	"cffi.cparser" -> "sys" [];
	"cffi.cparser" -> "thread" [];
	"cffi.cparser" -> "_thread" [];
	"cffi.cparser" -> "warnings" [];
	"pycparser" -> "io" [];
	"pycparser" -> "subprocess" [];
	"pycparser.plyparser" -> "warnings" [];
	"pycparser.c_lexer" -> "re" [];
	"pycparser.ply.lex" -> "re" [];
	"pycparser.ply.lex" -> "sys" [];
	"pycparser.ply.lex" -> "types" [];
	"pycparser.ply.lex" -> "copy" [];
	"pycparser.ply.lex" -> "os" [];
	"pycparser.ply.lex" -> "inspect" [];
	"pycparser.ply.yacc" -> "re" [];
	"pycparser.ply.yacc" -> "types" [];
	"pycparser.ply.yacc" -> "sys" [];
	"pycparser.ply.yacc" -> "os.path" [];
	"pycparser.ply.yacc" -> "inspect" [];
	"pycparser.ply.yacc" -> "base64" [];
	"pycparser.ply.yacc" -> "warnings" [];
	"pycparser.ply.yacc" -> "cPickle" [];
	"pycparser.ply.yacc" -> "pickle" [];
	"pycparser.c_ast" -> "sys" [];
	"cffi.commontypes" -> "sys" [];
	"cffi.commontypes" -> "_cffi_backend" [];
	"cffi.model" -> "types" [];
	"cffi.model" -> "weakref" [];
	"cffi.model" -> "warnings" [];
	"zmq._typing" -> "__future__" [];
	"zmq._typing" -> "sys" [];
	"zmq._typing" -> "typing" [];
	"zmq._typing" -> "typing_extensions" [];
	"zmq.sugar.poll" -> "__future__" [];
	"zmq.sugar.poll" -> "typing" [];
	"zmq.sugar.frame" -> "zmq" [];
	"zmq.sugar.context" -> "__future__" [];
	"zmq.sugar.context" -> "atexit" [];
	"zmq.sugar.context" -> "os" [];
	"zmq.sugar.context" -> "threading" [];
	"zmq.sugar.context" -> "typing" [];
	"zmq.sugar.context" -> "warnings" [];
	"zmq.sugar.context" -> "weakref" [];
	"zmq.sugar.context" -> "zmq" [];
	"zmq.sugar.context" -> "pyczmq" [];
	"zmq.error" -> "__future__" [];
	"zmq.error" -> "errno" [];
	"zmq.constants" -> "__future__" [];
	"zmq.constants" -> "errno" [];
	"zmq.constants" -> "sys" [];
	"zmq.constants" -> "enum" [];
	"zmq.backend" -> "os" [];
	"zmq.backend" -> "platform" [];
	"zmq.backend.select" -> "importlib" [];
	"zmq.backend.select" -> "typing" [];
	"ipykernel.embed" -> "sys" [];
	"IPython.utils.frame" -> "sys" [];
	"IPython.core.display_functions" -> "binascii" [];
	"IPython.core.display_functions" -> "os" [];
	"IPython.core.display_functions" -> "sys" [];
	"IPython.core.display_functions" -> "warnings" [];
	"rich.align" -> "sys" [];
	"rich.align" -> "itertools" [];
	"rich.align" -> "typing" [];
	"rich.align" -> "typing_extensions" [];
	"rich.panel" -> "typing" [];
	"rich._ratio" -> "sys" [];
	"rich._ratio" -> "fractions" [];
	"rich._ratio" -> "math" [];
	"rich._ratio" -> "typing" [];
	"rich._ratio" -> "typing_extensions" [];
	"rich._ratio" -> "dataclasses" [];
	"rich._pick" -> "typing" [];
	"rich._loop" -> "typing" [];
	"rich.box" -> "sys" [];
	"rich.box" -> "typing" [];
	"rich.box" -> "typing_extensions" [];
	"rich" -> "os" [];
	"rich" -> "typing" [];
	"rich.filesize" -> "typing" [];
	"rich._inspect" -> "inspect" [];
	"rich._inspect" -> "typing" [];
	"rich.pretty" -> "builtins" [];
	"rich.pretty" -> "collections" [];
	"rich.pretty" -> "dataclasses" [];
	"rich.pretty" -> "inspect" [];
	"rich.pretty" -> "os" [];
	"rich.pretty" -> "reprlib" [];
	"rich.pretty" -> "sys" [];
	"rich.pretty" -> "array" [];
	"rich.pretty" -> "itertools" [];
	"rich.pretty" -> "types" [];
	"rich.pretty" -> "typing" [];
	"rich.pretty" -> "attr" [];
	"rich.abc" -> "abc" [];
	"rich._extension" -> "typing" [];
	"rich.traceback" -> "inspect" [];
	"rich.traceback" -> "linecache" [];
	"rich.traceback" -> "os" [];
	"rich.traceback" -> "sys" [];
	"rich.traceback" -> "dataclasses" [];
	"rich.traceback" -> "itertools" [];
	"rich.traceback" -> "traceback" [];
	"rich.traceback" -> "types" [];
	"rich.traceback" -> "typing" [];
	"rich.theme" -> "configparser" [];
	"rich.theme" -> "typing" [];
	"rich.default_styles" -> "typing" [];
	"rich.default_styles" -> "argparse" [];
	"rich.default_styles" -> "io" [];
	"rich.scope" -> "typing" [];
	"rich.syntax" -> "os.path" [];
	"rich.syntax" -> "re" [];
	"rich.syntax" -> "sys" [];
	"rich.syntax" -> "textwrap" [];
	"rich.syntax" -> "abc" [];
	"rich.syntax" -> "pathlib" [];
	"rich.syntax" -> "typing" [];
	"rich.syntax" -> "argparse" [];
	"rich.progress" -> "io" [];
	"rich.progress" -> "sys" [];
	"rich.progress" -> "typing" [];
	"rich.progress" -> "warnings" [];
	"rich.progress" -> "abc" [];
	"rich.progress" -> "collections" [];
	"rich.progress" -> "dataclasses" [];
	"rich.progress" -> "datetime" [];
	"rich.progress" -> "math" [];
	"rich.progress" -> "mmap" [];
	"rich.progress" -> "operator" [];
	"rich.progress" -> "os" [];
	"rich.progress" -> "threading" [];
	"rich.progress" -> "types" [];
	"rich.progress" -> "typing_extensions" [];
	"rich.progress" -> "random" [];
	"rich.progress" -> "time" [];
	"rich.progress" -> "itertools" [];
	"rich.rule" -> "typing" [];
	"rich.rule" -> "sys" [];
	"rich.spinner" -> "typing" [];
	"rich.spinner" -> "time" [];
	"rich.progress_bar" -> "math" [];
	"rich.progress_bar" -> "functools" [];
	"rich.progress_bar" -> "time" [];
	"rich.progress_bar" -> "typing" [];
	"rich.live" -> "sys" [];
	"rich.live" -> "threading" [];
	"rich.live" -> "types" [];
	"rich.live" -> "typing" [];
	"rich.live" -> "ipywidgets" [];
	"rich.live" -> "warnings" [];
	"rich.live" -> "random" [];
	"rich.live" -> "time" [];
	"rich.live" -> "itertools" [];
	"ipywidgets" -> "os" [];
	"ipywidgets" -> "sys" [];
	"ipywidgets" -> "traitlets" [];
	"ipywidgets" -> "IPython" [];
	"ipywidgets.widgets.widget_upload" -> "datetime" [];
	"ipywidgets.widgets.widget_upload" -> "traitlets" [];
	"ipywidgets.widgets.widget_description" -> "traitlets" [];
	"ipywidgets.widgets.widget_description" -> "warnings" [];
	"ipywidgets.widgets.utils" -> "pathlib" [];
	"ipywidgets.widgets.utils" -> "sys" [];
	"ipywidgets.widgets.utils" -> "inspect" [];
	"ipywidgets.widgets.utils" -> "warnings" [];
	"ipywidgets.widgets.widget_templates" -> "re" [];
	"ipywidgets.widgets.widget_templates" -> "collections" [];
	"ipywidgets.widgets.widget_templates" -> "traitlets" [];
	"ipywidgets.widgets.widget_style" -> "traitlets" [];
	"ipywidgets.widgets.widget_tagsinput" -> "traitlets" [];
	"ipywidgets.widgets.widget_media" -> "mimetypes" [];
	"ipywidgets.widgets.widget_media" -> "traitlets" [];
	"ipywidgets.widgets.widget_layout" -> "traitlets" [];
	"ipywidgets.widgets.widget_link" -> "traitlets" [];
	"ipywidgets.widgets.interaction" -> "enum" [];
	"ipywidgets.widgets.interaction" -> "inspect" [];
	"ipywidgets.widgets.interaction" -> "sys" [];
	"ipywidgets.widgets.interaction" -> "IPython" [];
	"ipywidgets.widgets.interaction" -> "traitlets" [];
	"ipywidgets.widgets.interaction" -> "numbers" [];
	"ipywidgets.widgets.interaction" -> "warnings" [];
	"ipywidgets.widgets.interaction" -> "matplotlib" [];
	"ipywidgets.widgets.widget_controller" -> "traitlets" [];
	"ipywidgets.widgets.widget_string" -> "traitlets" [];
	"ipywidgets.widgets.widget_selectioncontainer" -> "traitlets" [];
	"ipywidgets.widgets.widget_selectioncontainer" -> "itertools" [];
	"ipywidgets.widgets.widget_selection" -> "itertools" [];
	"ipywidgets.widgets.widget_selection" -> "traitlets" [];
	"ipywidgets.widgets.widget_output" -> "sys" [];
	"ipywidgets.widgets.widget_output" -> "functools" [];
	"ipywidgets.widgets.widget_output" -> "traitlets" [];
	"ipywidgets.widgets.widget_output" -> "IPython" [];
	"ipywidgets.widgets.widget_output" -> "traceback" [];
	"ipywidgets.widgets.widget_time" -> "traitlets" [];
	"ipywidgets.widgets.widget_datetime" -> "traitlets" [];
	"ipywidgets.widgets.widget_date" -> "traitlets" [];
	"ipywidgets.widgets.widget_color" -> "traitlets" [];
	"ipywidgets.widgets.widget_int" -> "traitlets" [];
	"ipywidgets.widgets.widget_float" -> "traitlets" [];
	"ipywidgets.widgets.widget_box" -> "traitlets" [];
	"ipywidgets.widgets.widget_button" -> "traitlets" [];
	"ipywidgets.widgets.widget_bool" -> "traitlets" [];
	"ipywidgets.widgets.widget_core" -> "traitlets" [];
	"ipywidgets.widgets.trait_types" -> "re" [];
	"ipywidgets.widgets.trait_types" -> "traitlets" [];
	"ipywidgets.widgets.trait_types" -> "datetime" [];
	"ipywidgets.widgets.valuewidget" -> "traitlets" [];
	"ipywidgets.widgets.domwidget" -> "traitlets" [];
	"ipywidgets.widgets.widget" -> "os" [];
	"ipywidgets.widgets.widget" -> "sys" [];
	"ipywidgets.widgets.widget" -> "typing" [];
	"ipywidgets.widgets.widget" -> "contextlib" [];
	"ipywidgets.widgets.widget" -> "IPython" [];
	"ipywidgets.widgets.widget" -> "traitlets" [];
	"ipywidgets.widgets.widget" -> "json" [];
	"ipywidgets.widgets.widget" -> "ipywidgets" [];
	"ipywidgets.widgets.widget" -> "base64" [];
	"ipywidgets.widgets.widget" -> "inspect" [];
	"ipywidgets.widgets.widget" -> "numpy" [];
	"ipywidgets.comm" -> "sys" [];
	"ipywidgets.comm" -> "IPython" [];
	"ipywidgets.comm" -> "comm" [];
	"ipywidgets.comm" -> "ipykernel" [];
	"rich.screen" -> "typing" [];
	"rich.live_render" -> "sys" [];
	"rich.live_render" -> "typing" [];
	"rich.live_render" -> "typing_extensions" [];
	"rich.file_proxy" -> "io" [];
	"rich.file_proxy" -> "typing" [];
	"rich.markup" -> "re" [];
	"rich.markup" -> "ast" [];
	"rich.markup" -> "operator" [];
	"rich.markup" -> "typing" [];
	"rich.console" -> "inspect" [];
	"rich.console" -> "os" [];
	"rich.console" -> "sys" [];
	"rich.console" -> "threading" [];
	"rich.console" -> "zlib" [];
	"rich.console" -> "abc" [];
	"rich.console" -> "dataclasses" [];
	"rich.console" -> "datetime" [];
	"rich.console" -> "functools" [];
	"rich.console" -> "getpass" [];
	"rich.console" -> "html" [];
	"rich.console" -> "itertools" [];
	"rich.console" -> "math" [];
	"rich.console" -> "time" [];
	"rich.console" -> "types" [];
	"rich.console" -> "typing" [];
	"rich.console" -> "typing_extensions" [];
	"rich._windows_renderer" -> "typing" [];
	"rich._win32_console" -> "ctypes" [];
	"rich._win32_console" -> "sys" [];
	"rich._win32_console" -> "typing" [];
	"rich._win32_console" -> "time" [];
	"rich.json" -> "pathlib" [];
	"rich.json" -> "json" [];
	"rich.json" -> "typing" [];
	"rich.json" -> "argparse" [];
	"rich.json" -> "sys" [];
	"rich.status" -> "types" [];
	"rich.status" -> "typing" [];
	"rich.status" -> "time" [];
	"rich._windows" -> "sys" [];
	"rich._windows" -> "dataclasses" [];
	"rich._windows" -> "ctypes" [];
	"rich._windows" -> "platform" [];
	"rich.styled" -> "typing" [];
	"rich.region" -> "typing" [];
	"rich.pager" -> "abc" [];
	"rich.pager" -> "typing" [];
	"rich.__main__" -> "colorsys" [];
	"rich.__main__" -> "io" [];
	"rich.__main__" -> "time" [];
	"rich.markdown" -> "__future__" [];
	"rich.markdown" -> "sys" [];
	"rich.markdown" -> "typing" [];
	"rich.markdown" -> "markdown_it" [];
	"rich.markdown" -> "typing_extensions" [];
	"rich.markdown" -> "argparse" [];
	"rich.markdown" -> "io" [];
	"rich.markdown" -> "pydoc" [];
	"rich._stack" -> "typing" [];
	"markdown_it.token" -> "__future__" [];
	"markdown_it.token" -> "dataclasses" [];
	"markdown_it.token" -> "typing" [];
	"markdown_it.token" -> "warnings" [];
	"markdown_it._compat" -> "__future__" [];
	"markdown_it._compat" -> "sys" [];
	"markdown_it._compat" -> "typing" [];
	"markdown_it.main" -> "__future__" [];
	"markdown_it.main" -> "contextlib" [];
	"markdown_it.main" -> "typing" [];
	"markdown_it.main" -> "linkify_it" [];
	"markdown_it.utils" -> "__future__" [];
	"markdown_it.utils" -> "pathlib" [];
	"markdown_it.utils" -> "typing" [];
	"markdown_it.rules_core.state_core" -> "__future__" [];
	"markdown_it.rules_core.state_core" -> "typing" [];
	"markdown_it.rules_core.state_core" -> "markdown_it" [];
	"markdown_it.rules_core.text_join" -> "__future__" [];
	"markdown_it.rules_core.smartquotes" -> "__future__" [];
	"markdown_it.rules_core.smartquotes" -> "re" [];
	"markdown_it.rules_core.smartquotes" -> "typing" [];
	"markdown_it.rules_core.replacements" -> "__future__" [];
	"markdown_it.rules_core.replacements" -> "logging" [];
	"markdown_it.rules_core.replacements" -> "re" [];
	"markdown_it.rules_core.normalize" -> "re" [];
	"markdown_it.rules_core.linkify" -> "__future__" [];
	"markdown_it.rules_core.linkify" -> "re" [];
	"markdown_it.rules_core.linkify" -> "typing" [];
	"markdown_it.ruler" -> "__future__" [];
	"markdown_it.ruler" -> "dataclasses" [];
	"markdown_it.ruler" -> "typing" [];
	"markdown_it.ruler" -> "warnings" [];
	"markdown_it.renderer" -> "__future__" [];
	"markdown_it.renderer" -> "inspect" [];
	"markdown_it.renderer" -> "typing" [];
	"markdown_it.parser_inline" -> "__future__" [];
	"markdown_it.parser_inline" -> "typing" [];
	"markdown_it.rules_inline.state_inline" -> "__future__" [];
	"markdown_it.rules_inline.state_inline" -> "collections" [];
	"markdown_it.rules_inline.state_inline" -> "dataclasses" [];
	"markdown_it.rules_inline.state_inline" -> "typing" [];
	"markdown_it.rules_inline.state_inline" -> "markdown_it" [];
	"markdown_it.rules_inline.linkify" -> "re" [];
	"markdown_it.rules_inline.image" -> "__future__" [];
	"markdown_it.common.html_re" -> "re" [];
	"markdown_it.rules_inline.entity" -> "re" [];
	"markdown_it.rules_inline.balance_pairs" -> "__future__" [];
	"markdown_it.rules_inline.backticks" -> "re" [];
	"markdown_it.rules_inline.autolink" -> "re" [];
	"markdown_it.rules_inline.strikethrough" -> "__future__" [];
	"markdown_it.rules_inline.emphasis" -> "__future__" [];
	"markdown_it.parser_core" -> "__future__" [];
	"markdown_it.parser_core" -> "typing" [];
	"markdown_it.parser_block" -> "__future__" [];
	"markdown_it.parser_block" -> "logging" [];
	"markdown_it.parser_block" -> "typing" [];
	"markdown_it.rules_block.state_block" -> "__future__" [];
	"markdown_it.rules_block.state_block" -> "typing" [];
	"markdown_it.common.utils" -> "__future__" [];
	"markdown_it.common.utils" -> "re" [];
	"markdown_it.common.utils" -> "typing" [];
	"markdown_it.common.normalize_url" -> "__future__" [];
	"markdown_it.common.normalize_url" -> "contextlib" [];
	"markdown_it.common.normalize_url" -> "re" [];
	"markdown_it.common.normalize_url" -> "mdurl" [];
	"markdown_it.common.normalize_url" -> "markdown_it" [];
	"mdurl._url" -> "__future__" [];
	"mdurl._url" -> "typing" [];
	"mdurl._parse" -> "__future__" [];
	"mdurl._parse" -> "collections" [];
	"mdurl._parse" -> "re" [];
	"mdurl._format" -> "__future__" [];
	"mdurl._format" -> "typing" [];
	"mdurl._encode" -> "__future__" [];
	"mdurl._encode" -> "string" [];
	"mdurl._decode" -> "__future__" [];
	"mdurl._decode" -> "functools" [];
	"mdurl._decode" -> "re" [];
	"markdown_it.rules_block.table" -> "__future__" [];
	"markdown_it.rules_block.table" -> "re" [];
	"markdown_it.rules_block.reference" -> "logging" [];
	"markdown_it.rules_block.paragraph" -> "logging" [];
	"markdown_it.rules_block.list" -> "logging" [];
	"markdown_it.rules_block.lheading" -> "logging" [];
	"markdown_it.rules_block.html_block" -> "__future__" [];
	"markdown_it.rules_block.html_block" -> "logging" [];
	"markdown_it.rules_block.html_block" -> "re" [];
	"markdown_it.rules_block.hr" -> "logging" [];
	"markdown_it.rules_block.heading" -> "__future__" [];
	"markdown_it.rules_block.heading" -> "logging" [];
	"markdown_it.rules_block.fence" -> "logging" [];
	"markdown_it.rules_block.code" -> "logging" [];
	"markdown_it.rules_block.blockquote" -> "__future__" [];
	"markdown_it.rules_block.blockquote" -> "logging" [];
	"markdown_it._punycode" -> "codecs" [];
	"markdown_it._punycode" -> "re" [];
	"markdown_it._punycode" -> "typing" [];
	"rich._log_render" -> "datetime" [];
	"rich._log_render" -> "typing" [];
	"rich._fileno" -> "__future__" [];
	"rich._fileno" -> "typing" [];
	"rich._null_file" -> "types" [];
	"rich._null_file" -> "typing" [];
	"pygments.util" -> "re" [];
	"pygments.util" -> "io" [];
	"pygments.util" -> "locale" [];
	"pygments.lexers" -> "re" [];
	"pygments.lexers" -> "sys" [];
	"pygments.lexers" -> "types" [];
	"pygments.lexers" -> "fnmatch" [];
	"pygments.lexers" -> "os.path" [];
	"pygments.modeline" -> "re" [];
	"httpcore._backends.trio" -> "ssl" [];
	"httpcore._backends.trio" -> "typing" [];
	"httpcore._backends.trio" -> "trio" [];
	"httpcore._backends.anyio" -> "ssl" [];
	"httpcore._backends.anyio" -> "typing" [];
	"httpcore._backends.anyio" -> "anyio" [];
	"httpcore._utils" -> "select" [];
	"httpcore._utils" -> "socket" [];
	"httpcore._utils" -> "sys" [];
	"httpcore._utils" -> "typing" [];
	"anyio" -> "__future__" [];
	"anyio" -> "typing" [];
	"anyio._backends._trio" -> "__future__" [];
	"anyio._backends._trio" -> "array" [];
	"anyio._backends._trio" -> "math" [];
	"anyio._backends._trio" -> "socket" [];
	"anyio._backends._trio" -> "sys" [];
	"anyio._backends._trio" -> "types" [];
	"anyio._backends._trio" -> "dataclasses" [];
	"anyio._backends._trio" -> "functools" [];
	"anyio._backends._trio" -> "io" [];
	"anyio._backends._trio" -> "os" [];
	"anyio._backends._trio" -> "signal" [];
	"anyio._backends._trio" -> "typing" [];
	"anyio._backends._trio" -> "'trio.from_thread'" [];
	"anyio._backends._trio" -> "'trio.lowlevel'" [];
	"anyio._backends._trio" -> "outcome" [];
	"anyio._backends._trio" -> "'trio.socket'" [];
	"anyio._backends._trio" -> "'trio.to_thread'" [];
	"anyio._backends._trio" -> "anyio" [];
	"anyio._backends._trio" -> "typing_extensions" [];
	"anyio._backends._trio" -> "exceptiongroup" [];
	"anyio._backends._trio" -> "queue" [];
	"anyio._backends._trio" -> "'trio.testing'" [];
	"anyio.streams.memory" -> "__future__" [];
	"anyio.streams.memory" -> "collections" [];
	"anyio.streams.memory" -> "dataclasses" [];
	"anyio.streams.memory" -> "types" [];
	"anyio.streams.memory" -> "typing" [];
	"anyio.streams.memory" -> "anyio" [];
	"anyio.lowlevel" -> "__future__" [];
	"anyio.lowlevel" -> "enum" [];
	"anyio.lowlevel" -> "dataclasses" [];
	"anyio.lowlevel" -> "typing" [];
	"anyio.lowlevel" -> "weakref" [];
	"anyio.abc._eventloop" -> "__future__" [];
	"anyio.abc._eventloop" -> "math" [];
	"anyio.abc._eventloop" -> "sys" [];
	"anyio.abc._eventloop" -> "abc" [];
	"anyio.abc._eventloop" -> "os" [];
	"anyio.abc._eventloop" -> "signal" [];
	"anyio.abc._eventloop" -> "socket" [];
	"anyio.abc._eventloop" -> "typing" [];
	"anyio.abc._eventloop" -> "typing_extensions" [];
	"anyio.abc._testing" -> "__future__" [];
	"anyio.abc._testing" -> "types" [];
	"anyio.abc._testing" -> "abc" [];
	"anyio.abc._testing" -> "typing" [];
	"anyio.abc._tasks" -> "__future__" [];
	"anyio.abc._tasks" -> "sys" [];
	"anyio.abc._tasks" -> "abc" [];
	"anyio.abc._tasks" -> "types" [];
	"anyio.abc._tasks" -> "typing" [];
	"anyio.abc._tasks" -> "typing_extensions" [];
	"anyio.abc._subprocesses" -> "__future__" [];
	"anyio.abc._subprocesses" -> "abc" [];
	"anyio.abc._subprocesses" -> "signal" [];
	"anyio.abc._streams" -> "__future__" [];
	"anyio.abc._streams" -> "abc" [];
	"anyio.abc._streams" -> "typing" [];
	"anyio.abc._resources" -> "__future__" [];
	"anyio.abc._resources" -> "abc" [];
	"anyio.abc._resources" -> "types" [];
	"anyio.abc._resources" -> "typing" [];
	"anyio.abc._sockets" -> "__future__" [];
	"anyio.abc._sockets" -> "socket" [];
	"anyio.abc._sockets" -> "abc" [];
	"anyio.abc._sockets" -> "contextlib" [];
	"anyio.abc._sockets" -> "io" [];
	"anyio.abc._sockets" -> "ipaddress" [];
	"anyio.abc._sockets" -> "types" [];
	"anyio.abc._sockets" -> "typing" [];
	"anyio.abc._sockets" -> "anyio" [];
	"anyio.from_thread" -> "__future__" [];
	"anyio.from_thread" -> "sys" [];
	"anyio.from_thread" -> "threading" [];
	"anyio.from_thread" -> "contextlib" [];
	"anyio.from_thread" -> "inspect" [];
	"anyio.from_thread" -> "types" [];
	"anyio.from_thread" -> "typing" [];
	"anyio.from_thread" -> "typing_extensions" [];
	"anyio.abc" -> "__future__" [];
	"anyio.abc" -> "typing" [];
	"anyio._backends._asyncio" -> "__future__" [];
	"anyio._backends._asyncio" -> "array" [];
	"anyio._backends._asyncio" -> "asyncio" [];
	"anyio._backends._asyncio" -> "math" [];
	"anyio._backends._asyncio" -> "socket" [];
	"anyio._backends._asyncio" -> "sys" [];
	"anyio._backends._asyncio" -> "threading" [];
	"anyio._backends._asyncio" -> "collections" [];
	"anyio._backends._asyncio" -> "contextlib" [];
	"anyio._backends._asyncio" -> "contextvars" [];
	"anyio._backends._asyncio" -> "dataclasses" [];
	"anyio._backends._asyncio" -> "functools" [];
	"anyio._backends._asyncio" -> "inspect" [];
	"anyio._backends._asyncio" -> "io" [];
	"anyio._backends._asyncio" -> "os" [];
	"anyio._backends._asyncio" -> "queue" [];
	"anyio._backends._asyncio" -> "signal" [];
	"anyio._backends._asyncio" -> "types" [];
	"anyio._backends._asyncio" -> "typing" [];
	"anyio._backends._asyncio" -> "weakref" [];
	"anyio._backends._asyncio" -> "sniffio" [];
	"anyio._backends._asyncio" -> "anyio" [];
	"anyio._backends._asyncio" -> "typing_extensions" [];
	"anyio._backends._asyncio" -> "enum" [];
	"anyio._backends._asyncio" -> "exceptiongroup" [];
	"anyio._backends._asyncio" -> "uvloop" [];
	"anyio._core._typedattr" -> "__future__" [];
	"anyio._core._typedattr" -> "typing" [];
	"anyio._core._testing" -> "__future__" [];
	"anyio._core._testing" -> "typing" [];
	"anyio._core._tasks" -> "__future__" [];
	"anyio._core._tasks" -> "math" [];
	"anyio._core._tasks" -> "contextlib" [];
	"anyio._core._tasks" -> "types" [];
	"anyio._core._synchronization" -> "__future__" [];
	"anyio._core._synchronization" -> "math" [];
	"anyio._core._synchronization" -> "collections" [];
	"anyio._core._synchronization" -> "dataclasses" [];
	"anyio._core._synchronization" -> "types" [];
	"anyio._core._synchronization" -> "sniffio" [];
	"anyio._core._subprocesses" -> "__future__" [];
	"anyio._core._subprocesses" -> "io" [];
	"anyio._core._subprocesses" -> "os" [];
	"anyio._core._subprocesses" -> "subprocess" [];
	"anyio._core._subprocesses" -> "typing" [];
	"anyio._core._streams" -> "__future__" [];
	"anyio._core._streams" -> "math" [];
	"anyio._core._streams" -> "typing" [];
	"anyio._core._streams" -> "warnings" [];
	"anyio._core._sockets" -> "__future__" [];
	"anyio._core._sockets" -> "errno" [];
	"anyio._core._sockets" -> "os" [];
	"anyio._core._sockets" -> "socket" [];
	"anyio._core._sockets" -> "ssl" [];
	"anyio._core._sockets" -> "stat" [];
	"anyio._core._sockets" -> "sys" [];
	"anyio._core._sockets" -> "ipaddress" [];
	"anyio._core._sockets" -> "typing" [];
	"anyio._core._sockets" -> "anyio" [];
	"anyio._core._sockets" -> "exceptiongroup" [];
	"anyio._core._sockets" -> "idna" [];
	"anyio.streams.tls" -> "__future__" [];
	"anyio.streams.tls" -> "logging" [];
	"anyio.streams.tls" -> "re" [];
	"anyio.streams.tls" -> "ssl" [];
	"anyio.streams.tls" -> "sys" [];
	"anyio.streams.tls" -> "dataclasses" [];
	"anyio.streams.tls" -> "functools" [];
	"anyio.streams.tls" -> "typing" [];
	"anyio.streams.tls" -> "anyio" [];
	"anyio.streams.tls" -> "typing_extensions" [];
	"anyio.streams.stapled" -> "__future__" [];
	"anyio.streams.stapled" -> "dataclasses" [];
	"anyio.streams.stapled" -> "typing" [];
	"anyio.streams.stapled" -> "anyio" [];
	"anyio._core._signals" -> "__future__" [];
	"anyio._core._signals" -> "signal" [];
	"anyio._core._signals" -> "typing" [];
	"anyio._core._resources" -> "__future__" [];
	"anyio._core._fileio" -> "__future__" [];
	"anyio._core._fileio" -> "os" [];
	"anyio._core._fileio" -> "pathlib" [];
	"anyio._core._fileio" -> "sys" [];
	"anyio._core._fileio" -> "dataclasses" [];
	"anyio._core._fileio" -> "functools" [];
	"anyio._core._fileio" -> "typing" [];
	"anyio._core._fileio" -> "anyio" [];
	"anyio._core._fileio" -> "_typeshed" [];
	"anyio._core._exceptions" -> "__future__" [];
	"anyio._core._eventloop" -> "__future__" [];
	"anyio._core._eventloop" -> "math" [];
	"anyio._core._eventloop" -> "sys" [];
	"anyio._core._eventloop" -> "threading" [];
	"anyio._core._eventloop" -> "contextlib" [];
	"anyio._core._eventloop" -> "importlib" [];
	"anyio._core._eventloop" -> "typing" [];
	"anyio._core._eventloop" -> "sniffio" [];
	"anyio._core._eventloop" -> "typing_extensions" [];
	"anyio.to_thread" -> "__future__" [];
	"anyio.to_thread" -> "sys" [];
	"anyio.to_thread" -> "typing" [];
	"anyio.to_thread" -> "warnings" [];
	"anyio.to_thread" -> "typing_extensions" [];
	"httpcore._sync.socks_proxy" -> "logging" [];
	"httpcore._sync.socks_proxy" -> "ssl" [];
	"httpcore._sync.socks_proxy" -> "typing" [];
	"httpcore._sync.socks_proxy" -> "socksio" [];
	"httpcore._trace" -> "inspect" [];
	"httpcore._trace" -> "logging" [];
	"httpcore._trace" -> "types" [];
	"httpcore._trace" -> "typing" [];
	"httpcore._synchronization" -> "threading" [];
	"httpcore._synchronization" -> "types" [];
	"httpcore._synchronization" -> "typing" [];
	"httpcore._synchronization" -> "trio" [];
	"httpcore._synchronization" -> "anyio" [];
	"httpcore._synchronization" -> "sniffio" [];
	"httpcore._sync.http2" -> "enum" [];
	"httpcore._sync.http2" -> "logging" [];
	"httpcore._sync.http2" -> "time" [];
	"httpcore._sync.http2" -> "types" [];
	"httpcore._sync.http2" -> "typing" [];
	"httpcore._sync.http2" -> "h2" [];
	"httpcore._sync.http2" -> "'h2.connection'" [];
	"httpcore._sync.http2" -> "'h2.events'" [];
	"httpcore._sync.http2" -> "'h2.exceptions'" [];
	"httpcore._sync.http2" -> "'h2.settings'" [];
	"httpcore._sync.interfaces" -> "contextlib" [];
	"httpcore._sync.interfaces" -> "typing" [];
	"httpcore._sync.http_proxy" -> "logging" [];
	"httpcore._sync.http_proxy" -> "ssl" [];
	"httpcore._sync.http_proxy" -> "base64" [];
	"httpcore._sync.http_proxy" -> "typing" [];
	"httpcore._sync.http11" -> "enum" [];
	"httpcore._sync.http11" -> "logging" [];
	"httpcore._sync.http11" -> "ssl" [];
	"httpcore._sync.http11" -> "time" [];
	"httpcore._sync.http11" -> "types" [];
	"httpcore._sync.http11" -> "typing" [];
	"httpcore._sync.http11" -> "h11" [];
	"h11._util" -> "typing" [];
	"h11._state" -> "typing" [];
	"h11._events" -> "re" [];
	"h11._events" -> "abc" [];
	"h11._events" -> "dataclasses" [];
	"h11._events" -> "typing" [];
	"h11._headers" -> "re" [];
	"h11._headers" -> "typing" [];
	"h11._headers" -> "typing_extensions" [];
	"h11._connection" -> "typing" [];
	"h11._writers" -> "typing" [];
	"h11._receivebuffer" -> "re" [];
	"h11._receivebuffer" -> "sys" [];
	"h11._receivebuffer" -> "typing" [];
	"h11._readers" -> "re" [];
	"h11._readers" -> "typing" [];
	"httpcore._sync.connection_pool" -> "ssl" [];
	"httpcore._sync.connection_pool" -> "sys" [];
	"httpcore._sync.connection_pool" -> "types" [];
	"httpcore._sync.connection_pool" -> "typing" [];
	"httpcore._sync.connection" -> "itertools" [];
	"httpcore._sync.connection" -> "logging" [];
	"httpcore._sync.connection" -> "ssl" [];
	"httpcore._sync.connection" -> "types" [];
	"httpcore._sync.connection" -> "typing" [];
	"httpcore._ssl" -> "ssl" [];
	"httpcore._ssl" -> "certifi" [];
	"httpcore._models" -> "typing" [];
	"httpcore._exceptions" -> "contextlib" [];
	"httpcore._exceptions" -> "typing" [];
	"httpcore._backends.sync" -> "socket" [];
	"httpcore._backends.sync" -> "ssl" [];
	"httpcore._backends.sync" -> "sys" [];
	"httpcore._backends.sync" -> "typing" [];
	"httpcore._backends.sync" -> "functools" [];
	"httpcore._backends.mock" -> "ssl" [];
	"httpcore._backends.mock" -> "typing" [];
	"httpcore._backends.base" -> "ssl" [];
	"httpcore._backends.base" -> "time" [];
	"httpcore._backends.base" -> "typing" [];
	"httpcore._async.socks_proxy" -> "logging" [];
	"httpcore._async.socks_proxy" -> "ssl" [];
	"httpcore._async.socks_proxy" -> "typing" [];
	"httpcore._async.socks_proxy" -> "socksio" [];
	"httpcore._backends.auto" -> "typing" [];
	"httpcore._async.http2" -> "enum" [];
	"httpcore._async.http2" -> "logging" [];
	"httpcore._async.http2" -> "time" [];
	"httpcore._async.http2" -> "types" [];
	"httpcore._async.http2" -> "typing" [];
	"httpcore._async.http2" -> "'h2.config'" [];
	"httpcore._async.http2" -> "'h2.connection'" [];
	"httpcore._async.http2" -> "'h2.events'" [];
	"httpcore._async.http2" -> "'h2.exceptions'" [];
	"httpcore._async.http2" -> "'h2.settings'" [];
	"httpcore._async.interfaces" -> "contextlib" [];
	"httpcore._async.interfaces" -> "typing" [];
	"httpcore._async.http_proxy" -> "logging" [];
	"httpcore._async.http_proxy" -> "ssl" [];
	"httpcore._async.http_proxy" -> "base64" [];
	"httpcore._async.http_proxy" -> "typing" [];
	"httpcore._async.http11" -> "enum" [];
	"httpcore._async.http11" -> "logging" [];
	"httpcore._async.http11" -> "ssl" [];
	"httpcore._async.http11" -> "time" [];
	"httpcore._async.http11" -> "types" [];
	"httpcore._async.http11" -> "typing" [];
	"httpcore._async.http11" -> "h11" [];
	"httpcore._async.connection_pool" -> "ssl" [];
	"httpcore._async.connection_pool" -> "sys" [];
	"httpcore._async.connection_pool" -> "types" [];
	"httpcore._async.connection_pool" -> "typing" [];
	"httpcore._async.connection" -> "itertools" [];
	"httpcore._async.connection" -> "logging" [];
	"httpcore._async.connection" -> "ssl" [];
	"httpcore._async.connection" -> "types" [];
	"httpcore._async.connection" -> "typing" [];
	"httpcore._api" -> "contextlib" [];
	"httpcore._api" -> "typing" [];
	"httpx._urls" -> "__future__" [];
	"httpx._urls" -> "typing" [];
	"httpx._urls" -> "idna" [];
	"httpx._utils" -> "__future__" [];
	"httpx._utils" -> "codecs" [];
	"httpx._utils" -> "ipaddress" [];
	"httpx._utils" -> "mimetypes" [];
	"httpx._utils" -> "os" [];
	"httpx._utils" -> "re" [];
	"httpx._utils" -> "time" [];
	"httpx._utils" -> "typing" [];
	"httpx._utils" -> "pathlib" [];
	"httpx._utils" -> "sniffio" [];
	"httpx._utils" -> "trio" [];
	"httpx._utils" -> "asyncio" [];
	"httpx._urlparse" -> "__future__" [];
	"httpx._urlparse" -> "ipaddress" [];
	"httpx._urlparse" -> "re" [];
	"httpx._urlparse" -> "typing" [];
	"httpx._urlparse" -> "idna" [];
	"httpx._types" -> "ssl" [];
	"httpx._types" -> "typing" [];
	"httpx._transports.wsgi" -> "__future__" [];
	"httpx._transports.wsgi" -> "io" [];
	"httpx._transports.wsgi" -> "itertools" [];
	"httpx._transports.wsgi" -> "sys" [];
	"httpx._transports.wsgi" -> "typing" [];
	"httpx._transports.wsgi" -> "_typeshed" [];
	"httpx._transports.wsgi" -> "'_typeshed.wsgi'" [];
	"httpx._transports.mock" -> "__future__" [];
	"httpx._transports.mock" -> "typing" [];
	"httpx._transports.default" -> "__future__" [];
	"httpx._transports.default" -> "contextlib" [];
	"httpx._transports.default" -> "typing" [];
	"httpx._transports.default" -> "types" [];
	"httpx._transports.default" -> "httpcore" [];
	"httpx._transports.default" -> "socksio" [];
	"httpx._transports.base" -> "__future__" [];
	"httpx._transports.base" -> "typing" [];
	"httpx._transports.base" -> "types" [];
	"httpx._transports.asgi" -> "__future__" [];
	"httpx._transports.asgi" -> "typing" [];
	"httpx._transports.asgi" -> "sniffio" [];
	"httpx._transports.asgi" -> "asyncio" [];
	"httpx._transports.asgi" -> "trio" [];
	"httpx._status_codes" -> "__future__" [];
	"httpx._status_codes" -> "enum" [];
	"httpx._models" -> "__future__" [];
	"httpx._models" -> "datetime" [];
	"httpx._models" -> "json" [];
	"httpx._models" -> "typing" [];
	"httpx._multipart" -> "__future__" [];
	"httpx._multipart" -> "io" [];
	"httpx._multipart" -> "os" [];
	"httpx._multipart" -> "typing" [];
	"httpx._multipart" -> "pathlib" [];
	"httpx._decoders" -> "__future__" [];
	"httpx._decoders" -> "codecs" [];
	"httpx._decoders" -> "io" [];
	"httpx._decoders" -> "typing" [];
	"httpx._decoders" -> "zlib" [];
	"httpx._compat" -> "ssl" [];
	"httpx._compat" -> "sys" [];
	"httpx._compat" -> "brotlicffi" [];
	"httpx._compat" -> "brotli" [];
	"httpx._exceptions" -> "__future__" [];
	"httpx._exceptions" -> "contextlib" [];
	"httpx._exceptions" -> "typing" [];
	"httpx._content" -> "__future__" [];
	"httpx._content" -> "inspect" [];
	"httpx._content" -> "warnings" [];
	"httpx._content" -> "json" [];
	"httpx._content" -> "typing" [];
	"httpx._config" -> "__future__" [];
	"httpx._config" -> "logging" [];
	"httpx._config" -> "os" [];
	"httpx._config" -> "ssl" [];
	"httpx._config" -> "typing" [];
	"httpx._config" -> "pathlib" [];
	"httpx._config" -> "certifi" [];
	"httpx._client" -> "__future__" [];
	"httpx._client" -> "datetime" [];
	"httpx._client" -> "enum" [];
	"httpx._client" -> "logging" [];
	"httpx._client" -> "typing" [];
	"httpx._client" -> "warnings" [];
	"httpx._client" -> "contextlib" [];
	"httpx._client" -> "types" [];
	"httpx._client" -> "h2" [];
	"httpx._auth" -> "__future__" [];
	"httpx._auth" -> "hashlib" [];
	"httpx._auth" -> "os" [];
	"httpx._auth" -> "re" [];
	"httpx._auth" -> "time" [];
	"httpx._auth" -> "typing" [];
	"httpx._auth" -> "base64" [];
	"httpx._auth" -> "netrc" [];
	"httpx._api" -> "__future__" [];
	"httpx._api" -> "typing" [];
	"httpx._api" -> "contextlib" [];
	"langsmith.run_helpers" -> "__future__" [];
	"langsmith.run_helpers" -> "asyncio" [];
	"langsmith.run_helpers" -> "contextlib" [];
	"langsmith.run_helpers" -> "contextvars" [];
	"langsmith.run_helpers" -> "datetime" [];
	"langsmith.run_helpers" -> "functools" [];
	"langsmith.run_helpers" -> "inspect" [];
	"langsmith.run_helpers" -> "logging" [];
	"langsmith.run_helpers" -> "uuid" [];
	"langsmith.run_helpers" -> "warnings" [];
	"langsmith.run_helpers" -> "typing" [];
	"langsmith.run_helpers" -> "typing_extensions" [];
	"langsmith.run_helpers" -> "types" [];
	"langsmith.env._runtime_env" -> "functools" [];
	"langsmith.env._runtime_env" -> "logging" [];
	"langsmith.env._runtime_env" -> "os" [];
	"langsmith.env._runtime_env" -> "platform" [];
	"langsmith.env._runtime_env" -> "subprocess" [];
	"langsmith.env._runtime_env" -> "typing" [];
	"langsmith.env._runtime_env" -> "psutil" [];
	"langsmith.env._runtime_env" -> "langsmith" [];
	"langsmith.env._runtime_env" -> "langchain" [];
	"langsmith.env._runtime_env" -> "langchain_core" [];
	"langchain" -> "warnings" [];
	"langchain" -> "importlib" [];
	"langchain" -> "typing" [];
	"langchain.globals" -> "warnings" [];
	"langchain.globals" -> "typing" [];
	"langchain_core.caches" -> "__future__" [];
	"langchain_core.caches" -> "abc" [];
	"langchain_core.caches" -> "typing" [];
	"langchain_core.caches" -> "typing_extensions" [];
	"langchain_community.vectorstores" -> "importlib" [];
	"langchain_community.vectorstores" -> "typing" [];
	"langchain_community.vectorstores.zilliz" -> "__future__" [];
	"langchain_community.vectorstores.zilliz" -> "logging" [];
	"langchain_community.vectorstores.zilliz" -> "typing" [];
	"langchain_community.vectorstores.zilliz" -> "pymilvus" [];
	"langchain_core.embeddings" -> "typing" [];
	"langchain_core.embeddings.fake" -> "hashlib" [];
	"langchain_core.embeddings.fake" -> "pydantic" [];
	"langchain_core.embeddings.fake" -> "typing_extensions" [];
	"langchain_core.embeddings.fake" -> "numpy" [];
	"langchain_core.embeddings.embeddings" -> "abc" [];
	"langchain_community.vectorstores.zep_cloud" -> "__future__" [];
	"langchain_community.vectorstores.zep_cloud" -> "logging" [];
	"langchain_community.vectorstores.zep_cloud" -> "warnings" [];
	"langchain_community.vectorstores.zep_cloud" -> "typing" [];
	"langchain_community.vectorstores.zep_cloud" -> "zep_cloud" [];
	"langchain_community.vectorstores.zep_cloud" -> "'zep_cloud.client'" [];
	"langchain_community.vectorstores.zep" -> "__future__" [];
	"langchain_community.vectorstores.zep" -> "logging" [];
	"langchain_community.vectorstores.zep" -> "warnings" [];
	"langchain_community.vectorstores.zep" -> "dataclasses" [];
	"langchain_community.vectorstores.zep" -> "typing" [];
	"langchain_community.vectorstores.zep" -> "'zep_python.document'" [];
	"langchain_community.vectorstores.zep" -> "zep_python" [];
	"langchain_community.vectorstores.yellowbrick" -> "__future__" [];
	"langchain_community.vectorstores.yellowbrick" -> "atexit" [];
	"langchain_community.vectorstores.yellowbrick" -> "csv" [];
	"langchain_community.vectorstores.yellowbrick" -> "enum" [];
	"langchain_community.vectorstores.yellowbrick" -> "json" [];
	"langchain_community.vectorstores.yellowbrick" -> "logging" [];
	"langchain_community.vectorstores.yellowbrick" -> "uuid" [];
	"langchain_community.vectorstores.yellowbrick" -> "contextlib" [];
	"langchain_community.vectorstores.yellowbrick" -> "io" [];
	"langchain_community.vectorstores.yellowbrick" -> "typing" [];
	"langchain_community.vectorstores.yellowbrick" -> "'psycopg2.extensions'" [];
	"langchain_community.vectorstores.yellowbrick" -> "psycopg2" [];
	"langchain_community.vectorstores.yellowbrick" -> "hashlib" [];
	"langchain_community.vectorstores.yellowbrick" -> "'psycopg2.extras'" [];
	"langchain_community.vectorstores.weaviate" -> "__future__" [];
	"langchain_community.vectorstores.weaviate" -> "datetime" [];
	"langchain_community.vectorstores.weaviate" -> "os" [];
	"langchain_community.vectorstores.weaviate" -> "typing" [];
	"langchain_community.vectorstores.weaviate" -> "uuid" [];
	"langchain_community.vectorstores.weaviate" -> "numpy" [];
	"langchain_community.vectorstores.weaviate" -> "weaviate" [];
	"langchain_community.vectorstores.weaviate" -> "'weaviate.util'" [];
	"langchain_community.vectorstores.utils" -> "enum" [];
	"langchain_community.vectorstores.utils" -> "typing" [];
	"langchain_community.vectorstores.utils" -> "numpy" [];
	"langchain_community.utils.math" -> "logging" [];
	"langchain_community.utils.math" -> "typing" [];
	"langchain_community.utils.math" -> "numpy" [];
	"langchain_community.utils.math" -> "simsimd" [];
	"langchain_community.vectorstores.vlite" -> "__future__" [];
	"langchain_community.vectorstores.vlite" -> "typing" [];
	"langchain_community.vectorstores.vlite" -> "uuid" [];
	"langchain_community.vectorstores.vlite" -> "vlite" [];
	"langchain_community.vectorstores.vlite" -> "'vlite.utils'" [];
	"langchain_community.vectorstores.vespa" -> "__future__" [];
	"langchain_community.vectorstores.vespa" -> "typing" [];
	"langchain_community.vectorstores.vespa" -> "'vespa.application'" [];
	"langchain_community.vectorstores.vespa" -> "json" [];
	"langchain_community.vectorstores.vectara" -> "__future__" [];
	"langchain_community.vectorstores.vectara" -> "json" [];
	"langchain_community.vectorstores.vectara" -> "logging" [];
	"langchain_community.vectorstores.vectara" -> "os" [];
	"langchain_community.vectorstores.vectara" -> "warnings" [];
	"langchain_community.vectorstores.vectara" -> "dataclasses" [];
	"langchain_community.vectorstores.vectara" -> "hashlib" [];
	"langchain_community.vectorstores.vectara" -> "typing" [];
	"langchain_community.vectorstores.vectara" -> "requests" [];
	"langchain_community.vectorstores.vectara" -> "pydantic" [];
	"langchain_community.vectorstores.vearch" -> "__future__" [];
	"langchain_community.vectorstores.vearch" -> "os" [];
	"langchain_community.vectorstores.vearch" -> "time" [];
	"langchain_community.vectorstores.vearch" -> "uuid" [];
	"langchain_community.vectorstores.vearch" -> "typing" [];
	"langchain_community.vectorstores.vearch" -> "numpy" [];
	"langchain_community.vectorstores.vearch" -> "vearch" [];
	"langchain_community.vectorstores.vearch" -> "vearch_cluster" [];
	"langchain_community.vectorstores.vdms" -> "__future__" [];
	"langchain_community.vectorstores.vdms" -> "base64" [];
	"langchain_community.vectorstores.vdms" -> "logging" [];
	"langchain_community.vectorstores.vdms" -> "os" [];
	"langchain_community.vectorstores.vdms" -> "uuid" [];
	"langchain_community.vectorstores.vdms" -> "copy" [];
	"langchain_community.vectorstores.vdms" -> "typing" [];
	"langchain_community.vectorstores.vdms" -> "numpy" [];
	"langchain_community.vectorstores.vdms" -> "vdms" [];
	"langchain_community.vectorstores.vald" -> "__future__" [];
	"langchain_community.vectorstores.vald" -> "typing" [];
	"langchain_community.vectorstores.vald" -> "numpy" [];
	"langchain_community.vectorstores.vald" -> "grpc" [];
	"langchain_community.vectorstores.vald" -> "vald" [];
	"langchain_community.vectorstores.vald" -> "'vald.v1'" [];
	"grpc" -> "abc" [];
	"grpc" -> "contextlib" [];
	"grpc" -> "enum" [];
	"grpc" -> "logging" [];
	"grpc" -> "sys" [];
	"grpc" -> "grpc_tools" [];
	"grpc" -> "grpc_health" [];
	"grpc" -> "grpc_reflection" [];
	"grpc.aio" -> "typing" [];
	"grpc.aio._typing" -> "typing" [];
	"grpc.aio._server" -> "typing" [];
	"grpc.aio._server" -> "grpc" [];
	"grpc.aio._metadata" -> "collections" [];
	"grpc.aio._metadata" -> "typing" [];
	"grpc.aio._interceptor" -> "abc" [];
	"grpc.aio._interceptor" -> "asyncio" [];
	"grpc.aio._interceptor" -> "collections" [];
	"grpc.aio._interceptor" -> "functools" [];
	"grpc.aio._interceptor" -> "typing" [];
	"grpc.aio._interceptor" -> "grpc" [];
	"grpc.aio._utils" -> "time" [];
	"grpc.aio._utils" -> "typing" [];
	"grpc.aio._channel" -> "asyncio" [];
	"grpc.aio._channel" -> "sys" [];
	"grpc.aio._channel" -> "typing" [];
	"grpc.aio._channel" -> "grpc" [];
	"grpc.aio._call" -> "asyncio" [];
	"grpc.aio._call" -> "enum" [];
	"grpc.aio._call" -> "functools" [];
	"grpc.aio._call" -> "inspect" [];
	"grpc.aio._call" -> "logging" [];
	"grpc.aio._call" -> "traceback" [];
	"grpc.aio._call" -> "typing" [];
	"grpc.aio._call" -> "grpc" [];
	"grpc.aio._base_server" -> "abc" [];
	"grpc.aio._base_server" -> "typing" [];
	"grpc.aio._base_server" -> "grpc" [];
	"grpc.aio._base_channel" -> "abc" [];
	"grpc.aio._base_channel" -> "typing" [];
	"grpc.aio._base_channel" -> "grpc" [];
	"grpc.aio._base_call" -> "abc" [];
	"grpc.aio._base_call" -> "typing" [];
	"grpc.aio._base_call" -> "grpc" [];
	"grpc._server" -> "__future__" [];
	"grpc._server" -> "abc" [];
	"grpc._server" -> "collections" [];
	"grpc._server" -> "concurrent" [];
	"grpc._server" -> "contextvars" [];
	"grpc._server" -> "enum" [];
	"grpc._server" -> "logging" [];
	"grpc._server" -> "threading" [];
	"grpc._server" -> "time" [];
	"grpc._server" -> "traceback" [];
	"grpc._server" -> "typing" [];
	"grpc._typing" -> "typing" [];
	"grpc.experimental" -> "copy" [];
	"grpc.experimental" -> "functools" [];
	"grpc.experimental" -> "sys" [];
	"grpc.experimental" -> "warnings" [];
	"grpc._simple_stubs" -> "collections" [];
	"grpc._simple_stubs" -> "datetime" [];
	"grpc._simple_stubs" -> "logging" [];
	"grpc._simple_stubs" -> "os" [];
	"grpc._simple_stubs" -> "threading" [];
	"grpc._simple_stubs" -> "typing" [];
	"grpc._channel" -> "copy" [];
	"grpc._channel" -> "functools" [];
	"grpc._channel" -> "logging" [];
	"grpc._channel" -> "os" [];
	"grpc._channel" -> "sys" [];
	"grpc._channel" -> "threading" [];
	"grpc._channel" -> "time" [];
	"grpc._channel" -> "types" [];
	"grpc._channel" -> "typing" [];
	"grpc._auth" -> "inspect" [];
	"grpc._auth" -> "typing" [];
	"grpc._plugin_wrapping" -> "collections" [];
	"grpc._plugin_wrapping" -> "logging" [];
	"grpc._plugin_wrapping" -> "threading" [];
	"grpc._plugin_wrapping" -> "typing" [];
	"grpc._plugin_wrapping" -> "contextvars" [];
	"grpc._utilities" -> "collections" [];
	"grpc._utilities" -> "logging" [];
	"grpc._utilities" -> "threading" [];
	"grpc._utilities" -> "time" [];
	"grpc._utilities" -> "typing" [];
	"grpc._runtime_protos" -> "sys" [];
	"grpc._runtime_protos" -> "types" [];
	"grpc._runtime_protos" -> "typing" [];
	"grpc._runtime_protos" -> "grpc_tools" [];
	"grpc._runtime_protos" -> "'grpc_tools.protoc'" [];
	"grpc._observability" -> "__future__" [];
	"grpc._observability" -> "abc" [];
	"grpc._observability" -> "contextlib" [];
	"grpc._observability" -> "logging" [];
	"grpc._observability" -> "threading" [];
	"grpc._observability" -> "typing" [];
	"grpc._interceptor" -> "collections" [];
	"grpc._interceptor" -> "sys" [];
	"grpc._interceptor" -> "types" [];
	"grpc._interceptor" -> "typing" [];
	"grpc._compression" -> "__future__" [];
	"grpc._compression" -> "typing" [];
	"grpc._common" -> "logging" [];
	"grpc._common" -> "time" [];
	"grpc._common" -> "typing" [];
	"langchain_community.vectorstores.usearch" -> "__future__" [];
	"langchain_community.vectorstores.usearch" -> "typing" [];
	"langchain_community.vectorstores.usearch" -> "numpy" [];
	"langchain_community.docstore.in_memory" -> "typing" [];
	"langchain_community.docstore.base" -> "abc" [];
	"langchain_community.docstore.base" -> "typing" [];
	"langchain_community.vectorstores.upstash" -> "__future__" [];
	"langchain_community.vectorstores.upstash" -> "logging" [];
	"langchain_community.vectorstores.upstash" -> "uuid" [];
	"langchain_community.vectorstores.upstash" -> "typing" [];
	"langchain_community.vectorstores.upstash" -> "numpy" [];
	"langchain_community.vectorstores.upstash" -> "upstash_vector" [];
	"langchain_community.vectorstores.upstash" -> "'upstash_vector.types'" [];
	"langchain_community.vectorstores.typesense" -> "__future__" [];
	"langchain_community.vectorstores.typesense" -> "uuid" [];
	"langchain_community.vectorstores.typesense" -> "typing" [];
	"langchain_community.vectorstores.typesense" -> "typesense" [];
	"langchain_community.vectorstores.typesense" -> "'typesense.collection'" [];
	"langchain_community.vectorstores.typesense" -> "'typesense.exceptions'" [];
	"langchain_community.vectorstores.timescalevector" -> "__future__" [];
	"langchain_community.vectorstores.timescalevector" -> "enum" [];
	"langchain_community.vectorstores.timescalevector" -> "logging" [];
	"langchain_community.vectorstores.timescalevector" -> "uuid" [];
	"langchain_community.vectorstores.timescalevector" -> "datetime" [];
	"langchain_community.vectorstores.timescalevector" -> "typing" [];
	"langchain_community.vectorstores.timescalevector" -> "timescale_vector" [];
	"langchain_community.vectorstores.tiledb" -> "__future__" [];
	"langchain_community.vectorstores.tiledb" -> "pickle" [];
	"langchain_community.vectorstores.tiledb" -> "random" [];
	"langchain_community.vectorstores.tiledb" -> "sys" [];
	"langchain_community.vectorstores.tiledb" -> "typing" [];
	"langchain_community.vectorstores.tiledb" -> "numpy" [];
	"langchain_community.vectorstores.tigris" -> "__future__" [];
	"langchain_community.vectorstores.tigris" -> "itertools" [];
	"langchain_community.vectorstores.tigris" -> "typing" [];
	"langchain_community.vectorstores.tigris" -> "tigrisdb" [];
	"langchain_community.vectorstores.tigris" -> "'tigrisdb.types'" [];
	"langchain_community.vectorstores.tidb_vector" -> "uuid" [];
	"langchain_community.vectorstores.tidb_vector" -> "typing" [];
	"langchain_community.vectorstores.tidb_vector" -> "tidb_vector" [];
	"langchain_community.vectorstores.tidb_vector" -> "'tidb_vector.integrations'" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "importlib" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "os" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "tempfile" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "pathlib" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "typing" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "pydantic" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "thirdai" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "pandas" [];
	"pandas" -> "__future__" [];
	"pandas" -> "os" [];
	"pandas" -> "warnings" [];
	"pandas" -> "cmath" [];
	"pandas._libs.writers" -> "numpy" [];
	"pandas._typing" -> "__future__" [];
	"pandas._typing" -> "datetime" [];
	"pandas._typing" -> "os" [];
	"pandas._typing" -> "sys" [];
	"pandas._typing" -> "typing" [];
	"pandas._typing" -> "numpy" [];
	"pandas._typing" -> "typing_extensions" [];
	"pandas.tseries.holiday" -> "__future__" [];
	"pandas.tseries.holiday" -> "datetime" [];
	"pandas.tseries.holiday" -> "warnings" [];
	"pandas.tseries.holiday" -> "numpy" [];
	"pandas.tseries.holiday" -> "pandas" [];
	"pandas.io.formats.format" -> "__future__" [];
	"pandas.io.formats.format" -> "contextlib" [];
	"pandas.io.formats.format" -> "csv" [];
	"pandas.io.formats.format" -> "decimal" [];
	"pandas.io.formats.format" -> "functools" [];
	"pandas.io.formats.format" -> "io" [];
	"pandas.io.formats.format" -> "math" [];
	"pandas.io.formats.format" -> "re" [];
	"pandas.io.formats.format" -> "shutil" [];
	"pandas.io.formats.format" -> "typing" [];
	"pandas.io.formats.format" -> "numpy" [];
	"pandas.io.formats.format" -> "pandas" [];
	"pandas.io.formats.csvs" -> "__future__" [];
	"pandas.io.formats.csvs" -> "csv" [];
	"pandas.io.formats.csvs" -> "os" [];
	"pandas.io.formats.csvs" -> "typing" [];
	"pandas.io.formats.csvs" -> "numpy" [];
	"pandas.core.dtypes.generic" -> "__future__" [];
	"pandas.core.dtypes.generic" -> "typing" [];
	"pandas.core.dtypes.generic" -> "pandas" [];
	"pandas.core.arraylike" -> "__future__" [];
	"pandas.core.arraylike" -> "operator" [];
	"pandas.core.arraylike" -> "typing" [];
	"pandas.core.arraylike" -> "numpy" [];
	"pandas.core.ops.common" -> "__future__" [];
	"pandas.core.ops.common" -> "functools" [];
	"pandas.core.ops.common" -> "typing" [];
	"pandas.core.ops" -> "__future__" [];
	"pandas.core.ops.mask_ops" -> "__future__" [];
	"pandas.core.ops.mask_ops" -> "numpy" [];
	"pandas.core.ops.invalid" -> "__future__" [];
	"pandas.core.ops.invalid" -> "operator" [];
	"pandas.core.ops.invalid" -> "typing" [];
	"pandas.core.ops.invalid" -> "numpy" [];
	"pandas.core.ops.docstrings" -> "__future__" [];
	"pandas.core.ops.array_ops" -> "__future__" [];
	"pandas.core.ops.array_ops" -> "datetime" [];
	"pandas.core.ops.array_ops" -> "functools" [];
	"pandas.core.ops.array_ops" -> "operator" [];
	"pandas.core.ops.array_ops" -> "typing" [];
	"pandas.core.ops.array_ops" -> "warnings" [];
	"pandas.core.ops.array_ops" -> "numpy" [];
	"pandas.core.ops.dispatch" -> "__future__" [];
	"pandas.core.ops.dispatch" -> "typing" [];
	"pandas.core.computation.expressions" -> "__future__" [];
	"pandas.core.computation.expressions" -> "operator" [];
	"pandas.core.computation.expressions" -> "typing" [];
	"pandas.core.computation.expressions" -> "warnings" [];
	"pandas.core.computation.expressions" -> "numpy" [];
	"pandas.core.computation.expressions" -> "numexpr" [];
	"pandas.core.computation.check" -> "__future__" [];
	"pandas.compat._optional" -> "__future__" [];
	"pandas.compat._optional" -> "importlib" [];
	"pandas.compat._optional" -> "sys" [];
	"pandas.compat._optional" -> "typing" [];
	"pandas.compat._optional" -> "warnings" [];
	"pandas.compat._optional" -> "types" [];
	"pandas.util.version" -> "__future__" [];
	"pandas.util.version" -> "collections" [];
	"pandas.util.version" -> "itertools" [];
	"pandas.util.version" -> "re" [];
	"pandas.util.version" -> "typing" [];
	"pandas.util.version" -> "warnings" [];
	"pandas.core.util.hashing" -> "__future__" [];
	"pandas.core.util.hashing" -> "itertools" [];
	"pandas.core.util.hashing" -> "typing" [];
	"pandas.core.util.hashing" -> "numpy" [];
	"pandas.core.util.hashing" -> "pandas" [];
	"pandas.core.computation.expr" -> "__future__" [];
	"pandas.core.computation.expr" -> "ast" [];
	"pandas.core.computation.expr" -> "functools" [];
	"pandas.core.computation.expr" -> "keyword" [];
	"pandas.core.computation.expr" -> "tokenize" [];
	"pandas.core.computation.expr" -> "typing" [];
	"pandas.core.computation.expr" -> "numpy" [];
	"pandas.core.computation.expr" -> "pandas" [];
	"pandas.core.computation.scope" -> "__future__" [];
	"pandas.core.computation.scope" -> "collections" [];
	"pandas.core.computation.scope" -> "datetime" [];
	"pandas.core.computation.scope" -> "inspect" [];
	"pandas.core.computation.scope" -> "io" [];
	"pandas.core.computation.scope" -> "itertools" [];
	"pandas.core.computation.scope" -> "pprint" [];
	"pandas.core.computation.scope" -> "struct" [];
	"pandas.core.computation.scope" -> "sys" [];
	"pandas.core.computation.scope" -> "typing" [];
	"pandas.core.computation.scope" -> "numpy" [];
	"pandas.core.computation.parsing" -> "__future__" [];
	"pandas.core.computation.parsing" -> "io" [];
	"pandas.core.computation.parsing" -> "keyword" [];
	"pandas.core.computation.parsing" -> "token" [];
	"pandas.core.computation.parsing" -> "tokenize" [];
	"pandas.core.computation.parsing" -> "typing" [];
	"pandas.core.computation.ops" -> "__future__" [];
	"pandas.core.computation.ops" -> "datetime" [];
	"pandas.core.computation.ops" -> "functools" [];
	"pandas.core.computation.ops" -> "operator" [];
	"pandas.core.computation.ops" -> "typing" [];
	"pandas.core.computation.ops" -> "numpy" [];
	"pandas.core.computation.eval" -> "__future__" [];
	"pandas.core.computation.eval" -> "tokenize" [];
	"pandas.core.computation.eval" -> "typing" [];
	"pandas.core.computation.eval" -> "warnings" [];
	"pandas.core.computation.engines" -> "__future__" [];
	"pandas.core.computation.engines" -> "abc" [];
	"pandas.core.computation.engines" -> "typing" [];
	"pandas.core.computation.engines" -> "numexpr" [];
	"pandas.core.computation.align" -> "__future__" [];
	"pandas.core.computation.align" -> "functools" [];
	"pandas.core.computation.align" -> "typing" [];
	"pandas.core.computation.align" -> "warnings" [];
	"pandas.core.computation.align" -> "numpy" [];
	"pandas.core.computation.align" -> "pandas" [];
	"pandas.util._validators" -> "__future__" [];
	"pandas.util._validators" -> "typing" [];
	"pandas.util._validators" -> "numpy" [];
	"pandas.core.computation.common" -> "__future__" [];
	"pandas.core.computation.common" -> "functools" [];
	"pandas.core.computation.common" -> "numpy" [];
	"pandas.core.dtypes.cast" -> "__future__" [];
	"pandas.core.dtypes.cast" -> "datetime" [];
	"pandas.core.dtypes.cast" -> "functools" [];
	"pandas.core.dtypes.cast" -> "typing" [];
	"pandas.core.dtypes.cast" -> "warnings" [];
	"pandas.core.dtypes.cast" -> "numpy" [];
	"pandas.core.dtypes.cast" -> "pandas" [];
	"pandas.core.dtypes.cast" -> "pyarrow" [];
	"pandas.core.arrays.timedeltas" -> "__future__" [];
	"pandas.core.arrays.timedeltas" -> "datetime" [];
	"pandas.core.arrays.timedeltas" -> "operator" [];
	"pandas.core.arrays.timedeltas" -> "typing" [];
	"pandas.core.arrays.timedeltas" -> "numpy" [];
	"pandas.core.arrays.timedeltas" -> "pandas" [];
	"pandas.core.arrays.timedeltas" -> "textwrap" [];
	"pandas.core.arrays._ranges" -> "__future__" [];
	"pandas.core.arrays._ranges" -> "typing" [];
	"pandas.core.arrays._ranges" -> "numpy" [];
	"pandas.core.arrays.datetimelike" -> "__future__" [];
	"pandas.core.arrays.datetimelike" -> "datetime" [];
	"pandas.core.arrays.datetimelike" -> "functools" [];
	"pandas.core.arrays.datetimelike" -> "operator" [];
	"pandas.core.arrays.datetimelike" -> "typing" [];
	"pandas.core.arrays.datetimelike" -> "warnings" [];
	"pandas.core.arrays.datetimelike" -> "numpy" [];
	"pandas.core.arrays.datetimelike" -> "pandas" [];
	"pandas.core.groupby.ops" -> "__future__" [];
	"pandas.core.groupby.ops" -> "collections" [];
	"pandas.core.groupby.ops" -> "functools" [];
	"pandas.core.groupby.ops" -> "typing" [];
	"pandas.core.groupby.ops" -> "numpy" [];
	"pandas.core.sorting" -> "__future__" [];
	"pandas.core.sorting" -> "collections" [];
	"pandas.core.sorting" -> "typing" [];
	"pandas.core.sorting" -> "numpy" [];
	"pandas.core.sorting" -> "pandas" [];
	"pandas.core.groupby.grouper" -> "__future__" [];
	"pandas.core.groupby.grouper" -> "typing" [];
	"pandas.core.groupby.grouper" -> "warnings" [];
	"pandas.core.groupby.grouper" -> "numpy" [];
	"pandas.core.groupby.categorical" -> "__future__" [];
	"pandas.core.groupby.categorical" -> "numpy" [];
	"pandas.core.arrays.categorical" -> "__future__" [];
	"pandas.core.arrays.categorical" -> "csv" [];
	"pandas.core.arrays.categorical" -> "functools" [];
	"pandas.core.arrays.categorical" -> "operator" [];
	"pandas.core.arrays.categorical" -> "shutil" [];
	"pandas.core.arrays.categorical" -> "typing" [];
	"pandas.core.arrays.categorical" -> "warnings" [];
	"pandas.core.arrays.categorical" -> "numpy" [];
	"pandas.core.arrays.categorical" -> "pandas" [];
	"pandas.core.dtypes.concat" -> "__future__" [];
	"pandas.core.dtypes.concat" -> "typing" [];
	"pandas.core.dtypes.concat" -> "warnings" [];
	"pandas.core.dtypes.concat" -> "numpy" [];
	"pandas.core.dtypes.concat" -> "pandas" [];
	"pandas.core.dtypes.astype" -> "__future__" [];
	"pandas.core.dtypes.astype" -> "inspect" [];
	"pandas.core.dtypes.astype" -> "typing" [];
	"pandas.core.dtypes.astype" -> "warnings" [];
	"pandas.core.dtypes.astype" -> "numpy" [];
	"pandas.core.strings.object_array" -> "__future__" [];
	"pandas.core.strings.object_array" -> "functools" [];
	"pandas.core.strings.object_array" -> "re" [];
	"pandas.core.strings.object_array" -> "textwrap" [];
	"pandas.core.strings.object_array" -> "typing" [];
	"pandas.core.strings.object_array" -> "unicodedata" [];
	"pandas.core.strings.object_array" -> "numpy" [];
	"pandas.core.strings.object_array" -> "pandas" [];
	"pandas.core.strings.base" -> "__future__" [];
	"pandas.core.strings.base" -> "abc" [];
	"pandas.core.strings.base" -> "typing" [];
	"pandas.core.strings.base" -> "numpy" [];
	"pandas.core.strings.base" -> "re" [];
	"pandas.core.strings.base" -> "pandas" [];
	"pandas.core.accessor" -> "__future__" [];
	"pandas.core.accessor" -> "typing" [];
	"pandas.core.accessor" -> "warnings" [];
	"pandas.core.accessor" -> "pandas" [];
	"pandas.core.groupby.groupby" -> "__future__" [];
	"pandas.core.groupby.groupby" -> "datetime" [];
	"pandas.core.groupby.groupby" -> "functools" [];
	"pandas.core.groupby.groupby" -> "inspect" [];
	"pandas.core.groupby.groupby" -> "textwrap" [];
	"pandas.core.groupby.groupby" -> "typing" [];
	"pandas.core.groupby.groupby" -> "warnings" [];
	"pandas.core.groupby.groupby" -> "numpy" [];
	"pandas.core._numba.kernels.var_" -> "__future__" [];
	"pandas.core._numba.kernels.var_" -> "typing" [];
	"pandas.core._numba.kernels.var_" -> "numba" [];
	"pandas.core._numba.kernels.var_" -> "numpy" [];
	"pandas.core._numba.kernels.shared" -> "__future__" [];
	"pandas.core._numba.kernels.shared" -> "typing" [];
	"pandas.core._numba.kernels.shared" -> "numba" [];
	"pandas.core._numba.kernels.shared" -> "numpy" [];
	"pandas.core._numba.kernels.sum_" -> "__future__" [];
	"pandas.core._numba.kernels.sum_" -> "typing" [];
	"pandas.core._numba.kernels.sum_" -> "numba" [];
	"pandas.core._numba.kernels.sum_" -> "'numba.extending'" [];
	"pandas.core._numba.kernels.sum_" -> "numpy" [];
	"pandas.core._numba.kernels.min_max_" -> "__future__" [];
	"pandas.core._numba.kernels.min_max_" -> "typing" [];
	"pandas.core._numba.kernels.min_max_" -> "numba" [];
	"pandas.core._numba.kernels.min_max_" -> "numpy" [];
	"pandas.core._numba.kernels.mean_" -> "__future__" [];
	"pandas.core._numba.kernels.mean_" -> "typing" [];
	"pandas.core._numba.kernels.mean_" -> "numba" [];
	"pandas.core._numba.kernels.mean_" -> "numpy" [];
	"pandas.core.window.expanding" -> "__future__" [];
	"pandas.core.window.expanding" -> "textwrap" [];
	"pandas.core.window.expanding" -> "typing" [];
	"pandas.core.window.expanding" -> "pandas" [];
	"pandas.core.window.doc" -> "__future__" [];
	"pandas.core.window.doc" -> "textwrap" [];
	"pandas.core.shared_docs" -> "__future__" [];
	"pandas.core.indexers.objects" -> "__future__" [];
	"pandas.core.indexers.objects" -> "datetime" [];
	"pandas.core.indexers.objects" -> "numpy" [];
	"pandas.core.window.ewm" -> "__future__" [];
	"pandas.core.window.ewm" -> "datetime" [];
	"pandas.core.window.ewm" -> "functools" [];
	"pandas.core.window.ewm" -> "textwrap" [];
	"pandas.core.window.ewm" -> "typing" [];
	"pandas.core.window.ewm" -> "numpy" [];
	"pandas.core.window.ewm" -> "pandas" [];
	"pandas.core.window.online" -> "__future__" [];
	"pandas.core.window.online" -> "typing" [];
	"pandas.core.window.online" -> "numpy" [];
	"pandas.core.window.online" -> "numba" [];
	"pandas.core.window.numba_" -> "__future__" [];
	"pandas.core.window.numba_" -> "functools" [];
	"pandas.core.window.numba_" -> "typing" [];
	"pandas.core.window.numba_" -> "numpy" [];
	"pandas.core.window.numba_" -> "numba" [];
	"pandas.core.window.common" -> "__future__" [];
	"pandas.core.window.common" -> "collections" [];
	"pandas.core.window.common" -> "typing" [];
	"pandas.core.window.common" -> "numpy" [];
	"pandas.core.window.common" -> "pandas" [];
	"pandas.core.util.numba_" -> "__future__" [];
	"pandas.core.util.numba_" -> "types" [];
	"pandas.core.util.numba_" -> "typing" [];
	"pandas.core.util.numba_" -> "numpy" [];
	"pandas.core.util.numba_" -> "numba" [];
	"pandas.core.internals.blocks" -> "__future__" [];
	"pandas.core.internals.blocks" -> "functools" [];
	"pandas.core.internals.blocks" -> "inspect" [];
	"pandas.core.internals.blocks" -> "re" [];
	"pandas.core.internals.blocks" -> "typing" [];
	"pandas.core.internals.blocks" -> "warnings" [];
	"pandas.core.internals.blocks" -> "weakref" [];
	"pandas.core.internals.blocks" -> "numpy" [];
	"pandas.core.array_algos.transforms" -> "__future__" [];
	"pandas.core.array_algos.transforms" -> "typing" [];
	"pandas.core.array_algos.transforms" -> "numpy" [];
	"pandas.core.array_algos.replace" -> "__future__" [];
	"pandas.core.array_algos.replace" -> "operator" [];
	"pandas.core.array_algos.replace" -> "re" [];
	"pandas.core.array_algos.replace" -> "typing" [];
	"pandas.core.array_algos.replace" -> "numpy" [];
	"pandas.core.array_algos.quantile" -> "__future__" [];
	"pandas.core.array_algos.quantile" -> "typing" [];
	"pandas.core.array_algos.quantile" -> "numpy" [];
	"pandas.core.array_algos.putmask" -> "__future__" [];
	"pandas.core.array_algos.putmask" -> "typing" [];
	"pandas.core.array_algos.putmask" -> "numpy" [];
	"pandas.core.array_algos.putmask" -> "pandas" [];
	"pandas.core.groupby.indexing" -> "__future__" [];
	"pandas.core.groupby.indexing" -> "typing" [];
	"pandas.core.groupby.indexing" -> "numpy" [];
	"pandas.core.groupby.indexing" -> "pandas" [];
	"pandas.core.arrays.string_arrow" -> "__future__" [];
	"pandas.core.arrays.string_arrow" -> "functools" [];
	"pandas.core.arrays.string_arrow" -> "operator" [];
	"pandas.core.arrays.string_arrow" -> "re" [];
	"pandas.core.arrays.string_arrow" -> "typing" [];
	"pandas.core.arrays.string_arrow" -> "warnings" [];
	"pandas.core.arrays.string_arrow" -> "numpy" [];
	"pandas.core.arrays.string_arrow" -> "pyarrow" [];
	"pandas.core.arrays.string_arrow" -> "pandas" [];
	"pandas.core.arrays.masked" -> "__future__" [];
	"pandas.core.arrays.masked" -> "typing" [];
	"pandas.core.arrays.masked" -> "warnings" [];
	"pandas.core.arrays.masked" -> "numpy" [];
	"pandas.core.arrays.masked" -> "pandas" [];
	"pandas.core.arrays.masked" -> "pyarrow" [];
	"pandas.core.arrays._utils" -> "__future__" [];
	"pandas.core.arrays._utils" -> "typing" [];
	"pandas.core.arrays._utils" -> "numpy" [];
	"pandas.core.array_algos.masked_reductions" -> "__future__" [];
	"pandas.core.array_algos.masked_reductions" -> "typing" [];
	"pandas.core.array_algos.masked_reductions" -> "warnings" [];
	"pandas.core.array_algos.masked_reductions" -> "numpy" [];
	"pandas.core.array_algos.masked_accumulations" -> "__future__" [];
	"pandas.core.array_algos.masked_accumulations" -> "typing" [];
	"pandas.core.array_algos.masked_accumulations" -> "numpy" [];
	"pandas.core.dtypes.base" -> "__future__" [];
	"pandas.core.dtypes.base" -> "typing" [];
	"pandas.core.dtypes.base" -> "numpy" [];
	"pandas.core.dtypes.base" -> "pandas" [];
	"pandas.core.arrays.arrow._arrow_utils" -> "__future__" [];
	"pandas.core.arrays.arrow._arrow_utils" -> "warnings" [];
	"pandas.core.arrays.arrow._arrow_utils" -> "numpy" [];
	"pandas.core.arrays.arrow._arrow_utils" -> "pyarrow" [];
	"pyarrow.compute" -> "collections" [];
	"pyarrow.compute" -> "inspect" [];
	"pyarrow.compute" -> "textwrap" [];
	"pyarrow.compute" -> "warnings" [];
	"pyarrow.vendored.docscrape" -> "inspect" [];
	"pyarrow.vendored.docscrape" -> "textwrap" [];
	"pyarrow.vendored.docscrape" -> "re" [];
	"pyarrow.vendored.docscrape" -> "pydoc" [];
	"pyarrow.vendored.docscrape" -> "warnings" [];
	"pyarrow.vendored.docscrape" -> "collections" [];
	"pyarrow.vendored.docscrape" -> "copy" [];
	"pyarrow.vendored.docscrape" -> "sys" [];
	"pyarrow.vendored.docscrape" -> "sphinx" [];
	"pandas.core.arrays.numeric" -> "__future__" [];
	"pandas.core.arrays.numeric" -> "numbers" [];
	"pandas.core.arrays.numeric" -> "typing" [];
	"pandas.core.arrays.numeric" -> "numpy" [];
	"pandas.core.arrays.numeric" -> "pyarrow" [];
	"pandas.core.tools.numeric" -> "__future__" [];
	"pandas.core.tools.numeric" -> "typing" [];
	"pandas.core.tools.numeric" -> "warnings" [];
	"pandas.core.tools.numeric" -> "numpy" [];
	"pandas.core.tools.numeric" -> "pandas" [];
	"pandas.core.arrays.boolean" -> "__future__" [];
	"pandas.core.arrays.boolean" -> "numbers" [];
	"pandas.core.arrays.boolean" -> "typing" [];
	"pandas.core.arrays.boolean" -> "numpy" [];
	"pandas.core.arrays.boolean" -> "pyarrow" [];
	"pandas.core.arrays.arrow.accessors" -> "__future__" [];
	"pandas.core.arrays.arrow.accessors" -> "abc" [];
	"pandas.core.arrays.arrow.accessors" -> "typing" [];
	"pandas.core.arrays.arrow.accessors" -> "pyarrow" [];
	"pandas.core.arrays.arrow.accessors" -> "pandas" [];
	"pandas.core.arrays._arrow_string_mixins" -> "__future__" [];
	"pandas.core.arrays._arrow_string_mixins" -> "typing" [];
	"pandas.core.arrays._arrow_string_mixins" -> "numpy" [];
	"pandas.core.arrays._arrow_string_mixins" -> "pyarrow" [];
	"pandas.core.apply" -> "__future__" [];
	"pandas.core.apply" -> "abc" [];
	"pandas.core.apply" -> "collections" [];
	"pandas.core.apply" -> "functools" [];
	"pandas.core.apply" -> "inspect" [];
	"pandas.core.apply" -> "typing" [];
	"pandas.core.apply" -> "warnings" [];
	"pandas.core.apply" -> "numpy" [];
	"pandas.core.apply" -> "pandas" [];
	"pandas.core._numba.extensions" -> "__future__" [];
	"pandas.core._numba.extensions" -> "contextlib" [];
	"pandas.core._numba.extensions" -> "operator" [];
	"pandas.core._numba.extensions" -> "numba" [];
	"pandas.core._numba.extensions" -> "'numba.core'" [];
	"pandas.core._numba.extensions" -> "numpy" [];
	"pandas.core._numba.extensions" -> "'numba.typed'" [];
	"pandas.core._numba.executor" -> "__future__" [];
	"pandas.core._numba.executor" -> "functools" [];
	"pandas.core._numba.executor" -> "typing" [];
	"pandas.core._numba.executor" -> "numpy" [];
	"pandas.core._numba.executor" -> "numba" [];
	"pandas.core.groupby.numba_" -> "__future__" [];
	"pandas.core.groupby.numba_" -> "functools" [];
	"pandas.core.groupby.numba_" -> "inspect" [];
	"pandas.core.groupby.numba_" -> "typing" [];
	"pandas.core.groupby.numba_" -> "numpy" [];
	"pandas.core.groupby.numba_" -> "numba" [];
	"pandas.core.groupby.base" -> "__future__" [];
	"pandas.core.groupby.base" -> "dataclasses" [];
	"pandas.core.groupby.base" -> "typing" [];
	"pandas.core.arrays.period" -> "__future__" [];
	"pandas.core.arrays.period" -> "datetime" [];
	"pandas.core.arrays.period" -> "operator" [];
	"pandas.core.arrays.period" -> "typing" [];
	"pandas.core.arrays.period" -> "warnings" [];
	"pandas.core.arrays.period" -> "numpy" [];
	"pandas.core.arrays.period" -> "pyarrow" [];
	"pandas.core.arrays.arrow.extension_types" -> "__future__" [];
	"pandas.core.arrays.arrow.extension_types" -> "json" [];
	"pandas.core.arrays.arrow.extension_types" -> "typing" [];
	"pandas.core.arrays.arrow.extension_types" -> "pyarrow" [];
	"pandas.core.arrays.arrow.extension_types" -> "io" [];
	"pandas.core.arrays.arrow.extension_types" -> "pickletools" [];
	"pandas.core.arrays.interval" -> "__future__" [];
	"pandas.core.arrays.interval" -> "operator" [];
	"pandas.core.arrays.interval" -> "textwrap" [];
	"pandas.core.arrays.interval" -> "typing" [];
	"pandas.core.arrays.interval" -> "warnings" [];
	"pandas.core.arrays.interval" -> "numpy" [];
	"pandas.core.arrays.interval" -> "pandas" [];
	"pandas.core.arrays.interval" -> "pyarrow" [];
	"pandas.tseries.frequencies" -> "__future__" [];
	"pandas.tseries.frequencies" -> "typing" [];
	"pandas.tseries.frequencies" -> "numpy" [];
	"pandas.tseries.frequencies" -> "pandas" [];
	"pandas.core.indexers.utils" -> "__future__" [];
	"pandas.core.indexers.utils" -> "typing" [];
	"pandas.core.indexers.utils" -> "numpy" [];
	"pandas.core.arrays._mixins" -> "__future__" [];
	"pandas.core.arrays._mixins" -> "functools" [];
	"pandas.core.arrays._mixins" -> "typing" [];
	"pandas.core.arrays._mixins" -> "numpy" [];
	"pandas.core.arrays._mixins" -> "pandas" [];
	"pandas.core.array_algos.datetimelike_accumulations" -> "__future__" [];
	"pandas.core.array_algos.datetimelike_accumulations" -> "typing" [];
	"pandas.core.array_algos.datetimelike_accumulations" -> "numpy" [];
	"pandas.compat.numpy.function" -> "__future__" [];
	"pandas.compat.numpy.function" -> "typing" [];
	"pandas.compat.numpy.function" -> "numpy" [];
	"pandas.compat.numpy" -> "warnings" [];
	"pandas.compat.numpy" -> "numpy" [];
	"pandas.core.arrays.datetimes" -> "__future__" [];
	"pandas.core.arrays.datetimes" -> "datetime" [];
	"pandas.core.arrays.datetimes" -> "typing" [];
	"pandas.core.arrays.datetimes" -> "warnings" [];
	"pandas.core.arrays.datetimes" -> "numpy" [];
	"pandas.core.arrays.datetimes" -> "pandas" [];
	"pyarrow" -> "gc" [];
	"pyarrow" -> "importlib" [];
	"pyarrow" -> "os" [];
	"pyarrow" -> "platform" [];
	"pyarrow" -> "sys" [];
	"pyarrow" -> "warnings" [];
	"pyarrow" -> "setuptools_scm" [];
	"pyarrow" -> "'setuptools_scm.git'" [];
	"pyarrow" -> "subprocess" [];
	"pyarrow" -> "glob" [];
	"pyarrow.vendored.version" -> "collections" [];
	"pyarrow.vendored.version" -> "itertools" [];
	"pyarrow.vendored.version" -> "re" [];
	"pyarrow.vendored.version" -> "warnings" [];
	"pyarrow.parquet.core" -> "collections" [];
	"pyarrow.parquet.core" -> "contextlib" [];
	"pyarrow.parquet.core" -> "functools" [];
	"pyarrow.parquet.core" -> "inspect" [];
	"pyarrow.parquet.core" -> "json" [];
	"pyarrow.parquet.core" -> "os" [];
	"pyarrow.parquet.core" -> "re" [];
	"pyarrow.parquet.core" -> "operator" [];
	"pyarrow.parquet.core" -> "pyarrow" [];
	"pyarrow.pandas_compat" -> "ast" [];
	"pyarrow.pandas_compat" -> "concurrent" [];
	"pyarrow.pandas_compat" -> "copy" [];
	"pyarrow.pandas_compat" -> "decimal" [];
	"pyarrow.pandas_compat" -> "itertools" [];
	"pyarrow.pandas_compat" -> "json" [];
	"pyarrow.pandas_compat" -> "operator" [];
	"pyarrow.pandas_compat" -> "re" [];
	"pyarrow.pandas_compat" -> "warnings" [];
	"pyarrow.pandas_compat" -> "numpy" [];
	"pyarrow.pandas_compat" -> "'pandas.api.internals'" [];
	"pyarrow.pandas_compat" -> "pandas" [];
	"pyarrow.orc" -> "numbers" [];
	"pyarrow.orc" -> "warnings" [];
	"pyarrow.interchange.from_dataframe" -> "__future__" [];
	"pyarrow.interchange.from_dataframe" -> "typing" [];
	"pyarrow.interchange.from_dataframe" -> "pyarrow" [];
	"pyarrow.interchange.from_dataframe" -> "re" [];
	"pyarrow.interchange.dataframe" -> "__future__" [];
	"pyarrow.interchange.dataframe" -> "typing" [];
	"pyarrow.interchange.dataframe" -> "pyarrow" [];
	"pyarrow.interchange.column" -> "__future__" [];
	"pyarrow.interchange.column" -> "enum" [];
	"pyarrow.interchange.column" -> "typing" [];
	"pyarrow.interchange.column" -> "sys" [];
	"pyarrow.interchange.column" -> "typing_extensions" [];
	"pyarrow.interchange.column" -> "pyarrow" [];
	"pyarrow.interchange.buffer" -> "__future__" [];
	"pyarrow.interchange.buffer" -> "enum" [];
	"pyarrow.interchange.buffer" -> "pyarrow" [];
	"pyarrow.cuda" -> "'pyarrow._cuda'" [];
	"pyarrow.conftest" -> "pytest" [];
	"pyarrow.conftest" -> "os" [];
	"pyarrow.conftest" -> "sys" [];
	"pyarrow.conftest" -> "cython" [];
	"pyarrow.conftest" -> "fastparquet" [];
	"pyarrow.conftest" -> "'pyarrow.gandiva'" [];
	"pyarrow.conftest" -> "pandas" [];
	"pyarrow.conftest" -> "numpy" [];
	"pyarrow.tests.util" -> "contextlib" [];
	"pyarrow.tests.util" -> "decimal" [];
	"pyarrow.tests.util" -> "gc" [];
	"pyarrow.tests.util" -> "os" [];
	"pyarrow.tests.util" -> "random" [];
	"pyarrow.tests.util" -> "re" [];
	"pyarrow.tests.util" -> "shutil" [];
	"pyarrow.tests.util" -> "signal" [];
	"pyarrow.tests.util" -> "socket" [];
	"pyarrow.tests.util" -> "string" [];
	"pyarrow.tests.util" -> "subprocess" [];
	"pyarrow.tests.util" -> "sys" [];
	"pyarrow.tests.util" -> "time" [];
	"pyarrow.tests.util" -> "packaging" [];
	"pyarrow.tests.util" -> "pytest" [];
	"pyarrow.tests.util" -> "pyarrow" [];
	"pyarrow.tests.util" -> "psutil" [];
	"pyarrow.cffi" -> "__future__" [];
	"pyarrow.cffi" -> "cffi" [];
	"pyarrow.feather" -> "os" [];
	"pyarrow.util" -> "os" [];
	"pyarrow.util" -> "contextlib" [];
	"pyarrow.util" -> "functools" [];
	"pyarrow.util" -> "gc" [];
	"pyarrow.util" -> "socket" [];
	"pyarrow.util" -> "sys" [];
	"pyarrow.util" -> "textwrap" [];
	"pyarrow.util" -> "types" [];
	"pyarrow.util" -> "warnings" [];
	"pyarrow.util" -> "uuid" [];
	"pyarrow.util" -> "requests" [];
	"pyarrow.util" -> "tarfile" [];
	"pyarrow.ipc" -> "os" [];
	"pyarrow.fs" -> "atexit" [];
	"pyarrow.fs" -> "fsspec" [];
	"fsspec.utils" -> "__future__" [];
	"fsspec.utils" -> "contextlib" [];
	"fsspec.utils" -> "logging" [];
	"fsspec.utils" -> "math" [];
	"fsspec.utils" -> "os" [];
	"fsspec.utils" -> "re" [];
	"fsspec.utils" -> "sys" [];
	"fsspec.utils" -> "tempfile" [];
	"fsspec.utils" -> "functools" [];
	"fsspec.utils" -> "hashlib" [];
	"fsspec.utils" -> "typing" [];
	"fsspec.utils" -> "pathlib" [];
	"fsspec.utils" -> "typing_extensions" [];
	"fsspec.utils" -> "importlib" [];
	"fsspec.transaction" -> "collections" [];
	"fsspec.transaction" -> "distributed" [];
	"fsspec.parquet" -> "io" [];
	"fsspec.parquet" -> "json" [];
	"fsspec.parquet" -> "warnings" [];
	"fsspec.parquet" -> "fastparquet" [];
	"fsspec.json" -> "json" [];
	"fsspec.json" -> "contextlib" [];
	"fsspec.json" -> "pathlib" [];
	"fsspec.json" -> "typing" [];
	"fsspec.implementations.zip" -> "os" [];
	"fsspec.implementations.zip" -> "zipfile" [];
	"fsspec.implementations.zip" -> "fsspec" [];
	"fsspec.implementations.webhdfs" -> "logging" [];
	"fsspec.implementations.webhdfs" -> "os" [];
	"fsspec.implementations.webhdfs" -> "secrets" [];
	"fsspec.implementations.webhdfs" -> "shutil" [];
	"fsspec.implementations.webhdfs" -> "tempfile" [];
	"fsspec.implementations.webhdfs" -> "uuid" [];
	"fsspec.implementations.webhdfs" -> "contextlib" [];
	"fsspec.implementations.webhdfs" -> "requests" [];
	"fsspec.implementations.webhdfs" -> "requests_kerberos" [];
	"fsspec.implementations.tar" -> "logging" [];
	"fsspec.implementations.tar" -> "tarfile" [];
	"fsspec.implementations.tar" -> "fsspec" [];
	"fsspec.implementations.smb" -> "datetime" [];
	"fsspec.implementations.smb" -> "re" [];
	"fsspec.implementations.smb" -> "uuid" [];
	"fsspec.implementations.smb" -> "stat" [];
	"fsspec.implementations.smb" -> "smbclient" [];
	"fsspec.implementations.smb" -> "smbprotocol" [];
	"fsspec.implementations.smb" -> "fsspec" [];
	"fsspec.implementations.smb" -> "time" [];
	"fsspec.implementations.sftp" -> "datetime" [];
	"fsspec.implementations.sftp" -> "logging" [];
	"fsspec.implementations.sftp" -> "os" [];
	"fsspec.implementations.sftp" -> "types" [];
	"fsspec.implementations.sftp" -> "uuid" [];
	"fsspec.implementations.sftp" -> "stat" [];
	"fsspec.implementations.sftp" -> "paramiko" [];
	"fsspec.implementations.sftp" -> "fsspec" [];
	"fsspec.implementations.reference" -> "base64" [];
	"fsspec.implementations.reference" -> "collections" [];
	"fsspec.implementations.reference" -> "io" [];
	"fsspec.implementations.reference" -> "itertools" [];
	"fsspec.implementations.reference" -> "logging" [];
	"fsspec.implementations.reference" -> "math" [];
	"fsspec.implementations.reference" -> "os" [];
	"fsspec.implementations.reference" -> "functools" [];
	"fsspec.implementations.reference" -> "typing" [];
	"fsspec.implementations.reference" -> "ujson" [];
	"fsspec.implementations.reference" -> "json" [];
	"fsspec.implementations.reference" -> "numpy" [];
	"fsspec.implementations.reference" -> "pandas" [];
	"fsspec.implementations.reference" -> "kerchunk" [];
	"fsspec.implementations.reference" -> "jinja2" [];
	"jinja2.ext" -> "pprint" [];
	"jinja2.ext" -> "re" [];
	"jinja2.ext" -> "typing" [];
	"jinja2.ext" -> "markupsafe" [];
	"jinja2.ext" -> "typing_extensions" [];
	"jinja2.ext" -> "gettext" [];
	"jinja2.parser" -> "typing" [];
	"jinja2.parser" -> "typing_extensions" [];
	"jinja2.lexer" -> "re" [];
	"jinja2.lexer" -> "typing" [];
	"jinja2.lexer" -> "ast" [];
	"jinja2.lexer" -> "collections" [];
	"jinja2.lexer" -> "sys" [];
	"jinja2.lexer" -> "typing_extensions" [];
	"jinja2._identifier" -> "re" [];
	"jinja2.defaults" -> "typing" [];
	"jinja2.defaults" -> "typing_extensions" [];
	"jinja2.tests" -> "operator" [];
	"jinja2.tests" -> "typing" [];
	"jinja2.tests" -> "collections" [];
	"jinja2.tests" -> "numbers" [];
	"jinja2.filters" -> "math" [];
	"jinja2.filters" -> "random" [];
	"jinja2.filters" -> "re" [];
	"jinja2.filters" -> "typing" [];
	"jinja2.filters" -> "collections" [];
	"jinja2.filters" -> "itertools" [];
	"jinja2.filters" -> "markupsafe" [];
	"jinja2.filters" -> "typing_extensions" [];
	"jinja2.filters" -> "textwrap" [];
	"jinja2.sandbox" -> "operator" [];
	"jinja2.sandbox" -> "types" [];
	"jinja2.sandbox" -> "typing" [];
	"jinja2.sandbox" -> "_string" [];
	"jinja2.sandbox" -> "collections" [];
	"jinja2.sandbox" -> "string" [];
	"jinja2.sandbox" -> "markupsafe" [];
	"jinja2.async_utils" -> "inspect" [];
	"jinja2.async_utils" -> "typing" [];
	"jinja2.async_utils" -> "functools" [];
	"markupsafe" -> "functools" [];
	"markupsafe" -> "string" [];
	"markupsafe" -> "sys" [];
	"markupsafe" -> "typing" [];
	"markupsafe" -> "typing_extensions" [];
	"markupsafe" -> "html" [];
	"markupsafe._native" -> "typing" [];
	"markupsafe._speedups" -> "typing" [];
	"jinja2.meta" -> "typing" [];
	"jinja2.compiler" -> "typing" [];
	"jinja2.compiler" -> "contextlib" [];
	"jinja2.compiler" -> "functools" [];
	"jinja2.compiler" -> "io" [];
	"jinja2.compiler" -> "itertools" [];
	"jinja2.compiler" -> "keyword" [];
	"jinja2.compiler" -> "markupsafe" [];
	"jinja2.compiler" -> "typing_extensions" [];
	"jinja2.visitor" -> "typing" [];
	"jinja2.visitor" -> "typing_extensions" [];
	"jinja2.optimizer" -> "typing" [];
	"jinja2.idtracking" -> "typing" [];
	"jinja2.utils" -> "enum" [];
	"jinja2.utils" -> "json" [];
	"jinja2.utils" -> "os" [];
	"jinja2.utils" -> "re" [];
	"jinja2.utils" -> "typing" [];
	"jinja2.utils" -> "collections" [];
	"jinja2.utils" -> "random" [];
	"jinja2.utils" -> "threading" [];
	"jinja2.utils" -> "types" [];
	"jinja2.utils" -> "markupsafe" [];
	"jinja2.utils" -> "typing_extensions" [];
	"jinja2.utils" -> "pprint" [];
	"jinja2.runtime" -> "functools" [];
	"jinja2.runtime" -> "sys" [];
	"jinja2.runtime" -> "typing" [];
	"jinja2.runtime" -> "collections" [];
	"jinja2.runtime" -> "itertools" [];
	"jinja2.runtime" -> "markupsafe" [];
	"jinja2.runtime" -> "logging" [];
	"jinja2.runtime" -> "typing_extensions" [];
	"jinja2.loaders" -> "os" [];
	"jinja2.loaders" -> "posixpath" [];
	"jinja2.loaders" -> "sys" [];
	"jinja2.loaders" -> "typing" [];
	"jinja2.loaders" -> "weakref" [];
	"jinja2.loaders" -> "zipimport" [];
	"jinja2.loaders" -> "collections" [];
	"jinja2.loaders" -> "hashlib" [];
	"jinja2.loaders" -> "importlib" [];
	"jinja2.loaders" -> "types" [];
	"jinja2.exceptions" -> "typing" [];
	"jinja2.environment" -> "os" [];
	"jinja2.environment" -> "typing" [];
	"jinja2.environment" -> "weakref" [];
	"jinja2.environment" -> "collections" [];
	"jinja2.environment" -> "functools" [];
	"jinja2.environment" -> "types" [];
	"jinja2.environment" -> "markupsafe" [];
	"jinja2.environment" -> "typing_extensions" [];
	"jinja2.environment" -> "zipfile" [];
	"jinja2.environment" -> "asyncio" [];
	"jinja2.debug" -> "sys" [];
	"jinja2.debug" -> "typing" [];
	"jinja2.debug" -> "types" [];
	"jinja2.bccache" -> "errno" [];
	"jinja2.bccache" -> "fnmatch" [];
	"jinja2.bccache" -> "marshal" [];
	"jinja2.bccache" -> "os" [];
	"jinja2.bccache" -> "pickle" [];
	"jinja2.bccache" -> "stat" [];
	"jinja2.bccache" -> "sys" [];
	"jinja2.bccache" -> "tempfile" [];
	"jinja2.bccache" -> "typing" [];
	"jinja2.bccache" -> "hashlib" [];
	"jinja2.bccache" -> "io" [];
	"jinja2.bccache" -> "types" [];
	"jinja2.bccache" -> "typing_extensions" [];
	"jinja2.nodes" -> "inspect" [];
	"jinja2.nodes" -> "operator" [];
	"jinja2.nodes" -> "typing" [];
	"jinja2.nodes" -> "collections" [];
	"jinja2.nodes" -> "markupsafe" [];
	"jinja2.nodes" -> "typing_extensions" [];
	"fsspec.implementations.memory" -> "__future__" [];
	"fsspec.implementations.memory" -> "logging" [];
	"fsspec.implementations.memory" -> "datetime" [];
	"fsspec.implementations.memory" -> "errno" [];
	"fsspec.implementations.memory" -> "io" [];
	"fsspec.implementations.memory" -> "pathlib" [];
	"fsspec.implementations.memory" -> "typing" [];
	"fsspec.implementations.memory" -> "fsspec" [];
	"fsspec.implementations.local" -> "datetime" [];
	"fsspec.implementations.local" -> "io" [];
	"fsspec.implementations.local" -> "logging" [];
	"fsspec.implementations.local" -> "os" [];
	"fsspec.implementations.local" -> "os.path" [];
	"fsspec.implementations.local" -> "shutil" [];
	"fsspec.implementations.local" -> "stat" [];
	"fsspec.implementations.local" -> "tempfile" [];
	"fsspec.implementations.local" -> "fsspec" [];
	"fsspec.implementations.libarchive" -> "contextlib" [];
	"fsspec.implementations.libarchive" -> "ctypes" [];
	"fsspec.implementations.libarchive" -> "libarchive" [];
	"fsspec.implementations.libarchive" -> "'libarchive.ffi'" [];
	"fsspec.implementations.libarchive" -> "fsspec" [];
	"fsspec.implementations.jupyter" -> "base64" [];
	"fsspec.implementations.jupyter" -> "io" [];
	"fsspec.implementations.jupyter" -> "re" [];
	"fsspec.implementations.jupyter" -> "requests" [];
	"fsspec.implementations.jupyter" -> "fsspec" [];
	"fsspec.implementations.http_sync" -> "io" [];
	"fsspec.implementations.http_sync" -> "logging" [];
	"fsspec.implementations.http_sync" -> "re" [];
	"fsspec.implementations.http_sync" -> "copy" [];
	"fsspec.implementations.http_sync" -> "json" [];
	"fsspec.implementations.http_sync" -> "yarl" [];
	"fsspec.implementations.http_sync" -> "js" [];
	"fsspec.implementations.http_sync" -> "requests" [];
	"yarl._url" -> "re" [];
	"yarl._url" -> "sys" [];
	"yarl._url" -> "warnings" [];
	"yarl._url" -> "enum" [];
	"yarl._url" -> "functools" [];
	"yarl._url" -> "ipaddress" [];
	"yarl._url" -> "typing" [];
	"yarl._url" -> "idna" [];
	"yarl._url" -> "multidict" [];
	"yarl._quoters" -> "typing" [];
	"yarl._quoting" -> "os" [];
	"yarl._quoting" -> "sys" [];
	"yarl._quoting" -> "typing" [];
	"yarl._quoting_py" -> "codecs" [];
	"yarl._quoting_py" -> "re" [];
	"yarl._quoting_py" -> "string" [];
	"yarl._quoting_py" -> "typing" [];
	"yarl._path" -> "contextlib" [];
	"yarl._parse" -> "re" [];
	"yarl._parse" -> "unicodedata" [];
	"yarl._parse" -> "functools" [];
	"yarl._parse" -> "typing" [];
	"propcache" -> "typing" [];
	"propcache._helpers" -> "os" [];
	"propcache._helpers" -> "sys" [];
	"propcache._helpers" -> "typing" [];
	"propcache._helpers_py" -> "sys" [];
	"propcache._helpers_py" -> "functools" [];
	"propcache._helpers_py" -> "typing" [];
	"multidict" -> "typing" [];
	"multidict._multidict_py" -> "enum" [];
	"multidict._multidict_py" -> "reprlib" [];
	"multidict._multidict_py" -> "sys" [];
	"multidict._multidict_py" -> "abc" [];
	"multidict._multidict_py" -> "array" [];
	"multidict._multidict_py" -> "typing" [];
	"multidict._multidict_py" -> "typing_extensions" [];
	"multidict._compat" -> "os" [];
	"multidict._compat" -> "platform" [];
	"multidict._abc" -> "abc" [];
	"multidict._abc" -> "typing" [];
	"yarl._query" -> "math" [];
	"yarl._query" -> "typing" [];
	"yarl._query" -> "multidict" [];
	"fsspec.implementations.http" -> "asyncio" [];
	"fsspec.implementations.http" -> "io" [];
	"fsspec.implementations.http" -> "logging" [];
	"fsspec.implementations.http" -> "re" [];
	"fsspec.implementations.http" -> "weakref" [];
	"fsspec.implementations.http" -> "copy" [];
	"fsspec.implementations.http" -> "aiohttp" [];
	"fsspec.implementations.http" -> "yarl" [];
	"aiohttp" -> "typing" [];
	"aiohttp.worker" -> "asyncio" [];
	"aiohttp.worker" -> "inspect" [];
	"aiohttp.worker" -> "os" [];
	"aiohttp.worker" -> "re" [];
	"aiohttp.worker" -> "signal" [];
	"aiohttp.worker" -> "sys" [];
	"aiohttp.worker" -> "types" [];
	"aiohttp.worker" -> "typing" [];
	"aiohttp.worker" -> "gunicorn" [];
	"aiohttp.worker" -> "'gunicorn.workers'" [];
	"aiohttp.worker" -> "ssl" [];
	"aiohttp.worker" -> "uvloop" [];
	"aiohttp.web_log" -> "datetime" [];
	"aiohttp.web_log" -> "functools" [];
	"aiohttp.web_log" -> "logging" [];
	"aiohttp.web_log" -> "os" [];
	"aiohttp.web_log" -> "re" [];
	"aiohttp.web_log" -> "time" [];
	"aiohttp.web_log" -> "collections" [];
	"aiohttp.web_log" -> "typing" [];
	"aiohttp.web_response" -> "asyncio" [];
	"aiohttp.web_response" -> "datetime" [];
	"aiohttp.web_response" -> "enum" [];
	"aiohttp.web_response" -> "json" [];
	"aiohttp.web_response" -> "math" [];
	"aiohttp.web_response" -> "time" [];
	"aiohttp.web_response" -> "warnings" [];
	"aiohttp.web_response" -> "zlib" [];
	"aiohttp.web_response" -> "http" [];
	"aiohttp.web_response" -> "typing" [];
	"aiohttp.web_response" -> "multidict" [];
	"aiohttp.typedefs" -> "json" [];
	"aiohttp.typedefs" -> "os" [];
	"aiohttp.typedefs" -> "typing" [];
	"aiohttp.typedefs" -> "multidict" [];
	"aiohttp.typedefs" -> "yarl" [];
	"aiohttp.compression_utils" -> "asyncio" [];
	"aiohttp.compression_utils" -> "zlib" [];
	"aiohttp.compression_utils" -> "typing" [];
	"aiohttp.compression_utils" -> "brotlicffi" [];
	"aiohttp.compression_utils" -> "brotli" [];
	"aiohttp.web_request" -> "asyncio" [];
	"aiohttp.web_request" -> "datetime" [];
	"aiohttp.web_request" -> "io" [];
	"aiohttp.web_request" -> "re" [];
	"aiohttp.web_request" -> "socket" [];
	"aiohttp.web_request" -> "string" [];
	"aiohttp.web_request" -> "tempfile" [];
	"aiohttp.web_request" -> "types" [];
	"aiohttp.web_request" -> "warnings" [];
	"aiohttp.web_request" -> "typing" [];
	"aiohttp.web_request" -> "attr" [];
	"aiohttp.web_request" -> "multidict" [];
	"aiohttp.web_request" -> "yarl" [];
	"aiohttp.web_urldispatcher" -> "abc" [];
	"aiohttp.web_urldispatcher" -> "asyncio" [];
	"aiohttp.web_urldispatcher" -> "base64" [];
	"aiohttp.web_urldispatcher" -> "functools" [];
	"aiohttp.web_urldispatcher" -> "hashlib" [];
	"aiohttp.web_urldispatcher" -> "html" [];
	"aiohttp.web_urldispatcher" -> "inspect" [];
	"aiohttp.web_urldispatcher" -> "keyword" [];
	"aiohttp.web_urldispatcher" -> "os" [];
	"aiohttp.web_urldispatcher" -> "re" [];
	"aiohttp.web_urldispatcher" -> "sys" [];
	"aiohttp.web_urldispatcher" -> "warnings" [];
	"aiohttp.web_urldispatcher" -> "pathlib" [];
	"aiohttp.web_urldispatcher" -> "types" [];
	"aiohttp.web_urldispatcher" -> "typing" [];
	"aiohttp.web_urldispatcher" -> "yarl" [];
	"aiohttp.web_routedef" -> "abc" [];
	"aiohttp.web_routedef" -> "os" [];
	"aiohttp.web_routedef" -> "typing" [];
	"aiohttp.web_routedef" -> "attr" [];
	"aiohttp.web_fileresponse" -> "asyncio" [];
	"aiohttp.web_fileresponse" -> "io" [];
	"aiohttp.web_fileresponse" -> "os" [];
	"aiohttp.web_fileresponse" -> "pathlib" [];
	"aiohttp.web_fileresponse" -> "sys" [];
	"aiohttp.web_fileresponse" -> "contextlib" [];
	"aiohttp.web_fileresponse" -> "enum" [];
	"aiohttp.web_fileresponse" -> "mimetypes" [];
	"aiohttp.web_fileresponse" -> "stat" [];
	"aiohttp.web_fileresponse" -> "types" [];
	"aiohttp.web_fileresponse" -> "typing" [];
	"aiohttp.web_protocol" -> "asyncio" [];
	"aiohttp.web_protocol" -> "sys" [];
	"aiohttp.web_protocol" -> "traceback" [];
	"aiohttp.web_protocol" -> "warnings" [];
	"aiohttp.web_protocol" -> "collections" [];
	"aiohttp.web_protocol" -> "contextlib" [];
	"aiohttp.web_protocol" -> "html" [];
	"aiohttp.web_protocol" -> "http" [];
	"aiohttp.web_protocol" -> "logging" [];
	"aiohttp.web_protocol" -> "typing" [];
	"aiohttp.web_protocol" -> "attr" [];
	"aiohttp.web_protocol" -> "yarl" [];
	"aiohttp.web_protocol" -> "propcache" [];
	"aiohttp.web_protocol" -> "ssl" [];
	"aiohttp.web_server" -> "asyncio" [];
	"aiohttp.web_server" -> "typing" [];
	"aiohttp.tcp_helpers" -> "asyncio" [];
	"aiohttp.tcp_helpers" -> "socket" [];
	"aiohttp.tcp_helpers" -> "contextlib" [];
	"aiohttp.tcp_helpers" -> "typing" [];
	"aiohttp.log" -> "logging" [];
	"aiohttp.http_exceptions" -> "textwrap" [];
	"aiohttp.http_exceptions" -> "typing" [];
	"aiohttp.base_protocol" -> "asyncio" [];
	"aiohttp.base_protocol" -> "typing" [];
	"aiohttp.client_exceptions" -> "asyncio" [];
	"aiohttp.client_exceptions" -> "warnings" [];
	"aiohttp.client_exceptions" -> "typing" [];
	"aiohttp.client_exceptions" -> "multidict" [];
	"aiohttp.client_exceptions" -> "ssl" [];
	"aiohttp.client_reqrep" -> "asyncio" [];
	"aiohttp.client_reqrep" -> "codecs" [];
	"aiohttp.client_reqrep" -> "contextlib" [];
	"aiohttp.client_reqrep" -> "functools" [];
	"aiohttp.client_reqrep" -> "io" [];
	"aiohttp.client_reqrep" -> "re" [];
	"aiohttp.client_reqrep" -> "sys" [];
	"aiohttp.client_reqrep" -> "traceback" [];
	"aiohttp.client_reqrep" -> "warnings" [];
	"aiohttp.client_reqrep" -> "hashlib" [];
	"aiohttp.client_reqrep" -> "types" [];
	"aiohttp.client_reqrep" -> "typing" [];
	"aiohttp.client_reqrep" -> "attr" [];
	"aiohttp.client_reqrep" -> "multidict" [];
	"aiohttp.client_reqrep" -> "yarl" [];
	"aiohttp.client_reqrep" -> "ssl" [];
	"aiohttp.connector" -> "asyncio" [];
	"aiohttp.connector" -> "functools" [];
	"aiohttp.connector" -> "random" [];
	"aiohttp.connector" -> "socket" [];
	"aiohttp.connector" -> "sys" [];
	"aiohttp.connector" -> "traceback" [];
	"aiohttp.connector" -> "warnings" [];
	"aiohttp.connector" -> "collections" [];
	"aiohttp.connector" -> "contextlib" [];
	"aiohttp.connector" -> "http" [];
	"aiohttp.connector" -> "itertools" [];
	"aiohttp.connector" -> "time" [];
	"aiohttp.connector" -> "types" [];
	"aiohttp.connector" -> "typing" [];
	"aiohttp.connector" -> "aiohappyeyeballs" [];
	"aiohttp.connector" -> "ssl" [];
	"aiohttp.client_proto" -> "asyncio" [];
	"aiohttp.client_proto" -> "contextlib" [];
	"aiohttp.client_proto" -> "typing" [];
	"aiohappyeyeballs.utils" -> "ipaddress" [];
	"aiohappyeyeballs.utils" -> "socket" [];
	"aiohappyeyeballs.utils" -> "typing" [];
	"aiohappyeyeballs.types" -> "socket" [];
	"aiohappyeyeballs.types" -> "typing" [];
	"aiohappyeyeballs.impl" -> "asyncio" [];
	"aiohappyeyeballs.impl" -> "collections" [];
	"aiohappyeyeballs.impl" -> "contextlib" [];
	"aiohappyeyeballs.impl" -> "functools" [];
	"aiohappyeyeballs.impl" -> "itertools" [];
	"aiohappyeyeballs.impl" -> "socket" [];
	"aiohappyeyeballs.impl" -> "typing" [];
	"aiohappyeyeballs._staggered" -> "asyncio" [];
	"aiohappyeyeballs._staggered" -> "contextlib" [];
	"aiohappyeyeballs._staggered" -> "typing" [];
	"aiohttp.web_exceptions" -> "warnings" [];
	"aiohttp.web_exceptions" -> "typing" [];
	"aiohttp.web_exceptions" -> "yarl" [];
	"aiohttp.http_writer" -> "asyncio" [];
	"aiohttp.http_writer" -> "sys" [];
	"aiohttp.http_writer" -> "zlib" [];
	"aiohttp.http_writer" -> "typing" [];
	"aiohttp.http_writer" -> "multidict" [];
	"aiohttp.http_parser" -> "abc" [];
	"aiohttp.http_parser" -> "asyncio" [];
	"aiohttp.http_parser" -> "re" [];
	"aiohttp.http_parser" -> "string" [];
	"aiohttp.http_parser" -> "contextlib" [];
	"aiohttp.http_parser" -> "enum" [];
	"aiohttp.http_parser" -> "typing" [];
	"aiohttp.http_parser" -> "multidict" [];
	"aiohttp.http_parser" -> "yarl" [];
	"aiohttp.abc" -> "asyncio" [];
	"aiohttp.abc" -> "logging" [];
	"aiohttp.abc" -> "socket" [];
	"aiohttp.abc" -> "zlib" [];
	"aiohttp.abc" -> "abc" [];
	"aiohttp.abc" -> "typing" [];
	"aiohttp.abc" -> "multidict" [];
	"aiohttp.abc" -> "yarl" [];
	"aiohttp.web_app" -> "asyncio" [];
	"aiohttp.web_app" -> "logging" [];
	"aiohttp.web_app" -> "warnings" [];
	"aiohttp.web_app" -> "functools" [];
	"aiohttp.web_app" -> "typing" [];
	"aiohttp.web_app" -> "aiosignal" [];
	"aiohttp.web_app" -> "frozenlist" [];
	"aiohttp.web_middlewares" -> "re" [];
	"aiohttp.web_middlewares" -> "typing" [];
	"frozenlist" -> "os" [];
	"frozenlist" -> "types" [];
	"frozenlist" -> "functools" [];
	"aiosignal" -> "frozenlist" [];
	"aiohttp.web" -> "asyncio" [];
	"aiohttp.web" -> "logging" [];
	"aiohttp.web" -> "os" [];
	"aiohttp.web" -> "socket" [];
	"aiohttp.web" -> "sys" [];
	"aiohttp.web" -> "warnings" [];
	"aiohttp.web" -> "argparse" [];
	"aiohttp.web" -> "contextlib" [];
	"aiohttp.web" -> "importlib" [];
	"aiohttp.web" -> "typing" [];
	"aiohttp.web" -> "ssl" [];
	"aiohttp.web_ws" -> "asyncio" [];
	"aiohttp.web_ws" -> "base64" [];
	"aiohttp.web_ws" -> "binascii" [];
	"aiohttp.web_ws" -> "hashlib" [];
	"aiohttp.web_ws" -> "json" [];
	"aiohttp.web_ws" -> "sys" [];
	"aiohttp.web_ws" -> "typing" [];
	"aiohttp.web_ws" -> "attr" [];
	"aiohttp.web_ws" -> "multidict" [];
	"aiohttp.web_ws" -> "async_timeout" [];
	"async_timeout" -> "asyncio" [];
	"async_timeout" -> "enum" [];
	"async_timeout" -> "sys" [];
	"async_timeout" -> "warnings" [];
	"async_timeout" -> "types" [];
	"async_timeout" -> "typing" [];
	"async_timeout" -> "typing_extensions" [];
	"aiohttp._websocket.models" -> "json" [];
	"aiohttp._websocket.models" -> "enum" [];
	"aiohttp._websocket.models" -> "typing" [];
	"aiohttp._websocket.helpers" -> "functools" [];
	"aiohttp._websocket.helpers" -> "re" [];
	"aiohttp._websocket.helpers" -> "struct" [];
	"aiohttp._websocket.helpers" -> "typing" [];
	"aiohttp._websocket.writer" -> "asyncio" [];
	"aiohttp._websocket.writer" -> "random" [];
	"aiohttp._websocket.writer" -> "zlib" [];
	"aiohttp._websocket.writer" -> "functools" [];
	"aiohttp._websocket.writer" -> "typing" [];
	"aiohttp._websocket.reader" -> "typing" [];
	"aiohttp._websocket.reader_c" -> "asyncio" [];
	"aiohttp._websocket.reader_c" -> "builtins" [];
	"aiohttp._websocket.reader_c" -> "collections" [];
	"aiohttp._websocket.reader_c" -> "typing" [];
	"aiohttp._websocket.reader_py" -> "asyncio" [];
	"aiohttp._websocket.reader_py" -> "builtins" [];
	"aiohttp._websocket.reader_py" -> "collections" [];
	"aiohttp._websocket.reader_py" -> "typing" [];
	"aiohttp.web_runner" -> "asyncio" [];
	"aiohttp.web_runner" -> "signal" [];
	"aiohttp.web_runner" -> "socket" [];
	"aiohttp.web_runner" -> "warnings" [];
	"aiohttp.web_runner" -> "abc" [];
	"aiohttp.web_runner" -> "typing" [];
	"aiohttp.web_runner" -> "yarl" [];
	"aiohttp.web_runner" -> "ssl" [];
	"aiohttp.tracing" -> "types" [];
	"aiohttp.tracing" -> "typing" [];
	"aiohttp.tracing" -> "attr" [];
	"aiohttp.tracing" -> "aiosignal" [];
	"aiohttp.tracing" -> "multidict" [];
	"aiohttp.tracing" -> "yarl" [];
	"aiohttp.streams" -> "asyncio" [];
	"aiohttp.streams" -> "collections" [];
	"aiohttp.streams" -> "warnings" [];
	"aiohttp.streams" -> "typing" [];
	"aiohttp.resolver" -> "asyncio" [];
	"aiohttp.resolver" -> "socket" [];
	"aiohttp.resolver" -> "typing" [];
	"aiohttp.resolver" -> "aiodns" [];
	"aiohttp.payload_streamer" -> "types" [];
	"aiohttp.payload_streamer" -> "warnings" [];
	"aiohttp.payload_streamer" -> "typing" [];
	"aiohttp.payload" -> "asyncio" [];
	"aiohttp.payload" -> "enum" [];
	"aiohttp.payload" -> "io" [];
	"aiohttp.payload" -> "json" [];
	"aiohttp.payload" -> "mimetypes" [];
	"aiohttp.payload" -> "os" [];
	"aiohttp.payload" -> "sys" [];
	"aiohttp.payload" -> "warnings" [];
	"aiohttp.payload" -> "abc" [];
	"aiohttp.payload" -> "itertools" [];
	"aiohttp.payload" -> "typing" [];
	"aiohttp.payload" -> "multidict" [];
	"aiohttp.helpers" -> "asyncio" [];
	"aiohttp.helpers" -> "base64" [];
	"aiohttp.helpers" -> "binascii" [];
	"aiohttp.helpers" -> "contextlib" [];
	"aiohttp.helpers" -> "datetime" [];
	"aiohttp.helpers" -> "enum" [];
	"aiohttp.helpers" -> "functools" [];
	"aiohttp.helpers" -> "inspect" [];
	"aiohttp.helpers" -> "netrc" [];
	"aiohttp.helpers" -> "os" [];
	"aiohttp.helpers" -> "platform" [];
	"aiohttp.helpers" -> "re" [];
	"aiohttp.helpers" -> "sys" [];
	"aiohttp.helpers" -> "time" [];
	"aiohttp.helpers" -> "weakref" [];
	"aiohttp.helpers" -> "collections" [];
	"aiohttp.helpers" -> "math" [];
	"aiohttp.helpers" -> "pathlib" [];
	"aiohttp.helpers" -> "types" [];
	"aiohttp.helpers" -> "typing" [];
	"aiohttp.helpers" -> "attr" [];
	"aiohttp.helpers" -> "multidict" [];
	"aiohttp.helpers" -> "yarl" [];
	"aiohttp.helpers" -> "async_timeout" [];
	"aiohttp.formdata" -> "io" [];
	"aiohttp.formdata" -> "warnings" [];
	"aiohttp.formdata" -> "typing" [];
	"aiohttp.formdata" -> "multidict" [];
	"aiohttp.cookiejar" -> "asyncio" [];
	"aiohttp.cookiejar" -> "calendar" [];
	"aiohttp.cookiejar" -> "contextlib" [];
	"aiohttp.cookiejar" -> "datetime" [];
	"aiohttp.cookiejar" -> "heapq" [];
	"aiohttp.cookiejar" -> "itertools" [];
	"aiohttp.cookiejar" -> "os" [];
	"aiohttp.cookiejar" -> "pathlib" [];
	"aiohttp.cookiejar" -> "pickle" [];
	"aiohttp.cookiejar" -> "re" [];
	"aiohttp.cookiejar" -> "time" [];
	"aiohttp.cookiejar" -> "warnings" [];
	"aiohttp.cookiejar" -> "collections" [];
	"aiohttp.cookiejar" -> "typing" [];
	"aiohttp.cookiejar" -> "yarl" [];
	"aiohttp.client" -> "asyncio" [];
	"aiohttp.client" -> "base64" [];
	"aiohttp.client" -> "hashlib" [];
	"aiohttp.client" -> "json" [];
	"aiohttp.client" -> "os" [];
	"aiohttp.client" -> "sys" [];
	"aiohttp.client" -> "traceback" [];
	"aiohttp.client" -> "warnings" [];
	"aiohttp.client" -> "contextlib" [];
	"aiohttp.client" -> "types" [];
	"aiohttp.client" -> "typing" [];
	"aiohttp.client" -> "attr" [];
	"aiohttp.client" -> "multidict" [];
	"aiohttp.client" -> "yarl" [];
	"aiohttp.client" -> "ssl" [];
	"aiohttp.client_ws" -> "asyncio" [];
	"aiohttp.client_ws" -> "sys" [];
	"aiohttp.client_ws" -> "types" [];
	"aiohttp.client_ws" -> "typing" [];
	"aiohttp.client_ws" -> "attr" [];
	"aiohttp.client_ws" -> "async_timeout" [];
	"aiohttp.multipart" -> "base64" [];
	"aiohttp.multipart" -> "binascii" [];
	"aiohttp.multipart" -> "json" [];
	"aiohttp.multipart" -> "re" [];
	"aiohttp.multipart" -> "sys" [];
	"aiohttp.multipart" -> "uuid" [];
	"aiohttp.multipart" -> "warnings" [];
	"aiohttp.multipart" -> "zlib" [];
	"aiohttp.multipart" -> "collections" [];
	"aiohttp.multipart" -> "types" [];
	"aiohttp.multipart" -> "typing" [];
	"aiohttp.multipart" -> "multidict" [];
	"aiohttp.http" -> "sys" [];
	"aiohttp.http" -> "http" [];
	"aiohttp.http" -> "typing" [];
	"aiohttp.hdrs" -> "itertools" [];
	"aiohttp.hdrs" -> "typing" [];
	"aiohttp.hdrs" -> "multidict" [];
	"fsspec.implementations.github" -> "requests" [];
	"fsspec.implementations.github" -> "fsspec" [];
	"fsspec.implementations.git" -> "os" [];
	"fsspec.implementations.git" -> "pygit2" [];
	"fsspec.implementations.ftp" -> "os" [];
	"fsspec.implementations.ftp" -> "sys" [];
	"fsspec.implementations.ftp" -> "uuid" [];
	"fsspec.implementations.ftp" -> "warnings" [];
	"fsspec.implementations.ftp" -> "ftplib" [];
	"fsspec.implementations.ftp" -> "typing" [];
	"fsspec.implementations.dirfs" -> "fsspec" [];
	"fsspec.implementations.dbfs" -> "base64" [];
	"fsspec.implementations.dbfs" -> "urllib" [];
	"fsspec.implementations.dbfs" -> "requests" [];
	"fsspec.implementations.dbfs" -> "fsspec" [];
	"fsspec.implementations.data" -> "base64" [];
	"fsspec.implementations.data" -> "io" [];
	"fsspec.implementations.data" -> "typing" [];
	"fsspec.implementations.data" -> "fsspec" [];
	"fsspec.implementations.dask" -> "dask" [];
	"fsspec.implementations.dask" -> "'distributed.client'" [];
	"fsspec.implementations.dask" -> "'distributed.worker'" [];
	"fsspec.implementations.dask" -> "fsspec" [];
	"fsspec.implementations.cached" -> "__future__" [];
	"fsspec.implementations.cached" -> "inspect" [];
	"fsspec.implementations.cached" -> "logging" [];
	"fsspec.implementations.cached" -> "os" [];
	"fsspec.implementations.cached" -> "tempfile" [];
	"fsspec.implementations.cached" -> "time" [];
	"fsspec.implementations.cached" -> "weakref" [];
	"fsspec.implementations.cached" -> "shutil" [];
	"fsspec.implementations.cached" -> "typing" [];
	"fsspec.implementations.cached" -> "fsspec" [];
	"fsspec.implementations.cache_metadata" -> "__future__" [];
	"fsspec.implementations.cache_metadata" -> "os" [];
	"fsspec.implementations.cache_metadata" -> "pickle" [];
	"fsspec.implementations.cache_metadata" -> "time" [];
	"fsspec.implementations.cache_metadata" -> "typing" [];
	"fsspec.implementations.cache_metadata" -> "ujson" [];
	"fsspec.implementations.cache_metadata" -> "json" [];
	"fsspec.implementations.cache_metadata" -> "typing_extensions" [];
	"fsspec.implementations.cache_mapper" -> "__future__" [];
	"fsspec.implementations.cache_mapper" -> "abc" [];
	"fsspec.implementations.cache_mapper" -> "hashlib" [];
	"fsspec.implementations.asyn_wrapper" -> "asyncio" [];
	"fsspec.implementations.asyn_wrapper" -> "functools" [];
	"fsspec.implementations.asyn_wrapper" -> "inspect" [];
	"fsspec.implementations.arrow" -> "errno" [];
	"fsspec.implementations.arrow" -> "io" [];
	"fsspec.implementations.arrow" -> "os" [];
	"fsspec.implementations.arrow" -> "secrets" [];
	"fsspec.implementations.arrow" -> "shutil" [];
	"fsspec.implementations.arrow" -> "contextlib" [];
	"fsspec.implementations.arrow" -> "functools" [];
	"fsspec.gui" -> "ast" [];
	"fsspec.gui" -> "contextlib" [];
	"fsspec.gui" -> "logging" [];
	"fsspec.gui" -> "os" [];
	"fsspec.gui" -> "re" [];
	"fsspec.gui" -> "typing" [];
	"fsspec.gui" -> "panel" [];
	"fsspec.generic" -> "__future__" [];
	"fsspec.generic" -> "inspect" [];
	"fsspec.generic" -> "logging" [];
	"fsspec.generic" -> "os" [];
	"fsspec.generic" -> "shutil" [];
	"fsspec.generic" -> "uuid" [];
	"fsspec.generic" -> "typing" [];
	"fsspec.generic" -> "tempfile" [];
	"fsspec.fuse" -> "argparse" [];
	"fsspec.fuse" -> "logging" [];
	"fsspec.fuse" -> "os" [];
	"fsspec.fuse" -> "stat" [];
	"fsspec.fuse" -> "threading" [];
	"fsspec.fuse" -> "time" [];
	"fsspec.fuse" -> "errno" [];
	"fsspec.fuse" -> "fuse" [];
	"fsspec.fuse" -> "sys" [];
	"fsspec.dircache" -> "time" [];
	"fsspec.dircache" -> "functools" [];
	"fsspec.conftest" -> "os" [];
	"fsspec.conftest" -> "shutil" [];
	"fsspec.conftest" -> "subprocess" [];
	"fsspec.conftest" -> "sys" [];
	"fsspec.conftest" -> "time" [];
	"fsspec.conftest" -> "pytest" [];
	"fsspec.config" -> "__future__" [];
	"fsspec.config" -> "configparser" [];
	"fsspec.config" -> "json" [];
	"fsspec.config" -> "os" [];
	"fsspec.config" -> "warnings" [];
	"fsspec.config" -> "typing" [];
	"fsspec.asyn" -> "asyncio" [];
	"fsspec.asyn" -> "functools" [];
	"fsspec.asyn" -> "inspect" [];
	"fsspec.asyn" -> "io" [];
	"fsspec.asyn" -> "numbers" [];
	"fsspec.asyn" -> "os" [];
	"fsspec.asyn" -> "re" [];
	"fsspec.asyn" -> "threading" [];
	"fsspec.asyn" -> "contextlib" [];
	"fsspec.asyn" -> "glob" [];
	"fsspec.asyn" -> "typing" [];
	"fsspec.asyn" -> "resource" [];
	"fsspec.asyn" -> "traceback" [];
	"fsspec.archive" -> "operator" [];
	"fsspec.spec" -> "__future__" [];
	"fsspec.spec" -> "io" [];
	"fsspec.spec" -> "json" [];
	"fsspec.spec" -> "logging" [];
	"fsspec.spec" -> "os" [];
	"fsspec.spec" -> "threading" [];
	"fsspec.spec" -> "warnings" [];
	"fsspec.spec" -> "weakref" [];
	"fsspec.spec" -> "errno" [];
	"fsspec.spec" -> "glob" [];
	"fsspec.spec" -> "hashlib" [];
	"fsspec.spec" -> "typing" [];
	"fsspec.spec" -> "re" [];
	"fsspec.registry" -> "__future__" [];
	"fsspec.registry" -> "importlib" [];
	"fsspec.registry" -> "types" [];
	"fsspec.registry" -> "warnings" [];
	"fsspec.mapping" -> "array" [];
	"fsspec.mapping" -> "logging" [];
	"fsspec.mapping" -> "posixpath" [];
	"fsspec.mapping" -> "warnings" [];
	"fsspec.mapping" -> "functools" [];
	"fsspec.exceptions" -> "asyncio" [];
	"fsspec.core" -> "__future__" [];
	"fsspec.core" -> "io" [];
	"fsspec.core" -> "logging" [];
	"fsspec.core" -> "os" [];
	"fsspec.core" -> "re" [];
	"fsspec.core" -> "glob" [];
	"fsspec.core" -> "pathlib" [];
	"fsspec.compression" -> "zipfile" [];
	"fsspec.compression" -> "bz2" [];
	"fsspec.compression" -> "isal" [];
	"fsspec.compression" -> "gzip" [];
	"fsspec.compression" -> "lzma" [];
	"fsspec.compression" -> "lzmaffi" [];
	"fsspec.compression" -> "snappy" [];
	"fsspec.compression" -> "lz4" [];
	"fsspec.compression" -> "zstandard" [];
	"zstandard" -> "__future__" [];
	"zstandard" -> "builtins" [];
	"zstandard" -> "io" [];
	"zstandard" -> "os" [];
	"zstandard" -> "platform" [];
	"zstandard" -> "typing" [];
	"zstandard.backend_cffi" -> "__future__" [];
	"zstandard.backend_cffi" -> "io" [];
	"zstandard.backend_cffi" -> "os" [];
	"fsspec.callbacks" -> "functools" [];
	"fsspec.callbacks" -> "tqdm" [];
	"tqdm" -> "warnings" [];
	"tqdm.notebook" -> "re" [];
	"tqdm.notebook" -> "sys" [];
	"tqdm.notebook" -> "html" [];
	"tqdm.notebook" -> "weakref" [];
	"tqdm.notebook" -> "ipywidgets" [];
	"tqdm.notebook" -> "warnings" [];
	"tqdm.notebook" -> "'IPython.html'" [];
	"tqdm.version" -> "setuptools_scm" [];
	"tqdm.std" -> "sys" [];
	"tqdm.std" -> "collections" [];
	"tqdm.std" -> "contextlib" [];
	"tqdm.std" -> "datetime" [];
	"tqdm.std" -> "numbers" [];
	"tqdm.std" -> "time" [];
	"tqdm.std" -> "warnings" [];
	"tqdm.std" -> "weakref" [];
	"tqdm.std" -> "threading" [];
	"tqdm.std" -> "multiprocessing" [];
	"tqdm.std" -> "pandas" [];
	"tqdm.utils" -> "os" [];
	"tqdm.utils" -> "re" [];
	"tqdm.utils" -> "sys" [];
	"tqdm.utils" -> "functools" [];
	"tqdm.utils" -> "inspect" [];
	"tqdm.utils" -> "unicodedata" [];
	"tqdm.utils" -> "warnings" [];
	"tqdm.utils" -> "weakref" [];
	"tqdm.utils" -> "colorama" [];
	"tqdm.utils" -> "struct" [];
	"tqdm.utils" -> "ctypes" [];
	"tqdm.utils" -> "shlex" [];
	"tqdm.utils" -> "subprocess" [];
	"tqdm.utils" -> "array" [];
	"tqdm.utils" -> "fcntl" [];
	"tqdm.utils" -> "termios" [];
	"tqdm.gui" -> "re" [];
	"tqdm.gui" -> "warnings" [];
	"tqdm.gui" -> "collections" [];
	"tqdm.gui" -> "matplotlib" [];
	"tqdm.gui" -> "'matplotlib.pyplot'" [];
	"tqdm.cli" -> "logging" [];
	"tqdm.cli" -> "re" [];
	"tqdm.cli" -> "sys" [];
	"tqdm.cli" -> "ast" [];
	"tqdm.cli" -> "textwrap" [];
	"tqdm.cli" -> "importlib_resources" [];
	"tqdm.cli" -> "importlib" [];
	"tqdm.cli" -> "pathlib" [];
	"tqdm._tqdm_pandas" -> "sys" [];
	"tqdm._monitor" -> "atexit" [];
	"tqdm._monitor" -> "threading" [];
	"tqdm._monitor" -> "time" [];
	"tqdm._monitor" -> "warnings" [];
	"fsspec._version" -> "typing" [];
	"fsspec.caching" -> "__future__" [];
	"fsspec.caching" -> "collections" [];
	"fsspec.caching" -> "functools" [];
	"fsspec.caching" -> "logging" [];
	"fsspec.caching" -> "math" [];
	"fsspec.caching" -> "os" [];
	"fsspec.caching" -> "threading" [];
	"fsspec.caching" -> "warnings" [];
	"fsspec.caching" -> "itertools" [];
	"fsspec.caching" -> "operator" [];
	"fsspec.caching" -> "typing" [];
	"fsspec.caching" -> "mmap" [];
	"fsspec.caching" -> "typing_extensions" [];
	"fsspec.caching" -> "tempfile" [];
	"pyarrow._generated_version" -> "typing" [];
	"pandas.core.arrays.arrow.array" -> "__future__" [];
	"pandas.core.arrays.arrow.array" -> "functools" [];
	"pandas.core.arrays.arrow.array" -> "operator" [];
	"pandas.core.arrays.arrow.array" -> "re" [];
	"pandas.core.arrays.arrow.array" -> "textwrap" [];
	"pandas.core.arrays.arrow.array" -> "typing" [];
	"pandas.core.arrays.arrow.array" -> "unicodedata" [];
	"pandas.core.arrays.arrow.array" -> "numpy" [];
	"pandas.core.arrays.arrow.array" -> "pyarrow" [];
	"pandas.core.arrays.arrow.array" -> "pandas" [];
	"pandas.core.tools.times" -> "__future__" [];
	"pandas.core.tools.times" -> "datetime" [];
	"pandas.core.tools.times" -> "typing" [];
	"pandas.core.tools.times" -> "warnings" [];
	"pandas.core.tools.times" -> "numpy" [];
	"pandas.core.tools.timedeltas" -> "__future__" [];
	"pandas.core.tools.timedeltas" -> "typing" [];
	"pandas.core.tools.timedeltas" -> "warnings" [];
	"pandas.core.tools.timedeltas" -> "numpy" [];
	"pandas.core.tools.timedeltas" -> "datetime" [];
	"pandas.core.tools.timedeltas" -> "pandas" [];
	"pandas.core.tools.datetimes" -> "__future__" [];
	"pandas.core.tools.datetimes" -> "collections" [];
	"pandas.core.tools.datetimes" -> "datetime" [];
	"pandas.core.tools.datetimes" -> "functools" [];
	"pandas.core.tools.datetimes" -> "itertools" [];
	"pandas.core.tools.datetimes" -> "typing" [];
	"pandas.core.tools.datetimes" -> "warnings" [];
	"pandas.core.tools.datetimes" -> "numpy" [];
	"pandas.core.tools.datetimes" -> "pandas" [];
	"pandas.core.arrays.floating" -> "__future__" [];
	"pandas.core.arrays.floating" -> "typing" [];
	"pandas.core.arrays.floating" -> "numpy" [];
	"pandas.core.arrays.integer" -> "__future__" [];
	"pandas.core.arrays.integer" -> "typing" [];
	"pandas.core.arrays.integer" -> "numpy" [];
	"pandas.io._util" -> "__future__" [];
	"pandas.io._util" -> "typing" [];
	"pandas.io._util" -> "pandas" [];
	"pandas.core.dtypes.inference" -> "__future__" [];
	"pandas.core.dtypes.inference" -> "collections" [];
	"pandas.core.dtypes.inference" -> "numbers" [];
	"pandas.core.dtypes.inference" -> "re" [];
	"pandas.core.dtypes.inference" -> "typing" [];
	"pandas.core.dtypes.inference" -> "numpy" [];
	"pandas.core.dtypes.inference" -> "dataclasses" [];
	"pandas.util._exceptions" -> "__future__" [];
	"pandas.util._exceptions" -> "contextlib" [];
	"pandas.util._exceptions" -> "inspect" [];
	"pandas.util._exceptions" -> "os" [];
	"pandas.util._exceptions" -> "re" [];
	"pandas.util._exceptions" -> "typing" [];
	"pandas.util._exceptions" -> "warnings" [];
	"pandas.util._exceptions" -> "types" [];
	"pandas.util._exceptions" -> "pandas" [];
	"pandas.core.ops.missing" -> "__future__" [];
	"pandas.core.ops.missing" -> "operator" [];
	"pandas.core.ops.missing" -> "numpy" [];
	"pandas.core.construction" -> "__future__" [];
	"pandas.core.construction" -> "typing" [];
	"pandas.core.construction" -> "warnings" [];
	"pandas.core.construction" -> "numpy" [];
	"pandas.core.construction" -> "pandas" [];
	"pandas.core.algorithms" -> "__future__" [];
	"pandas.core.algorithms" -> "decimal" [];
	"pandas.core.algorithms" -> "operator" [];
	"pandas.core.algorithms" -> "textwrap" [];
	"pandas.core.algorithms" -> "typing" [];
	"pandas.core.algorithms" -> "warnings" [];
	"pandas.core.algorithms" -> "numpy" [];
	"pandas.core.algorithms" -> "pandas" [];
	"pandas.core.internals.construction" -> "__future__" [];
	"pandas.core.internals.construction" -> "collections" [];
	"pandas.core.internals.construction" -> "typing" [];
	"pandas.core.internals.construction" -> "numpy" [];
	"pandas.core.internals.construction" -> "dataclasses" [];
	"pandas.core.internals.managers" -> "__future__" [];
	"pandas.core.internals.managers" -> "itertools" [];
	"pandas.core.internals.managers" -> "typing" [];
	"pandas.core.internals.managers" -> "warnings" [];
	"pandas.core.internals.managers" -> "numpy" [];
	"pandas.core.internals.ops" -> "__future__" [];
	"pandas.core.internals.ops" -> "typing" [];
	"pandas.core.internals.base" -> "__future__" [];
	"pandas.core.internals.base" -> "typing" [];
	"pandas.core.internals.base" -> "numpy" [];
	"pandas.core.internals.array_manager" -> "__future__" [];
	"pandas.core.internals.array_manager" -> "itertools" [];
	"pandas.core.internals.array_manager" -> "typing" [];
	"pandas.core.internals.array_manager" -> "numpy" [];
	"pandas.core.reshape.tile" -> "__future__" [];
	"pandas.core.reshape.tile" -> "typing" [];
	"pandas.core.reshape.tile" -> "numpy" [];
	"pandas.core.reshape.tile" -> "pandas" [];
	"pandas.core.array_algos.take" -> "__future__" [];
	"pandas.core.array_algos.take" -> "functools" [];
	"pandas.core.array_algos.take" -> "typing" [];
	"pandas.core.array_algos.take" -> "numpy" [];
	"pandas.core.sample" -> "__future__" [];
	"pandas.core.sample" -> "typing" [];
	"pandas.core.sample" -> "numpy" [];
	"pandas.core.indexing" -> "__future__" [];
	"pandas.core.indexing" -> "contextlib" [];
	"pandas.core.indexing" -> "sys" [];
	"pandas.core.indexing" -> "typing" [];
	"pandas.core.indexing" -> "warnings" [];
	"pandas.core.indexing" -> "numpy" [];
	"pandas.core.indexing" -> "pandas" [];
	"pandas.core.nanops" -> "__future__" [];
	"pandas.core.nanops" -> "functools" [];
	"pandas.core.nanops" -> "itertools" [];
	"pandas.core.nanops" -> "typing" [];
	"pandas.core.nanops" -> "warnings" [];
	"pandas.core.nanops" -> "numpy" [];
	"pandas.core.nanops" -> "'scipy.stats'" [];
	"pandas.core.missing" -> "__future__" [];
	"pandas.core.missing" -> "functools" [];
	"pandas.core.missing" -> "typing" [];
	"pandas.core.missing" -> "numpy" [];
	"pandas.core.missing" -> "pandas" [];
	"pandas.core.missing" -> "scipy" [];
	"pandas.core.roperator" -> "__future__" [];
	"pandas.core.roperator" -> "operator" [];
	"pandas.util._decorators" -> "__future__" [];
	"pandas.util._decorators" -> "functools" [];
	"pandas.util._decorators" -> "inspect" [];
	"pandas.util._decorators" -> "textwrap" [];
	"pandas.util._decorators" -> "typing" [];
	"pandas.util._decorators" -> "warnings" [];
	"pandas.io.formats.string" -> "__future__" [];
	"pandas.io.formats.string" -> "shutil" [];
	"pandas.io.formats.string" -> "typing" [];
	"pandas.io.formats.string" -> "numpy" [];
	"pandas.io.formats.string" -> "pandas" [];
	"pandas.io.formats.html" -> "__future__" [];
	"pandas.io.formats.html" -> "textwrap" [];
	"pandas.io.formats.html" -> "typing" [];
	"pandas.io.formats.html" -> "pandas" [];
	"pandas.core.indexes.multi" -> "__future__" [];
	"pandas.core.indexes.multi" -> "functools" [];
	"pandas.core.indexes.multi" -> "sys" [];
	"pandas.core.indexes.multi" -> "typing" [];
	"pandas.core.indexes.multi" -> "warnings" [];
	"pandas.core.indexes.multi" -> "numpy" [];
	"pandas.core.indexes.multi" -> "pandas" [];
	"pandas.core.indexes.multi" -> "copy" [];
	"pandas.core.reshape.util" -> "__future__" [];
	"pandas.core.reshape.util" -> "typing" [];
	"pandas.core.reshape.util" -> "numpy" [];
	"pandas.core.indexes.frozen" -> "__future__" [];
	"pandas.core.indexes.frozen" -> "typing" [];
	"pandas.io.formats.console" -> "__future__" [];
	"pandas.io.formats.console" -> "shutil" [];
	"pandas.io.formats.console" -> "pandas" [];
	"pandas.io.formats.printing" -> "__future__" [];
	"pandas.io.formats.printing" -> "sys" [];
	"pandas.io.formats.printing" -> "typing" [];
	"pandas.io.formats.printing" -> "unicodedata" [];
	"pandas.io.formats.printing" -> "IPython" [];
	"pandas.io.formats.printing" -> "traitlets" [];
	"pandas.io.formats" -> "typing" [];
	"pandas.io.formats.style" -> "__future__" [];
	"pandas.io.formats.style" -> "contextlib" [];
	"pandas.io.formats.style" -> "copy" [];
	"pandas.io.formats.style" -> "functools" [];
	"pandas.io.formats.style" -> "operator" [];
	"pandas.io.formats.style" -> "typing" [];
	"pandas.io.formats.style" -> "warnings" [];
	"pandas.io.formats.style" -> "numpy" [];
	"pandas.io.formats.style" -> "pandas" [];
	"pandas.io.formats.style" -> "'matplotlib.colors'" [];
	"pandas.io.formats.style" -> "matplotlib" [];
	"pandas.io.formats.style" -> "'matplotlib.pyplot'" [];
	"pandas.io.formats.style" -> "jinja2" [];
	"pandas.io.formats.excel" -> "__future__" [];
	"pandas.io.formats.excel" -> "functools" [];
	"pandas.io.formats.excel" -> "itertools" [];
	"pandas.io.formats.excel" -> "re" [];
	"pandas.io.formats.excel" -> "typing" [];
	"pandas.io.formats.excel" -> "warnings" [];
	"pandas.io.formats.excel" -> "numpy" [];
	"pandas.io.formats.excel" -> "pandas" [];
	"pandas.io.excel._xlsxwriter" -> "__future__" [];
	"pandas.io.excel._xlsxwriter" -> "json" [];
	"pandas.io.excel._xlsxwriter" -> "typing" [];
	"pandas.io.excel._xlsxwriter" -> "xlsxwriter" [];
	"pandas.io.excel._util" -> "__future__" [];
	"pandas.io.excel._util" -> "typing" [];
	"pandas.io.excel._openpyxl" -> "__future__" [];
	"pandas.io.excel._openpyxl" -> "mmap" [];
	"pandas.io.excel._openpyxl" -> "typing" [];
	"pandas.io.excel._openpyxl" -> "numpy" [];
	"pandas.io.excel._openpyxl" -> "openpyxl" [];
	"pandas.io.excel._openpyxl" -> "'openpyxl.descriptors'" [];
	"pandas.io.excel._openpyxl" -> "'openpyxl.workbook'" [];
	"pandas.io.excel._openpyxl" -> "'openpyxl.styles'" [];
	"pandas.io.excel._openpyxl" -> "'openpyxl.cell'" [];
	"pandas.io.excel._odswriter" -> "__future__" [];
	"pandas.io.excel._odswriter" -> "collections" [];
	"pandas.io.excel._odswriter" -> "datetime" [];
	"pandas.io.excel._odswriter" -> "json" [];
	"pandas.io.excel._odswriter" -> "typing" [];
	"pandas.io.excel._odswriter" -> "'odf.opendocument'" [];
	"pandas.io.excel._odswriter" -> "'odf.table'" [];
	"pandas.io.excel._odswriter" -> "'odf.text'" [];
	"pandas.io.excel._odswriter" -> "'odf.style'" [];
	"pandas.io.excel._odswriter" -> "'odf.config'" [];
	"pandas.io.excel._base" -> "__future__" [];
	"pandas.io.excel._base" -> "datetime" [];
	"pandas.io.excel._base" -> "functools" [];
	"pandas.io.excel._base" -> "io" [];
	"pandas.io.excel._base" -> "os" [];
	"pandas.io.excel._base" -> "textwrap" [];
	"pandas.io.excel._base" -> "typing" [];
	"pandas.io.excel._base" -> "warnings" [];
	"pandas.io.excel._base" -> "zipfile" [];
	"pandas.io.excel._base" -> "types" [];
	"pandas.io.excel._base" -> "xlrd" [];
	"pandas.io.excel._xlrd" -> "__future__" [];
	"pandas.io.excel._xlrd" -> "datetime" [];
	"pandas.io.excel._xlrd" -> "math" [];
	"pandas.io.excel._xlrd" -> "typing" [];
	"pandas.io.excel._xlrd" -> "numpy" [];
	"pandas.io.excel._xlrd" -> "xlrd" [];
	"pandas.io.excel._pyxlsb" -> "__future__" [];
	"pandas.io.excel._pyxlsb" -> "typing" [];
	"pandas.io.excel._pyxlsb" -> "pyxlsb" [];
	"pandas.io.excel._odfreader" -> "__future__" [];
	"pandas.io.excel._odfreader" -> "typing" [];
	"pandas.io.excel._odfreader" -> "numpy" [];
	"pandas.io.excel._odfreader" -> "pandas" [];
	"pandas.io.excel._odfreader" -> "odf" [];
	"pandas.io.excel._odfreader" -> "'odf.opendocument'" [];
	"pandas.io.excel._odfreader" -> "'odf.table'" [];
	"pandas.io.excel._odfreader" -> "'odf.namespaces'" [];
	"pandas.io.excel._odfreader" -> "'odf.element'" [];
	"pandas.io.excel._odfreader" -> "'odf.office'" [];
	"pandas.io.excel._odfreader" -> "'odf.text'" [];
	"pandas.io.excel._calamine" -> "__future__" [];
	"pandas.io.excel._calamine" -> "datetime" [];
	"pandas.io.excel._calamine" -> "typing" [];
	"pandas.io.excel._calamine" -> "pandas" [];
	"pandas.io.excel._calamine" -> "python_calamine" [];
	"pandas.io.parsers.readers" -> "__future__" [];
	"pandas.io.parsers.readers" -> "collections" [];
	"pandas.io.parsers.readers" -> "csv" [];
	"pandas.io.parsers.readers" -> "sys" [];
	"pandas.io.parsers.readers" -> "textwrap" [];
	"pandas.io.parsers.readers" -> "typing" [];
	"pandas.io.parsers.readers" -> "warnings" [];
	"pandas.io.parsers.readers" -> "numpy" [];
	"pandas.io.parsers.readers" -> "pandas" [];
	"pandas.io.parsers.readers" -> "types" [];
	"pandas.io.parsers.python_parser" -> "__future__" [];
	"pandas.io.parsers.python_parser" -> "collections" [];
	"pandas.io.parsers.python_parser" -> "csv" [];
	"pandas.io.parsers.python_parser" -> "io" [];
	"pandas.io.parsers.python_parser" -> "re" [];
	"pandas.io.parsers.python_parser" -> "typing" [];
	"pandas.io.parsers.python_parser" -> "warnings" [];
	"pandas.io.parsers.python_parser" -> "numpy" [];
	"pandas.io.parsers.python_parser" -> "pandas" [];
	"pandas.io.parsers.c_parser_wrapper" -> "__future__" [];
	"pandas.io.parsers.c_parser_wrapper" -> "collections" [];
	"pandas.io.parsers.c_parser_wrapper" -> "typing" [];
	"pandas.io.parsers.c_parser_wrapper" -> "warnings" [];
	"pandas.io.parsers.c_parser_wrapper" -> "numpy" [];
	"pandas.io.parsers.c_parser_wrapper" -> "pandas" [];
	"pandas.io.parsers.base_parser" -> "__future__" [];
	"pandas.io.parsers.base_parser" -> "collections" [];
	"pandas.io.parsers.base_parser" -> "copy" [];
	"pandas.io.parsers.base_parser" -> "csv" [];
	"pandas.io.parsers.base_parser" -> "datetime" [];
	"pandas.io.parsers.base_parser" -> "enum" [];
	"pandas.io.parsers.base_parser" -> "itertools" [];
	"pandas.io.parsers.base_parser" -> "typing" [];
	"pandas.io.parsers.base_parser" -> "warnings" [];
	"pandas.io.parsers.base_parser" -> "numpy" [];
	"pandas.io.parsers.base_parser" -> "pandas" [];
	"pandas.io.parsers.base_parser" -> "pyarrow" [];
	"pandas.io.parsers.arrow_parser_wrapper" -> "__future__" [];
	"pandas.io.parsers.arrow_parser_wrapper" -> "typing" [];
	"pandas.io.parsers.arrow_parser_wrapper" -> "warnings" [];
	"pandas.io.parsers.arrow_parser_wrapper" -> "pandas" [];
	"pandas.io.formats.css" -> "__future__" [];
	"pandas.io.formats.css" -> "re" [];
	"pandas.io.formats.css" -> "typing" [];
	"pandas.io.formats.css" -> "warnings" [];
	"pandas.io.formats._color_data" -> "__future__" [];
	"pandas.io.formats.style_render" -> "__future__" [];
	"pandas.io.formats.style_render" -> "collections" [];
	"pandas.io.formats.style_render" -> "functools" [];
	"pandas.io.formats.style_render" -> "re" [];
	"pandas.io.formats.style_render" -> "typing" [];
	"pandas.io.formats.style_render" -> "uuid" [];
	"pandas.io.formats.style_render" -> "numpy" [];
	"pandas.io.formats.style_render" -> "pandas" [];
	"pandas.io.formats.style_render" -> "markupsafe" [];
	"pandas.io.common" -> "__future__" [];
	"pandas.io.common" -> "abc" [];
	"pandas.io.common" -> "codecs" [];
	"pandas.io.common" -> "collections" [];
	"pandas.io.common" -> "dataclasses" [];
	"pandas.io.common" -> "functools" [];
	"pandas.io.common" -> "gzip" [];
	"pandas.io.common" -> "io" [];
	"pandas.io.common" -> "mmap" [];
	"pandas.io.common" -> "os" [];
	"pandas.io.common" -> "pathlib" [];
	"pandas.io.common" -> "re" [];
	"pandas.io.common" -> "tarfile" [];
	"pandas.io.common" -> "typing" [];
	"pandas.io.common" -> "warnings" [];
	"pandas.io.common" -> "zipfile" [];
	"pandas.io.common" -> "types" [];
	"pandas.io.common" -> "pandas" [];
	"pandas.io.common" -> "botocore" [];
	"pandas.core.reshape.concat" -> "__future__" [];
	"pandas.core.reshape.concat" -> "collections" [];
	"pandas.core.reshape.concat" -> "typing" [];
	"pandas.core.reshape.concat" -> "warnings" [];
	"pandas.core.reshape.concat" -> "numpy" [];
	"pandas.core.reshape.concat" -> "pandas" [];
	"pandas.core.indexes.timedeltas" -> "__future__" [];
	"pandas.core.indexes.timedeltas" -> "typing" [];
	"pandas.core.indexes.timedeltas" -> "warnings" [];
	"pandas.core.indexes.extension" -> "__future__" [];
	"pandas.core.indexes.extension" -> "typing" [];
	"pandas.core.indexes.extension" -> "numpy" [];
	"pandas.core.indexes.datetimelike" -> "__future__" [];
	"pandas.core.indexes.datetimelike" -> "abc" [];
	"pandas.core.indexes.datetimelike" -> "typing" [];
	"pandas.core.indexes.datetimelike" -> "warnings" [];
	"pandas.core.indexes.datetimelike" -> "numpy" [];
	"pandas.core.indexes.datetimelike" -> "datetime" [];
	"pandas.core.indexes.datetimelike" -> "pandas" [];
	"pandas.core.indexes.range" -> "__future__" [];
	"pandas.core.indexes.range" -> "datetime" [];
	"pandas.core.indexes.range" -> "operator" [];
	"pandas.core.indexes.range" -> "sys" [];
	"pandas.core.indexes.range" -> "typing" [];
	"pandas.core.indexes.range" -> "numpy" [];
	"pandas.core.indexes.datetimes" -> "__future__" [];
	"pandas.core.indexes.datetimes" -> "datetime" [];
	"pandas.core.indexes.datetimes" -> "operator" [];
	"pandas.core.indexes.datetimes" -> "typing" [];
	"pandas.core.indexes.datetimes" -> "warnings" [];
	"pandas.core.indexes.datetimes" -> "numpy" [];
	"pandas.core.indexes.datetimes" -> "pytz" [];
	"pytz" -> "sys" [];
	"pytz" -> "datetime" [];
	"pytz" -> "os.path" [];
	"pytz" -> "pkg_resources" [];
	"pytz" -> "doctest" [];
	"pytz.tzfile" -> "datetime" [];
	"pytz.tzfile" -> "struct" [];
	"pytz.tzfile" -> "os.path" [];
	"pytz.tzfile" -> "pprint" [];
	"pytz.tzinfo" -> "datetime" [];
	"pytz.tzinfo" -> "bisect" [];
	"pytz.tzinfo" -> "sets" [];
	"pytz.lazy" -> "threading" [];
	"pytz.lazy" -> "UserDict" [];
	"pytz.lazy" -> "collections" [];
	"pandas.core.indexes.api" -> "__future__" [];
	"pandas.core.indexes.api" -> "textwrap" [];
	"pandas.core.indexes.api" -> "typing" [];
	"pandas.core.indexes.api" -> "numpy" [];
	"pandas.core.indexes.period" -> "__future__" [];
	"pandas.core.indexes.period" -> "datetime" [];
	"pandas.core.indexes.period" -> "typing" [];
	"pandas.core.indexes.period" -> "warnings" [];
	"pandas.core.indexes.period" -> "numpy" [];
	"pandas.core.indexes.interval" -> "__future__" [];
	"pandas.core.indexes.interval" -> "operator" [];
	"pandas.core.indexes.interval" -> "textwrap" [];
	"pandas.core.indexes.interval" -> "typing" [];
	"pandas.core.indexes.interval" -> "numpy" [];
	"pandas.core.indexes.category" -> "__future__" [];
	"pandas.core.indexes.category" -> "typing" [];
	"pandas.core.indexes.category" -> "numpy" [];
	"pandas.core.common" -> "__future__" [];
	"pandas.core.common" -> "builtins" [];
	"pandas.core.common" -> "collections" [];
	"pandas.core.common" -> "contextlib" [];
	"pandas.core.common" -> "functools" [];
	"pandas.core.common" -> "inspect" [];
	"pandas.core.common" -> "typing" [];
	"pandas.core.common" -> "warnings" [];
	"pandas.core.common" -> "numpy" [];
	"pandas.core.common" -> "pandas" [];
	"pandas.core.base" -> "__future__" [];
	"pandas.core.base" -> "textwrap" [];
	"pandas.core.base" -> "typing" [];
	"pandas.core.base" -> "warnings" [];
	"pandas.core.base" -> "numpy" [];
	"pandas.core.base" -> "pandas" [];
	"pandas.core.arrays.string_" -> "__future__" [];
	"pandas.core.arrays.string_" -> "typing" [];
	"pandas.core.arrays.string_" -> "numpy" [];
	"pandas.core.arrays.string_" -> "pyarrow" [];
	"pandas.core.arrays.string_" -> "pandas" [];
	"pandas.core.arrays.numpy_" -> "__future__" [];
	"pandas.core.arrays.numpy_" -> "typing" [];
	"pandas.core.arrays.numpy_" -> "numpy" [];
	"pandas.core.arrays.numpy_" -> "pandas" [];
	"pandas.core.arrays.sparse.array" -> "__future__" [];
	"pandas.core.arrays.sparse.array" -> "collections" [];
	"pandas.core.arrays.sparse.array" -> "numbers" [];
	"pandas.core.arrays.sparse.array" -> "operator" [];
	"pandas.core.arrays.sparse.array" -> "typing" [];
	"pandas.core.arrays.sparse.array" -> "warnings" [];
	"pandas.core.arrays.sparse.array" -> "numpy" [];
	"pandas.core.arrays.sparse.array" -> "enum" [];
	"pandas.core.arrays.sparse.array" -> "'scipy.sparse'" [];
	"pandas.core.arrays.sparse.array" -> "pandas" [];
	"pandas.core.arrays.sparse.accessor" -> "__future__" [];
	"pandas.core.arrays.sparse.accessor" -> "typing" [];
	"pandas.core.arrays.sparse.accessor" -> "numpy" [];
	"pandas.core.arrays.sparse.accessor" -> "pandas" [];
	"pandas.core.arrays.sparse.accessor" -> "'scipy.sparse'" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "__future__" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "typing" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "numpy" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "'scipy.sparse'" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "pandas" [];
	"pandas.core.dtypes.missing" -> "__future__" [];
	"pandas.core.dtypes.missing" -> "decimal" [];
	"pandas.core.dtypes.missing" -> "functools" [];
	"pandas.core.dtypes.missing" -> "typing" [];
	"pandas.core.dtypes.missing" -> "warnings" [];
	"pandas.core.dtypes.missing" -> "numpy" [];
	"pandas.core.dtypes.missing" -> "re" [];
	"pandas.core.dtypes.missing" -> "pandas" [];
	"pandas.core.dtypes.common" -> "__future__" [];
	"pandas.core.dtypes.common" -> "typing" [];
	"pandas.core.dtypes.common" -> "warnings" [];
	"pandas.core.dtypes.common" -> "numpy" [];
	"pandas.core.dtypes.common" -> "scipy" [];
	"pandas._config.config" -> "__future__" [];
	"pandas._config.config" -> "contextlib" [];
	"pandas._config.config" -> "re" [];
	"pandas._config.config" -> "typing" [];
	"pandas._config.config" -> "warnings" [];
	"pandas._config.config" -> "keyword" [];
	"pandas._config.config" -> "tokenize" [];
	"pandas._config.config" -> "itertools" [];
	"pandas._config.config" -> "textwrap" [];
	"pandas.core.window.rolling" -> "__future__" [];
	"pandas.core.window.rolling" -> "copy" [];
	"pandas.core.window.rolling" -> "datetime" [];
	"pandas.core.window.rolling" -> "functools" [];
	"pandas.core.window.rolling" -> "inspect" [];
	"pandas.core.window.rolling" -> "textwrap" [];
	"pandas.core.window.rolling" -> "typing" [];
	"pandas.core.window.rolling" -> "numpy" [];
	"pandas.core.window.rolling" -> "pandas" [];
	"pandas.core.series" -> "__future__" [];
	"pandas.core.series" -> "operator" [];
	"pandas.core.series" -> "sys" [];
	"pandas.core.series" -> "textwrap" [];
	"pandas.core.series" -> "typing" [];
	"pandas.core.series" -> "warnings" [];
	"pandas.core.series" -> "weakref" [];
	"pandas.core.series" -> "numpy" [];
	"pandas.core.reshape.reshape" -> "__future__" [];
	"pandas.core.reshape.reshape" -> "itertools" [];
	"pandas.core.reshape.reshape" -> "typing" [];
	"pandas.core.reshape.reshape" -> "warnings" [];
	"pandas.core.reshape.reshape" -> "numpy" [];
	"pandas.io.formats.info" -> "__future__" [];
	"pandas.io.formats.info" -> "abc" [];
	"pandas.io.formats.info" -> "sys" [];
	"pandas.io.formats.info" -> "textwrap" [];
	"pandas.io.formats.info" -> "typing" [];
	"pandas.io.formats.info" -> "pandas" [];
	"pandas.core.strings.accessor" -> "__future__" [];
	"pandas.core.strings.accessor" -> "codecs" [];
	"pandas.core.strings.accessor" -> "functools" [];
	"pandas.core.strings.accessor" -> "re" [];
	"pandas.core.strings.accessor" -> "typing" [];
	"pandas.core.strings.accessor" -> "warnings" [];
	"pandas.core.strings.accessor" -> "numpy" [];
	"pandas.core.strings.accessor" -> "pandas" [];
	"pandas.core.strings.accessor" -> "pyarrow" [];
	"pandas.core.methods.selectn" -> "__future__" [];
	"pandas.core.methods.selectn" -> "typing" [];
	"pandas.core.methods.selectn" -> "numpy" [];
	"pandas.core.methods.selectn" -> "pandas" [];
	"pandas.core.indexes.accessors" -> "__future__" [];
	"pandas.core.indexes.accessors" -> "typing" [];
	"pandas.core.indexes.accessors" -> "warnings" [];
	"pandas.core.indexes.accessors" -> "numpy" [];
	"pandas.core.indexes.accessors" -> "pandas" [];
	"pandas.compat._constants" -> "__future__" [];
	"pandas.compat._constants" -> "platform" [];
	"pandas.compat._constants" -> "sys" [];
	"pandas.compat._constants" -> "sysconfig" [];
	"pandas.core.resample" -> "__future__" [];
	"pandas.core.resample" -> "copy" [];
	"pandas.core.resample" -> "textwrap" [];
	"pandas.core.resample" -> "typing" [];
	"pandas.core.resample" -> "warnings" [];
	"pandas.core.resample" -> "numpy" [];
	"pandas.core.resample" -> "pandas" [];
	"pandas.core.internals" -> "warnings" [];
	"pandas.core.internals.concat" -> "__future__" [];
	"pandas.core.internals.concat" -> "typing" [];
	"pandas.core.internals.concat" -> "warnings" [];
	"pandas.core.internals.concat" -> "numpy" [];
	"pandas.core.internals.concat" -> "pandas" [];
	"pandas.core.internals.api" -> "__future__" [];
	"pandas.core.internals.api" -> "typing" [];
	"pandas.core.internals.api" -> "numpy" [];
	"pandas.core.internals.api" -> "warnings" [];
	"pandas.core.indexes.base" -> "__future__" [];
	"pandas.core.indexes.base" -> "collections" [];
	"pandas.core.indexes.base" -> "datetime" [];
	"pandas.core.indexes.base" -> "functools" [];
	"pandas.core.indexes.base" -> "itertools" [];
	"pandas.core.indexes.base" -> "operator" [];
	"pandas.core.indexes.base" -> "typing" [];
	"pandas.core.indexes.base" -> "warnings" [];
	"pandas.core.indexes.base" -> "numpy" [];
	"pandas.core.indexes.base" -> "pandas" [];
	"pandas.core.indexes.base" -> "pyarrow" [];
	"pandas.core.indexes.base" -> "copy" [];
	"pandas.core.reshape.merge" -> "__future__" [];
	"pandas.core.reshape.merge" -> "datetime" [];
	"pandas.core.reshape.merge" -> "functools" [];
	"pandas.core.reshape.merge" -> "typing" [];
	"pandas.core.reshape.merge" -> "uuid" [];
	"pandas.core.reshape.merge" -> "warnings" [];
	"pandas.core.reshape.merge" -> "numpy" [];
	"pandas.core.reshape.merge" -> "pandas" [];
	"pandas.core.reshape.merge" -> "pyarrow" [];
	"pandas.core.groupby.generic" -> "__future__" [];
	"pandas.core.groupby.generic" -> "collections" [];
	"pandas.core.groupby.generic" -> "functools" [];
	"pandas.core.groupby.generic" -> "textwrap" [];
	"pandas.core.groupby.generic" -> "typing" [];
	"pandas.core.groupby.generic" -> "warnings" [];
	"pandas.core.groupby.generic" -> "numpy" [];
	"pandas.core.groupby.generic" -> "pandas" [];
	"pandas.core.generic" -> "__future__" [];
	"pandas.core.generic" -> "collections" [];
	"pandas.core.generic" -> "copy" [];
	"pandas.core.generic" -> "datetime" [];
	"pandas.core.generic" -> "functools" [];
	"pandas.core.generic" -> "gc" [];
	"pandas.core.generic" -> "json" [];
	"pandas.core.generic" -> "operator" [];
	"pandas.core.generic" -> "pickle" [];
	"pandas.core.generic" -> "re" [];
	"pandas.core.generic" -> "sys" [];
	"pandas.core.generic" -> "typing" [];
	"pandas.core.generic" -> "warnings" [];
	"pandas.core.generic" -> "weakref" [];
	"pandas.core.generic" -> "numpy" [];
	"pandas.core.generic" -> "pandas" [];
	"pandas.io.clipboards" -> "__future__" [];
	"pandas.io.clipboards" -> "io" [];
	"pandas.io.clipboards" -> "typing" [];
	"pandas.io.clipboards" -> "warnings" [];
	"pandas.io.clipboards" -> "pandas" [];
	"pandas.io.clipboard" -> "contextlib" [];
	"pandas.io.clipboard" -> "ctypes" [];
	"pandas.io.clipboard" -> "os" [];
	"pandas.io.clipboard" -> "platform" [];
	"pandas.io.clipboard" -> "shutil" [];
	"pandas.io.clipboard" -> "subprocess" [];
	"pandas.io.clipboard" -> "time" [];
	"pandas.io.clipboard" -> "warnings" [];
	"pandas.io.clipboard" -> "qtpy" [];
	"pandas.io.clipboard" -> "PyQt4" [];
	"pandas.io.clipboard" -> "AppKit" [];
	"pandas.io.clipboard" -> "Foundation" [];
	"pandas.io.pickle" -> "__future__" [];
	"pandas.io.pickle" -> "pickle" [];
	"pandas.io.pickle" -> "typing" [];
	"pandas.io.pickle" -> "warnings" [];
	"pandas.io.pickle" -> "pandas" [];
	"pandas.compat.pickle_compat" -> "__future__" [];
	"pandas.compat.pickle_compat" -> "contextlib" [];
	"pandas.compat.pickle_compat" -> "copy" [];
	"pandas.compat.pickle_compat" -> "io" [];
	"pandas.compat.pickle_compat" -> "pickle" [];
	"pandas.compat.pickle_compat" -> "typing" [];
	"pandas.compat.pickle_compat" -> "numpy" [];
	"pandas.compat.pickle_compat" -> "pandas" [];
	"pandas.io.sql" -> "__future__" [];
	"pandas.io.sql" -> "abc" [];
	"pandas.io.sql" -> "contextlib" [];
	"pandas.io.sql" -> "datetime" [];
	"pandas.io.sql" -> "functools" [];
	"pandas.io.sql" -> "re" [];
	"pandas.io.sql" -> "typing" [];
	"pandas.io.sql" -> "warnings" [];
	"pandas.io.sql" -> "numpy" [];
	"pandas.io.sql" -> "pandas" [];
	"pandas.io.sql" -> "sqlalchemy" [];
	"pandas.io.sql" -> "sqlite3" [];
	"pandas.io.sql" -> "pyarrow" [];
	"pandas.io.pytables" -> "__future__" [];
	"pandas.io.pytables" -> "contextlib" [];
	"pandas.io.pytables" -> "copy" [];
	"pandas.io.pytables" -> "datetime" [];
	"pandas.io.pytables" -> "itertools" [];
	"pandas.io.pytables" -> "os" [];
	"pandas.io.pytables" -> "re" [];
	"pandas.io.pytables" -> "textwrap" [];
	"pandas.io.pytables" -> "typing" [];
	"pandas.io.pytables" -> "warnings" [];
	"pandas.io.pytables" -> "numpy" [];
	"pandas.io.pytables" -> "pandas" [];
	"pandas.io.pytables" -> "types" [];
	"pandas.io.pytables" -> "tables" [];
	"pandas.core.computation.pytables" -> "__future__" [];
	"pandas.core.computation.pytables" -> "ast" [];
	"pandas.core.computation.pytables" -> "decimal" [];
	"pandas.core.computation.pytables" -> "functools" [];
	"pandas.core.computation.pytables" -> "typing" [];
	"pandas.core.computation.pytables" -> "numpy" [];
	"pandas.io.json._table_schema" -> "__future__" [];
	"pandas.io.json._table_schema" -> "typing" [];
	"pandas.io.json._table_schema" -> "warnings" [];
	"pandas.io.json._table_schema" -> "pandas" [];
	"pandas.io.json._json" -> "__future__" [];
	"pandas.io.json._json" -> "abc" [];
	"pandas.io.json._json" -> "collections" [];
	"pandas.io.json._json" -> "io" [];
	"pandas.io.json._json" -> "itertools" [];
	"pandas.io.json._json" -> "typing" [];
	"pandas.io.json._json" -> "warnings" [];
	"pandas.io.json._json" -> "numpy" [];
	"pandas.io.json._json" -> "pandas" [];
	"pandas.io.json._json" -> "types" [];
	"pandas.core.methods.describe" -> "__future__" [];
	"pandas.core.methods.describe" -> "abc" [];
	"pandas.core.methods.describe" -> "typing" [];
	"pandas.core.methods.describe" -> "numpy" [];
	"pandas.core.methods.describe" -> "pandas" [];
	"pandas.core.methods.describe" -> "pyarrow" [];
	"pandas.core.flags" -> "__future__" [];
	"pandas.core.flags" -> "typing" [];
	"pandas.core.flags" -> "weakref" [];
	"pandas.core.frame" -> "__future__" [];
	"pandas.core.frame" -> "collections" [];
	"pandas.core.frame" -> "functools" [];
	"pandas.core.frame" -> "inspect" [];
	"pandas.core.frame" -> "io" [];
	"pandas.core.frame" -> "itertools" [];
	"pandas.core.frame" -> "operator" [];
	"pandas.core.frame" -> "sys" [];
	"pandas.core.frame" -> "textwrap" [];
	"pandas.core.frame" -> "typing" [];
	"pandas.core.frame" -> "warnings" [];
	"pandas.core.frame" -> "numpy" [];
	"pandas.core.frame" -> "datetime" [];
	"pandas.core.frame" -> "pandas" [];
	"pandas.core.reshape.pivot" -> "__future__" [];
	"pandas.core.reshape.pivot" -> "typing" [];
	"pandas.core.reshape.pivot" -> "warnings" [];
	"pandas.core.reshape.pivot" -> "numpy" [];
	"pandas.core.reshape.pivot" -> "pandas" [];
	"pandas.io.formats.xml" -> "__future__" [];
	"pandas.io.formats.xml" -> "codecs" [];
	"pandas.io.formats.xml" -> "io" [];
	"pandas.io.formats.xml" -> "typing" [];
	"pandas.io.formats.xml" -> "warnings" [];
	"pandas.io.formats.xml" -> "pandas" [];
	"pandas.io.formats.xml" -> "'lxml.etree'" [];
	"pandas.io.xml" -> "__future__" [];
	"pandas.io.xml" -> "io" [];
	"pandas.io.xml" -> "os" [];
	"pandas.io.xml" -> "typing" [];
	"pandas.io.xml" -> "warnings" [];
	"pandas.io.xml" -> "lxml" [];
	"pandas.io.xml" -> "pandas" [];
	"pandas.io.xml" -> "'lxml.etree'" [];
	"pandas.io.orc" -> "__future__" [];
	"pandas.io.orc" -> "io" [];
	"pandas.io.orc" -> "types" [];
	"pandas.io.orc" -> "typing" [];
	"pandas.io.orc" -> "pandas" [];
	"pandas.io.orc" -> "fsspec" [];
	"pandas.io.parquet" -> "__future__" [];
	"pandas.io.parquet" -> "io" [];
	"pandas.io.parquet" -> "json" [];
	"pandas.io.parquet" -> "os" [];
	"pandas.io.parquet" -> "typing" [];
	"pandas.io.parquet" -> "warnings" [];
	"pandas.io.parquet" -> "pandas" [];
	"pandas.io.feather_format" -> "__future__" [];
	"pandas.io.feather_format" -> "typing" [];
	"pandas.io.feather_format" -> "pandas" [];
	"pandas.io.feather_format" -> "pyarrow" [];
	"pandas.io.stata" -> "__future__" [];
	"pandas.io.stata" -> "collections" [];
	"pandas.io.stata" -> "datetime" [];
	"pandas.io.stata" -> "io" [];
	"pandas.io.stata" -> "os" [];
	"pandas.io.stata" -> "struct" [];
	"pandas.io.stata" -> "sys" [];
	"pandas.io.stata" -> "typing" [];
	"pandas.io.stata" -> "warnings" [];
	"pandas.io.stata" -> "numpy" [];
	"pandas.io.stata" -> "pandas" [];
	"pandas.io.stata" -> "types" [];
	"pandas.io.gbq" -> "__future__" [];
	"pandas.io.gbq" -> "typing" [];
	"pandas.io.gbq" -> "warnings" [];
	"pandas.io.gbq" -> "pandas" [];
	"google.auth.credentials" -> "abc" [];
	"google.auth.credentials" -> "enum" [];
	"google.auth.credentials" -> "os" [];
	"google.auth._refresh_worker" -> "copy" [];
	"google.auth._refresh_worker" -> "logging" [];
	"google.auth._refresh_worker" -> "threading" [];
	"google.auth._credentials_base" -> "abc" [];
	"google.auth.metrics" -> "platform" [];
	"google.auth._helpers" -> "base64" [];
	"google.auth._helpers" -> "calendar" [];
	"google.auth._helpers" -> "datetime" [];
	"google.auth._helpers" -> "hashlib" [];
	"google.auth._helpers" -> "json" [];
	"google.auth._helpers" -> "logging" [];
	"google.auth._helpers" -> "sys" [];
	"google.auth._helpers" -> "typing" [];
	"google.auth._helpers" -> "urllib" [];
	"google.auth" -> "logging" [];
	"google.auth" -> "sys" [];
	"google.auth" -> "warnings" [];
	"google.auth._default" -> "io" [];
	"google.auth._default" -> "json" [];
	"google.auth._default" -> "logging" [];
	"google.auth._default" -> "os" [];
	"google.auth._default" -> "warnings" [];
	"google.oauth2.gdch_credentials" -> "datetime" [];
	"google.oauth2._client" -> "datetime" [];
	"google.oauth2._client" -> "json" [];
	"google.oauth2._client" -> "urllib" [];
	"google.auth.transport" -> "abc" [];
	"google.auth.transport._mtls_helper" -> "json" [];
	"google.auth.transport._mtls_helper" -> "logging" [];
	"google.auth.transport._mtls_helper" -> "os" [];
	"google.auth.transport._mtls_helper" -> "re" [];
	"google.auth.transport._mtls_helper" -> "subprocess" [];
	"google.auth.transport._mtls_helper" -> "OpenSSL" [];
	"google.auth.transport._custom_tls_signer" -> "ctypes" [];
	"google.auth.transport._custom_tls_signer" -> "json" [];
	"google.auth.transport._custom_tls_signer" -> "logging" [];
	"google.auth.transport._custom_tls_signer" -> "os" [];
	"google.auth.transport._custom_tls_signer" -> "sys" [];
	"google.auth.transport._custom_tls_signer" -> "cffi" [];
	"google.auth.transport._custom_tls_signer" -> "'cryptography.hazmat'" [];
	"google.auth._exponential_backoff" -> "asyncio" [];
	"google.auth._exponential_backoff" -> "random" [];
	"google.auth._exponential_backoff" -> "time" [];
	"google.oauth2.service_account" -> "copy" [];
	"google.oauth2.service_account" -> "datetime" [];
	"google.oauth2.credentials" -> "datetime" [];
	"google.oauth2.credentials" -> "io" [];
	"google.oauth2.credentials" -> "json" [];
	"google.oauth2.credentials" -> "logging" [];
	"google.oauth2.credentials" -> "warnings" [];
	"google.oauth2.reauth" -> "sys" [];
	"google.oauth2.challenges" -> "abc" [];
	"google.oauth2.challenges" -> "base64" [];
	"google.oauth2.challenges" -> "getpass" [];
	"google.oauth2.challenges" -> "sys" [];
	"google.oauth2.challenges" -> "pyu2f" [];
	"google.oauth2.challenges" -> "'pyu2f.errors'" [];
	"google.oauth2.challenges" -> "'pyu2f.model'" [];
	"google.oauth2.webauthn_types" -> "dataclasses" [];
	"google.oauth2.webauthn_types" -> "json" [];
	"google.oauth2.webauthn_types" -> "typing" [];
	"google.oauth2.webauthn_handler_factory" -> "typing" [];
	"google.oauth2.webauthn_handler" -> "abc" [];
	"google.oauth2.webauthn_handler" -> "os" [];
	"google.oauth2.webauthn_handler" -> "struct" [];
	"google.oauth2.webauthn_handler" -> "subprocess" [];
	"google.oauth2" -> "sys" [];
	"google.oauth2" -> "warnings" [];
	"google.oauth2.sts" -> "json" [];
	"google.oauth2.sts" -> "urllib" [];
	"google.oauth2.utils" -> "abc" [];
	"google.oauth2.utils" -> "base64" [];
	"google.oauth2.utils" -> "enum" [];
	"google.oauth2.utils" -> "json" [];
	"google.auth.transport.requests" -> "__future__" [];
	"google.auth.transport.requests" -> "functools" [];
	"google.auth.transport.requests" -> "logging" [];
	"google.auth.transport.requests" -> "numbers" [];
	"google.auth.transport.requests" -> "os" [];
	"google.auth.transport.requests" -> "time" [];
	"google.auth.transport.requests" -> "requests" [];
	"google.auth.transport.requests" -> "'requests.packages.urllib3'" [];
	"google.auth.transport.requests" -> "certifi" [];
	"google.auth.transport.requests" -> "OpenSSL" [];
	"google.auth.compute_engine._metadata" -> "datetime" [];
	"google.auth.compute_engine._metadata" -> "json" [];
	"google.auth.compute_engine._metadata" -> "logging" [];
	"google.auth.compute_engine._metadata" -> "os" [];
	"google.auth.app_engine" -> "datetime" [];
	"google.auth.app_engine" -> "'google.appengine'" [];
	"google.auth.transport._http_client" -> "logging" [];
	"google.auth.transport._http_client" -> "socket" [];
	"google.auth.transport._http_client" -> "urllib" [];
	"google.auth.identity_pool" -> "collections" [];
	"google.auth.identity_pool" -> "abc" [];
	"google.auth.identity_pool" -> "base64" [];
	"google.auth.identity_pool" -> "json" [];
	"google.auth.identity_pool" -> "os" [];
	"google.auth.identity_pool" -> "typing" [];
	"google.auth.identity_pool" -> "OpenSSL" [];
	"google.auth.pluggable" -> "collections" [];
	"google.auth.pluggable" -> "json" [];
	"google.auth.pluggable" -> "os" [];
	"google.auth.pluggable" -> "subprocess" [];
	"google.auth.pluggable" -> "sys" [];
	"google.auth.pluggable" -> "time" [];
	"google.auth.aws" -> "abc" [];
	"google.auth.aws" -> "dataclasses" [];
	"google.auth.aws" -> "hashlib" [];
	"google.auth.aws" -> "hmac" [];
	"google.auth.aws" -> "json" [];
	"google.auth.aws" -> "os" [];
	"google.auth.aws" -> "posixpath" [];
	"google.auth.aws" -> "re" [];
	"google.auth.aws" -> "typing" [];
	"google.auth.aws" -> "urllib" [];
	"google.auth.external_account" -> "abc" [];
	"google.auth.external_account" -> "copy" [];
	"google.auth.external_account" -> "dataclasses" [];
	"google.auth.external_account" -> "datetime" [];
	"google.auth.external_account" -> "functools" [];
	"google.auth.external_account" -> "io" [];
	"google.auth.external_account" -> "json" [];
	"google.auth.external_account" -> "re" [];
	"google.auth.impersonated_credentials" -> "base64" [];
	"google.auth.impersonated_credentials" -> "copy" [];
	"google.auth.impersonated_credentials" -> "datetime" [];
	"google.auth.impersonated_credentials" -> "json" [];
	"google.auth.external_account_authorized_user" -> "datetime" [];
	"google.auth.external_account_authorized_user" -> "io" [];
	"google.auth.external_account_authorized_user" -> "json" [];
	"google.auth.compute_engine.credentials" -> "datetime" [];
	"google.auth.jwt" -> "collections" [];
	"google.auth.jwt" -> "copy" [];
	"google.auth.jwt" -> "datetime" [];
	"google.auth.jwt" -> "json" [];
	"google.auth.jwt" -> "urllib" [];
	"google.auth.jwt" -> "cachetools" [];
	"google.auth.crypt.es256" -> "cryptography" [];
	"google.auth.crypt.es256" -> "'cryptography.exceptions'" [];
	"google.auth.crypt.es256" -> "'cryptography.hazmat'" [];
	"google.auth.crypt.es256" -> "'cryptography.x509'" [];
	"google.auth.crypt.base" -> "abc" [];
	"google.auth.crypt.base" -> "io" [];
	"google.auth.crypt.base" -> "json" [];
	"cachetools" -> "collections" [];
	"cachetools" -> "functools" [];
	"cachetools" -> "heapq" [];
	"cachetools" -> "random" [];
	"cachetools" -> "time" [];
	"cachetools" -> "warnings" [];
	"google.auth._service_account_info" -> "io" [];
	"google.auth._service_account_info" -> "json" [];
	"google.auth.iam" -> "base64" [];
	"google.auth.iam" -> "json" [];
	"google.auth.crypt._python_rsa" -> "__future__" [];
	"google.auth.crypt._python_rsa" -> "io" [];
	"google.auth.crypt._python_rsa" -> "pyasn1_modules" [];
	"google.auth.crypt._python_rsa" -> "rsa" [];
	"rsa" -> "doctest" [];
	"rsa.pkcs1" -> "hashlib" [];
	"rsa.pkcs1" -> "os" [];
	"rsa.pkcs1" -> "sys" [];
	"rsa.pkcs1" -> "typing" [];
	"rsa.pkcs1" -> "hmac" [];
	"rsa.pkcs1" -> "doctest" [];
	"rsa.common" -> "typing" [];
	"rsa.common" -> "doctest" [];
	"rsa.key" -> "threading" [];
	"rsa.key" -> "typing" [];
	"rsa.key" -> "warnings" [];
	"rsa.key" -> "doctest" [];
	"pyasn1.type.namedtype" -> "sys" [];
	"pyasn1.type.namedtype" -> "pyasn1" [];
	"pyasn1.type.tagmap" -> "pyasn1" [];
	"pyasn1.type.tag" -> "pyasn1" [];
	"pyasn1.debug" -> "logging" [];
	"pyasn1.debug" -> "sys" [];
	"pyasn1.type.univ" -> "math" [];
	"pyasn1.type.univ" -> "sys" [];
	"pyasn1.type.univ" -> "pyasn1" [];
	"pyasn1.type.namedval" -> "pyasn1" [];
	"pyasn1.type.constraint" -> "sys" [];
	"pyasn1.type.base" -> "sys" [];
	"pyasn1.type.base" -> "pyasn1" [];
	"pyasn1.codec.ber.encoder" -> "sys" [];
	"pyasn1.codec.ber.encoder" -> "warnings" [];
	"pyasn1.codec.ber.encoder" -> "pyasn1" [];
	"pyasn1.type.useful" -> "datetime" [];
	"pyasn1.type.useful" -> "pyasn1" [];
	"pyasn1.type.char" -> "sys" [];
	"pyasn1.type.char" -> "pyasn1" [];
	"pyasn1.codec.ber.decoder" -> "io" [];
	"pyasn1.codec.ber.decoder" -> "os" [];
	"pyasn1.codec.ber.decoder" -> "sys" [];
	"pyasn1.codec.ber.decoder" -> "warnings" [];
	"pyasn1.codec.ber.decoder" -> "pyasn1" [];
	"pyasn1.codec.streaming" -> "io" [];
	"pyasn1.codec.streaming" -> "os" [];
	"pyasn1.codec.streaming" -> "pyasn1" [];
	"pyasn1.codec.der.encoder" -> "warnings" [];
	"pyasn1.codec.der.encoder" -> "pyasn1" [];
	"pyasn1.codec.cer.encoder" -> "warnings" [];
	"pyasn1.codec.cer.encoder" -> "pyasn1" [];
	"pyasn1.codec.cer.decoder" -> "warnings" [];
	"pyasn1.codec.cer.decoder" -> "pyasn1" [];
	"rsa.randnum" -> "os" [];
	"rsa.randnum" -> "struct" [];
	"rsa.pem" -> "base64" [];
	"rsa.pem" -> "typing" [];
	"rsa.prime" -> "doctest" [];
	"rsa.parallel" -> "multiprocessing" [];
	"rsa.parallel" -> "doctest" [];
	"rsa.transform" -> "math" [];
	"rsa.transform" -> "doctest" [];
	"pyasn1_modules.pem" -> "base64" [];
	"pyasn1.codec.der.decoder" -> "warnings" [];
	"google.auth.crypt._cryptography_rsa" -> "'cryptography.exceptions'" [];
	"google.auth.crypt._cryptography_rsa" -> "'cryptography.hazmat'" [];
	"google.auth.crypt._cryptography_rsa" -> "'cryptography.x509'" [];
	"google.auth._cloud_sdk" -> "os" [];
	"google.auth._cloud_sdk" -> "subprocess" [];
	"pandas.core.methods.to_dict" -> "__future__" [];
	"pandas.core.methods.to_dict" -> "typing" [];
	"pandas.core.methods.to_dict" -> "warnings" [];
	"pandas.core.methods.to_dict" -> "numpy" [];
	"pandas.core.methods.to_dict" -> "pandas" [];
	"pandas.core.interchange.dataframe" -> "__future__" [];
	"pandas.core.interchange.dataframe" -> "collections" [];
	"pandas.core.interchange.dataframe" -> "typing" [];
	"pandas.core.interchange.dataframe" -> "pandas" [];
	"pandas.core.interchange.utils" -> "__future__" [];
	"pandas.core.interchange.utils" -> "typing" [];
	"pandas.core.interchange.utils" -> "numpy" [];
	"pandas.core.interchange.utils" -> "pandas" [];
	"pandas.core.interchange.utils" -> "pyarrow" [];
	"pandas.core.interchange.column" -> "__future__" [];
	"pandas.core.interchange.column" -> "typing" [];
	"pandas.core.interchange.column" -> "numpy" [];
	"pandas.core.interchange.column" -> "pandas" [];
	"pandas.core.interchange.buffer" -> "__future__" [];
	"pandas.core.interchange.buffer" -> "typing" [];
	"pandas.core.interchange.buffer" -> "numpy" [];
	"pandas.core.interchange.buffer" -> "pyarrow" [];
	"pandas.core.interchange.dataframe_protocol" -> "__future__" [];
	"pandas.core.interchange.dataframe_protocol" -> "abc" [];
	"pandas.core.interchange.dataframe_protocol" -> "enum" [];
	"pandas.core.interchange.dataframe_protocol" -> "typing" [];
	"pandas.core.reshape.melt" -> "__future__" [];
	"pandas.core.reshape.melt" -> "re" [];
	"pandas.core.reshape.melt" -> "typing" [];
	"pandas.core.reshape.melt" -> "numpy" [];
	"pandas.core.reshape.melt" -> "pandas" [];
	"pandas.core.arrays.base" -> "__future__" [];
	"pandas.core.arrays.base" -> "operator" [];
	"pandas.core.arrays.base" -> "typing" [];
	"pandas.core.arrays.base" -> "warnings" [];
	"pandas.core.arrays.base" -> "numpy" [];
	"pandas.core.arrays.base" -> "pandas" [];
	"pandas._libs.window.indexers" -> "numpy" [];
	"pandas._libs.window.aggregations" -> "typing" [];
	"pandas._libs.window.aggregations" -> "numpy" [];
	"pandas._libs.tslibs.vectorized" -> "datetime" [];
	"pandas._libs.tslibs.vectorized" -> "numpy" [];
	"pandas._libs.tslibs.tzconversion" -> "datetime" [];
	"pandas._libs.tslibs.tzconversion" -> "typing" [];
	"pandas._libs.tslibs.tzconversion" -> "numpy" [];
	"pandas._libs.tslibs.timezones" -> "datetime" [];
	"pandas._libs.tslibs.timezones" -> "typing" [];
	"pandas._libs.tslibs.timezones" -> "numpy" [];
	"pandas._libs.tslibs.timestamps" -> "datetime" [];
	"pandas._libs.tslibs.timestamps" -> "time" [];
	"pandas._libs.tslibs.timestamps" -> "typing" [];
	"pandas._libs.tslibs.timestamps" -> "numpy" [];
	"pandas._libs.tslibs.timedeltas" -> "datetime" [];
	"pandas._libs.tslibs.timedeltas" -> "typing" [];
	"pandas._libs.tslibs.timedeltas" -> "numpy" [];
	"pandas._libs.tslibs.strptime" -> "numpy" [];
	"pandas._libs.tslibs.period" -> "datetime" [];
	"pandas._libs.tslibs.period" -> "typing" [];
	"pandas._libs.tslibs.period" -> "numpy" [];
	"pandas._libs.tslibs.parsing" -> "datetime" [];
	"pandas._libs.tslibs.parsing" -> "numpy" [];
	"pandas._libs.tslibs.offsets" -> "datetime" [];
	"pandas._libs.tslibs.offsets" -> "typing" [];
	"pandas._libs.tslibs.offsets" -> "numpy" [];
	"pandas._libs.tslibs.np_datetime" -> "numpy" [];
	"pandas._libs.tslibs.nattype" -> "datetime" [];
	"pandas._libs.tslibs.nattype" -> "typing" [];
	"pandas._libs.tslibs.nattype" -> "numpy" [];
	"pandas._libs.tslibs.fields" -> "numpy" [];
	"pandas._libs.tslibs.dtypes" -> "enum" [];
	"pandas._libs.tslibs.conversion" -> "datetime" [];
	"pandas._libs.tslibs.conversion" -> "numpy" [];
	"pandas._libs.tslib" -> "datetime" [];
	"pandas._libs.tslib" -> "numpy" [];
	"pandas._libs.sparse" -> "typing" [];
	"pandas._libs.sparse" -> "numpy" [];
	"pandas.io.sas.sas7bdat" -> "__future__" [];
	"pandas.io.sas.sas7bdat" -> "collections" [];
	"pandas.io.sas.sas7bdat" -> "datetime" [];
	"pandas.io.sas.sas7bdat" -> "sys" [];
	"pandas.io.sas.sas7bdat" -> "typing" [];
	"pandas.io.sas.sas7bdat" -> "numpy" [];
	"pandas.io.sas.sas7bdat" -> "pandas" [];
	"pandas.io.sas.sasreader" -> "__future__" [];
	"pandas.io.sas.sasreader" -> "abc" [];
	"pandas.io.sas.sasreader" -> "typing" [];
	"pandas.io.sas.sasreader" -> "types" [];
	"pandas.io.sas.sasreader" -> "pandas" [];
	"pandas.io.sas.sas_xport" -> "__future__" [];
	"pandas.io.sas.sas_xport" -> "collections" [];
	"pandas.io.sas.sas_xport" -> "datetime" [];
	"pandas.io.sas.sas_xport" -> "struct" [];
	"pandas.io.sas.sas_xport" -> "typing" [];
	"pandas.io.sas.sas_xport" -> "warnings" [];
	"pandas.io.sas.sas_xport" -> "numpy" [];
	"pandas.io.sas.sas_xport" -> "pandas" [];
	"pandas.io.sas.sas_constants" -> "__future__" [];
	"pandas.io.sas.sas_constants" -> "typing" [];
	"pandas._libs.reshape" -> "numpy" [];
	"pandas._libs.properties" -> "typing" [];
	"pandas._libs.parsers" -> "typing" [];
	"pandas._libs.parsers" -> "numpy" [];
	"pandas._libs.ops_dispatch" -> "numpy" [];
	"pandas._libs.ops" -> "typing" [];
	"pandas._libs.ops" -> "numpy" [];
	"pandas._libs.missing" -> "numpy" [];
	"pandas._libs.lib" -> "decimal" [];
	"pandas._libs.lib" -> "typing" [];
	"pandas._libs.lib" -> "numpy" [];
	"pandas._libs.lib" -> "enum" [];
	"pandas._libs.json" -> "typing" [];
	"pandas._libs.join" -> "numpy" [];
	"pandas._libs.interval" -> "typing" [];
	"pandas._libs.interval" -> "numpy" [];
	"pandas._libs.internals" -> "typing" [];
	"pandas._libs.internals" -> "weakref" [];
	"pandas._libs.internals" -> "numpy" [];
	"pandas._libs.internals" -> "pandas" [];
	"pandas._libs.indexing" -> "typing" [];
	"pandas._libs.index" -> "numpy" [];
	"pandas._libs.index" -> "pandas" [];
	"pandas._libs.hashtable" -> "typing" [];
	"pandas._libs.hashtable" -> "numpy" [];
	"pandas._libs.hashing" -> "numpy" [];
	"pandas._libs.groupby" -> "typing" [];
	"pandas._libs.groupby" -> "numpy" [];
	"pandas._libs.arrays" -> "typing" [];
	"pandas._libs.arrays" -> "numpy" [];
	"pandas._libs.algos" -> "typing" [];
	"pandas._libs.algos" -> "numpy" [];
	"pandas._version" -> "errno" [];
	"pandas._version" -> "functools" [];
	"pandas._version" -> "os" [];
	"pandas._version" -> "re" [];
	"pandas._version" -> "subprocess" [];
	"pandas._version" -> "sys" [];
	"pandas._version" -> "typing" [];
	"pandas.util._tester" -> "__future__" [];
	"pandas.util._tester" -> "os" [];
	"pandas.util._tester" -> "sys" [];
	"pandas.io.json._normalize" -> "__future__" [];
	"pandas.io.json._normalize" -> "collections" [];
	"pandas.io.json._normalize" -> "copy" [];
	"pandas.io.json._normalize" -> "typing" [];
	"pandas.io.json._normalize" -> "numpy" [];
	"pandas.io.json._normalize" -> "pandas" [];
	"pandas.io.spss" -> "__future__" [];
	"pandas.io.spss" -> "typing" [];
	"pandas.io.spss" -> "pathlib" [];
	"pandas.io.spss" -> "pandas" [];
	"pandas.io.html" -> "__future__" [];
	"pandas.io.html" -> "collections" [];
	"pandas.io.html" -> "numbers" [];
	"pandas.io.html" -> "re" [];
	"pandas.io.html" -> "typing" [];
	"pandas.io.html" -> "warnings" [];
	"pandas.io.html" -> "pandas" [];
	"pandas.io.html" -> "bs4" [];
	"pandas.io.html" -> "'lxml.etree'" [];
	"pandas.io.html" -> "'lxml.html'" [];
	"bs4" -> "collections" [];
	"bs4" -> "sys" [];
	"bs4" -> "warnings" [];
	"bs4" -> "typing" [];
	"bs4.exceptions" -> "typing" [];
	"bs4._typing" -> "typing_extensions" [];
	"bs4._typing" -> "typing" [];
	"bs4.filter" -> "__future__" [];
	"bs4.filter" -> "collections" [];
	"bs4.filter" -> "re" [];
	"bs4.filter" -> "typing" [];
	"bs4.filter" -> "warnings" [];
	"bs4.formatter" -> "__future__" [];
	"bs4.formatter" -> "typing" [];
	"bs4.formatter" -> "typing_extensions" [];
	"bs4.element" -> "__future__" [];
	"bs4.element" -> "re" [];
	"bs4.element" -> "warnings" [];
	"bs4.element" -> "typing" [];
	"bs4.element" -> "typing_extensions" [];
	"bs4._deprecation" -> "functools" [];
	"bs4._deprecation" -> "warnings" [];
	"bs4._deprecation" -> "typing" [];
	"bs4.css" -> "__future__" [];
	"bs4.css" -> "types" [];
	"bs4.css" -> "typing" [];
	"bs4.css" -> "warnings" [];
	"bs4.css" -> "soupsieve" [];
	"soupsieve" -> "__future__" [];
	"soupsieve" -> "bs4" [];
	"soupsieve" -> "typing" [];
	"soupsieve.css_parser" -> "__future__" [];
	"soupsieve.css_parser" -> "re" [];
	"soupsieve.css_parser" -> "functools" [];
	"soupsieve.css_parser" -> "warnings" [];
	"soupsieve.css_parser" -> "typing" [];
	"soupsieve.css_match" -> "__future__" [];
	"soupsieve.css_match" -> "datetime" [];
	"soupsieve.css_match" -> "re" [];
	"soupsieve.css_match" -> "unicodedata" [];
	"soupsieve.css_match" -> "bs4" [];
	"soupsieve.css_match" -> "typing" [];
	"soupsieve.css_types" -> "__future__" [];
	"soupsieve.css_types" -> "copyreg" [];
	"soupsieve.css_types" -> "typing" [];
	"soupsieve.pretty" -> "__future__" [];
	"soupsieve.pretty" -> "re" [];
	"soupsieve.pretty" -> "typing" [];
	"soupsieve.util" -> "__future__" [];
	"soupsieve.util" -> "functools" [];
	"soupsieve.util" -> "warnings" [];
	"soupsieve.util" -> "re" [];
	"soupsieve.util" -> "typing" [];
	"soupsieve.__meta__" -> "__future__" [];
	"soupsieve.__meta__" -> "collections" [];
	"soupsieve.__meta__" -> "re" [];
	"bs4.dammit" -> "collections" [];
	"bs4.dammit" -> "codecs" [];
	"bs4.dammit" -> "re" [];
	"bs4.dammit" -> "logging" [];
	"bs4.dammit" -> "types" [];
	"bs4.dammit" -> "typing" [];
	"bs4.dammit" -> "typing_extensions" [];
	"bs4.dammit" -> "warnings" [];
	"bs4.dammit" -> "cchardet" [];
	"bs4.dammit" -> "chardet" [];
	"bs4.dammit" -> "charset_normalizer" [];
	"bs4.builder._htmlparser" -> "__future__" [];
	"bs4.builder._htmlparser" -> "typing" [];
	"bs4.builder._htmlparser" -> "bs4" [];
	"html.parser" -> "re" [];
	"html.parser" -> "_markupbase" [];
	"_markupbase" -> "re" [];
	"bs4.builder" -> "__future__" [];
	"bs4.builder" -> "collections" [];
	"bs4.builder" -> "re" [];
	"bs4.builder" -> "types" [];
	"bs4.builder" -> "typing" [];
	"bs4.builder" -> "warnings" [];
	"bs4.builder" -> "sys" [];
	"bs4.builder._lxml" -> "__future__" [];
	"bs4.builder._lxml" -> "typing" [];
	"bs4.builder._lxml" -> "typing_extensions" [];
	"bs4.builder._lxml" -> "io" [];
	"bs4.builder._lxml" -> "lxml" [];
	"bs4.builder._lxml" -> "bs4" [];
	"bs4.builder._html5lib" -> "typing" [];
	"bs4.builder._html5lib" -> "typing_extensions" [];
	"bs4.builder._html5lib" -> "warnings" [];
	"bs4.builder._html5lib" -> "html5lib" [];
	"bs4.builder._html5lib" -> "'html5lib.constants'" [];
	"bs4.builder._html5lib" -> "bs4" [];
	"bs4.builder._html5lib" -> "'html5lib.treebuilders'" [];
	"pandas.util._print_versions" -> "__future__" [];
	"pandas.util._print_versions" -> "codecs" [];
	"pandas.util._print_versions" -> "json" [];
	"pandas.util._print_versions" -> "locale" [];
	"pandas.util._print_versions" -> "os" [];
	"pandas.util._print_versions" -> "platform" [];
	"pandas.util._print_versions" -> "struct" [];
	"pandas.util._print_versions" -> "sys" [];
	"pandas.util._print_versions" -> "typing" [];
	"pandas._testing" -> "__future__" [];
	"pandas._testing" -> "decimal" [];
	"pandas._testing" -> "operator" [];
	"pandas._testing" -> "os" [];
	"pandas._testing" -> "sys" [];
	"pandas._testing" -> "typing" [];
	"pandas._testing" -> "warnings" [];
	"pandas._testing" -> "numpy" [];
	"pandas._testing" -> "pyarrow" [];
	"pandas._testing" -> "pytest" [];
	"pandas._testing.contexts" -> "__future__" [];
	"pandas._testing.contexts" -> "contextlib" [];
	"pandas._testing.contexts" -> "os" [];
	"pandas._testing.contexts" -> "pathlib" [];
	"pandas._testing.contexts" -> "tempfile" [];
	"pandas._testing.contexts" -> "typing" [];
	"pandas._testing.contexts" -> "uuid" [];
	"pandas._testing.contexts" -> "pandas" [];
	"pandas._testing.contexts" -> "time" [];
	"pandas._testing.contexts" -> "csv" [];
	"pandas._testing.compat" -> "__future__" [];
	"pandas._testing.compat" -> "typing" [];
	"pandas._testing.compat" -> "pandas" [];
	"pandas._testing.asserters" -> "__future__" [];
	"pandas._testing.asserters" -> "operator" [];
	"pandas._testing.asserters" -> "typing" [];
	"pandas._testing.asserters" -> "numpy" [];
	"pandas._testing.asserters" -> "pandas" [];
	"pandas._testing.asserters" -> "'matplotlib.artist'" [];
	"pandas._testing.asserters" -> "'matplotlib.axes'" [];
	"pandas._testing._warnings" -> "__future__" [];
	"pandas._testing._warnings" -> "contextlib" [];
	"pandas._testing._warnings" -> "inspect" [];
	"pandas._testing._warnings" -> "re" [];
	"pandas._testing._warnings" -> "sys" [];
	"pandas._testing._warnings" -> "typing" [];
	"pandas._testing._warnings" -> "warnings" [];
	"pandas._testing._io" -> "__future__" [];
	"pandas._testing._io" -> "gzip" [];
	"pandas._testing._io" -> "io" [];
	"pandas._testing._io" -> "pathlib" [];
	"pandas._testing._io" -> "tarfile" [];
	"pandas._testing._io" -> "typing" [];
	"pandas._testing._io" -> "uuid" [];
	"pandas._testing._io" -> "zipfile" [];
	"pandas._testing._io" -> "pandas" [];
	"pandas._testing._io" -> "pytest" [];
	"pandas._config.localization" -> "__future__" [];
	"pandas._config.localization" -> "contextlib" [];
	"pandas._config.localization" -> "locale" [];
	"pandas._config.localization" -> "platform" [];
	"pandas._config.localization" -> "re" [];
	"pandas._config.localization" -> "subprocess" [];
	"pandas._config.localization" -> "typing" [];
	"pandas.plotting._misc" -> "__future__" [];
	"pandas.plotting._misc" -> "contextlib" [];
	"pandas.plotting._misc" -> "typing" [];
	"pandas.plotting._misc" -> "'matplotlib.axes'" [];
	"pandas.plotting._misc" -> "'matplotlib.colors'" [];
	"pandas.plotting._misc" -> "'matplotlib.figure'" [];
	"pandas.plotting._misc" -> "'matplotlib.table'" [];
	"pandas.plotting._misc" -> "numpy" [];
	"pandas.plotting._misc" -> "pandas" [];
	"pandas.plotting._core" -> "__future__" [];
	"pandas.plotting._core" -> "importlib" [];
	"pandas.plotting._core" -> "typing" [];
	"pandas.plotting._core" -> "types" [];
	"pandas.plotting._core" -> "'matplotlib.axes'" [];
	"pandas.plotting._core" -> "numpy" [];
	"pandas.plotting._core" -> "pandas" [];
	"pandas.io" -> "typing" [];
	"pandas.errors" -> "__future__" [];
	"pandas.errors" -> "ctypes" [];
	"pandas.arrays" -> "warnings" [];
	"pandas.core.interchange.from_dataframe" -> "__future__" [];
	"pandas.core.interchange.from_dataframe" -> "ctypes" [];
	"pandas.core.interchange.from_dataframe" -> "re" [];
	"pandas.core.interchange.from_dataframe" -> "typing" [];
	"pandas.core.interchange.from_dataframe" -> "numpy" [];
	"pandas.core.interchange.from_dataframe" -> "pandas" [];
	"pandas.core.reshape.encoding" -> "__future__" [];
	"pandas.core.reshape.encoding" -> "collections" [];
	"pandas.core.reshape.encoding" -> "itertools" [];
	"pandas.core.reshape.encoding" -> "typing" [];
	"pandas.core.reshape.encoding" -> "numpy" [];
	"pandas.core.reshape.encoding" -> "pyarrow" [];
	"pandas.tseries.offsets" -> "__future__" [];
	"pandas.tseries" -> "typing" [];
	"pandas.core.dtypes.dtypes" -> "__future__" [];
	"pandas.core.dtypes.dtypes" -> "datetime" [];
	"pandas.core.dtypes.dtypes" -> "decimal" [];
	"pandas.core.dtypes.dtypes" -> "re" [];
	"pandas.core.dtypes.dtypes" -> "typing" [];
	"pandas.core.dtypes.dtypes" -> "warnings" [];
	"pandas.core.dtypes.dtypes" -> "numpy" [];
	"pandas.core.dtypes.dtypes" -> "pytz" [];
	"pandas.core.dtypes.dtypes" -> "pyarrow" [];
	"pandas.core.dtypes.dtypes" -> "pandas" [];
	"pandas.core.config_init" -> "__future__" [];
	"pandas.core.config_init" -> "os" [];
	"pandas.core.config_init" -> "typing" [];
	"pandas._config.display" -> "__future__" [];
	"pandas._config.display" -> "locale" [];
	"pandas._config.display" -> "sys" [];
	"pandas._config.dates" -> "__future__" [];
	"pandas.compat" -> "__future__" [];
	"pandas.compat" -> "os" [];
	"pandas.compat" -> "platform" [];
	"pandas.compat" -> "sys" [];
	"pandas.compat" -> "typing" [];
	"pandas.compat.pyarrow" -> "__future__" [];
	"pandas.compat.pyarrow" -> "pyarrow" [];
	"pandas.compat.compressors" -> "__future__" [];
	"pandas.compat.compressors" -> "pickle" [];
	"pandas.compat.compressors" -> "bz2" [];
	"pandas.compat.compressors" -> "lzma" [];
	"langchain_community.vectorstores.tencentvectordb" -> "__future__" [];
	"langchain_community.vectorstores.tencentvectordb" -> "json" [];
	"langchain_community.vectorstores.tencentvectordb" -> "logging" [];
	"langchain_community.vectorstores.tencentvectordb" -> "time" [];
	"langchain_community.vectorstores.tencentvectordb" -> "enum" [];
	"langchain_community.vectorstores.tencentvectordb" -> "typing" [];
	"langchain_community.vectorstores.tencentvectordb" -> "numpy" [];
	"langchain_community.vectorstores.tencentvectordb" -> "pydantic" [];
	"langchain_core.structured_query" -> "__future__" [];
	"langchain_core.structured_query" -> "abc" [];
	"langchain_core.structured_query" -> "enum" [];
	"langchain_core.structured_query" -> "typing" [];
	"langchain_core.structured_query" -> "pydantic" [];
	"langchain.retrievers.self_query.tencentvectordb" -> "typing" [];
	"langchain.retrievers" -> "typing" [];
	"langchain_community.retrievers" -> "importlib" [];
	"langchain_community.retrievers" -> "typing" [];
	"langchain_community.retrievers.zilliz" -> "warnings" [];
	"langchain_community.retrievers.zilliz" -> "typing" [];
	"langchain_community.retrievers.zilliz" -> "pydantic" [];
	"langchain_core.retrievers" -> "__future__" [];
	"langchain_core.retrievers" -> "warnings" [];
	"langchain_core.retrievers" -> "abc" [];
	"langchain_core.retrievers" -> "inspect" [];
	"langchain_core.retrievers" -> "typing" [];
	"langchain_core.retrievers" -> "pydantic" [];
	"langchain_core.retrievers" -> "typing_extensions" [];
	"langchain_community.retrievers.zep_cloud" -> "__future__" [];
	"langchain_community.retrievers.zep_cloud" -> "typing" [];
	"langchain_community.retrievers.zep_cloud" -> "pydantic" [];
	"langchain_community.retrievers.zep_cloud" -> "zep_cloud" [];
	"langchain_community.retrievers.zep_cloud" -> "'zep_cloud.client'" [];
	"langchain_community.retrievers.zep" -> "__future__" [];
	"langchain_community.retrievers.zep" -> "enum" [];
	"langchain_community.retrievers.zep" -> "typing" [];
	"langchain_community.retrievers.zep" -> "pydantic" [];
	"langchain_community.retrievers.zep" -> "'zep_python.memory'" [];
	"langchain_community.retrievers.zep" -> "zep_python" [];
	"langchain_community.retrievers.you" -> "typing" [];
	"langchain_community.retrievers.wikipedia" -> "typing" [];
	"langchain_community.utilities.wikipedia" -> "logging" [];
	"langchain_community.utilities.wikipedia" -> "typing" [];
	"langchain_community.utilities.wikipedia" -> "pydantic" [];
	"langchain_community.utilities.wikipedia" -> "wikipedia" [];
	"langchain_community.retrievers.web_research" -> "logging" [];
	"langchain_community.retrievers.web_research" -> "re" [];
	"langchain_community.retrievers.web_research" -> "typing" [];
	"langchain_community.retrievers.web_research" -> "langchain_text_splitters" [];
	"langchain_community.retrievers.web_research" -> "pydantic" [];
	"langchain_community.document_transformers" -> "importlib" [];
	"langchain_community.document_transformers" -> "typing" [];
	"langchain_community.document_transformers.openai_functions" -> "typing" [];
	"langchain_community.document_transformers.openai_functions" -> "pydantic" [];
	"langchain.chains.structured_output.base" -> "json" [];
	"langchain.chains.structured_output.base" -> "typing" [];
	"langchain.chains.structured_output.base" -> "pydantic" [];
	"langchain_core.output_parsers.openai_tools" -> "copy" [];
	"langchain_core.output_parsers.openai_tools" -> "json" [];
	"langchain_core.output_parsers.openai_tools" -> "logging" [];
	"langchain_core.output_parsers.openai_tools" -> "typing" [];
	"langchain_core.output_parsers.openai_tools" -> "pydantic" [];
	"langchain_core.utils.json" -> "__future__" [];
	"langchain_core.utils.json" -> "json" [];
	"langchain_core.utils.json" -> "re" [];
	"langchain_core.utils.json" -> "typing" [];
	"langchain_core.output_parsers.transform" -> "__future__" [];
	"langchain_core.output_parsers.transform" -> "typing" [];
	"langchain_core.output_parsers.transform" -> "typing_extensions" [];
	"langchain_core.output_parsers.base" -> "__future__" [];
	"langchain_core.output_parsers.base" -> "contextlib" [];
	"langchain_core.output_parsers.base" -> "abc" [];
	"langchain_core.output_parsers.base" -> "typing" [];
	"langchain_core.output_parsers.base" -> "typing_extensions" [];
	"langchain_core.output_parsers.openai_functions" -> "copy" [];
	"langchain_core.output_parsers.openai_functions" -> "json" [];
	"langchain_core.output_parsers.openai_functions" -> "types" [];
	"langchain_core.output_parsers.openai_functions" -> "typing" [];
	"langchain_core.output_parsers.openai_functions" -> "jsonpatch" [];
	"langchain_core.output_parsers.openai_functions" -> "pydantic" [];
	"langchain_core.output_parsers.openai_functions" -> "typing_extensions" [];
	"langchain_core.output_parsers.json" -> "__future__" [];
	"langchain_core.output_parsers.json" -> "json" [];
	"langchain_core.output_parsers.json" -> "typing" [];
	"langchain_core.output_parsers.json" -> "jsonpatch" [];
	"langchain_core.output_parsers.json" -> "pydantic" [];
	"jsonpatch" -> "__future__" [];
	"jsonpatch" -> "collections" [];
	"jsonpatch" -> "copy" [];
	"jsonpatch" -> "functools" [];
	"jsonpatch" -> "json" [];
	"jsonpatch" -> "sys" [];
	"jsonpatch" -> "types" [];
	"jsonpatch" -> "jsonpointer" [];
	"langchain.chains.openai_functions.tagging" -> "typing" [];
	"langchain.chains.openai_functions.utils" -> "typing" [];
	"langchain.chains.llm" -> "__future__" [];
	"langchain.chains.llm" -> "warnings" [];
	"langchain.chains.llm" -> "typing" [];
	"langchain.chains.llm" -> "pydantic" [];
	"langchain.chains.base" -> "builtins" [];
	"langchain.chains.base" -> "inspect" [];
	"langchain.chains.base" -> "json" [];
	"langchain.chains.base" -> "logging" [];
	"langchain.chains.base" -> "warnings" [];
	"langchain.chains.base" -> "abc" [];
	"langchain.chains.base" -> "pathlib" [];
	"langchain.chains.base" -> "typing" [];
	"langchain.chains.base" -> "yaml" [];
	"langchain.chains.base" -> "pydantic" [];
	"langchain_core.stores" -> "abc" [];
	"langchain_core.stores" -> "typing" [];
	"langchain_core.chat_history" -> "__future__" [];
	"langchain_core.chat_history" -> "abc" [];
	"langchain_core.chat_history" -> "typing" [];
	"langchain_core.chat_history" -> "pydantic" [];
	"langchain_core.memory" -> "__future__" [];
	"langchain_core.memory" -> "abc" [];
	"langchain_core.memory" -> "typing" [];
	"langchain_core.memory" -> "pydantic" [];
	"langchain.chains.openai_functions.qa_with_structure" -> "typing" [];
	"langchain.chains.openai_functions.qa_with_structure" -> "pydantic" [];
	"langchain_core.prompts.chat" -> "__future__" [];
	"langchain_core.prompts.chat" -> "abc" [];
	"langchain_core.prompts.chat" -> "pathlib" [];
	"langchain_core.prompts.chat" -> "typing" [];
	"langchain_core.prompts.chat" -> "pydantic" [];
	"langchain_core.prompts.chat" -> "typing_extensions" [];
	"langchain_core.utils.interactive_env" -> "sys" [];
	"langchain_core.prompts.string" -> "__future__" [];
	"langchain_core.prompts.string" -> "warnings" [];
	"langchain_core.prompts.string" -> "abc" [];
	"langchain_core.prompts.string" -> "string" [];
	"langchain_core.prompts.string" -> "typing" [];
	"langchain_core.prompts.string" -> "pydantic" [];
	"langchain_core.prompts.string" -> "jinja2" [];
	"langchain_core.prompts.prompt" -> "__future__" [];
	"langchain_core.prompts.prompt" -> "warnings" [];
	"langchain_core.prompts.prompt" -> "pathlib" [];
	"langchain_core.prompts.prompt" -> "typing" [];
	"langchain_core.prompts.prompt" -> "pydantic" [];
	"langchain_core.prompts.prompt" -> "typing_extensions" [];
	"langchain_core.prompts.message" -> "__future__" [];
	"langchain_core.prompts.message" -> "abc" [];
	"langchain_core.prompts.message" -> "typing" [];
	"langchain_core.prompts.image" -> "typing" [];
	"langchain_core.prompts.image" -> "pydantic" [];
	"langchain_core.prompts.dict" -> "warnings" [];
	"langchain_core.prompts.dict" -> "functools" [];
	"langchain_core.prompts.dict" -> "typing" [];
	"langchain.chains.openai_functions.extraction" -> "typing" [];
	"langchain.chains.openai_functions.extraction" -> "pydantic" [];
	"langchain.chains.openai_functions.citation_fuzzy_match" -> "pydantic" [];
	"langchain.chains.openai_functions.citation_fuzzy_match" -> "regex" [];
	"regex" -> "warnings" [];
	"regex.regex" -> "threading" [];
	"regex.regex" -> "locale" [];
	"regex.regex" -> "copyreg" [];
	"regex._regex_core" -> "enum" [];
	"regex._regex_core" -> "string" [];
	"regex._regex_core" -> "unicodedata" [];
	"regex._regex_core" -> "collections" [];
	"regex._regex_core" -> "random" [];
	"langchain.chains.openai_functions.base" -> "typing" [];
	"langchain.chains.openai_functions.base" -> "pydantic" [];
	"langchain_core.utils.function_calling" -> "__future__" [];
	"langchain_core.utils.function_calling" -> "collections" [];
	"langchain_core.utils.function_calling" -> "inspect" [];
	"langchain_core.utils.function_calling" -> "logging" [];
	"langchain_core.utils.function_calling" -> "types" [];
	"langchain_core.utils.function_calling" -> "typing" [];
	"langchain_core.utils.function_calling" -> "uuid" [];
	"langchain_core.utils.function_calling" -> "pydantic" [];
	"langchain_core.utils.function_calling" -> "typing_extensions" [];
	"langchain_core.tools.simple" -> "__future__" [];
	"langchain_core.tools.simple" -> "inspect" [];
	"langchain_core.tools.simple" -> "typing" [];
	"langchain_core.tools.simple" -> "typing_extensions" [];
	"langchain_core.tools.base" -> "__future__" [];
	"langchain_core.tools.base" -> "functools" [];
	"langchain_core.tools.base" -> "inspect" [];
	"langchain_core.tools.base" -> "json" [];
	"langchain_core.tools.base" -> "warnings" [];
	"langchain_core.tools.base" -> "abc" [];
	"langchain_core.tools.base" -> "typing" [];
	"langchain_core.tools.base" -> "pydantic" [];
	"langchain_core.tools.base" -> "typing_extensions" [];
	"langchain_core.tools.base" -> "uuid" [];
	"langchain_core.utils.json_schema" -> "__future__" [];
	"langchain_core.utils.json_schema" -> "copy" [];
	"langchain_core.utils.json_schema" -> "typing" [];
	"langchain_community.document_transformers.nuclia_text_transform" -> "asyncio" [];
	"langchain_community.document_transformers.nuclia_text_transform" -> "json" [];
	"langchain_community.document_transformers.nuclia_text_transform" -> "uuid" [];
	"langchain_community.document_transformers.nuclia_text_transform" -> "typing" [];
	"langchain_community.tools.nuclia.tool" -> "asyncio" [];
	"langchain_community.tools.nuclia.tool" -> "base64" [];
	"langchain_community.tools.nuclia.tool" -> "logging" [];
	"langchain_community.tools.nuclia.tool" -> "mimetypes" [];
	"langchain_community.tools.nuclia.tool" -> "os" [];
	"langchain_community.tools.nuclia.tool" -> "typing" [];
	"langchain_community.tools.nuclia.tool" -> "requests" [];
	"langchain_community.tools.nuclia.tool" -> "pydantic" [];
	"langchain_community.tools.nuclia.tool" -> "nucliadb_protos" [];
	"langchain_community.tools" -> "importlib" [];
	"langchain_community.tools" -> "typing" [];
	"langchain_community.tools.zenguard.tool" -> "os" [];
	"langchain_community.tools.zenguard.tool" -> "enum" [];
	"langchain_community.tools.zenguard.tool" -> "typing" [];
	"langchain_community.tools.zenguard.tool" -> "requests" [];
	"langchain_community.tools.zenguard.tool" -> "pydantic" [];
	"langchain_community.tools.zapier.tool" -> "typing" [];
	"langchain_community.tools.zapier.tool" -> "pydantic" [];
	"langchain_community.utilities.zapier" -> "json" [];
	"langchain_community.utilities.zapier" -> "typing" [];
	"langchain_community.utilities.zapier" -> "aiohttp" [];
	"langchain_community.utilities.zapier" -> "requests" [];
	"langchain_community.utilities.zapier" -> "pydantic" [];
	"langchain_community.tools.youtube.search" -> "json" [];
	"langchain_community.tools.youtube.search" -> "typing" [];
	"langchain_community.tools.youtube.search" -> "youtube_search" [];
	"langchain_community.tools.you.tool" -> "typing" [];
	"langchain_community.tools.you.tool" -> "pydantic" [];
	"langchain_community.utilities.you" -> "warnings" [];
	"langchain_community.utilities.you" -> "typing" [];
	"langchain_community.utilities.you" -> "aiohttp" [];
	"langchain_community.utilities.you" -> "requests" [];
	"langchain_community.utilities.you" -> "pydantic" [];
	"langchain_community.utilities.you" -> "typing_extensions" [];
	"langchain_community.tools.yahoo_finance_news" -> "typing" [];
	"langchain_community.tools.yahoo_finance_news" -> "pydantic" [];
	"langchain_community.tools.yahoo_finance_news" -> "yfinance" [];
	"langchain_community.document_loaders.web_base" -> "asyncio" [];
	"langchain_community.document_loaders.web_base" -> "logging" [];
	"langchain_community.document_loaders.web_base" -> "warnings" [];
	"langchain_community.document_loaders.web_base" -> "typing" [];
	"langchain_community.document_loaders.web_base" -> "aiohttp" [];
	"langchain_community.document_loaders.web_base" -> "requests" [];
	"langchain_community.document_loaders.web_base" -> "fake_useragent" [];
	"langchain_community.document_loaders.web_base" -> "bs4" [];
	"tqdm.asyncio" -> "asyncio" [];
	"tqdm.asyncio" -> "sys" [];
	"langchain_community.utils.user_agent" -> "logging" [];
	"langchain_community.utils.user_agent" -> "os" [];
	"langchain_core.document_loaders" -> "typing" [];
	"langchain_core.document_loaders.langsmith" -> "datetime" [];
	"langchain_core.document_loaders.langsmith" -> "json" [];
	"langchain_core.document_loaders.langsmith" -> "uuid" [];
	"langchain_core.document_loaders.langsmith" -> "typing" [];
	"langchain_core.document_loaders.langsmith" -> "langsmith" [];
	"langchain_core.document_loaders.langsmith" -> "typing_extensions" [];
	"langchain_core.document_loaders.blob_loaders" -> "__future__" [];
	"langchain_core.document_loaders.blob_loaders" -> "abc" [];
	"langchain_core.document_loaders.blob_loaders" -> "typing" [];
	"langchain_core.document_loaders.base" -> "__future__" [];
	"langchain_core.document_loaders.base" -> "abc" [];
	"langchain_core.document_loaders.base" -> "typing" [];
	"langchain_core.document_loaders.base" -> "langchain_text_splitters" [];
	"langchain_community.tools.wolfram_alpha.tool" -> "typing" [];
	"langchain_community.utilities.wolfram_alpha" -> "typing" [];
	"langchain_community.utilities.wolfram_alpha" -> "pydantic" [];
	"langchain_community.utilities.wolfram_alpha" -> "wolframalpha" [];
	"langchain_community.tools.wikipedia.tool" -> "typing" [];
	"langchain_community.tools.wikipedia.tool" -> "pydantic" [];
	"langchain_community.tools.vectorstore.tool" -> "json" [];
	"langchain_community.tools.vectorstore.tool" -> "typing" [];
	"langchain_community.tools.vectorstore.tool" -> "pydantic" [];
	"langchain.chains.qa_with_sources.retrieval" -> "typing" [];
	"langchain.chains.qa_with_sources.retrieval" -> "pydantic" [];
	"langchain.chains.qa_with_sources.loading" -> "__future__" [];
	"langchain.chains.qa_with_sources.loading" -> "typing" [];
	"langchain.chains.question_answering.chain" -> "typing" [];
	"langchain.output_parsers.regex" -> "__future__" [];
	"langchain.output_parsers.regex" -> "re" [];
	"langchain.output_parsers.regex" -> "typing" [];
	"langchain.output_parsers" -> "typing" [];
	"langchain_community.output_parsers.rail_parser" -> "__future__" [];
	"langchain_community.output_parsers.rail_parser" -> "typing" [];
	"langchain_community.output_parsers.rail_parser" -> "guardrails" [];
	"langchain.output_parsers.yaml" -> "json" [];
	"langchain.output_parsers.yaml" -> "re" [];
	"langchain.output_parsers.yaml" -> "typing" [];
	"langchain.output_parsers.yaml" -> "yaml" [];
	"langchain.output_parsers.yaml" -> "pydantic" [];
	"langchain.output_parsers.structured" -> "__future__" [];
	"langchain.output_parsers.structured" -> "typing" [];
	"langchain.output_parsers.structured" -> "pydantic" [];
	"langchain.output_parsers.retry" -> "__future__" [];
	"langchain.output_parsers.retry" -> "typing" [];
	"langchain.output_parsers.retry" -> "pydantic" [];
	"langchain.output_parsers.retry" -> "typing_extensions" [];
	"langchain.output_parsers.regex_dict" -> "__future__" [];
	"langchain.output_parsers.regex_dict" -> "re" [];
	"langchain.output_parsers.regex_dict" -> "typing" [];
	"langchain.output_parsers.pandas_dataframe" -> "re" [];
	"langchain.output_parsers.pandas_dataframe" -> "typing" [];
	"langchain.output_parsers.pandas_dataframe" -> "pydantic" [];
	"langchain.output_parsers.pandas_dataframe" -> "pandas" [];
	"langchain.output_parsers.fix" -> "__future__" [];
	"langchain.output_parsers.fix" -> "typing" [];
	"langchain.output_parsers.fix" -> "pydantic" [];
	"langchain.output_parsers.fix" -> "typing_extensions" [];
	"langchain.output_parsers.enum" -> "enum" [];
	"langchain.output_parsers.datetime" -> "random" [];
	"langchain.output_parsers.datetime" -> "datetime" [];
	"langchain.output_parsers.combining" -> "__future__" [];
	"langchain.output_parsers.combining" -> "typing" [];
	"langchain.output_parsers.boolean" -> "re" [];
	"langchain.chains.combine_documents.refine" -> "__future__" [];
	"langchain.chains.combine_documents.refine" -> "typing" [];
	"langchain.chains.combine_documents.refine" -> "pydantic" [];
	"langchain.chains.combine_documents.reduce" -> "__future__" [];
	"langchain.chains.combine_documents.reduce" -> "typing" [];
	"langchain.chains.combine_documents.reduce" -> "pydantic" [];
	"langchain.chains.combine_documents.map_rerank" -> "__future__" [];
	"langchain.chains.combine_documents.map_rerank" -> "typing" [];
	"langchain.chains.combine_documents.map_rerank" -> "pydantic" [];
	"langchain.chains.combine_documents.map_rerank" -> "typing_extensions" [];
	"langchain.chains.combine_documents.map_reduce" -> "__future__" [];
	"langchain.chains.combine_documents.map_reduce" -> "typing" [];
	"langchain.chains.combine_documents.map_reduce" -> "pydantic" [];
	"langchain.chains.combine_documents.base" -> "abc" [];
	"langchain.chains.combine_documents.base" -> "typing" [];
	"langchain.chains.combine_documents.base" -> "langchain_text_splitters" [];
	"langchain.chains.combine_documents.base" -> "pydantic" [];
	"langchain.chains.qa_with_sources.base" -> "__future__" [];
	"langchain.chains.qa_with_sources.base" -> "inspect" [];
	"langchain.chains.qa_with_sources.base" -> "re" [];
	"langchain.chains.qa_with_sources.base" -> "abc" [];
	"langchain.chains.qa_with_sources.base" -> "typing" [];
	"langchain.chains.qa_with_sources.base" -> "pydantic" [];
	"langchain.chains.combine_documents.stuff" -> "typing" [];
	"langchain.chains.combine_documents.stuff" -> "pydantic" [];
	"langchain.chains.retrieval_qa.base" -> "__future__" [];
	"langchain.chains.retrieval_qa.base" -> "inspect" [];
	"langchain.chains.retrieval_qa.base" -> "warnings" [];
	"langchain.chains.retrieval_qa.base" -> "abc" [];
	"langchain.chains.retrieval_qa.base" -> "typing" [];
	"langchain.chains.retrieval_qa.base" -> "pydantic" [];
	"langchain_community.llms.openai" -> "__future__" [];
	"langchain_community.llms.openai" -> "logging" [];
	"langchain_community.llms.openai" -> "os" [];
	"langchain_community.llms.openai" -> "sys" [];
	"langchain_community.llms.openai" -> "warnings" [];
	"langchain_community.llms.openai" -> "typing" [];
	"langchain_community.llms.openai" -> "pydantic" [];
	"langchain_community.llms.openai" -> "openai" [];
	"langchain_community.llms.openai" -> "tiktoken" [];
	"tiktoken.registry" -> "__future__" [];
	"tiktoken.registry" -> "functools" [];
	"tiktoken.registry" -> "importlib" [];
	"tiktoken.registry" -> "pkgutil" [];
	"tiktoken.registry" -> "threading" [];
	"tiktoken.registry" -> "typing" [];
	"tiktoken.registry" -> "tiktoken_ext" [];
	"tiktoken.model" -> "__future__" [];
	"tiktoken.core" -> "__future__" [];
	"tiktoken.core" -> "functools" [];
	"tiktoken.core" -> "typing" [];
	"tiktoken.core" -> "regex" [];
	"tiktoken.core" -> "numpy" [];
	"openai" -> "__future__" [];
	"openai" -> "os" [];
	"openai" -> "typing_extensions" [];
	"openai" -> "typing" [];
	"openai._module_client" -> "typing_extensions" [];
	"openai.resources.vector_stores.vector_stores" -> "__future__" [];
	"openai.resources.vector_stores.vector_stores" -> "typing" [];
	"openai.resources.vector_stores.vector_stores" -> "typing_extensions" [];
	"openai.resources.vector_stores.vector_stores" -> "openai" [];
	"openai.types.vector_store_search_response" -> "typing" [];
	"openai.types.vector_store_search_response" -> "typing_extensions" [];
	"openai.types.file_chunking_strategy_param" -> "__future__" [];
	"openai.types.file_chunking_strategy_param" -> "typing" [];
	"openai.types.file_chunking_strategy_param" -> "typing_extensions" [];
	"openai.types.static_file_chunking_strategy_object_param" -> "__future__" [];
	"openai.types.static_file_chunking_strategy_object_param" -> "typing_extensions" [];
	"openai.types.static_file_chunking_strategy_param" -> "__future__" [];
	"openai.types.static_file_chunking_strategy_param" -> "typing_extensions" [];
	"openai.types.auto_file_chunking_strategy_param" -> "__future__" [];
	"openai.types.auto_file_chunking_strategy_param" -> "typing_extensions" [];
	"openai.types.shared_params.metadata" -> "__future__" [];
	"openai.types.shared_params.metadata" -> "typing" [];
	"openai.types.shared_params.metadata" -> "typing_extensions" [];
	"openai.types.shared_params.response_format_json_schema" -> "__future__" [];
	"openai.types.shared_params.response_format_json_schema" -> "typing" [];
	"openai.types.shared_params.response_format_json_schema" -> "typing_extensions" [];
	"openai.types.shared_params.response_format_json_object" -> "__future__" [];
	"openai.types.shared_params.response_format_json_object" -> "typing_extensions" [];
	"openai.types.shared_params.response_format_text" -> "__future__" [];
	"openai.types.shared_params.response_format_text" -> "typing_extensions" [];
	"openai.types.shared_params.function_parameters" -> "__future__" [];
	"openai.types.shared_params.function_parameters" -> "typing" [];
	"openai.types.shared_params.function_parameters" -> "typing_extensions" [];
	"openai.types.shared_params.function_definition" -> "__future__" [];
	"openai.types.shared_params.function_definition" -> "typing" [];
	"openai.types.shared_params.function_definition" -> "typing_extensions" [];
	"openai.types.shared_params.comparison_filter" -> "__future__" [];
	"openai.types.shared_params.comparison_filter" -> "typing" [];
	"openai.types.shared_params.comparison_filter" -> "typing_extensions" [];
	"openai.types.shared_params.reasoning_effort" -> "__future__" [];
	"openai.types.shared_params.reasoning_effort" -> "typing" [];
	"openai.types.shared_params.reasoning_effort" -> "typing_extensions" [];
	"openai.types.shared_params.responses_model" -> "__future__" [];
	"openai.types.shared_params.responses_model" -> "typing" [];
	"openai.types.shared_params.responses_model" -> "typing_extensions" [];
	"openai.types.shared.chat_model" -> "typing_extensions" [];
	"openai.types.shared.response_format_json_schema" -> "typing" [];
	"openai.types.shared.response_format_json_schema" -> "typing_extensions" [];
	"openai.types.shared.response_format_json_schema" -> "pydantic" [];
	"openai.types.shared.response_format_json_object" -> "typing_extensions" [];
	"openai.types.shared.response_format_text" -> "typing_extensions" [];
	"openai.types.shared.function_parameters" -> "typing" [];
	"openai.types.shared.function_parameters" -> "typing_extensions" [];
	"openai.types.shared.function_definition" -> "typing" [];
	"openai.types.shared.comparison_filter" -> "typing" [];
	"openai.types.shared.comparison_filter" -> "typing_extensions" [];
	"openai.types.shared.reasoning_effort" -> "typing" [];
	"openai.types.shared.reasoning_effort" -> "typing_extensions" [];
	"openai.types.shared.responses_model" -> "typing" [];
	"openai.types.shared.responses_model" -> "typing_extensions" [];
	"openai.types.shared.compound_filter" -> "typing" [];
	"openai.types.shared.compound_filter" -> "typing_extensions" [];
	"openai.types.shared.error_object" -> "typing" [];
	"openai.types.shared.all_models" -> "typing" [];
	"openai.types.shared.all_models" -> "typing_extensions" [];
	"openai.types.shared.reasoning" -> "typing" [];
	"openai.types.shared.reasoning" -> "typing_extensions" [];
	"openai.types.shared.metadata" -> "typing" [];
	"openai.types.shared.metadata" -> "typing_extensions" [];
	"openai.types.shared_params.compound_filter" -> "__future__" [];
	"openai.types.shared_params.compound_filter" -> "typing" [];
	"openai.types.shared_params.compound_filter" -> "typing_extensions" [];
	"openai.types.shared_params.chat_model" -> "__future__" [];
	"openai.types.shared_params.chat_model" -> "typing_extensions" [];
	"openai.types.shared_params.reasoning" -> "__future__" [];
	"openai.types.shared_params.reasoning" -> "typing" [];
	"openai.types.shared_params.reasoning" -> "typing_extensions" [];
	"openai.types.vector_store_deleted" -> "typing_extensions" [];
	"openai.types.vector_store" -> "typing" [];
	"openai.types.vector_store" -> "typing_extensions" [];
	"openai.pagination" -> "typing" [];
	"openai.pagination" -> "typing_extensions" [];
	"openai._resource" -> "__future__" [];
	"openai._resource" -> "time" [];
	"openai._resource" -> "typing" [];
	"openai._resource" -> "anyio" [];
	"openai._compat" -> "__future__" [];
	"openai._compat" -> "typing" [];
	"openai._compat" -> "datetime" [];
	"openai._compat" -> "typing_extensions" [];
	"openai._compat" -> "pydantic" [];
	"openai._compat" -> "pydantic_core" [];
	"openai._compat" -> "functools" [];
	"pydantic._migration" -> "sys" [];
	"pydantic._migration" -> "typing" [];
	"pydantic._migration" -> "warnings" [];
	"pydantic._internal._validators" -> "__future__" [];
	"pydantic._internal._validators" -> "math" [];
	"pydantic._internal._validators" -> "re" [];
	"pydantic._internal._validators" -> "typing" [];
	"pydantic._internal._validators" -> "decimal" [];
	"pydantic._internal._validators" -> "fractions" [];
	"pydantic._internal._validators" -> "ipaddress" [];
	"pydantic._internal._validators" -> "zoneinfo" [];
	"pydantic._internal._validators" -> "typing_extensions" [];
	"pydantic._internal._validators" -> "pydantic_core" [];
	"pydantic._internal._validators" -> "typing_inspection" [];
	"pydantic._internal._validators" -> "importlib" [];
	"pydantic._internal._decorators_v1" -> "__future__" [];
	"pydantic._internal._decorators_v1" -> "inspect" [];
	"pydantic._internal._decorators_v1" -> "typing" [];
	"pydantic._internal._decorators_v1" -> "pydantic_core" [];
	"pydantic._internal._decorators_v1" -> "typing_extensions" [];
	"pydantic._internal._utils" -> "__future__" [];
	"pydantic._internal._utils" -> "dataclasses" [];
	"pydantic._internal._utils" -> "keyword" [];
	"pydantic._internal._utils" -> "sys" [];
	"pydantic._internal._utils" -> "typing" [];
	"pydantic._internal._utils" -> "warnings" [];
	"pydantic._internal._utils" -> "weakref" [];
	"pydantic._internal._utils" -> "collections" [];
	"pydantic._internal._utils" -> "copy" [];
	"pydantic._internal._utils" -> "functools" [];
	"pydantic._internal._utils" -> "inspect" [];
	"pydantic._internal._utils" -> "itertools" [];
	"pydantic._internal._utils" -> "types" [];
	"pydantic._internal._utils" -> "typing_extensions" [];
	"pydantic._internal._utils" -> "pydantic" [];
	"pydantic.main" -> "__future__" [];
	"pydantic.main" -> "operator" [];
	"pydantic.main" -> "sys" [];
	"pydantic.main" -> "types" [];
	"pydantic.main" -> "typing" [];
	"pydantic.main" -> "warnings" [];
	"pydantic.main" -> "copy" [];
	"pydantic.main" -> "functools" [];
	"pydantic.main" -> "pydantic_core" [];
	"pydantic.main" -> "typing_extensions" [];
	"pydantic.main" -> "inspect" [];
	"pydantic.main" -> "pathlib" [];
	"pydantic.main" -> "json" [];
	"pydantic.deprecated.json" -> "datetime" [];
	"pydantic.deprecated.json" -> "warnings" [];
	"pydantic.deprecated.json" -> "collections" [];
	"pydantic.deprecated.json" -> "decimal" [];
	"pydantic.deprecated.json" -> "enum" [];
	"pydantic.deprecated.json" -> "ipaddress" [];
	"pydantic.deprecated.json" -> "pathlib" [];
	"pydantic.deprecated.json" -> "re" [];
	"pydantic.deprecated.json" -> "types" [];
	"pydantic.deprecated.json" -> "typing" [];
	"pydantic.deprecated.json" -> "uuid" [];
	"pydantic.deprecated.json" -> "typing_extensions" [];
	"pydantic.deprecated.json" -> "dataclasses" [];
	"pydantic.warnings" -> "__future__" [];
	"pydantic.types" -> "__future__" [];
	"pydantic.types" -> "base64" [];
	"pydantic.types" -> "dataclasses" [];
	"pydantic.types" -> "re" [];
	"pydantic.types" -> "datetime" [];
	"pydantic.types" -> "decimal" [];
	"pydantic.types" -> "enum" [];
	"pydantic.types" -> "pathlib" [];
	"pydantic.types" -> "types" [];
	"pydantic.types" -> "typing" [];
	"pydantic.types" -> "uuid" [];
	"pydantic.types" -> "annotated_types" [];
	"pydantic.types" -> "pydantic_core" [];
	"pydantic.types" -> "typing_extensions" [];
	"typing_inspection.introspection" -> "__future__" [];
	"typing_inspection.introspection" -> "sys" [];
	"typing_inspection.introspection" -> "types" [];
	"typing_inspection.introspection" -> "dataclasses" [];
	"typing_inspection.introspection" -> "enum" [];
	"typing_inspection.introspection" -> "typing" [];
	"typing_inspection.introspection" -> "typing_extensions" [];
	"annotated_types" -> "math" [];
	"annotated_types" -> "sys" [];
	"annotated_types" -> "types" [];
	"annotated_types" -> "dataclasses" [];
	"annotated_types" -> "datetime" [];
	"annotated_types" -> "typing" [];
	"annotated_types" -> "typing_extensions" [];
	"pydantic.networks" -> "__future__" [];
	"pydantic.networks" -> "dataclasses" [];
	"pydantic.networks" -> "re" [];
	"pydantic.networks" -> "functools" [];
	"pydantic.networks" -> "ipaddress" [];
	"pydantic.networks" -> "typing" [];
	"pydantic.networks" -> "pydantic_core" [];
	"pydantic.networks" -> "typing_extensions" [];
	"pydantic.networks" -> "email_validator" [];
	"pydantic.type_adapter" -> "__future__" [];
	"pydantic.type_adapter" -> "sys" [];
	"pydantic.type_adapter" -> "dataclasses" [];
	"pydantic.type_adapter" -> "types" [];
	"pydantic.type_adapter" -> "typing" [];
	"pydantic.type_adapter" -> "pydantic_core" [];
	"pydantic.type_adapter" -> "typing_extensions" [];
	"pydantic._internal._generate_schema" -> "__future__" [];
	"pydantic._internal._generate_schema" -> "dataclasses" [];
	"pydantic._internal._generate_schema" -> "datetime" [];
	"pydantic._internal._generate_schema" -> "inspect" [];
	"pydantic._internal._generate_schema" -> "os" [];
	"pydantic._internal._generate_schema" -> "pathlib" [];
	"pydantic._internal._generate_schema" -> "re" [];
	"pydantic._internal._generate_schema" -> "sys" [];
	"pydantic._internal._generate_schema" -> "typing" [];
	"pydantic._internal._generate_schema" -> "warnings" [];
	"pydantic._internal._generate_schema" -> "contextlib" [];
	"pydantic._internal._generate_schema" -> "copy" [];
	"pydantic._internal._generate_schema" -> "decimal" [];
	"pydantic._internal._generate_schema" -> "enum" [];
	"pydantic._internal._generate_schema" -> "fractions" [];
	"pydantic._internal._generate_schema" -> "functools" [];
	"pydantic._internal._generate_schema" -> "ipaddress" [];
	"pydantic._internal._generate_schema" -> "itertools" [];
	"pydantic._internal._generate_schema" -> "operator" [];
	"pydantic._internal._generate_schema" -> "types" [];
	"pydantic._internal._generate_schema" -> "uuid" [];
	"pydantic._internal._generate_schema" -> "zoneinfo" [];
	"pydantic._internal._generate_schema" -> "typing_extensions" [];
	"pydantic._internal._generate_schema" -> "pydantic_core" [];
	"pydantic._internal._generate_schema" -> "typing_inspection" [];
	"pydantic.dataclasses" -> "__future__" [];
	"pydantic.dataclasses" -> "dataclasses" [];
	"pydantic.dataclasses" -> "sys" [];
	"pydantic.dataclasses" -> "types" [];
	"pydantic.dataclasses" -> "typing" [];
	"pydantic.dataclasses" -> "warnings" [];
	"pydantic.dataclasses" -> "typing_extensions" [];
	"pydantic._internal._serializers" -> "__future__" [];
	"pydantic._internal._serializers" -> "collections" [];
	"pydantic._internal._serializers" -> "typing" [];
	"pydantic._internal._serializers" -> "pydantic_core" [];
	"pydantic._internal._dataclasses" -> "__future__" [];
	"pydantic._internal._dataclasses" -> "dataclasses" [];
	"pydantic._internal._dataclasses" -> "typing" [];
	"pydantic._internal._dataclasses" -> "warnings" [];
	"pydantic._internal._dataclasses" -> "functools" [];
	"pydantic._internal._dataclasses" -> "pydantic_core" [];
	"pydantic._internal._dataclasses" -> "typing_extensions" [];
	"pydantic._internal._dataclasses" -> "_typeshed" [];
	"pydantic._internal._signature" -> "__future__" [];
	"pydantic._internal._signature" -> "dataclasses" [];
	"pydantic._internal._signature" -> "inspect" [];
	"pydantic._internal._signature" -> "typing" [];
	"pydantic._internal._signature" -> "pydantic_core" [];
	"pydantic._internal._signature" -> "itertools" [];
	"pydantic._internal._schema_gather" -> "__future__" [];
	"pydantic._internal._schema_gather" -> "dataclasses" [];
	"pydantic._internal._schema_gather" -> "typing" [];
	"pydantic._internal._schema_gather" -> "typing_extensions" [];
	"pydantic._internal._docs_extraction" -> "__future__" [];
	"pydantic._internal._docs_extraction" -> "ast" [];
	"pydantic._internal._docs_extraction" -> "inspect" [];
	"pydantic._internal._docs_extraction" -> "textwrap" [];
	"pydantic._internal._docs_extraction" -> "typing" [];
	"pydantic._internal._core_utils" -> "__future__" [];
	"pydantic._internal._core_utils" -> "inspect" [];
	"pydantic._internal._core_utils" -> "os" [];
	"pydantic._internal._core_utils" -> "typing" [];
	"pydantic._internal._core_utils" -> "pydantic_core" [];
	"pydantic._internal._core_utils" -> "typing_extensions" [];
	"pydantic._internal._core_utils" -> "typing_inspection" [];
	"pydantic._internal._core_utils" -> "pydantic" [];
	"pydantic.functional_validators" -> "__future__" [];
	"pydantic.functional_validators" -> "dataclasses" [];
	"pydantic.functional_validators" -> "sys" [];
	"pydantic.functional_validators" -> "functools" [];
	"pydantic.functional_validators" -> "types" [];
	"pydantic.functional_validators" -> "typing" [];
	"pydantic.functional_validators" -> "pydantic_core" [];
	"pydantic.functional_validators" -> "typing_extensions" [];
	"pydantic._internal._schema_generation_shared" -> "__future__" [];
	"pydantic._internal._schema_generation_shared" -> "typing" [];
	"pydantic._internal._schema_generation_shared" -> "pydantic_core" [];
	"pydantic.color" -> "math" [];
	"pydantic.color" -> "re" [];
	"pydantic.color" -> "colorsys" [];
	"pydantic.color" -> "typing" [];
	"pydantic.color" -> "pydantic_core" [];
	"pydantic.color" -> "typing_extensions" [];
	"pydantic.deprecated.copy_internals" -> "__future__" [];
	"pydantic.deprecated.copy_internals" -> "typing" [];
	"pydantic.deprecated.copy_internals" -> "copy" [];
	"pydantic.deprecated.copy_internals" -> "enum" [];
	"pydantic.deprecated.copy_internals" -> "typing_extensions" [];
	"pydantic.deprecated.copy_internals" -> "pydantic" [];
	"pydantic.deprecated.parse" -> "__future__" [];
	"pydantic.deprecated.parse" -> "json" [];
	"pydantic.deprecated.parse" -> "pickle" [];
	"pydantic.deprecated.parse" -> "warnings" [];
	"pydantic.deprecated.parse" -> "enum" [];
	"pydantic.deprecated.parse" -> "pathlib" [];
	"pydantic.deprecated.parse" -> "typing" [];
	"pydantic.deprecated.parse" -> "typing_extensions" [];
	"pydantic.plugin._schema_validator" -> "__future__" [];
	"pydantic.plugin._schema_validator" -> "functools" [];
	"pydantic.plugin._schema_validator" -> "typing" [];
	"pydantic.plugin._schema_validator" -> "pydantic_core" [];
	"pydantic.plugin._schema_validator" -> "typing_extensions" [];
	"pydantic.plugin._loader" -> "__future__" [];
	"pydantic.plugin._loader" -> "os" [];
	"pydantic.plugin._loader" -> "warnings" [];
	"pydantic.plugin._loader" -> "typing" [];
	"pydantic.plugin" -> "__future__" [];
	"pydantic.plugin" -> "typing" [];
	"pydantic.plugin" -> "pydantic_core" [];
	"pydantic.plugin" -> "typing_extensions" [];
	"pydantic.json_schema" -> "__future__" [];
	"pydantic.json_schema" -> "dataclasses" [];
	"pydantic.json_schema" -> "inspect" [];
	"pydantic.json_schema" -> "math" [];
	"pydantic.json_schema" -> "os" [];
	"pydantic.json_schema" -> "re" [];
	"pydantic.json_schema" -> "warnings" [];
	"pydantic.json_schema" -> "collections" [];
	"pydantic.json_schema" -> "copy" [];
	"pydantic.json_schema" -> "enum" [];
	"pydantic.json_schema" -> "typing" [];
	"pydantic.json_schema" -> "pydantic_core" [];
	"pydantic.json_schema" -> "typing_extensions" [];
	"pydantic.root_model" -> "__future__" [];
	"pydantic.root_model" -> "typing" [];
	"pydantic.root_model" -> "copy" [];
	"pydantic.root_model" -> "pydantic_core" [];
	"pydantic.root_model" -> "typing_extensions" [];
	"pydantic.config" -> "__future__" [];
	"pydantic.config" -> "warnings" [];
	"pydantic.config" -> "re" [];
	"pydantic.config" -> "typing" [];
	"pydantic.config" -> "typing_extensions" [];
	"pydantic.annotated_handlers" -> "__future__" [];
	"pydantic.annotated_handlers" -> "typing" [];
	"pydantic.annotated_handlers" -> "pydantic_core" [];
	"pydantic.aliases" -> "__future__" [];
	"pydantic.aliases" -> "dataclasses" [];
	"pydantic.aliases" -> "typing" [];
	"pydantic.aliases" -> "pydantic_core" [];
	"pydantic._internal._namespace_utils" -> "__future__" [];
	"pydantic._internal._namespace_utils" -> "sys" [];
	"pydantic._internal._namespace_utils" -> "contextlib" [];
	"pydantic._internal._namespace_utils" -> "functools" [];
	"pydantic._internal._namespace_utils" -> "typing" [];
	"pydantic._internal._namespace_utils" -> "typing_extensions" [];
	"pydantic._internal._validate_call" -> "__future__" [];
	"pydantic._internal._validate_call" -> "functools" [];
	"pydantic._internal._validate_call" -> "inspect" [];
	"pydantic._internal._validate_call" -> "typing" [];
	"pydantic._internal._validate_call" -> "pydantic_core" [];
	"pydantic._internal._known_annotated_metadata" -> "__future__" [];
	"pydantic._internal._known_annotated_metadata" -> "collections" [];
	"pydantic._internal._known_annotated_metadata" -> "copy" [];
	"pydantic._internal._known_annotated_metadata" -> "functools" [];
	"pydantic._internal._known_annotated_metadata" -> "typing" [];
	"pydantic._internal._known_annotated_metadata" -> "pydantic_core" [];
	"pydantic._internal._known_annotated_metadata" -> "annotated_types" [];
	"pydantic._internal._discriminated_union" -> "__future__" [];
	"pydantic._internal._discriminated_union" -> "typing" [];
	"pydantic._internal._discriminated_union" -> "pydantic_core" [];
	"pydantic._internal._model_construction" -> "__future__" [];
	"pydantic._internal._model_construction" -> "builtins" [];
	"pydantic._internal._model_construction" -> "operator" [];
	"pydantic._internal._model_construction" -> "sys" [];
	"pydantic._internal._model_construction" -> "typing" [];
	"pydantic._internal._model_construction" -> "warnings" [];
	"pydantic._internal._model_construction" -> "weakref" [];
	"pydantic._internal._model_construction" -> "abc" [];
	"pydantic._internal._model_construction" -> "functools" [];
	"pydantic._internal._model_construction" -> "types" [];
	"pydantic._internal._model_construction" -> "pydantic_core" [];
	"pydantic._internal._model_construction" -> "typing_extensions" [];
	"pydantic._internal._model_construction" -> "typing_inspection" [];
	"pydantic._internal._mock_val_ser" -> "__future__" [];
	"pydantic._internal._mock_val_ser" -> "typing" [];
	"pydantic._internal._mock_val_ser" -> "pydantic_core" [];
	"pydantic._internal._forward_ref" -> "__future__" [];
	"pydantic._internal._forward_ref" -> "dataclasses" [];
	"pydantic._internal._forward_ref" -> "typing" [];
	"pydantic._internal._fields" -> "__future__" [];
	"pydantic._internal._fields" -> "dataclasses" [];
	"pydantic._internal._fields" -> "warnings" [];
	"pydantic._internal._fields" -> "copy" [];
	"pydantic._internal._fields" -> "functools" [];
	"pydantic._internal._fields" -> "inspect" [];
	"pydantic._internal._fields" -> "re" [];
	"pydantic._internal._fields" -> "typing" [];
	"pydantic._internal._fields" -> "pydantic_core" [];
	"pydantic._internal._fields" -> "typing_extensions" [];
	"pydantic._internal._fields" -> "typing_inspection" [];
	"pydantic._internal._fields" -> "pydantic" [];
	"pydantic._internal._fields" -> "annotated_types" [];
	"pydantic._internal._generics" -> "__future__" [];
	"pydantic._internal._generics" -> "sys" [];
	"pydantic._internal._generics" -> "types" [];
	"pydantic._internal._generics" -> "typing" [];
	"pydantic._internal._generics" -> "collections" [];
	"pydantic._internal._generics" -> "contextlib" [];
	"pydantic._internal._generics" -> "contextvars" [];
	"pydantic._internal._generics" -> "itertools" [];
	"pydantic._internal._generics" -> "weakref" [];
	"pydantic._internal._generics" -> "typing_extensions" [];
	"pydantic._internal._generics" -> "typing_inspection" [];
	"pydantic._internal._decorators" -> "__future__" [];
	"pydantic._internal._decorators" -> "types" [];
	"pydantic._internal._decorators" -> "collections" [];
	"pydantic._internal._decorators" -> "dataclasses" [];
	"pydantic._internal._decorators" -> "functools" [];
	"pydantic._internal._decorators" -> "inspect" [];
	"pydantic._internal._decorators" -> "itertools" [];
	"pydantic._internal._decorators" -> "typing" [];
	"pydantic._internal._decorators" -> "pydantic_core" [];
	"pydantic._internal._decorators" -> "typing_extensions" [];
	"pydantic._internal._core_metadata" -> "__future__" [];
	"pydantic._internal._core_metadata" -> "typing" [];
	"pydantic._internal._core_metadata" -> "warnings" [];
	"pydantic._internal._config" -> "__future__" [];
	"pydantic._internal._config" -> "warnings" [];
	"pydantic._internal._config" -> "contextlib" [];
	"pydantic._internal._config" -> "re" [];
	"pydantic._internal._config" -> "typing" [];
	"pydantic._internal._config" -> "pydantic_core" [];
	"pydantic._internal._config" -> "typing_extensions" [];
	"pydantic._internal._internal_dataclass" -> "sys" [];
	"pydantic._internal._typing_extra" -> "__future__" [];
	"pydantic._internal._typing_extra" -> "re" [];
	"pydantic._internal._typing_extra" -> "sys" [];
	"pydantic._internal._typing_extra" -> "types" [];
	"pydantic._internal._typing_extra" -> "typing" [];
	"pydantic._internal._typing_extra" -> "functools" [];
	"pydantic._internal._typing_extra" -> "typing_extensions" [];
	"pydantic._internal._typing_extra" -> "typing_inspection" [];
	"pydantic._internal._typing_extra" -> "pydantic" [];
	"pydantic._internal._typing_extra" -> "eval_type_backport" [];
	"pydantic._internal._repr" -> "__future__" [];
	"pydantic._internal._repr" -> "types" [];
	"pydantic._internal._repr" -> "typing" [];
	"pydantic._internal._repr" -> "typing_extensions" [];
	"pydantic._internal._repr" -> "typing_inspection" [];
	"pydantic._internal._git" -> "__future__" [];
	"pydantic._internal._git" -> "subprocess" [];
	"pydantic._internal._git" -> "pathlib" [];
	"pydantic._internal._import_utils" -> "functools" [];
	"pydantic._internal._import_utils" -> "typing" [];
	"pydantic._internal._import_utils" -> "pydantic" [];
	"typing_inspection.typing_objects" -> "contextlib" [];
	"typing_inspection.typing_objects" -> "re" [];
	"typing_inspection.typing_objects" -> "sys" [];
	"typing_inspection.typing_objects" -> "typing" [];
	"typing_inspection.typing_objects" -> "warnings" [];
	"typing_inspection.typing_objects" -> "textwrap" [];
	"typing_inspection.typing_objects" -> "types" [];
	"typing_inspection.typing_objects" -> "typing_extensions" [];
	"pydantic_core._pydantic_core" -> "datetime" [];
	"pydantic_core._pydantic_core" -> "typing" [];
	"pydantic_core._pydantic_core" -> "_typeshed" [];
	"pydantic_core._pydantic_core" -> "typing_extensions" [];
	"pydantic_core.core_schema" -> "__future__" [];
	"pydantic_core.core_schema" -> "sys" [];
	"pydantic_core.core_schema" -> "warnings" [];
	"pydantic_core.core_schema" -> "datetime" [];
	"pydantic_core.core_schema" -> "decimal" [];
	"pydantic_core.core_schema" -> "re" [];
	"pydantic_core.core_schema" -> "typing" [];
	"pydantic_core.core_schema" -> "typing_extensions" [];
	"pydantic.errors" -> "__future__" [];
	"pydantic.errors" -> "re" [];
	"pydantic.errors" -> "typing" [];
	"pydantic.errors" -> "typing_extensions" [];
	"pydantic.version" -> "__future__" [];
	"pydantic.version" -> "pydantic_core" [];
	"pydantic.version" -> "platform" [];
	"pydantic.version" -> "sys" [];
	"pydantic.version" -> "pathlib" [];
	"pydantic_core" -> "__future__" [];
	"pydantic_core" -> "sys" [];
	"pydantic_core" -> "typing" [];
	"pydantic_core" -> "typing_extensions" [];
	"pydantic.fields" -> "__future__" [];
	"pydantic.fields" -> "dataclasses" [];
	"pydantic.fields" -> "inspect" [];
	"pydantic.fields" -> "sys" [];
	"pydantic.fields" -> "typing" [];
	"pydantic.fields" -> "copy" [];
	"pydantic.fields" -> "functools" [];
	"pydantic.fields" -> "warnings" [];
	"pydantic.fields" -> "annotated_types" [];
	"pydantic.fields" -> "typing_extensions" [];
	"pydantic.fields" -> "pydantic_core" [];
	"pydantic.fields" -> "typing_inspection" [];
	"openai.types.vector_store_update_params" -> "__future__" [];
	"openai.types.vector_store_update_params" -> "typing" [];
	"openai.types.vector_store_update_params" -> "typing_extensions" [];
	"openai.types.vector_store_search_params" -> "__future__" [];
	"openai.types.vector_store_search_params" -> "typing" [];
	"openai.types.vector_store_search_params" -> "typing_extensions" [];
	"openai.types.vector_store_create_params" -> "__future__" [];
	"openai.types.vector_store_create_params" -> "typing" [];
	"openai.types.vector_store_create_params" -> "typing_extensions" [];
	"openai.types.vector_store_list_params" -> "__future__" [];
	"openai.types.vector_store_list_params" -> "typing_extensions" [];
	"openai.resources.vector_stores.file_batches" -> "__future__" [];
	"openai.resources.vector_stores.file_batches" -> "asyncio" [];
	"openai.resources.vector_stores.file_batches" -> "typing" [];
	"openai.resources.vector_stores.file_batches" -> "typing_extensions" [];
	"openai.resources.vector_stores.file_batches" -> "sniffio" [];
	"openai.resources.vector_stores.file_batches" -> "openai" [];
	"openai.resources.vector_stores.file_batches" -> "trio" [];
	"openai.types.vector_stores.vector_store_file_batch" -> "typing_extensions" [];
	"openai.types.vector_stores.vector_store_file" -> "typing" [];
	"openai.types.vector_stores.vector_store_file" -> "typing_extensions" [];
	"openai.types.file_chunking_strategy" -> "typing" [];
	"openai.types.file_chunking_strategy" -> "typing_extensions" [];
	"openai.types.static_file_chunking_strategy_object" -> "typing_extensions" [];
	"openai.types.other_file_chunking_strategy_object" -> "typing_extensions" [];
	"openai.types.vector_stores.file_batch_list_files_params" -> "__future__" [];
	"openai.types.vector_stores.file_batch_list_files_params" -> "typing_extensions" [];
	"openai.types.vector_stores.file_batch_create_params" -> "__future__" [];
	"openai.types.vector_stores.file_batch_create_params" -> "typing" [];
	"openai.types.vector_stores.file_batch_create_params" -> "typing_extensions" [];
	"openai.types.vector_stores" -> "__future__" [];
	"openai.types.vector_stores.vector_store_file_deleted" -> "typing_extensions" [];
	"openai.types.vector_stores.file_content_response" -> "typing" [];
	"openai.types.vector_stores.file_update_params" -> "__future__" [];
	"openai.types.vector_stores.file_update_params" -> "typing" [];
	"openai.types.vector_stores.file_update_params" -> "typing_extensions" [];
	"openai.types.vector_stores.file_create_params" -> "__future__" [];
	"openai.types.vector_stores.file_create_params" -> "typing" [];
	"openai.types.vector_stores.file_create_params" -> "typing_extensions" [];
	"openai.types.vector_stores.file_list_params" -> "__future__" [];
	"openai.types.vector_stores.file_list_params" -> "typing_extensions" [];
	"openai.types.file_object" -> "typing" [];
	"openai.types.file_object" -> "typing_extensions" [];
	"openai.resources.vector_stores.files" -> "__future__" [];
	"openai.resources.vector_stores.files" -> "typing" [];
	"openai.resources.vector_stores.files" -> "typing_extensions" [];
	"openai.resources.vector_stores.files" -> "openai" [];
	"openai.resources.moderations" -> "__future__" [];
	"openai.resources.moderations" -> "typing" [];
	"openai.resources.moderations" -> "openai" [];
	"openai.types.moderation_multi_modal_input_param" -> "__future__" [];
	"openai.types.moderation_multi_modal_input_param" -> "typing" [];
	"openai.types.moderation_multi_modal_input_param" -> "typing_extensions" [];
	"openai.types.moderation_image_url_input_param" -> "__future__" [];
	"openai.types.moderation_image_url_input_param" -> "typing_extensions" [];
	"openai.types.moderation_text_input_param" -> "__future__" [];
	"openai.types.moderation_text_input_param" -> "typing_extensions" [];
	"openai.types.moderation_create_response" -> "typing" [];
	"openai.types.moderation" -> "typing" [];
	"openai.types.moderation" -> "typing_extensions" [];
	"openai.types.moderation" -> "pydantic" [];
	"openai.types.moderation_model" -> "typing_extensions" [];
	"openai.types.moderation_create_params" -> "__future__" [];
	"openai.types.moderation_create_params" -> "typing" [];
	"openai.types.moderation_create_params" -> "typing_extensions" [];
	"openai.resources.fine_tuning.fine_tuning" -> "__future__" [];
	"openai.resources.fine_tuning.checkpoints.checkpoints" -> "__future__" [];
	"openai.resources.fine_tuning.checkpoints.permissions" -> "__future__" [];
	"openai.resources.fine_tuning.checkpoints.permissions" -> "typing" [];
	"openai.resources.fine_tuning.checkpoints.permissions" -> "typing_extensions" [];
	"openai.resources.fine_tuning.checkpoints.permissions" -> "openai" [];
	"openai.types.fine_tuning.checkpoints.permission_retrieve_response" -> "typing" [];
	"openai.types.fine_tuning.checkpoints.permission_retrieve_response" -> "typing_extensions" [];
	"openai.types.fine_tuning.checkpoints.permission_delete_response" -> "typing_extensions" [];
	"openai.types.fine_tuning.checkpoints.permission_create_response" -> "typing_extensions" [];
	"openai.types.fine_tuning.checkpoints.permission_retrieve_params" -> "__future__" [];
	"openai.types.fine_tuning.checkpoints.permission_retrieve_params" -> "typing_extensions" [];
	"openai.types.fine_tuning.checkpoints.permission_create_params" -> "__future__" [];
	"openai.types.fine_tuning.checkpoints.permission_create_params" -> "typing" [];
	"openai.types.fine_tuning.checkpoints.permission_create_params" -> "typing_extensions" [];
	"openai.types.fine_tuning.checkpoints" -> "__future__" [];
	"openai.types.fine_tuning" -> "__future__" [];
	"openai.types.fine_tuning.fine_tuning_job_wandb_integration_object" -> "typing_extensions" [];
	"openai.types.fine_tuning.fine_tuning_job_wandb_integration" -> "typing" [];
	"openai.types.fine_tuning.job_list_events_params" -> "__future__" [];
	"openai.types.fine_tuning.job_list_events_params" -> "typing_extensions" [];
	"openai.types.fine_tuning.fine_tuning_job_event" -> "builtins" [];
	"openai.types.fine_tuning.fine_tuning_job_event" -> "typing" [];
	"openai.types.fine_tuning.fine_tuning_job_event" -> "typing_extensions" [];
	"openai.types.fine_tuning.job_create_params" -> "__future__" [];
	"openai.types.fine_tuning.job_create_params" -> "typing" [];
	"openai.types.fine_tuning.job_create_params" -> "typing_extensions" [];
	"openai.types.fine_tuning.job_list_params" -> "__future__" [];
	"openai.types.fine_tuning.job_list_params" -> "typing" [];
	"openai.types.fine_tuning.job_list_params" -> "typing_extensions" [];
	"openai.types.fine_tuning.fine_tuning_job" -> "typing" [];
	"openai.types.fine_tuning.fine_tuning_job" -> "typing_extensions" [];
	"openai.resources.fine_tuning.jobs.jobs" -> "__future__" [];
	"openai.resources.fine_tuning.jobs.jobs" -> "typing" [];
	"openai.resources.fine_tuning.jobs.jobs" -> "typing_extensions" [];
	"openai.resources.fine_tuning.jobs.jobs" -> "openai" [];
	"openai.resources.fine_tuning.jobs.checkpoints" -> "__future__" [];
	"openai.resources.fine_tuning.jobs.checkpoints" -> "openai" [];
	"openai.types.fine_tuning.jobs.fine_tuning_job_checkpoint" -> "typing" [];
	"openai.types.fine_tuning.jobs.fine_tuning_job_checkpoint" -> "typing_extensions" [];
	"openai.types.fine_tuning.jobs.checkpoint_list_params" -> "__future__" [];
	"openai.types.fine_tuning.jobs.checkpoint_list_params" -> "typing_extensions" [];
	"openai.types.fine_tuning.jobs" -> "__future__" [];
	"openai.resources.completions" -> "__future__" [];
	"openai.resources.completions" -> "typing" [];
	"openai.resources.completions" -> "typing_extensions" [];
	"openai.resources.completions" -> "openai" [];
	"openai.types.chat.chat_completion_stream_options_param" -> "__future__" [];
	"openai.types.chat.chat_completion_stream_options_param" -> "typing_extensions" [];
	"openai.types.chat" -> "__future__" [];
	"openai.types.chat.chat_completion_content_part_input_audio_param" -> "__future__" [];
	"openai.types.chat.chat_completion_content_part_input_audio_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_function_call_option_param" -> "__future__" [];
	"openai.types.chat.chat_completion_function_call_option_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_content_part_refusal_param" -> "__future__" [];
	"openai.types.chat.chat_completion_content_part_refusal_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_tool_choice_option_param" -> "__future__" [];
	"openai.types.chat.chat_completion_tool_choice_option_param" -> "typing" [];
	"openai.types.chat.chat_completion_tool_choice_option_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_prediction_content_param" -> "__future__" [];
	"openai.types.chat.chat_completion_prediction_content_param" -> "typing" [];
	"openai.types.chat.chat_completion_prediction_content_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_content_part_image_param" -> "__future__" [];
	"openai.types.chat.chat_completion_content_part_image_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_named_tool_choice_param" -> "__future__" [];
	"openai.types.chat.chat_completion_named_tool_choice_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_message_tool_call_param" -> "__future__" [];
	"openai.types.chat.chat_completion_message_tool_call_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_developer_message_param" -> "__future__" [];
	"openai.types.chat.chat_completion_developer_message_param" -> "typing" [];
	"openai.types.chat.chat_completion_developer_message_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_content_part_text_param" -> "__future__" [];
	"openai.types.chat.chat_completion_content_part_text_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_assistant_message_param" -> "__future__" [];
	"openai.types.chat.chat_completion_assistant_message_param" -> "typing" [];
	"openai.types.chat.chat_completion_assistant_message_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_function_message_param" -> "__future__" [];
	"openai.types.chat.chat_completion_function_message_param" -> "typing" [];
	"openai.types.chat.chat_completion_function_message_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_system_message_param" -> "__future__" [];
	"openai.types.chat.chat_completion_system_message_param" -> "typing" [];
	"openai.types.chat.chat_completion_system_message_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_user_message_param" -> "__future__" [];
	"openai.types.chat.chat_completion_user_message_param" -> "typing" [];
	"openai.types.chat.chat_completion_user_message_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_tool_message_param" -> "__future__" [];
	"openai.types.chat.chat_completion_tool_message_param" -> "typing" [];
	"openai.types.chat.chat_completion_tool_message_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_content_part_param" -> "__future__" [];
	"openai.types.chat.chat_completion_content_part_param" -> "typing" [];
	"openai.types.chat.chat_completion_content_part_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_message_tool_call" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_token_logprob" -> "typing" [];
	"openai.types.chat.chat_completion_message_param" -> "__future__" [];
	"openai.types.chat.chat_completion_message_param" -> "typing" [];
	"openai.types.chat.chat_completion_message_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_audio_param" -> "__future__" [];
	"openai.types.chat.chat_completion_audio_param" -> "typing" [];
	"openai.types.chat.chat_completion_audio_param" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_tool_param" -> "__future__" [];
	"openai.types.chat.chat_completion_tool_param" -> "typing_extensions" [];
	"openai.types.chat.parsed_function_tool_call" -> "typing" [];
	"openai.types.chat.completion_update_params" -> "__future__" [];
	"openai.types.chat.completion_update_params" -> "typing" [];
	"openai.types.chat.completion_update_params" -> "typing_extensions" [];
	"openai.types.chat.completion_create_params" -> "__future__" [];
	"openai.types.chat.completion_create_params" -> "typing" [];
	"openai.types.chat.completion_create_params" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_modality" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_message" -> "typing" [];
	"openai.types.chat.chat_completion_message" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_deleted" -> "typing_extensions" [];
	"openai.types.chat.parsed_chat_completion" -> "typing" [];
	"openai.types.chat.completion_list_params" -> "__future__" [];
	"openai.types.chat.completion_list_params" -> "typing" [];
	"openai.types.chat.completion_list_params" -> "typing_extensions" [];
	"openai.types.chat.chat_completion_chunk" -> "typing" [];
	"openai.types.chat.chat_completion_chunk" -> "typing_extensions" [];
	"openai.types.completion_usage" -> "typing" [];
	"openai.types.chat.chat_completion_role" -> "typing_extensions" [];
	"openai.types.chat.chat_completion" -> "typing" [];
	"openai.types.chat.chat_completion" -> "typing_extensions" [];
	"openai.types.completion" -> "typing" [];
	"openai.types.completion" -> "typing_extensions" [];
	"openai.types.completion_choice" -> "typing" [];
	"openai.types.completion_choice" -> "typing_extensions" [];
	"openai._streaming" -> "__future__" [];
	"openai._streaming" -> "json" [];
	"openai._streaming" -> "inspect" [];
	"openai._streaming" -> "types" [];
	"openai._streaming" -> "typing" [];
	"openai._streaming" -> "typing_extensions" [];
	"openai.types.completion_create_params" -> "__future__" [];
	"openai.types.completion_create_params" -> "typing" [];
	"openai.types.completion_create_params" -> "typing_extensions" [];
	"openai.resources.embeddings" -> "__future__" [];
	"openai.resources.embeddings" -> "array" [];
	"openai.resources.embeddings" -> "base64" [];
	"openai.resources.embeddings" -> "typing" [];
	"openai.resources.embeddings" -> "typing_extensions" [];
	"openai.resources.embeddings" -> "openai" [];
	"openai.types.create_embedding_response" -> "typing" [];
	"openai.types.create_embedding_response" -> "typing_extensions" [];
	"openai.types.embedding" -> "typing" [];
	"openai.types.embedding" -> "typing_extensions" [];
	"openai.types.embedding_model" -> "typing_extensions" [];
	"openai._extras.sounddevice_proxy" -> "__future__" [];
	"openai._extras.sounddevice_proxy" -> "typing" [];
	"openai._extras.sounddevice_proxy" -> "typing_extensions" [];
	"openai._extras.sounddevice_proxy" -> "sounddevice" [];
	"openai._extras.pandas_proxy" -> "__future__" [];
	"openai._extras.pandas_proxy" -> "typing" [];
	"openai._extras.pandas_proxy" -> "typing_extensions" [];
	"openai._extras.pandas_proxy" -> "pandas" [];
	"openai._extras.numpy_proxy" -> "__future__" [];
	"openai._extras.numpy_proxy" -> "typing" [];
	"openai._extras.numpy_proxy" -> "typing_extensions" [];
	"openai._extras.numpy_proxy" -> "numpy" [];
	"openai.types.embedding_create_params" -> "__future__" [];
	"openai.types.embedding_create_params" -> "typing" [];
	"openai.types.embedding_create_params" -> "typing_extensions" [];
	"openai.resources.responses.input_items" -> "__future__" [];
	"openai.resources.responses.input_items" -> "typing" [];
	"openai.resources.responses.input_items" -> "typing_extensions" [];
	"openai.resources.responses.input_items" -> "openai" [];
	"openai.types.responses.response_includable" -> "typing_extensions" [];
	"openai.types.responses.response_item" -> "typing" [];
	"openai.types.responses.response_item" -> "typing_extensions" [];
	"openai.types.responses.response_function_tool_call_output_item" -> "typing" [];
	"openai.types.responses.response_function_tool_call_output_item" -> "typing_extensions" [];
	"openai.types.responses.response_computer_tool_call_output_item" -> "typing" [];
	"openai.types.responses.response_computer_tool_call_output_item" -> "typing_extensions" [];
	"openai.types.responses.response_computer_tool_call_output_screenshot" -> "typing" [];
	"openai.types.responses.response_computer_tool_call_output_screenshot" -> "typing_extensions" [];
	"openai.types.responses.response_function_tool_call" -> "typing" [];
	"openai.types.responses.response_function_tool_call" -> "typing_extensions" [];
	"openai.types.responses.response_file_search_tool_call" -> "typing" [];
	"openai.types.responses.response_file_search_tool_call" -> "typing_extensions" [];
	"openai.types.responses.response_function_web_search" -> "typing_extensions" [];
	"openai.types.responses.response_input_message_item" -> "typing" [];
	"openai.types.responses.response_input_message_item" -> "typing_extensions" [];
	"openai.types.responses.response_input_message_content_list" -> "typing" [];
	"openai.types.responses.response_input_message_content_list" -> "typing_extensions" [];
	"openai.types.responses.response_input_content" -> "typing" [];
	"openai.types.responses.response_input_content" -> "typing_extensions" [];
	"openai.types.responses.response_input_image" -> "typing" [];
	"openai.types.responses.response_input_image" -> "typing_extensions" [];
	"openai.types.responses.response_input_text" -> "typing_extensions" [];
	"openai.types.responses.response_input_file" -> "typing" [];
	"openai.types.responses.response_input_file" -> "typing_extensions" [];
	"openai.types.responses.response_computer_tool_call" -> "typing" [];
	"openai.types.responses.response_computer_tool_call" -> "typing_extensions" [];
	"openai.types.responses.response_output_message" -> "typing" [];
	"openai.types.responses.response_output_message" -> "typing_extensions" [];
	"openai.types.responses.response_output_refusal" -> "typing_extensions" [];
	"openai.types.responses.response_output_text" -> "typing" [];
	"openai.types.responses.response_output_text" -> "typing_extensions" [];
	"openai.types.responses.input_item_list_params" -> "__future__" [];
	"openai.types.responses.input_item_list_params" -> "typing" [];
	"openai.types.responses.input_item_list_params" -> "typing_extensions" [];
	"openai.types.responses" -> "__future__" [];
	"openai.types.responses.response_computer_tool_call_output_screenshot_param" -> "__future__" [];
	"openai.types.responses.response_computer_tool_call_output_screenshot_param" -> "typing_extensions" [];
	"openai.types.responses.response_code_interpreter_call_interpreting_event" -> "typing_extensions" [];
	"openai.types.responses.response_code_interpreter_call_in_progress_event" -> "typing_extensions" [];
	"openai.types.responses.response_code_interpreter_call_code_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_code_interpreter_call_completed_event" -> "typing_extensions" [];
	"openai.types.responses.response_code_interpreter_call_code_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_format_text_json_schema_config_param" -> "__future__" [];
	"openai.types.responses.response_format_text_json_schema_config_param" -> "typing" [];
	"openai.types.responses.response_format_text_json_schema_config_param" -> "typing_extensions" [];
	"openai.types.responses.response_function_call_arguments_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_function_call_arguments_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_file_search_call_in_progress_event" -> "typing_extensions" [];
	"openai.types.responses.response_web_search_call_in_progress_event" -> "typing_extensions" [];
	"openai.types.responses.response_input_message_content_list_param" -> "__future__" [];
	"openai.types.responses.response_input_message_content_list_param" -> "typing" [];
	"openai.types.responses.response_input_message_content_list_param" -> "typing_extensions" [];
	"openai.types.responses.response_file_search_call_searching_event" -> "typing_extensions" [];
	"openai.types.responses.response_file_search_call_completed_event" -> "typing_extensions" [];
	"openai.types.responses.response_web_search_call_searching_event" -> "typing_extensions" [];
	"openai.types.responses.response_web_search_call_completed_event" -> "typing_extensions" [];
	"openai.types.responses.response_format_text_json_schema_config" -> "typing" [];
	"openai.types.responses.response_format_text_json_schema_config" -> "typing_extensions" [];
	"openai.types.responses.response_format_text_json_schema_config" -> "pydantic" [];
	"openai.types.responses.response_audio_transcript_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_text_annotation_delta_event" -> "typing" [];
	"openai.types.responses.response_text_annotation_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_file_search_tool_call_param" -> "__future__" [];
	"openai.types.responses.response_file_search_tool_call_param" -> "typing" [];
	"openai.types.responses.response_file_search_tool_call_param" -> "typing_extensions" [];
	"openai.types.responses.response_audio_transcript_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_code_interpreter_tool_call" -> "typing" [];
	"openai.types.responses.response_code_interpreter_tool_call" -> "typing_extensions" [];
	"openai.types.responses.response_function_web_search_param" -> "__future__" [];
	"openai.types.responses.response_function_web_search_param" -> "typing_extensions" [];
	"openai.types.responses.response_function_tool_call_param" -> "__future__" [];
	"openai.types.responses.response_function_tool_call_param" -> "typing_extensions" [];
	"openai.types.responses.response_format_text_config_param" -> "__future__" [];
	"openai.types.responses.response_format_text_config_param" -> "typing" [];
	"openai.types.responses.response_format_text_config_param" -> "typing_extensions" [];
	"openai.types.responses.response_content_part_added_event" -> "typing" [];
	"openai.types.responses.response_content_part_added_event" -> "typing_extensions" [];
	"openai.types.responses.response_computer_tool_call_param" -> "__future__" [];
	"openai.types.responses.response_computer_tool_call_param" -> "typing" [];
	"openai.types.responses.response_computer_tool_call_param" -> "typing_extensions" [];
	"openai.types.responses.response_output_item_added_event" -> "typing_extensions" [];
	"openai.types.responses.response_content_part_done_event" -> "typing" [];
	"openai.types.responses.response_content_part_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_output_item_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_reasoning_item_param" -> "__future__" [];
	"openai.types.responses.response_reasoning_item_param" -> "typing" [];
	"openai.types.responses.response_reasoning_item_param" -> "typing_extensions" [];
	"openai.types.responses.response_output_refusal_param" -> "__future__" [];
	"openai.types.responses.response_output_refusal_param" -> "typing_extensions" [];
	"openai.types.responses.response_output_message_param" -> "__future__" [];
	"openai.types.responses.response_output_message_param" -> "typing" [];
	"openai.types.responses.response_output_message_param" -> "typing_extensions" [];
	"openai.types.responses.response_refusal_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_input_content_param" -> "__future__" [];
	"openai.types.responses.response_input_content_param" -> "typing" [];
	"openai.types.responses.response_input_content_param" -> "typing_extensions" [];
	"openai.types.responses.response_refusal_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_format_text_config" -> "typing" [];
	"openai.types.responses.response_format_text_config" -> "typing_extensions" [];
	"openai.types.responses.tool_choice_function_param" -> "__future__" [];
	"openai.types.responses.tool_choice_function_param" -> "typing_extensions" [];
	"openai.types.responses.response_text_config_param" -> "__future__" [];
	"openai.types.responses.response_text_config_param" -> "typing_extensions" [];
	"openai.types.responses.response_output_text_param" -> "__future__" [];
	"openai.types.responses.response_output_text_param" -> "typing" [];
	"openai.types.responses.response_output_text_param" -> "typing_extensions" [];
	"openai.types.responses.response_input_image_param" -> "__future__" [];
	"openai.types.responses.response_input_image_param" -> "typing" [];
	"openai.types.responses.response_input_image_param" -> "typing_extensions" [];
	"openai.types.responses.response_in_progress_event" -> "typing_extensions" [];
	"openai.types.responses.response_audio_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_text_delta_event" -> "typing_extensions" [];
	"openai.types.responses.response_input_text_param" -> "__future__" [];
	"openai.types.responses.response_input_text_param" -> "typing_extensions" [];
	"openai.types.responses.response_input_item_param" -> "__future__" [];
	"openai.types.responses.response_input_item_param" -> "typing" [];
	"openai.types.responses.response_input_item_param" -> "typing_extensions" [];
	"openai.types.responses.response_input_file_param" -> "__future__" [];
	"openai.types.responses.response_input_file_param" -> "typing_extensions" [];
	"openai.types.responses.response_incomplete_event" -> "typing_extensions" [];
	"openai.types.responses.response_audio_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_text_done_event" -> "typing_extensions" [];
	"openai.types.responses.response_retrieve_params" -> "__future__" [];
	"openai.types.responses.response_retrieve_params" -> "typing" [];
	"openai.types.responses.response_retrieve_params" -> "typing_extensions" [];
	"openai.types.responses.response_completed_event" -> "typing_extensions" [];
	"openai.types.responses.easy_input_message_param" -> "__future__" [];
	"openai.types.responses.easy_input_message_param" -> "typing" [];
	"openai.types.responses.easy_input_message_param" -> "typing_extensions" [];
	"openai.types.responses.tool_choice_types_param" -> "__future__" [];
	"openai.types.responses.tool_choice_types_param" -> "typing_extensions" [];
	"openai.types.responses.response_reasoning_item" -> "typing" [];
	"openai.types.responses.response_reasoning_item" -> "typing_extensions" [];
	"openai.types.responses.response_created_event" -> "typing_extensions" [];
	"openai.types.responses.response_create_params" -> "__future__" [];
	"openai.types.responses.response_create_params" -> "typing" [];
	"openai.types.responses.response_create_params" -> "typing_extensions" [];
	"openai.types.responses.file_search_tool_param" -> "__future__" [];
	"openai.types.responses.file_search_tool_param" -> "typing" [];
	"openai.types.responses.file_search_tool_param" -> "typing_extensions" [];
	"openai.types.responses.web_search_tool_param" -> "__future__" [];
	"openai.types.responses.web_search_tool_param" -> "typing" [];
	"openai.types.responses.web_search_tool_param" -> "typing_extensions" [];
	"openai.types.responses.response_stream_event" -> "typing" [];
	"openai.types.responses.response_stream_event" -> "typing_extensions" [];
	"openai.types.responses.response_failed_event" -> "typing_extensions" [];
	"openai.types.responses.tool_choice_function" -> "typing_extensions" [];
	"openai.types.responses.response_text_config" -> "typing" [];
	"openai.types.responses.response_output_item" -> "typing" [];
	"openai.types.responses.response_output_item" -> "typing_extensions" [];
	"openai.types.responses.response_input_param" -> "__future__" [];
	"openai.types.responses.response_input_param" -> "typing" [];
	"openai.types.responses.response_input_param" -> "typing_extensions" [];
	"openai.types.responses.response_error_event" -> "typing" [];
	"openai.types.responses.response_error_event" -> "typing_extensions" [];
	"openai.types.responses.tool_choice_options" -> "typing_extensions" [];
	"openai.types.responses.function_tool_param" -> "__future__" [];
	"openai.types.responses.function_tool_param" -> "typing" [];
	"openai.types.responses.function_tool_param" -> "typing_extensions" [];
	"openai.types.responses.computer_tool_param" -> "__future__" [];
	"openai.types.responses.computer_tool_param" -> "typing_extensions" [];
	"openai.types.responses.response_item_list" -> "typing" [];
	"openai.types.responses.response_item_list" -> "typing_extensions" [];
	"openai.types.responses.tool_choice_types" -> "typing_extensions" [];
	"openai.types.responses.file_search_tool" -> "typing" [];
	"openai.types.responses.file_search_tool" -> "typing_extensions" [];
	"openai.types.responses.web_search_tool" -> "typing" [];
	"openai.types.responses.web_search_tool" -> "typing_extensions" [];
	"openai.types.responses.response_status" -> "typing_extensions" [];
	"openai.types.responses.parsed_response" -> "typing" [];
	"openai.types.responses.parsed_response" -> "typing_extensions" [];
	"openai._utils._transform" -> "__future__" [];
	"openai._utils._transform" -> "io" [];
	"openai._utils._transform" -> "base64" [];
	"openai._utils._transform" -> "pathlib" [];
	"openai._utils._transform" -> "typing" [];
	"openai._utils._transform" -> "datetime" [];
	"openai._utils._transform" -> "typing_extensions" [];
	"openai._utils._transform" -> "anyio" [];
	"openai._utils._transform" -> "pydantic" [];
	"openai._utils._typing" -> "__future__" [];
	"openai._utils._typing" -> "sys" [];
	"openai._utils._typing" -> "typing" [];
	"openai._utils._typing" -> "typing_extensions" [];
	"openai._utils._typing" -> "collections" [];
	"openai._files" -> "__future__" [];
	"openai._files" -> "io" [];
	"openai._files" -> "os" [];
	"openai._files" -> "pathlib" [];
	"openai._files" -> "typing" [];
	"openai._files" -> "typing_extensions" [];
	"openai._files" -> "anyio" [];
	"openai._utils._utils" -> "__future__" [];
	"openai._utils._utils" -> "os" [];
	"openai._utils._utils" -> "re" [];
	"openai._utils._utils" -> "inspect" [];
	"openai._utils._utils" -> "functools" [];
	"openai._utils._utils" -> "typing" [];
	"openai._utils._utils" -> "pathlib" [];
	"openai._utils._utils" -> "datetime" [];
	"openai._utils._utils" -> "typing_extensions" [];
	"openai._utils._utils" -> "sniffio" [];
	"openai.types.responses.response_error" -> "typing_extensions" [];
	"openai.types.responses.function_tool" -> "typing" [];
	"openai.types.responses.function_tool" -> "typing_extensions" [];
	"openai.types.responses.computer_tool" -> "typing_extensions" [];
	"openai.types.responses.tool_param" -> "__future__" [];
	"openai.types.responses.tool_param" -> "typing" [];
	"openai.types.responses.tool_param" -> "typing_extensions" [];
	"openai.types.responses.response" -> "typing" [];
	"openai.types.responses.response" -> "typing_extensions" [];
	"openai.types.responses.tool" -> "typing" [];
	"openai.types.responses.tool" -> "typing_extensions" [];
	"openai.resources.responses.responses" -> "__future__" [];
	"openai.resources.responses.responses" -> "typing" [];
	"openai.resources.responses.responses" -> "functools" [];
	"openai.resources.responses.responses" -> "typing_extensions" [];
	"openai.resources.responses.responses" -> "openai" [];
	"openai.lib.streaming.responses._responses" -> "__future__" [];
	"openai.lib.streaming.responses._responses" -> "inspect" [];
	"openai.lib.streaming.responses._responses" -> "types" [];
	"openai.lib.streaming.responses._responses" -> "typing" [];
	"openai.lib.streaming.responses._responses" -> "typing_extensions" [];
	"openai.lib.streaming.responses._events" -> "__future__" [];
	"openai.lib.streaming.responses._events" -> "typing" [];
	"openai.lib.streaming.responses._events" -> "typing_extensions" [];
	"openai.lib.streaming.responses._types" -> "__future__" [];
	"openai.lib.streaming.responses._types" -> "typing_extensions" [];
	"openai.lib._parsing._responses" -> "__future__" [];
	"openai.lib._parsing._responses" -> "json" [];
	"openai.lib._parsing._responses" -> "typing" [];
	"openai.lib._parsing._responses" -> "typing_extensions" [];
	"openai.lib._parsing._responses" -> "pydantic" [];
	"openai.lib._parsing._completions" -> "__future__" [];
	"openai.lib._parsing._completions" -> "json" [];
	"openai.lib._parsing._completions" -> "typing" [];
	"openai.lib._parsing._completions" -> "typing_extensions" [];
	"openai.lib._parsing._completions" -> "pydantic" [];
	"openai.lib._pydantic" -> "__future__" [];
	"openai.lib._pydantic" -> "inspect" [];
	"openai.lib._pydantic" -> "typing" [];
	"openai.lib._pydantic" -> "typing_extensions" [];
	"openai.lib._pydantic" -> "pydantic" [];
	"openai.lib._tools" -> "__future__" [];
	"openai.lib._tools" -> "typing" [];
	"openai.lib._tools" -> "pydantic" [];
	"openai.resources.uploads.uploads" -> "__future__" [];
	"openai.resources.uploads.uploads" -> "io" [];
	"openai.resources.uploads.uploads" -> "os" [];
	"openai.resources.uploads.uploads" -> "logging" [];
	"openai.resources.uploads.uploads" -> "builtins" [];
	"openai.resources.uploads.uploads" -> "typing" [];
	"openai.resources.uploads.uploads" -> "pathlib" [];
	"openai.resources.uploads.uploads" -> "anyio" [];
	"openai.resources.uploads.uploads" -> "openai" [];
	"openai.types.file_purpose" -> "typing_extensions" [];
	"openai.types.upload" -> "typing" [];
	"openai.types.upload" -> "typing_extensions" [];
	"openai.types.upload_complete_params" -> "__future__" [];
	"openai.types.upload_complete_params" -> "typing" [];
	"openai.types.upload_complete_params" -> "typing_extensions" [];
	"openai.types.upload_create_params" -> "__future__" [];
	"openai.types.upload_create_params" -> "typing_extensions" [];
	"openai.resources.uploads.parts" -> "__future__" [];
	"openai.resources.uploads.parts" -> "typing" [];
	"openai.resources.uploads.parts" -> "openai" [];
	"openai.types.uploads.upload_part" -> "typing_extensions" [];
	"openai.types.uploads.part_create_params" -> "__future__" [];
	"openai.types.uploads.part_create_params" -> "typing_extensions" [];
	"openai.types.uploads" -> "__future__" [];
	"openai.resources.batches" -> "__future__" [];
	"openai.resources.batches" -> "typing" [];
	"openai.resources.batches" -> "typing_extensions" [];
	"openai.resources.batches" -> "openai" [];
	"openai.types.batch" -> "typing" [];
	"openai.types.batch" -> "typing_extensions" [];
	"openai.types.batch_error" -> "typing" [];
	"openai.types.batch_create_params" -> "__future__" [];
	"openai.types.batch_create_params" -> "typing" [];
	"openai.types.batch_create_params" -> "typing_extensions" [];
	"openai.types.batch_list_params" -> "__future__" [];
	"openai.types.batch_list_params" -> "typing_extensions" [];
	"openai.resources.models" -> "__future__" [];
	"openai.resources.models" -> "openai" [];
	"openai.types.model" -> "typing_extensions" [];
	"openai.resources.images" -> "__future__" [];
	"openai.resources.images" -> "typing" [];
	"openai.resources.images" -> "typing_extensions" [];
	"openai.resources.images" -> "openai" [];
	"openai.types.images_response" -> "typing" [];
	"openai.types.image" -> "typing" [];
	"openai.types.image_model" -> "typing_extensions" [];
	"openai.types.image_create_variation_params" -> "__future__" [];
	"openai.types.image_create_variation_params" -> "typing" [];
	"openai.types.image_create_variation_params" -> "typing_extensions" [];
	"openai.types.image_generate_params" -> "__future__" [];
	"openai.types.image_generate_params" -> "typing" [];
	"openai.types.image_generate_params" -> "typing_extensions" [];
	"openai.types.image_edit_params" -> "__future__" [];
	"openai.types.image_edit_params" -> "typing" [];
	"openai.types.image_edit_params" -> "typing_extensions" [];
	"openai.resources.files" -> "__future__" [];
	"openai.resources.files" -> "time" [];
	"openai.resources.files" -> "typing_extensions" [];
	"openai.resources.files" -> "typing" [];
	"openai.resources.files" -> "openai" [];
	"openai.types.file_deleted" -> "typing_extensions" [];
	"openai.types.file_create_params" -> "__future__" [];
	"openai.types.file_create_params" -> "typing_extensions" [];
	"openai.types.file_list_params" -> "__future__" [];
	"openai.types.file_list_params" -> "typing_extensions" [];
	"openai.resources.evals.evals" -> "__future__" [];
	"openai.resources.evals.evals" -> "typing" [];
	"openai.resources.evals.evals" -> "typing_extensions" [];
	"openai.resources.evals.evals" -> "openai" [];
	"openai.types.eval_retrieve_response" -> "typing" [];
	"openai.types.eval_retrieve_response" -> "typing_extensions" [];
	"openai.types.eval_stored_completions_data_source_config" -> "typing" [];
	"openai.types.eval_stored_completions_data_source_config" -> "typing_extensions" [];
	"openai.types.eval_stored_completions_data_source_config" -> "pydantic" [];
	"openai.types.eval_custom_data_source_config" -> "typing" [];
	"openai.types.eval_custom_data_source_config" -> "typing_extensions" [];
	"openai.types.eval_custom_data_source_config" -> "pydantic" [];
	"openai.types.eval_text_similarity_grader" -> "typing" [];
	"openai.types.eval_text_similarity_grader" -> "typing_extensions" [];
	"openai.types.eval_string_check_grader" -> "typing_extensions" [];
	"openai.types.eval_label_model_grader" -> "typing" [];
	"openai.types.eval_label_model_grader" -> "typing_extensions" [];
	"openai.types.eval_update_response" -> "typing" [];
	"openai.types.eval_update_response" -> "typing_extensions" [];
	"openai.types.eval_create_response" -> "typing" [];
	"openai.types.eval_create_response" -> "typing_extensions" [];
	"openai.types.eval_list_response" -> "typing" [];
	"openai.types.eval_list_response" -> "typing_extensions" [];
	"openai.resources.evals.runs.runs" -> "__future__" [];
	"openai.resources.evals.runs.runs" -> "typing" [];
	"openai.resources.evals.runs.runs" -> "typing_extensions" [];
	"openai.resources.evals.runs.runs" -> "openai" [];
	"openai.types.evals.run_retrieve_response" -> "typing" [];
	"openai.types.evals.run_retrieve_response" -> "typing_extensions" [];
	"openai.types.evals.run_retrieve_response" -> "pydantic" [];
	"openai.types.evals.create_eval_completions_run_data_source" -> "typing" [];
	"openai.types.evals.create_eval_completions_run_data_source" -> "typing_extensions" [];
	"openai.types.evals.create_eval_jsonl_run_data_source" -> "typing" [];
	"openai.types.evals.create_eval_jsonl_run_data_source" -> "typing_extensions" [];
	"openai.types.evals.run_delete_response" -> "typing" [];
	"openai.types.evals.run_create_response" -> "typing" [];
	"openai.types.evals.run_create_response" -> "typing_extensions" [];
	"openai.types.evals.run_create_response" -> "pydantic" [];
	"openai.types.evals.run_cancel_response" -> "typing" [];
	"openai.types.evals.run_cancel_response" -> "typing_extensions" [];
	"openai.types.evals.run_cancel_response" -> "pydantic" [];
	"openai.types.evals.run_list_response" -> "typing" [];
	"openai.types.evals.run_list_response" -> "typing_extensions" [];
	"openai.types.evals.run_list_response" -> "pydantic" [];
	"openai.types.evals.run_create_params" -> "__future__" [];
	"openai.types.evals.run_create_params" -> "typing" [];
	"openai.types.evals.run_create_params" -> "typing_extensions" [];
	"openai.types.evals.create_eval_completions_run_data_source_param" -> "__future__" [];
	"openai.types.evals.create_eval_completions_run_data_source_param" -> "typing" [];
	"openai.types.evals.create_eval_completions_run_data_source_param" -> "typing_extensions" [];
	"openai.types.evals.create_eval_jsonl_run_data_source_param" -> "__future__" [];
	"openai.types.evals.create_eval_jsonl_run_data_source_param" -> "typing" [];
	"openai.types.evals.create_eval_jsonl_run_data_source_param" -> "typing_extensions" [];
	"openai.types.evals.run_list_params" -> "__future__" [];
	"openai.types.evals.run_list_params" -> "typing_extensions" [];
	"openai.types.evals" -> "__future__" [];
	"openai.resources.evals.runs.output_items" -> "__future__" [];
	"openai.resources.evals.runs.output_items" -> "typing_extensions" [];
	"openai.resources.evals.runs.output_items" -> "openai" [];
	"openai.types.evals.runs.output_item_retrieve_response" -> "builtins" [];
	"openai.types.evals.runs.output_item_retrieve_response" -> "typing" [];
	"openai.types.evals.runs.output_item_retrieve_response" -> "typing_extensions" [];
	"openai.types.evals.runs.output_item_list_response" -> "builtins" [];
	"openai.types.evals.runs.output_item_list_response" -> "typing" [];
	"openai.types.evals.runs.output_item_list_response" -> "typing_extensions" [];
	"openai.types.evals.runs.output_item_list_params" -> "__future__" [];
	"openai.types.evals.runs.output_item_list_params" -> "typing_extensions" [];
	"openai.types.evals.runs" -> "__future__" [];
	"openai.types.eval_update_params" -> "__future__" [];
	"openai.types.eval_update_params" -> "typing" [];
	"openai.types.eval_update_params" -> "typing_extensions" [];
	"openai.types.eval_create_params" -> "__future__" [];
	"openai.types.eval_create_params" -> "typing" [];
	"openai.types.eval_create_params" -> "typing_extensions" [];
	"openai.types.eval_text_similarity_grader_param" -> "__future__" [];
	"openai.types.eval_text_similarity_grader_param" -> "typing_extensions" [];
	"openai.types.eval_string_check_grader_param" -> "__future__" [];
	"openai.types.eval_string_check_grader_param" -> "typing_extensions" [];
	"openai.types.eval_list_params" -> "__future__" [];
	"openai.types.eval_list_params" -> "typing_extensions" [];
	"openai.resources.audio.transcriptions" -> "__future__" [];
	"openai.resources.audio.transcriptions" -> "logging" [];
	"openai.resources.audio.transcriptions" -> "typing" [];
	"openai.resources.audio.transcriptions" -> "typing_extensions" [];
	"openai.resources.audio.transcriptions" -> "openai" [];
	"openai.types.audio.transcription_create_response" -> "typing" [];
	"openai.types.audio.transcription_create_response" -> "typing_extensions" [];
	"openai.types.audio.transcription_stream_event" -> "typing" [];
	"openai.types.audio.transcription_stream_event" -> "typing_extensions" [];
	"openai.types.audio.transcription_text_delta_event" -> "typing" [];
	"openai.types.audio.transcription_text_delta_event" -> "typing_extensions" [];
	"openai.types.audio.transcription_text_done_event" -> "typing" [];
	"openai.types.audio.transcription_text_done_event" -> "typing_extensions" [];
	"openai.types.audio.transcription_verbose" -> "typing" [];
	"openai.types.audio.transcription_segment" -> "typing" [];
	"openai.types.audio.transcription_include" -> "typing_extensions" [];
	"openai.types.audio_response_format" -> "typing_extensions" [];
	"openai.types.audio.transcription" -> "typing" [];
	"openai.types.audio_model" -> "typing_extensions" [];
	"openai.types.audio.transcription_create_params" -> "__future__" [];
	"openai.types.audio.transcription_create_params" -> "typing" [];
	"openai.types.audio.transcription_create_params" -> "typing_extensions" [];
	"openai.types.audio" -> "__future__" [];
	"openai.types.audio.translation_create_response" -> "typing" [];
	"openai.types.audio.translation_create_response" -> "typing_extensions" [];
	"openai.types.audio.translation_create_params" -> "__future__" [];
	"openai.types.audio.translation_create_params" -> "typing" [];
	"openai.types.audio.translation_create_params" -> "typing_extensions" [];
	"openai.types.audio.speech_create_params" -> "__future__" [];
	"openai.types.audio.speech_create_params" -> "typing" [];
	"openai.types.audio.speech_create_params" -> "typing_extensions" [];
	"openai.types.audio.translation_verbose" -> "typing" [];
	"openai.types.audio.speech_model" -> "typing_extensions" [];
	"openai.resources.audio.translations" -> "__future__" [];
	"openai.resources.audio.translations" -> "logging" [];
	"openai.resources.audio.translations" -> "typing" [];
	"openai.resources.audio.translations" -> "typing_extensions" [];
	"openai.resources.audio.translations" -> "openai" [];
	"openai.resources.audio.speech" -> "__future__" [];
	"openai.resources.audio.speech" -> "typing" [];
	"openai.resources.audio.speech" -> "typing_extensions" [];
	"openai.resources.audio.speech" -> "openai" [];
	"openai.resources.audio.audio" -> "__future__" [];
	"openai.resources.chat.completions.completions" -> "__future__" [];
	"openai.resources.chat.completions.completions" -> "inspect" [];
	"openai.resources.chat.completions.completions" -> "typing" [];
	"openai.resources.chat.completions.completions" -> "typing_extensions" [];
	"openai.resources.chat.completions.completions" -> "pydantic" [];
	"openai.resources.chat.completions.completions" -> "openai" [];
	"openai.resources.chat.completions.messages" -> "__future__" [];
	"openai.resources.chat.completions.messages" -> "typing_extensions" [];
	"openai.resources.chat.completions.messages" -> "openai" [];
	"openai.types.chat.completions.message_list_params" -> "__future__" [];
	"openai.types.chat.completions.message_list_params" -> "typing_extensions" [];
	"openai.types.chat.completions" -> "__future__" [];
	"openai.resources.chat.chat" -> "__future__" [];
	"openai.resources.beta.assistants" -> "__future__" [];
	"openai.resources.beta.assistants" -> "typing" [];
	"openai.resources.beta.assistants" -> "typing_extensions" [];
	"openai.resources.beta.assistants" -> "openai" [];
	"openai.types.beta.assistant_response_format_option_param" -> "__future__" [];
	"openai.types.beta.assistant_response_format_option_param" -> "typing" [];
	"openai.types.beta.assistant_response_format_option_param" -> "typing_extensions" [];
	"openai.types.beta.assistant_tool_param" -> "__future__" [];
	"openai.types.beta.assistant_tool_param" -> "typing" [];
	"openai.types.beta.assistant_tool_param" -> "typing_extensions" [];
	"openai.types.beta.code_interpreter_tool_param" -> "__future__" [];
	"openai.types.beta.code_interpreter_tool_param" -> "typing_extensions" [];
	"openai.types.beta.file_search_tool_param" -> "__future__" [];
	"openai.types.beta.file_search_tool_param" -> "typing_extensions" [];
	"openai.types.beta.function_tool_param" -> "__future__" [];
	"openai.types.beta.function_tool_param" -> "typing_extensions" [];
	"openai.types.beta.assistant_deleted" -> "typing_extensions" [];
	"openai.types.beta.assistant" -> "typing" [];
	"openai.types.beta.assistant" -> "typing_extensions" [];
	"openai.types.beta.assistant_response_format_option" -> "typing" [];
	"openai.types.beta.assistant_response_format_option" -> "typing_extensions" [];
	"openai.types.beta.assistant_tool" -> "typing" [];
	"openai.types.beta.assistant_tool" -> "typing_extensions" [];
	"openai.types.beta.code_interpreter_tool" -> "typing_extensions" [];
	"openai.types.beta.file_search_tool" -> "typing" [];
	"openai.types.beta.file_search_tool" -> "typing_extensions" [];
	"openai.types.beta.function_tool" -> "typing_extensions" [];
	"openai.types.beta.assistant_update_params" -> "__future__" [];
	"openai.types.beta.assistant_update_params" -> "typing" [];
	"openai.types.beta.assistant_update_params" -> "typing_extensions" [];
	"openai.types.beta.assistant_create_params" -> "__future__" [];
	"openai.types.beta.assistant_create_params" -> "typing" [];
	"openai.types.beta.assistant_create_params" -> "typing_extensions" [];
	"openai.types.beta.assistant_list_params" -> "__future__" [];
	"openai.types.beta.assistant_list_params" -> "typing_extensions" [];
	"openai.types.beta" -> "__future__" [];
	"openai.types.beta.assistant_tool_choice_function_param" -> "__future__" [];
	"openai.types.beta.assistant_tool_choice_function_param" -> "typing_extensions" [];
	"openai.types.beta.assistant_tool_choice_option_param" -> "__future__" [];
	"openai.types.beta.assistant_tool_choice_option_param" -> "typing" [];
	"openai.types.beta.assistant_tool_choice_option_param" -> "typing_extensions" [];
	"openai.types.beta.thread_create_and_run_params" -> "__future__" [];
	"openai.types.beta.thread_create_and_run_params" -> "typing" [];
	"openai.types.beta.thread_create_and_run_params" -> "typing_extensions" [];
	"openai.types.beta.threads.message_content_part_param" -> "__future__" [];
	"openai.types.beta.threads.message_content_part_param" -> "typing" [];
	"openai.types.beta.threads.message_content_part_param" -> "typing_extensions" [];
	"openai.types.beta.threads" -> "__future__" [];
	"openai.types.beta.threads.required_action_function_tool_call" -> "typing_extensions" [];
	"openai.types.beta.threads.run_submit_tool_outputs_params" -> "__future__" [];
	"openai.types.beta.threads.run_submit_tool_outputs_params" -> "typing" [];
	"openai.types.beta.threads.run_submit_tool_outputs_params" -> "typing_extensions" [];
	"openai.types.beta.threads.file_citation_delta_annotation" -> "typing" [];
	"openai.types.beta.threads.file_citation_delta_annotation" -> "typing_extensions" [];
	"openai.types.beta.threads.file_path_delta_annotation" -> "typing" [];
	"openai.types.beta.threads.file_path_delta_annotation" -> "typing_extensions" [];
	"openai.types.beta.threads.image_file_content_block" -> "typing_extensions" [];
	"openai.types.beta.threads.file_citation_annotation" -> "typing_extensions" [];
	"openai.types.beta.threads.image_url_content_block" -> "typing_extensions" [];
	"openai.types.beta.threads.image_file_delta_block" -> "typing" [];
	"openai.types.beta.threads.image_file_delta_block" -> "typing_extensions" [];
	"openai.types.beta.threads.refusal_content_block" -> "typing_extensions" [];
	"openai.types.beta.threads.message_update_params" -> "__future__" [];
	"openai.types.beta.threads.message_update_params" -> "typing" [];
	"openai.types.beta.threads.message_update_params" -> "typing_extensions" [];
	"openai.types.beta.threads.message_create_params" -> "__future__" [];
	"openai.types.beta.threads.message_create_params" -> "typing" [];
	"openai.types.beta.threads.message_create_params" -> "typing_extensions" [];
	"openai.types.beta.threads.message_content_delta" -> "typing" [];
	"openai.types.beta.threads.message_content_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.image_url_delta_block" -> "typing" [];
	"openai.types.beta.threads.image_url_delta_block" -> "typing_extensions" [];
	"openai.types.beta.threads.file_path_annotation" -> "typing_extensions" [];
	"openai.types.beta.threads.refusal_delta_block" -> "typing" [];
	"openai.types.beta.threads.refusal_delta_block" -> "typing_extensions" [];
	"openai.types.beta.threads.message_list_params" -> "__future__" [];
	"openai.types.beta.threads.message_list_params" -> "typing_extensions" [];
	"openai.types.beta.threads.message_delta_event" -> "typing_extensions" [];
	"openai.types.beta.threads.text_content_block" -> "typing_extensions" [];
	"openai.types.beta.threads.run_update_params" -> "__future__" [];
	"openai.types.beta.threads.run_update_params" -> "typing" [];
	"openai.types.beta.threads.run_update_params" -> "typing_extensions" [];
	"openai.types.beta.threads.run_create_params" -> "__future__" [];
	"openai.types.beta.threads.run_create_params" -> "typing" [];
	"openai.types.beta.threads.run_create_params" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.run_step_include" -> "typing_extensions" [];
	"openai.types.beta.threads.runs" -> "__future__" [];
	"openai.types.beta.threads.runs.code_interpreter_tool_call_delta" -> "typing" [];
	"openai.types.beta.threads.runs.code_interpreter_tool_call_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.message_creation_step_details" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.code_interpreter_output_image" -> "typing" [];
	"openai.types.beta.threads.runs.code_interpreter_output_image" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.run_step_delta_message_delta" -> "typing" [];
	"openai.types.beta.threads.runs.run_step_delta_message_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.file_search_tool_call_delta" -> "typing" [];
	"openai.types.beta.threads.runs.file_search_tool_call_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.code_interpreter_tool_call" -> "typing" [];
	"openai.types.beta.threads.runs.code_interpreter_tool_call" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.function_tool_call_delta" -> "typing" [];
	"openai.types.beta.threads.runs.function_tool_call_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.tool_calls_step_details" -> "typing" [];
	"openai.types.beta.threads.runs.tool_calls_step_details" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.tool_call_delta_object" -> "typing" [];
	"openai.types.beta.threads.runs.tool_call_delta_object" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.file_search_tool_call" -> "typing" [];
	"openai.types.beta.threads.runs.file_search_tool_call" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.code_interpreter_logs" -> "typing" [];
	"openai.types.beta.threads.runs.code_interpreter_logs" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.step_retrieve_params" -> "__future__" [];
	"openai.types.beta.threads.runs.step_retrieve_params" -> "typing" [];
	"openai.types.beta.threads.runs.step_retrieve_params" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.run_step_delta_event" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.function_tool_call" -> "typing" [];
	"openai.types.beta.threads.runs.function_tool_call" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.step_list_params" -> "__future__" [];
	"openai.types.beta.threads.runs.step_list_params" -> "typing" [];
	"openai.types.beta.threads.runs.step_list_params" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.tool_call_delta" -> "typing" [];
	"openai.types.beta.threads.runs.tool_call_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.run_step_delta" -> "typing" [];
	"openai.types.beta.threads.runs.run_step_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.tool_call" -> "typing" [];
	"openai.types.beta.threads.runs.tool_call" -> "typing_extensions" [];
	"openai.types.beta.threads.runs.run_step" -> "typing" [];
	"openai.types.beta.threads.runs.run_step" -> "typing_extensions" [];
	"openai.types.beta.threads.text_delta_block" -> "typing" [];
	"openai.types.beta.threads.text_delta_block" -> "typing_extensions" [];
	"openai.types.beta.threads.image_file_param" -> "__future__" [];
	"openai.types.beta.threads.image_file_param" -> "typing_extensions" [];
	"openai.types.beta.threads.image_file_delta" -> "typing" [];
	"openai.types.beta.threads.image_file_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.annotation_delta" -> "typing" [];
	"openai.types.beta.threads.annotation_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.run_list_params" -> "__future__" [];
	"openai.types.beta.threads.run_list_params" -> "typing_extensions" [];
	"openai.types.beta.threads.message_deleted" -> "typing_extensions" [];
	"openai.types.beta.threads.message_content" -> "typing" [];
	"openai.types.beta.threads.message_content" -> "typing_extensions" [];
	"openai.types.beta.threads.image_url_param" -> "__future__" [];
	"openai.types.beta.threads.image_url_param" -> "typing_extensions" [];
	"openai.types.beta.threads.image_url_delta" -> "typing" [];
	"openai.types.beta.threads.image_url_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.message_delta" -> "typing" [];
	"openai.types.beta.threads.message_delta" -> "typing_extensions" [];
	"openai.types.beta.threads.text_delta" -> "typing" [];
	"openai.types.beta.threads.run_status" -> "typing_extensions" [];
	"openai.types.beta.threads.image_file" -> "typing" [];
	"openai.types.beta.threads.image_file" -> "typing_extensions" [];
	"openai.types.beta.threads.annotation" -> "typing" [];
	"openai.types.beta.threads.annotation" -> "typing_extensions" [];
	"openai.types.beta.threads.image_url" -> "typing" [];
	"openai.types.beta.threads.image_url" -> "typing_extensions" [];
	"openai.types.beta.threads.message" -> "typing" [];
	"openai.types.beta.threads.message" -> "typing_extensions" [];
	"openai.types.beta.threads.text" -> "typing" [];
	"openai.types.beta.threads.run" -> "typing" [];
	"openai.types.beta.threads.run" -> "typing_extensions" [];
	"openai.types.beta.threads.image_file_content_block_param" -> "__future__" [];
	"openai.types.beta.threads.image_file_content_block_param" -> "typing_extensions" [];
	"openai.types.beta.threads.image_url_content_block_param" -> "__future__" [];
	"openai.types.beta.threads.image_url_content_block_param" -> "typing_extensions" [];
	"openai.types.beta.threads.text_content_block_param" -> "__future__" [];
	"openai.types.beta.threads.text_content_block_param" -> "typing_extensions" [];
	"openai.types.beta.assistant_tool_choice_option" -> "typing" [];
	"openai.types.beta.assistant_tool_choice_option" -> "typing_extensions" [];
	"openai.types.beta.assistant_tool_choice_param" -> "__future__" [];
	"openai.types.beta.assistant_tool_choice_param" -> "typing_extensions" [];
	"openai.types.beta.assistant_stream_event" -> "typing" [];
	"openai.types.beta.assistant_stream_event" -> "typing_extensions" [];
	"openai.types.beta.assistant_tool_choice" -> "typing" [];
	"openai.types.beta.assistant_tool_choice" -> "typing_extensions" [];
	"openai.types.beta.thread_update_params" -> "__future__" [];
	"openai.types.beta.thread_update_params" -> "typing" [];
	"openai.types.beta.thread_update_params" -> "typing_extensions" [];
	"openai.types.beta.thread_create_params" -> "__future__" [];
	"openai.types.beta.thread_create_params" -> "typing" [];
	"openai.types.beta.thread_create_params" -> "typing_extensions" [];
	"openai.types.beta.thread_deleted" -> "typing_extensions" [];
	"openai.types.beta.thread" -> "typing" [];
	"openai.types.beta.thread" -> "typing_extensions" [];
	"openai.resources.beta.threads.messages" -> "__future__" [];
	"openai.resources.beta.threads.messages" -> "typing" [];
	"openai.resources.beta.threads.messages" -> "typing_extensions" [];
	"openai.resources.beta.threads.messages" -> "openai" [];
	"openai.resources.beta.threads.threads" -> "__future__" [];
	"openai.resources.beta.threads.threads" -> "typing" [];
	"openai.resources.beta.threads.threads" -> "functools" [];
	"openai.resources.beta.threads.threads" -> "typing_extensions" [];
	"openai.resources.beta.threads.threads" -> "openai" [];
	"openai.resources.beta.threads.runs.runs" -> "__future__" [];
	"openai.resources.beta.threads.runs.runs" -> "typing_extensions" [];
	"openai.resources.beta.threads.runs.runs" -> "typing" [];
	"openai.resources.beta.threads.runs.runs" -> "functools" [];
	"openai.resources.beta.threads.runs.runs" -> "openai" [];
	"openai.resources.beta.threads.runs.steps" -> "__future__" [];
	"openai.resources.beta.threads.runs.steps" -> "typing" [];
	"openai.resources.beta.threads.runs.steps" -> "typing_extensions" [];
	"openai.resources.beta.threads.runs.steps" -> "openai" [];
	"openai.resources.beta.beta" -> "__future__" [];
	"openai.resources.beta.realtime.realtime" -> "__future__" [];
	"openai.resources.beta.realtime.realtime" -> "json" [];
	"openai.resources.beta.realtime.realtime" -> "logging" [];
	"openai.resources.beta.realtime.realtime" -> "types" [];
	"openai.resources.beta.realtime.realtime" -> "typing" [];
	"openai.resources.beta.realtime.realtime" -> "typing_extensions" [];
	"openai.resources.beta.realtime.realtime" -> "pydantic" [];
	"openai.resources.beta.realtime.realtime" -> "'websockets.sync'" [];
	"openai.resources.beta.realtime.realtime" -> "'websockets.asyncio'" [];
	"openai.resources.beta.realtime.realtime" -> "'websockets.exceptions'" [];
	"openai.types.beta.realtime.realtime_client_event_param" -> "__future__" [];
	"openai.types.beta.realtime.realtime_client_event_param" -> "typing" [];
	"openai.types.beta.realtime.realtime_client_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_truncate_event_param" -> "__future__" [];
	"openai.types.beta.realtime.conversation_item_truncate_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_retrieve_event_param" -> "__future__" [];
	"openai.types.beta.realtime.conversation_item_retrieve_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_commit_event_param" -> "__future__" [];
	"openai.types.beta.realtime.input_audio_buffer_commit_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_append_event_param" -> "__future__" [];
	"openai.types.beta.realtime.input_audio_buffer_append_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_clear_event_param" -> "__future__" [];
	"openai.types.beta.realtime.input_audio_buffer_clear_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_delete_event_param" -> "__future__" [];
	"openai.types.beta.realtime.conversation_item_delete_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_create_event_param" -> "__future__" [];
	"openai.types.beta.realtime.conversation_item_create_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_cancel_event_param" -> "__future__" [];
	"openai.types.beta.realtime.response_cancel_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_param" -> "__future__" [];
	"openai.types.beta.realtime.conversation_item_param" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_content_param" -> "__future__" [];
	"openai.types.beta.realtime.conversation_item_content_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.realtime_server_event" -> "typing" [];
	"openai.types.beta.realtime.realtime_server_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_completed_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_completed_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_failed_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_failed_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_delta_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_delta_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_function_call_arguments_delta_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_function_call_arguments_done_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_speech_stopped_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_speech_started_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_audio_transcript_delta_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_audio_transcript_done_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.transcription_session_updated_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.transcription_session" -> "typing" [];
	"openai.types.beta.realtime.transcription_session" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_committed_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_content_part_added_event" -> "typing" [];
	"openai.types.beta.realtime.response_content_part_added_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_truncated_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_output_item_added_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_content_part_done_event" -> "typing" [];
	"openai.types.beta.realtime.response_content_part_done_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_cleared_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_output_item_done_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_deleted_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_created_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_audio_delta_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_created_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_created_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_text_delta_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_audio_done_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.rate_limits_updated_event" -> "typing" [];
	"openai.types.beta.realtime.rate_limits_updated_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_text_done_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_created_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.realtime_response" -> "typing" [];
	"openai.types.beta.realtime.realtime_response" -> "typing_extensions" [];
	"openai.types.beta.realtime.realtime_response_status" -> "typing" [];
	"openai.types.beta.realtime.realtime_response_status" -> "typing_extensions" [];
	"openai.types.beta.realtime.realtime_response_usage" -> "typing" [];
	"openai.types.beta.realtime.session_updated_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.session" -> "typing" [];
	"openai.types.beta.realtime.session" -> "typing_extensions" [];
	"openai.types.beta.realtime.session_created_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_done_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item" -> "typing" [];
	"openai.types.beta.realtime.conversation_item" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_content" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_content" -> "typing_extensions" [];
	"openai.types.beta.realtime.error_event" -> "typing" [];
	"openai.types.beta.realtime.error_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.realtime_client_event" -> "typing" [];
	"openai.types.beta.realtime.realtime_client_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_truncate_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_truncate_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_retrieve_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_retrieve_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_commit_event" -> "typing" [];
	"openai.types.beta.realtime.input_audio_buffer_commit_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_append_event" -> "typing" [];
	"openai.types.beta.realtime.input_audio_buffer_append_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.input_audio_buffer_clear_event" -> "typing" [];
	"openai.types.beta.realtime.input_audio_buffer_clear_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_delete_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_delete_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_create_event" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_create_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.transcription_session_update" -> "typing" [];
	"openai.types.beta.realtime.transcription_session_update" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_create_event" -> "typing" [];
	"openai.types.beta.realtime.response_create_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_with_reference" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_with_reference" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_cancel_event" -> "typing" [];
	"openai.types.beta.realtime.response_cancel_event" -> "typing_extensions" [];
	"openai.types.beta.realtime.session_update_event" -> "typing" [];
	"openai.types.beta.realtime.session_update_event" -> "typing_extensions" [];
	"openai.types.websocket_connection_options" -> "__future__" [];
	"openai.types.websocket_connection_options" -> "typing" [];
	"openai.types.websocket_connection_options" -> "typing_extensions" [];
	"openai.types.websocket_connection_options" -> "'websockets.extensions'" [];
	"openai.resources.beta.realtime.transcription_sessions" -> "__future__" [];
	"openai.resources.beta.realtime.transcription_sessions" -> "typing" [];
	"openai.resources.beta.realtime.transcription_sessions" -> "typing_extensions" [];
	"openai.resources.beta.realtime.transcription_sessions" -> "openai" [];
	"openai.types.beta.realtime.transcription_session_create_params" -> "__future__" [];
	"openai.types.beta.realtime.transcription_session_create_params" -> "typing" [];
	"openai.types.beta.realtime.transcription_session_create_params" -> "typing_extensions" [];
	"openai.types.beta.realtime.transcription_session_update_param" -> "__future__" [];
	"openai.types.beta.realtime.transcription_session_update_param" -> "typing" [];
	"openai.types.beta.realtime.transcription_session_update_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.response_create_event_param" -> "__future__" [];
	"openai.types.beta.realtime.response_create_event_param" -> "typing" [];
	"openai.types.beta.realtime.response_create_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.conversation_item_with_reference_param" -> "__future__" [];
	"openai.types.beta.realtime.conversation_item_with_reference_param" -> "typing" [];
	"openai.types.beta.realtime.conversation_item_with_reference_param" -> "typing_extensions" [];
	"openai.types.beta.realtime.session_update_event_param" -> "__future__" [];
	"openai.types.beta.realtime.session_update_event_param" -> "typing" [];
	"openai.types.beta.realtime.session_update_event_param" -> "typing_extensions" [];
	"openai.types.beta.realtime" -> "__future__" [];
	"openai.types.beta.realtime.session_create_response" -> "typing" [];
	"openai.types.beta.realtime.session_create_response" -> "typing_extensions" [];
	"openai.types.beta.realtime.realtime_connect_params" -> "__future__" [];
	"openai.types.beta.realtime.realtime_connect_params" -> "typing_extensions" [];
	"openai.types.beta.realtime.session_create_params" -> "__future__" [];
	"openai.types.beta.realtime.session_create_params" -> "typing" [];
	"openai.types.beta.realtime.session_create_params" -> "typing_extensions" [];
	"openai.resources.beta.realtime.sessions" -> "__future__" [];
	"openai.resources.beta.realtime.sessions" -> "typing" [];
	"openai.resources.beta.realtime.sessions" -> "typing_extensions" [];
	"openai.resources.beta.realtime.sessions" -> "openai" [];
	"openai.resources.beta.chat.chat" -> "__future__" [];
	"openai.resources.beta.chat.completions" -> "__future__" [];
	"openai.resources.beta.chat.completions" -> "typing" [];
	"openai.resources.beta.chat.completions" -> "functools" [];
	"openai.resources.beta.chat.completions" -> "typing_extensions" [];
	"openai.resources.beta.chat.completions" -> "openai" [];
	"openai.lib.streaming.chat._completions" -> "__future__" [];
	"openai.lib.streaming.chat._completions" -> "inspect" [];
	"openai.lib.streaming.chat._completions" -> "types" [];
	"openai.lib.streaming.chat._completions" -> "typing" [];
	"openai.lib.streaming.chat._completions" -> "typing_extensions" [];
	"openai.lib.streaming.chat._completions" -> "jiter" [];
	"openai.lib.streaming._deltas" -> "__future__" [];
	"openai.lib.streaming.chat._events" -> "typing" [];
	"openai.lib.streaming.chat._events" -> "typing_extensions" [];
	"openai.lib.streaming.chat._types" -> "__future__" [];
	"openai.lib.streaming.chat._types" -> "typing_extensions" [];
	"openai.lib.streaming._assistants" -> "__future__" [];
	"openai.lib.streaming._assistants" -> "asyncio" [];
	"openai.lib.streaming._assistants" -> "types" [];
	"openai.lib.streaming._assistants" -> "typing" [];
	"openai.lib.streaming._assistants" -> "typing_extensions" [];
	"openai.lib._old_api" -> "__future__" [];
	"openai.lib._old_api" -> "typing" [];
	"openai.lib._old_api" -> "typing_extensions" [];
	"openai.lib.azure" -> "__future__" [];
	"openai.lib.azure" -> "os" [];
	"openai.lib.azure" -> "inspect" [];
	"openai.lib.azure" -> "typing" [];
	"openai.lib.azure" -> "typing_extensions" [];
	"openai._utils._logs" -> "os" [];
	"openai._utils._logs" -> "logging" [];
	"openai._utils._logs" -> "typing_extensions" [];
	"openai._base_client" -> "__future__" [];
	"openai._base_client" -> "sys" [];
	"openai._base_client" -> "json" [];
	"openai._base_client" -> "time" [];
	"openai._base_client" -> "uuid" [];
	"openai._base_client" -> "email" [];
	"openai._base_client" -> "asyncio" [];
	"openai._base_client" -> "inspect" [];
	"openai._base_client" -> "logging" [];
	"openai._base_client" -> "platform" [];
	"openai._base_client" -> "types" [];
	"openai._base_client" -> "random" [];
	"openai._base_client" -> "typing" [];
	"openai._base_client" -> "typing_extensions" [];
	"openai._base_client" -> "anyio" [];
	"openai._base_client" -> "distro" [];
	"openai._base_client" -> "pydantic" [];
	"openai._qs" -> "__future__" [];
	"openai._qs" -> "typing" [];
	"openai._qs" -> "typing_extensions" [];
	"distro.distro" -> "argparse" [];
	"distro.distro" -> "json" [];
	"distro.distro" -> "logging" [];
	"distro.distro" -> "os" [];
	"distro.distro" -> "re" [];
	"distro.distro" -> "shlex" [];
	"distro.distro" -> "subprocess" [];
	"distro.distro" -> "sys" [];
	"distro.distro" -> "warnings" [];
	"distro.distro" -> "typing" [];
	"distro.distro" -> "functools" [];
	"openai._exceptions" -> "__future__" [];
	"openai._exceptions" -> "typing" [];
	"openai._exceptions" -> "typing_extensions" [];
	"openai._response" -> "__future__" [];
	"openai._response" -> "os" [];
	"openai._response" -> "inspect" [];
	"openai._response" -> "logging" [];
	"openai._response" -> "datetime" [];
	"openai._response" -> "functools" [];
	"openai._response" -> "types" [];
	"openai._response" -> "typing" [];
	"openai._response" -> "typing_extensions" [];
	"openai._response" -> "anyio" [];
	"openai._response" -> "pydantic" [];
	"openai._models" -> "__future__" [];
	"openai._models" -> "os" [];
	"openai._models" -> "inspect" [];
	"openai._models" -> "typing" [];
	"openai._models" -> "datetime" [];
	"openai._models" -> "typing_extensions" [];
	"openai._models" -> "pydantic" [];
	"openai._client" -> "__future__" [];
	"openai._client" -> "os" [];
	"openai._client" -> "typing" [];
	"openai._client" -> "typing_extensions" [];
	"openai._utils._reflection" -> "__future__" [];
	"openai._utils._reflection" -> "inspect" [];
	"openai._utils._reflection" -> "typing" [];
	"openai._utils._streams" -> "typing" [];
	"openai._utils._streams" -> "typing_extensions" [];
	"openai._utils._proxy" -> "__future__" [];
	"openai._utils._proxy" -> "abc" [];
	"openai._utils._proxy" -> "typing" [];
	"openai._utils._proxy" -> "typing_extensions" [];
	"openai._utils._sync" -> "__future__" [];
	"openai._utils._sync" -> "sys" [];
	"openai._utils._sync" -> "asyncio" [];
	"openai._utils._sync" -> "functools" [];
	"openai._utils._sync" -> "contextvars" [];
	"openai._utils._sync" -> "typing" [];
	"openai._utils._sync" -> "typing_extensions" [];
	"openai._utils._sync" -> "anyio" [];
	"openai._utils._sync" -> "sniffio" [];
	"openai._types" -> "__future__" [];
	"openai._types" -> "os" [];
	"openai._types" -> "typing" [];
	"openai._types" -> "typing_extensions" [];
	"openai._types" -> "pydantic" [];
	"openai.types" -> "__future__" [];
	"openai.types.file_content" -> "typing_extensions" [];
	"openai._legacy_response" -> "__future__" [];
	"openai._legacy_response" -> "os" [];
	"openai._legacy_response" -> "inspect" [];
	"openai._legacy_response" -> "logging" [];
	"openai._legacy_response" -> "datetime" [];
	"openai._legacy_response" -> "functools" [];
	"openai._legacy_response" -> "typing" [];
	"openai._legacy_response" -> "typing_extensions" [];
	"openai._legacy_response" -> "anyio" [];
	"openai._legacy_response" -> "pydantic" [];
	"langchain_community.utils.openai" -> "__future__" [];
	"langchain_community.utils.openai" -> "functools" [];
	"langchain_core.language_models.llms" -> "__future__" [];
	"langchain_core.language_models.llms" -> "asyncio" [];
	"langchain_core.language_models.llms" -> "functools" [];
	"langchain_core.language_models.llms" -> "inspect" [];
	"langchain_core.language_models.llms" -> "json" [];
	"langchain_core.language_models.llms" -> "logging" [];
	"langchain_core.language_models.llms" -> "warnings" [];
	"langchain_core.language_models.llms" -> "abc" [];
	"langchain_core.language_models.llms" -> "pathlib" [];
	"langchain_core.language_models.llms" -> "typing" [];
	"langchain_core.language_models.llms" -> "yaml" [];
	"langchain_core.language_models.llms" -> "pydantic" [];
	"langchain_core.language_models.llms" -> "tenacity" [];
	"langchain_core.language_models.llms" -> "typing_extensions" [];
	"langchain_core.language_models.llms" -> "uuid" [];
	"langchain_core.language_models.base" -> "__future__" [];
	"langchain_core.language_models.base" -> "warnings" [];
	"langchain_core.language_models.base" -> "abc" [];
	"langchain_core.language_models.base" -> "functools" [];
	"langchain_core.language_models.base" -> "typing" [];
	"langchain_core.language_models.base" -> "pydantic" [];
	"langchain_core.language_models.base" -> "typing_extensions" [];
	"langchain_core.language_models.base" -> "transformers" [];
	"langchain_core.globals" -> "warnings" [];
	"langchain_core.globals" -> "typing" [];
	"langchain_core.globals" -> "langchain" [];
	"langchain_community.tools.tavily_search.tool" -> "typing" [];
	"langchain_community.tools.tavily_search.tool" -> "pydantic" [];
	"langchain_community.utilities.tavily_search" -> "json" [];
	"langchain_community.utilities.tavily_search" -> "typing" [];
	"langchain_community.utilities.tavily_search" -> "aiohttp" [];
	"langchain_community.utilities.tavily_search" -> "requests" [];
	"langchain_community.utilities.tavily_search" -> "pydantic" [];
	"langchain_community.tools.steamship_image_generation.tool" -> "__future__" [];
	"langchain_community.tools.steamship_image_generation.tool" -> "enum" [];
	"langchain_community.tools.steamship_image_generation.tool" -> "typing" [];
	"langchain_community.tools.steamship_image_generation.tool" -> "pydantic" [];
	"langchain_community.tools.steamship_image_generation.tool" -> "steamship" [];
	"langchain_community.tools.steamship_image_generation.utils" -> "__future__" [];
	"langchain_community.tools.steamship_image_generation.utils" -> "uuid" [];
	"langchain_community.tools.steamship_image_generation.utils" -> "typing" [];
	"langchain_community.tools.steamship_image_generation.utils" -> "steamship" [];
	"langchain_community.tools.steamship_image_generation.utils" -> "'steamship.data'" [];
	"langchain_community.tools.steamship_image_generation.utils" -> "'steamship.utils'" [];
	"langchain_community.tools.steam.tool" -> "typing" [];
	"langchain_community.utilities.steam" -> "typing" [];
	"langchain_community.utilities.steam" -> "pydantic" [];
	"langchain_community.utilities.steam" -> "steam" [];
	"langchain_community.utilities.steam" -> "decouple" [];
	"langchain_community.utilities.steam" -> "bs4" [];
	"langchain_community.utilities.steam" -> "steamspypi" [];
	"langchain_community.tools.stackexchange.tool" -> "typing" [];
	"langchain_community.utilities.stackexchange" -> "html" [];
	"langchain_community.utilities.stackexchange" -> "typing" [];
	"langchain_community.utilities.stackexchange" -> "pydantic" [];
	"langchain_community.utilities.stackexchange" -> "stackapi" [];
	"langchain_community.tools.sql_database.tool" -> "typing" [];
	"langchain_community.tools.sql_database.tool" -> "pydantic" [];
	"langchain_community.utilities.sql_database" -> "__future__" [];
	"langchain_community.utilities.sql_database" -> "re" [];
	"langchain_community.utilities.sql_database" -> "typing" [];
	"langchain_community.utilities.sql_database" -> "sqlalchemy" [];
	"langchain_community.utilities.sql_database" -> "databricks" [];
	"langchain_community.utilities.sql_database" -> "dbruntime" [];
	"langchain_community.utilities.sql_database" -> "cnosdb_connector" [];
	"langchain_community.tools.spark_sql.tool" -> "typing" [];
	"langchain_community.tools.spark_sql.tool" -> "pydantic" [];
	"langchain_community.utilities.spark_sql" -> "__future__" [];
	"langchain_community.utilities.spark_sql" -> "typing" [];
	"langchain_community.utilities.spark_sql" -> "'pyspark.sql'" [];
	"langchain_community.tools.sleep.tool" -> "asyncio" [];
	"langchain_community.tools.sleep.tool" -> "time" [];
	"langchain_community.tools.sleep.tool" -> "typing" [];
	"langchain_community.tools.sleep.tool" -> "pydantic" [];
	"langchain_community.tools.slack.send_message" -> "typing" [];
	"langchain_community.tools.slack.send_message" -> "pydantic" [];
	"langchain_community.tools.slack.utils" -> "__future__" [];
	"langchain_community.tools.slack.utils" -> "logging" [];
	"langchain_community.tools.slack.utils" -> "os" [];
	"langchain_community.tools.slack.utils" -> "typing" [];
	"langchain_community.tools.slack.utils" -> "slack_sdk" [];
	"langchain_community.tools.slack.base" -> "__future__" [];
	"langchain_community.tools.slack.base" -> "typing" [];
	"langchain_community.tools.slack.base" -> "pydantic" [];
	"langchain_community.tools.slack.base" -> "slack_sdk" [];
	"langchain_community.tools.slack.schedule_message" -> "logging" [];
	"langchain_community.tools.slack.schedule_message" -> "datetime" [];
	"langchain_community.tools.slack.schedule_message" -> "typing" [];
	"langchain_community.tools.slack.schedule_message" -> "pydantic" [];
	"langchain_community.tools.slack.get_message" -> "json" [];
	"langchain_community.tools.slack.get_message" -> "logging" [];
	"langchain_community.tools.slack.get_message" -> "typing" [];
	"langchain_community.tools.slack.get_message" -> "pydantic" [];
	"langchain_community.tools.slack.get_channel" -> "json" [];
	"langchain_community.tools.slack.get_channel" -> "logging" [];
	"langchain_community.tools.slack.get_channel" -> "typing" [];
	"langchain_community.tools.shell.tool" -> "logging" [];
	"langchain_community.tools.shell.tool" -> "platform" [];
	"langchain_community.tools.shell.tool" -> "warnings" [];
	"langchain_community.tools.shell.tool" -> "typing" [];
	"langchain_community.tools.shell.tool" -> "pydantic" [];
	"langchain_community.tools.shell.tool" -> "langchain_experimental" [];
	"langchain_community.tools.searx_search.tool" -> "typing" [];
	"langchain_community.tools.searx_search.tool" -> "pydantic" [];
	"langchain_community.utilities.searx_search" -> "json" [];
	"langchain_community.utilities.searx_search" -> "typing" [];
	"langchain_community.utilities.searx_search" -> "aiohttp" [];
	"langchain_community.utilities.searx_search" -> "requests" [];
	"langchain_community.utilities.searx_search" -> "pydantic" [];
	"langchain_community.tools.searchapi.tool" -> "typing" [];
	"langchain_community.tools.searchapi.tool" -> "pydantic" [];
	"langchain_community.utilities.searchapi" -> "typing" [];
	"langchain_community.utilities.searchapi" -> "aiohttp" [];
	"langchain_community.utilities.searchapi" -> "requests" [];
	"langchain_community.utilities.searchapi" -> "pydantic" [];
	"langchain_community.tools.scenexplain.tool" -> "typing" [];
	"langchain_community.tools.scenexplain.tool" -> "pydantic" [];
	"langchain_community.utilities.scenexplain" -> "typing" [];
	"langchain_community.utilities.scenexplain" -> "requests" [];
	"langchain_community.utilities.scenexplain" -> "pydantic" [];
	"langchain_community.tools.requests.tool" -> "json" [];
	"langchain_community.tools.requests.tool" -> "typing" [];
	"langchain_community.tools.requests.tool" -> "pydantic" [];
	"langchain_community.utilities.requests" -> "contextlib" [];
	"langchain_community.utilities.requests" -> "typing" [];
	"langchain_community.utilities.requests" -> "aiohttp" [];
	"langchain_community.utilities.requests" -> "requests" [];
	"langchain_community.utilities.requests" -> "pydantic" [];
	"langchain_community.tools.reddit_search.tool" -> "typing" [];
	"langchain_community.tools.reddit_search.tool" -> "pydantic" [];
	"langchain_community.utilities.reddit_search" -> "typing" [];
	"langchain_community.utilities.reddit_search" -> "pydantic" [];
	"langchain_community.utilities.reddit_search" -> "praw" [];
	"langchain_community.tools.pubmed.tool" -> "typing" [];
	"langchain_community.tools.pubmed.tool" -> "pydantic" [];
	"langchain_community.utilities.pubmed" -> "json" [];
	"langchain_community.utilities.pubmed" -> "logging" [];
	"langchain_community.utilities.pubmed" -> "time" [];
	"langchain_community.utilities.pubmed" -> "typing" [];
	"langchain_community.utilities.pubmed" -> "pydantic" [];
	"langchain_community.utilities.pubmed" -> "xmltodict" [];
	"langchain_community.tools.powerbi.tool" -> "logging" [];
	"langchain_community.tools.powerbi.tool" -> "time" [];
	"langchain_community.tools.powerbi.tool" -> "typing" [];
	"langchain_community.tools.powerbi.tool" -> "pydantic" [];
	"langchain_community.utilities.powerbi" -> "__future__" [];
	"langchain_community.utilities.powerbi" -> "asyncio" [];
	"langchain_community.utilities.powerbi" -> "logging" [];
	"langchain_community.utilities.powerbi" -> "os" [];
	"langchain_community.utilities.powerbi" -> "typing" [];
	"langchain_community.utilities.powerbi" -> "aiohttp" [];
	"langchain_community.utilities.powerbi" -> "requests" [];
	"langchain_community.utilities.powerbi" -> "pydantic" [];
	"langchain_community.utilities.powerbi" -> "'azure.core'" [];
	"langchain_community.chat_models.openai" -> "__future__" [];
	"langchain_community.chat_models.openai" -> "logging" [];
	"langchain_community.chat_models.openai" -> "os" [];
	"langchain_community.chat_models.openai" -> "sys" [];
	"langchain_community.chat_models.openai" -> "warnings" [];
	"langchain_community.chat_models.openai" -> "typing" [];
	"langchain_community.chat_models.openai" -> "pydantic" [];
	"langchain_community.chat_models.openai" -> "tiktoken" [];
	"langchain_community.chat_models.openai" -> "openai" [];
	"langchain_community.chat_models" -> "importlib" [];
	"langchain_community.chat_models" -> "typing" [];
	"langchain_community.chat_models.zhipuai" -> "__future__" [];
	"langchain_community.chat_models.zhipuai" -> "json" [];
	"langchain_community.chat_models.zhipuai" -> "logging" [];
	"langchain_community.chat_models.zhipuai" -> "time" [];
	"langchain_community.chat_models.zhipuai" -> "contextlib" [];
	"langchain_community.chat_models.zhipuai" -> "operator" [];
	"langchain_community.chat_models.zhipuai" -> "typing" [];
	"langchain_community.chat_models.zhipuai" -> "pydantic" [];
	"langchain_community.chat_models.zhipuai" -> "httpx_sse" [];
	"langchain_community.chat_models.zhipuai" -> "jwt" [];
	"httpx_sse._models" -> "json" [];
	"httpx_sse._models" -> "typing" [];
	"httpx_sse._api" -> "contextlib" [];
	"httpx_sse._api" -> "typing" [];
	"httpx_sse._decoders" -> "typing" [];
	"langchain_community.chat_models.yuan2" -> "__future__" [];
	"langchain_community.chat_models.yuan2" -> "logging" [];
	"langchain_community.chat_models.yuan2" -> "typing" [];
	"langchain_community.chat_models.yuan2" -> "pydantic" [];
	"langchain_community.chat_models.yuan2" -> "tenacity" [];
	"langchain_community.chat_models.yuan2" -> "openai" [];
	"langchain_community.chat_models.yi" -> "json" [];
	"langchain_community.chat_models.yi" -> "logging" [];
	"langchain_community.chat_models.yi" -> "contextlib" [];
	"langchain_community.chat_models.yi" -> "typing" [];
	"langchain_community.chat_models.yi" -> "requests" [];
	"langchain_community.chat_models.yi" -> "pydantic" [];
	"langchain_community.chat_models.yi" -> "httpx_sse" [];
	"langchain_community.chat_models.yandex" -> "__future__" [];
	"langchain_community.chat_models.yandex" -> "logging" [];
	"langchain_community.chat_models.yandex" -> "typing" [];
	"langchain_community.chat_models.yandex" -> "tenacity" [];
	"langchain_community.chat_models.yandex" -> "grpc" [];
	"langchain_community.chat_models.yandex" -> "'yandex.cloud'" [];
	"langchain_community.chat_models.yandex" -> "asyncio" [];
	"google.protobuf.reflection" -> "warnings" [];
	"google.protobuf.message_factory" -> "warnings" [];
	"google.protobuf.internal.api_implementation" -> "importlib" [];
	"google.protobuf.internal.api_implementation" -> "os" [];
	"google.protobuf.internal.api_implementation" -> "sys" [];
	"google.protobuf.internal.api_implementation" -> "warnings" [];
	"google.protobuf.internal.python_message" -> "datetime" [];
	"google.protobuf.internal.python_message" -> "io" [];
	"google.protobuf.internal.python_message" -> "math" [];
	"google.protobuf.internal.python_message" -> "struct" [];
	"google.protobuf.internal.python_message" -> "sys" [];
	"google.protobuf.internal.python_message" -> "warnings" [];
	"google.protobuf.internal.python_message" -> "weakref" [];
	"google.protobuf.internal.wire_format" -> "struct" [];
	"google.protobuf.internal.well_known_types" -> "calendar" [];
	"google.protobuf.internal.well_known_types" -> "datetime" [];
	"google.protobuf.internal.well_known_types" -> "typing" [];
	"google.protobuf.internal.well_known_types" -> "warnings" [];
	"google.protobuf.internal.type_checkers" -> "struct" [];
	"google.protobuf.internal.type_checkers" -> "numbers" [];
	"google.protobuf.internal.encoder" -> "struct" [];
	"google.protobuf.internal.decoder" -> "math" [];
	"google.protobuf.internal.decoder" -> "numbers" [];
	"google.protobuf.internal.decoder" -> "struct" [];
	"google.protobuf.internal.containers" -> "copy" [];
	"google.protobuf.internal.containers" -> "pickle" [];
	"google.protobuf.internal.containers" -> "typing" [];
	"google.protobuf.text_format" -> "io" [];
	"google.protobuf.text_format" -> "math" [];
	"google.protobuf.text_format" -> "re" [];
	"google.protobuf.text_encoding" -> "re" [];
	"google.protobuf.internal.enum_type_wrapper" -> "sys" [];
	"google.protobuf.symbol_database" -> "warnings" [];
	"google.protobuf.runtime_version" -> "enum" [];
	"google.protobuf.runtime_version" -> "os" [];
	"google.protobuf.runtime_version" -> "warnings" [];
	"google.protobuf.descriptor_pool" -> "collections" [];
	"google.protobuf.descriptor_pool" -> "threading" [];
	"google.protobuf.descriptor_pool" -> "warnings" [];
	"google.protobuf.descriptor_database" -> "warnings" [];
	"google.protobuf.descriptor" -> "abc" [];
	"google.protobuf.descriptor" -> "binascii" [];
	"google.protobuf.descriptor" -> "os" [];
	"google.protobuf.descriptor" -> "threading" [];
	"google.protobuf.descriptor" -> "warnings" [];
	"langchain_community.llms.yandex" -> "__future__" [];
	"langchain_community.llms.yandex" -> "logging" [];
	"langchain_community.llms.yandex" -> "typing" [];
	"langchain_community.llms.yandex" -> "pydantic" [];
	"langchain_community.llms.yandex" -> "tenacity" [];
	"langchain_community.llms.yandex" -> "grpc" [];
	"langchain_community.llms.yandex" -> "yandex" [];
	"langchain_community.llms.yandex" -> "'yandex.cloud'" [];
	"langchain_community.llms.yandex" -> "asyncio" [];
	"langchain_community.llms.utils" -> "re" [];
	"langchain_community.llms.utils" -> "typing" [];
	"langchain_community.chat_models.volcengine_maas" -> "__future__" [];
	"langchain_community.chat_models.volcengine_maas" -> "typing" [];
	"langchain_community.llms.volcengine_maas" -> "__future__" [];
	"langchain_community.llms.volcengine_maas" -> "typing" [];
	"langchain_community.llms.volcengine_maas" -> "pydantic" [];
	"langchain_community.llms.volcengine_maas" -> "volcengine" [];
	"langchain_community.chat_models.vertexai" -> "__future__" [];
	"langchain_community.chat_models.vertexai" -> "base64" [];
	"langchain_community.chat_models.vertexai" -> "logging" [];
	"langchain_community.chat_models.vertexai" -> "re" [];
	"langchain_community.chat_models.vertexai" -> "dataclasses" [];
	"langchain_community.chat_models.vertexai" -> "typing" [];
	"langchain_community.chat_models.vertexai" -> "requests" [];
	"langchain_community.chat_models.vertexai" -> "'vertexai.language_models'" [];
	"langchain_community.chat_models.vertexai" -> "'vertexai.preview'" [];
	"langchain_community.utilities.vertexai" -> "importlib" [];
	"langchain_community.utilities.vertexai" -> "typing" [];
	"langchain_community.utilities.vertexai" -> "vertexai" [];
	"langchain_community.utilities.vertexai" -> "'vertexai.preview'" [];
	"google.api_core.operations_v1.operations_rest_client_async" -> "typing" [];
	"google.auth.aio" -> "logging" [];
	"google.auth.aio._helpers" -> "logging" [];
	"google.auth.aio._helpers" -> "typing" [];
	"google.longrunning.operations_pb2_grpc" -> "grpc" [];
	"google.api_core.operations_v1.abstract_operations_base_client" -> "collections" [];
	"google.api_core.operations_v1.abstract_operations_base_client" -> "os" [];
	"google.api_core.operations_v1.abstract_operations_base_client" -> "re" [];
	"google.api_core.operations_v1.abstract_operations_base_client" -> "typing" [];
	"google.api_core.operations_v1.transports.base" -> "abc" [];
	"google.api_core.operations_v1.transports.base" -> "re" [];
	"google.api_core.operations_v1.transports.base" -> "typing" [];
	"google.api_core.operations_v1.transports.base" -> "grpc" [];
	"google.api_core.operations_v1.transports" -> "collections" [];
	"google.api_core.operations_v1.transports" -> "typing" [];
	"google.api_core.client_options" -> "typing" [];
	"google.api_core.operations_v1.pagers_async" -> "typing" [];
	"google.api_core.operations_v1.pagers_base" -> "typing" [];
	"google.api_core.operations_v1.transports.rest_asyncio" -> "json" [];
	"google.api_core.operations_v1.transports.rest_asyncio" -> "typing" [];
	"google.auth.aio.transport.sessions" -> "asyncio" [];
	"google.auth.aio.transport.sessions" -> "contextlib" [];
	"google.auth.aio.transport.sessions" -> "functools" [];
	"google.auth.aio.transport.sessions" -> "time" [];
	"google.auth.aio.transport.sessions" -> "typing" [];
	"google.auth.aio.transport.aiohttp" -> "asyncio" [];
	"google.auth.aio.transport.aiohttp" -> "logging" [];
	"google.auth.aio.transport.aiohttp" -> "typing" [];
	"google.auth.aio.transport.aiohttp" -> "aiohttp" [];
	"google.auth.aio.transport" -> "abc" [];
	"google.auth.aio.transport" -> "typing" [];
	"google.api_core.operations_v1.transports.rest" -> "typing" [];
	"google.api_core.operations_v1.transports.rest" -> "requests" [];
	"google.api_core.operations_v1.transports.rest" -> "grpc" [];
	"google.api_core.operations_v1.operations_client" -> "functools" [];
	"google.api_core.operations_v1.operations_client" -> "grpc" [];
	"google.api_core.page_iterator" -> "abc" [];
	"google.api_core.operations_v1.operations_async_client" -> "functools" [];
	"google.api_core.operations_v1.operations_async_client" -> "grpc" [];
	"google.api_core.operations_v1.abstract_operations_client" -> "typing" [];
	"google.api_core.operations_v1.abstract_operations_client" -> "grpc" [];
	"google.api_core.operations_v1.pagers" -> "typing" [];
	"google.api_core.page_iterator_async" -> "abc" [];
	"google.api_core.operation_async" -> "functools" [];
	"google.api_core.operation_async" -> "threading" [];
	"google.api_core.future.async_future" -> "asyncio" [];
	"google.api_core.future.base" -> "abc" [];
	"google.api_core.future.polling" -> "abc" [];
	"google.api_core.future._helpers" -> "logging" [];
	"google.api_core.future._helpers" -> "threading" [];
	"google.api_core.operation" -> "functools" [];
	"google.api_core.operation" -> "threading" [];
	"google.api_core.protobuf_helpers" -> "collections" [];
	"google.api_core.protobuf_helpers" -> "copy" [];
	"google.api_core.protobuf_helpers" -> "inspect" [];
	"google.api_core.path_template" -> "__future__" [];
	"google.api_core.path_template" -> "collections" [];
	"google.api_core.path_template" -> "copy" [];
	"google.api_core.path_template" -> "functools" [];
	"google.api_core.path_template" -> "re" [];
	"google.api_core.rest_streaming" -> "typing" [];
	"google.api_core.rest_streaming" -> "proto" [];
	"google.api_core.rest_streaming" -> "requests" [];
	"google.api_core._rest_streaming_base" -> "collections" [];
	"google.api_core._rest_streaming_base" -> "string" [];
	"google.api_core._rest_streaming_base" -> "typing" [];
	"google.api_core._rest_streaming_base" -> "types" [];
	"google.api_core._rest_streaming_base" -> "proto" [];
	"proto.primitives" -> "enum" [];
	"proto.modules" -> "typing" [];
	"proto.modules" -> "collections" [];
	"proto.message" -> "collections" [];
	"proto.message" -> "copy" [];
	"proto.message" -> "re" [];
	"proto.message" -> "typing" [];
	"proto.message" -> "warnings" [];
	"proto.utils" -> "functools" [];
	"proto.marshal.marshal" -> "abc" [];
	"proto.marshal.marshal" -> "enum" [];
	"proto.marshal.collections.repeated" -> "collections" [];
	"proto.marshal.collections.repeated" -> "copy" [];
	"proto.marshal.collections.repeated" -> "typing" [];
	"proto.marshal.collections.maps" -> "collections" [];
	"proto.marshal.rules.dates" -> "datetime" [];
	"proto.marshal.rules.dates" -> "proto" [];
	"proto.marshal.rules.bytes" -> "base64" [];
	"proto.fields" -> "enum" [];
	"proto.enums" -> "enum" [];
	"proto.marshal.rules.enums" -> "typing" [];
	"proto.marshal.rules.enums" -> "enum" [];
	"proto.marshal.rules.enums" -> "warnings" [];
	"proto._package_info" -> "sys" [];
	"proto._file_info" -> "collections" [];
	"proto._file_info" -> "inspect" [];
	"proto._file_info" -> "logging" [];
	"proto.datetime_helpers" -> "calendar" [];
	"proto.datetime_helpers" -> "datetime" [];
	"proto.datetime_helpers" -> "re" [];
	"google.api_core.rest_helpers" -> "functools" [];
	"google.api_core.rest_helpers" -> "operator" [];
	"google.api_core.client_logging" -> "logging" [];
	"google.api_core.client_logging" -> "json" [];
	"google.api_core.client_logging" -> "os" [];
	"google.api_core.client_logging" -> "typing" [];
	"google.api_core.gapic_v1.routing_header" -> "functools" [];
	"google.api_core.gapic_v1.routing_header" -> "enum" [];
	"google.api_core.gapic_v1.method_async" -> "functools" [];
	"google.api_core.gapic_v1.method" -> "enum" [];
	"google.api_core.gapic_v1.method" -> "functools" [];
	"google.api_core.gapic_v1.config" -> "collections" [];
	"google.api_core.gapic_v1.config" -> "grpc" [];
	"google.api_core.grpc_helpers_async" -> "asyncio" [];
	"google.api_core.grpc_helpers_async" -> "functools" [];
	"google.api_core.grpc_helpers_async" -> "typing" [];
	"google.api_core.grpc_helpers_async" -> "grpc" [];
	"google.api_core.grpc_helpers" -> "typing" [];
	"google.api_core.grpc_helpers" -> "collections" [];
	"google.api_core.grpc_helpers" -> "functools" [];
	"google.api_core.grpc_helpers" -> "warnings" [];
	"google.api_core.grpc_helpers" -> "grpc" [];
	"google.api_core.grpc_helpers" -> "grpc_gcp" [];
	"google.auth.transport.grpc" -> "__future__" [];
	"google.auth.transport.grpc" -> "logging" [];
	"google.auth.transport.grpc" -> "os" [];
	"google.auth.transport.grpc" -> "grpc" [];
	"google.api_core.retry.retry_unary_async" -> "__future__" [];
	"google.api_core.retry.retry_unary_async" -> "asyncio" [];
	"google.api_core.retry.retry_unary_async" -> "time" [];
	"google.api_core.retry.retry_unary_async" -> "functools" [];
	"google.api_core.retry.retry_unary_async" -> "typing" [];
	"google.api_core.retry.retry_unary_async" -> "sys" [];
	"google.api_core.retry.retry_unary_async" -> "typing_extensions" [];
	"google.api_core.retry.retry_base" -> "__future__" [];
	"google.api_core.retry.retry_base" -> "logging" [];
	"google.api_core.retry.retry_base" -> "random" [];
	"google.api_core.retry.retry_base" -> "time" [];
	"google.api_core.retry.retry_base" -> "enum" [];
	"google.api_core.retry.retry_base" -> "typing" [];
	"google.api_core.retry.retry_base" -> "sys" [];
	"google.api_core.retry.retry_base" -> "typing_extensions" [];
	"google.api_core.timeout" -> "__future__" [];
	"google.api_core.timeout" -> "datetime" [];
	"google.api_core.timeout" -> "functools" [];
	"google.api_core.retry.retry_streaming_async" -> "__future__" [];
	"google.api_core.retry.retry_streaming_async" -> "typing" [];
	"google.api_core.retry.retry_streaming_async" -> "asyncio" [];
	"google.api_core.retry.retry_streaming_async" -> "time" [];
	"google.api_core.retry.retry_streaming_async" -> "sys" [];
	"google.api_core.retry.retry_streaming_async" -> "functools" [];
	"google.api_core.retry.retry_streaming_async" -> "typing_extensions" [];
	"google.api_core.retry.retry_streaming" -> "__future__" [];
	"google.api_core.retry.retry_streaming" -> "typing" [];
	"google.api_core.retry.retry_streaming" -> "sys" [];
	"google.api_core.retry.retry_streaming" -> "time" [];
	"google.api_core.retry.retry_streaming" -> "functools" [];
	"google.api_core.retry.retry_streaming" -> "typing_extensions" [];
	"google.api_core.retry.retry_unary" -> "__future__" [];
	"google.api_core.retry.retry_unary" -> "functools" [];
	"google.api_core.retry.retry_unary" -> "sys" [];
	"google.api_core.retry.retry_unary" -> "time" [];
	"google.api_core.retry.retry_unary" -> "inspect" [];
	"google.api_core.retry.retry_unary" -> "warnings" [];
	"google.api_core.retry.retry_unary" -> "typing" [];
	"google.api_core.retry.retry_unary" -> "typing_extensions" [];
	"google.api_core.datetime_helpers" -> "calendar" [];
	"google.api_core.datetime_helpers" -> "datetime" [];
	"google.api_core.datetime_helpers" -> "re" [];
	"google.api_core.client_info" -> "platform" [];
	"google.api_core.client_info" -> "typing" [];
	"google.api_core.client_info" -> "grpc" [];
	"google.api_core.exceptions" -> "__future__" [];
	"google.api_core.exceptions" -> "typing" [];
	"google.api_core.exceptions" -> "warnings" [];
	"google.api_core.exceptions" -> "grpc" [];
	"google.api_core.exceptions" -> "grpc_status" [];
	"grpc_status.rpc_status" -> "collections" [];
	"grpc_status.rpc_status" -> "sys" [];
	"grpc_status.rpc_status" -> "grpc" [];
	"grpc_status._common" -> "grpc" [];
	"langchain_community.llms.vertexai" -> "__future__" [];
	"langchain_community.llms.vertexai" -> "typing" [];
	"langchain_community.llms.vertexai" -> "pydantic" [];
	"langchain_community.llms.vertexai" -> "'google.cloud.aiplatform'" [];
	"langchain_community.llms.vertexai" -> "'vertexai.language_models'" [];
	"langchain_community.llms.vertexai" -> "'vertexai.preview'" [];
	"langchain_community.chat_models.tongyi" -> "__future__" [];
	"langchain_community.chat_models.tongyi" -> "asyncio" [];
	"langchain_community.chat_models.tongyi" -> "functools" [];
	"langchain_community.chat_models.tongyi" -> "json" [];
	"langchain_community.chat_models.tongyi" -> "logging" [];
	"langchain_community.chat_models.tongyi" -> "operator" [];
	"langchain_community.chat_models.tongyi" -> "typing" [];
	"langchain_community.chat_models.tongyi" -> "pydantic" [];
	"langchain_community.chat_models.tongyi" -> "tenacity" [];
	"langchain_community.chat_models.tongyi" -> "dashscope" [];
	"langchain_community.llms.tongyi" -> "__future__" [];
	"langchain_community.llms.tongyi" -> "asyncio" [];
	"langchain_community.llms.tongyi" -> "functools" [];
	"langchain_community.llms.tongyi" -> "logging" [];
	"langchain_community.llms.tongyi" -> "typing" [];
	"langchain_community.llms.tongyi" -> "pydantic" [];
	"langchain_community.llms.tongyi" -> "tenacity" [];
	"langchain_community.llms.tongyi" -> "dashscope" [];
	"langchain_community.chat_models.symblai_nebula" -> "json" [];
	"langchain_community.chat_models.symblai_nebula" -> "os" [];
	"langchain_community.chat_models.symblai_nebula" -> "typing" [];
	"langchain_community.chat_models.symblai_nebula" -> "requests" [];
	"langchain_community.chat_models.symblai_nebula" -> "aiohttp" [];
	"langchain_community.chat_models.symblai_nebula" -> "pydantic" [];
	"langchain_community.chat_models.sparkllm" -> "base64" [];
	"langchain_community.chat_models.sparkllm" -> "hashlib" [];
	"langchain_community.chat_models.sparkllm" -> "hmac" [];
	"langchain_community.chat_models.sparkllm" -> "json" [];
	"langchain_community.chat_models.sparkllm" -> "logging" [];
	"langchain_community.chat_models.sparkllm" -> "queue" [];
	"langchain_community.chat_models.sparkllm" -> "threading" [];
	"langchain_community.chat_models.sparkllm" -> "datetime" [];
	"langchain_community.chat_models.sparkllm" -> "time" [];
	"langchain_community.chat_models.sparkllm" -> "typing" [];
	"langchain_community.chat_models.sparkllm" -> "pydantic" [];
	"langchain_community.chat_models.sparkllm" -> "websocket" [];
	"websocket._socket" -> "errno" [];
	"websocket._socket" -> "selectors" [];
	"websocket._socket" -> "socket" [];
	"websocket._socket" -> "typing" [];
	"websocket._utils" -> "typing" [];
	"websocket._utils" -> "wsaccel" [];
	"websocket._ssl_compat" -> "ssl" [];
	"websocket._core" -> "socket" [];
	"websocket._core" -> "struct" [];
	"websocket._core" -> "threading" [];
	"websocket._core" -> "time" [];
	"websocket._core" -> "typing" [];
	"websocket._http" -> "errno" [];
	"websocket._http" -> "os" [];
	"websocket._http" -> "socket" [];
	"websocket._http" -> "base64" [];
	"websocket._http" -> "python_socks" [];
	"websocket._http" -> "'python_socks._types'" [];
	"websocket._http" -> "'python_socks.sync'" [];
	"websocket._url" -> "os" [];
	"websocket._url" -> "socket" [];
	"websocket._url" -> "struct" [];
	"websocket._url" -> "typing" [];
	"websocket._handshake" -> "hashlib" [];
	"websocket._handshake" -> "hmac" [];
	"websocket._handshake" -> "os" [];
	"websocket._handshake" -> "base64" [];
	"websocket._handshake" -> "http" [];
	"websocket._cookiejar" -> "typing" [];
	"websocket._app" -> "inspect" [];
	"websocket._app" -> "selectors" [];
	"websocket._app" -> "socket" [];
	"websocket._app" -> "threading" [];
	"websocket._app" -> "time" [];
	"websocket._app" -> "typing" [];
	"websocket._logging" -> "logging" [];
	"websocket._abnf" -> "array" [];
	"websocket._abnf" -> "os" [];
	"websocket._abnf" -> "struct" [];
	"websocket._abnf" -> "sys" [];
	"websocket._abnf" -> "threading" [];
	"websocket._abnf" -> "typing" [];
	"websocket._abnf" -> "'wsaccel.xormask'" [];
	"wsgiref.handlers" -> "sys" [];
	"wsgiref.handlers" -> "os" [];
	"wsgiref.handlers" -> "time" [];
	"wsgiref.handlers" -> "traceback" [];
	"wsgiref.handlers" -> "warnings" [];
	"wsgiref.headers" -> "re" [];
	"wsgiref.util" -> "posixpath" [];
	"wsgiref.util" -> "warnings" [];
	"wsgiref.util" -> "io" [];
	"langchain_community.chat_models.solar" -> "typing" [];
	"langchain_community.chat_models.solar" -> "pydantic" [];
	"langchain_community.chat_models.solar" -> "openai" [];
	"langchain_community.llms.solar" -> "typing" [];
	"langchain_community.llms.solar" -> "requests" [];
	"langchain_community.llms.solar" -> "pydantic" [];
	"langchain_community.chat_models.snowflake" -> "json" [];
	"langchain_community.chat_models.snowflake" -> "typing" [];
	"langchain_community.chat_models.snowflake" -> "pydantic" [];
	"langchain_community.chat_models.snowflake" -> "'snowflake.snowpark'" [];
	"langchain_community.chat_models.sambanova" -> "json" [];
	"langchain_community.chat_models.sambanova" -> "operator" [];
	"langchain_community.chat_models.sambanova" -> "typing" [];
	"langchain_community.chat_models.sambanova" -> "requests" [];
	"langchain_community.chat_models.sambanova" -> "pydantic" [];
	"langchain_community.chat_models.sambanova" -> "sseclient" [];
	"langchain_community.chat_models.reka" -> "json" [];
	"langchain_community.chat_models.reka" -> "typing" [];
	"langchain_community.chat_models.reka" -> "pydantic" [];
	"langchain_community.chat_models.reka" -> "reka" [];
	"langchain_community.chat_models.reka" -> "tiktoken" [];
	"langchain_community.chat_models.promptlayer_openai" -> "datetime" [];
	"langchain_community.chat_models.promptlayer_openai" -> "typing" [];
	"langchain_community.chat_models.promptlayer_openai" -> "'promptlayer.utils'" [];
	"langchain_community.chat_models.premai" -> "__future__" [];
	"langchain_community.chat_models.premai" -> "logging" [];
	"langchain_community.chat_models.premai" -> "warnings" [];
	"langchain_community.chat_models.premai" -> "typing" [];
	"langchain_community.chat_models.premai" -> "pydantic" [];
	"langchain_community.chat_models.premai" -> "premai" [];
	"langchain_community.chat_models.premai" -> "'premai.models'" [];
	"langchain_community.chat_models.perplexity" -> "__future__" [];
	"langchain_community.chat_models.perplexity" -> "logging" [];
	"langchain_community.chat_models.perplexity" -> "operator" [];
	"langchain_community.chat_models.perplexity" -> "typing" [];
	"langchain_community.chat_models.perplexity" -> "pydantic" [];
	"langchain_community.chat_models.perplexity" -> "typing_extensions" [];
	"langchain_community.chat_models.perplexity" -> "openai" [];
	"langchain_community.chat_models.pai_eas_endpoint" -> "json" [];
	"langchain_community.chat_models.pai_eas_endpoint" -> "logging" [];
	"langchain_community.chat_models.pai_eas_endpoint" -> "typing" [];
	"langchain_community.chat_models.pai_eas_endpoint" -> "requests" [];
	"langchain_community.chat_models.pai_eas_endpoint" -> "pydantic" [];
	"langchain_community.chat_models.outlines" -> "__future__" [];
	"langchain_community.chat_models.outlines" -> "platform" [];
	"langchain_community.chat_models.outlines" -> "typing" [];
	"langchain_community.chat_models.outlines" -> "pydantic" [];
	"langchain_community.chat_models.outlines" -> "typing_extensions" [];
	"langchain_community.chat_models.outlines" -> "'outlines.models'" [];
	"langchain_community.chat_models.outlines" -> "transformers" [];
	"langchain_community.chat_models.outlines" -> "outlines" [];
	"langchain_community.chat_models.outlines" -> "huggingface_hub" [];
	"huggingface_hub" -> "importlib" [];
	"huggingface_hub" -> "os" [];
	"huggingface_hub" -> "sys" [];
	"huggingface_hub" -> "typing" [];
	"huggingface_hub.utils.logging" -> "logging" [];
	"huggingface_hub.utils.logging" -> "os" [];
	"huggingface_hub.utils.logging" -> "typing" [];
	"huggingface_hub.utils.logging" -> "huggingface_hub" [];
	"huggingface_hub.utils._xet" -> "dataclasses" [];
	"huggingface_hub.utils._xet" -> "enum" [];
	"huggingface_hub.utils._xet" -> "typing" [];
	"huggingface_hub.utils._xet" -> "requests" [];
	"huggingface_hub.utils._xet" -> "huggingface_hub" [];
	"huggingface_hub.utils._validators" -> "inspect" [];
	"huggingface_hub.utils._validators" -> "re" [];
	"huggingface_hub.utils._validators" -> "warnings" [];
	"huggingface_hub.utils._validators" -> "functools" [];
	"huggingface_hub.utils._validators" -> "itertools" [];
	"huggingface_hub.utils._validators" -> "typing" [];
	"huggingface_hub.utils._typing" -> "sys" [];
	"huggingface_hub.utils._typing" -> "typing" [];
	"huggingface_hub.utils._typing" -> "types" [];
	"huggingface_hub.utils._telemetry" -> "queue" [];
	"huggingface_hub.utils._telemetry" -> "threading" [];
	"huggingface_hub.utils._telemetry" -> "typing" [];
	"huggingface_hub.utils._telemetry" -> "huggingface_hub" [];
	"huggingface_hub.utils._subprocess" -> "os" [];
	"huggingface_hub.utils._subprocess" -> "subprocess" [];
	"huggingface_hub.utils._subprocess" -> "sys" [];
	"huggingface_hub.utils._subprocess" -> "contextlib" [];
	"huggingface_hub.utils._subprocess" -> "io" [];
	"huggingface_hub.utils._subprocess" -> "pathlib" [];
	"huggingface_hub.utils._subprocess" -> "typing" [];
	"huggingface_hub.utils._safetensors" -> "functools" [];
	"huggingface_hub.utils._safetensors" -> "operator" [];
	"huggingface_hub.utils._safetensors" -> "collections" [];
	"huggingface_hub.utils._safetensors" -> "dataclasses" [];
	"huggingface_hub.utils._safetensors" -> "typing" [];
	"huggingface_hub.utils._runtime" -> "os" [];
	"huggingface_hub.utils._runtime" -> "platform" [];
	"huggingface_hub.utils._runtime" -> "sys" [];
	"huggingface_hub.utils._runtime" -> "warnings" [];
	"huggingface_hub.utils._runtime" -> "typing" [];
	"huggingface_hub.utils._runtime" -> "huggingface_hub" [];
	"huggingface_hub.utils._runtime" -> "pydantic" [];
	"huggingface_hub.utils._paths" -> "fnmatch" [];
	"huggingface_hub.utils._paths" -> "pathlib" [];
	"huggingface_hub.utils._paths" -> "typing" [];
	"huggingface_hub.utils._pagination" -> "typing" [];
	"huggingface_hub.utils._pagination" -> "requests" [];
	"huggingface_hub.utils._http" -> "io" [];
	"huggingface_hub.utils._http" -> "os" [];
	"huggingface_hub.utils._http" -> "re" [];
	"huggingface_hub.utils._http" -> "threading" [];
	"huggingface_hub.utils._http" -> "time" [];
	"huggingface_hub.utils._http" -> "uuid" [];
	"huggingface_hub.utils._http" -> "functools" [];
	"huggingface_hub.utils._http" -> "http" [];
	"huggingface_hub.utils._http" -> "shlex" [];
	"huggingface_hub.utils._http" -> "typing" [];
	"huggingface_hub.utils._http" -> "requests" [];
	"huggingface_hub.utils._http" -> "huggingface_hub" [];
	"huggingface_hub.utils._lfs" -> "io" [];
	"huggingface_hub.utils._lfs" -> "os" [];
	"huggingface_hub.utils._lfs" -> "contextlib" [];
	"huggingface_hub.utils._lfs" -> "typing" [];
	"huggingface_hub.utils._hf_folder" -> "pathlib" [];
	"huggingface_hub.utils._hf_folder" -> "typing" [];
	"huggingface_hub.utils._hf_folder" -> "huggingface_hub" [];
	"huggingface_hub.utils._headers" -> "typing" [];
	"huggingface_hub.utils._headers" -> "huggingface_hub" [];
	"huggingface_hub.utils._deprecation" -> "warnings" [];
	"huggingface_hub.utils._deprecation" -> "functools" [];
	"huggingface_hub.utils._deprecation" -> "inspect" [];
	"huggingface_hub.utils._deprecation" -> "typing" [];
	"huggingface_hub.utils._git_credential" -> "re" [];
	"huggingface_hub.utils._git_credential" -> "subprocess" [];
	"huggingface_hub.utils._git_credential" -> "typing" [];
	"huggingface_hub.utils._fixes" -> "requests" [];
	"huggingface_hub.utils._fixes" -> "simplejson" [];
	"huggingface_hub.utils._fixes" -> "json" [];
	"huggingface_hub.utils._fixes" -> "contextlib" [];
	"huggingface_hub.utils._fixes" -> "os" [];
	"huggingface_hub.utils._fixes" -> "shutil" [];
	"huggingface_hub.utils._fixes" -> "stat" [];
	"huggingface_hub.utils._fixes" -> "tempfile" [];
	"huggingface_hub.utils._fixes" -> "time" [];
	"huggingface_hub.utils._fixes" -> "functools" [];
	"huggingface_hub.utils._fixes" -> "pathlib" [];
	"huggingface_hub.utils._fixes" -> "typing" [];
	"huggingface_hub.utils._fixes" -> "yaml" [];
	"huggingface_hub.utils._fixes" -> "filelock" [];
	"huggingface_hub.utils._fixes" -> "huggingface_hub" [];
	"filelock" -> "__future__" [];
	"filelock" -> "sys" [];
	"filelock" -> "warnings" [];
	"filelock" -> "typing" [];
	"filelock.version" -> "typing" [];
	"filelock.asyncio" -> "__future__" [];
	"filelock.asyncio" -> "asyncio" [];
	"filelock.asyncio" -> "contextlib" [];
	"filelock.asyncio" -> "logging" [];
	"filelock.asyncio" -> "os" [];
	"filelock.asyncio" -> "time" [];
	"filelock.asyncio" -> "dataclasses" [];
	"filelock.asyncio" -> "threading" [];
	"filelock.asyncio" -> "typing" [];
	"filelock.asyncio" -> "sys" [];
	"filelock.asyncio" -> "concurrent" [];
	"filelock.asyncio" -> "types" [];
	"filelock.asyncio" -> "typing_extensions" [];
	"filelock._windows" -> "__future__" [];
	"filelock._windows" -> "os" [];
	"filelock._windows" -> "sys" [];
	"filelock._windows" -> "contextlib" [];
	"filelock._windows" -> "errno" [];
	"filelock._windows" -> "pathlib" [];
	"filelock._windows" -> "typing" [];
	"filelock._windows" -> "msvcrt" [];
	"filelock._util" -> "__future__" [];
	"filelock._util" -> "os" [];
	"filelock._util" -> "stat" [];
	"filelock._util" -> "sys" [];
	"filelock._util" -> "errno" [];
	"filelock._util" -> "pathlib" [];
	"filelock._unix" -> "__future__" [];
	"filelock._unix" -> "os" [];
	"filelock._unix" -> "sys" [];
	"filelock._unix" -> "contextlib" [];
	"filelock._unix" -> "errno" [];
	"filelock._unix" -> "pathlib" [];
	"filelock._unix" -> "typing" [];
	"filelock._unix" -> "fcntl" [];
	"filelock._soft" -> "__future__" [];
	"filelock._soft" -> "os" [];
	"filelock._soft" -> "sys" [];
	"filelock._soft" -> "contextlib" [];
	"filelock._soft" -> "errno" [];
	"filelock._soft" -> "pathlib" [];
	"filelock._error" -> "__future__" [];
	"filelock._error" -> "typing" [];
	"filelock._api" -> "__future__" [];
	"filelock._api" -> "contextlib" [];
	"filelock._api" -> "inspect" [];
	"filelock._api" -> "logging" [];
	"filelock._api" -> "os" [];
	"filelock._api" -> "time" [];
	"filelock._api" -> "warnings" [];
	"filelock._api" -> "abc" [];
	"filelock._api" -> "dataclasses" [];
	"filelock._api" -> "threading" [];
	"filelock._api" -> "typing" [];
	"filelock._api" -> "weakref" [];
	"filelock._api" -> "sys" [];
	"filelock._api" -> "types" [];
	"filelock._api" -> "typing_extensions" [];
	"huggingface_hub.utils._experimental" -> "warnings" [];
	"huggingface_hub.utils._experimental" -> "functools" [];
	"huggingface_hub.utils._experimental" -> "typing" [];
	"huggingface_hub.utils._experimental" -> "huggingface_hub" [];
	"huggingface_hub.utils._datetime" -> "datetime" [];
	"huggingface_hub.utils._chunk_utils" -> "itertools" [];
	"huggingface_hub.utils._chunk_utils" -> "typing" [];
	"huggingface_hub.utils._cache_manager" -> "os" [];
	"huggingface_hub.utils._cache_manager" -> "shutil" [];
	"huggingface_hub.utils._cache_manager" -> "time" [];
	"huggingface_hub.utils._cache_manager" -> "collections" [];
	"huggingface_hub.utils._cache_manager" -> "dataclasses" [];
	"huggingface_hub.utils._cache_manager" -> "pathlib" [];
	"huggingface_hub.utils._cache_manager" -> "typing" [];
	"huggingface_hub.commands._cli_utils" -> "os" [];
	"huggingface_hub.commands._cli_utils" -> "typing" [];
	"huggingface_hub.commands" -> "abc" [];
	"huggingface_hub.commands" -> "argparse" [];
	"huggingface_hub.utils._cache_assets" -> "pathlib" [];
	"huggingface_hub.utils._cache_assets" -> "typing" [];
	"huggingface_hub.utils._auth" -> "configparser" [];
	"huggingface_hub.utils._auth" -> "logging" [];
	"huggingface_hub.utils._auth" -> "os" [];
	"huggingface_hub.utils._auth" -> "warnings" [];
	"huggingface_hub.utils._auth" -> "pathlib" [];
	"huggingface_hub.utils._auth" -> "threading" [];
	"huggingface_hub.utils._auth" -> "typing" [];
	"huggingface_hub.utils._auth" -> "huggingface_hub" [];
	"huggingface_hub.utils._auth" -> "'google.colab'" [];
	"huggingface_hub.utils.tqdm" -> "io" [];
	"huggingface_hub.utils.tqdm" -> "logging" [];
	"huggingface_hub.utils.tqdm" -> "os" [];
	"huggingface_hub.utils.tqdm" -> "warnings" [];
	"huggingface_hub.utils.tqdm" -> "contextlib" [];
	"huggingface_hub.utils.tqdm" -> "pathlib" [];
	"huggingface_hub.utils.tqdm" -> "typing" [];
	"tqdm.auto" -> "warnings" [];
	"tqdm.autonotebook" -> "sys" [];
	"tqdm.autonotebook" -> "warnings" [];
	"huggingface_hub.errors" -> "pathlib" [];
	"huggingface_hub.errors" -> "typing" [];
	"huggingface_hub.errors" -> "requests" [];
	"huggingface_hub.serialization._dduf" -> "json" [];
	"huggingface_hub.serialization._dduf" -> "logging" [];
	"huggingface_hub.serialization._dduf" -> "mmap" [];
	"huggingface_hub.serialization._dduf" -> "os" [];
	"huggingface_hub.serialization._dduf" -> "shutil" [];
	"huggingface_hub.serialization._dduf" -> "zipfile" [];
	"huggingface_hub.serialization._dduf" -> "contextlib" [];
	"huggingface_hub.serialization._dduf" -> "dataclasses" [];
	"huggingface_hub.serialization._dduf" -> "pathlib" [];
	"huggingface_hub.serialization._dduf" -> "typing" [];
	"huggingface_hub.serialization._torch" -> "importlib" [];
	"huggingface_hub.serialization._torch" -> "json" [];
	"huggingface_hub.serialization._torch" -> "os" [];
	"huggingface_hub.serialization._torch" -> "re" [];
	"huggingface_hub.serialization._torch" -> "collections" [];
	"huggingface_hub.serialization._torch" -> "functools" [];
	"huggingface_hub.serialization._torch" -> "pathlib" [];
	"huggingface_hub.serialization._torch" -> "typing" [];
	"huggingface_hub.serialization._torch" -> "packaging" [];
	"huggingface_hub.serialization._torch" -> "huggingface_hub" [];
	"huggingface_hub.serialization._torch" -> "torch" [];
	"huggingface_hub.serialization._torch" -> "'safetensors.torch'" [];
	"huggingface_hub.serialization._torch" -> "safetensors" [];
	"huggingface_hub.serialization._torch" -> "'torch.distributed'" [];
	"huggingface_hub.serialization._torch" -> "'torch.utils'" [];
	"huggingface_hub.serialization._torch" -> "torch_xla" [];
	"huggingface_hub.serialization._torch" -> "'torch_xla.core'" [];
	"huggingface_hub.serialization._tensorflow" -> "math" [];
	"huggingface_hub.serialization._tensorflow" -> "re" [];
	"huggingface_hub.serialization._tensorflow" -> "typing" [];
	"huggingface_hub.serialization._tensorflow" -> "huggingface_hub" [];
	"huggingface_hub.serialization._tensorflow" -> "tensorflow" [];
	"huggingface_hub.serialization._base" -> "dataclasses" [];
	"huggingface_hub.serialization._base" -> "typing" [];
	"huggingface_hub.serialization._base" -> "huggingface_hub" [];
	"huggingface_hub.repository" -> "atexit" [];
	"huggingface_hub.repository" -> "os" [];
	"huggingface_hub.repository" -> "re" [];
	"huggingface_hub.repository" -> "subprocess" [];
	"huggingface_hub.repository" -> "threading" [];
	"huggingface_hub.repository" -> "time" [];
	"huggingface_hub.repository" -> "contextlib" [];
	"huggingface_hub.repository" -> "pathlib" [];
	"huggingface_hub.repository" -> "typing" [];
	"huggingface_hub.lfs" -> "inspect" [];
	"huggingface_hub.lfs" -> "io" [];
	"huggingface_hub.lfs" -> "re" [];
	"huggingface_hub.lfs" -> "warnings" [];
	"huggingface_hub.lfs" -> "dataclasses" [];
	"huggingface_hub.lfs" -> "math" [];
	"huggingface_hub.lfs" -> "os.path" [];
	"huggingface_hub.lfs" -> "pathlib" [];
	"huggingface_hub.lfs" -> "typing" [];
	"huggingface_hub.lfs" -> "hf_transfer" [];
	"huggingface_hub._commit_api" -> "base64" [];
	"huggingface_hub._commit_api" -> "io" [];
	"huggingface_hub._commit_api" -> "math" [];
	"huggingface_hub._commit_api" -> "os" [];
	"huggingface_hub._commit_api" -> "warnings" [];
	"huggingface_hub._commit_api" -> "collections" [];
	"huggingface_hub._commit_api" -> "contextlib" [];
	"huggingface_hub._commit_api" -> "dataclasses" [];
	"huggingface_hub._commit_api" -> "itertools" [];
	"huggingface_hub._commit_api" -> "pathlib" [];
	"huggingface_hub._commit_api" -> "typing" [];
	"huggingface_hub._commit_api" -> "hf_xet" [];
	"tqdm.contrib.concurrent" -> "contextlib" [];
	"tqdm.contrib.concurrent" -> "operator" [];
	"tqdm.contrib.concurrent" -> "os" [];
	"tqdm.contrib.concurrent" -> "warnings" [];
	"tqdm.contrib" -> "warnings" [];
	"tqdm.contrib" -> "numpy" [];
	"huggingface_hub.utils.sha" -> "typing" [];
	"huggingface_hub.utils.insecure_hashlib" -> "functools" [];
	"huggingface_hub.utils.insecure_hashlib" -> "hashlib" [];
	"huggingface_hub.utils.insecure_hashlib" -> "sys" [];
	"huggingface_hub.repocard_data" -> "copy" [];
	"huggingface_hub.repocard_data" -> "collections" [];
	"huggingface_hub.repocard_data" -> "dataclasses" [];
	"huggingface_hub.repocard_data" -> "typing" [];
	"huggingface_hub.repocard" -> "os" [];
	"huggingface_hub.repocard" -> "re" [];
	"huggingface_hub.repocard" -> "pathlib" [];
	"huggingface_hub.repocard" -> "typing" [];
	"huggingface_hub.repocard" -> "requests" [];
	"huggingface_hub.repocard" -> "yaml" [];
	"huggingface_hub.repocard" -> "jinja2" [];
	"huggingface_hub.keras_mixin" -> "json" [];
	"huggingface_hub.keras_mixin" -> "os" [];
	"huggingface_hub.keras_mixin" -> "warnings" [];
	"huggingface_hub.keras_mixin" -> "functools" [];
	"huggingface_hub.keras_mixin" -> "pathlib" [];
	"huggingface_hub.keras_mixin" -> "shutil" [];
	"huggingface_hub.keras_mixin" -> "typing" [];
	"huggingface_hub.keras_mixin" -> "tf_keras" [];
	"huggingface_hub.keras_mixin" -> "tensorflow" [];
	"huggingface_hub.inference_api" -> "io" [];
	"huggingface_hub.inference_api" -> "typing" [];
	"huggingface_hub.inference_api" -> "PIL" [];
	"huggingface_hub.inference._generated.types.zero_shot_object_detection" -> "typing" [];
	"huggingface_hub.inference._generated.types.zero_shot_image_classification" -> "typing" [];
	"huggingface_hub.inference._generated.types.zero_shot_classification" -> "typing" [];
	"huggingface_hub.inference._generated.types.visual_question_answering" -> "typing" [];
	"huggingface_hub.inference._generated.types.video_classification" -> "typing" [];
	"huggingface_hub.inference._generated.types.translation" -> "typing" [];
	"huggingface_hub.inference._generated.types.token_classification" -> "typing" [];
	"huggingface_hub.inference._generated.types.text_to_video" -> "typing" [];
	"huggingface_hub.inference._generated.types.text_to_speech" -> "typing" [];
	"huggingface_hub.inference._generated.types.text_to_image" -> "typing" [];
	"huggingface_hub.inference._generated.types.text_to_audio" -> "typing" [];
	"huggingface_hub.inference._generated.types.text_generation" -> "typing" [];
	"huggingface_hub.inference._generated.types.text_classification" -> "typing" [];
	"huggingface_hub.inference._generated.types.text2text_generation" -> "typing" [];
	"huggingface_hub.inference._generated.types.table_question_answering" -> "typing" [];
	"huggingface_hub.inference._generated.types.summarization" -> "typing" [];
	"huggingface_hub.inference._generated.types.sentence_similarity" -> "typing" [];
	"huggingface_hub.inference._generated.types.question_answering" -> "typing" [];
	"huggingface_hub.inference._generated.types.object_detection" -> "typing" [];
	"huggingface_hub.inference._generated.types.image_to_text" -> "typing" [];
	"huggingface_hub.inference._generated.types.image_to_image" -> "typing" [];
	"huggingface_hub.inference._generated.types.image_segmentation" -> "typing" [];
	"huggingface_hub.inference._generated.types.image_classification" -> "typing" [];
	"huggingface_hub.inference._generated.types.fill_mask" -> "typing" [];
	"huggingface_hub.inference._generated.types.feature_extraction" -> "typing" [];
	"huggingface_hub.inference._generated.types.document_question_answering" -> "typing" [];
	"huggingface_hub.inference._generated.types.depth_estimation" -> "typing" [];
	"huggingface_hub.inference._generated.types.chat_completion" -> "typing" [];
	"huggingface_hub.inference._generated.types.base" -> "inspect" [];
	"huggingface_hub.inference._generated.types.base" -> "json" [];
	"huggingface_hub.inference._generated.types.base" -> "dataclasses" [];
	"huggingface_hub.inference._generated.types.base" -> "typing" [];
	"huggingface_hub.inference._generated.types.automatic_speech_recognition" -> "typing" [];
	"huggingface_hub.inference._generated.types.audio_to_audio" -> "typing" [];
	"huggingface_hub.inference._generated.types.audio_classification" -> "typing" [];
	"huggingface_hub.inference._generated._async_client" -> "asyncio" [];
	"huggingface_hub.inference._generated._async_client" -> "base64" [];
	"huggingface_hub.inference._generated._async_client" -> "logging" [];
	"huggingface_hub.inference._generated._async_client" -> "re" [];
	"huggingface_hub.inference._generated._async_client" -> "warnings" [];
	"huggingface_hub.inference._generated._async_client" -> "typing" [];
	"huggingface_hub.inference._generated._async_client" -> "huggingface_hub" [];
	"huggingface_hub.inference._generated._async_client" -> "numpy" [];
	"huggingface_hub.inference._generated._async_client" -> "aiohttp" [];
	"huggingface_hub.inference._providers" -> "typing" [];
	"huggingface_hub.inference._providers.together" -> "base64" [];
	"huggingface_hub.inference._providers.together" -> "abc" [];
	"huggingface_hub.inference._providers.together" -> "typing" [];
	"huggingface_hub.inference._providers.sambanova" -> "typing" [];
	"huggingface_hub.inference._providers.replicate" -> "typing" [];
	"huggingface_hub.inference._providers.openai" -> "typing" [];
	"huggingface_hub.inference._providers.novita" -> "typing" [];
	"huggingface_hub.inference._providers.nebius" -> "base64" [];
	"huggingface_hub.inference._providers.nebius" -> "typing" [];
	"huggingface_hub.inference._providers.hyperbolic" -> "base64" [];
	"huggingface_hub.inference._providers.hyperbolic" -> "typing" [];
	"huggingface_hub.inference._providers.hf_inference" -> "json" [];
	"huggingface_hub.inference._providers.hf_inference" -> "functools" [];
	"huggingface_hub.inference._providers.hf_inference" -> "pathlib" [];
	"huggingface_hub.inference._providers.hf_inference" -> "typing" [];
	"huggingface_hub.inference._providers.hf_inference" -> "huggingface_hub" [];
	"huggingface_hub.inference._providers.fal_ai" -> "base64" [];
	"huggingface_hub.inference._providers.fal_ai" -> "time" [];
	"huggingface_hub.inference._providers.fal_ai" -> "abc" [];
	"huggingface_hub.inference._providers.fal_ai" -> "typing" [];
	"huggingface_hub.inference._providers.fal_ai" -> "huggingface_hub" [];
	"huggingface_hub.inference._providers.black_forest_labs" -> "time" [];
	"huggingface_hub.inference._providers.black_forest_labs" -> "typing" [];
	"huggingface_hub.inference._providers._common" -> "functools" [];
	"huggingface_hub.inference._providers._common" -> "typing" [];
	"huggingface_hub.inference._providers._common" -> "huggingface_hub" [];
	"huggingface_hub.inference._common" -> "base64" [];
	"huggingface_hub.inference._common" -> "io" [];
	"huggingface_hub.inference._common" -> "json" [];
	"huggingface_hub.inference._common" -> "logging" [];
	"huggingface_hub.inference._common" -> "contextlib" [];
	"huggingface_hub.inference._common" -> "dataclasses" [];
	"huggingface_hub.inference._common" -> "pathlib" [];
	"huggingface_hub.inference._common" -> "typing" [];
	"huggingface_hub.inference._common" -> "requests" [];
	"huggingface_hub.inference._common" -> "aiohttp" [];
	"huggingface_hub.inference._common" -> "numpy" [];
	"huggingface_hub.inference._common" -> "PIL" [];
	"huggingface_hub.inference._client" -> "base64" [];
	"huggingface_hub.inference._client" -> "logging" [];
	"huggingface_hub.inference._client" -> "re" [];
	"huggingface_hub.inference._client" -> "warnings" [];
	"huggingface_hub.inference._client" -> "typing" [];
	"huggingface_hub.inference._client" -> "requests" [];
	"huggingface_hub.inference._client" -> "huggingface_hub" [];
	"huggingface_hub.inference._client" -> "numpy" [];
	"huggingface_hub.hub_mixin" -> "inspect" [];
	"huggingface_hub.hub_mixin" -> "json" [];
	"huggingface_hub.hub_mixin" -> "os" [];
	"huggingface_hub.hub_mixin" -> "dataclasses" [];
	"huggingface_hub.hub_mixin" -> "pathlib" [];
	"huggingface_hub.hub_mixin" -> "typing" [];
	"huggingface_hub.hub_mixin" -> "torch" [];
	"huggingface_hub.hub_mixin" -> "safetensors" [];
	"huggingface_hub.hub_mixin" -> "'safetensors.torch'" [];
	"huggingface_hub.hf_file_system" -> "os" [];
	"huggingface_hub.hf_file_system" -> "re" [];
	"huggingface_hub.hf_file_system" -> "tempfile" [];
	"huggingface_hub.hf_file_system" -> "collections" [];
	"huggingface_hub.hf_file_system" -> "dataclasses" [];
	"huggingface_hub.hf_file_system" -> "datetime" [];
	"huggingface_hub.hf_file_system" -> "itertools" [];
	"huggingface_hub.hf_file_system" -> "pathlib" [];
	"huggingface_hub.hf_file_system" -> "typing" [];
	"huggingface_hub.hf_file_system" -> "fsspec" [];
	"huggingface_hub.hf_file_system" -> "requests" [];
	"huggingface_hub.hf_api" -> "__future__" [];
	"huggingface_hub.hf_api" -> "inspect" [];
	"huggingface_hub.hf_api" -> "io" [];
	"huggingface_hub.hf_api" -> "json" [];
	"huggingface_hub.hf_api" -> "re" [];
	"huggingface_hub.hf_api" -> "struct" [];
	"huggingface_hub.hf_api" -> "warnings" [];
	"huggingface_hub.hf_api" -> "collections" [];
	"huggingface_hub.hf_api" -> "dataclasses" [];
	"huggingface_hub.hf_api" -> "datetime" [];
	"huggingface_hub.hf_api" -> "functools" [];
	"huggingface_hub.hf_api" -> "itertools" [];
	"huggingface_hub.hf_api" -> "pathlib" [];
	"huggingface_hub.hf_api" -> "typing" [];
	"huggingface_hub.hf_api" -> "requests" [];
	"huggingface_hub.utils.endpoint_helpers" -> "math" [];
	"huggingface_hub.utils.endpoint_helpers" -> "re" [];
	"huggingface_hub.utils.endpoint_helpers" -> "typing" [];
	"huggingface_hub._upload_large_folder" -> "enum" [];
	"huggingface_hub._upload_large_folder" -> "logging" [];
	"huggingface_hub._upload_large_folder" -> "os" [];
	"huggingface_hub._upload_large_folder" -> "queue" [];
	"huggingface_hub._upload_large_folder" -> "shutil" [];
	"huggingface_hub._upload_large_folder" -> "sys" [];
	"huggingface_hub._upload_large_folder" -> "threading" [];
	"huggingface_hub._upload_large_folder" -> "time" [];
	"huggingface_hub._upload_large_folder" -> "traceback" [];
	"huggingface_hub._upload_large_folder" -> "datetime" [];
	"huggingface_hub._upload_large_folder" -> "pathlib" [];
	"huggingface_hub._upload_large_folder" -> "typing" [];
	"huggingface_hub._local_folder" -> "base64" [];
	"huggingface_hub._local_folder" -> "hashlib" [];
	"huggingface_hub._local_folder" -> "logging" [];
	"huggingface_hub._local_folder" -> "os" [];
	"huggingface_hub._local_folder" -> "time" [];
	"huggingface_hub._local_folder" -> "dataclasses" [];
	"huggingface_hub._local_folder" -> "pathlib" [];
	"huggingface_hub._local_folder" -> "typing" [];
	"huggingface_hub.file_download" -> "copy" [];
	"huggingface_hub.file_download" -> "errno" [];
	"huggingface_hub.file_download" -> "inspect" [];
	"huggingface_hub.file_download" -> "os" [];
	"huggingface_hub.file_download" -> "re" [];
	"huggingface_hub.file_download" -> "shutil" [];
	"huggingface_hub.file_download" -> "stat" [];
	"huggingface_hub.file_download" -> "time" [];
	"huggingface_hub.file_download" -> "uuid" [];
	"huggingface_hub.file_download" -> "warnings" [];
	"huggingface_hub.file_download" -> "dataclasses" [];
	"huggingface_hub.file_download" -> "pathlib" [];
	"huggingface_hub.file_download" -> "typing" [];
	"huggingface_hub.file_download" -> "requests" [];
	"huggingface_hub.file_download" -> "hf_transfer" [];
	"huggingface_hub.file_download" -> "hf_xet" [];
	"huggingface_hub.fastai_utils" -> "json" [];
	"huggingface_hub.fastai_utils" -> "os" [];
	"huggingface_hub.fastai_utils" -> "pathlib" [];
	"huggingface_hub.fastai_utils" -> "pickle" [];
	"huggingface_hub.fastai_utils" -> "typing" [];
	"huggingface_hub.fastai_utils" -> "packaging" [];
	"huggingface_hub.fastai_utils" -> "toml" [];
	"huggingface_hub.fastai_utils" -> "fastai" [];
	"toml.decoder" -> "datetime" [];
	"toml.decoder" -> "io" [];
	"toml.decoder" -> "os" [];
	"toml.decoder" -> "re" [];
	"toml.decoder" -> "sys" [];
	"toml.decoder" -> "pathlib" [];
	"toml.decoder" -> "warnings" [];
	"toml.tz" -> "datetime" [];
	"toml.encoder" -> "datetime" [];
	"toml.encoder" -> "re" [];
	"toml.encoder" -> "sys" [];
	"toml.encoder" -> "decimal" [];
	"toml.encoder" -> "numpy" [];
	"toml.encoder" -> "pathlib" [];
	"huggingface_hub.community" -> "dataclasses" [];
	"huggingface_hub.community" -> "datetime" [];
	"huggingface_hub.community" -> "typing" [];
	"huggingface_hub._webhooks_server" -> "atexit" [];
	"huggingface_hub._webhooks_server" -> "inspect" [];
	"huggingface_hub._webhooks_server" -> "os" [];
	"huggingface_hub._webhooks_server" -> "functools" [];
	"huggingface_hub._webhooks_server" -> "typing" [];
	"huggingface_hub._webhooks_server" -> "gradio" [];
	"huggingface_hub._webhooks_server" -> "fastapi" [];
	"huggingface_hub._webhooks_server" -> "'fastapi.responses'" [];
	"huggingface_hub._webhooks_payload" -> "typing" [];
	"huggingface_hub._webhooks_payload" -> "pydantic" [];
	"huggingface_hub._tensorboard_logger" -> "pathlib" [];
	"huggingface_hub._tensorboard_logger" -> "typing" [];
	"huggingface_hub._tensorboard_logger" -> "tensorboardX" [];
	"huggingface_hub._tensorboard_logger" -> "'torch.utils'" [];
	"huggingface_hub._space_api" -> "dataclasses" [];
	"huggingface_hub._space_api" -> "datetime" [];
	"huggingface_hub._space_api" -> "enum" [];
	"huggingface_hub._space_api" -> "typing" [];
	"huggingface_hub._snapshot_download" -> "os" [];
	"huggingface_hub._snapshot_download" -> "pathlib" [];
	"huggingface_hub._snapshot_download" -> "typing" [];
	"huggingface_hub._snapshot_download" -> "requests" [];
	"huggingface_hub._login" -> "os" [];
	"huggingface_hub._login" -> "subprocess" [];
	"huggingface_hub._login" -> "getpass" [];
	"huggingface_hub._login" -> "pathlib" [];
	"huggingface_hub._login" -> "typing" [];
	"huggingface_hub.commands.delete_cache" -> "os" [];
	"huggingface_hub.commands.delete_cache" -> "argparse" [];
	"huggingface_hub.commands.delete_cache" -> "functools" [];
	"huggingface_hub.commands.delete_cache" -> "tempfile" [];
	"huggingface_hub.commands.delete_cache" -> "typing" [];
	"huggingface_hub.commands.delete_cache" -> "InquirerPy" [];
	"huggingface_hub.commands.delete_cache" -> "'InquirerPy.base'" [];
	"huggingface_hub.commands.delete_cache" -> "'InquirerPy.separator'" [];
	"huggingface_hub._inference_endpoints" -> "time" [];
	"huggingface_hub._inference_endpoints" -> "dataclasses" [];
	"huggingface_hub._inference_endpoints" -> "datetime" [];
	"huggingface_hub._inference_endpoints" -> "enum" [];
	"huggingface_hub._inference_endpoints" -> "typing" [];
	"huggingface_hub._commit_scheduler" -> "atexit" [];
	"huggingface_hub._commit_scheduler" -> "logging" [];
	"huggingface_hub._commit_scheduler" -> "os" [];
	"huggingface_hub._commit_scheduler" -> "time" [];
	"huggingface_hub._commit_scheduler" -> "dataclasses" [];
	"huggingface_hub._commit_scheduler" -> "io" [];
	"huggingface_hub._commit_scheduler" -> "pathlib" [];
	"huggingface_hub._commit_scheduler" -> "threading" [];
	"huggingface_hub._commit_scheduler" -> "typing" [];
	"huggingface_hub.constants" -> "os" [];
	"huggingface_hub.constants" -> "re" [];
	"huggingface_hub.constants" -> "typing" [];
	"langchain_community.chat_models.ollama" -> "json" [];
	"langchain_community.chat_models.ollama" -> "typing" [];
	"langchain_community.llms.ollama" -> "__future__" [];
	"langchain_community.llms.ollama" -> "json" [];
	"langchain_community.llms.ollama" -> "typing" [];
	"langchain_community.llms.ollama" -> "aiohttp" [];
	"langchain_community.llms.ollama" -> "requests" [];
	"langchain_community.llms.ollama" -> "pydantic" [];
	"langchain_community.chat_models.octoai" -> "typing" [];
	"langchain_community.chat_models.octoai" -> "pydantic" [];
	"langchain_community.chat_models.octoai" -> "openai" [];
	"langchain_community.chat_models.oci_generative_ai" -> "json" [];
	"langchain_community.chat_models.oci_generative_ai" -> "re" [];
	"langchain_community.chat_models.oci_generative_ai" -> "uuid" [];
	"langchain_community.chat_models.oci_generative_ai" -> "abc" [];
	"langchain_community.chat_models.oci_generative_ai" -> "operator" [];
	"langchain_community.chat_models.oci_generative_ai" -> "typing" [];
	"langchain_community.chat_models.oci_generative_ai" -> "pydantic" [];
	"langchain_community.chat_models.oci_generative_ai" -> "'oci.generative_ai_inference'" [];
	"langchain_community.llms.oci_generative_ai" -> "__future__" [];
	"langchain_community.llms.oci_generative_ai" -> "json" [];
	"langchain_community.llms.oci_generative_ai" -> "abc" [];
	"langchain_community.llms.oci_generative_ai" -> "enum" [];
	"langchain_community.llms.oci_generative_ai" -> "typing" [];
	"langchain_community.llms.oci_generative_ai" -> "pydantic" [];
	"langchain_community.llms.oci_generative_ai" -> "oci" [];
	"langchain_community.llms.oci_generative_ai" -> "'oci.generative_ai_inference'" [];
	"langchain_community.chat_models.oci_data_science" -> "importlib" [];
	"langchain_community.chat_models.oci_data_science" -> "json" [];
	"langchain_community.chat_models.oci_data_science" -> "logging" [];
	"langchain_community.chat_models.oci_data_science" -> "operator" [];
	"langchain_community.chat_models.oci_data_science" -> "typing" [];
	"langchain_community.chat_models.oci_data_science" -> "pydantic" [];
	"langchain_openai.chat_models.base" -> "__future__" [];
	"langchain_openai.chat_models.base" -> "base64" [];
	"langchain_openai.chat_models.base" -> "json" [];
	"langchain_openai.chat_models.base" -> "logging" [];
	"langchain_openai.chat_models.base" -> "os" [];
	"langchain_openai.chat_models.base" -> "re" [];
	"langchain_openai.chat_models.base" -> "ssl" [];
	"langchain_openai.chat_models.base" -> "sys" [];
	"langchain_openai.chat_models.base" -> "warnings" [];
	"langchain_openai.chat_models.base" -> "functools" [];
	"langchain_openai.chat_models.base" -> "io" [];
	"langchain_openai.chat_models.base" -> "math" [];
	"langchain_openai.chat_models.base" -> "operator" [];
	"langchain_openai.chat_models.base" -> "typing" [];
	"langchain_openai.chat_models.base" -> "certifi" [];
	"langchain_openai.chat_models.base" -> "openai" [];
	"langchain_openai.chat_models.base" -> "tiktoken" [];
	"langchain_openai.chat_models.base" -> "pydantic" [];
	"langchain_openai.chat_models.base" -> "typing_extensions" [];
	"langchain_openai.chat_models.base" -> "PIL" [];
	"langchain_openai.chat_models.azure" -> "__future__" [];
	"langchain_openai.chat_models.azure" -> "logging" [];
	"langchain_openai.chat_models.azure" -> "os" [];
	"langchain_openai.chat_models.azure" -> "typing" [];
	"langchain_openai.chat_models.azure" -> "openai" [];
	"langchain_openai.chat_models.azure" -> "pydantic" [];
	"langchain_openai.chat_models.azure" -> "typing_extensions" [];
	"langchain_openai.llms.base" -> "__future__" [];
	"langchain_openai.llms.base" -> "logging" [];
	"langchain_openai.llms.base" -> "sys" [];
	"langchain_openai.llms.base" -> "typing" [];
	"langchain_openai.llms.base" -> "openai" [];
	"langchain_openai.llms.base" -> "tiktoken" [];
	"langchain_openai.llms.base" -> "pydantic" [];
	"langchain_openai.llms.base" -> "typing_extensions" [];
	"langchain_openai.llms.azure" -> "__future__" [];
	"langchain_openai.llms.azure" -> "logging" [];
	"langchain_openai.llms.azure" -> "typing" [];
	"langchain_openai.llms.azure" -> "openai" [];
	"langchain_openai.llms.azure" -> "pydantic" [];
	"langchain_openai.llms.azure" -> "typing_extensions" [];
	"langchain_openai.embeddings.base" -> "__future__" [];
	"langchain_openai.embeddings.base" -> "logging" [];
	"langchain_openai.embeddings.base" -> "warnings" [];
	"langchain_openai.embeddings.base" -> "typing" [];
	"langchain_openai.embeddings.base" -> "openai" [];
	"langchain_openai.embeddings.base" -> "tiktoken" [];
	"langchain_openai.embeddings.base" -> "pydantic" [];
	"langchain_openai.embeddings.base" -> "typing_extensions" [];
	"langchain_openai.embeddings.base" -> "transformers" [];
	"langchain_openai.embeddings.azure" -> "__future__" [];
	"langchain_openai.embeddings.azure" -> "typing" [];
	"langchain_openai.embeddings.azure" -> "openai" [];
	"langchain_openai.embeddings.azure" -> "pydantic" [];
	"langchain_openai.embeddings.azure" -> "typing_extensions" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "json" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "logging" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "traceback" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "typing" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "aiohttp" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "requests" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "pydantic" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "ads" [];
	"langchain_community.chat_models.naver" -> "logging" [];
	"langchain_community.chat_models.naver" -> "typing" [];
	"langchain_community.chat_models.naver" -> "httpx_sse" [];
	"langchain_community.chat_models.naver" -> "pydantic" [];
	"langchain_community.chat_models.naver" -> "typing_extensions" [];
	"langchain_community.chat_models.moonshot" -> "typing" [];
	"langchain_community.chat_models.moonshot" -> "openai" [];
	"langchain_community.llms.moonshot" -> "typing" [];
	"langchain_community.llms.moonshot" -> "requests" [];
	"langchain_community.llms.moonshot" -> "pydantic" [];
	"langchain_community.chat_models.mlx" -> "typing" [];
	"langchain_community.chat_models.mlx" -> "'mlx.core'" [];
	"langchain_community.chat_models.mlx" -> "'mlx_lm.utils'" [];
	"langchain_community.chat_models.mlx" -> "'mlx_lm.sample_utils'" [];
	"langchain_community.llms.mlx_pipeline" -> "__future__" [];
	"langchain_community.llms.mlx_pipeline" -> "logging" [];
	"langchain_community.llms.mlx_pipeline" -> "typing" [];
	"langchain_community.llms.mlx_pipeline" -> "pydantic" [];
	"langchain_community.llms.mlx_pipeline" -> "mlx_lm" [];
	"langchain_community.llms.mlx_pipeline" -> "'mlx_lm.sample_utils'" [];
	"langchain_community.llms.mlx_pipeline" -> "mlx" [];
	"langchain_community.llms.mlx_pipeline" -> "'mlx_lm.utils'" [];
	"langchain_community.chat_models.mlflow_ai_gateway" -> "logging" [];
	"langchain_community.chat_models.mlflow_ai_gateway" -> "warnings" [];
	"langchain_community.chat_models.mlflow_ai_gateway" -> "typing" [];
	"langchain_community.chat_models.mlflow_ai_gateway" -> "pydantic" [];
	"langchain_community.chat_models.mlflow_ai_gateway" -> "'mlflow.gateway'" [];
	"langchain_community.chat_models.mlflow" -> "json" [];
	"langchain_community.chat_models.mlflow" -> "logging" [];
	"langchain_community.chat_models.mlflow" -> "typing" [];
	"langchain_community.chat_models.mlflow" -> "pydantic" [];
	"langchain_community.chat_models.mlflow" -> "'mlflow.deployments'" [];
	"langchain_community.chat_models.minimax" -> "json" [];
	"langchain_community.chat_models.minimax" -> "logging" [];
	"langchain_community.chat_models.minimax" -> "contextlib" [];
	"langchain_community.chat_models.minimax" -> "operator" [];
	"langchain_community.chat_models.minimax" -> "typing" [];
	"langchain_community.chat_models.minimax" -> "pydantic" [];
	"langchain_community.chat_models.minimax" -> "httpx_sse" [];
	"langchain_community.chat_models.maritalk" -> "json" [];
	"langchain_community.chat_models.maritalk" -> "http" [];
	"langchain_community.chat_models.maritalk" -> "typing" [];
	"langchain_community.chat_models.maritalk" -> "requests" [];
	"langchain_community.chat_models.maritalk" -> "pydantic" [];
	"langchain_community.chat_models.llamacpp" -> "json" [];
	"langchain_community.chat_models.llamacpp" -> "operator" [];
	"langchain_community.chat_models.llamacpp" -> "pathlib" [];
	"langchain_community.chat_models.llamacpp" -> "typing" [];
	"langchain_community.chat_models.llamacpp" -> "pydantic" [];
	"langchain_community.chat_models.llamacpp" -> "typing_extensions" [];
	"langchain_community.chat_models.llamacpp" -> "llama_cpp" [];
	"langchain_community.chat_models.llama_edge" -> "json" [];
	"langchain_community.chat_models.llama_edge" -> "logging" [];
	"langchain_community.chat_models.llama_edge" -> "re" [];
	"langchain_community.chat_models.llama_edge" -> "typing" [];
	"langchain_community.chat_models.llama_edge" -> "requests" [];
	"langchain_community.chat_models.llama_edge" -> "pydantic" [];
	"langchain_community.chat_models.litellm_router" -> "typing" [];
	"litellm.utils" -> "ast" [];
	"litellm.utils" -> "asyncio" [];
	"litellm.utils" -> "base64" [];
	"litellm.utils" -> "binascii" [];
	"litellm.utils" -> "copy" [];
	"litellm.utils" -> "datetime" [];
	"litellm.utils" -> "hashlib" [];
	"litellm.utils" -> "inspect" [];
	"litellm.utils" -> "io" [];
	"litellm.utils" -> "itertools" [];
	"litellm.utils" -> "json" [];
	"litellm.utils" -> "logging" [];
	"litellm.utils" -> "os" [];
	"litellm.utils" -> "random" [];
	"litellm.utils" -> "re" [];
	"litellm.utils" -> "struct" [];
	"litellm.utils" -> "subprocess" [];
	"litellm.utils" -> "sys" [];
	"litellm.utils" -> "textwrap" [];
	"litellm.utils" -> "threading" [];
	"litellm.utils" -> "time" [];
	"litellm.utils" -> "traceback" [];
	"litellm.utils" -> "uuid" [];
	"litellm.utils" -> "dataclasses" [];
	"litellm.utils" -> "functools" [];
	"litellm.utils" -> "importlib" [];
	"litellm.utils" -> "os.path" [];
	"litellm.utils" -> "aiohttp" [];
	"litellm.utils" -> "dotenv" [];
	"litellm.utils" -> "openai" [];
	"litellm.utils" -> "tiktoken" [];
	"litellm.utils" -> "pydantic" [];
	"litellm.utils" -> "tokenizers" [];
	"litellm.utils" -> "typing" [];
	"litellm.utils" -> "'numpydoc.docscrape'" [];
	"litellm.utils" -> "anthropic" [];
	"litellm.utils" -> "email" [];
	"litellm.llms.gemini.realtime.transformation" -> "json" [];
	"litellm.llms.gemini.realtime.transformation" -> "os" [];
	"litellm.llms.gemini.realtime.transformation" -> "uuid" [];
	"litellm.llms.gemini.realtime.transformation" -> "typing" [];
	"litellm.llms.gemini.realtime.transformation" -> "litellm" [];
	"litellm.llms.gemini.common_utils" -> "base64" [];
	"litellm.llms.gemini.common_utils" -> "datetime" [];
	"litellm.llms.gemini.common_utils" -> "typing" [];
	"litellm.llms.gemini.common_utils" -> "litellm" [];
	"litellm.types.realtime" -> "typing" [];
	"litellm.types.llms.vertex_ai" -> "json" [];
	"litellm.types.llms.vertex_ai" -> "enum" [];
	"litellm.types.llms.vertex_ai" -> "typing" [];
	"litellm.types.llms.vertex_ai" -> "typing_extensions" [];
	"litellm.types.llms.gemini" -> "enum" [];
	"litellm.types.llms.gemini" -> "typing" [];
	"litellm.types.llms.gemini" -> "typing_extensions" [];
	"litellm.responses.litellm_completion_transformation.transformation" -> "typing" [];
	"litellm.responses.litellm_completion_transformation.transformation" -> "typing_extensions" [];
	"litellm.responses.litellm_completion_transformation.transformation" -> "enterprise" [];
	"litellm.types.responses.main" -> "typing" [];
	"litellm.types.responses.main" -> "pydantic" [];
	"litellm.types.responses.main" -> "typing_extensions" [];
	"litellm.types.llms.base" -> "pydantic" [];
	"litellm.caching.s3_cache" -> "ast" [];
	"litellm.caching.s3_cache" -> "asyncio" [];
	"litellm.caching.s3_cache" -> "json" [];
	"litellm.caching.s3_cache" -> "typing" [];
	"litellm.caching.s3_cache" -> "boto3" [];
	"litellm.caching.s3_cache" -> "datetime" [];
	"litellm.caching.s3_cache" -> "botocore" [];
	"litellm.caching.base_cache" -> "abc" [];
	"litellm.caching.base_cache" -> "typing" [];
	"litellm.caching.base_cache" -> "'opentelemetry.trace'" [];
	"litellm.caching.redis_semantic_cache" -> "ast" [];
	"litellm.caching.redis_semantic_cache" -> "asyncio" [];
	"litellm.caching.redis_semantic_cache" -> "json" [];
	"litellm.caching.redis_semantic_cache" -> "os" [];
	"litellm.caching.redis_semantic_cache" -> "typing" [];
	"litellm.caching.redis_semantic_cache" -> "litellm" [];
	"litellm.caching.redis_semantic_cache" -> "redisvl" [];
	"litellm.caching.redis_semantic_cache" -> "'redisvl.utils'" [];
	"litellm.proxy.proxy_server" -> "asyncio" [];
	"litellm.proxy.proxy_server" -> "copy" [];
	"litellm.proxy.proxy_server" -> "inspect" [];
	"litellm.proxy.proxy_server" -> "io" [];
	"litellm.proxy.proxy_server" -> "os" [];
	"litellm.proxy.proxy_server" -> "random" [];
	"litellm.proxy.proxy_server" -> "secrets" [];
	"litellm.proxy.proxy_server" -> "subprocess" [];
	"litellm.proxy.proxy_server" -> "sys" [];
	"litellm.proxy.proxy_server" -> "time" [];
	"litellm.proxy.proxy_server" -> "traceback" [];
	"litellm.proxy.proxy_server" -> "uuid" [];
	"litellm.proxy.proxy_server" -> "warnings" [];
	"litellm.proxy.proxy_server" -> "datetime" [];
	"litellm.proxy.proxy_server" -> "typing" [];
	"litellm.proxy.proxy_server" -> "'opentelemetry.trace'" [];
	"litellm.proxy.proxy_server" -> "logging" [];
	"litellm.proxy.proxy_server" -> "backoff" [];
	"litellm.proxy.proxy_server" -> "fastapi" [];
	"litellm.proxy.proxy_server" -> "orjson" [];
	"litellm.proxy.proxy_server" -> "yaml" [];
	"litellm.proxy.proxy_server" -> "apscheduler" [];
	"litellm.proxy.proxy_server" -> "collections" [];
	"litellm.proxy.proxy_server" -> "contextlib" [];
	"litellm.proxy.proxy_server" -> "litellm" [];
	"litellm.proxy.proxy_server" -> "json" [];
	"litellm.proxy.proxy_server" -> "'fastapi.encoders'" [];
	"litellm.proxy.proxy_server" -> "'fastapi.middleware'" [];
	"litellm.proxy.proxy_server" -> "'fastapi.openapi'" [];
	"litellm.proxy.proxy_server" -> "'fastapi.responses'" [];
	"litellm.proxy.proxy_server" -> "'fastapi.routing'" [];
	"litellm.proxy.proxy_server" -> "'fastapi.security'" [];
	"litellm.proxy.proxy_server" -> "'fastapi.staticfiles'" [];
	"litellm.proxy.proxy_server" -> "'litellm.proxy.enterprise'" [];
	"litellm.proxy.proxy_server" -> "enterprise" [];
	"litellm.proxy.proxy_server" -> "'litellm_enterprise.proxy'" [];
	"litellm.proxy.proxy_server" -> "typing_extensions" [];
	"litellm.proxy.proxy_server" -> "'azure.identity'" [];
	"litellm.proxy.proxy_server" -> "'azure.keyvault'" [];
	"litellm.proxy.proxy_server" -> "base64" [];
	"litellm.proxy.proxy_server" -> "zoneinfo" [];
	"litellm.proxy.proxy_server" -> "ddtrace" [];
	"litellm.proxy.proxy_server" -> "multipart" [];
	"litellm.proxy.proxy_server" -> "jwt" [];
	"litellm.litellm_core_utils.dd_tracing" -> "contextlib" [];
	"litellm.litellm_core_utils.dd_tracing" -> "typing" [];
	"litellm.litellm_core_utils.dd_tracing" -> "ddtrace" [];
	"litellm.proxy.guardrails.guardrail_registry" -> "importlib" [];
	"litellm.proxy.guardrails.guardrail_registry" -> "os" [];
	"litellm.proxy.guardrails.guardrail_registry" -> "uuid" [];
	"litellm.proxy.guardrails.guardrail_registry" -> "datetime" [];
	"litellm.proxy.guardrails.guardrail_registry" -> "typing" [];
	"litellm.proxy.guardrails.guardrail_registry" -> "litellm" [];
	"litellm.proxy.guardrails.guardrail_initializers" -> "litellm" [];
	"litellm.proxy.guardrails.guardrail_initializers" -> "'litellm_enterprise.enterprise_callbacks'" [];
	"litellm.proxy.guardrails.guardrail_hooks.guardrails_ai" -> "json" [];
	"litellm.proxy.guardrails.guardrail_hooks.guardrails_ai" -> "typing" [];
	"litellm.proxy.guardrails.guardrail_hooks.guardrails_ai" -> "fastapi" [];
	"litellm.proxy.guardrails.guardrail_hooks.guardrails_ai" -> "litellm" [];
	"litellm.proxy.guardrails.guardrail_hooks.presidio" -> "asyncio" [];
	"litellm.proxy.guardrails.guardrail_hooks.presidio" -> "json" [];
	"litellm.proxy.guardrails.guardrail_hooks.presidio" -> "uuid" [];
	"litellm.proxy.guardrails.guardrail_hooks.presidio" -> "datetime" [];
	"litellm.proxy.guardrails.guardrail_hooks.presidio" -> "typing" [];
	"litellm.proxy.guardrails.guardrail_hooks.presidio" -> "aiohttp" [];
	"litellm.proxy.guardrails.guardrail_hooks.presidio" -> "litellm" [];
	"litellm.llms.base_llm.base_model_iterator" -> "json" [];
	"litellm.llms.base_llm.base_model_iterator" -> "abc" [];
	"litellm.llms.base_llm.base_model_iterator" -> "typing" [];
	"litellm.llms.base_llm.base_model_iterator" -> "litellm" [];
	"litellm.types.proxy.guardrails.guardrail_hooks.presidio" -> "typing" [];
	"litellm.proxy.guardrails.guardrail_hooks.lakera_ai_v2" -> "copy" [];
	"litellm.proxy.guardrails.guardrail_hooks.lakera_ai_v2" -> "os" [];
	"litellm.proxy.guardrails.guardrail_hooks.lakera_ai_v2" -> "datetime" [];
	"litellm.proxy.guardrails.guardrail_hooks.lakera_ai_v2" -> "typing" [];
	"litellm.proxy.guardrails.guardrail_hooks.lakera_ai_v2" -> "litellm" [];
	"litellm.types.proxy.guardrails.guardrail_hooks.lakera_ai_v2" -> "typing" [];
	"litellm.proxy.guardrails.guardrail_hooks.lakera_ai" -> "os" [];
	"litellm.proxy.guardrails.guardrail_hooks.lakera_ai" -> "sys" [];
	"litellm.proxy.guardrails.guardrail_hooks.lakera_ai" -> "json" [];
	"litellm.proxy.guardrails.guardrail_hooks.lakera_ai" -> "typing" [];
	"litellm.proxy.guardrails.guardrail_hooks.lakera_ai" -> "fastapi" [];
	"litellm.proxy.guardrails.guardrail_hooks.lakera_ai" -> "litellm" [];
	"litellm.proxy.guardrails.guardrail_helpers" -> "os" [];
	"litellm.proxy.guardrails.guardrail_helpers" -> "sys" [];
	"litellm.proxy.guardrails.guardrail_helpers" -> "typing" [];
	"litellm.proxy.guardrails.guardrail_helpers" -> "litellm" [];
	"litellm.proxy.guardrails.guardrail_hooks.bedrock_guardrails" -> "os" [];
	"litellm.proxy.guardrails.guardrail_hooks.bedrock_guardrails" -> "sys" [];
	"litellm.proxy.guardrails.guardrail_hooks.bedrock_guardrails" -> "json" [];
	"litellm.proxy.guardrails.guardrail_hooks.bedrock_guardrails" -> "typing" [];
	"litellm.proxy.guardrails.guardrail_hooks.bedrock_guardrails" -> "fastapi" [];
	"litellm.proxy.guardrails.guardrail_hooks.bedrock_guardrails" -> "litellm" [];
	"litellm.proxy.guardrails.guardrail_hooks.bedrock_guardrails" -> "'botocore.credentials'" [];
	"litellm.proxy.guardrails.guardrail_hooks.bedrock_guardrails" -> "'botocore.auth'" [];
	"litellm.proxy.guardrails.guardrail_hooks.bedrock_guardrails" -> "'botocore.awsrequest'" [];
	"litellm.types.proxy.guardrails.guardrail_hooks.bedrock_guardrails" -> "typing" [];
	"litellm.llms.bedrock.base_aws_llm" -> "hashlib" [];
	"litellm.llms.bedrock.base_aws_llm" -> "json" [];
	"litellm.llms.bedrock.base_aws_llm" -> "os" [];
	"litellm.llms.bedrock.base_aws_llm" -> "datetime" [];
	"litellm.llms.bedrock.base_aws_llm" -> "typing" [];
	"litellm.llms.bedrock.base_aws_llm" -> "pydantic" [];
	"litellm.llms.bedrock.base_aws_llm" -> "'botocore.awsrequest'" [];
	"litellm.llms.bedrock.base_aws_llm" -> "'botocore.credentials'" [];
	"litellm.llms.bedrock.base_aws_llm" -> "boto3" [];
	"litellm.llms.bedrock.base_aws_llm" -> "'botocore.auth'" [];
	"litellm.proxy.guardrails.guardrail_hooks.aporia_ai" -> "os" [];
	"litellm.proxy.guardrails.guardrail_hooks.aporia_ai" -> "sys" [];
	"litellm.proxy.guardrails.guardrail_hooks.aporia_ai" -> "json" [];
	"litellm.proxy.guardrails.guardrail_hooks.aporia_ai" -> "typing" [];
	"litellm.proxy.guardrails.guardrail_hooks.aporia_ai" -> "fastapi" [];
	"litellm.proxy.guardrails.guardrail_hooks.aporia_ai" -> "litellm" [];
	"litellm.litellm_core_utils.logging_utils" -> "asyncio" [];
	"litellm.litellm_core_utils.logging_utils" -> "functools" [];
	"litellm.litellm_core_utils.logging_utils" -> "datetime" [];
	"litellm.litellm_core_utils.logging_utils" -> "typing" [];
	"litellm.litellm_core_utils.logging_utils" -> "litellm" [];
	"litellm.types.guardrails" -> "datetime" [];
	"litellm.types.guardrails" -> "enum" [];
	"litellm.types.guardrails" -> "typing" [];
	"litellm.types.guardrails" -> "pydantic" [];
	"litellm.types.guardrails" -> "typing_extensions" [];
	"litellm.litellm_core_utils.safe_json_dumps" -> "json" [];
	"litellm.litellm_core_utils.safe_json_dumps" -> "typing" [];
	"litellm.secret_managers.hashicorp_secret_manager" -> "os" [];
	"litellm.secret_managers.hashicorp_secret_manager" -> "typing" [];
	"litellm.secret_managers.hashicorp_secret_manager" -> "litellm" [];
	"litellm.secret_managers.base_secret_manager" -> "abc" [];
	"litellm.secret_managers.base_secret_manager" -> "typing" [];
	"litellm.secret_managers.base_secret_manager" -> "litellm" [];
	"litellm.secret_managers.google_secret_manager" -> "base64" [];
	"litellm.secret_managers.google_secret_manager" -> "os" [];
	"litellm.secret_managers.google_secret_manager" -> "typing" [];
	"litellm.secret_managers.google_secret_manager" -> "litellm" [];
	"litellm.integrations.gcs_bucket.gcs_bucket_base" -> "json" [];
	"litellm.integrations.gcs_bucket.gcs_bucket_base" -> "os" [];
	"litellm.integrations.gcs_bucket.gcs_bucket_base" -> "typing" [];
	"litellm.integrations.gcs_bucket.gcs_bucket_base" -> "litellm" [];
	"litellm.llms.vertex_ai.vertex_llm_base" -> "json" [];
	"litellm.llms.vertex_ai.vertex_llm_base" -> "os" [];
	"litellm.llms.vertex_ai.vertex_llm_base" -> "typing" [];
	"litellm.llms.vertex_ai.vertex_ai_non_gemini" -> "json" [];
	"litellm.llms.vertex_ai.vertex_ai_non_gemini" -> "os" [];
	"litellm.llms.vertex_ai.vertex_ai_non_gemini" -> "time" [];
	"litellm.llms.vertex_ai.vertex_ai_non_gemini" -> "typing" [];
	"litellm.llms.vertex_ai.vertex_ai_non_gemini" -> "litellm" [];
	"litellm.llms.vertex_ai.vertex_ai_non_gemini" -> "vertexai" [];
	"litellm.llms.vertex_ai.vertex_ai_non_gemini" -> "'google.cloud.aiplatform_v1beta1'" [];
	"litellm.llms.vertex_ai.vertex_ai_non_gemini" -> "'vertexai.language_models'" [];
	"litellm.llms.vertex_ai.vertex_ai_non_gemini" -> "'vertexai.preview'" [];
	"litellm.llms.vertex_ai.common_utils" -> "re" [];
	"litellm.llms.vertex_ai.common_utils" -> "typing" [];
	"litellm.llms.vertex_ai.common_utils" -> "litellm" [];
	"litellm.llms.vertex_ai.common_utils" -> "datetime" [];
	"litellm.litellm_core_utils.asyncify" -> "asyncio" [];
	"litellm.litellm_core_utils.asyncify" -> "functools" [];
	"litellm.litellm_core_utils.asyncify" -> "typing" [];
	"litellm.litellm_core_utils.asyncify" -> "anyio" [];
	"litellm.litellm_core_utils.asyncify" -> "typing_extensions" [];
	"litellm.litellm_core_utils.asyncify" -> "inspect" [];
	"litellm.types.integrations.gcs_bucket" -> "typing" [];
	"litellm.integrations.custom_batch_logger" -> "asyncio" [];
	"litellm.integrations.custom_batch_logger" -> "time" [];
	"litellm.integrations.custom_batch_logger" -> "typing" [];
	"litellm.integrations.custom_batch_logger" -> "litellm" [];
	"litellm.secret_managers.aws_secret_manager_v2" -> "json" [];
	"litellm.secret_managers.aws_secret_manager_v2" -> "os" [];
	"litellm.secret_managers.aws_secret_manager_v2" -> "typing" [];
	"litellm.secret_managers.aws_secret_manager_v2" -> "litellm" [];
	"litellm.secret_managers.aws_secret_manager_v2" -> "uuid" [];
	"litellm.secret_managers.aws_secret_manager_v2" -> "'botocore.auth'" [];
	"litellm.secret_managers.aws_secret_manager_v2" -> "'botocore.awsrequest'" [];
	"litellm.types.llms.custom_http" -> "ssl" [];
	"litellm.types.llms.custom_http" -> "enum" [];
	"litellm.types.llms.custom_http" -> "typing" [];
	"litellm.vector_stores.vector_store_registry" -> "json" [];
	"litellm.vector_stores.vector_store_registry" -> "datetime" [];
	"litellm.vector_stores.vector_store_registry" -> "typing" [];
	"litellm.types.vector_stores" -> "datetime" [];
	"litellm.types.vector_stores" -> "enum" [];
	"litellm.types.vector_stores" -> "typing" [];
	"litellm.types.vector_stores" -> "pydantic" [];
	"litellm.types.vector_stores" -> "typing_extensions" [];
	"litellm.proxy._experimental.mcp_server.mcp_server_manager" -> "asyncio" [];
	"litellm.proxy._experimental.mcp_server.mcp_server_manager" -> "json" [];
	"litellm.proxy._experimental.mcp_server.mcp_server_manager" -> "typing" [];
	"litellm.proxy._experimental.mcp_server.mcp_server_manager" -> "mcp" [];
	"litellm.proxy._experimental.mcp_server.mcp_server_manager" -> "'mcp.client'" [];
	"litellm.proxy._experimental.mcp_server.mcp_server_manager" -> "'mcp.types'" [];
	"litellm.types.mcp_server.mcp_server_manager" -> "typing" [];
	"litellm.types.mcp_server.mcp_server_manager" -> "pydantic" [];
	"litellm.types.mcp_server.mcp_server_manager" -> "typing_extensions" [];
	"litellm.integrations.prometheus" -> "sys" [];
	"litellm.integrations.prometheus" -> "datetime" [];
	"litellm.integrations.prometheus" -> "typing" [];
	"litellm.integrations.prometheus" -> "litellm" [];
	"litellm.integrations.prometheus" -> "'apscheduler.schedulers'" [];
	"litellm.integrations.prometheus" -> "prometheus_client" [];
	"prometheus_client" -> "time" [];
	"prometheus_client.registry" -> "abc" [];
	"prometheus_client.registry" -> "copy" [];
	"prometheus_client.registry" -> "threading" [];
	"prometheus_client.registry" -> "typing" [];
	"prometheus_client.process_collector" -> "os" [];
	"prometheus_client.process_collector" -> "typing" [];
	"prometheus_client.process_collector" -> "resource" [];
	"prometheus_client.platform_collector" -> "platform" [];
	"prometheus_client.platform_collector" -> "typing" [];
	"prometheus_client.metrics_core" -> "typing" [];
	"prometheus_client.validation" -> "os" [];
	"prometheus_client.validation" -> "re" [];
	"prometheus_client.samples" -> "typing" [];
	"prometheus_client.metrics" -> "os" [];
	"prometheus_client.metrics" -> "threading" [];
	"prometheus_client.metrics" -> "time" [];
	"prometheus_client.metrics" -> "types" [];
	"prometheus_client.metrics" -> "typing" [];
	"prometheus_client.metrics" -> "warnings" [];
	"prometheus_client.utils" -> "math" [];
	"prometheus_client.context_managers" -> "timeit" [];
	"prometheus_client.context_managers" -> "types" [];
	"prometheus_client.context_managers" -> "typing" [];
	"prometheus_client.decorator" -> "__future__" [];
	"prometheus_client.decorator" -> "collections" [];
	"prometheus_client.decorator" -> "inspect" [];
	"prometheus_client.decorator" -> "itertools" [];
	"prometheus_client.decorator" -> "operator" [];
	"prometheus_client.decorator" -> "re" [];
	"prometheus_client.decorator" -> "sys" [];
	"prometheus_client.decorator" -> "contextlib" [];
	"prometheus_client.values" -> "os" [];
	"prometheus_client.values" -> "threading" [];
	"prometheus_client.values" -> "warnings" [];
	"prometheus_client.mmap_dict" -> "json" [];
	"prometheus_client.mmap_dict" -> "mmap" [];
	"prometheus_client.mmap_dict" -> "os" [];
	"prometheus_client.mmap_dict" -> "struct" [];
	"prometheus_client.mmap_dict" -> "typing" [];
	"prometheus_client.gc_collector" -> "gc" [];
	"prometheus_client.gc_collector" -> "platform" [];
	"prometheus_client.gc_collector" -> "typing" [];
	"prometheus_client.exposition" -> "base64" [];
	"prometheus_client.exposition" -> "contextlib" [];
	"prometheus_client.exposition" -> "gzip" [];
	"prometheus_client.exposition" -> "os" [];
	"prometheus_client.exposition" -> "socket" [];
	"prometheus_client.exposition" -> "socketserver" [];
	"prometheus_client.exposition" -> "ssl" [];
	"prometheus_client.exposition" -> "sys" [];
	"prometheus_client.exposition" -> "threading" [];
	"prometheus_client.exposition" -> "typing" [];
	"prometheus_client.asgi" -> "typing" [];
	"wsgiref.simple_server" -> "sys" [];
	"wsgiref.simple_server" -> "platform" [];
	"wsgiref.simple_server" -> "io" [];
	"wsgiref.simple_server" -> "webbrowser" [];
	"litellm.types.integrations.prometheus" -> "enum" [];
	"litellm.types.integrations.prometheus" -> "typing" [];
	"litellm.types.integrations.prometheus" -> "pydantic" [];
	"litellm.types.integrations.prometheus" -> "typing_extensions" [];
	"litellm.types.integrations.prometheus" -> "litellm" [];
	"litellm._version" -> "importlib_metadata" [];
	"litellm.types.scheduler" -> "enum" [];
	"litellm.types.integrations.slack_alerting" -> "os" [];
	"litellm.types.integrations.slack_alerting" -> "datetime" [];
	"litellm.types.integrations.slack_alerting" -> "enum" [];
	"litellm.types.integrations.slack_alerting" -> "typing" [];
	"litellm.types.integrations.slack_alerting" -> "pydantic" [];
	"litellm.secret_managers.google_kms" -> "os" [];
	"litellm.secret_managers.google_kms" -> "typing" [];
	"litellm.secret_managers.google_kms" -> "litellm" [];
	"litellm.secret_managers.aws_secret_manager" -> "ast" [];
	"litellm.secret_managers.aws_secret_manager" -> "base64" [];
	"litellm.secret_managers.aws_secret_manager" -> "os" [];
	"litellm.secret_managers.aws_secret_manager" -> "re" [];
	"litellm.secret_managers.aws_secret_manager" -> "typing" [];
	"litellm.secret_managers.aws_secret_manager" -> "litellm" [];
	"litellm.secret_managers.aws_secret_manager" -> "boto3" [];
	"litellm.scheduler" -> "enum" [];
	"litellm.scheduler" -> "heapq" [];
	"litellm.scheduler" -> "typing" [];
	"litellm.scheduler" -> "pydantic" [];
	"litellm.router" -> "asyncio" [];
	"litellm.router" -> "copy" [];
	"litellm.router" -> "enum" [];
	"litellm.router" -> "hashlib" [];
	"litellm.router" -> "inspect" [];
	"litellm.router" -> "json" [];
	"litellm.router" -> "logging" [];
	"litellm.router" -> "threading" [];
	"litellm.router" -> "time" [];
	"litellm.router" -> "traceback" [];
	"litellm.router" -> "uuid" [];
	"litellm.router" -> "collections" [];
	"litellm.router" -> "functools" [];
	"litellm.router" -> "typing" [];
	"litellm.router" -> "openai" [];
	"litellm.router" -> "pydantic" [];
	"litellm.router" -> "typing_extensions" [];
	"litellm.router" -> "'opentelemetry.trace'" [];
	"litellm.router" -> "os" [];
	"litellm.responses.utils" -> "base64" [];
	"litellm.responses.utils" -> "typing" [];
	"litellm.responses.utils" -> "litellm" [];
	"litellm.router_utils.pattern_match_deployments" -> "copy" [];
	"litellm.router_utils.pattern_match_deployments" -> "re" [];
	"litellm.router_utils.pattern_match_deployments" -> "typing" [];
	"litellm.router_utils.pattern_match_deployments" -> "litellm" [];
	"litellm.types.services" -> "enum" [];
	"litellm.types.services" -> "uuid" [];
	"litellm.types.services" -> "typing" [];
	"litellm.types.services" -> "pydantic" [];
	"litellm.types.services" -> "typing_extensions" [];
	"litellm.router_utils.router_callbacks.track_deployment_metrics" -> "typing" [];
	"litellm.router_utils.pre_call_checks.responses_api_deployment_check" -> "typing" [];
	"litellm.router_utils.pre_call_checks.prompt_caching_deployment_check" -> "typing" [];
	"litellm.router_utils.pre_call_checks.prompt_caching_deployment_check" -> "litellm" [];
	"litellm.router_utils.prompt_caching_cache" -> "hashlib" [];
	"litellm.router_utils.prompt_caching_cache" -> "json" [];
	"litellm.router_utils.prompt_caching_cache" -> "typing" [];
	"litellm.router_utils.prompt_caching_cache" -> "'opentelemetry.trace'" [];
	"litellm.router_utils.handle_error" -> "typing" [];
	"litellm.router_utils.handle_error" -> "'opentelemetry.trace'" [];
	"litellm.router_utils.fallback_event_handlers" -> "enum" [];
	"litellm.router_utils.fallback_event_handlers" -> "typing" [];
	"litellm.router_utils.fallback_event_handlers" -> "litellm" [];
	"litellm.router_utils.cooldown_handlers" -> "asyncio" [];
	"litellm.router_utils.cooldown_handlers" -> "typing" [];
	"litellm.router_utils.cooldown_handlers" -> "litellm" [];
	"litellm.router_utils.cooldown_handlers" -> "'opentelemetry.trace'" [];
	"litellm.router_utils.cooldown_callbacks" -> "copy" [];
	"litellm.router_utils.cooldown_callbacks" -> "typing" [];
	"litellm.router_utils.cooldown_callbacks" -> "litellm" [];
	"litellm.router_utils.cooldown_cache" -> "time" [];
	"litellm.router_utils.cooldown_cache" -> "typing" [];
	"litellm.router_utils.cooldown_cache" -> "litellm" [];
	"litellm.router_utils.cooldown_cache" -> "'opentelemetry.trace'" [];
	"litellm.router_utils.client_initalization_utils" -> "asyncio" [];
	"litellm.router_utils.client_initalization_utils" -> "typing" [];
	"litellm.router_utils.batch_utils" -> "io" [];
	"litellm.router_utils.batch_utils" -> "json" [];
	"litellm.router_utils.batch_utils" -> "os" [];
	"litellm.router_utils.batch_utils" -> "typing" [];
	"litellm.router_utils.add_retry_fallback_headers" -> "typing" [];
	"litellm.router_utils.add_retry_fallback_headers" -> "pydantic" [];
	"litellm.router_strategy.tag_based_routing" -> "typing" [];
	"litellm.router_strategy.simple_shuffle" -> "random" [];
	"litellm.router_strategy.simple_shuffle" -> "typing" [];
	"litellm.router_strategy.lowest_tpm_rpm_v2" -> "random" [];
	"litellm.router_strategy.lowest_tpm_rpm_v2" -> "typing" [];
	"litellm.router_strategy.lowest_tpm_rpm_v2" -> "litellm" [];
	"litellm.router_strategy.lowest_tpm_rpm_v2" -> "'opentelemetry.trace'" [];
	"litellm.router_strategy.base_routing_strategy" -> "asyncio" [];
	"litellm.router_strategy.base_routing_strategy" -> "abc" [];
	"litellm.router_strategy.base_routing_strategy" -> "typing" [];
	"litellm.router_strategy.lowest_tpm_rpm" -> "traceback" [];
	"litellm.router_strategy.lowest_tpm_rpm" -> "datetime" [];
	"litellm.router_strategy.lowest_tpm_rpm" -> "typing" [];
	"litellm.router_strategy.lowest_tpm_rpm" -> "litellm" [];
	"litellm.router_strategy.lowest_latency" -> "random" [];
	"litellm.router_strategy.lowest_latency" -> "datetime" [];
	"litellm.router_strategy.lowest_latency" -> "typing" [];
	"litellm.router_strategy.lowest_latency" -> "litellm" [];
	"litellm.router_strategy.lowest_latency" -> "'opentelemetry.trace'" [];
	"litellm.router_strategy.lowest_cost" -> "datetime" [];
	"litellm.router_strategy.lowest_cost" -> "typing" [];
	"litellm.router_strategy.lowest_cost" -> "litellm" [];
	"litellm.router_strategy.least_busy" -> "random" [];
	"litellm.router_strategy.least_busy" -> "typing" [];
	"litellm.router_strategy.budget_limiter" -> "asyncio" [];
	"litellm.router_strategy.budget_limiter" -> "datetime" [];
	"litellm.router_strategy.budget_limiter" -> "typing" [];
	"litellm.router_strategy.budget_limiter" -> "litellm" [];
	"litellm.litellm_core_utils.duration_parser" -> "re" [];
	"litellm.litellm_core_utils.duration_parser" -> "time" [];
	"litellm.litellm_core_utils.duration_parser" -> "datetime" [];
	"litellm.litellm_core_utils.duration_parser" -> "typing" [];
	"litellm.proxy.vertex_ai_endpoints.langfuse_endpoints" -> "base64" [];
	"litellm.proxy.vertex_ai_endpoints.langfuse_endpoints" -> "os" [];
	"litellm.proxy.vertex_ai_endpoints.langfuse_endpoints" -> "typing" [];
	"litellm.proxy.vertex_ai_endpoints.langfuse_endpoints" -> "fastapi" [];
	"litellm.proxy.vertex_ai_endpoints.langfuse_endpoints" -> "litellm" [];
	"litellm.proxy.utils" -> "asyncio" [];
	"litellm.proxy.utils" -> "copy" [];
	"litellm.proxy.utils" -> "hashlib" [];
	"litellm.proxy.utils" -> "json" [];
	"litellm.proxy.utils" -> "os" [];
	"litellm.proxy.utils" -> "smtplib" [];
	"litellm.proxy.utils" -> "threading" [];
	"litellm.proxy.utils" -> "time" [];
	"litellm.proxy.utils" -> "traceback" [];
	"litellm.proxy.utils" -> "datetime" [];
	"litellm.proxy.utils" -> "typing" [];
	"litellm.proxy.utils" -> "backoff" [];
	"litellm.proxy.utils" -> "fastapi" [];
	"litellm.proxy.utils" -> "litellm" [];
	"litellm.proxy.utils" -> "'opentelemetry.trace'" [];
	"litellm.proxy.utils" -> "inspect" [];
	"litellm.proxy.utils" -> "uuid" [];
	"litellm.proxy.utils" -> "prisma" [];
	"litellm.proxy.hooks.parallel_request_limiter" -> "asyncio" [];
	"litellm.proxy.hooks.parallel_request_limiter" -> "sys" [];
	"litellm.proxy.hooks.parallel_request_limiter" -> "datetime" [];
	"litellm.proxy.hooks.parallel_request_limiter" -> "typing" [];
	"litellm.proxy.hooks.parallel_request_limiter" -> "fastapi" [];
	"litellm.proxy.hooks.parallel_request_limiter" -> "pydantic" [];
	"litellm.proxy.hooks.parallel_request_limiter" -> "litellm" [];
	"litellm.proxy.hooks.parallel_request_limiter" -> "'opentelemetry.trace'" [];
	"litellm.proxy.hooks.max_budget_limiter" -> "fastapi" [];
	"litellm.proxy.hooks.max_budget_limiter" -> "litellm" [];
	"litellm.proxy.hooks.cache_control_check" -> "fastapi" [];
	"litellm.proxy.hooks.cache_control_check" -> "litellm" [];
	"litellm.proxy.hooks" -> "os" [];
	"litellm.proxy.hooks" -> "typing" [];
	"litellm.proxy.hooks" -> "'enterprise.enterprise_hooks'" [];
	"litellm.proxy.hooks.parallel_request_limiter_v2" -> "asyncio" [];
	"litellm.proxy.hooks.parallel_request_limiter_v2" -> "sys" [];
	"litellm.proxy.hooks.parallel_request_limiter_v2" -> "datetime" [];
	"litellm.proxy.hooks.parallel_request_limiter_v2" -> "typing" [];
	"litellm.proxy.hooks.parallel_request_limiter_v2" -> "fastapi" [];
	"litellm.proxy.hooks.parallel_request_limiter_v2" -> "litellm" [];
	"litellm.proxy.hooks.parallel_request_limiter_v2" -> "'opentelemetry.trace'" [];
	"litellm.proxy.db.prisma_client" -> "asyncio" [];
	"litellm.proxy.db.prisma_client" -> "os" [];
	"litellm.proxy.db.prisma_client" -> "random" [];
	"litellm.proxy.db.prisma_client" -> "subprocess" [];
	"litellm.proxy.db.prisma_client" -> "time" [];
	"litellm.proxy.db.prisma_client" -> "urllib" [];
	"litellm.proxy.db.prisma_client" -> "datetime" [];
	"litellm.proxy.db.prisma_client" -> "typing" [];
	"litellm.proxy.db.prisma_client" -> "prisma" [];
	"litellm.proxy.db.prisma_client" -> "litellm_proxy_extras" [];
	"litellm.proxy.auth.rds_iam_token" -> "os" [];
	"litellm.proxy.auth.rds_iam_token" -> "typing" [];
	"litellm.proxy.auth.rds_iam_token" -> "boto3" [];
	"litellm.proxy.db.log_db_metrics" -> "asyncio" [];
	"litellm.proxy.db.log_db_metrics" -> "datetime" [];
	"litellm.proxy.db.log_db_metrics" -> "functools" [];
	"litellm.proxy.db.log_db_metrics" -> "typing" [];
	"litellm.proxy.db.log_db_metrics" -> "prisma" [];
	"litellm.proxy.db.db_spend_update_writer" -> "asyncio" [];
	"litellm.proxy.db.db_spend_update_writer" -> "json" [];
	"litellm.proxy.db.db_spend_update_writer" -> "os" [];
	"litellm.proxy.db.db_spend_update_writer" -> "time" [];
	"litellm.proxy.db.db_spend_update_writer" -> "traceback" [];
	"litellm.proxy.db.db_spend_update_writer" -> "datetime" [];
	"litellm.proxy.db.db_spend_update_writer" -> "typing" [];
	"litellm.proxy.db.db_spend_update_writer" -> "litellm" [];
	"litellm.proxy.db.db_transaction_queue.spend_update_queue" -> "asyncio" [];
	"litellm.proxy.db.db_transaction_queue.spend_update_queue" -> "typing" [];
	"litellm.proxy.db.db_transaction_queue.base_update_queue" -> "asyncio" [];
	"litellm.proxy.db.db_transaction_queue.base_update_queue" -> "typing" [];
	"litellm.proxy.db.db_transaction_queue.redis_update_buffer" -> "asyncio" [];
	"litellm.proxy.db.db_transaction_queue.redis_update_buffer" -> "json" [];
	"litellm.proxy.db.db_transaction_queue.redis_update_buffer" -> "typing" [];
	"litellm.proxy.db.db_transaction_queue.pod_lock_manager" -> "asyncio" [];
	"litellm.proxy.db.db_transaction_queue.pod_lock_manager" -> "uuid" [];
	"litellm.proxy.db.db_transaction_queue.pod_lock_manager" -> "typing" [];
	"litellm.proxy.db.db_transaction_queue.daily_spend_update_queue" -> "asyncio" [];
	"litellm.proxy.db.db_transaction_queue.daily_spend_update_queue" -> "copy" [];
	"litellm.proxy.db.db_transaction_queue.daily_spend_update_queue" -> "typing" [];
	"litellm.proxy.db.create_views" -> "typing" [];
	"litellm.proxy.db.create_views" -> "litellm" [];
	"litellm.llms.custom_httpx.httpx_handler" -> "typing" [];
	"litellm.integrations.SlackAlerting.utils" -> "asyncio" [];
	"litellm.integrations.SlackAlerting.utils" -> "typing" [];
	"email.mime.nonmultipart" -> "email" [];
	"email.mime.base" -> "email" [];
	"litellm.proxy.ui_crud_endpoints.proxy_setting_endpoints" -> "typing" [];
	"litellm.proxy.ui_crud_endpoints.proxy_setting_endpoints" -> "fastapi" [];
	"litellm.proxy.ui_crud_endpoints.proxy_setting_endpoints" -> "litellm" [];
	"litellm.proxy.ui_crud_endpoints.proxy_setting_endpoints" -> "pydantic" [];
	"litellm.types.proxy.management_endpoints.ui_sso" -> "typing" [];
	"litellm.types.proxy.management_endpoints.ui_sso" -> "pydantic" [];
	"litellm.proxy.types_utils.utils" -> "importlib" [];
	"litellm.proxy.types_utils.utils" -> "os" [];
	"litellm.proxy.types_utils.utils" -> "typing" [];
	"litellm.proxy.spend_tracking.spend_tracking_utils" -> "hashlib" [];
	"litellm.proxy.spend_tracking.spend_tracking_utils" -> "json" [];
	"litellm.proxy.spend_tracking.spend_tracking_utils" -> "secrets" [];
	"litellm.proxy.spend_tracking.spend_tracking_utils" -> "datetime" [];
	"litellm.proxy.spend_tracking.spend_tracking_utils" -> "typing" [];
	"litellm.proxy.spend_tracking.spend_tracking_utils" -> "pydantic" [];
	"litellm.proxy.spend_tracking.spend_tracking_utils" -> "litellm" [];
	"litellm.proxy.spend_tracking.spend_tracking_utils" -> "time" [];
	"litellm.proxy.spend_tracking.spend_tracking_utils" -> "uuid" [];
	"litellm.proxy.spend_tracking.spend_management_endpoints" -> "collections" [];
	"litellm.proxy.spend_tracking.spend_management_endpoints" -> "os" [];
	"litellm.proxy.spend_tracking.spend_management_endpoints" -> "datetime" [];
	"litellm.proxy.spend_tracking.spend_management_endpoints" -> "functools" [];
	"litellm.proxy.spend_tracking.spend_management_endpoints" -> "typing" [];
	"litellm.proxy.spend_tracking.spend_management_endpoints" -> "fastapi" [];
	"litellm.proxy.spend_tracking.spend_management_endpoints" -> "litellm" [];
	"litellm.proxy.spend_tracking.spend_management_endpoints" -> "'enterprise.utils'" [];
	"litellm.proxy.spend_tracking.spend_management_endpoints" -> "traceback" [];
	"litellm.integrations.prometheus_helpers.prometheus_api" -> "time" [];
	"litellm.integrations.prometheus_helpers.prometheus_api" -> "datetime" [];
	"litellm.integrations.prometheus_helpers.prometheus_api" -> "typing" [];
	"litellm.integrations.prometheus_helpers.prometheus_api" -> "litellm" [];
	"litellm.cost_calculator" -> "time" [];
	"litellm.cost_calculator" -> "functools" [];
	"litellm.cost_calculator" -> "typing" [];
	"litellm.cost_calculator" -> "pydantic" [];
	"litellm.llms.vertex_ai.image_generation.cost_calculator" -> "litellm" [];
	"litellm.llms.vertex_ai.cost_calculator" -> "typing" [];
	"litellm.llms.vertex_ai.cost_calculator" -> "litellm" [];
	"litellm.llms.together_ai.cost_calculator" -> "re" [];
	"litellm.llms.openai.cost_calculation" -> "typing" [];
	"litellm.llms.gemini.cost_calculator" -> "typing" [];
	"litellm.llms.fireworks_ai.cost_calculator" -> "typing" [];
	"litellm.llms.fireworks_ai.cost_calculator" -> "re" [];
	"litellm.llms.deepseek.cost_calculator" -> "typing" [];
	"litellm.llms.databricks.cost_calculator" -> "typing" [];
	"litellm.llms.bedrock.image.cost_calculator" -> "typing" [];
	"litellm.llms.bedrock.image.cost_calculator" -> "litellm" [];
	"litellm.llms.azure.cost_calculation" -> "typing" [];
	"litellm.llms.anthropic.cost_calculation" -> "typing" [];
	"litellm.litellm_core_utils.llm_cost_calc.utils" -> "typing" [];
	"litellm.litellm_core_utils.llm_cost_calc.utils" -> "litellm" [];
	"litellm.litellm_core_utils.llm_cost_calc.tool_call_cost_tracking" -> "typing" [];
	"litellm.litellm_core_utils.llm_cost_calc.tool_call_cost_tracking" -> "litellm" [];
	"litellm.proxy.route_llm_request" -> "typing" [];
	"litellm.proxy.route_llm_request" -> "fastapi" [];
	"litellm.proxy.route_llm_request" -> "litellm" [];
	"litellm.proxy.response_api_endpoints.endpoints" -> "fastapi" [];
	"litellm.proxy.rerank_endpoints.endpoints" -> "orjson" [];
	"litellm.proxy.rerank_endpoints.endpoints" -> "fastapi" [];
	"litellm.proxy.rerank_endpoints.endpoints" -> "'fastapi.responses'" [];
	"litellm.proxy.rerank_endpoints.endpoints" -> "asyncio" [];
	"litellm.proxy.pass_through_endpoints.pass_through_endpoints" -> "ast" [];
	"litellm.proxy.pass_through_endpoints.pass_through_endpoints" -> "asyncio" [];
	"litellm.proxy.pass_through_endpoints.pass_through_endpoints" -> "json" [];
	"litellm.proxy.pass_through_endpoints.pass_through_endpoints" -> "uuid" [];
	"litellm.proxy.pass_through_endpoints.pass_through_endpoints" -> "base64" [];
	"litellm.proxy.pass_through_endpoints.pass_through_endpoints" -> "datetime" [];
	"litellm.proxy.pass_through_endpoints.pass_through_endpoints" -> "typing" [];
	"litellm.proxy.pass_through_endpoints.pass_through_endpoints" -> "fastapi" [];
	"litellm.proxy.pass_through_endpoints.pass_through_endpoints" -> "'fastapi.responses'" [];
	"litellm.proxy.pass_through_endpoints.pass_through_endpoints" -> "'starlette.datastructures'" [];
	"litellm.proxy.pass_through_endpoints.pass_through_endpoints" -> "litellm" [];
	"litellm.proxy.pass_through_endpoints.success_handler" -> "json" [];
	"litellm.proxy.pass_through_endpoints.success_handler" -> "datetime" [];
	"litellm.proxy.pass_through_endpoints.success_handler" -> "typing" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.vertex_passthrough_logging_handler" -> "json" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.vertex_passthrough_logging_handler" -> "re" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.vertex_passthrough_logging_handler" -> "datetime" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.vertex_passthrough_logging_handler" -> "typing" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.vertex_passthrough_logging_handler" -> "litellm" [];
	"litellm.llms.vertex_ai.image_generation.image_generation_handler" -> "json" [];
	"litellm.llms.vertex_ai.image_generation.image_generation_handler" -> "typing" [];
	"litellm.llms.vertex_ai.image_generation.image_generation_handler" -> "litellm" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.cohere_passthrough_logging_handler" -> "typing" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.cohere_passthrough_logging_handler" -> "litellm" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.base_passthrough_logging_handler" -> "json" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.base_passthrough_logging_handler" -> "datetime" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.base_passthrough_logging_handler" -> "typing" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.base_passthrough_logging_handler" -> "litellm" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.base_passthrough_logging_handler" -> "abc" [];
	"litellm.llms.cohere.common_utils" -> "json" [];
	"litellm.llms.cohere.common_utils" -> "typing" [];
	"litellm.llms.cohere.chat.v2_transformation" -> "time" [];
	"litellm.llms.cohere.chat.v2_transformation" -> "typing" [];
	"litellm.llms.cohere.chat.v2_transformation" -> "litellm" [];
	"litellm.types.llms.cohere" -> "typing" [];
	"litellm.types.llms.cohere" -> "typing_extensions" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "copy" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "json" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "re" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "uuid" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "enum" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "typing" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "litellm" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "PIL" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "io" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "base64" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "mimetypes" [];
	"litellm.litellm_core_utils.prompt_templates.image_handling" -> "base64" [];
	"litellm.litellm_core_utils.prompt_templates.image_handling" -> "litellm" [];
	"litellm.types.llms.ollama" -> "json" [];
	"litellm.types.llms.ollama" -> "typing" [];
	"litellm.types.llms.ollama" -> "pydantic" [];
	"litellm.types.llms.ollama" -> "typing_extensions" [];
	"litellm.types.llms.bedrock" -> "json" [];
	"litellm.types.llms.bedrock" -> "typing" [];
	"litellm.types.llms.bedrock" -> "typing_extensions" [];
	"litellm.types.llms.bedrock" -> "'botocore.awsrequest'" [];
	"litellm.types.llms.bedrock" -> "pydantic" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.assembly_passthrough_logging_handler" -> "asyncio" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.assembly_passthrough_logging_handler" -> "json" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.assembly_passthrough_logging_handler" -> "time" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.assembly_passthrough_logging_handler" -> "datetime" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.assembly_passthrough_logging_handler" -> "typing" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.assembly_passthrough_logging_handler" -> "litellm" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.anthropic_passthrough_logging_handler" -> "json" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.anthropic_passthrough_logging_handler" -> "datetime" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.anthropic_passthrough_logging_handler" -> "typing" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.anthropic_passthrough_logging_handler" -> "litellm" [];
	"litellm.llms.anthropic.chat.transformation" -> "json" [];
	"litellm.llms.anthropic.chat.transformation" -> "time" [];
	"litellm.llms.anthropic.chat.transformation" -> "typing" [];
	"litellm.llms.anthropic.chat.transformation" -> "litellm" [];
	"litellm.llms.anthropic.common_utils" -> "typing" [];
	"litellm.llms.anthropic.common_utils" -> "litellm" [];
	"litellm.llms.anthropic.chat.handler" -> "copy" [];
	"litellm.llms.anthropic.chat.handler" -> "json" [];
	"litellm.llms.anthropic.chat.handler" -> "typing" [];
	"litellm.llms.anthropic.chat.handler" -> "litellm" [];
	"litellm.llms.base" -> "typing" [];
	"litellm.llms.base" -> "litellm" [];
	"litellm.proxy.pass_through_endpoints.streaming_handler" -> "asyncio" [];
	"litellm.proxy.pass_through_endpoints.streaming_handler" -> "threading" [];
	"litellm.proxy.pass_through_endpoints.streaming_handler" -> "datetime" [];
	"litellm.proxy.pass_through_endpoints.streaming_handler" -> "typing" [];
	"litellm.types.passthrough_endpoints.pass_through_endpoints" -> "enum" [];
	"litellm.types.passthrough_endpoints.pass_through_endpoints" -> "typing" [];
	"litellm.proxy.pass_through_endpoints.llm_passthrough_endpoints" -> "os" [];
	"litellm.proxy.pass_through_endpoints.llm_passthrough_endpoints" -> "typing" [];
	"litellm.proxy.pass_through_endpoints.llm_passthrough_endpoints" -> "fastapi" [];
	"litellm.proxy.pass_through_endpoints.llm_passthrough_endpoints" -> "litellm" [];
	"litellm.proxy.pass_through_endpoints.llm_passthrough_endpoints" -> "'botocore.auth'" [];
	"litellm.proxy.pass_through_endpoints.llm_passthrough_endpoints" -> "'botocore.awsrequest'" [];
	"litellm.proxy.pass_through_endpoints.llm_passthrough_endpoints" -> "'botocore.credentials'" [];
	"litellm.proxy.pass_through_endpoints.llm_passthrough_endpoints" -> "abc" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "copy" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "json" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "time" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "types" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "uuid" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "functools" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "typing" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "litellm" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "'botocore.auth'" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "'botocore.awsrequest'" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "'botocore.credentials'" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "'botocore.loaders'" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "'botocore.model'" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "'botocore.parsers'" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "'botocore.eventstream'" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_deepseek_transformation" -> "typing" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_deepseek_transformation" -> "litellm" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_llama_transformation" -> "types" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_llama_transformation" -> "typing" [];
	"litellm.llms.bedrock.chat.invoke_transformations.base_invoke_transformation" -> "copy" [];
	"litellm.llms.bedrock.chat.invoke_transformations.base_invoke_transformation" -> "json" [];
	"litellm.llms.bedrock.chat.invoke_transformations.base_invoke_transformation" -> "time" [];
	"litellm.llms.bedrock.chat.invoke_transformations.base_invoke_transformation" -> "functools" [];
	"litellm.llms.bedrock.chat.invoke_transformations.base_invoke_transformation" -> "typing" [];
	"litellm.llms.bedrock.chat.invoke_transformations.base_invoke_transformation" -> "litellm" [];
	"litellm.llms.bedrock.chat.converse_transformation" -> "copy" [];
	"litellm.llms.bedrock.chat.converse_transformation" -> "time" [];
	"litellm.llms.bedrock.chat.converse_transformation" -> "types" [];
	"litellm.llms.bedrock.chat.converse_transformation" -> "typing" [];
	"litellm.llms.bedrock.chat.converse_transformation" -> "litellm" [];
	"litellm.llms.bedrock.chat.converse_handler" -> "json" [];
	"litellm.llms.bedrock.chat.converse_handler" -> "urllib" [];
	"litellm.llms.bedrock.chat.converse_handler" -> "typing" [];
	"litellm.llms.bedrock.chat.converse_handler" -> "litellm" [];
	"litellm.proxy.pass_through_endpoints.passthrough_endpoint_router" -> "typing" [];
	"litellm.types.passthrough_endpoints.vertex_ai" -> "typing" [];
	"litellm.types.passthrough_endpoints.vertex_ai" -> "pydantic" [];
	"litellm.proxy.pass_through_endpoints.common_utils" -> "fastapi" [];
	"litellm.proxy.auth.route_checks" -> "re" [];
	"litellm.proxy.auth.route_checks" -> "typing" [];
	"litellm.proxy.auth.route_checks" -> "fastapi" [];
	"litellm.proxy.auth.auth_checks_organization" -> "typing" [];
	"litellm.proxy.auth.auth_checks_organization" -> "fastapi" [];
	"litellm.proxy.openai_files_endpoints.files_endpoints" -> "asyncio" [];
	"litellm.proxy.openai_files_endpoints.files_endpoints" -> "traceback" [];
	"litellm.proxy.openai_files_endpoints.files_endpoints" -> "typing" [];
	"litellm.proxy.openai_files_endpoints.files_endpoints" -> "fastapi" [];
	"litellm.proxy.openai_files_endpoints.files_endpoints" -> "litellm" [];
	"litellm.proxy.openai_files_endpoints.common_utils" -> "base64" [];
	"litellm.proxy.openai_files_endpoints.common_utils" -> "re" [];
	"litellm.proxy.openai_files_endpoints.common_utils" -> "typing" [];
	"litellm.proxy.middleware.prometheus_auth_middleware" -> "fastapi" [];
	"litellm.proxy.middleware.prometheus_auth_middleware" -> "'fastapi.responses'" [];
	"litellm.proxy.middleware.prometheus_auth_middleware" -> "'starlette.middleware'" [];
	"litellm.proxy.middleware.prometheus_auth_middleware" -> "litellm" [];
	"litellm.proxy.management_helpers.audit_logs" -> "json" [];
	"litellm.proxy.management_helpers.audit_logs" -> "uuid" [];
	"litellm.proxy.management_helpers.audit_logs" -> "datetime" [];
	"litellm.proxy.management_helpers.audit_logs" -> "litellm" [];
	"litellm.proxy.management_endpoints.ui_sso" -> "asyncio" [];
	"litellm.proxy.management_endpoints.ui_sso" -> "os" [];
	"litellm.proxy.management_endpoints.ui_sso" -> "uuid" [];
	"litellm.proxy.management_endpoints.ui_sso" -> "copy" [];
	"litellm.proxy.management_endpoints.ui_sso" -> "typing" [];
	"litellm.proxy.management_endpoints.ui_sso" -> "fastapi" [];
	"litellm.proxy.management_endpoints.ui_sso" -> "'fastapi.responses'" [];
	"litellm.proxy.management_endpoints.ui_sso" -> "litellm" [];
	"litellm.proxy.management_endpoints.ui_sso" -> "'fastapi_sso.sso'" [];
	"litellm.proxy.management_endpoints.ui_sso" -> "jwt" [];
	"litellm.proxy.management_endpoints.ui_sso" -> "json" [];
	"litellm.proxy.management_endpoints.types" -> "typing" [];
	"litellm.proxy.management_endpoints.types" -> "fastapi_sso" [];
	"litellm.proxy.common_utils.admin_ui_utils" -> "'fastapi.responses'" [];
	"litellm.proxy.management_endpoints.team_endpoints" -> "asyncio" [];
	"litellm.proxy.management_endpoints.team_endpoints" -> "json" [];
	"litellm.proxy.management_endpoints.team_endpoints" -> "traceback" [];
	"litellm.proxy.management_endpoints.team_endpoints" -> "uuid" [];
	"litellm.proxy.management_endpoints.team_endpoints" -> "datetime" [];
	"litellm.proxy.management_endpoints.team_endpoints" -> "typing" [];
	"litellm.proxy.management_endpoints.team_endpoints" -> "fastapi" [];
	"litellm.proxy.management_endpoints.team_endpoints" -> "pydantic" [];
	"litellm.proxy.management_endpoints.team_endpoints" -> "litellm" [];
	"litellm.proxy.common_utils.timezone_utils" -> "datetime" [];
	"litellm.types.proxy.management_endpoints.team_endpoints" -> "typing" [];
	"litellm.types.proxy.management_endpoints.team_endpoints" -> "pydantic" [];
	"litellm.types.proxy.management_endpoints.common_daily_activity" -> "datetime" [];
	"litellm.types.proxy.management_endpoints.common_daily_activity" -> "enum" [];
	"litellm.types.proxy.management_endpoints.common_daily_activity" -> "typing" [];
	"litellm.types.proxy.management_endpoints.common_daily_activity" -> "pydantic" [];
	"litellm.proxy.management_helpers.utils" -> "uuid" [];
	"litellm.proxy.management_helpers.utils" -> "datetime" [];
	"litellm.proxy.management_helpers.utils" -> "functools" [];
	"litellm.proxy.management_helpers.utils" -> "typing" [];
	"litellm.proxy.management_helpers.utils" -> "fastapi" [];
	"litellm.proxy.management_helpers.utils" -> "litellm" [];
	"litellm.proxy.management_helpers.team_member_permission_checks" -> "typing" [];
	"litellm.proxy.management_endpoints.team_callback_endpoints" -> "json" [];
	"litellm.proxy.management_endpoints.team_callback_endpoints" -> "traceback" [];
	"litellm.proxy.management_endpoints.team_callback_endpoints" -> "typing" [];
	"litellm.proxy.management_endpoints.team_callback_endpoints" -> "fastapi" [];
	"litellm.proxy.management_endpoints.tag_management_endpoints" -> "datetime" [];
	"litellm.proxy.management_endpoints.tag_management_endpoints" -> "json" [];
	"litellm.proxy.management_endpoints.tag_management_endpoints" -> "typing" [];
	"litellm.proxy.management_endpoints.tag_management_endpoints" -> "fastapi" [];
	"litellm.types.tag_management" -> "datetime" [];
	"litellm.types.tag_management" -> "typing" [];
	"litellm.types.tag_management" -> "pydantic" [];
	"litellm.proxy.management_endpoints.common_daily_activity" -> "datetime" [];
	"litellm.proxy.management_endpoints.common_daily_activity" -> "typing" [];
	"litellm.proxy.management_endpoints.common_daily_activity" -> "fastapi" [];
	"litellm.proxy.management_endpoints.scim.scim_v2" -> "uuid" [];
	"litellm.proxy.management_endpoints.scim.scim_v2" -> "typing" [];
	"litellm.proxy.management_endpoints.scim.scim_v2" -> "fastapi" [];
	"litellm.types.proxy.management_endpoints.scim_v2" -> "typing" [];
	"litellm.types.proxy.management_endpoints.scim_v2" -> "fastapi" [];
	"litellm.types.proxy.management_endpoints.scim_v2" -> "pydantic" [];
	"litellm.proxy.management_endpoints.scim.scim_transformations" -> "typing" [];
	"litellm.proxy.management_endpoints.organization_endpoints" -> "uuid" [];
	"litellm.proxy.management_endpoints.organization_endpoints" -> "typing" [];
	"litellm.proxy.management_endpoints.organization_endpoints" -> "fastapi" [];
	"litellm.proxy.management_endpoints.model_management_endpoints" -> "asyncio" [];
	"litellm.proxy.management_endpoints.model_management_endpoints" -> "datetime" [];
	"litellm.proxy.management_endpoints.model_management_endpoints" -> "json" [];
	"litellm.proxy.management_endpoints.model_management_endpoints" -> "uuid" [];
	"litellm.proxy.management_endpoints.model_management_endpoints" -> "typing" [];
	"litellm.proxy.management_endpoints.model_management_endpoints" -> "fastapi" [];
	"litellm.proxy.management_endpoints.model_management_endpoints" -> "pydantic" [];
	"litellm.proxy.management_endpoints.key_management_endpoints" -> "asyncio" [];
	"litellm.proxy.management_endpoints.key_management_endpoints" -> "copy" [];
	"litellm.proxy.management_endpoints.key_management_endpoints" -> "json" [];
	"litellm.proxy.management_endpoints.key_management_endpoints" -> "secrets" [];
	"litellm.proxy.management_endpoints.key_management_endpoints" -> "traceback" [];
	"litellm.proxy.management_endpoints.key_management_endpoints" -> "uuid" [];
	"litellm.proxy.management_endpoints.key_management_endpoints" -> "datetime" [];
	"litellm.proxy.management_endpoints.key_management_endpoints" -> "typing" [];
	"litellm.proxy.management_endpoints.key_management_endpoints" -> "fastapi" [];
	"litellm.proxy.management_endpoints.key_management_endpoints" -> "litellm" [];
	"litellm.proxy.management_endpoints.key_management_endpoints" -> "logging" [];
	"litellm.proxy.management_endpoints.key_management_endpoints" -> "io" [];
	"litellm.proxy.hooks.key_management_event_hooks" -> "asyncio" [];
	"litellm.proxy.hooks.key_management_event_hooks" -> "json" [];
	"litellm.proxy.hooks.key_management_event_hooks" -> "uuid" [];
	"litellm.proxy.hooks.key_management_event_hooks" -> "datetime" [];
	"litellm.proxy.hooks.key_management_event_hooks" -> "typing" [];
	"litellm.proxy.hooks.key_management_event_hooks" -> "fastapi" [];
	"litellm.proxy.hooks.key_management_event_hooks" -> "litellm" [];
	"litellm.proxy.hooks.key_management_event_hooks" -> "'litellm_enterprise.enterprise_callbacks'" [];
	"litellm.types.enterprise.enterprise_callbacks.send_emails" -> "enum" [];
	"litellm.types.enterprise.enterprise_callbacks.send_emails" -> "typing" [];
	"litellm.types.enterprise.enterprise_callbacks.send_emails" -> "pydantic" [];
	"litellm.proxy.management_endpoints.internal_user_endpoints" -> "asyncio" [];
	"litellm.proxy.management_endpoints.internal_user_endpoints" -> "traceback" [];
	"litellm.proxy.management_endpoints.internal_user_endpoints" -> "uuid" [];
	"litellm.proxy.management_endpoints.internal_user_endpoints" -> "datetime" [];
	"litellm.proxy.management_endpoints.internal_user_endpoints" -> "typing" [];
	"litellm.proxy.management_endpoints.internal_user_endpoints" -> "fastapi" [];
	"litellm.proxy.management_endpoints.internal_user_endpoints" -> "litellm" [];
	"litellm.types.proxy.management_endpoints.internal_user_endpoints" -> "typing" [];
	"litellm.types.proxy.management_endpoints.internal_user_endpoints" -> "fastapi" [];
	"litellm.types.proxy.management_endpoints.internal_user_endpoints" -> "pydantic" [];
	"litellm.proxy.hooks.user_management_event_hooks" -> "asyncio" [];
	"litellm.proxy.hooks.user_management_event_hooks" -> "uuid" [];
	"litellm.proxy.hooks.user_management_event_hooks" -> "datetime" [];
	"litellm.proxy.hooks.user_management_event_hooks" -> "typing" [];
	"litellm.proxy.hooks.user_management_event_hooks" -> "'litellm_enterprise.enterprise_callbacks'" [];
	"litellm.proxy.hooks.user_management_event_hooks" -> "pydantic" [];
	"litellm.proxy.hooks.user_management_event_hooks" -> "litellm" [];
	"litellm.proxy.management_endpoints.customer_endpoints" -> "traceback" [];
	"litellm.proxy.management_endpoints.customer_endpoints" -> "typing" [];
	"litellm.proxy.management_endpoints.customer_endpoints" -> "fastapi" [];
	"litellm.proxy.management_endpoints.customer_endpoints" -> "litellm" [];
	"litellm.proxy.management_endpoints.customer_endpoints" -> "'enterprise.enterprise_hooks'" [];
	"litellm.proxy.management_endpoints.common_utils" -> "typing" [];
	"litellm.proxy.management_endpoints.budget_management_endpoints" -> "fastapi" [];
	"litellm.proxy.litellm_pre_call_utils" -> "asyncio" [];
	"litellm.proxy.litellm_pre_call_utils" -> "copy" [];
	"litellm.proxy.litellm_pre_call_utils" -> "time" [];
	"litellm.proxy.litellm_pre_call_utils" -> "typing" [];
	"litellm.proxy.litellm_pre_call_utils" -> "fastapi" [];
	"litellm.proxy.litellm_pre_call_utils" -> "starlette" [];
	"litellm.proxy.litellm_pre_call_utils" -> "litellm" [];
	"litellm.litellm_core_utils.safe_json_loads" -> "typing" [];
	"litellm.litellm_core_utils.safe_json_loads" -> "json" [];
	"litellm.proxy.hooks.proxy_track_cost_callback" -> "asyncio" [];
	"litellm.proxy.hooks.proxy_track_cost_callback" -> "traceback" [];
	"litellm.proxy.hooks.proxy_track_cost_callback" -> "datetime" [];
	"litellm.proxy.hooks.proxy_track_cost_callback" -> "typing" [];
	"litellm.proxy.hooks.proxy_track_cost_callback" -> "litellm" [];
	"litellm.proxy.hooks.prompt_injection_detection" -> "difflib" [];
	"litellm.proxy.hooks.prompt_injection_detection" -> "typing" [];
	"litellm.proxy.hooks.prompt_injection_detection" -> "fastapi" [];
	"litellm.proxy.hooks.prompt_injection_detection" -> "litellm" [];
	"litellm.proxy.hooks.model_max_budget_limiter" -> "json" [];
	"litellm.proxy.hooks.model_max_budget_limiter" -> "typing" [];
	"litellm.proxy.hooks.model_max_budget_limiter" -> "litellm" [];
	"litellm.proxy.health_endpoints._health_endpoints" -> "asyncio" [];
	"litellm.proxy.health_endpoints._health_endpoints" -> "copy" [];
	"litellm.proxy.health_endpoints._health_endpoints" -> "os" [];
	"litellm.proxy.health_endpoints._health_endpoints" -> "traceback" [];
	"litellm.proxy.health_endpoints._health_endpoints" -> "datetime" [];
	"litellm.proxy.health_endpoints._health_endpoints" -> "typing" [];
	"litellm.proxy.health_endpoints._health_endpoints" -> "fastapi" [];
	"litellm.proxy.health_endpoints._health_endpoints" -> "litellm" [];
	"litellm.integrations.langfuse.langfuse" -> "copy" [];
	"litellm.integrations.langfuse.langfuse" -> "os" [];
	"litellm.integrations.langfuse.langfuse" -> "traceback" [];
	"litellm.integrations.langfuse.langfuse" -> "datetime" [];
	"litellm.integrations.langfuse.langfuse" -> "typing" [];
	"litellm.integrations.langfuse.langfuse" -> "litellm" [];
	"litellm.integrations.langfuse.langfuse" -> "langfuse" [];
	"litellm.integrations.langfuse.langfuse" -> "'langfuse.model'" [];
	"litellm.types.integrations.langfuse" -> "typing" [];
	"litellm.integrations.datadog.datadog" -> "asyncio" [];
	"litellm.integrations.datadog.datadog" -> "datetime" [];
	"litellm.integrations.datadog.datadog" -> "json" [];
	"litellm.integrations.datadog.datadog" -> "os" [];
	"litellm.integrations.datadog.datadog" -> "traceback" [];
	"litellm.integrations.datadog.datadog" -> "uuid" [];
	"litellm.integrations.datadog.datadog" -> "typing" [];
	"litellm.integrations.datadog.datadog" -> "litellm" [];
	"litellm.integrations.datadog.datadog" -> "gzip" [];
	"litellm.integrations.additional_logging_utils" -> "abc" [];
	"litellm.integrations.additional_logging_utils" -> "datetime" [];
	"litellm.integrations.additional_logging_utils" -> "typing" [];
	"litellm.types.integrations.datadog" -> "enum" [];
	"litellm.types.integrations.datadog" -> "typing" [];
	"litellm.types.integrations.base_health_check" -> "typing" [];
	"litellm.proxy.health_check" -> "asyncio" [];
	"litellm.proxy.health_check" -> "logging" [];
	"litellm.proxy.health_check" -> "random" [];
	"litellm.proxy.health_check" -> "typing" [];
	"litellm.proxy.health_check" -> "litellm" [];
	"litellm.proxy.guardrails.init_guardrails" -> "typing" [];
	"litellm.proxy.guardrails.init_guardrails" -> "litellm" [];
	"litellm.proxy.guardrails.guardrail_endpoints" -> "typing" [];
	"litellm.proxy.guardrails.guardrail_endpoints" -> "fastapi" [];
	"litellm.proxy.guardrails.guardrail_endpoints" -> "pydantic" [];
	"litellm.proxy.fine_tuning_endpoints.endpoints" -> "asyncio" [];
	"litellm.proxy.fine_tuning_endpoints.endpoints" -> "traceback" [];
	"litellm.proxy.fine_tuning_endpoints.endpoints" -> "typing" [];
	"litellm.proxy.fine_tuning_endpoints.endpoints" -> "fastapi" [];
	"litellm.proxy.fine_tuning_endpoints.endpoints" -> "litellm" [];
	"litellm.proxy.db.exception_handler" -> "typing" [];
	"litellm.proxy.db.exception_handler" -> "prisma" [];
	"litellm.proxy.db.db_transaction_queue.spend_log_cleanup" -> "datetime" [];
	"litellm.proxy.db.db_transaction_queue.spend_log_cleanup" -> "typing" [];
	"litellm.proxy.db.db_transaction_queue.spend_log_cleanup" -> "asyncio" [];
	"litellm.proxy.credential_endpoints.endpoints" -> "typing" [];
	"litellm.proxy.credential_endpoints.endpoints" -> "fastapi" [];
	"litellm.proxy.credential_endpoints.endpoints" -> "litellm" [];
	"litellm.proxy.common_utils.swagger_utils" -> "typing" [];
	"litellm.proxy.common_utils.swagger_utils" -> "pydantic" [];
	"litellm.proxy.common_utils.reset_budget_job" -> "asyncio" [];
	"litellm.proxy.common_utils.reset_budget_job" -> "json" [];
	"litellm.proxy.common_utils.reset_budget_job" -> "time" [];
	"litellm.proxy.common_utils.reset_budget_job" -> "datetime" [];
	"litellm.proxy.common_utils.reset_budget_job" -> "typing" [];
	"litellm.proxy.common_utils.proxy_state" -> "typing" [];
	"litellm.proxy.common_utils.openai_endpoint_utils" -> "typing" [];
	"litellm.proxy.common_utils.openai_endpoint_utils" -> "fastapi" [];
	"litellm.proxy.common_utils.load_config_utils" -> "yaml" [];
	"litellm.proxy.common_utils.load_config_utils" -> "tempfile" [];
	"litellm.proxy.common_utils.load_config_utils" -> "boto3" [];
	"litellm.proxy.common_utils.load_config_utils" -> "'botocore.credentials'" [];
	"litellm.integrations.gcs_bucket.gcs_bucket" -> "asyncio" [];
	"litellm.integrations.gcs_bucket.gcs_bucket" -> "json" [];
	"litellm.integrations.gcs_bucket.gcs_bucket" -> "os" [];
	"litellm.integrations.gcs_bucket.gcs_bucket" -> "uuid" [];
	"litellm.integrations.gcs_bucket.gcs_bucket" -> "datetime" [];
	"litellm.integrations.gcs_bucket.gcs_bucket" -> "typing" [];
	"litellm.main" -> "asyncio" [];
	"litellm.main" -> "contextvars" [];
	"litellm.main" -> "datetime" [];
	"litellm.main" -> "inspect" [];
	"litellm.main" -> "json" [];
	"litellm.main" -> "os" [];
	"litellm.main" -> "random" [];
	"litellm.main" -> "sys" [];
	"litellm.main" -> "time" [];
	"litellm.main" -> "traceback" [];
	"litellm.main" -> "uuid" [];
	"litellm.main" -> "concurrent" [];
	"litellm.main" -> "copy" [];
	"litellm.main" -> "functools" [];
	"litellm.main" -> "typing" [];
	"litellm.main" -> "dotenv" [];
	"litellm.main" -> "openai" [];
	"litellm.main" -> "tiktoken" [];
	"litellm.main" -> "pydantic" [];
	"litellm.main" -> "typing_extensions" [];
	"litellm.main" -> "tenacity" [];
	"litellm.llms.watsonx.common_utils" -> "typing" [];
	"litellm.llms.watsonx.common_utils" -> "litellm" [];
	"litellm.types.llms.watsonx" -> "json" [];
	"litellm.types.llms.watsonx" -> "enum" [];
	"litellm.types.llms.watsonx" -> "typing" [];
	"litellm.types.llms.watsonx" -> "pydantic" [];
	"litellm.llms.watsonx.chat.handler" -> "typing" [];
	"litellm.llms.watsonx.chat.transformation" -> "typing" [];
	"litellm.llms.openai.chat.gpt_transformation" -> "typing" [];
	"litellm.llms.openai.chat.gpt_transformation" -> "litellm" [];
	"litellm.llms.openai.chat.gpt_transformation" -> "json" [];
	"litellm.llms.openai.common_utils" -> "hashlib" [];
	"litellm.llms.openai.common_utils" -> "json" [];
	"litellm.llms.openai.common_utils" -> "typing" [];
	"litellm.llms.openai.common_utils" -> "openai" [];
	"litellm.llms.openai.common_utils" -> "litellm" [];
	"litellm.llms.openai.common_utils" -> "inspect" [];
	"litellm.llms.vllm.completion.handler" -> "time" [];
	"litellm.llms.vllm.completion.handler" -> "typing" [];
	"litellm.llms.vllm.completion.handler" -> "vllm" [];
	"litellm.llms.vertex_ai.vertex_model_garden.main" -> "typing" [];
	"litellm.llms.vertex_ai.vertex_model_garden.main" -> "vertexai" [];
	"litellm.llms.vertex_ai.vertex_embeddings.embedding_handler" -> "typing" [];
	"litellm.llms.vertex_ai.vertex_embeddings.embedding_handler" -> "litellm" [];
	"litellm.llms.vertex_ai.vertex_embeddings.types" -> "enum" [];
	"litellm.llms.vertex_ai.vertex_embeddings.types" -> "typing" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.main" -> "enum" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.main" -> "typing" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.main" -> "litellm" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.main" -> "vertexai" [];
	"litellm.llms.vertex_ai.text_to_speech.text_to_speech_handler" -> "typing" [];
	"litellm.llms.vertex_ai.text_to_speech.text_to_speech_handler" -> "litellm" [];
	"litellm.llms.vertex_ai.text_to_speech.text_to_speech_handler" -> "base64" [];
	"litellm.llms.vertex_ai.multimodal_embeddings.embedding_handler" -> "json" [];
	"litellm.llms.vertex_ai.multimodal_embeddings.embedding_handler" -> "typing" [];
	"litellm.llms.vertex_ai.multimodal_embeddings.embedding_handler" -> "litellm" [];
	"litellm.llms.vertex_ai.multimodal_embeddings.transformation" -> "typing" [];
	"litellm.llms.vertex_ai.gemini_embeddings.batch_embed_content_handler" -> "json" [];
	"litellm.llms.vertex_ai.gemini_embeddings.batch_embed_content_handler" -> "typing" [];
	"litellm.llms.vertex_ai.gemini_embeddings.batch_embed_content_handler" -> "litellm" [];
	"litellm.llms.vertex_ai.gemini_embeddings.batch_embed_content_transformation" -> "typing" [];
	"litellm.llms.vertex_ai.gemini_embeddings.batch_embed_content_transformation" -> "litellm" [];
	"litellm.llms.sagemaker.completion.handler" -> "json" [];
	"litellm.llms.sagemaker.completion.handler" -> "copy" [];
	"litellm.llms.sagemaker.completion.handler" -> "typing" [];
	"litellm.llms.sagemaker.completion.handler" -> "litellm" [];
	"litellm.llms.sagemaker.completion.handler" -> "'botocore.credentials'" [];
	"litellm.llms.sagemaker.completion.handler" -> "'botocore.auth'" [];
	"litellm.llms.sagemaker.completion.handler" -> "'botocore.awsrequest'" [];
	"litellm.llms.sagemaker.completion.handler" -> "boto3" [];
	"litellm.llms.sagemaker.completion.transformation" -> "json" [];
	"litellm.llms.sagemaker.completion.transformation" -> "time" [];
	"litellm.llms.sagemaker.completion.transformation" -> "typing" [];
	"litellm.llms.sagemaker.completion.transformation" -> "litellm" [];
	"litellm.llms.sagemaker.common_utils" -> "json" [];
	"litellm.llms.sagemaker.common_utils" -> "typing" [];
	"litellm.llms.sagemaker.common_utils" -> "litellm" [];
	"litellm.llms.sagemaker.common_utils" -> "'botocore.parsers'" [];
	"litellm.llms.sagemaker.common_utils" -> "'botocore.eventstream'" [];
	"litellm.llms.sagemaker.common_utils" -> "'botocore.loaders'" [];
	"litellm.llms.sagemaker.common_utils" -> "'botocore.model'" [];
	"litellm.llms.sagemaker.chat.handler" -> "json" [];
	"litellm.llms.sagemaker.chat.handler" -> "copy" [];
	"litellm.llms.sagemaker.chat.handler" -> "typing" [];
	"litellm.llms.sagemaker.chat.handler" -> "'botocore.credentials'" [];
	"litellm.llms.sagemaker.chat.handler" -> "'botocore.auth'" [];
	"litellm.llms.sagemaker.chat.handler" -> "'botocore.awsrequest'" [];
	"litellm.llms.sagemaker.chat.transformation" -> "typing" [];
	"litellm.llms.replicate.chat.handler" -> "asyncio" [];
	"litellm.llms.replicate.chat.handler" -> "json" [];
	"litellm.llms.replicate.chat.handler" -> "time" [];
	"litellm.llms.replicate.chat.handler" -> "typing" [];
	"litellm.llms.replicate.chat.handler" -> "litellm" [];
	"litellm.llms.replicate.chat.transformation" -> "typing" [];
	"litellm.llms.replicate.chat.transformation" -> "litellm" [];
	"litellm.llms.replicate.common_utils" -> "typing" [];
	"litellm.llms.predibase.chat.handler" -> "json" [];
	"litellm.llms.predibase.chat.handler" -> "os" [];
	"litellm.llms.predibase.chat.handler" -> "time" [];
	"litellm.llms.predibase.chat.handler" -> "functools" [];
	"litellm.llms.predibase.chat.handler" -> "typing" [];
	"litellm.llms.predibase.chat.handler" -> "litellm" [];
	"litellm.llms.predibase.common_utils" -> "typing" [];
	"litellm.llms.petals.completion.handler" -> "time" [];
	"litellm.llms.petals.completion.handler" -> "typing" [];
	"litellm.llms.petals.completion.handler" -> "litellm" [];
	"litellm.llms.petals.completion.handler" -> "petals" [];
	"litellm.llms.petals.completion.handler" -> "transformers" [];
	"litellm.llms.petals.common_utils" -> "typing" [];
	"litellm.llms.openai_like.embedding.handler" -> "json" [];
	"litellm.llms.openai_like.embedding.handler" -> "typing" [];
	"litellm.llms.openai_like.embedding.handler" -> "litellm" [];
	"litellm.llms.openai_like.common_utils" -> "typing" [];
	"litellm.llms.openai_like.chat.handler" -> "json" [];
	"litellm.llms.openai_like.chat.handler" -> "typing" [];
	"litellm.llms.openai_like.chat.handler" -> "litellm" [];
	"litellm.llms.openai_like.chat.transformation" -> "typing" [];
	"litellm.llms.databricks.streaming_utils" -> "json" [];
	"litellm.llms.databricks.streaming_utils" -> "typing" [];
	"litellm.llms.databricks.streaming_utils" -> "litellm" [];
	"litellm.llms.openai.transcriptions.handler" -> "typing" [];
	"litellm.llms.openai.transcriptions.handler" -> "openai" [];
	"litellm.llms.openai.transcriptions.handler" -> "pydantic" [];
	"litellm.llms.openai.transcriptions.handler" -> "litellm" [];
	"litellm.llms.openai.openai" -> "time" [];
	"litellm.llms.openai.openai" -> "types" [];
	"litellm.llms.openai.openai" -> "typing" [];
	"litellm.llms.openai.openai" -> "openai" [];
	"litellm.llms.openai.openai" -> "pydantic" [];
	"litellm.llms.openai.openai" -> "typing_extensions" [];
	"litellm.llms.openai.openai" -> "litellm" [];
	"litellm.llms.openai.chat.o_series_transformation" -> "typing" [];
	"litellm.llms.openai.chat.o_series_transformation" -> "litellm" [];
	"litellm.llms.openai.image_variations.handler" -> "typing" [];
	"litellm.llms.openai.image_variations.handler" -> "openai" [];
	"litellm.llms.openai.image_variations.handler" -> "litellm" [];
	"litellm.llms.openai.completion.handler" -> "json" [];
	"litellm.llms.openai.completion.handler" -> "typing" [];
	"litellm.llms.openai.completion.handler" -> "openai" [];
	"litellm.llms.openai.completion.handler" -> "litellm" [];
	"litellm.llms.openai.completion.transformation" -> "typing" [];
	"litellm.llms.openai.completion.utils" -> "typing" [];
	"litellm.llms.oobabooga.chat.oobabooga" -> "json" [];
	"litellm.llms.oobabooga.chat.oobabooga" -> "typing" [];
	"litellm.llms.oobabooga.chat.oobabooga" -> "litellm" [];
	"litellm.llms.oobabooga.chat.transformation" -> "time" [];
	"litellm.llms.oobabooga.chat.transformation" -> "typing" [];
	"litellm.llms.oobabooga.common_utils" -> "typing" [];
	"litellm.llms.ollama.completion.handler" -> "asyncio" [];
	"litellm.llms.ollama.completion.handler" -> "typing" [];
	"litellm.llms.ollama.completion.handler" -> "litellm" [];
	"litellm.llms.nlp_cloud.chat.handler" -> "json" [];
	"litellm.llms.nlp_cloud.chat.handler" -> "typing" [];
	"litellm.llms.nlp_cloud.chat.handler" -> "litellm" [];
	"litellm.llms.nlp_cloud.chat.transformation" -> "json" [];
	"litellm.llms.nlp_cloud.chat.transformation" -> "time" [];
	"litellm.llms.nlp_cloud.chat.transformation" -> "typing" [];
	"litellm.llms.nlp_cloud.common_utils" -> "typing" [];
	"litellm.llms.huggingface.embedding.handler" -> "json" [];
	"litellm.llms.huggingface.embedding.handler" -> "os" [];
	"litellm.llms.huggingface.embedding.handler" -> "typing" [];
	"litellm.llms.huggingface.embedding.handler" -> "litellm" [];
	"litellm.llms.huggingface.embedding.transformation" -> "json" [];
	"litellm.llms.huggingface.embedding.transformation" -> "os" [];
	"litellm.llms.huggingface.embedding.transformation" -> "time" [];
	"litellm.llms.huggingface.embedding.transformation" -> "copy" [];
	"litellm.llms.huggingface.embedding.transformation" -> "typing" [];
	"litellm.llms.huggingface.embedding.transformation" -> "litellm" [];
	"litellm.llms.huggingface.common_utils" -> "os" [];
	"litellm.llms.huggingface.common_utils" -> "functools" [];
	"litellm.llms.huggingface.common_utils" -> "typing" [];
	"litellm.llms.groq.chat.handler" -> "typing" [];
	"litellm.llms.groq.chat.transformation" -> "typing" [];
	"litellm.llms.groq.chat.transformation" -> "pydantic" [];
	"litellm.llms.deprecated_providers.palm" -> "copy" [];
	"litellm.llms.deprecated_providers.palm" -> "time" [];
	"litellm.llms.deprecated_providers.palm" -> "traceback" [];
	"litellm.llms.deprecated_providers.palm" -> "types" [];
	"litellm.llms.deprecated_providers.palm" -> "typing" [];
	"litellm.llms.deprecated_providers.palm" -> "litellm" [];
	"litellm.llms.deprecated_providers.palm" -> "'google.generativeai'" [];
	"litellm.llms.deprecated_providers.aleph_alpha" -> "json" [];
	"litellm.llms.deprecated_providers.aleph_alpha" -> "time" [];
	"litellm.llms.deprecated_providers.aleph_alpha" -> "types" [];
	"litellm.llms.deprecated_providers.aleph_alpha" -> "typing" [];
	"litellm.llms.deprecated_providers.aleph_alpha" -> "litellm" [];
	"litellm.llms.databricks.embed.handler" -> "typing" [];
	"litellm.llms.databricks.common_utils" -> "typing" [];
	"litellm.llms.databricks.common_utils" -> "'databricks.sdk'" [];
	"litellm.llms.custom_llm" -> "typing" [];
	"litellm.llms.custom_httpx.llm_http_handler" -> "json" [];
	"litellm.llms.custom_httpx.llm_http_handler" -> "typing" [];
	"litellm.llms.custom_httpx.llm_http_handler" -> "litellm" [];
	"litellm.llms.custom_httpx.llm_http_handler" -> "'websockets.asyncio'" [];
	"litellm.types.llms.anthropic_messages.anthropic_response" -> "typing" [];
	"litellm.types.llms.anthropic_messages.anthropic_response" -> "typing_extensions" [];
	"litellm.responses.streaming_iterator" -> "asyncio" [];
	"litellm.responses.streaming_iterator" -> "json" [];
	"litellm.responses.streaming_iterator" -> "datetime" [];
	"litellm.responses.streaming_iterator" -> "typing" [];
	"litellm.litellm_core_utils.realtime_streaming" -> "asyncio" [];
	"litellm.litellm_core_utils.realtime_streaming" -> "json" [];
	"litellm.litellm_core_utils.realtime_streaming" -> "typing" [];
	"litellm.litellm_core_utils.realtime_streaming" -> "litellm" [];
	"litellm.litellm_core_utils.realtime_streaming" -> "'websockets.asyncio'" [];
	"litellm.llms.custom_httpx.aiohttp_handler" -> "typing" [];
	"litellm.llms.custom_httpx.aiohttp_handler" -> "aiohttp" [];
	"litellm.llms.custom_httpx.aiohttp_handler" -> "litellm" [];
	"litellm.llms.cohere.embed.handler" -> "json" [];
	"litellm.llms.cohere.embed.handler" -> "typing" [];
	"litellm.llms.cohere.embed.handler" -> "litellm" [];
	"litellm.llms.cohere.embed.v1_transformation" -> "typing" [];
	"litellm.llms.cohere.embed.v1_transformation" -> "litellm" [];
	"litellm.llms.codestral.completion.handler" -> "json" [];
	"litellm.llms.codestral.completion.handler" -> "functools" [];
	"litellm.llms.codestral.completion.handler" -> "typing" [];
	"litellm.llms.codestral.completion.handler" -> "litellm" [];
	"litellm.llms.bedrock.image.image_handler" -> "copy" [];
	"litellm.llms.bedrock.image.image_handler" -> "json" [];
	"litellm.llms.bedrock.image.image_handler" -> "os" [];
	"litellm.llms.bedrock.image.image_handler" -> "typing" [];
	"litellm.llms.bedrock.image.image_handler" -> "pydantic" [];
	"litellm.llms.bedrock.image.image_handler" -> "litellm" [];
	"litellm.llms.bedrock.image.image_handler" -> "'botocore.awsrequest'" [];
	"litellm.llms.bedrock.image.image_handler" -> "'botocore.auth'" [];
	"litellm.llms.bedrock.embed.embedding" -> "copy" [];
	"litellm.llms.bedrock.embed.embedding" -> "json" [];
	"litellm.llms.bedrock.embed.embedding" -> "typing" [];
	"litellm.llms.bedrock.embed.embedding" -> "litellm" [];
	"litellm.llms.bedrock.embed.embedding" -> "'botocore.credentials'" [];
	"litellm.llms.bedrock.embed.embedding" -> "'botocore.auth'" [];
	"litellm.llms.bedrock.embed.embedding" -> "'botocore.awsrequest'" [];
	"litellm.llms.bedrock.embed.cohere_transformation" -> "typing" [];
	"litellm.llms.bedrock.embed.amazon_titan_v2_transformation" -> "types" [];
	"litellm.llms.bedrock.embed.amazon_titan_v2_transformation" -> "typing" [];
	"litellm.llms.bedrock.embed.amazon_titan_multimodal_transformation" -> "typing" [];
	"litellm.llms.bedrock.embed.amazon_titan_g1_transformation" -> "types" [];
	"litellm.llms.bedrock.embed.amazon_titan_g1_transformation" -> "typing" [];
	"litellm.llms.azure_ai.embed.handler" -> "typing" [];
	"litellm.llms.azure_ai.embed.handler" -> "openai" [];
	"litellm.llms.azure_ai.embed.handler" -> "litellm" [];
	"litellm.llms.azure_ai.embed.cohere_transformation" -> "typing" [];
	"litellm.types.llms.azure_ai" -> "typing" [];
	"litellm.types.llms.azure_ai" -> "typing_extensions" [];
	"litellm.llms.azure.completion.handler" -> "typing" [];
	"litellm.llms.azure.completion.handler" -> "openai" [];
	"litellm.llms.azure.common_utils" -> "json" [];
	"litellm.llms.azure.common_utils" -> "os" [];
	"litellm.llms.azure.common_utils" -> "typing" [];
	"litellm.llms.azure.common_utils" -> "openai" [];
	"litellm.llms.azure.common_utils" -> "litellm" [];
	"litellm.llms.azure.common_utils" -> "'azure.identity'" [];
	"litellm.secret_managers.get_azure_ad_token_provider" -> "os" [];
	"litellm.secret_managers.get_azure_ad_token_provider" -> "typing" [];
	"litellm.secret_managers.get_azure_ad_token_provider" -> "'azure.identity'" [];
	"litellm.llms.azure.chat.o_series_handler" -> "typing" [];
	"litellm.llms.azure.azure" -> "asyncio" [];
	"litellm.llms.azure.azure" -> "json" [];
	"litellm.llms.azure.azure" -> "time" [];
	"litellm.llms.azure.azure" -> "typing" [];
	"litellm.llms.azure.azure" -> "openai" [];
	"litellm.llms.azure.azure" -> "litellm" [];
	"litellm.llms.azure.audio_transcriptions" -> "uuid" [];
	"litellm.llms.azure.audio_transcriptions" -> "typing" [];
	"litellm.llms.azure.audio_transcriptions" -> "openai" [];
	"litellm.llms.azure.audio_transcriptions" -> "pydantic" [];
	"litellm.llms.ollama_chat" -> "json" [];
	"litellm.llms.ollama_chat" -> "time" [];
	"litellm.llms.ollama_chat" -> "uuid" [];
	"litellm.llms.ollama_chat" -> "typing" [];
	"litellm.llms.ollama_chat" -> "aiohttp" [];
	"litellm.llms.ollama_chat" -> "pydantic" [];
	"litellm.llms.ollama_chat" -> "litellm" [];
	"litellm.llms.maritalk" -> "typing" [];
	"litellm.llms.baseten" -> "json" [];
	"litellm.llms.baseten" -> "time" [];
	"litellm.llms.baseten" -> "typing" [];
	"litellm.llms.baseten" -> "litellm" [];
	"litellm.litellm_core_utils.streaming_chunk_builder_utils" -> "base64" [];
	"litellm.litellm_core_utils.streaming_chunk_builder_utils" -> "time" [];
	"litellm.litellm_core_utils.streaming_chunk_builder_utils" -> "typing" [];
	"litellm.litellm_core_utils.fallback_utils" -> "uuid" [];
	"litellm.litellm_core_utils.fallback_utils" -> "copy" [];
	"litellm.litellm_core_utils.fallback_utils" -> "typing" [];
	"litellm.litellm_core_utils.fallback_utils" -> "litellm" [];
	"litellm.realtime_api.main" -> "typing" [];
	"litellm.realtime_api.main" -> "litellm" [];
	"litellm.llms.openai.realtime.handler" -> "typing" [];
	"litellm.llms.openai.realtime.handler" -> "'websockets.asyncio'" [];
	"litellm.llms.azure.realtime.handler" -> "typing" [];
	"litellm.llms.azure.realtime.handler" -> "'websockets.asyncio'" [];
	"litellm.litellm_core_utils.mock_functions" -> "typing" [];
	"litellm.proxy.common_utils.http_parsing_utils" -> "json" [];
	"litellm.proxy.common_utils.http_parsing_utils" -> "typing" [];
	"litellm.proxy.common_utils.http_parsing_utils" -> "orjson" [];
	"litellm.proxy.common_utils.http_parsing_utils" -> "fastapi" [];
	"litellm.proxy.common_utils.http_parsing_utils" -> "re" [];
	"litellm.proxy.common_utils.html_forms.ui_login" -> "os" [];
	"litellm.proxy.common_utils.encrypt_decrypt_utils" -> "base64" [];
	"litellm.proxy.common_utils.encrypt_decrypt_utils" -> "os" [];
	"litellm.proxy.common_utils.encrypt_decrypt_utils" -> "typing" [];
	"litellm.proxy.common_utils.encrypt_decrypt_utils" -> "hashlib" [];
	"litellm.proxy.common_utils.encrypt_decrypt_utils" -> "nacl" [];
	"litellm.proxy.common_utils.encrypt_decrypt_utils" -> "'nacl.utils'" [];
	"litellm.proxy.common_utils.encrypt_decrypt_utils" -> "'nacl.secret'" [];
	"litellm.proxy.common_utils.debug_utils" -> "json" [];
	"litellm.proxy.common_utils.debug_utils" -> "os" [];
	"litellm.proxy.common_utils.debug_utils" -> "tracemalloc" [];
	"litellm.proxy.common_utils.debug_utils" -> "fastapi" [];
	"litellm.proxy.common_utils.debug_utils" -> "litellm" [];
	"litellm.proxy.common_utils.debug_utils" -> "objgraph" [];
	"litellm.proxy.common_utils.debug_utils" -> "logging" [];
	"tracemalloc" -> "functools" [];
	"tracemalloc" -> "fnmatch" [];
	"tracemalloc" -> "linecache" [];
	"tracemalloc" -> "os.path" [];
	"tracemalloc" -> "pickle" [];
	"tracemalloc" -> "_tracemalloc" [];
	"litellm.proxy.common_utils.callback_utils" -> "typing" [];
	"litellm.proxy.common_utils.callback_utils" -> "litellm" [];
	"litellm.proxy.common_utils.callback_utils" -> "litellm_enterprise" [];
	"litellm.proxy.common_utils.callback_utils" -> "'litellm_enterprise.enterprise_callbacks'" [];
	"litellm.proxy.common_utils.callback_utils" -> "'enterprise.enterprise_hooks'" [];
	"litellm.proxy.hooks.azure_content_safety" -> "traceback" [];
	"litellm.proxy.hooks.azure_content_safety" -> "typing" [];
	"litellm.proxy.hooks.azure_content_safety" -> "fastapi" [];
	"litellm.proxy.hooks.azure_content_safety" -> "litellm" [];
	"litellm.proxy.hooks.azure_content_safety" -> "'azure.ai'" [];
	"litellm.proxy.hooks.azure_content_safety" -> "'azure.core'" [];
	"litellm.proxy.hooks.batch_redis_get" -> "traceback" [];
	"litellm.proxy.hooks.batch_redis_get" -> "typing" [];
	"litellm.proxy.hooks.batch_redis_get" -> "fastapi" [];
	"litellm.proxy.hooks.batch_redis_get" -> "litellm" [];
	"litellm.proxy.common_request_processing" -> "asyncio" [];
	"litellm.proxy.common_request_processing" -> "json" [];
	"litellm.proxy.common_request_processing" -> "uuid" [];
	"litellm.proxy.common_request_processing" -> "datetime" [];
	"litellm.proxy.common_request_processing" -> "typing" [];
	"litellm.proxy.common_request_processing" -> "fastapi" [];
	"litellm.proxy.common_request_processing" -> "'fastapi.responses'" [];
	"litellm.proxy.common_request_processing" -> "litellm" [];
	"litellm.proxy.caching_routes" -> "typing" [];
	"litellm.proxy.caching_routes" -> "fastapi" [];
	"litellm.proxy.caching_routes" -> "litellm" [];
	"litellm.proxy.caching_routes" -> "traceback" [];
	"litellm.types.caching" -> "enum" [];
	"litellm.types.caching" -> "typing" [];
	"litellm.types.caching" -> "pydantic" [];
	"litellm.proxy.batches_endpoints.endpoints" -> "asyncio" [];
	"litellm.proxy.batches_endpoints.endpoints" -> "typing" [];
	"litellm.proxy.batches_endpoints.endpoints" -> "fastapi" [];
	"litellm.proxy.batches_endpoints.endpoints" -> "litellm" [];
	"litellm.batches.main" -> "asyncio" [];
	"litellm.batches.main" -> "contextvars" [];
	"litellm.batches.main" -> "os" [];
	"litellm.batches.main" -> "functools" [];
	"litellm.batches.main" -> "typing" [];
	"litellm.batches.main" -> "litellm" [];
	"litellm.llms.vertex_ai.batches.handler" -> "json" [];
	"litellm.llms.vertex_ai.batches.handler" -> "typing" [];
	"litellm.llms.vertex_ai.batches.handler" -> "litellm" [];
	"litellm.llms.vertex_ai.batches.transformation" -> "uuid" [];
	"litellm.llms.vertex_ai.batches.transformation" -> "typing" [];
	"litellm.llms.azure.batches.handler" -> "typing" [];
	"litellm.proxy.auth.user_api_key_auth" -> "asyncio" [];
	"litellm.proxy.auth.user_api_key_auth" -> "secrets" [];
	"litellm.proxy.auth.user_api_key_auth" -> "datetime" [];
	"litellm.proxy.auth.user_api_key_auth" -> "typing" [];
	"litellm.proxy.auth.user_api_key_auth" -> "fastapi" [];
	"litellm.proxy.auth.user_api_key_auth" -> "'fastapi.security'" [];
	"litellm.proxy.auth.user_api_key_auth" -> "litellm" [];
	"litellm.proxy.auth.user_api_key_auth" -> "base64" [];
	"litellm.proxy.auth.oauth2_proxy_hook" -> "typing" [];
	"litellm.proxy.auth.oauth2_proxy_hook" -> "fastapi" [];
	"litellm.proxy.auth.oauth2_check" -> "os" [];
	"litellm.proxy.auth.auth_exception_handler" -> "asyncio" [];
	"litellm.proxy.auth.auth_exception_handler" -> "typing" [];
	"litellm.proxy.auth.auth_exception_handler" -> "fastapi" [];
	"litellm.proxy.auth.auth_exception_handler" -> "litellm" [];
	"litellm.proxy.auth.auth_exception_handler" -> "'opentelemetry.trace'" [];
	"litellm.proxy.auth.model_checks" -> "typing" [];
	"litellm.proxy.auth.model_checks" -> "litellm" [];
	"litellm.proxy.auth.litellm_license" -> "base64" [];
	"litellm.proxy.auth.litellm_license" -> "json" [];
	"litellm.proxy.auth.litellm_license" -> "os" [];
	"litellm.proxy.auth.litellm_license" -> "datetime" [];
	"litellm.proxy.auth.litellm_license" -> "typing" [];
	"litellm.proxy.auth.litellm_license" -> "'cryptography.hazmat'" [];
	"litellm.proxy.auth.handle_jwt" -> "json" [];
	"litellm.proxy.auth.handle_jwt" -> "os" [];
	"litellm.proxy.auth.handle_jwt" -> "typing" [];
	"litellm.proxy.auth.handle_jwt" -> "cryptography" [];
	"litellm.proxy.auth.handle_jwt" -> "'cryptography.hazmat'" [];
	"litellm.proxy.auth.handle_jwt" -> "fastapi" [];
	"litellm.proxy.auth.handle_jwt" -> "jwt" [];
	"litellm.proxy.auth.handle_jwt" -> "'jwt.algorithms'" [];
	"litellm.litellm_core_utils.dot_notation_indexing" -> "typing" [];
	"litellm.proxy.auth.auth_utils" -> "os" [];
	"litellm.proxy.auth.auth_utils" -> "re" [];
	"litellm.proxy.auth.auth_utils" -> "sys" [];
	"litellm.proxy.auth.auth_utils" -> "typing" [];
	"litellm.proxy.auth.auth_utils" -> "fastapi" [];
	"litellm.proxy.auth.auth_utils" -> "litellm" [];
	"litellm.proxy.auth.auth_checks" -> "asyncio" [];
	"litellm.proxy.auth.auth_checks" -> "re" [];
	"litellm.proxy.auth.auth_checks" -> "time" [];
	"litellm.proxy.auth.auth_checks" -> "typing" [];
	"litellm.proxy.auth.auth_checks" -> "fastapi" [];
	"litellm.proxy.auth.auth_checks" -> "pydantic" [];
	"litellm.proxy.auth.auth_checks" -> "litellm" [];
	"litellm.proxy.auth.auth_checks" -> "'opentelemetry.trace'" [];
	"litellm.proxy.auth.auth_checks" -> "collections" [];
	"litellm.proxy.auth.auth_checks" -> "datetime" [];
	"litellm.proxy.auth.auth_checks" -> "json" [];
	"litellm.proxy.anthropic_endpoints.endpoints" -> "asyncio" [];
	"litellm.proxy.anthropic_endpoints.endpoints" -> "json" [];
	"litellm.proxy.anthropic_endpoints.endpoints" -> "time" [];
	"litellm.proxy.anthropic_endpoints.endpoints" -> "traceback" [];
	"litellm.proxy.anthropic_endpoints.endpoints" -> "fastapi" [];
	"litellm.proxy.anthropic_endpoints.endpoints" -> "'fastapi.responses'" [];
	"litellm.proxy.anthropic_endpoints.endpoints" -> "litellm" [];
	"litellm.proxy.analytics_endpoints.analytics_endpoints" -> "datetime" [];
	"litellm.proxy.analytics_endpoints.analytics_endpoints" -> "typing" [];
	"litellm.proxy.analytics_endpoints.analytics_endpoints" -> "fastapi" [];
	"litellm.proxy._experimental.mcp_server.tool_registry" -> "json" [];
	"litellm.proxy._experimental.mcp_server.tool_registry" -> "typing" [];
	"litellm.types.mcp_server.tool_registry" -> "typing" [];
	"litellm.types.mcp_server.tool_registry" -> "pydantic" [];
	"litellm.proxy._experimental.mcp_server.server" -> "asyncio" [];
	"litellm.proxy._experimental.mcp_server.server" -> "typing" [];
	"litellm.proxy._experimental.mcp_server.server" -> "anyio" [];
	"litellm.proxy._experimental.mcp_server.server" -> "fastapi" [];
	"litellm.proxy._experimental.mcp_server.server" -> "'fastapi.responses'" [];
	"litellm.proxy._experimental.mcp_server.server" -> "pydantic" [];
	"litellm.proxy._experimental.mcp_server.server" -> "mcp" [];
	"litellm.proxy._experimental.mcp_server.server" -> "'mcp.server'" [];
	"litellm.proxy._experimental.mcp_server.server" -> "'mcp.types'" [];
	"litellm.proxy._experimental.mcp_server.sse_transport" -> "contextlib" [];
	"litellm.proxy._experimental.mcp_server.sse_transport" -> "typing" [];
	"litellm.proxy._experimental.mcp_server.sse_transport" -> "uuid" [];
	"litellm.proxy._experimental.mcp_server.sse_transport" -> "anyio" [];
	"litellm.proxy._experimental.mcp_server.sse_transport" -> "'mcp.types'" [];
	"litellm.proxy._experimental.mcp_server.sse_transport" -> "'fastapi.requests'" [];
	"litellm.proxy._experimental.mcp_server.sse_transport" -> "'fastapi.responses'" [];
	"litellm.proxy._experimental.mcp_server.sse_transport" -> "pydantic" [];
	"litellm.proxy._experimental.mcp_server.sse_transport" -> "sse_starlette" [];
	"litellm.proxy._experimental.mcp_server.sse_transport" -> "'starlette.types'" [];
	"litellm.litellm_core_utils.sensitive_data_masker" -> "typing" [];
	"litellm.integrations.SlackAlerting.slack_alerting" -> "asyncio" [];
	"litellm.integrations.SlackAlerting.slack_alerting" -> "datetime" [];
	"litellm.integrations.SlackAlerting.slack_alerting" -> "os" [];
	"litellm.integrations.SlackAlerting.slack_alerting" -> "random" [];
	"litellm.integrations.SlackAlerting.slack_alerting" -> "time" [];
	"litellm.integrations.SlackAlerting.slack_alerting" -> "typing" [];
	"litellm.integrations.SlackAlerting.slack_alerting" -> "openai" [];
	"litellm.integrations.SlackAlerting.slack_alerting" -> "litellm" [];
	"litellm.integrations.SlackAlerting.slack_alerting" -> "calendar" [];
	"litellm.integrations.email_alerting" -> "os" [];
	"litellm.integrations.email_alerting" -> "typing" [];
	"litellm.integrations.SlackAlerting.batching_handler" -> "typing" [];
	"litellm.integrations.SlackAlerting.batching_handler" -> "json" [];
	"litellm.integrations.SlackAlerting.budget_alert_types" -> "abc" [];
	"litellm.integrations.SlackAlerting.budget_alert_types" -> "typing" [];
	"backoff._wait_gen" -> "itertools" [];
	"backoff._wait_gen" -> "typing" [];
	"backoff._jitter" -> "random" [];
	"backoff._decorator" -> "asyncio" [];
	"backoff._decorator" -> "logging" [];
	"backoff._decorator" -> "operator" [];
	"backoff._decorator" -> "typing" [];
	"backoff._typing" -> "logging" [];
	"backoff._typing" -> "sys" [];
	"backoff._typing" -> "typing" [];
	"backoff._typing" -> "typing_extensions" [];
	"backoff._common" -> "functools" [];
	"backoff._common" -> "logging" [];
	"backoff._common" -> "sys" [];
	"backoff._common" -> "traceback" [];
	"backoff._common" -> "warnings" [];
	"backoff._sync" -> "datetime" [];
	"backoff._sync" -> "functools" [];
	"backoff._sync" -> "time" [];
	"backoff._async" -> "datetime" [];
	"backoff._async" -> "functools" [];
	"backoff._async" -> "asyncio" [];
	"litellm.integrations.opentelemetry" -> "os" [];
	"litellm.integrations.opentelemetry" -> "dataclasses" [];
	"litellm.integrations.opentelemetry" -> "datetime" [];
	"litellm.integrations.opentelemetry" -> "typing" [];
	"litellm.integrations.opentelemetry" -> "litellm" [];
	"litellm.integrations.opentelemetry" -> "'opentelemetry.sdk'" [];
	"litellm.integrations.opentelemetry" -> "'opentelemetry.trace'" [];
	"litellm.integrations.opentelemetry" -> "opentelemetry" [];
	"litellm.integrations.opentelemetry" -> "logging" [];
	"litellm.integrations.opentelemetry" -> "json" [];
	"litellm.integrations.opentelemetry" -> "'opentelemetry.exporter'" [];
	"litellm.integrations.langtrace" -> "json" [];
	"litellm.integrations.langtrace" -> "typing" [];
	"litellm.integrations.langtrace" -> "'opentelemetry.trace'" [];
	"litellm.integrations.arize.arize_phoenix" -> "os" [];
	"litellm.integrations.arize.arize_phoenix" -> "typing" [];
	"litellm.integrations.arize.arize_phoenix" -> "'opentelemetry.trace'" [];
	"litellm.types.integrations.arize" -> "typing" [];
	"litellm.types.integrations.arize" -> "pydantic" [];
	"litellm.types.integrations.arize_phoenix" -> "typing" [];
	"litellm.types.integrations.arize_phoenix" -> "pydantic" [];
	"litellm.integrations.arize._utils" -> "json" [];
	"litellm.integrations.arize._utils" -> "typing" [];
	"litellm.integrations.arize._utils" -> "'opentelemetry.trace'" [];
	"litellm.integrations._types.open_inference" -> "enum" [];
	"litellm.litellm_core_utils.prompt_templates.common_utils" -> "io" [];
	"litellm.litellm_core_utils.prompt_templates.common_utils" -> "mimetypes" [];
	"litellm.litellm_core_utils.prompt_templates.common_utils" -> "re" [];
	"litellm.litellm_core_utils.prompt_templates.common_utils" -> "os" [];
	"litellm.litellm_core_utils.prompt_templates.common_utils" -> "typing" [];
	"litellm.litellm_core_utils.prompt_templates.common_utils" -> "json" [];
	"litellm.caching.redis_cluster_cache" -> "typing" [];
	"litellm.caching.redis_cluster_cache" -> "'opentelemetry.trace'" [];
	"litellm.caching.redis_cluster_cache" -> "'redis.asyncio'" [];
	"litellm._redis" -> "inspect" [];
	"litellm._redis" -> "json" [];
	"litellm._redis" -> "os" [];
	"litellm._redis" -> "typing" [];
	"litellm._redis" -> "redis" [];
	"litellm._redis" -> "'redis.asyncio'" [];
	"litellm._redis" -> "'redis.cluster'" [];
	"litellm.caching.redis_cache" -> "ast" [];
	"litellm.caching.redis_cache" -> "asyncio" [];
	"litellm.caching.redis_cache" -> "inspect" [];
	"litellm.caching.redis_cache" -> "json" [];
	"litellm.caching.redis_cache" -> "time" [];
	"litellm.caching.redis_cache" -> "datetime" [];
	"litellm.caching.redis_cache" -> "typing" [];
	"litellm.caching.redis_cache" -> "litellm" [];
	"litellm.caching.redis_cache" -> "'opentelemetry.trace'" [];
	"litellm.caching.redis_cache" -> "redis" [];
	"litellm.caching.redis_cache" -> "'redis.asyncio'" [];
	"litellm.caching.qdrant_semantic_cache" -> "ast" [];
	"litellm.caching.qdrant_semantic_cache" -> "asyncio" [];
	"litellm.caching.qdrant_semantic_cache" -> "json" [];
	"litellm.caching.qdrant_semantic_cache" -> "typing" [];
	"litellm.caching.qdrant_semantic_cache" -> "litellm" [];
	"litellm.caching.qdrant_semantic_cache" -> "os" [];
	"litellm.caching.qdrant_semantic_cache" -> "uuid" [];
	"litellm.caching.dual_cache" -> "asyncio" [];
	"litellm.caching.dual_cache" -> "time" [];
	"litellm.caching.dual_cache" -> "traceback" [];
	"litellm.caching.dual_cache" -> "typing" [];
	"litellm.caching.dual_cache" -> "litellm" [];
	"litellm.caching.dual_cache" -> "'opentelemetry.trace'" [];
	"litellm.caching.dual_cache" -> "collections" [];
	"litellm.caching.disk_cache" -> "json" [];
	"litellm.caching.disk_cache" -> "typing" [];
	"litellm.caching.disk_cache" -> "'opentelemetry.trace'" [];
	"litellm.caching.disk_cache" -> "diskcache" [];
	"diskcache.djangocache" -> "functools" [];
	"diskcache.djangocache" -> "django" [];
	"diskcache.djangocache" -> "'django.core'" [];
	"diskcache.recipes" -> "functools" [];
	"diskcache.recipes" -> "math" [];
	"diskcache.recipes" -> "os" [];
	"diskcache.recipes" -> "random" [];
	"diskcache.recipes" -> "threading" [];
	"diskcache.recipes" -> "time" [];
	"diskcache.persistent" -> "operator" [];
	"diskcache.persistent" -> "collections" [];
	"diskcache.persistent" -> "contextlib" [];
	"diskcache.persistent" -> "shutil" [];
	"diskcache.fanout" -> "contextlib" [];
	"diskcache.fanout" -> "functools" [];
	"diskcache.fanout" -> "itertools" [];
	"diskcache.fanout" -> "operator" [];
	"diskcache.fanout" -> "os.path" [];
	"diskcache.fanout" -> "sqlite3" [];
	"diskcache.fanout" -> "tempfile" [];
	"diskcache.fanout" -> "time" [];
	"diskcache.core" -> "codecs" [];
	"diskcache.core" -> "contextlib" [];
	"diskcache.core" -> "errno" [];
	"diskcache.core" -> "functools" [];
	"diskcache.core" -> "io" [];
	"diskcache.core" -> "json" [];
	"diskcache.core" -> "os" [];
	"diskcache.core" -> "os.path" [];
	"diskcache.core" -> "pickle" [];
	"diskcache.core" -> "pickletools" [];
	"diskcache.core" -> "sqlite3" [];
	"diskcache.core" -> "struct" [];
	"diskcache.core" -> "tempfile" [];
	"diskcache.core" -> "threading" [];
	"diskcache.core" -> "time" [];
	"diskcache.core" -> "warnings" [];
	"diskcache.core" -> "zlib" [];
	"litellm.llms.vertex_ai.gemini.vertex_and_google_ai_studio_gemini" -> "json" [];
	"litellm.llms.vertex_ai.gemini.vertex_and_google_ai_studio_gemini" -> "uuid" [];
	"litellm.llms.vertex_ai.gemini.vertex_and_google_ai_studio_gemini" -> "copy" [];
	"litellm.llms.vertex_ai.gemini.vertex_and_google_ai_studio_gemini" -> "functools" [];
	"litellm.llms.vertex_ai.gemini.vertex_and_google_ai_studio_gemini" -> "typing" [];
	"litellm.llms.vertex_ai.gemini.vertex_and_google_ai_studio_gemini" -> "litellm" [];
	"litellm.llms.vertex_ai.gemini.transformation" -> "os" [];
	"litellm.llms.vertex_ai.gemini.transformation" -> "typing" [];
	"litellm.llms.vertex_ai.gemini.transformation" -> "pydantic" [];
	"litellm.llms.vertex_ai.gemini.transformation" -> "litellm" [];
	"litellm.llms.vertex_ai.context_caching.vertex_ai_context_caching" -> "typing" [];
	"litellm.llms.vertex_ai.context_caching.vertex_ai_context_caching" -> "litellm" [];
	"litellm.llms.vertex_ai.context_caching.transformation" -> "typing" [];
	"litellm.types.files" -> "enum" [];
	"litellm.types.files" -> "types" [];
	"litellm.types.files" -> "typing" [];
	"litellm.llms.openai.image_generation.gpt_transformation" -> "typing" [];
	"litellm.llms.openai.image_generation.dall_e_3_transformation" -> "typing" [];
	"litellm.llms.openai.image_generation.dall_e_2_transformation" -> "typing" [];
	"litellm.integrations.vector_stores.bedrock_vector_store" -> "json" [];
	"litellm.integrations.vector_stores.bedrock_vector_store" -> "datetime" [];
	"litellm.integrations.vector_stores.bedrock_vector_store" -> "typing" [];
	"litellm.integrations.vector_stores.bedrock_vector_store" -> "litellm" [];
	"litellm.integrations.vector_stores.bedrock_vector_store" -> "'botocore.auth'" [];
	"litellm.integrations.vector_stores.bedrock_vector_store" -> "'botocore.awsrequest'" [];
	"litellm.integrations.vector_stores.bedrock_vector_store" -> "fastapi" [];
	"litellm.types.integrations.rag.bedrock_knowledgebase" -> "typing" [];
	"litellm.llms.vertex_ai.files.transformation" -> "json" [];
	"litellm.llms.vertex_ai.files.transformation" -> "os" [];
	"litellm.llms.vertex_ai.files.transformation" -> "time" [];
	"litellm.llms.vertex_ai.files.transformation" -> "uuid" [];
	"litellm.llms.vertex_ai.files.transformation" -> "typing" [];
	"litellm.llms.gemini.files.transformation" -> "time" [];
	"litellm.llms.gemini.files.transformation" -> "typing" [];
	"litellm.llms.vllm.common_utils" -> "typing" [];
	"litellm.llms.vllm.common_utils" -> "litellm" [];
	"litellm.llms.cohere.embed.transformation" -> "typing" [];
	"litellm.llms.cohere.embed.transformation" -> "litellm" [];
	"litellm.caching.in_memory_cache" -> "json" [];
	"litellm.caching.in_memory_cache" -> "sys" [];
	"litellm.caching.in_memory_cache" -> "time" [];
	"litellm.caching.in_memory_cache" -> "typing" [];
	"litellm.caching.in_memory_cache" -> "pydantic" [];
	"litellm.litellm_core_utils.litellm_logging" -> "copy" [];
	"litellm.litellm_core_utils.litellm_logging" -> "datetime" [];
	"litellm.litellm_core_utils.litellm_logging" -> "json" [];
	"litellm.litellm_core_utils.litellm_logging" -> "os" [];
	"litellm.litellm_core_utils.litellm_logging" -> "re" [];
	"litellm.litellm_core_utils.litellm_logging" -> "subprocess" [];
	"litellm.litellm_core_utils.litellm_logging" -> "sys" [];
	"litellm.litellm_core_utils.litellm_logging" -> "time" [];
	"litellm.litellm_core_utils.litellm_logging" -> "traceback" [];
	"litellm.litellm_core_utils.litellm_logging" -> "uuid" [];
	"litellm.litellm_core_utils.litellm_logging" -> "functools" [];
	"litellm.litellm_core_utils.litellm_logging" -> "typing" [];
	"litellm.litellm_core_utils.litellm_logging" -> "pydantic" [];
	"litellm.litellm_core_utils.litellm_logging" -> "litellm" [];
	"litellm.litellm_core_utils.litellm_logging" -> "'litellm_enterprise.enterprise_callbacks'" [];
	"litellm.litellm_core_utils.litellm_logging" -> "'litellm_enterprise.litellm_core_utils'" [];
	"litellm.litellm_core_utils.litellm_logging" -> "sentry_sdk" [];
	"litellm.litellm_core_utils.litellm_logging" -> "posthog" [];
	"litellm.litellm_core_utils.litellm_logging" -> "slack_bolt" [];
	"litellm.litellm_core_utils.litellm_logging" -> "decimal" [];
	"litellm.proxy.hooks.dynamic_rate_limiter" -> "asyncio" [];
	"litellm.proxy.hooks.dynamic_rate_limiter" -> "os" [];
	"litellm.proxy.hooks.dynamic_rate_limiter" -> "typing" [];
	"litellm.proxy.hooks.dynamic_rate_limiter" -> "fastapi" [];
	"litellm.proxy.hooks.dynamic_rate_limiter" -> "litellm" [];
	"litellm.litellm_core_utils.specialty_caches.dynamic_logging_cache" -> "hashlib" [];
	"litellm.litellm_core_utils.specialty_caches.dynamic_logging_cache" -> "json" [];
	"litellm.litellm_core_utils.specialty_caches.dynamic_logging_cache" -> "typing" [];
	"litellm.litellm_core_utils.initialize_dynamic_callback_params" -> "typing" [];
	"litellm.integrations.weights_biases" -> "io" [];
	"litellm.integrations.weights_biases" -> "logging" [];
	"litellm.integrations.weights_biases" -> "sys" [];
	"litellm.integrations.weights_biases" -> "typing" [];
	"litellm.integrations.weights_biases" -> "wandb" [];
	"litellm.integrations.weights_biases" -> "typing_extensions" [];
	"litellm.integrations.weights_biases" -> "traceback" [];
	"litellm.integrations.traceloop" -> "traceback" [];
	"litellm.integrations.traceloop" -> "traceloop" [];
	"litellm.integrations.traceloop" -> "'traceloop.sdk'" [];
	"litellm.integrations.traceloop" -> "'opentelemetry.semconv'" [];
	"litellm.integrations.traceloop" -> "'opentelemetry.trace'" [];
	"litellm.integrations.supabase" -> "os" [];
	"litellm.integrations.supabase" -> "subprocess" [];
	"litellm.integrations.supabase" -> "sys" [];
	"litellm.integrations.supabase" -> "traceback" [];
	"litellm.integrations.supabase" -> "litellm" [];
	"litellm.integrations.supabase" -> "supabase" [];
	"litellm.integrations.s3" -> "datetime" [];
	"litellm.integrations.s3" -> "typing" [];
	"litellm.integrations.s3" -> "litellm" [];
	"litellm.integrations.s3" -> "boto3" [];
	"litellm.integrations.s3" -> "json" [];
	"litellm.integrations.prompt_layer" -> "os" [];
	"litellm.integrations.prompt_layer" -> "traceback" [];
	"litellm.integrations.prompt_layer" -> "pydantic" [];
	"litellm.integrations.prompt_layer" -> "litellm" [];
	"litellm.integrations.opik.opik" -> "asyncio" [];
	"litellm.integrations.opik.opik" -> "json" [];
	"litellm.integrations.opik.opik" -> "traceback" [];
	"litellm.integrations.opik.opik" -> "typing" [];
	"litellm.integrations.opik.utils" -> "configparser" [];
	"litellm.integrations.opik.utils" -> "os" [];
	"litellm.integrations.opik.utils" -> "time" [];
	"litellm.integrations.opik.utils" -> "typing" [];
	"litellm.integrations.openmeter" -> "json" [];
	"litellm.integrations.openmeter" -> "os" [];
	"litellm.integrations.openmeter" -> "litellm" [];
	"litellm.integrations.openmeter" -> "datetime" [];
	"litellm.integrations.lunary" -> "importlib" [];
	"litellm.integrations.lunary" -> "traceback" [];
	"litellm.integrations.lunary" -> "datetime" [];
	"litellm.integrations.lunary" -> "packaging" [];
	"litellm.integrations.lunary" -> "lunary" [];
	"litellm.integrations.logfire_logger" -> "os" [];
	"litellm.integrations.logfire_logger" -> "traceback" [];
	"litellm.integrations.logfire_logger" -> "uuid" [];
	"litellm.integrations.logfire_logger" -> "enum" [];
	"litellm.integrations.logfire_logger" -> "typing" [];
	"litellm.integrations.logfire_logger" -> "typing_extensions" [];
	"litellm.integrations.logfire_logger" -> "logfire" [];
	"litellm.integrations.literal_ai" -> "asyncio" [];
	"litellm.integrations.literal_ai" -> "os" [];
	"litellm.integrations.literal_ai" -> "uuid" [];
	"litellm.integrations.literal_ai" -> "typing" [];
	"litellm.integrations.langsmith" -> "asyncio" [];
	"litellm.integrations.langsmith" -> "os" [];
	"litellm.integrations.langsmith" -> "random" [];
	"litellm.integrations.langsmith" -> "traceback" [];
	"litellm.integrations.langsmith" -> "types" [];
	"litellm.integrations.langsmith" -> "uuid" [];
	"litellm.integrations.langsmith" -> "datetime" [];
	"litellm.integrations.langsmith" -> "typing" [];
	"litellm.integrations.langsmith" -> "pydantic" [];
	"litellm.integrations.langsmith" -> "litellm" [];
	"litellm.types.integrations.langsmith" -> "dataclasses" [];
	"litellm.types.integrations.langsmith" -> "datetime" [];
	"litellm.types.integrations.langsmith" -> "typing" [];
	"litellm.types.integrations.langsmith" -> "pydantic" [];
	"litellm.integrations.langfuse.langfuse_prompt_management" -> "os" [];
	"litellm.integrations.langfuse.langfuse_prompt_management" -> "functools" [];
	"litellm.integrations.langfuse.langfuse_prompt_management" -> "typing" [];
	"litellm.integrations.langfuse.langfuse_prompt_management" -> "typing_extensions" [];
	"litellm.integrations.langfuse.langfuse_prompt_management" -> "langfuse" [];
	"litellm.integrations.langfuse.langfuse_prompt_management" -> "'langfuse.client'" [];
	"litellm.integrations.prompt_management_base" -> "abc" [];
	"litellm.integrations.prompt_management_base" -> "typing" [];
	"litellm.integrations.langfuse.langfuse_handler" -> "typing" [];
	"litellm.integrations.lago" -> "json" [];
	"litellm.integrations.lago" -> "os" [];
	"litellm.integrations.lago" -> "uuid" [];
	"litellm.integrations.lago" -> "typing" [];
	"litellm.integrations.lago" -> "litellm" [];
	"litellm.integrations.lago" -> "datetime" [];
	"litellm.integrations.humanloop" -> "typing" [];
	"litellm.integrations.humanloop" -> "litellm" [];
	"litellm.integrations.helicone" -> "os" [];
	"litellm.integrations.helicone" -> "traceback" [];
	"litellm.integrations.helicone" -> "litellm" [];
	"litellm.integrations.helicone" -> "anthropic" [];
	"litellm.integrations.greenscale" -> "json" [];
	"litellm.integrations.greenscale" -> "traceback" [];
	"litellm.integrations.greenscale" -> "datetime" [];
	"litellm.integrations.greenscale" -> "litellm" [];
	"litellm.integrations.greenscale" -> "os" [];
	"litellm.integrations.gcs_pubsub.pub_sub" -> "asyncio" [];
	"litellm.integrations.gcs_pubsub.pub_sub" -> "json" [];
	"litellm.integrations.gcs_pubsub.pub_sub" -> "os" [];
	"litellm.integrations.gcs_pubsub.pub_sub" -> "traceback" [];
	"litellm.integrations.gcs_pubsub.pub_sub" -> "typing" [];
	"litellm.integrations.gcs_pubsub.pub_sub" -> "litellm" [];
	"litellm.integrations.gcs_pubsub.pub_sub" -> "base64" [];
	"litellm.integrations.galileo" -> "os" [];
	"litellm.integrations.galileo" -> "typing" [];
	"litellm.integrations.galileo" -> "pydantic" [];
	"litellm.integrations.galileo" -> "litellm" [];
	"litellm.integrations.dynamodb" -> "os" [];
	"litellm.integrations.dynamodb" -> "traceback" [];
	"litellm.integrations.dynamodb" -> "uuid" [];
	"litellm.integrations.dynamodb" -> "typing" [];
	"litellm.integrations.dynamodb" -> "litellm" [];
	"litellm.integrations.dynamodb" -> "boto3" [];
	"litellm.integrations.datadog.datadog_llm_obs" -> "asyncio" [];
	"litellm.integrations.datadog.datadog_llm_obs" -> "json" [];
	"litellm.integrations.datadog.datadog_llm_obs" -> "os" [];
	"litellm.integrations.datadog.datadog_llm_obs" -> "uuid" [];
	"litellm.integrations.datadog.datadog_llm_obs" -> "datetime" [];
	"litellm.integrations.datadog.datadog_llm_obs" -> "typing" [];
	"litellm.integrations.datadog.datadog_llm_obs" -> "litellm" [];
	"litellm.types.integrations.datadog_llm_obs" -> "typing" [];
	"litellm.integrations.custom_prompt_management" -> "typing" [];
	"litellm.integrations.braintrust_logging" -> "copy" [];
	"litellm.integrations.braintrust_logging" -> "os" [];
	"litellm.integrations.braintrust_logging" -> "datetime" [];
	"litellm.integrations.braintrust_logging" -> "typing" [];
	"litellm.integrations.braintrust_logging" -> "pydantic" [];
	"litellm.integrations.braintrust_logging" -> "litellm" [];
	"litellm.integrations.azure_storage.azure_storage" -> "asyncio" [];
	"litellm.integrations.azure_storage.azure_storage" -> "json" [];
	"litellm.integrations.azure_storage.azure_storage" -> "os" [];
	"litellm.integrations.azure_storage.azure_storage" -> "time" [];
	"litellm.integrations.azure_storage.azure_storage" -> "uuid" [];
	"litellm.integrations.azure_storage.azure_storage" -> "datetime" [];
	"litellm.integrations.azure_storage.azure_storage" -> "typing" [];
	"litellm.integrations.azure_storage.azure_storage" -> "'azure.storage'" [];
	"litellm.integrations.athina" -> "datetime" [];
	"litellm.integrations.athina" -> "litellm" [];
	"litellm.integrations.athina" -> "os" [];
	"litellm.integrations.athina" -> "json" [];
	"litellm.integrations.athina" -> "traceback" [];
	"litellm.integrations.argilla" -> "asyncio" [];
	"litellm.integrations.argilla" -> "json" [];
	"litellm.integrations.argilla" -> "os" [];
	"litellm.integrations.argilla" -> "random" [];
	"litellm.integrations.argilla" -> "types" [];
	"litellm.integrations.argilla" -> "typing" [];
	"litellm.integrations.argilla" -> "pydantic" [];
	"litellm.integrations.argilla" -> "litellm" [];
	"litellm.types.integrations.argilla" -> "os" [];
	"litellm.types.integrations.argilla" -> "datetime" [];
	"litellm.types.integrations.argilla" -> "enum" [];
	"litellm.types.integrations.argilla" -> "typing" [];
	"litellm.litellm_core_utils.model_param_helper" -> "typing" [];
	"litellm.integrations.mlflow" -> "json" [];
	"litellm.integrations.mlflow" -> "threading" [];
	"litellm.integrations.mlflow" -> "typing" [];
	"litellm.integrations.mlflow" -> "'mlflow.tracking'" [];
	"litellm.integrations.mlflow" -> "'mlflow.entities'" [];
	"litellm.integrations.mlflow" -> "'mlflow.tracing'" [];
	"litellm.integrations.mlflow" -> "mlflow" [];
	"litellm.integrations.arize.arize" -> "os" [];
	"litellm.integrations.arize.arize" -> "datetime" [];
	"litellm.integrations.arize.arize" -> "typing" [];
	"litellm.integrations.arize.arize" -> "'opentelemetry.trace'" [];
	"litellm.integrations.anthropic_cache_control_hook" -> "copy" [];
	"litellm.integrations.anthropic_cache_control_hook" -> "typing" [];
	"litellm.types.integrations.anthropic_cache_control_hook" -> "typing" [];
	"litellm.integrations.agentops.agentops" -> "os" [];
	"litellm.integrations.agentops.agentops" -> "dataclasses" [];
	"litellm.integrations.agentops.agentops" -> "typing" [];
	"litellm.batches.batch_utils" -> "json" [];
	"litellm.batches.batch_utils" -> "typing" [];
	"litellm.batches.batch_utils" -> "litellm" [];
	"litellm.files.main" -> "asyncio" [];
	"litellm.files.main" -> "contextvars" [];
	"litellm.files.main" -> "os" [];
	"litellm.files.main" -> "functools" [];
	"litellm.files.main" -> "typing" [];
	"litellm.files.main" -> "litellm" [];
	"litellm.llms.vertex_ai.files.handler" -> "asyncio" [];
	"litellm.llms.vertex_ai.files.handler" -> "typing" [];
	"litellm.llms.vertex_ai.files.handler" -> "litellm" [];
	"litellm.llms.azure.files.handler" -> "typing" [];
	"litellm.llms.azure.files.handler" -> "openai" [];
	"litellm.types.router" -> "datetime" [];
	"litellm.types.router" -> "enum" [];
	"litellm.types.router" -> "uuid" [];
	"litellm.types.router" -> "typing" [];
	"litellm.types.router" -> "openai" [];
	"litellm.types.router" -> "pydantic" [];
	"litellm.types.router" -> "typing_extensions" [];
	"litellm.types.embedding" -> "typing" [];
	"litellm.types.embedding" -> "pydantic" [];
	"litellm.types.completion" -> "typing" [];
	"litellm.types.completion" -> "pydantic" [];
	"litellm.types.completion" -> "typing_extensions" [];
	"litellm.proxy._types" -> "enum" [];
	"litellm.proxy._types" -> "json" [];
	"litellm.proxy._types" -> "uuid" [];
	"litellm.proxy._types" -> "datetime" [];
	"litellm.proxy._types" -> "typing" [];
	"litellm.proxy._types" -> "pydantic" [];
	"litellm.proxy._types" -> "typing_extensions" [];
	"litellm.proxy._types" -> "'opentelemetry.trace'" [];
	"litellm.proxy._types" -> "hashlib" [];
	"litellm.exceptions" -> "typing" [];
	"litellm.exceptions" -> "openai" [];
	"litellm._logging" -> "json" [];
	"litellm._logging" -> "logging" [];
	"litellm._logging" -> "os" [];
	"litellm._logging" -> "sys" [];
	"litellm._logging" -> "datetime" [];
	"litellm._logging" -> "asyncio" [];
	"litellm.llms.base_llm.responses.transformation" -> "types" [];
	"litellm.llms.base_llm.responses.transformation" -> "abc" [];
	"litellm.llms.base_llm.responses.transformation" -> "typing" [];
	"litellm.llms.base_llm.rerank.transformation" -> "abc" [];
	"litellm.llms.base_llm.rerank.transformation" -> "typing" [];
	"litellm.llms.base_llm.realtime.transformation" -> "abc" [];
	"litellm.llms.base_llm.realtime.transformation" -> "typing" [];
	"litellm.llms.base_llm.image_variations.transformation" -> "abc" [];
	"litellm.llms.base_llm.image_variations.transformation" -> "typing" [];
	"litellm.llms.base_llm.image_variations.transformation" -> "aiohttp" [];
	"litellm.llms.base_llm.image_generation.transformation" -> "abc" [];
	"litellm.llms.base_llm.image_generation.transformation" -> "typing" [];
	"litellm.llms.base_llm.files.transformation" -> "abc" [];
	"litellm.llms.base_llm.files.transformation" -> "typing" [];
	"litellm.llms.base_llm.embedding.transformation" -> "abc" [];
	"litellm.llms.base_llm.embedding.transformation" -> "typing" [];
	"litellm.llms.base_llm.completion.transformation" -> "abc" [];
	"litellm.llms.base_llm.completion.transformation" -> "typing" [];
	"litellm.llms.base_llm.chat.transformation" -> "types" [];
	"litellm.llms.base_llm.chat.transformation" -> "abc" [];
	"litellm.llms.base_llm.chat.transformation" -> "typing" [];
	"litellm.llms.base_llm.chat.transformation" -> "pydantic" [];
	"litellm.llms.base_llm.base_utils" -> "copy" [];
	"litellm.llms.base_llm.base_utils" -> "json" [];
	"litellm.llms.base_llm.base_utils" -> "abc" [];
	"litellm.llms.base_llm.base_utils" -> "typing" [];
	"litellm.llms.base_llm.base_utils" -> "pydantic" [];
	"litellm.llms.base_llm.audio_transcription.transformation" -> "abc" [];
	"litellm.llms.base_llm.audio_transcription.transformation" -> "typing" [];
	"litellm.llms.base_llm.anthropic_messages.transformation" -> "abc" [];
	"litellm.llms.base_llm.anthropic_messages.transformation" -> "typing" [];
	"litellm.types.utils" -> "json" [];
	"litellm.types.utils" -> "time" [];
	"litellm.types.utils" -> "uuid" [];
	"litellm.types.utils" -> "enum" [];
	"litellm.types.utils" -> "typing" [];
	"litellm.types.utils" -> "aiohttp" [];
	"litellm.types.utils" -> "pydantic" [];
	"litellm.types.utils" -> "typing_extensions" [];
	"litellm.types.utils" -> "litellm" [];
	"litellm.types.rerank" -> "typing" [];
	"litellm.types.rerank" -> "pydantic" [];
	"litellm.types.rerank" -> "typing_extensions" [];
	"litellm.types.llms.openai" -> "enum" [];
	"litellm.types.llms.openai" -> "os" [];
	"litellm.types.llms.openai" -> "typing" [];
	"litellm.types.llms.openai" -> "pydantic" [];
	"litellm.types.llms.openai" -> "typing_extensions" [];
	"litellm.types.llms.anthropic" -> "typing" [];
	"litellm.types.llms.anthropic" -> "pydantic" [];
	"litellm.types.llms.anthropic" -> "typing_extensions" [];
	"litellm.secret_managers.main" -> "ast" [];
	"litellm.secret_managers.main" -> "base64" [];
	"litellm.secret_managers.main" -> "binascii" [];
	"litellm.secret_managers.main" -> "os" [];
	"litellm.secret_managers.main" -> "traceback" [];
	"litellm.secret_managers.main" -> "typing" [];
	"litellm.secret_managers.main" -> "litellm" [];
	"litellm.router_utils.get_retry_from_policy" -> "typing" [];
	"litellm.llms.custom_httpx.http_handler" -> "asyncio" [];
	"litellm.llms.custom_httpx.http_handler" -> "os" [];
	"litellm.llms.custom_httpx.http_handler" -> "ssl" [];
	"litellm.llms.custom_httpx.http_handler" -> "time" [];
	"litellm.llms.custom_httpx.http_handler" -> "typing" [];
	"litellm.llms.custom_httpx.http_handler" -> "litellm" [];
	"litellm.llms.bedrock.common_utils" -> "os" [];
	"litellm.llms.bedrock.common_utils" -> "typing" [];
	"litellm.llms.bedrock.common_utils" -> "litellm" [];
	"litellm.llms.bedrock.common_utils" -> "boto3" [];
	"litellm.litellm_core_utils.token_counter" -> "base64" [];
	"litellm.litellm_core_utils.token_counter" -> "io" [];
	"litellm.litellm_core_utils.token_counter" -> "struct" [];
	"litellm.litellm_core_utils.token_counter" -> "typing" [];
	"litellm.litellm_core_utils.token_counter" -> "tiktoken" [];
	"litellm.litellm_core_utils.token_counter" -> "litellm" [];
	"litellm.litellm_core_utils.streaming_handler" -> "asyncio" [];
	"litellm.litellm_core_utils.streaming_handler" -> "datetime" [];
	"litellm.litellm_core_utils.streaming_handler" -> "json" [];
	"litellm.litellm_core_utils.streaming_handler" -> "threading" [];
	"litellm.litellm_core_utils.streaming_handler" -> "time" [];
	"litellm.litellm_core_utils.streaming_handler" -> "traceback" [];
	"litellm.litellm_core_utils.streaming_handler" -> "uuid" [];
	"litellm.litellm_core_utils.streaming_handler" -> "typing" [];
	"litellm.litellm_core_utils.streaming_handler" -> "pydantic" [];
	"litellm.litellm_core_utils.streaming_handler" -> "litellm" [];
	"litellm.litellm_core_utils.streaming_handler" -> "proto" [];
	"litellm.litellm_core_utils.rules" -> "typing" [];
	"litellm.litellm_core_utils.rules" -> "litellm" [];
	"litellm.litellm_core_utils.redact_messages" -> "copy" [];
	"litellm.litellm_core_utils.redact_messages" -> "typing" [];
	"litellm.litellm_core_utils.redact_messages" -> "litellm" [];
	"litellm.litellm_core_utils.llm_response_utils.response_metadata" -> "datetime" [];
	"litellm.litellm_core_utils.llm_response_utils.response_metadata" -> "typing" [];
	"litellm.litellm_core_utils.llm_response_utils.get_headers" -> "typing" [];
	"litellm.litellm_core_utils.llm_response_utils.get_formatted_prompt" -> "typing" [];
	"litellm.litellm_core_utils.llm_response_utils.get_api_base" -> "typing" [];
	"litellm.litellm_core_utils.llm_response_utils.get_api_base" -> "litellm" [];
	"litellm.litellm_core_utils.llm_response_utils.convert_dict_to_response" -> "asyncio" [];
	"litellm.litellm_core_utils.llm_response_utils.convert_dict_to_response" -> "json" [];
	"litellm.litellm_core_utils.llm_response_utils.convert_dict_to_response" -> "re" [];
	"litellm.litellm_core_utils.llm_response_utils.convert_dict_to_response" -> "time" [];
	"litellm.litellm_core_utils.llm_response_utils.convert_dict_to_response" -> "traceback" [];
	"litellm.litellm_core_utils.llm_response_utils.convert_dict_to_response" -> "uuid" [];
	"litellm.litellm_core_utils.llm_response_utils.convert_dict_to_response" -> "typing" [];
	"litellm.litellm_core_utils.llm_response_utils.convert_dict_to_response" -> "litellm" [];
	"litellm.litellm_core_utils.llm_response_utils.convert_dict_to_response" -> "collections" [];
	"litellm.types.llms.databricks" -> "json" [];
	"litellm.types.llms.databricks" -> "typing" [];
	"litellm.types.llms.databricks" -> "pydantic" [];
	"litellm.types.llms.databricks" -> "typing_extensions" [];
	"litellm.litellm_core_utils.llm_request_utils" -> "typing" [];
	"litellm.litellm_core_utils.llm_request_utils" -> "litellm" [];
	"litellm.litellm_core_utils.get_supported_openai_params" -> "typing" [];
	"litellm.litellm_core_utils.get_supported_openai_params" -> "litellm" [];
	"litellm.litellm_core_utils.get_llm_provider_logic" -> "typing" [];
	"litellm.litellm_core_utils.get_llm_provider_logic" -> "litellm" [];
	"litellm.litellm_core_utils.get_litellm_params" -> "typing" [];
	"litellm.litellm_core_utils.exception_mapping_utils" -> "json" [];
	"litellm.litellm_core_utils.exception_mapping_utils" -> "traceback" [];
	"litellm.litellm_core_utils.exception_mapping_utils" -> "typing" [];
	"litellm.litellm_core_utils.exception_mapping_utils" -> "litellm" [];
	"litellm.litellm_core_utils.exception_mapping_utils" -> "re" [];
	"litellm.litellm_core_utils.default_encoding" -> "os" [];
	"litellm.litellm_core_utils.default_encoding" -> "litellm" [];
	"litellm.litellm_core_utils.default_encoding" -> "importlib" [];
	"litellm.litellm_core_utils.default_encoding" -> "pkg_resources" [];
	"litellm.litellm_core_utils.default_encoding" -> "tiktoken" [];
	"litellm.litellm_core_utils.credential_accessor" -> "typing" [];
	"litellm.litellm_core_utils.credential_accessor" -> "litellm" [];
	"litellm.litellm_core_utils.core_helpers" -> "typing" [];
	"litellm.litellm_core_utils.core_helpers" -> "opentelemetry" [];
	"litellm.integrations.custom_logger" -> "traceback" [];
	"litellm.integrations.custom_logger" -> "typing" [];
	"litellm.integrations.custom_logger" -> "pydantic" [];
	"litellm.integrations.custom_logger" -> "'opentelemetry.trace'" [];
	"litellm.integrations.custom_guardrail" -> "datetime" [];
	"litellm.integrations.custom_guardrail" -> "typing" [];
	"litellm.integrations.custom_guardrail" -> "asyncio" [];
	"litellm.integrations.custom_guardrail" -> "functools" [];
	"litellm.constants" -> "os" [];
	"litellm.constants" -> "typing" [];
	"litellm.caching.caching_handler" -> "asyncio" [];
	"litellm.caching.caching_handler" -> "datetime" [];
	"litellm.caching.caching_handler" -> "inspect" [];
	"litellm.caching.caching_handler" -> "threading" [];
	"litellm.caching.caching_handler" -> "typing" [];
	"litellm.caching.caching_handler" -> "pydantic" [];
	"litellm.caching.caching_handler" -> "litellm" [];
	"litellm.caching.caching" -> "ast" [];
	"litellm.caching.caching" -> "hashlib" [];
	"litellm.caching.caching" -> "json" [];
	"litellm.caching.caching" -> "time" [];
	"litellm.caching.caching" -> "traceback" [];
	"litellm.caching.caching" -> "enum" [];
	"litellm.caching.caching" -> "typing" [];
	"litellm.caching.caching" -> "pydantic" [];
	"litellm.caching.caching" -> "litellm" [];
	"litellm.caching.caching" -> "contextlib" [];
	"litellm.caching._internal_lru_cache" -> "functools" [];
	"litellm.caching._internal_lru_cache" -> "typing" [];
	"litellm.litellm_core_utils.json_validation_rule" -> "json" [];
	"litellm.litellm_core_utils.json_validation_rule" -> "jsonschema" [];
	"litellm.litellm_core_utils.json_validation_rule" -> "litellm" [];
	"litellm.litellm_core_utils.audio_utils.utils" -> "os" [];
	"litellm._service_logger" -> "asyncio" [];
	"litellm._service_logger" -> "datetime" [];
	"litellm._service_logger" -> "typing" [];
	"litellm._service_logger" -> "'opentelemetry.trace'" [];
	"litellm.integrations.prometheus_services" -> "typing" [];
	"litellm.integrations.prometheus_services" -> "prometheus_client" [];
	"litellm" -> "warnings" [];
	"litellm" -> "threading" [];
	"litellm" -> "os" [];
	"litellm" -> "typing" [];
	"litellm" -> "re" [];
	"litellm" -> "dotenv" [];
	"litellm.types.llms.custom_llm" -> "typing" [];
	"litellm.types.llms.custom_llm" -> "typing_extensions" [];
	"litellm.anthropic_interface.messages" -> "typing" [];
	"litellm.types.adapter" -> "typing" [];
	"litellm.types.adapter" -> "typing_extensions" [];
	"litellm.fine_tuning.main" -> "asyncio" [];
	"litellm.fine_tuning.main" -> "contextvars" [];
	"litellm.fine_tuning.main" -> "os" [];
	"litellm.fine_tuning.main" -> "functools" [];
	"litellm.fine_tuning.main" -> "typing" [];
	"litellm.fine_tuning.main" -> "litellm" [];
	"litellm.llms.vertex_ai.fine_tuning.handler" -> "json" [];
	"litellm.llms.vertex_ai.fine_tuning.handler" -> "traceback" [];
	"litellm.llms.vertex_ai.fine_tuning.handler" -> "datetime" [];
	"litellm.llms.vertex_ai.fine_tuning.handler" -> "typing" [];
	"litellm.llms.vertex_ai.fine_tuning.handler" -> "litellm" [];
	"litellm.llms.openai.fine_tuning.handler" -> "typing" [];
	"litellm.llms.openai.fine_tuning.handler" -> "openai" [];
	"litellm.llms.azure.fine_tuning.handler" -> "typing" [];
	"litellm.llms.azure.fine_tuning.handler" -> "openai" [];
	"litellm.responses.main" -> "asyncio" [];
	"litellm.responses.main" -> "contextvars" [];
	"litellm.responses.main" -> "functools" [];
	"litellm.responses.main" -> "typing" [];
	"litellm.responses.main" -> "litellm" [];
	"litellm.responses.litellm_completion_transformation.handler" -> "typing" [];
	"litellm.responses.litellm_completion_transformation.handler" -> "litellm" [];
	"litellm.responses.litellm_completion_transformation.streaming_iterator" -> "typing" [];
	"litellm.responses.litellm_completion_transformation.streaming_iterator" -> "litellm" [];
	"litellm.llms.anthropic.experimental_pass_through.messages.handler" -> "asyncio" [];
	"litellm.llms.anthropic.experimental_pass_through.messages.handler" -> "contextvars" [];
	"litellm.llms.anthropic.experimental_pass_through.messages.handler" -> "functools" [];
	"litellm.llms.anthropic.experimental_pass_through.messages.handler" -> "typing" [];
	"litellm.llms.anthropic.experimental_pass_through.messages.handler" -> "litellm" [];
	"litellm.llms.anthropic.experimental_pass_through.messages.utils" -> "typing" [];
	"litellm.rerank_api.main" -> "asyncio" [];
	"litellm.rerank_api.main" -> "contextvars" [];
	"litellm.rerank_api.main" -> "functools" [];
	"litellm.rerank_api.main" -> "typing" [];
	"litellm.rerank_api.main" -> "litellm" [];
	"litellm.rerank_api.rerank_utils" -> "typing" [];
	"litellm.llms.together_ai.rerank.handler" -> "typing" [];
	"litellm.llms.together_ai.rerank.handler" -> "litellm" [];
	"litellm.llms.together_ai.rerank.transformation" -> "uuid" [];
	"litellm.llms.together_ai.rerank.transformation" -> "typing" [];
	"litellm.llms.bedrock.rerank.handler" -> "json" [];
	"litellm.llms.bedrock.rerank.handler" -> "typing" [];
	"litellm.llms.bedrock.rerank.handler" -> "litellm" [];
	"litellm.llms.bedrock.rerank.handler" -> "'botocore.awsrequest'" [];
	"litellm.llms.bedrock.rerank.handler" -> "'botocore.auth'" [];
	"litellm.llms.bedrock.rerank.transformation" -> "uuid" [];
	"litellm.llms.bedrock.rerank.transformation" -> "typing" [];
	"litellm.batch_completion.main" -> "typing" [];
	"litellm.batch_completion.main" -> "litellm" [];
	"litellm.assistants.main" -> "asyncio" [];
	"litellm.assistants.main" -> "contextvars" [];
	"litellm.assistants.main" -> "os" [];
	"litellm.assistants.main" -> "functools" [];
	"litellm.assistants.main" -> "typing" [];
	"litellm.assistants.main" -> "openai" [];
	"litellm.assistants.main" -> "litellm" [];
	"litellm.assistants.utils" -> "typing" [];
	"litellm.assistants.utils" -> "litellm" [];
	"litellm.llms.azure.assistants" -> "typing" [];
	"litellm.llms.azure.assistants" -> "openai" [];
	"litellm.llms.azure.assistants" -> "typing_extensions" [];
	"litellm.proxy.proxy_cli" -> "importlib" [];
	"litellm.proxy.proxy_cli" -> "json" [];
	"litellm.proxy.proxy_cli" -> "os" [];
	"litellm.proxy.proxy_cli" -> "random" [];
	"litellm.proxy.proxy_cli" -> "subprocess" [];
	"litellm.proxy.proxy_cli" -> "sys" [];
	"litellm.proxy.proxy_cli" -> "typing" [];
	"litellm.proxy.proxy_cli" -> "click" [];
	"litellm.proxy.proxy_cli" -> "dotenv" [];
	"litellm.proxy.proxy_cli" -> "fastapi" [];
	"litellm.proxy.proxy_cli" -> "enum" [];
	"litellm.proxy.proxy_cli" -> "openai" [];
	"litellm.proxy.proxy_cli" -> "litellm" [];
	"litellm.proxy.proxy_cli" -> "asyncio" [];
	"litellm.proxy.proxy_cli" -> "hypercorn" [];
	"litellm.proxy.proxy_cli" -> "'hypercorn.config'" [];
	"litellm.proxy.proxy_cli" -> "'gunicorn.app'" [];
	"litellm.proxy.proxy_cli" -> "socket" [];
	"litellm.proxy.proxy_cli" -> "proxy_server" [];
	"litellm.proxy.proxy_cli" -> "uvicorn" [];
	"litellm.proxy.db.check_migration" -> "os" [];
	"litellm.proxy.db.check_migration" -> "subprocess" [];
	"litellm.proxy.db.check_migration" -> "typing" [];
	"litellm.budget_manager" -> "json" [];
	"litellm.budget_manager" -> "os" [];
	"litellm.budget_manager" -> "threading" [];
	"litellm.budget_manager" -> "time" [];
	"litellm.budget_manager" -> "typing" [];
	"litellm.budget_manager" -> "logging" [];
	"litellm.llms.watsonx.embed.transformation" -> "typing" [];
	"litellm.llms.watsonx.completion.transformation" -> "time" [];
	"litellm.llms.watsonx.completion.transformation" -> "datetime" [];
	"litellm.llms.watsonx.completion.transformation" -> "typing" [];
	"litellm.llms.azure.chat.o_series_transformation" -> "typing" [];
	"litellm.llms.azure.chat.o_series_transformation" -> "litellm" [];
	"litellm.llms.perplexity.chat.transformation" -> "typing" [];
	"litellm.llms.nscale.chat.transformation" -> "typing" [];
	"litellm.llms.lm_studio.embed.transformation" -> "types" [];
	"litellm.llms.lm_studio.embed.transformation" -> "typing" [];
	"litellm.llms.lm_studio.chat.transformation" -> "typing" [];
	"litellm.llms.deepseek.chat.transformation" -> "typing" [];
	"litellm.llms.litellm_proxy.chat.transformation" -> "typing" [];
	"litellm.llms.litellm_proxy.chat.transformation" -> "litellm" [];
	"litellm.llms.llamafile.chat.transformation" -> "typing" [];
	"litellm.llms.hosted_vllm.chat.transformation" -> "typing" [];
	"litellm.llms.azure.completion.transformation" -> "typing" [];
	"litellm.llms.azure.chat.gpt_transformation" -> "typing" [];
	"litellm.llms.azure.chat.gpt_transformation" -> "litellm" [];
	"litellm.llms.codestral.completion.transformation" -> "json" [];
	"litellm.llms.codestral.completion.transformation" -> "typing" [];
	"litellm.llms.codestral.completion.transformation" -> "litellm" [];
	"litellm.llms.volcengine" -> "typing" [];
	"litellm.llms.xai.common_utils" -> "typing" [];
	"litellm.llms.xai.common_utils" -> "litellm" [];
	"litellm.llms.xai.chat.transformation" -> "typing" [];
	"litellm.llms.xai.chat.transformation" -> "litellm" [];
	"litellm.llms.jina_ai.embedding.transformation" -> "types" [];
	"litellm.llms.jina_ai.embedding.transformation" -> "typing" [];
	"litellm.llms.jina_ai.embedding.transformation" -> "litellm" [];
	"litellm.llms.fireworks_ai.embed.fireworks_ai_transformation" -> "litellm" [];
	"litellm.llms.fireworks_ai.audio_transcription.transformation" -> "typing" [];
	"litellm.llms.fireworks_ai.common_utils" -> "typing" [];
	"litellm.llms.fireworks_ai.completion.transformation" -> "typing" [];
	"litellm.llms.fireworks_ai.chat.transformation" -> "json" [];
	"litellm.llms.fireworks_ai.chat.transformation" -> "uuid" [];
	"litellm.llms.fireworks_ai.chat.transformation" -> "typing" [];
	"litellm.llms.fireworks_ai.chat.transformation" -> "litellm" [];
	"litellm.llms.sambanova.chat" -> "typing" [];
	"litellm.llms.cerebras.chat" -> "typing" [];
	"litellm.llms.featherless_ai.chat.transformation" -> "typing" [];
	"litellm.llms.featherless_ai.chat.transformation" -> "litellm" [];
	"litellm.llms.nvidia_nim.embed" -> "types" [];
	"litellm.llms.nvidia_nim.embed" -> "typing" [];
	"litellm.llms.openai.chat.gpt_audio_transformation" -> "litellm" [];
	"litellm.llms.openai.transcriptions.gpt_transformation" -> "typing" [];
	"litellm.llms.openai.transcriptions.whisper_transformation" -> "typing" [];
	"litellm.llms.azure.responses.transformation" -> "typing" [];
	"litellm.llms.azure.responses.transformation" -> "litellm" [];
	"litellm.llms.openai.responses.transformation" -> "typing" [];
	"litellm.llms.openai.responses.transformation" -> "litellm" [];
	"litellm.llms.mistral.mistral_chat_transformation" -> "typing" [];
	"litellm.types.llms.mistral" -> "typing" [];
	"litellm.llms.azure_ai.chat.transformation" -> "enum" [];
	"litellm.llms.azure_ai.chat.transformation" -> "typing" [];
	"litellm.llms.azure_ai.chat.transformation" -> "litellm" [];
	"litellm.llms.azure_ai.chat.transformation" -> "re" [];
	"litellm.llms.infinity.embedding.transformation" -> "typing" [];
	"litellm.llms.infinity.common_utils" -> "typing" [];
	"litellm.llms.voyage.embedding.transformation" -> "typing" [];
	"litellm.llms.topaz.image_variations.transformation" -> "base64" [];
	"litellm.llms.topaz.image_variations.transformation" -> "time" [];
	"litellm.llms.topaz.image_variations.transformation" -> "io" [];
	"litellm.llms.topaz.image_variations.transformation" -> "typing" [];
	"litellm.llms.topaz.image_variations.transformation" -> "aiohttp" [];
	"litellm.llms.topaz.common_utils" -> "typing" [];
	"litellm.llms.deepgram.audio_transcription.transformation" -> "io" [];
	"litellm.llms.deepgram.audio_transcription.transformation" -> "typing" [];
	"litellm.llms.deepinfra.chat.transformation" -> "typing" [];
	"litellm.llms.deepinfra.chat.transformation" -> "litellm" [];
	"litellm.llms.openai.image_variations.transformation" -> "typing" [];
	"litellm.llms.openai.image_variations.transformation" -> "aiohttp" [];
	"litellm.llms.cohere.chat.transformation" -> "json" [];
	"litellm.llms.cohere.chat.transformation" -> "time" [];
	"litellm.llms.cohere.chat.transformation" -> "typing" [];
	"litellm.llms.cohere.chat.transformation" -> "litellm" [];
	"litellm.llms.bedrock.image.amazon_nova_canvas_transformation" -> "types" [];
	"litellm.llms.bedrock.image.amazon_nova_canvas_transformation" -> "typing" [];
	"litellm.llms.bedrock.image.amazon_stability3_transformation" -> "types" [];
	"litellm.llms.bedrock.image.amazon_stability3_transformation" -> "typing" [];
	"litellm.llms.bedrock.image.amazon_stability1_transformation" -> "types" [];
	"litellm.llms.bedrock.image.amazon_stability1_transformation" -> "typing" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_titan_transformation" -> "re" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_titan_transformation" -> "types" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_titan_transformation" -> "typing" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_titan_transformation" -> "litellm" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_mistral_transformation" -> "types" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_mistral_transformation" -> "typing" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_cohere_transformation" -> "types" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_cohere_transformation" -> "typing" [];
	"litellm.llms.bedrock.chat.invoke_transformations.anthropic_claude3_transformation" -> "typing" [];
	"litellm.llms.bedrock.chat.invoke_transformations.anthropic_claude2_transformation" -> "types" [];
	"litellm.llms.bedrock.chat.invoke_transformations.anthropic_claude2_transformation" -> "typing" [];
	"litellm.llms.bedrock.chat.invoke_transformations.anthropic_claude2_transformation" -> "litellm" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_nova_transformation" -> "typing" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_nova_transformation" -> "litellm" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_ai21_transformation" -> "types" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_ai21_transformation" -> "typing" [];
	"litellm.llms.ollama.completion.transformation" -> "json" [];
	"litellm.llms.ollama.completion.transformation" -> "time" [];
	"litellm.llms.ollama.completion.transformation" -> "uuid" [];
	"litellm.llms.ollama.completion.transformation" -> "typing" [];
	"litellm.llms.ollama.completion.transformation" -> "litellm" [];
	"litellm.llms.ollama.common_utils" -> "typing" [];
	"litellm.llms.ollama.common_utils" -> "base64" [];
	"litellm.llms.ollama.common_utils" -> "io" [];
	"litellm.llms.ollama.common_utils" -> "PIL" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.ai21.transformation" -> "types" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.ai21.transformation" -> "typing" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.ai21.transformation" -> "litellm" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.llama3.transformation" -> "types" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.llama3.transformation" -> "typing" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.anthropic.transformation" -> "typing" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.anthropic.transformation" -> "litellm" [];
	"litellm.llms.vertex_ai.vertex_embeddings.transformation" -> "types" [];
	"litellm.llms.vertex_ai.vertex_embeddings.transformation" -> "typing" [];
	"litellm.llms.vertex_ai.vertex_embeddings.transformation" -> "pydantic" [];
	"litellm.llms.gemini.chat.transformation" -> "typing" [];
	"litellm.llms.gemini.chat.transformation" -> "litellm" [];
	"litellm.llms.petals.completion.transformation" -> "typing" [];
	"litellm.llms.petals.completion.transformation" -> "litellm" [];
	"litellm.llms.novita.chat.transformation" -> "typing" [];
	"litellm.llms.cloudflare.chat.transformation" -> "json" [];
	"litellm.llms.cloudflare.chat.transformation" -> "time" [];
	"litellm.llms.cloudflare.chat.transformation" -> "typing" [];
	"litellm.llms.cloudflare.chat.transformation" -> "litellm" [];
	"litellm.llms.together_ai.completion.transformation" -> "typing" [];
	"litellm.llms.together_ai.chat" -> "typing" [];
	"litellm.llms.together_ai.chat" -> "litellm" [];
	"litellm.llms.bedrock.messages.invoke_transformations.anthropic_claude3_transformation" -> "typing" [];
	"litellm.llms.anthropic.experimental_pass_through.messages.transformation" -> "typing" [];
	"litellm.llms.anthropic.experimental_pass_through.messages.transformation" -> "datetime" [];
	"litellm.llms.meta_llama.chat.transformation" -> "typing" [];
	"litellm.llms.meta_llama.chat.transformation" -> "litellm" [];
	"litellm.llms.ai21.chat.transformation" -> "typing" [];
	"litellm.llms.clarifai.chat.transformation" -> "json" [];
	"litellm.llms.clarifai.chat.transformation" -> "typing" [];
	"litellm.llms.jina_ai.rerank.transformation" -> "uuid" [];
	"litellm.llms.jina_ai.rerank.transformation" -> "typing" [];
	"litellm.llms.infinity.rerank.transformation" -> "uuid" [];
	"litellm.llms.infinity.rerank.transformation" -> "typing" [];
	"litellm.llms.infinity.rerank.transformation" -> "litellm" [];
	"litellm.llms.azure_ai.rerank.transformation" -> "typing" [];
	"litellm.llms.azure_ai.rerank.transformation" -> "litellm" [];
	"litellm.llms.cohere.rerank_v2.transformation" -> "typing" [];
	"litellm.llms.cohere.rerank.transformation" -> "typing" [];
	"litellm.llms.cohere.rerank.transformation" -> "litellm" [];
	"litellm.llms.snowflake.chat.transformation" -> "typing" [];
	"litellm.llms.cohere.completion.transformation" -> "time" [];
	"litellm.llms.cohere.completion.transformation" -> "typing" [];
	"litellm.llms.cohere.completion.transformation" -> "litellm" [];
	"litellm.llms.predibase.chat.transformation" -> "typing" [];
	"litellm.llms.databricks.embed.transformation" -> "types" [];
	"litellm.llms.databricks.embed.transformation" -> "typing" [];
	"litellm.llms.databricks.chat.transformation" -> "typing" [];
	"litellm.llms.databricks.chat.transformation" -> "pydantic" [];
	"litellm.llms.triton.embedding.transformation" -> "typing" [];
	"litellm.llms.triton.common_utils" -> "typing" [];
	"litellm.llms.triton.completion.transformation" -> "json" [];
	"litellm.llms.triton.completion.transformation" -> "typing" [];
	"litellm.llms.anthropic.completion.transformation" -> "json" [];
	"litellm.llms.anthropic.completion.transformation" -> "time" [];
	"litellm.llms.anthropic.completion.transformation" -> "typing" [];
	"litellm.llms.anthropic.completion.transformation" -> "litellm" [];
	"litellm.llms.groq.stt.transformation" -> "types" [];
	"litellm.llms.groq.stt.transformation" -> "typing" [];
	"litellm.llms.groq.stt.transformation" -> "litellm" [];
	"litellm.llms.openrouter.chat.transformation" -> "typing" [];
	"litellm.types.llms.openrouter" -> "json" [];
	"litellm.types.llms.openrouter" -> "enum" [];
	"litellm.types.llms.openrouter" -> "typing" [];
	"litellm.llms.huggingface.chat.transformation" -> "logging" [];
	"litellm.llms.huggingface.chat.transformation" -> "os" [];
	"litellm.llms.huggingface.chat.transformation" -> "typing" [];
	"litellm.llms.aiohttp_openai.chat.transformation" -> "typing" [];
	"litellm.llms.aiohttp_openai.chat.transformation" -> "aiohttp" [];
	"litellm.timeout" -> "asyncio" [];
	"litellm.timeout" -> "concurrent" [];
	"litellm.timeout" -> "functools" [];
	"litellm.timeout" -> "inspect" [];
	"litellm.timeout" -> "threading" [];
	"litellm.litellm_core_utils.get_model_cost_map" -> "os" [];
	"litellm.litellm_core_utils.get_model_cost_map" -> "json" [];
	"litellm.litellm_core_utils.logging_callback_manager" -> "typing" [];
	"litellm.litellm_core_utils.logging_callback_manager" -> "litellm" [];
	"litellm.caching.llm_caching_handler" -> "asyncio" [];
	"tokenizers" -> "enum" [];
	"tokenizers" -> "typing" [];
	"tokenizers.implementations.sentencepiece_unigram" -> "json" [];
	"tokenizers.implementations.sentencepiece_unigram" -> "os" [];
	"tokenizers.implementations.sentencepiece_unigram" -> "typing" [];
	"tokenizers.implementations.sentencepiece_unigram" -> "tokenizers" [];
	"tokenizers.implementations.sentencepiece_unigram" -> "sys" [];
	"tokenizers.implementations.sentencepiece_unigram" -> "sentencepiece_model_pb2" [];
	"tokenizers.implementations.sentencepiece_bpe" -> "typing" [];
	"tokenizers.implementations.sentencepiece_bpe" -> "tokenizers" [];
	"tokenizers.implementations.char_level_bpe" -> "typing" [];
	"tokenizers.implementations.char_level_bpe" -> "tokenizers" [];
	"tokenizers.implementations.byte_level_bpe" -> "typing" [];
	"tokenizers.implementations.byte_level_bpe" -> "tokenizers" [];
	"tokenizers.implementations.bert_wordpiece" -> "typing" [];
	"tokenizers.implementations.bert_wordpiece" -> "tokenizers" [];
	"tokenizers.implementations.base_tokenizer" -> "typing" [];
	"tokenizers.implementations.base_tokenizer" -> "tokenizers" [];
	"langchain_community.chat_models.litellm" -> "__future__" [];
	"langchain_community.chat_models.litellm" -> "json" [];
	"langchain_community.chat_models.litellm" -> "logging" [];
	"langchain_community.chat_models.litellm" -> "typing" [];
	"langchain_community.chat_models.litellm" -> "pydantic" [];
	"langchain_community.chat_models.litellm" -> "litellm" [];
	"langchain_community.chat_models.konko" -> "__future__" [];
	"langchain_community.chat_models.konko" -> "logging" [];
	"langchain_community.chat_models.konko" -> "os" [];
	"langchain_community.chat_models.konko" -> "warnings" [];
	"langchain_community.chat_models.konko" -> "typing" [];
	"langchain_community.chat_models.konko" -> "requests" [];
	"langchain_community.chat_models.konko" -> "pydantic" [];
	"langchain_community.chat_models.konko" -> "konko" [];
	"langchain_community.chat_models.kinetica" -> "json" [];
	"langchain_community.chat_models.kinetica" -> "logging" [];
	"langchain_community.chat_models.kinetica" -> "os" [];
	"langchain_community.chat_models.kinetica" -> "re" [];
	"langchain_community.chat_models.kinetica" -> "pathlib" [];
	"langchain_community.chat_models.kinetica" -> "typing" [];
	"langchain_community.chat_models.kinetica" -> "gpudb" [];
	"langchain_community.chat_models.kinetica" -> "pydantic" [];
	"langchain_community.chat_models.jinachat" -> "__future__" [];
	"langchain_community.chat_models.jinachat" -> "logging" [];
	"langchain_community.chat_models.jinachat" -> "typing" [];
	"langchain_community.chat_models.jinachat" -> "pydantic" [];
	"langchain_community.chat_models.jinachat" -> "tenacity" [];
	"langchain_community.chat_models.jinachat" -> "openai" [];
	"langchain_community.chat_models.javelin_ai_gateway" -> "logging" [];
	"langchain_community.chat_models.javelin_ai_gateway" -> "typing" [];
	"langchain_community.chat_models.javelin_ai_gateway" -> "pydantic" [];
	"langchain_community.chat_models.javelin_ai_gateway" -> "javelin_sdk" [];
	"langchain_community.chat_models.hunyuan" -> "json" [];
	"langchain_community.chat_models.hunyuan" -> "logging" [];
	"langchain_community.chat_models.hunyuan" -> "typing" [];
	"langchain_community.chat_models.hunyuan" -> "pydantic" [];
	"langchain_community.chat_models.hunyuan" -> "tencentcloud" [];
	"langchain_community.chat_models.hunyuan" -> "'tencentcloud.hunyuan'" [];
	"langchain_community.chat_models.human" -> "io" [];
	"langchain_community.chat_models.human" -> "typing" [];
	"langchain_community.chat_models.human" -> "yaml" [];
	"langchain_community.chat_models.human" -> "pydantic" [];
	"langchain_community.chat_models.huggingface" -> "typing" [];
	"langchain_community.chat_models.huggingface" -> "pydantic" [];
	"langchain_community.chat_models.huggingface" -> "typing_extensions" [];
	"langchain_community.chat_models.huggingface" -> "transformers" [];
	"langchain_community.chat_models.huggingface" -> "huggingface_hub" [];
	"langchain_community.llms.huggingface_text_gen_inference" -> "logging" [];
	"langchain_community.llms.huggingface_text_gen_inference" -> "typing" [];
	"langchain_community.llms.huggingface_text_gen_inference" -> "pydantic" [];
	"langchain_community.llms.huggingface_text_gen_inference" -> "text_generation" [];
	"langchain_community.llms.huggingface_hub" -> "json" [];
	"langchain_community.llms.huggingface_hub" -> "typing" [];
	"langchain_community.llms.huggingface_hub" -> "pydantic" [];
	"langchain_community.llms.huggingface_hub" -> "huggingface_hub" [];
	"langchain_community.llms.huggingface_endpoint" -> "json" [];
	"langchain_community.llms.huggingface_endpoint" -> "logging" [];
	"langchain_community.llms.huggingface_endpoint" -> "os" [];
	"langchain_community.llms.huggingface_endpoint" -> "typing" [];
	"langchain_community.llms.huggingface_endpoint" -> "pydantic" [];
	"langchain_community.llms.huggingface_endpoint" -> "huggingface_hub" [];
	"langchain_community.chat_models.gpt_router" -> "__future__" [];
	"langchain_community.chat_models.gpt_router" -> "logging" [];
	"langchain_community.chat_models.gpt_router" -> "typing" [];
	"langchain_community.chat_models.gpt_router" -> "pydantic" [];
	"langchain_community.chat_models.gpt_router" -> "typing_extensions" [];
	"langchain_community.chat_models.gpt_router" -> "gpt_router" [];
	"langchain_community.chat_models.gpt_router" -> "'gpt_router.models'" [];
	"langchain_community.chat_models.gpt_router" -> "'gpt_router.client'" [];
	"langchain_community.chat_models.google_palm" -> "__future__" [];
	"langchain_community.chat_models.google_palm" -> "logging" [];
	"langchain_community.chat_models.google_palm" -> "typing" [];
	"langchain_community.chat_models.google_palm" -> "pydantic" [];
	"langchain_community.chat_models.google_palm" -> "tenacity" [];
	"langchain_community.chat_models.google_palm" -> "'google.generativeai'" [];
	"langchain_community.chat_models.gigachat" -> "__future__" [];
	"langchain_community.chat_models.gigachat" -> "logging" [];
	"langchain_community.chat_models.gigachat" -> "typing" [];
	"langchain_community.chat_models.gigachat" -> "'gigachat.models'" [];
	"langchain_community.llms.gigachat" -> "__future__" [];
	"langchain_community.llms.gigachat" -> "logging" [];
	"langchain_community.llms.gigachat" -> "functools" [];
	"langchain_community.llms.gigachat" -> "typing" [];
	"langchain_community.llms.gigachat" -> "pydantic" [];
	"langchain_community.llms.gigachat" -> "gigachat" [];
	"langchain_community.llms.gigachat" -> "'gigachat.models'" [];
	"langchain_community.chat_models.friendli" -> "__future__" [];
	"langchain_community.chat_models.friendli" -> "typing" [];
	"langchain_community.llms.friendli" -> "__future__" [];
	"langchain_community.llms.friendli" -> "os" [];
	"langchain_community.llms.friendli" -> "typing" [];
	"langchain_community.llms.friendli" -> "pydantic" [];
	"langchain_community.llms.friendli" -> "friendli" [];
	"langchain_community.chat_models.fireworks" -> "typing" [];
	"langchain_community.chat_models.fireworks" -> "pydantic" [];
	"langchain_community.chat_models.fireworks" -> "'fireworks.client'" [];
	"langchain_community.chat_models.fake" -> "asyncio" [];
	"langchain_community.chat_models.fake" -> "time" [];
	"langchain_community.chat_models.fake" -> "typing" [];
	"langchain_community.chat_models.everlyai" -> "__future__" [];
	"langchain_community.chat_models.everlyai" -> "logging" [];
	"langchain_community.chat_models.everlyai" -> "sys" [];
	"langchain_community.chat_models.everlyai" -> "warnings" [];
	"langchain_community.chat_models.everlyai" -> "typing" [];
	"langchain_community.chat_models.everlyai" -> "pydantic" [];
	"langchain_community.chat_models.everlyai" -> "tiktoken" [];
	"langchain_community.chat_models.everlyai" -> "openai" [];
	"langchain_community.chat_models.ernie" -> "logging" [];
	"langchain_community.chat_models.ernie" -> "threading" [];
	"langchain_community.chat_models.ernie" -> "typing" [];
	"langchain_community.chat_models.ernie" -> "requests" [];
	"langchain_community.chat_models.ernie" -> "pydantic" [];
	"langchain_community.chat_models.edenai" -> "json" [];
	"langchain_community.chat_models.edenai" -> "warnings" [];
	"langchain_community.chat_models.edenai" -> "operator" [];
	"langchain_community.chat_models.edenai" -> "typing" [];
	"langchain_community.chat_models.edenai" -> "aiohttp" [];
	"langchain_community.chat_models.edenai" -> "pydantic" [];
	"langchain_community.chat_models.edenai" -> "langchain_community" [];
	"langchain_community.chat_models.deepinfra" -> "__future__" [];
	"langchain_community.chat_models.deepinfra" -> "json" [];
	"langchain_community.chat_models.deepinfra" -> "logging" [];
	"langchain_community.chat_models.deepinfra" -> "typing" [];
	"langchain_community.chat_models.deepinfra" -> "aiohttp" [];
	"langchain_community.chat_models.deepinfra" -> "requests" [];
	"langchain_community.chat_models.deepinfra" -> "pydantic" [];
	"langchain_community.chat_models.deepinfra" -> "typing_extensions" [];
	"langchain_community.chat_models.databricks" -> "logging" [];
	"langchain_community.chat_models.coze" -> "json" [];
	"langchain_community.chat_models.coze" -> "logging" [];
	"langchain_community.chat_models.coze" -> "typing" [];
	"langchain_community.chat_models.coze" -> "requests" [];
	"langchain_community.chat_models.coze" -> "pydantic" [];
	"langchain_community.chat_models.cohere" -> "typing" [];
	"langchain_community.chat_models.cohere" -> "pydantic" [];
	"langchain_community.llms.cohere" -> "__future__" [];
	"langchain_community.llms.cohere" -> "logging" [];
	"langchain_community.llms.cohere" -> "typing" [];
	"langchain_community.llms.cohere" -> "pydantic" [];
	"langchain_community.llms.cohere" -> "tenacity" [];
	"langchain_community.llms.cohere" -> "cohere" [];
	"langchain_community.chat_models.bedrock" -> "re" [];
	"langchain_community.chat_models.bedrock" -> "collections" [];
	"langchain_community.chat_models.bedrock" -> "typing" [];
	"langchain_community.chat_models.bedrock" -> "pydantic" [];
	"langchain_community.utilities.anthropic" -> "typing" [];
	"langchain_community.utilities.anthropic" -> "anthropic" [];
	"langchain_community.llms.bedrock" -> "asyncio" [];
	"langchain_community.llms.bedrock" -> "json" [];
	"langchain_community.llms.bedrock" -> "warnings" [];
	"langchain_community.llms.bedrock" -> "abc" [];
	"langchain_community.llms.bedrock" -> "typing" [];
	"langchain_community.llms.bedrock" -> "pydantic" [];
	"langchain_community.llms.bedrock" -> "boto3" [];
	"langchain_community.chat_models.meta" -> "typing" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "json" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "logging" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "uuid" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "operator" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "typing" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "pydantic" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "qianfan" [];
	"langchain_community.chat_models.baichuan" -> "json" [];
	"langchain_community.chat_models.baichuan" -> "logging" [];
	"langchain_community.chat_models.baichuan" -> "contextlib" [];
	"langchain_community.chat_models.baichuan" -> "typing" [];
	"langchain_community.chat_models.baichuan" -> "requests" [];
	"langchain_community.chat_models.baichuan" -> "pydantic" [];
	"langchain_community.chat_models.baichuan" -> "httpx_sse" [];
	"langchain_community.chat_models.azure_openai" -> "__future__" [];
	"langchain_community.chat_models.azure_openai" -> "logging" [];
	"langchain_community.chat_models.azure_openai" -> "os" [];
	"langchain_community.chat_models.azure_openai" -> "warnings" [];
	"langchain_community.chat_models.azure_openai" -> "typing" [];
	"langchain_community.chat_models.azure_openai" -> "pydantic" [];
	"langchain_community.chat_models.azure_openai" -> "openai" [];
	"langchain_community.chat_models.anyscale" -> "__future__" [];
	"langchain_community.chat_models.anyscale" -> "logging" [];
	"langchain_community.chat_models.anyscale" -> "os" [];
	"langchain_community.chat_models.anyscale" -> "sys" [];
	"langchain_community.chat_models.anyscale" -> "warnings" [];
	"langchain_community.chat_models.anyscale" -> "typing" [];
	"langchain_community.chat_models.anyscale" -> "requests" [];
	"langchain_community.chat_models.anyscale" -> "pydantic" [];
	"langchain_community.chat_models.anyscale" -> "tiktoken" [];
	"langchain_community.chat_models.anyscale" -> "openai" [];
	"langchain_community.chat_models.anthropic" -> "typing" [];
	"langchain_community.chat_models.anthropic" -> "pydantic" [];
	"langchain_community.llms.anthropic" -> "re" [];
	"langchain_community.llms.anthropic" -> "warnings" [];
	"langchain_community.llms.anthropic" -> "typing" [];
	"langchain_community.llms.anthropic" -> "pydantic" [];
	"langchain_community.llms.anthropic" -> "anthropic" [];
	"langchain_community.adapters.openai" -> "__future__" [];
	"langchain_community.adapters.openai" -> "importlib" [];
	"langchain_community.adapters.openai" -> "typing" [];
	"langchain_community.adapters.openai" -> "pydantic" [];
	"langchain_community.adapters.openai" -> "typing_extensions" [];
	"langchain_core.chat_sessions" -> "typing" [];
	"langchain_core.language_models.chat_models" -> "__future__" [];
	"langchain_core.language_models.chat_models" -> "asyncio" [];
	"langchain_core.language_models.chat_models" -> "inspect" [];
	"langchain_core.language_models.chat_models" -> "json" [];
	"langchain_core.language_models.chat_models" -> "typing" [];
	"langchain_core.language_models.chat_models" -> "warnings" [];
	"langchain_core.language_models.chat_models" -> "abc" [];
	"langchain_core.language_models.chat_models" -> "functools" [];
	"langchain_core.language_models.chat_models" -> "operator" [];
	"langchain_core.language_models.chat_models" -> "pydantic" [];
	"langchain_core.language_models.chat_models" -> "typing_extensions" [];
	"langchain_core.language_models.chat_models" -> "uuid" [];
	"langchain_core.rate_limiters" -> "__future__" [];
	"langchain_core.rate_limiters" -> "abc" [];
	"langchain_core.rate_limiters" -> "asyncio" [];
	"langchain_core.rate_limiters" -> "threading" [];
	"langchain_core.rate_limiters" -> "time" [];
	"langchain_core.rate_limiters" -> "typing" [];
	"langchain_core.language_models._utils" -> "re" [];
	"langchain_core.language_models._utils" -> "typing" [];
	"langchain_community.tools.polygon.ticker_news" -> "typing" [];
	"langchain_community.tools.polygon.ticker_news" -> "pydantic" [];
	"langchain_community.utilities.polygon" -> "json" [];
	"langchain_community.utilities.polygon" -> "typing" [];
	"langchain_community.utilities.polygon" -> "requests" [];
	"langchain_community.utilities.polygon" -> "pydantic" [];
	"langchain_community.tools.polygon.last_quote" -> "typing" [];
	"langchain_community.tools.polygon.last_quote" -> "pydantic" [];
	"langchain_community.tools.polygon.financials" -> "typing" [];
	"langchain_community.tools.polygon.financials" -> "pydantic" [];
	"langchain_community.tools.polygon.aggregates" -> "typing" [];
	"langchain_community.tools.polygon.aggregates" -> "pydantic" [];
	"langchain_community.tools.plugin" -> "__future__" [];
	"langchain_community.tools.plugin" -> "json" [];
	"langchain_community.tools.plugin" -> "typing" [];
	"langchain_community.tools.plugin" -> "requests" [];
	"langchain_community.tools.plugin" -> "yaml" [];
	"langchain_community.tools.plugin" -> "pydantic" [];
	"langchain_community.tools.playwright.navigate_back" -> "__future__" [];
	"langchain_community.tools.playwright.navigate_back" -> "typing" [];
	"langchain_community.tools.playwright.navigate_back" -> "pydantic" [];
	"langchain_community.tools.playwright.utils" -> "__future__" [];
	"langchain_community.tools.playwright.utils" -> "asyncio" [];
	"langchain_community.tools.playwright.utils" -> "typing" [];
	"langchain_community.tools.playwright.utils" -> "'playwright.async_api'" [];
	"langchain_community.tools.playwright.utils" -> "'playwright.sync_api'" [];
	"langchain_community.tools.playwright.base" -> "__future__" [];
	"langchain_community.tools.playwright.base" -> "typing" [];
	"langchain_community.tools.playwright.base" -> "pydantic" [];
	"langchain_community.tools.playwright.base" -> "'playwright.async_api'" [];
	"langchain_community.tools.playwright.base" -> "'playwright.sync_api'" [];
	"langchain_community.tools.playwright.navigate" -> "__future__" [];
	"langchain_community.tools.playwright.navigate" -> "typing" [];
	"langchain_community.tools.playwright.navigate" -> "pydantic" [];
	"langchain_community.tools.playwright.get_elements" -> "__future__" [];
	"langchain_community.tools.playwright.get_elements" -> "json" [];
	"langchain_community.tools.playwright.get_elements" -> "typing" [];
	"langchain_community.tools.playwright.get_elements" -> "pydantic" [];
	"langchain_community.tools.playwright.get_elements" -> "'playwright.async_api'" [];
	"langchain_community.tools.playwright.get_elements" -> "'playwright.sync_api'" [];
	"langchain_community.tools.playwright.extract_text" -> "__future__" [];
	"langchain_community.tools.playwright.extract_text" -> "typing" [];
	"langchain_community.tools.playwright.extract_text" -> "pydantic" [];
	"langchain_community.tools.playwright.extract_text" -> "bs4" [];
	"langchain_community.tools.playwright.extract_hyperlinks" -> "__future__" [];
	"langchain_community.tools.playwright.extract_hyperlinks" -> "json" [];
	"langchain_community.tools.playwright.extract_hyperlinks" -> "typing" [];
	"langchain_community.tools.playwright.extract_hyperlinks" -> "pydantic" [];
	"langchain_community.tools.playwright.extract_hyperlinks" -> "bs4" [];
	"langchain_community.tools.playwright.current_page" -> "__future__" [];
	"langchain_community.tools.playwright.current_page" -> "typing" [];
	"langchain_community.tools.playwright.current_page" -> "pydantic" [];
	"langchain_community.tools.playwright.click" -> "__future__" [];
	"langchain_community.tools.playwright.click" -> "typing" [];
	"langchain_community.tools.playwright.click" -> "pydantic" [];
	"langchain_community.tools.playwright.click" -> "'playwright.sync_api'" [];
	"langchain_community.tools.playwright.click" -> "'playwright.async_api'" [];
	"langchain_community.tools.openweathermap.tool" -> "typing" [];
	"langchain_community.tools.openweathermap.tool" -> "pydantic" [];
	"langchain_community.utilities.openweathermap" -> "typing" [];
	"langchain_community.utilities.openweathermap" -> "pydantic" [];
	"langchain_community.utilities.openweathermap" -> "pyowm" [];
	"langchain_community.utilities.openapi" -> "__future__" [];
	"langchain_community.utilities.openapi" -> "copy" [];
	"langchain_community.utilities.openapi" -> "json" [];
	"langchain_community.utilities.openapi" -> "logging" [];
	"langchain_community.utilities.openapi" -> "re" [];
	"langchain_community.utilities.openapi" -> "enum" [];
	"langchain_community.utilities.openapi" -> "pathlib" [];
	"langchain_community.utilities.openapi" -> "typing" [];
	"langchain_community.utilities.openapi" -> "requests" [];
	"langchain_community.utilities.openapi" -> "yaml" [];
	"langchain_community.utilities.openapi" -> "pydantic" [];
	"langchain_community.utilities.openapi" -> "openapi_pydantic" [];
	"langchain_community.tools.openapi.utils.api_models" -> "__future__" [];
	"langchain_community.tools.openapi.utils.api_models" -> "logging" [];
	"langchain_community.tools.openapi.utils.api_models" -> "enum" [];
	"langchain_community.tools.openapi.utils.api_models" -> "typing" [];
	"langchain_community.tools.openapi.utils.api_models" -> "pydantic" [];
	"langchain_community.tools.openapi.utils.api_models" -> "openapi_pydantic" [];
	"langchain_community.tools.office365.utils" -> "__future__" [];
	"langchain_community.tools.office365.utils" -> "logging" [];
	"langchain_community.tools.office365.utils" -> "os" [];
	"langchain_community.tools.office365.utils" -> "typing" [];
	"langchain_community.tools.office365.utils" -> "O365" [];
	"langchain_community.tools.office365.utils" -> "bs4" [];
	"langchain_community.tools.office365.send_message" -> "typing" [];
	"langchain_community.tools.office365.send_message" -> "pydantic" [];
	"langchain_community.tools.office365.base" -> "__future__" [];
	"langchain_community.tools.office365.base" -> "typing" [];
	"langchain_community.tools.office365.base" -> "pydantic" [];
	"langchain_community.tools.office365.base" -> "O365" [];
	"langchain_community.tools.office365.send_event" -> "datetime" [];
	"langchain_community.tools.office365.send_event" -> "typing" [];
	"langchain_community.tools.office365.send_event" -> "zoneinfo" [];
	"langchain_community.tools.office365.send_event" -> "pydantic" [];
	"langchain_community.tools.office365.messages_search" -> "typing" [];
	"langchain_community.tools.office365.messages_search" -> "pydantic" [];
	"langchain_community.tools.office365.events_search" -> "datetime" [];
	"langchain_community.tools.office365.events_search" -> "typing" [];
	"langchain_community.tools.office365.events_search" -> "pydantic" [];
	"langchain_community.tools.office365.create_draft_message" -> "typing" [];
	"langchain_community.tools.office365.create_draft_message" -> "pydantic" [];
	"langchain_community.tools.nasa.tool" -> "typing" [];
	"langchain_community.tools.nasa.tool" -> "pydantic" [];
	"langchain_community.utilities.nasa" -> "json" [];
	"langchain_community.utilities.nasa" -> "requests" [];
	"langchain_community.utilities.nasa" -> "pydantic" [];
	"langchain_community.tools.mojeek_search.tool" -> "__future__" [];
	"langchain_community.tools.mojeek_search.tool" -> "typing" [];
	"langchain_community.utilities.mojeek_search" -> "json" [];
	"langchain_community.utilities.mojeek_search" -> "typing" [];
	"langchain_community.utilities.mojeek_search" -> "requests" [];
	"langchain_community.utilities.mojeek_search" -> "pydantic" [];
	"langchain_community.tools.metaphor_search.tool" -> "typing" [];
	"langchain_community.utilities.metaphor_search" -> "json" [];
	"langchain_community.utilities.metaphor_search" -> "typing" [];
	"langchain_community.utilities.metaphor_search" -> "aiohttp" [];
	"langchain_community.utilities.metaphor_search" -> "requests" [];
	"langchain_community.utilities.metaphor_search" -> "pydantic" [];
	"langchain_community.tools.merriam_webster.tool" -> "typing" [];
	"langchain_community.utilities.merriam_webster" -> "json" [];
	"langchain_community.utilities.merriam_webster" -> "typing" [];
	"langchain_community.utilities.merriam_webster" -> "requests" [];
	"langchain_community.utilities.merriam_webster" -> "pydantic" [];
	"langchain_community.tools.json.tool" -> "__future__" [];
	"langchain_community.tools.json.tool" -> "json" [];
	"langchain_community.tools.json.tool" -> "re" [];
	"langchain_community.tools.json.tool" -> "pathlib" [];
	"langchain_community.tools.json.tool" -> "typing" [];
	"langchain_community.tools.json.tool" -> "pydantic" [];
	"langchain_community.tools.jira.tool" -> "typing" [];
	"langchain_community.tools.jira.tool" -> "pydantic" [];
	"langchain_community.utilities.jira" -> "typing" [];
	"langchain_community.utilities.jira" -> "pydantic" [];
	"langchain_community.utilities.jira" -> "typing_extensions" [];
	"langchain_community.utilities.jira" -> "json" [];
	"langchain_community.utilities.jira" -> "atlassian" [];
	"langchain_community.tools.jina_search.tool" -> "__future__" [];
	"langchain_community.tools.jina_search.tool" -> "typing" [];
	"langchain_community.tools.jina_search.tool" -> "pydantic" [];
	"langchain_community.utilities.jina_search" -> "json" [];
	"langchain_community.utilities.jina_search" -> "typing" [];
	"langchain_community.utilities.jina_search" -> "requests" [];
	"langchain_community.utilities.jina_search" -> "pydantic" [];
	"langchain_community.utilities.jina_search" -> "yarl" [];
	"langchain_community.tools.interaction.tool" -> "warnings" [];
	"langchain_community.tools.interaction.tool" -> "typing" [];
	"langchain_community.tools.ifttt" -> "typing" [];
	"langchain_community.tools.ifttt" -> "requests" [];
	"langchain_community.tools.human.tool" -> "typing" [];
	"langchain_community.tools.human.tool" -> "pydantic" [];
	"langchain_community.tools.graphql.tool" -> "json" [];
	"langchain_community.tools.graphql.tool" -> "typing" [];
	"langchain_community.tools.graphql.tool" -> "pydantic" [];
	"langchain_community.utilities.graphql" -> "json" [];
	"langchain_community.utilities.graphql" -> "typing" [];
	"langchain_community.utilities.graphql" -> "pydantic" [];
	"langchain_community.utilities.graphql" -> "gql" [];
	"langchain_community.utilities.graphql" -> "'gql.transport'" [];
	"langchain_community.tools.google_serper.tool" -> "typing" [];
	"langchain_community.tools.google_serper.tool" -> "pydantic" [];
	"langchain_community.utilities.google_serper" -> "typing" [];
	"langchain_community.utilities.google_serper" -> "aiohttp" [];
	"langchain_community.utilities.google_serper" -> "requests" [];
	"langchain_community.utilities.google_serper" -> "pydantic" [];
	"langchain_community.utilities.google_serper" -> "typing_extensions" [];
	"langchain_community.tools.google_search.tool" -> "typing" [];
	"langchain_community.utilities.google_search" -> "typing" [];
	"langchain_community.utilities.google_search" -> "pydantic" [];
	"langchain_community.utilities.google_search" -> "'googleapiclient.discovery'" [];
	"langchain_community.tools.google_places.tool" -> "typing" [];
	"langchain_community.tools.google_places.tool" -> "pydantic" [];
	"langchain_community.utilities.google_places_api" -> "logging" [];
	"langchain_community.utilities.google_places_api" -> "typing" [];
	"langchain_community.utilities.google_places_api" -> "pydantic" [];
	"langchain_community.utilities.google_places_api" -> "googlemaps" [];
	"langchain_community.tools.google_cloud.texttospeech" -> "__future__" [];
	"langchain_community.tools.google_cloud.texttospeech" -> "tempfile" [];
	"langchain_community.tools.google_cloud.texttospeech" -> "typing" [];
	"langchain_community.tools.google_books" -> "typing" [];
	"langchain_community.tools.google_books" -> "pydantic" [];
	"langchain_community.utilities.google_books" -> "typing" [];
	"langchain_community.utilities.google_books" -> "requests" [];
	"langchain_community.utilities.google_books" -> "pydantic" [];
	"langchain_community.tools.gmail.utils" -> "__future__" [];
	"langchain_community.tools.gmail.utils" -> "logging" [];
	"langchain_community.tools.gmail.utils" -> "os" [];
	"langchain_community.tools.gmail.utils" -> "typing" [];
	"langchain_community.tools.gmail.utils" -> "'google_auth_oauthlib.flow'" [];
	"langchain_community.tools.gmail.utils" -> "'googleapiclient.discovery'" [];
	"langchain_community.tools.gmail.utils" -> "bs4" [];
	"langchain_community.tools.gmail.send_message" -> "base64" [];
	"langchain_community.tools.gmail.send_message" -> "typing" [];
	"langchain_community.tools.gmail.send_message" -> "pydantic" [];
	"langchain_community.tools.gmail.base" -> "__future__" [];
	"langchain_community.tools.gmail.base" -> "typing" [];
	"langchain_community.tools.gmail.base" -> "pydantic" [];
	"langchain_community.tools.gmail.base" -> "'googleapiclient.discovery'" [];
	"langchain_community.tools.gmail.search" -> "base64" [];
	"langchain_community.tools.gmail.search" -> "email" [];
	"langchain_community.tools.gmail.search" -> "enum" [];
	"langchain_community.tools.gmail.search" -> "typing" [];
	"langchain_community.tools.gmail.search" -> "pydantic" [];
	"langchain_community.tools.gmail.get_thread" -> "typing" [];
	"langchain_community.tools.gmail.get_thread" -> "pydantic" [];
	"langchain_community.tools.gmail.get_message" -> "base64" [];
	"langchain_community.tools.gmail.get_message" -> "email" [];
	"langchain_community.tools.gmail.get_message" -> "typing" [];
	"langchain_community.tools.gmail.get_message" -> "pydantic" [];
	"langchain_community.tools.gmail.create_draft" -> "base64" [];
	"langchain_community.tools.gmail.create_draft" -> "typing" [];
	"langchain_community.tools.gmail.create_draft" -> "pydantic" [];
	"langchain_community.tools.financial_datasets.income_statements" -> "typing" [];
	"langchain_community.tools.financial_datasets.income_statements" -> "pydantic" [];
	"langchain_community.utilities.financial_datasets" -> "json" [];
	"langchain_community.utilities.financial_datasets" -> "typing" [];
	"langchain_community.utilities.financial_datasets" -> "requests" [];
	"langchain_community.utilities.financial_datasets" -> "pydantic" [];
	"langchain_community.tools.financial_datasets.cash_flow_statements" -> "typing" [];
	"langchain_community.tools.financial_datasets.cash_flow_statements" -> "pydantic" [];
	"langchain_community.tools.financial_datasets.balance_sheets" -> "typing" [];
	"langchain_community.tools.financial_datasets.balance_sheets" -> "pydantic" [];
	"langchain_community.tools.file_management.write" -> "typing" [];
	"langchain_community.tools.file_management.write" -> "pydantic" [];
	"langchain_community.tools.file_management.utils" -> "sys" [];
	"langchain_community.tools.file_management.utils" -> "pathlib" [];
	"langchain_community.tools.file_management.utils" -> "typing" [];
	"langchain_community.tools.file_management.utils" -> "pydantic" [];
	"langchain_community.tools.file_management.read" -> "typing" [];
	"langchain_community.tools.file_management.read" -> "pydantic" [];
	"langchain_community.tools.file_management.move" -> "shutil" [];
	"langchain_community.tools.file_management.move" -> "typing" [];
	"langchain_community.tools.file_management.move" -> "pydantic" [];
	"langchain_community.tools.file_management.list_dir" -> "os" [];
	"langchain_community.tools.file_management.list_dir" -> "typing" [];
	"langchain_community.tools.file_management.list_dir" -> "pydantic" [];
	"langchain_community.tools.file_management.file_search" -> "fnmatch" [];
	"langchain_community.tools.file_management.file_search" -> "os" [];
	"langchain_community.tools.file_management.file_search" -> "typing" [];
	"langchain_community.tools.file_management.file_search" -> "pydantic" [];
	"langchain_community.tools.file_management.delete" -> "os" [];
	"langchain_community.tools.file_management.delete" -> "typing" [];
	"langchain_community.tools.file_management.delete" -> "pydantic" [];
	"langchain_community.tools.file_management.copy" -> "shutil" [];
	"langchain_community.tools.file_management.copy" -> "typing" [];
	"langchain_community.tools.file_management.copy" -> "pydantic" [];
	"langchain_community.tools.eleven_labs.text2speech" -> "tempfile" [];
	"langchain_community.tools.eleven_labs.text2speech" -> "enum" [];
	"langchain_community.tools.eleven_labs.text2speech" -> "typing" [];
	"langchain_community.tools.eleven_labs.text2speech" -> "pydantic" [];
	"langchain_community.tools.eleven_labs.text2speech" -> "elevenlabs" [];
	"langchain_community.tools.edenai.text_moderation" -> "__future__" [];
	"langchain_community.tools.edenai.text_moderation" -> "logging" [];
	"langchain_community.tools.edenai.text_moderation" -> "typing" [];
	"langchain_community.tools.edenai.text_moderation" -> "pydantic" [];
	"langchain_community.tools.edenai.ocr_invoiceparser" -> "__future__" [];
	"langchain_community.tools.edenai.ocr_invoiceparser" -> "logging" [];
	"langchain_community.tools.edenai.ocr_invoiceparser" -> "typing" [];
	"langchain_community.tools.edenai.ocr_invoiceparser" -> "pydantic" [];
	"langchain_community.tools.edenai.ocr_identityparser" -> "__future__" [];
	"langchain_community.tools.edenai.ocr_identityparser" -> "logging" [];
	"langchain_community.tools.edenai.ocr_identityparser" -> "typing" [];
	"langchain_community.tools.edenai.ocr_identityparser" -> "pydantic" [];
	"langchain_community.tools.edenai.image_objectdetection" -> "__future__" [];
	"langchain_community.tools.edenai.image_objectdetection" -> "logging" [];
	"langchain_community.tools.edenai.image_objectdetection" -> "typing" [];
	"langchain_community.tools.edenai.image_objectdetection" -> "pydantic" [];
	"langchain_community.tools.edenai.image_explicitcontent" -> "__future__" [];
	"langchain_community.tools.edenai.image_explicitcontent" -> "logging" [];
	"langchain_community.tools.edenai.image_explicitcontent" -> "typing" [];
	"langchain_community.tools.edenai.image_explicitcontent" -> "pydantic" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "__future__" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "logging" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "abc" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "typing" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "requests" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "pydantic" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "langchain_community" [];
	"langchain_community.tools.edenai.audio_text_to_speech" -> "__future__" [];
	"langchain_community.tools.edenai.audio_text_to_speech" -> "logging" [];
	"langchain_community.tools.edenai.audio_text_to_speech" -> "typing" [];
	"langchain_community.tools.edenai.audio_text_to_speech" -> "requests" [];
	"langchain_community.tools.edenai.audio_text_to_speech" -> "pydantic" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "__future__" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "json" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "logging" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "time" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "typing" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "requests" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "pydantic" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "__future__" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "ast" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "json" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "os" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "io" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "sys" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "typing" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "pydantic" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "e2b" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "'e2b.templates'" [];
	"langchain_community.tools.e2b_data_analysis.unparse" -> "ast" [];
	"langchain_community.tools.e2b_data_analysis.unparse" -> "io" [];
	"langchain_community.tools.e2b_data_analysis.unparse" -> "sys" [];
	"langchain_community.tools.e2b_data_analysis.unparse" -> "tokenize" [];
	"langchain_community.tools.ddg_search.tool" -> "json" [];
	"langchain_community.tools.ddg_search.tool" -> "warnings" [];
	"langchain_community.tools.ddg_search.tool" -> "typing" [];
	"langchain_community.tools.ddg_search.tool" -> "pydantic" [];
	"langchain_community.utilities.duckduckgo_search" -> "typing" [];
	"langchain_community.utilities.duckduckgo_search" -> "pydantic" [];
	"langchain_community.utilities.duckduckgo_search" -> "duckduckgo_search" [];
	"langchain_community.tools.dataherald.tool" -> "typing" [];
	"langchain_community.tools.dataherald.tool" -> "pydantic" [];
	"langchain_community.utilities.dataherald" -> "typing" [];
	"langchain_community.utilities.dataherald" -> "pydantic" [];
	"langchain_community.utilities.dataherald" -> "dataherald" [];
	"langchain_community.utilities.dataherald" -> "'dataherald.types'" [];
	"langchain_community.tools.connery.tool" -> "asyncio" [];
	"langchain_community.tools.connery.tool" -> "functools" [];
	"langchain_community.tools.connery.tool" -> "typing" [];
	"langchain_community.tools.connery.tool" -> "pydantic" [];
	"langchain_community.tools.connery.models" -> "typing" [];
	"langchain_community.tools.connery.models" -> "pydantic" [];
	"langchain_community.tools.connery.service" -> "json" [];
	"langchain_community.tools.connery.service" -> "typing" [];
	"langchain_community.tools.connery.service" -> "requests" [];
	"langchain_community.tools.connery.service" -> "pydantic" [];
	"langchain_community.tools.cogniswitch.tool" -> "__future__" [];
	"langchain_community.tools.cogniswitch.tool" -> "typing" [];
	"langchain_community.tools.cogniswitch.tool" -> "requests" [];
	"langchain_community.tools.cassandra_database.tool" -> "__future__" [];
	"langchain_community.tools.cassandra_database.tool" -> "traceback" [];
	"langchain_community.tools.cassandra_database.tool" -> "typing" [];
	"langchain_community.tools.cassandra_database.tool" -> "pydantic" [];
	"langchain_community.tools.cassandra_database.tool" -> "'cassandra.cluster'" [];
	"langchain_community.utilities.cassandra_database" -> "__future__" [];
	"langchain_community.utilities.cassandra_database" -> "re" [];
	"langchain_community.utilities.cassandra_database" -> "typing" [];
	"langchain_community.utilities.cassandra_database" -> "pydantic" [];
	"langchain_community.utilities.cassandra_database" -> "typing_extensions" [];
	"langchain_community.utilities.cassandra_database" -> "'cassandra.cluster'" [];
	"langchain_community.utilities.cassandra_database" -> "'cassio.config'" [];
	"langchain_community.tools.brave_search.tool" -> "__future__" [];
	"langchain_community.tools.brave_search.tool" -> "typing" [];
	"langchain_community.tools.brave_search.tool" -> "pydantic" [];
	"langchain_community.utilities.brave_search" -> "json" [];
	"langchain_community.utilities.brave_search" -> "typing" [];
	"langchain_community.utilities.brave_search" -> "requests" [];
	"langchain_community.utilities.brave_search" -> "pydantic" [];
	"langchain_community.tools.bing_search.tool" -> "typing" [];
	"langchain_community.utilities.bing_search" -> "typing" [];
	"langchain_community.utilities.bing_search" -> "requests" [];
	"langchain_community.utilities.bing_search" -> "pydantic" [];
	"langchain_community.tools.bearly.tool" -> "base64" [];
	"langchain_community.tools.bearly.tool" -> "itertools" [];
	"langchain_community.tools.bearly.tool" -> "json" [];
	"langchain_community.tools.bearly.tool" -> "re" [];
	"langchain_community.tools.bearly.tool" -> "pathlib" [];
	"langchain_community.tools.bearly.tool" -> "typing" [];
	"langchain_community.tools.bearly.tool" -> "requests" [];
	"langchain_community.tools.bearly.tool" -> "pydantic" [];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" -> "__future__" [];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" -> "logging" [];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" -> "typing" [];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" -> "pydantic" [];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" -> "'azure.ai'" [];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" -> "'azure.core'" [];
	"langchain_community.tools.azure_cognitive_services.text2speech" -> "__future__" [];
	"langchain_community.tools.azure_cognitive_services.text2speech" -> "logging" [];
	"langchain_community.tools.azure_cognitive_services.text2speech" -> "tempfile" [];
	"langchain_community.tools.azure_cognitive_services.text2speech" -> "typing" [];
	"langchain_community.tools.azure_cognitive_services.text2speech" -> "pydantic" [];
	"langchain_community.tools.azure_cognitive_services.text2speech" -> "'azure.cognitiveservices'" [];
	"langchain_community.tools.azure_cognitive_services.speech2text" -> "__future__" [];
	"langchain_community.tools.azure_cognitive_services.speech2text" -> "logging" [];
	"langchain_community.tools.azure_cognitive_services.speech2text" -> "time" [];
	"langchain_community.tools.azure_cognitive_services.speech2text" -> "typing" [];
	"langchain_community.tools.azure_cognitive_services.speech2text" -> "pydantic" [];
	"langchain_community.tools.azure_cognitive_services.speech2text" -> "'azure.cognitiveservices'" [];
	"langchain_community.tools.azure_cognitive_services.utils" -> "os" [];
	"langchain_community.tools.azure_cognitive_services.utils" -> "tempfile" [];
	"langchain_community.tools.azure_cognitive_services.utils" -> "requests" [];
	"langchain_community.tools.azure_cognitive_services.image_analysis" -> "__future__" [];
	"langchain_community.tools.azure_cognitive_services.image_analysis" -> "logging" [];
	"langchain_community.tools.azure_cognitive_services.image_analysis" -> "typing" [];
	"langchain_community.tools.azure_cognitive_services.image_analysis" -> "pydantic" [];
	"langchain_community.tools.azure_cognitive_services.image_analysis" -> "'azure.ai'" [];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" -> "__future__" [];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" -> "logging" [];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" -> "typing" [];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" -> "pydantic" [];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" -> "'azure.ai'" [];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" -> "'azure.core'" [];
	"langchain_community.tools.azure_ai_services.text_to_speech" -> "__future__" [];
	"langchain_community.tools.azure_ai_services.text_to_speech" -> "logging" [];
	"langchain_community.tools.azure_ai_services.text_to_speech" -> "tempfile" [];
	"langchain_community.tools.azure_ai_services.text_to_speech" -> "typing" [];
	"langchain_community.tools.azure_ai_services.text_to_speech" -> "pydantic" [];
	"langchain_community.tools.azure_ai_services.text_to_speech" -> "'azure.cognitiveservices'" [];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" -> "__future__" [];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" -> "logging" [];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" -> "typing" [];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" -> "pydantic" [];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" -> "'azure.ai'" [];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" -> "'azure.core'" [];
	"langchain_community.tools.azure_ai_services.speech_to_text" -> "__future__" [];
	"langchain_community.tools.azure_ai_services.speech_to_text" -> "logging" [];
	"langchain_community.tools.azure_ai_services.speech_to_text" -> "time" [];
	"langchain_community.tools.azure_ai_services.speech_to_text" -> "typing" [];
	"langchain_community.tools.azure_ai_services.speech_to_text" -> "pydantic" [];
	"langchain_community.tools.azure_ai_services.speech_to_text" -> "'azure.cognitiveservices'" [];
	"langchain_community.tools.azure_ai_services.utils" -> "os" [];
	"langchain_community.tools.azure_ai_services.utils" -> "tempfile" [];
	"langchain_community.tools.azure_ai_services.utils" -> "requests" [];
	"langchain_community.tools.azure_ai_services.image_analysis" -> "__future__" [];
	"langchain_community.tools.azure_ai_services.image_analysis" -> "logging" [];
	"langchain_community.tools.azure_ai_services.image_analysis" -> "typing" [];
	"langchain_community.tools.azure_ai_services.image_analysis" -> "pydantic" [];
	"langchain_community.tools.azure_ai_services.image_analysis" -> "'azure.ai'" [];
	"langchain_community.tools.azure_ai_services.image_analysis" -> "'azure.core'" [];
	"langchain_community.tools.azure_ai_services.document_intelligence" -> "__future__" [];
	"langchain_community.tools.azure_ai_services.document_intelligence" -> "logging" [];
	"langchain_community.tools.azure_ai_services.document_intelligence" -> "typing" [];
	"langchain_community.tools.azure_ai_services.document_intelligence" -> "pydantic" [];
	"langchain_community.tools.azure_ai_services.document_intelligence" -> "'azure.ai'" [];
	"langchain_community.tools.azure_ai_services.document_intelligence" -> "'azure.core'" [];
	"langchain_community.tools.asknews.tool" -> "typing" [];
	"langchain_community.tools.asknews.tool" -> "pydantic" [];
	"langchain_community.utilities.asknews" -> "__future__" [];
	"langchain_community.utilities.asknews" -> "datetime" [];
	"langchain_community.utilities.asknews" -> "typing" [];
	"langchain_community.utilities.asknews" -> "pydantic" [];
	"langchain_community.utilities.asknews" -> "asknews_sdk" [];
	"langchain_community.tools.arxiv.tool" -> "typing" [];
	"langchain_community.tools.arxiv.tool" -> "pydantic" [];
	"langchain_community.utilities.arxiv" -> "logging" [];
	"langchain_community.utilities.arxiv" -> "os" [];
	"langchain_community.utilities.arxiv" -> "re" [];
	"langchain_community.utilities.arxiv" -> "typing" [];
	"langchain_community.utilities.arxiv" -> "pydantic" [];
	"langchain_community.utilities.arxiv" -> "arxiv" [];
	"langchain_community.utilities.arxiv" -> "fitz" [];
	"langchain_community.tools.ainetwork.value" -> "builtins" [];
	"langchain_community.tools.ainetwork.value" -> "json" [];
	"langchain_community.tools.ainetwork.value" -> "typing" [];
	"langchain_community.tools.ainetwork.value" -> "pydantic" [];
	"langchain_community.tools.ainetwork.value" -> "'ain.types'" [];
	"langchain_community.tools.ainetwork.base" -> "__future__" [];
	"langchain_community.tools.ainetwork.base" -> "asyncio" [];
	"langchain_community.tools.ainetwork.base" -> "threading" [];
	"langchain_community.tools.ainetwork.base" -> "enum" [];
	"langchain_community.tools.ainetwork.base" -> "typing" [];
	"langchain_community.tools.ainetwork.base" -> "pydantic" [];
	"langchain_community.tools.ainetwork.base" -> "'ain.ain'" [];
	"langchain_community.tools.ainetwork.utils" -> "__future__" [];
	"langchain_community.tools.ainetwork.utils" -> "os" [];
	"langchain_community.tools.ainetwork.utils" -> "typing" [];
	"langchain_community.tools.ainetwork.utils" -> "ain" [];
	"langchain_community.tools.ainetwork.utils" -> "'ain.ain'" [];
	"langchain_community.tools.ainetwork.transfer" -> "json" [];
	"langchain_community.tools.ainetwork.transfer" -> "typing" [];
	"langchain_community.tools.ainetwork.transfer" -> "pydantic" [];
	"langchain_community.tools.ainetwork.rule" -> "builtins" [];
	"langchain_community.tools.ainetwork.rule" -> "json" [];
	"langchain_community.tools.ainetwork.rule" -> "typing" [];
	"langchain_community.tools.ainetwork.rule" -> "pydantic" [];
	"langchain_community.tools.ainetwork.rule" -> "'ain.types'" [];
	"langchain_community.tools.ainetwork.owner" -> "builtins" [];
	"langchain_community.tools.ainetwork.owner" -> "json" [];
	"langchain_community.tools.ainetwork.owner" -> "typing" [];
	"langchain_community.tools.ainetwork.owner" -> "pydantic" [];
	"langchain_community.tools.ainetwork.owner" -> "'ain.types'" [];
	"langchain_community.tools.ainetwork.app" -> "builtins" [];
	"langchain_community.tools.ainetwork.app" -> "json" [];
	"langchain_community.tools.ainetwork.app" -> "enum" [];
	"langchain_community.tools.ainetwork.app" -> "typing" [];
	"langchain_community.tools.ainetwork.app" -> "pydantic" [];
	"langchain_community.tools.ainetwork.app" -> "'ain.types'" [];
	"langchain_community.tools.ainetwork.app" -> "'ain.utils'" [];
	"langchain_core.tools.convert" -> "inspect" [];
	"langchain_core.tools.convert" -> "typing" [];
	"langchain_core.tools.convert" -> "pydantic" [];
	"langchain_core.tools.structured" -> "__future__" [];
	"langchain_core.tools.structured" -> "textwrap" [];
	"langchain_core.tools.structured" -> "inspect" [];
	"langchain_core.tools.structured" -> "typing" [];
	"langchain_core.tools.structured" -> "pydantic" [];
	"langchain_core.tools.structured" -> "typing_extensions" [];
	"google.protobuf.json_format" -> "base64" [];
	"google.protobuf.json_format" -> "collections" [];
	"google.protobuf.json_format" -> "json" [];
	"google.protobuf.json_format" -> "math" [];
	"google.protobuf.json_format" -> "operator" [];
	"google.protobuf.json_format" -> "re" [];
	"langchain_community.document_transformers.markdownify" -> "re" [];
	"langchain_community.document_transformers.markdownify" -> "typing" [];
	"langchain_community.document_transformers.markdownify" -> "markdownify" [];
	"langchain_community.document_transformers.long_context_reorder" -> "typing" [];
	"langchain_community.document_transformers.long_context_reorder" -> "pydantic" [];
	"langchain_community.document_transformers.html2text" -> "typing" [];
	"langchain_community.document_transformers.html2text" -> "html2text" [];
	"langchain_community.document_transformers.google_translate" -> "typing" [];
	"langchain_community.document_transformers.embeddings_redundant_filter" -> "typing" [];
	"langchain_community.document_transformers.embeddings_redundant_filter" -> "numpy" [];
	"langchain_community.document_transformers.embeddings_redundant_filter" -> "pydantic" [];
	"langchain_community.document_transformers.embeddings_redundant_filter" -> "sklearn" [];
	"langchain_community.document_transformers.doctran_text_translate" -> "__future__" [];
	"langchain_community.document_transformers.doctran_text_translate" -> "asyncio" [];
	"langchain_community.document_transformers.doctran_text_translate" -> "typing" [];
	"langchain_community.document_transformers.doctran_text_translate" -> "doctran" [];
	"langchain_community.document_transformers.doctran_text_qa" -> "typing" [];
	"langchain_community.document_transformers.doctran_text_qa" -> "doctran" [];
	"langchain_community.document_transformers.doctran_text_extract" -> "typing" [];
	"langchain_community.document_transformers.doctran_text_extract" -> "doctran" [];
	"langchain_community.document_transformers.beautiful_soup_transformer" -> "typing" [];
	"langchain_community.document_transformers.beautiful_soup_transformer" -> "bs4" [];
	"langchain_community.document_loaders" -> "importlib" [];
	"langchain_community.document_loaders" -> "typing" [];
	"langchain_community.document_loaders.yuque" -> "re" [];
	"langchain_community.document_loaders.yuque" -> "typing" [];
	"langchain_community.document_loaders.yuque" -> "requests" [];
	"langchain_community.document_loaders.youtube" -> "__future__" [];
	"langchain_community.document_loaders.youtube" -> "logging" [];
	"langchain_community.document_loaders.youtube" -> "enum" [];
	"langchain_community.document_loaders.youtube" -> "pathlib" [];
	"langchain_community.document_loaders.youtube" -> "typing" [];
	"langchain_community.document_loaders.youtube" -> "pydantic" [];
	"langchain_community.document_loaders.youtube" -> "'google_auth_oauthlib.flow'" [];
	"langchain_community.document_loaders.youtube" -> "youtube_transcript_api" [];
	"langchain_community.document_loaders.youtube" -> "pytube" [];
	"langchain_community.document_loaders.youtube" -> "'googleapiclient.discovery'" [];
	"langchain_community.document_loaders.xorbits" -> "typing" [];
	"langchain_community.document_loaders.xorbits" -> "xorbits" [];
	"langchain_community.document_loaders.xml" -> "pathlib" [];
	"langchain_community.document_loaders.xml" -> "typing" [];
	"langchain_community.document_loaders.xml" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.word_document" -> "os" [];
	"langchain_community.document_loaders.word_document" -> "tempfile" [];
	"langchain_community.document_loaders.word_document" -> "abc" [];
	"langchain_community.document_loaders.word_document" -> "pathlib" [];
	"langchain_community.document_loaders.word_document" -> "typing" [];
	"langchain_community.document_loaders.word_document" -> "requests" [];
	"langchain_community.document_loaders.word_document" -> "docx2txt" [];
	"langchain_community.document_loaders.word_document" -> "'unstructured.file_utils'" [];
	"langchain_community.document_loaders.word_document" -> "magic" [];
	"langchain_community.document_loaders.word_document" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.wikipedia" -> "typing" [];
	"langchain_community.document_loaders.whatsapp_chat" -> "re" [];
	"langchain_community.document_loaders.whatsapp_chat" -> "pathlib" [];
	"langchain_community.document_loaders.whatsapp_chat" -> "typing" [];
	"langchain_community.document_loaders.weather" -> "__future__" [];
	"langchain_community.document_loaders.weather" -> "datetime" [];
	"langchain_community.document_loaders.weather" -> "typing" [];
	"langchain_community.document_loaders.vsdx" -> "os" [];
	"langchain_community.document_loaders.vsdx" -> "tempfile" [];
	"langchain_community.document_loaders.vsdx" -> "abc" [];
	"langchain_community.document_loaders.vsdx" -> "pathlib" [];
	"langchain_community.document_loaders.vsdx" -> "typing" [];
	"langchain_community.document_loaders.vsdx" -> "requests" [];
	"langchain_community.document_loaders.parsers" -> "importlib" [];
	"langchain_community.document_loaders.parsers" -> "typing" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "json" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "re" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "zipfile" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "abc" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "pathlib" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "typing" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "xmltodict" [];
	"langchain_community.document_loaders.parsers.pdf" -> "__future__" [];
	"langchain_community.document_loaders.parsers.pdf" -> "html" [];
	"langchain_community.document_loaders.parsers.pdf" -> "io" [];
	"langchain_community.document_loaders.parsers.pdf" -> "logging" [];
	"langchain_community.document_loaders.parsers.pdf" -> "threading" [];
	"langchain_community.document_loaders.parsers.pdf" -> "warnings" [];
	"langchain_community.document_loaders.parsers.pdf" -> "datetime" [];
	"langchain_community.document_loaders.parsers.pdf" -> "pathlib" [];
	"langchain_community.document_loaders.parsers.pdf" -> "tempfile" [];
	"langchain_community.document_loaders.parsers.pdf" -> "typing" [];
	"langchain_community.document_loaders.parsers.pdf" -> "numpy" [];
	"langchain_community.document_loaders.parsers.pdf" -> "pdfplumber" [];
	"langchain_community.document_loaders.parsers.pdf" -> "pymupdf" [];
	"langchain_community.document_loaders.parsers.pdf" -> "pypdf" [];
	"langchain_community.document_loaders.parsers.pdf" -> "pypdfium2" [];
	"langchain_community.document_loaders.parsers.pdf" -> "textractor" [];
	"langchain_community.document_loaders.parsers.pdf" -> "rapidocr_onnxruntime" [];
	"langchain_community.document_loaders.parsers.pdf" -> "PIL" [];
	"langchain_community.document_loaders.parsers.pdf" -> "pdfminer" [];
	"langchain_community.document_loaders.parsers.pdf" -> "'pdfminer.psparser'" [];
	"langchain_community.document_loaders.parsers.pdf" -> "'pdfminer.pdfpage'" [];
	"langchain_community.document_loaders.parsers.pdf" -> "'pdfminer.converter'" [];
	"langchain_community.document_loaders.parsers.pdf" -> "'pdfminer.layout'" [];
	"langchain_community.document_loaders.parsers.pdf" -> "'pdfminer.pdfinterp'" [];
	"langchain_community.document_loaders.parsers.pdf" -> "'pdfminer.image'" [];
	"langchain_community.document_loaders.parsers.pdf" -> "'pymupdf.table'" [];
	"langchain_community.document_loaders.parsers.pdf" -> "'pypdfium2.raw'" [];
	"langchain_community.document_loaders.parsers.pdf" -> "textractcaller" [];
	"langchain_community.document_loaders.parsers.pdf" -> "'textractor.entities'" [];
	"langchain_community.document_loaders.parsers.pdf" -> "boto3" [];
	"langchain_community.document_loaders.parsers.language.language_parser" -> "__future__" [];
	"langchain_community.document_loaders.parsers.language.language_parser" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.typescript" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.typescript" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.typescript" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.tree_sitter_segmenter" -> "abc" [];
	"langchain_community.document_loaders.parsers.language.tree_sitter_segmenter" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.tree_sitter_segmenter" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.tree_sitter_segmenter" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.code_segmenter" -> "abc" [];
	"langchain_community.document_loaders.parsers.language.code_segmenter" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.sql" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.sql" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.sql" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.scala" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.scala" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.scala" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.rust" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.rust" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.rust" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.ruby" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.ruby" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.ruby" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.python" -> "ast" [];
	"langchain_community.document_loaders.parsers.language.python" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.php" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.php" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.php" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.perl" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.perl" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.perl" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.lua" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.lua" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.lua" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.kotlin" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.kotlin" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.kotlin" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.javascript" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.javascript" -> "esprima" [];
	"langchain_community.document_loaders.parsers.language.java" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.java" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.java" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.go" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.go" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.go" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.elixir" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.elixir" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.elixir" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.csharp" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.csharp" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.csharp" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.cpp" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.cpp" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.cpp" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.language.cobol" -> "re" [];
	"langchain_community.document_loaders.parsers.language.cobol" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.c" -> "typing" [];
	"langchain_community.document_loaders.parsers.language.c" -> "tree_sitter" [];
	"langchain_community.document_loaders.parsers.language.c" -> "tree_sitter_languages" [];
	"langchain_community.document_loaders.parsers.images" -> "base64" [];
	"langchain_community.document_loaders.parsers.images" -> "io" [];
	"langchain_community.document_loaders.parsers.images" -> "logging" [];
	"langchain_community.document_loaders.parsers.images" -> "abc" [];
	"langchain_community.document_loaders.parsers.images" -> "typing" [];
	"langchain_community.document_loaders.parsers.images" -> "numpy" [];
	"langchain_community.document_loaders.parsers.images" -> "PIL" [];
	"langchain_community.document_loaders.parsers.images" -> "rapidocr_onnxruntime" [];
	"langchain_community.document_loaders.parsers.images" -> "pytesseract" [];
	"langchain_community.document_loaders.parsers.html.bs4" -> "logging" [];
	"langchain_community.document_loaders.parsers.html.bs4" -> "typing" [];
	"langchain_community.document_loaders.parsers.html.bs4" -> "bs4" [];
	"langchain_community.document_loaders.parsers.grobid" -> "logging" [];
	"langchain_community.document_loaders.parsers.grobid" -> "typing" [];
	"langchain_community.document_loaders.parsers.grobid" -> "requests" [];
	"langchain_community.document_loaders.parsers.grobid" -> "bs4" [];
	"langchain_community.document_loaders.parsers.docai" -> "logging" [];
	"langchain_community.document_loaders.parsers.docai" -> "re" [];
	"langchain_community.document_loaders.parsers.docai" -> "time" [];
	"langchain_community.document_loaders.parsers.docai" -> "dataclasses" [];
	"langchain_community.document_loaders.parsers.docai" -> "typing" [];
	"langchain_community.document_loaders.parsers.docai" -> "'google.cloud.documentai'" [];
	"langchain_community.document_loaders.parsers.docai" -> "'google.cloud.documentai_v1'" [];
	"langchain_community.document_loaders.parsers.docai" -> "'google.cloud.documentai_toolbox'" [];
	"langchain_community.document_loaders.parsers.doc_intelligence" -> "__future__" [];
	"langchain_community.document_loaders.parsers.doc_intelligence" -> "logging" [];
	"langchain_community.document_loaders.parsers.doc_intelligence" -> "typing" [];
	"langchain_community.document_loaders.parsers.doc_intelligence" -> "'azure.core'" [];
	"langchain_community.document_loaders.parsers.doc_intelligence" -> "'azure.ai'" [];
	"langchain_community.document_loaders.parsers.audio" -> "io" [];
	"langchain_community.document_loaders.parsers.audio" -> "logging" [];
	"langchain_community.document_loaders.parsers.audio" -> "os" [];
	"langchain_community.document_loaders.parsers.audio" -> "time" [];
	"langchain_community.document_loaders.parsers.audio" -> "typing" [];
	"langchain_community.document_loaders.parsers.audio" -> "openai" [];
	"langchain_community.document_loaders.parsers.audio" -> "transformers" [];
	"langchain_community.document_loaders.parsers.audio" -> "torch" [];
	"langchain_community.document_loaders.parsers.audio" -> "librosa" [];
	"langchain_community.document_loaders.parsers.audio" -> "speechkit" [];
	"langchain_community.document_loaders.parsers.audio" -> "'speechkit.stt'" [];
	"langchain_community.document_loaders.parsers.audio" -> "faster_whisper" [];
	"langchain_community.document_loaders.parsers.audio" -> "pydub" [];
	"langchain_community.document_loaders.url_selenium" -> "logging" [];
	"langchain_community.document_loaders.url_selenium" -> "typing" [];
	"langchain_community.document_loaders.url_selenium" -> "selenium" [];
	"langchain_community.document_loaders.url_selenium" -> "unstructured" [];
	"langchain_community.document_loaders.url_selenium" -> "'selenium.webdriver'" [];
	"langchain_community.document_loaders.url_selenium" -> "'selenium.common'" [];
	"langchain_community.document_loaders.url_selenium" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.url_playwright" -> "logging" [];
	"langchain_community.document_loaders.url_playwright" -> "os" [];
	"langchain_community.document_loaders.url_playwright" -> "abc" [];
	"langchain_community.document_loaders.url_playwright" -> "typing" [];
	"langchain_community.document_loaders.url_playwright" -> "'playwright.async_api'" [];
	"langchain_community.document_loaders.url_playwright" -> "'playwright.sync_api'" [];
	"langchain_community.document_loaders.url_playwright" -> "unstructured" [];
	"langchain_community.document_loaders.url_playwright" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.url_playwright" -> "playwright" [];
	"langchain_community.document_loaders.url" -> "logging" [];
	"langchain_community.document_loaders.url" -> "typing" [];
	"langchain_community.document_loaders.url" -> "unstructured" [];
	"langchain_community.document_loaders.url" -> "'unstructured.__version__'" [];
	"langchain_community.document_loaders.url" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.url" -> "tqdm" [];
	"langchain_community.document_loaders.unstructured" -> "__future__" [];
	"langchain_community.document_loaders.unstructured" -> "logging" [];
	"langchain_community.document_loaders.unstructured" -> "os" [];
	"langchain_community.document_loaders.unstructured" -> "abc" [];
	"langchain_community.document_loaders.unstructured" -> "pathlib" [];
	"langchain_community.document_loaders.unstructured" -> "typing" [];
	"langchain_community.document_loaders.unstructured" -> "typing_extensions" [];
	"langchain_community.document_loaders.unstructured" -> "unstructured" [];
	"langchain_community.document_loaders.unstructured" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.twitter" -> "__future__" [];
	"langchain_community.document_loaders.twitter" -> "typing" [];
	"langchain_community.document_loaders.twitter" -> "tweepy" [];
	"langchain_community.document_loaders.tsv" -> "pathlib" [];
	"langchain_community.document_loaders.tsv" -> "typing" [];
	"langchain_community.document_loaders.tsv" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.trello" -> "__future__" [];
	"langchain_community.document_loaders.trello" -> "typing" [];
	"langchain_community.document_loaders.trello" -> "trello" [];
	"langchain_community.document_loaders.trello" -> "bs4" [];
	"langchain_community.document_loaders.toml" -> "json" [];
	"langchain_community.document_loaders.toml" -> "pathlib" [];
	"langchain_community.document_loaders.toml" -> "typing" [];
	"langchain_community.document_loaders.tomarkdown" -> "__future__" [];
	"langchain_community.document_loaders.tomarkdown" -> "typing" [];
	"langchain_community.document_loaders.tomarkdown" -> "requests" [];
	"langchain_community.document_loaders.tidb" -> "typing" [];
	"langchain_community.document_loaders.tidb" -> "sqlalchemy" [];
	"langchain_community.document_loaders.text" -> "logging" [];
	"langchain_community.document_loaders.text" -> "pathlib" [];
	"langchain_community.document_loaders.text" -> "typing" [];
	"langchain_community.document_loaders.helpers" -> "pathlib" [];
	"langchain_community.document_loaders.helpers" -> "typing" [];
	"langchain_community.document_loaders.helpers" -> "chardet" [];
	"langchain_community.document_loaders.tensorflow_datasets" -> "typing" [];
	"langchain_community.utilities.tensorflow_datasets" -> "logging" [];
	"langchain_community.utilities.tensorflow_datasets" -> "typing" [];
	"langchain_community.utilities.tensorflow_datasets" -> "pydantic" [];
	"langchain_community.utilities.tensorflow_datasets" -> "tensorflow" [];
	"langchain_community.utilities.tensorflow_datasets" -> "tensorflow_datasets" [];
	"langchain_community.document_loaders.tencent_cos_file" -> "os" [];
	"langchain_community.document_loaders.tencent_cos_file" -> "tempfile" [];
	"langchain_community.document_loaders.tencent_cos_file" -> "typing" [];
	"langchain_community.document_loaders.tencent_cos_file" -> "qcloud_cos" [];
	"langchain_community.document_loaders.tencent_cos_directory" -> "typing" [];
	"langchain_community.document_loaders.tencent_cos_directory" -> "qcloud_cos" [];
	"langchain_community.document_loaders.telegram" -> "__future__" [];
	"langchain_community.document_loaders.telegram" -> "asyncio" [];
	"langchain_community.document_loaders.telegram" -> "json" [];
	"langchain_community.document_loaders.telegram" -> "pathlib" [];
	"langchain_community.document_loaders.telegram" -> "typing" [];
	"langchain_community.document_loaders.telegram" -> "pandas" [];
	"langchain_community.document_loaders.telegram" -> "telethon" [];
	"langchain_community.document_loaders.telegram" -> "langchain_text_splitters" [];
	"langchain_community.document_loaders.telegram" -> "'telethon.sync'" [];
	"langchain_community.document_loaders.telegram" -> "nest_asyncio" [];
	"langchain_community.document_loaders.surrealdb" -> "asyncio" [];
	"langchain_community.document_loaders.surrealdb" -> "json" [];
	"langchain_community.document_loaders.surrealdb" -> "logging" [];
	"langchain_community.document_loaders.surrealdb" -> "typing" [];
	"langchain_community.document_loaders.surrealdb" -> "surrealdb" [];
	"langchain_community.document_loaders.stripe" -> "json" [];
	"langchain_community.document_loaders.stripe" -> "typing" [];
	"langchain_community.document_loaders.srt" -> "pathlib" [];
	"langchain_community.document_loaders.srt" -> "typing" [];
	"langchain_community.document_loaders.srt" -> "pysrt" [];
	"langchain_community.document_loaders.sql_database" -> "typing" [];
	"langchain_community.document_loaders.sql_database" -> "sqlalchemy" [];
	"langchain_community.document_loaders.spreedly" -> "json" [];
	"langchain_community.document_loaders.spreedly" -> "typing" [];
	"langchain_community.document_loaders.spider" -> "typing" [];
	"langchain_community.document_loaders.spider" -> "spider" [];
	"langchain_community.document_loaders.snowflake_loader" -> "__future__" [];
	"langchain_community.document_loaders.snowflake_loader" -> "typing" [];
	"langchain_community.document_loaders.snowflake_loader" -> "snowflake" [];
	"langchain_community.document_loaders.slack_directory" -> "json" [];
	"langchain_community.document_loaders.slack_directory" -> "zipfile" [];
	"langchain_community.document_loaders.slack_directory" -> "pathlib" [];
	"langchain_community.document_loaders.slack_directory" -> "typing" [];
	"langchain_community.document_loaders.sitemap" -> "itertools" [];
	"langchain_community.document_loaders.sitemap" -> "re" [];
	"langchain_community.document_loaders.sitemap" -> "typing" [];
	"langchain_community.document_loaders.sitemap" -> "lxml" [];
	"langchain_community.document_loaders.sitemap" -> "bs4" [];
	"langchain_community.document_loaders.sharepoint" -> "__future__" [];
	"langchain_community.document_loaders.sharepoint" -> "json" [];
	"langchain_community.document_loaders.sharepoint" -> "pathlib" [];
	"langchain_community.document_loaders.sharepoint" -> "typing" [];
	"langchain_community.document_loaders.sharepoint" -> "requests" [];
	"langchain_community.document_loaders.sharepoint" -> "pydantic" [];
	"langchain_community.document_loaders.sharepoint" -> "'O365.drive'" [];
	"langchain_community.document_loaders.base_o365" -> "__future__" [];
	"langchain_community.document_loaders.base_o365" -> "logging" [];
	"langchain_community.document_loaders.base_o365" -> "mimetypes" [];
	"langchain_community.document_loaders.base_o365" -> "os" [];
	"langchain_community.document_loaders.base_o365" -> "re" [];
	"langchain_community.document_loaders.base_o365" -> "tempfile" [];
	"langchain_community.document_loaders.base_o365" -> "urllib" [];
	"langchain_community.document_loaders.base_o365" -> "abc" [];
	"langchain_community.document_loaders.base_o365" -> "datetime" [];
	"langchain_community.document_loaders.base_o365" -> "pathlib" [];
	"langchain_community.document_loaders.base_o365" -> "typing" [];
	"langchain_community.document_loaders.base_o365" -> "pydantic" [];
	"langchain_community.document_loaders.base_o365" -> "pydantic_settings" [];
	"langchain_community.document_loaders.base_o365" -> "O365" [];
	"langchain_community.document_loaders.base_o365" -> "'O365.drive'" [];
	"langchain_community.document_loaders.parsers.txt" -> "typing" [];
	"langchain_community.document_loaders.parsers.msword" -> "typing" [];
	"langchain_community.document_loaders.parsers.msword" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.parsers.generic" -> "typing" [];
	"langchain_community.document_loaders.blob_loaders.file_system" -> "pathlib" [];
	"langchain_community.document_loaders.blob_loaders.file_system" -> "typing" [];
	"pydantic_settings.sources.types" -> "__future__" [];
	"pydantic_settings.sources.types" -> "pathlib" [];
	"pydantic_settings.sources.types" -> "typing" [];
	"pydantic_settings.sources.providers.yaml" -> "__future__" [];
	"pydantic_settings.sources.providers.yaml" -> "pathlib" [];
	"pydantic_settings.sources.providers.yaml" -> "typing" [];
	"pydantic_settings.sources.providers.yaml" -> "yaml" [];
	"pydantic_settings.sources.providers.toml" -> "__future__" [];
	"pydantic_settings.sources.providers.toml" -> "sys" [];
	"pydantic_settings.sources.providers.toml" -> "pathlib" [];
	"pydantic_settings.sources.providers.toml" -> "typing" [];
	"pydantic_settings.sources.providers.toml" -> "tomllib" [];
	"pydantic_settings.sources.providers.secrets" -> "__future__" [];
	"pydantic_settings.sources.providers.secrets" -> "os" [];
	"pydantic_settings.sources.providers.secrets" -> "warnings" [];
	"pydantic_settings.sources.providers.secrets" -> "pathlib" [];
	"pydantic_settings.sources.providers.secrets" -> "typing" [];
	"pydantic_settings.utils" -> "sys" [];
	"pydantic_settings.utils" -> "types" [];
	"pydantic_settings.utils" -> "pathlib" [];
	"pydantic_settings.utils" -> "typing" [];
	"pydantic_settings.utils" -> "typing_extensions" [];
	"pydantic_settings.sources.providers.pyproject" -> "__future__" [];
	"pydantic_settings.sources.providers.pyproject" -> "pathlib" [];
	"pydantic_settings.sources.providers.pyproject" -> "typing" [];
	"pydantic_settings.sources.providers.json" -> "__future__" [];
	"pydantic_settings.sources.providers.json" -> "json" [];
	"pydantic_settings.sources.providers.json" -> "pathlib" [];
	"pydantic_settings.sources.providers.json" -> "typing" [];
	"pydantic_settings.sources.providers.gcp" -> "__future__" [];
	"pydantic_settings.sources.providers.gcp" -> "functools" [];
	"pydantic_settings.sources.providers.gcp" -> "typing" [];
	"pydantic_settings.sources.providers.gcp" -> "'google.cloud.secretmanager'" [];
	"pydantic_settings.sources.providers.env" -> "__future__" [];
	"pydantic_settings.sources.providers.env" -> "os" [];
	"pydantic_settings.sources.providers.env" -> "typing" [];
	"pydantic_settings.sources.providers.env" -> "typing_extensions" [];
	"pydantic_settings.sources.utils" -> "__future__" [];
	"pydantic_settings.sources.utils" -> "collections" [];
	"pydantic_settings.sources.utils" -> "dataclasses" [];
	"pydantic_settings.sources.utils" -> "enum" [];
	"pydantic_settings.sources.utils" -> "typing" [];
	"pydantic_settings.sources.utils" -> "pydantic" [];
	"pydantic_settings.sources.utils" -> "typing_extensions" [];
	"pydantic_settings.sources.utils" -> "typing_inspection" [];
	"pydantic_settings.sources.utils" -> "types" [];
	"pydantic_settings.sources.providers.dotenv" -> "__future__" [];
	"pydantic_settings.sources.providers.dotenv" -> "os" [];
	"pydantic_settings.sources.providers.dotenv" -> "warnings" [];
	"pydantic_settings.sources.providers.dotenv" -> "pathlib" [];
	"pydantic_settings.sources.providers.dotenv" -> "typing" [];
	"pydantic_settings.sources.providers.dotenv" -> "dotenv" [];
	"pydantic_settings.sources.providers.cli" -> "__future__" [];
	"pydantic_settings.sources.providers.cli" -> "json" [];
	"pydantic_settings.sources.providers.cli" -> "re" [];
	"pydantic_settings.sources.providers.cli" -> "shlex" [];
	"pydantic_settings.sources.providers.cli" -> "sys" [];
	"pydantic_settings.sources.providers.cli" -> "typing" [];
	"pydantic_settings.sources.providers.cli" -> "argparse" [];
	"pydantic_settings.sources.providers.cli" -> "collections" [];
	"pydantic_settings.sources.providers.cli" -> "enum" [];
	"pydantic_settings.sources.providers.cli" -> "textwrap" [];
	"pydantic_settings.sources.providers.cli" -> "types" [];
	"pydantic_settings.sources.providers.cli" -> "typing_extensions" [];
	"pydantic_settings.sources.providers.cli" -> "pydantic" [];
	"pydantic_settings.sources.providers.cli" -> "pydantic_core" [];
	"pydantic_settings.sources.providers.cli" -> "typing_inspection" [];
	"pydantic_settings.sources.providers.azure" -> "__future__" [];
	"pydantic_settings.sources.providers.azure" -> "typing" [];
	"pydantic_settings.sources.providers.azure" -> "'azure.core'" [];
	"pydantic_settings.sources.providers.azure" -> "'azure.keyvault'" [];
	"pydantic_settings.sources.providers.aws" -> "__future__" [];
	"pydantic_settings.sources.providers.aws" -> "json" [];
	"pydantic_settings.sources.providers.aws" -> "typing" [];
	"pydantic_settings.sources.providers.aws" -> "boto3" [];
	"pydantic_settings.sources.providers.aws" -> "mypy_boto3_secretsmanager" [];
	"pydantic_settings.sources.base" -> "__future__" [];
	"pydantic_settings.sources.base" -> "json" [];
	"pydantic_settings.sources.base" -> "os" [];
	"pydantic_settings.sources.base" -> "abc" [];
	"pydantic_settings.sources.base" -> "dataclasses" [];
	"pydantic_settings.sources.base" -> "pathlib" [];
	"pydantic_settings.sources.base" -> "typing" [];
	"pydantic_settings.sources.base" -> "pydantic" [];
	"pydantic_settings.sources.base" -> "typing_extensions" [];
	"pydantic_settings.main" -> "__future__" [];
	"pydantic_settings.main" -> "asyncio" [];
	"pydantic_settings.main" -> "inspect" [];
	"pydantic_settings.main" -> "threading" [];
	"pydantic_settings.main" -> "argparse" [];
	"pydantic_settings.main" -> "types" [];
	"pydantic_settings.main" -> "typing" [];
	"pydantic_settings.main" -> "pydantic" [];
	"langchain_community.document_loaders.scrapingant" -> "logging" [];
	"langchain_community.document_loaders.scrapingant" -> "typing" [];
	"langchain_community.document_loaders.scrapingant" -> "scrapingant_client" [];
	"langchain_community.document_loaders.scrapfly" -> "logging" [];
	"langchain_community.document_loaders.scrapfly" -> "typing" [];
	"langchain_community.document_loaders.scrapfly" -> "scrapfly" [];
	"langchain_community.document_loaders.s3_file" -> "__future__" [];
	"langchain_community.document_loaders.s3_file" -> "os" [];
	"langchain_community.document_loaders.s3_file" -> "tempfile" [];
	"langchain_community.document_loaders.s3_file" -> "typing" [];
	"langchain_community.document_loaders.s3_file" -> "botocore" [];
	"langchain_community.document_loaders.s3_file" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.s3_file" -> "boto3" [];
	"langchain_community.document_loaders.s3_directory" -> "__future__" [];
	"langchain_community.document_loaders.s3_directory" -> "typing" [];
	"langchain_community.document_loaders.s3_directory" -> "botocore" [];
	"langchain_community.document_loaders.s3_directory" -> "boto3" [];
	"langchain_community.document_loaders.rtf" -> "pathlib" [];
	"langchain_community.document_loaders.rtf" -> "typing" [];
	"langchain_community.document_loaders.rtf" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.rst" -> "pathlib" [];
	"langchain_community.document_loaders.rst" -> "typing" [];
	"langchain_community.document_loaders.rst" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.rss" -> "logging" [];
	"langchain_community.document_loaders.rss" -> "typing" [];
	"langchain_community.document_loaders.rss" -> "tqdm" [];
	"langchain_community.document_loaders.rss" -> "listparser" [];
	"langchain_community.document_loaders.rss" -> "feedparser" [];
	"langchain_community.document_loaders.rocksetdb" -> "typing" [];
	"langchain_community.document_loaders.rocksetdb" -> "rockset" [];
	"langchain_community.document_loaders.rocksetdb" -> "'rockset.models'" [];
	"langchain_community.document_loaders.roam" -> "pathlib" [];
	"langchain_community.document_loaders.roam" -> "typing" [];
	"langchain_community.document_loaders.reddit" -> "__future__" [];
	"langchain_community.document_loaders.reddit" -> "typing" [];
	"langchain_community.document_loaders.reddit" -> "praw" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "__future__" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "asyncio" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "inspect" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "logging" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "re" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "typing" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "aiohttp" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "requests" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "bs4" [];
	"langchain_core.utils.html" -> "logging" [];
	"langchain_core.utils.html" -> "re" [];
	"langchain_core.utils.html" -> "typing" [];
	"langchain_community.document_loaders.readthedocs" -> "__future__" [];
	"langchain_community.document_loaders.readthedocs" -> "pathlib" [];
	"langchain_community.document_loaders.readthedocs" -> "typing" [];
	"langchain_community.document_loaders.readthedocs" -> "bs4" [];
	"langchain_community.document_loaders.python" -> "tokenize" [];
	"langchain_community.document_loaders.python" -> "pathlib" [];
	"langchain_community.document_loaders.python" -> "typing" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "itertools" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "logging" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "sys" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "typing" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "'pyspark.sql'" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "psutil" [];
	"langchain_community.document_loaders.pubmed" -> "typing" [];
	"langchain_community.document_loaders.psychic" -> "typing" [];
	"langchain_community.document_loaders.psychic" -> "psychicapi" [];
	"langchain_community.document_loaders.powerpoint" -> "os" [];
	"langchain_community.document_loaders.powerpoint" -> "pathlib" [];
	"langchain_community.document_loaders.powerpoint" -> "typing" [];
	"langchain_community.document_loaders.powerpoint" -> "'unstructured.file_utils'" [];
	"langchain_community.document_loaders.powerpoint" -> "magic" [];
	"langchain_community.document_loaders.powerpoint" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.polars_dataframe" -> "typing" [];
	"langchain_community.document_loaders.polars_dataframe" -> "polars" [];
	"langchain_community.document_loaders.pebblo" -> "logging" [];
	"langchain_community.document_loaders.pebblo" -> "os" [];
	"langchain_community.document_loaders.pebblo" -> "uuid" [];
	"langchain_community.document_loaders.pebblo" -> "typing" [];
	"langchain_community.utilities.pebblo" -> "__future__" [];
	"langchain_community.utilities.pebblo" -> "json" [];
	"langchain_community.utilities.pebblo" -> "logging" [];
	"langchain_community.utilities.pebblo" -> "os" [];
	"langchain_community.utilities.pebblo" -> "pathlib" [];
	"langchain_community.utilities.pebblo" -> "platform" [];
	"langchain_community.utilities.pebblo" -> "enum" [];
	"langchain_community.utilities.pebblo" -> "http" [];
	"langchain_community.utilities.pebblo" -> "typing" [];
	"langchain_community.utilities.pebblo" -> "pydantic" [];
	"langchain_community.utilities.pebblo" -> "requests" [];
	"langchain_community.utilities.pebblo" -> "socket" [];
	"langchain_community.utilities.pebblo" -> "pwd" [];
	"langchain_core.env" -> "platform" [];
	"langchain_core.env" -> "functools" [];
	"langchain_community.document_loaders.pdf" -> "json" [];
	"langchain_community.document_loaders.pdf" -> "logging" [];
	"langchain_community.document_loaders.pdf" -> "os" [];
	"langchain_community.document_loaders.pdf" -> "re" [];
	"langchain_community.document_loaders.pdf" -> "tempfile" [];
	"langchain_community.document_loaders.pdf" -> "time" [];
	"langchain_community.document_loaders.pdf" -> "abc" [];
	"langchain_community.document_loaders.pdf" -> "io" [];
	"langchain_community.document_loaders.pdf" -> "pathlib" [];
	"langchain_community.document_loaders.pdf" -> "typing" [];
	"langchain_community.document_loaders.pdf" -> "requests" [];
	"langchain_community.document_loaders.pdf" -> "'textractor.data'" [];
	"langchain_community.document_loaders.pdf" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.pdf" -> "'pdfminer.high_level'" [];
	"langchain_community.document_loaders.pdf" -> "'pdfminer.layout'" [];
	"langchain_community.document_loaders.pdf" -> "'pdfminer.utils'" [];
	"langchain_community.document_loaders.pdf" -> "pdfplumber" [];
	"langchain_community.document_loaders.pdf" -> "textractcaller" [];
	"langchain_community.document_loaders.pdf" -> "boto3" [];
	"langchain_community.document_loaders.pdf" -> "pypdf" [];
	"langchain_community.document_loaders.pdf" -> "PIL" [];
	"langchain_community.document_loaders.pdf" -> "'dedoc.utils'" [];
	"langchain_community.document_loaders.pdf" -> "asyncio" [];
	"langchain_community.document_loaders.pdf" -> "pyzerox" [];
	"PIL.ImageSequence" -> "__future__" [];
	"PIL.ImageSequence" -> "typing" [];
	"langchain_community.document_loaders.org_mode" -> "pathlib" [];
	"langchain_community.document_loaders.org_mode" -> "typing" [];
	"langchain_community.document_loaders.org_mode" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.oracleai" -> "__future__" [];
	"langchain_community.document_loaders.oracleai" -> "hashlib" [];
	"langchain_community.document_loaders.oracleai" -> "json" [];
	"langchain_community.document_loaders.oracleai" -> "logging" [];
	"langchain_community.document_loaders.oracleai" -> "os" [];
	"langchain_community.document_loaders.oracleai" -> "random" [];
	"langchain_community.document_loaders.oracleai" -> "struct" [];
	"langchain_community.document_loaders.oracleai" -> "time" [];
	"langchain_community.document_loaders.oracleai" -> "traceback" [];
	"langchain_community.document_loaders.oracleai" -> "typing" [];
	"langchain_community.document_loaders.oracleai" -> "langchain_text_splitters" [];
	"langchain_community.document_loaders.oracleai" -> "oracledb" [];
	"langchain_community.document_loaders.oracleadb_loader" -> "typing" [];
	"langchain_community.document_loaders.oracleadb_loader" -> "oracledb" [];
	"langchain_community.document_loaders.open_city_data" -> "typing" [];
	"langchain_community.document_loaders.open_city_data" -> "sodapy" [];
	"langchain_community.document_loaders.onedrive_file" -> "__future__" [];
	"langchain_community.document_loaders.onedrive_file" -> "tempfile" [];
	"langchain_community.document_loaders.onedrive_file" -> "typing" [];
	"langchain_community.document_loaders.onedrive_file" -> "pydantic" [];
	"langchain_community.document_loaders.onedrive_file" -> "O365" [];
	"langchain_community.document_loaders.onedrive" -> "typing" [];
	"langchain_community.document_loaders.onedrive" -> "pydantic" [];
	"langchain_community.document_loaders.odt" -> "pathlib" [];
	"langchain_community.document_loaders.odt" -> "typing" [];
	"langchain_community.document_loaders.odt" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.obsidian" -> "functools" [];
	"langchain_community.document_loaders.obsidian" -> "logging" [];
	"langchain_community.document_loaders.obsidian" -> "re" [];
	"langchain_community.document_loaders.obsidian" -> "pathlib" [];
	"langchain_community.document_loaders.obsidian" -> "typing" [];
	"langchain_community.document_loaders.obsidian" -> "yaml" [];
	"langchain_community.document_loaders.obs_file" -> "os" [];
	"langchain_community.document_loaders.obs_file" -> "tempfile" [];
	"langchain_community.document_loaders.obs_file" -> "typing" [];
	"langchain_community.document_loaders.obs_file" -> "obs" [];
	"langchain_community.document_loaders.obs_directory" -> "typing" [];
	"langchain_community.document_loaders.obs_directory" -> "obs" [];
	"langchain_community.document_loaders.notiondb" -> "logging" [];
	"langchain_community.document_loaders.notiondb" -> "typing" [];
	"langchain_community.document_loaders.notiondb" -> "requests" [];
	"langchain_community.document_loaders.notion" -> "pathlib" [];
	"langchain_community.document_loaders.notion" -> "typing" [];
	"langchain_community.document_loaders.notebook" -> "json" [];
	"langchain_community.document_loaders.notebook" -> "pathlib" [];
	"langchain_community.document_loaders.notebook" -> "typing" [];
	"langchain_community.document_loaders.news" -> "logging" [];
	"langchain_community.document_loaders.news" -> "typing" [];
	"langchain_community.document_loaders.news" -> "newspaper" [];
	"langchain_community.document_loaders.news" -> "tqdm" [];
	"langchain_community.document_loaders.needle" -> "typing" [];
	"langchain_community.document_loaders.needle" -> "needle" [];
	"langchain_community.document_loaders.needle" -> "'needle.v1'" [];
	"langchain_community.document_loaders.mongodb" -> "asyncio" [];
	"langchain_community.document_loaders.mongodb" -> "logging" [];
	"langchain_community.document_loaders.mongodb" -> "typing" [];
	"langchain_community.document_loaders.mongodb" -> "motor" [];
	"langchain_community.document_loaders.modern_treasury" -> "json" [];
	"langchain_community.document_loaders.modern_treasury" -> "base64" [];
	"langchain_community.document_loaders.modern_treasury" -> "typing" [];
	"langchain_community.document_loaders.mhtml" -> "email" [];
	"langchain_community.document_loaders.mhtml" -> "logging" [];
	"langchain_community.document_loaders.mhtml" -> "pathlib" [];
	"langchain_community.document_loaders.mhtml" -> "typing" [];
	"langchain_community.document_loaders.mhtml" -> "bs4" [];
	"langchain_community.document_loaders.merge" -> "typing" [];
	"langchain_community.document_loaders.mediawikidump" -> "logging" [];
	"langchain_community.document_loaders.mediawikidump" -> "pathlib" [];
	"langchain_community.document_loaders.mediawikidump" -> "typing" [];
	"langchain_community.document_loaders.mediawikidump" -> "mwxml" [];
	"langchain_community.document_loaders.mediawikidump" -> "mwparserfromhell" [];
	"langchain_community.document_loaders.max_compute" -> "__future__" [];
	"langchain_community.document_loaders.max_compute" -> "typing" [];
	"langchain_community.utilities.max_compute" -> "__future__" [];
	"langchain_community.utilities.max_compute" -> "typing" [];
	"langchain_community.utilities.max_compute" -> "odps" [];
	"langchain_community.document_loaders.mastodon" -> "__future__" [];
	"langchain_community.document_loaders.mastodon" -> "os" [];
	"langchain_community.document_loaders.mastodon" -> "typing" [];
	"langchain_community.document_loaders.mastodon" -> "mastodon" [];
	"langchain_community.document_loaders.markdown" -> "pathlib" [];
	"langchain_community.document_loaders.markdown" -> "typing" [];
	"langchain_community.document_loaders.markdown" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.llmsherpa" -> "pathlib" [];
	"langchain_community.document_loaders.llmsherpa" -> "typing" [];
	"langchain_community.document_loaders.llmsherpa" -> "llmsherpa" [];
	"langchain_community.document_loaders.llmsherpa" -> "'llmsherpa.readers'" [];
	"langchain_community.document_loaders.larksuite" -> "json" [];
	"langchain_community.document_loaders.larksuite" -> "typing" [];
	"langchain_community.document_loaders.lakefs" -> "os" [];
	"langchain_community.document_loaders.lakefs" -> "tempfile" [];
	"langchain_community.document_loaders.lakefs" -> "typing" [];
	"langchain_community.document_loaders.lakefs" -> "requests" [];
	"langchain_community.document_loaders.lakefs" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.kinetica_loader" -> "__future__" [];
	"langchain_community.document_loaders.kinetica_loader" -> "typing" [];
	"langchain_community.document_loaders.kinetica_loader" -> "gpudb" [];
	"langchain_community.document_loaders.json_loader" -> "json" [];
	"langchain_community.document_loaders.json_loader" -> "os" [];
	"langchain_community.document_loaders.json_loader" -> "pathlib" [];
	"langchain_community.document_loaders.json_loader" -> "typing" [];
	"langchain_community.document_loaders.json_loader" -> "jq" [];
	"langchain_community.document_loaders.joplin" -> "json" [];
	"langchain_community.document_loaders.joplin" -> "urllib" [];
	"langchain_community.document_loaders.joplin" -> "datetime" [];
	"langchain_community.document_loaders.joplin" -> "typing" [];
	"langchain_community.document_loaders.iugu" -> "json" [];
	"langchain_community.document_loaders.iugu" -> "typing" [];
	"langchain_community.document_loaders.imsdb" -> "typing" [];
	"langchain_community.document_loaders.image_captions" -> "io" [];
	"langchain_community.document_loaders.image_captions" -> "pathlib" [];
	"langchain_community.document_loaders.image_captions" -> "typing" [];
	"langchain_community.document_loaders.image_captions" -> "requests" [];
	"langchain_community.document_loaders.image_captions" -> "transformers" [];
	"langchain_community.document_loaders.image_captions" -> "PIL" [];
	"langchain_community.document_loaders.image" -> "pathlib" [];
	"langchain_community.document_loaders.image" -> "typing" [];
	"langchain_community.document_loaders.image" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.ifixit" -> "typing" [];
	"langchain_community.document_loaders.ifixit" -> "requests" [];
	"langchain_community.document_loaders.hugging_face_model" -> "typing" [];
	"langchain_community.document_loaders.hugging_face_model" -> "requests" [];
	"langchain_community.document_loaders.hugging_face_dataset" -> "json" [];
	"langchain_community.document_loaders.hugging_face_dataset" -> "typing" [];
	"langchain_community.document_loaders.hugging_face_dataset" -> "datasets" [];
	"datasets.utils.logging" -> "logging" [];
	"datasets.utils.logging" -> "os" [];
	"datasets.utils.logging" -> "typing" [];
	"datasets.utils.tqdm" -> "warnings" [];
	"datasets.utils._dataset_viewer" -> "typing" [];
	"datasets.utils._dataset_viewer" -> "datasets" [];
	"datasets.utils.file_utils" -> "asyncio" [];
	"datasets.utils.file_utils" -> "glob" [];
	"datasets.utils.file_utils" -> "io" [];
	"datasets.utils.file_utils" -> "json" [];
	"datasets.utils.file_utils" -> "multiprocessing" [];
	"datasets.utils.file_utils" -> "os" [];
	"datasets.utils.file_utils" -> "posixpath" [];
	"datasets.utils.file_utils" -> "re" [];
	"datasets.utils.file_utils" -> "shutil" [];
	"datasets.utils.file_utils" -> "sys" [];
	"datasets.utils.file_utils" -> "tarfile" [];
	"datasets.utils.file_utils" -> "time" [];
	"datasets.utils.file_utils" -> "zipfile" [];
	"datasets.utils.file_utils" -> "itertools" [];
	"datasets.utils.file_utils" -> "pathlib" [];
	"datasets.utils.file_utils" -> "typing" [];
	"datasets.utils.file_utils" -> "fsspec" [];
	"datasets.utils.file_utils" -> "huggingface_hub" [];
	"datasets.utils.file_utils" -> "requests" [];
	"datasets.utils.file_utils" -> "packaging" [];
	"datasets.utils.file_utils" -> "datasets" [];
	"datasets.utils.file_utils" -> "gzip" [];
	"datasets.utils.file_utils" -> "numpy" [];
	"datasets.utils.file_utils" -> "pandas" [];
	"datasets.utils.file_utils" -> "'scipy.io'" [];
	"datasets.utils.extract" -> "bz2" [];
	"datasets.utils.extract" -> "gzip" [];
	"datasets.utils.extract" -> "lzma" [];
	"datasets.utils.extract" -> "os" [];
	"datasets.utils.extract" -> "shutil" [];
	"datasets.utils.extract" -> "struct" [];
	"datasets.utils.extract" -> "tarfile" [];
	"datasets.utils.extract" -> "warnings" [];
	"datasets.utils.extract" -> "zipfile" [];
	"datasets.utils.extract" -> "abc" [];
	"datasets.utils.extract" -> "pathlib" [];
	"datasets.utils.extract" -> "typing" [];
	"datasets.utils.extract" -> "datasets" [];
	"datasets.utils.extract" -> "rarfile" [];
	"datasets.utils.extract" -> "zstandard" [];
	"datasets.utils.extract" -> "py7zr" [];
	"datasets.utils.extract" -> "'lz4.frame'" [];
	"datasets.utils._filelock" -> "os" [];
	"datasets.utils._filelock" -> "filelock" [];
	"datasets.utils._filelock" -> "packaging" [];
	"datasets.filesystems" -> "importlib" [];
	"datasets.filesystems" -> "shutil" [];
	"datasets.filesystems" -> "warnings" [];
	"datasets.filesystems" -> "typing" [];
	"datasets.filesystems" -> "fsspec" [];
	"datasets.filesystems.compression" -> "os" [];
	"datasets.filesystems.compression" -> "functools" [];
	"datasets.filesystems.compression" -> "typing" [];
	"datasets.filesystems.compression" -> "fsspec" [];
	"datasets.download.download_config" -> "copy" [];
	"datasets.download.download_config" -> "dataclasses" [];
	"datasets.download.download_config" -> "pathlib" [];
	"datasets.download.download_config" -> "typing" [];
	"datasets.download.download_config" -> "datasets" [];
	"unittest.mock" -> "asyncio" [];
	"unittest.mock" -> "contextlib" [];
	"unittest.mock" -> "io" [];
	"unittest.mock" -> "inspect" [];
	"unittest.mock" -> "pprint" [];
	"unittest.mock" -> "sys" [];
	"unittest.mock" -> "builtins" [];
	"unittest.mock" -> "types" [];
	"unittest.mock" -> "functools" [];
	"unittest.mock" -> "_io" [];
	"datasets.exceptions" -> "typing" [];
	"datasets.exceptions" -> "huggingface_hub" [];
	"datasets.table" -> "copy" [];
	"datasets.table" -> "os" [];
	"datasets.table" -> "functools" [];
	"datasets.table" -> "itertools" [];
	"datasets.table" -> "typing" [];
	"datasets.table" -> "numpy" [];
	"datasets.table" -> "pyarrow" [];
	"datasets.features.features" -> "copy" [];
	"datasets.features.features" -> "json" [];
	"datasets.features.features" -> "re" [];
	"datasets.features.features" -> "sys" [];
	"datasets.features.features" -> "dataclasses" [];
	"datasets.features.features" -> "functools" [];
	"datasets.features.features" -> "operator" [];
	"datasets.features.features" -> "typing" [];
	"datasets.features.features" -> "numpy" [];
	"datasets.features.features" -> "pandas" [];
	"datasets.features.features" -> "pyarrow" [];
	"datasets.features.features" -> "datasets" [];
	"datasets.features.features" -> "tensorflow" [];
	"datasets.features.features" -> "torch" [];
	"datasets.features.features" -> "jax" [];
	"datasets.features.features" -> "pdfplumber" [];
	"datasets.features.video" -> "os" [];
	"datasets.features.video" -> "dataclasses" [];
	"datasets.features.video" -> "typing" [];
	"datasets.features.video" -> "numpy" [];
	"datasets.features.video" -> "pyarrow" [];
	"datasets.features.video" -> "datasets" [];
	"datasets.features.video" -> "torchvision" [];
	"datasets.features.video" -> "'torchvision.io'" [];
	"datasets.features.video" -> "av" [];
	"datasets.features.translation" -> "dataclasses" [];
	"datasets.features.translation" -> "typing" [];
	"datasets.features.translation" -> "pyarrow" [];
	"datasets.features.pdf" -> "os" [];
	"datasets.features.pdf" -> "dataclasses" [];
	"datasets.features.pdf" -> "io" [];
	"datasets.features.pdf" -> "typing" [];
	"datasets.features.pdf" -> "pyarrow" [];
	"datasets.features.pdf" -> "datasets" [];
	"datasets.features.pdf" -> "pdfplumber" [];
	"datasets.features.image" -> "os" [];
	"datasets.features.image" -> "sys" [];
	"datasets.features.image" -> "warnings" [];
	"datasets.features.image" -> "dataclasses" [];
	"datasets.features.image" -> "io" [];
	"datasets.features.image" -> "typing" [];
	"datasets.features.image" -> "numpy" [];
	"datasets.features.image" -> "pyarrow" [];
	"datasets.features.image" -> "datasets" [];
	"datasets.features.audio" -> "os" [];
	"datasets.features.audio" -> "dataclasses" [];
	"datasets.features.audio" -> "io" [];
	"datasets.features.audio" -> "typing" [];
	"datasets.features.audio" -> "numpy" [];
	"datasets.features.audio" -> "pyarrow" [];
	"datasets.features.audio" -> "datasets" [];
	"datasets.features.audio" -> "soundfile" [];
	"datasets.features.audio" -> "librosa" [];
	"datasets.utils.py_utils" -> "copy" [];
	"datasets.utils.py_utils" -> "functools" [];
	"datasets.utils.py_utils" -> "itertools" [];
	"datasets.utils.py_utils" -> "os" [];
	"datasets.utils.py_utils" -> "queue" [];
	"datasets.utils.py_utils" -> "re" [];
	"datasets.utils.py_utils" -> "types" [];
	"datasets.utils.py_utils" -> "warnings" [];
	"datasets.utils.py_utils" -> "contextlib" [];
	"datasets.utils.py_utils" -> "dataclasses" [];
	"datasets.utils.py_utils" -> "multiprocessing" [];
	"datasets.utils.py_utils" -> "pathlib" [];
	"datasets.utils.py_utils" -> "shutil" [];
	"datasets.utils.py_utils" -> "typing" [];
	"datasets.utils.py_utils" -> "multiprocess" [];
	"datasets.utils.py_utils" -> "numpy" [];
	"datasets.utils.py_utils" -> "datasets" [];
	"datasets.utils.py_utils" -> "typing_extensions" [];
	"datasets.utils.py_utils" -> "torch" [];
	"datasets.utils.py_utils" -> "tensorflow" [];
	"datasets.utils.py_utils" -> "'tensorflow.python'" [];
	"datasets.utils._dill" -> "os" [];
	"datasets.utils._dill" -> "sys" [];
	"datasets.utils._dill" -> "io" [];
	"datasets.utils._dill" -> "types" [];
	"datasets.utils._dill" -> "dill" [];
	"datasets.utils._dill" -> "packaging" [];
	"datasets.utils._dill" -> "datasets" [];
	"datasets.utils._dill" -> "regex" [];
	"datasets.utils._dill" -> "spacy" [];
	"datasets.utils._dill" -> "tiktoken" [];
	"datasets.utils._dill" -> "torch" [];
	"datasets.utils._dill" -> "transformers" [];
	"datasets.parallel.parallel" -> "contextlib" [];
	"datasets.parallel.parallel" -> "multiprocessing" [];
	"datasets.parallel.parallel" -> "joblib" [];
	"datasets.parallel.parallel" -> "joblibspark" [];
	"joblib" -> "os" [];
	"joblib.parallel" -> "__future__" [];
	"joblib.parallel" -> "collections" [];
	"joblib.parallel" -> "functools" [];
	"joblib.parallel" -> "itertools" [];
	"joblib.parallel" -> "os" [];
	"joblib.parallel" -> "queue" [];
	"joblib.parallel" -> "sys" [];
	"joblib.parallel" -> "threading" [];
	"joblib.parallel" -> "time" [];
	"joblib.parallel" -> "warnings" [];
	"joblib.parallel" -> "weakref" [];
	"joblib.parallel" -> "contextlib" [];
	"joblib.parallel" -> "math" [];
	"joblib.parallel" -> "multiprocessing" [];
	"joblib.parallel" -> "numbers" [];
	"joblib.parallel" -> "uuid" [];
	"joblib._dask" -> "__future__" [];
	"joblib._dask" -> "asyncio" [];
	"joblib._dask" -> "contextlib" [];
	"joblib._dask" -> "time" [];
	"joblib._dask" -> "weakref" [];
	"joblib._dask" -> "uuid" [];
	"joblib._dask" -> "dask" [];
	"joblib._dask" -> "distributed" [];
	"joblib._dask" -> "'dask.distributed'" [];
	"joblib._dask" -> "'dask.sizeof'" [];
	"joblib._dask" -> "'dask.utils'" [];
	"joblib._dask" -> "'distributed.utils'" [];
	"joblib.externals.loky.process_executor" -> "faulthandler" [];
	"joblib.externals.loky.process_executor" -> "os" [];
	"joblib.externals.loky.process_executor" -> "gc" [];
	"joblib.externals.loky.process_executor" -> "sys" [];
	"joblib.externals.loky.process_executor" -> "queue" [];
	"joblib.externals.loky.process_executor" -> "struct" [];
	"joblib.externals.loky.process_executor" -> "weakref" [];
	"joblib.externals.loky.process_executor" -> "warnings" [];
	"joblib.externals.loky.process_executor" -> "itertools" [];
	"joblib.externals.loky.process_executor" -> "traceback" [];
	"joblib.externals.loky.process_executor" -> "threading" [];
	"joblib.externals.loky.process_executor" -> "time" [];
	"joblib.externals.loky.process_executor" -> "multiprocessing" [];
	"joblib.externals.loky.process_executor" -> "functools" [];
	"joblib.externals.loky.process_executor" -> "pickle" [];
	"joblib.externals.loky.process_executor" -> "psutil" [];
	"joblib.externals.loky.initializers" -> "warnings" [];
	"joblib.externals.loky.initializers" -> "viztracer" [];
	"joblib.externals.loky.backend.utils" -> "os" [];
	"joblib.externals.loky.backend.utils" -> "sys" [];
	"joblib.externals.loky.backend.utils" -> "time" [];
	"joblib.externals.loky.backend.utils" -> "errno" [];
	"joblib.externals.loky.backend.utils" -> "signal" [];
	"joblib.externals.loky.backend.utils" -> "warnings" [];
	"joblib.externals.loky.backend.utils" -> "subprocess" [];
	"joblib.externals.loky.backend.utils" -> "traceback" [];
	"joblib.externals.loky.backend.utils" -> "psutil" [];
	"joblib.externals.loky.backend.queues" -> "os" [];
	"joblib.externals.loky.backend.queues" -> "sys" [];
	"joblib.externals.loky.backend.queues" -> "errno" [];
	"joblib.externals.loky.backend.queues" -> "weakref" [];
	"joblib.externals.loky.backend.queues" -> "threading" [];
	"joblib.externals.loky.backend.queues" -> "multiprocessing" [];
	"joblib.externals.loky.backend.queues" -> "traceback" [];
	"joblib.externals.loky.backend" -> "os" [];
	"joblib.externals.loky.backend" -> "multiprocessing" [];
	"joblib.externals.loky.backend.spawn" -> "os" [];
	"joblib.externals.loky.backend.spawn" -> "sys" [];
	"joblib.externals.loky.backend.spawn" -> "runpy" [];
	"joblib.externals.loky.backend.spawn" -> "textwrap" [];
	"joblib.externals.loky.backend.spawn" -> "types" [];
	"joblib.externals.loky.backend.spawn" -> "multiprocessing" [];
	"joblib.externals.loky.backend.spawn" -> "msvcrt" [];
	"joblib.externals.loky.backend.spawn" -> "logging" [];
	"joblib.externals.loky.backend.resource_tracker" -> "os" [];
	"joblib.externals.loky.backend.resource_tracker" -> "shutil" [];
	"joblib.externals.loky.backend.resource_tracker" -> "sys" [];
	"joblib.externals.loky.backend.resource_tracker" -> "signal" [];
	"joblib.externals.loky.backend.resource_tracker" -> "warnings" [];
	"joblib.externals.loky.backend.resource_tracker" -> "_multiprocessing" [];
	"joblib.externals.loky.backend.resource_tracker" -> "multiprocessing" [];
	"joblib.externals.loky.backend.resource_tracker" -> "_winapi" [];
	"joblib.externals.loky.backend.resource_tracker" -> "msvcrt" [];
	"joblib.externals.loky.backend._win_reduction" -> "socket" [];
	"joblib.externals.loky.backend._win_reduction" -> "multiprocessing" [];
	"joblib.externals.loky.cloudpickle_wrapper" -> "inspect" [];
	"joblib.externals.loky.cloudpickle_wrapper" -> "functools" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "_collections_abc" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "collections" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "abc" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "builtins" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "copyreg" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "dataclasses" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "dis" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "enum" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "io" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "itertools" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "logging" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "opcode" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "pickle" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "platform" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "struct" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "sys" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "threading" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "types" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "typing" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "uuid" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "warnings" [];
	"joblib.externals.cloudpickle.cloudpickle" -> "weakref" [];
	"joblib.externals.loky.reusable_executor" -> "time" [];
	"joblib.externals.loky.reusable_executor" -> "warnings" [];
	"joblib.externals.loky.reusable_executor" -> "threading" [];
	"joblib.externals.loky.reusable_executor" -> "multiprocessing" [];
	"joblib.externals.loky.backend.reduction" -> "copyreg" [];
	"joblib.externals.loky.backend.reduction" -> "io" [];
	"joblib.externals.loky.backend.reduction" -> "functools" [];
	"joblib.externals.loky.backend.reduction" -> "types" [];
	"joblib.externals.loky.backend.reduction" -> "sys" [];
	"joblib.externals.loky.backend.reduction" -> "os" [];
	"joblib.externals.loky.backend.reduction" -> "multiprocessing" [];
	"joblib.externals.loky.backend.reduction" -> "pickle" [];
	"joblib.externals.loky.backend.reduction" -> "importlib" [];
	"joblib.externals.loky.backend._posix_reduction" -> "os" [];
	"joblib.externals.loky.backend._posix_reduction" -> "socket" [];
	"joblib.externals.loky.backend._posix_reduction" -> "_socket" [];
	"joblib.externals.loky.backend._posix_reduction" -> "multiprocessing" [];
	"joblib.externals.loky.backend.context" -> "os" [];
	"joblib.externals.loky.backend.context" -> "sys" [];
	"joblib.externals.loky.backend.context" -> "math" [];
	"joblib.externals.loky.backend.context" -> "subprocess" [];
	"joblib.externals.loky.backend.context" -> "traceback" [];
	"joblib.externals.loky.backend.context" -> "warnings" [];
	"joblib.externals.loky.backend.context" -> "multiprocessing" [];
	"joblib.externals.loky.backend.context" -> "psutil" [];
	"joblib.externals.loky.backend.synchronize" -> "os" [];
	"joblib.externals.loky.backend.synchronize" -> "sys" [];
	"joblib.externals.loky.backend.synchronize" -> "tempfile" [];
	"joblib.externals.loky.backend.synchronize" -> "threading" [];
	"joblib.externals.loky.backend.synchronize" -> "_multiprocessing" [];
	"joblib.externals.loky.backend.synchronize" -> "time" [];
	"joblib.externals.loky.backend.synchronize" -> "multiprocessing" [];
	"joblib.externals.loky.backend.process" -> "sys" [];
	"joblib.externals.loky.backend.popen_loky_posix" -> "os" [];
	"joblib.externals.loky.backend.popen_loky_posix" -> "sys" [];
	"joblib.externals.loky.backend.popen_loky_posix" -> "signal" [];
	"joblib.externals.loky.backend.popen_loky_posix" -> "pickle" [];
	"joblib.externals.loky.backend.popen_loky_posix" -> "io" [];
	"joblib.externals.loky.backend.popen_loky_posix" -> "multiprocessing" [];
	"joblib.externals.loky.backend.popen_loky_posix" -> "argparse" [];
	"joblib.externals.loky.backend.popen_loky_posix" -> "traceback" [];
	"joblib.externals.loky.backend.fork_exec" -> "sys" [];
	"joblib.externals.loky.backend.fork_exec" -> "os" [];
	"joblib.externals.loky.backend.fork_exec" -> "subprocess" [];
	"joblib.externals.loky.backend.fork_exec" -> "_posixsubprocess" [];
	"joblib.externals.loky.backend.popen_loky_win32" -> "os" [];
	"joblib.externals.loky.backend.popen_loky_win32" -> "sys" [];
	"joblib.externals.loky.backend.popen_loky_win32" -> "msvcrt" [];
	"joblib.externals.loky.backend.popen_loky_win32" -> "_winapi" [];
	"joblib.externals.loky.backend.popen_loky_win32" -> "pickle" [];
	"joblib.externals.loky.backend.popen_loky_win32" -> "multiprocessing" [];
	"joblib.disk" -> "errno" [];
	"joblib.disk" -> "os" [];
	"joblib.disk" -> "shutil" [];
	"joblib.disk" -> "sys" [];
	"joblib.disk" -> "time" [];
	"joblib.disk" -> "multiprocessing" [];
	"joblib._utils" -> "ast" [];
	"joblib._utils" -> "operator" [];
	"joblib._utils" -> "dataclasses" [];
	"joblib._multiprocessing_helpers" -> "os" [];
	"joblib._multiprocessing_helpers" -> "warnings" [];
	"joblib._multiprocessing_helpers" -> "_multiprocessing" [];
	"joblib._multiprocessing_helpers" -> "multiprocessing" [];
	"joblib._multiprocessing_helpers" -> "tempfile" [];
	"joblib.numpy_pickle" -> "io" [];
	"joblib.numpy_pickle" -> "os" [];
	"joblib.numpy_pickle" -> "pickle" [];
	"joblib.numpy_pickle" -> "warnings" [];
	"joblib.numpy_pickle" -> "pathlib" [];
	"joblib.numpy_pickle" -> "numpy" [];
	"joblib._memmapping_reducer" -> "atexit" [];
	"joblib._memmapping_reducer" -> "errno" [];
	"joblib._memmapping_reducer" -> "os" [];
	"joblib._memmapping_reducer" -> "stat" [];
	"joblib._memmapping_reducer" -> "tempfile" [];
	"joblib._memmapping_reducer" -> "threading" [];
	"joblib._memmapping_reducer" -> "time" [];
	"joblib._memmapping_reducer" -> "warnings" [];
	"joblib._memmapping_reducer" -> "weakref" [];
	"joblib._memmapping_reducer" -> "mmap" [];
	"joblib._memmapping_reducer" -> "multiprocessing" [];
	"joblib._memmapping_reducer" -> "pickle" [];
	"joblib._memmapping_reducer" -> "uuid" [];
	"joblib._memmapping_reducer" -> "numpy" [];
	"joblib.numpy_pickle_utils" -> "contextlib" [];
	"joblib.numpy_pickle_utils" -> "io" [];
	"joblib.numpy_pickle_utils" -> "pickle" [];
	"joblib.numpy_pickle_utils" -> "sys" [];
	"joblib.numpy_pickle_utils" -> "warnings" [];
	"joblib.numpy_pickle_utils" -> "numpy" [];
	"joblib.numpy_pickle_utils" -> "bz2" [];
	"joblib.numpy_pickle_compat" -> "inspect" [];
	"joblib.numpy_pickle_compat" -> "os" [];
	"joblib.numpy_pickle_compat" -> "pickle" [];
	"joblib.numpy_pickle_compat" -> "zlib" [];
	"joblib.numpy_pickle_compat" -> "io" [];
	"joblib.numpy_pickle_compat" -> "numpy" [];
	"joblib.backports" -> "os" [];
	"joblib.backports" -> "re" [];
	"joblib.backports" -> "time" [];
	"joblib.backports" -> "multiprocessing" [];
	"joblib.backports" -> "os.path" [];
	"joblib.backports" -> "numpy" [];
	"joblib.memory" -> "asyncio" [];
	"joblib.memory" -> "datetime" [];
	"joblib.memory" -> "functools" [];
	"joblib.memory" -> "inspect" [];
	"joblib.memory" -> "logging" [];
	"joblib.memory" -> "os" [];
	"joblib.memory" -> "pathlib" [];
	"joblib.memory" -> "pydoc" [];
	"joblib.memory" -> "re" [];
	"joblib.memory" -> "textwrap" [];
	"joblib.memory" -> "time" [];
	"joblib.memory" -> "tokenize" [];
	"joblib.memory" -> "traceback" [];
	"joblib.memory" -> "warnings" [];
	"joblib.memory" -> "weakref" [];
	"joblib.func_inspect" -> "collections" [];
	"joblib.func_inspect" -> "inspect" [];
	"joblib.func_inspect" -> "os" [];
	"joblib.func_inspect" -> "re" [];
	"joblib.func_inspect" -> "warnings" [];
	"joblib.func_inspect" -> "itertools" [];
	"joblib.func_inspect" -> "tokenize" [];
	"joblib.func_inspect" -> "urllib" [];
	"joblib.logger" -> "__future__" [];
	"joblib.logger" -> "logging" [];
	"joblib.logger" -> "os" [];
	"joblib.logger" -> "pprint" [];
	"joblib.logger" -> "shutil" [];
	"joblib.logger" -> "sys" [];
	"joblib.logger" -> "time" [];
	"joblib.logger" -> "numpy" [];
	"joblib.hashing" -> "decimal" [];
	"joblib.hashing" -> "hashlib" [];
	"joblib.hashing" -> "io" [];
	"joblib.hashing" -> "pickle" [];
	"joblib.hashing" -> "struct" [];
	"joblib.hashing" -> "sys" [];
	"joblib.hashing" -> "types" [];
	"joblib.hashing" -> "numpy" [];
	"joblib.compressor" -> "io" [];
	"joblib.compressor" -> "zlib" [];
	"joblib.compressor" -> "threading" [];
	"joblib.compressor" -> "dummy_threading" [];
	"joblib.compressor" -> "bz2" [];
	"joblib.compressor" -> "lz4" [];
	"joblib.compressor" -> "'lz4.frame'" [];
	"joblib.compressor" -> "lzma" [];
	"joblib._store_backends" -> "collections" [];
	"joblib._store_backends" -> "datetime" [];
	"joblib._store_backends" -> "json" [];
	"joblib._store_backends" -> "operator" [];
	"joblib._store_backends" -> "os" [];
	"joblib._store_backends" -> "os.path" [];
	"joblib._store_backends" -> "re" [];
	"joblib._store_backends" -> "shutil" [];
	"joblib._store_backends" -> "threading" [];
	"joblib._store_backends" -> "time" [];
	"joblib._store_backends" -> "warnings" [];
	"joblib._store_backends" -> "abc" [];
	"joblib._store_backends" -> "pickle" [];
	"joblib._parallel_backends" -> "contextlib" [];
	"joblib._parallel_backends" -> "gc" [];
	"joblib._parallel_backends" -> "os" [];
	"joblib._parallel_backends" -> "threading" [];
	"joblib._parallel_backends" -> "warnings" [];
	"joblib._parallel_backends" -> "abc" [];
	"joblib._parallel_backends" -> "distributed" [];
	"joblib.pool" -> "copyreg" [];
	"joblib.pool" -> "sys" [];
	"joblib.pool" -> "warnings" [];
	"joblib.pool" -> "time" [];
	"joblib.pool" -> "io" [];
	"joblib.pool" -> "pickle" [];
	"joblib.pool" -> "numpy" [];
	"multiprocess.pool" -> "collections" [];
	"multiprocess.pool" -> "itertools" [];
	"multiprocess.pool" -> "os" [];
	"multiprocess.pool" -> "queue" [];
	"multiprocess.pool" -> "threading" [];
	"multiprocess.pool" -> "time" [];
	"multiprocess.pool" -> "traceback" [];
	"multiprocess.pool" -> "types" [];
	"multiprocess.pool" -> "warnings" [];
	"multiprocess.dummy" -> "threading" [];
	"multiprocess.dummy" -> "sys" [];
	"multiprocess.dummy" -> "weakref" [];
	"multiprocess.dummy" -> "array" [];
	"multiprocess.dummy" -> "queue" [];
	"multiprocess.dummy.connection" -> "queue" [];
	"multiprocess.connection" -> "io" [];
	"multiprocess.connection" -> "os" [];
	"multiprocess.connection" -> "sys" [];
	"multiprocess.connection" -> "socket" [];
	"multiprocess.connection" -> "struct" [];
	"multiprocess.connection" -> "time" [];
	"multiprocess.connection" -> "tempfile" [];
	"multiprocess.connection" -> "itertools" [];
	"multiprocess.connection" -> "_multiprocess" [];
	"multiprocess.connection" -> "_multiprocessing" [];
	"multiprocess.connection" -> "_winapi" [];
	"multiprocess.connection" -> "hmac" [];
	"multiprocess.connection" -> "selectors" [];
	"multiprocess.resource_sharer" -> "os" [];
	"multiprocess.resource_sharer" -> "signal" [];
	"multiprocess.resource_sharer" -> "socket" [];
	"multiprocess.resource_sharer" -> "sys" [];
	"multiprocess.resource_sharer" -> "threading" [];
	"multiprocess.process" -> "os" [];
	"multiprocess.process" -> "sys" [];
	"multiprocess.process" -> "signal" [];
	"multiprocess.process" -> "itertools" [];
	"multiprocess.process" -> "threading" [];
	"multiprocess.process" -> "_weakrefset" [];
	"multiprocess.process" -> "traceback" [];
	"multiprocess.context" -> "os" [];
	"multiprocess.context" -> "sys" [];
	"multiprocess.context" -> "threading" [];
	"multiprocess.popen_spawn_win32" -> "os" [];
	"multiprocess.popen_spawn_win32" -> "msvcrt" [];
	"multiprocess.popen_spawn_win32" -> "signal" [];
	"multiprocess.popen_spawn_win32" -> "sys" [];
	"multiprocess.popen_spawn_win32" -> "_winapi" [];
	"multiprocess.popen_forkserver" -> "io" [];
	"multiprocess.popen_forkserver" -> "os" [];
	"multiprocess.popen_spawn_posix" -> "io" [];
	"multiprocess.popen_spawn_posix" -> "os" [];
	"multiprocess.resource_tracker" -> "os" [];
	"multiprocess.resource_tracker" -> "signal" [];
	"multiprocess.resource_tracker" -> "sys" [];
	"multiprocess.resource_tracker" -> "threading" [];
	"multiprocess.resource_tracker" -> "warnings" [];
	"multiprocess.resource_tracker" -> "_multiprocess" [];
	"multiprocess.resource_tracker" -> "_multiprocessing" [];
	"multiprocess.resource_tracker" -> "_posixshmem" [];
	"multiprocess.popen_fork" -> "os" [];
	"multiprocess.popen_fork" -> "signal" [];
	"multiprocess.forkserver" -> "errno" [];
	"multiprocess.forkserver" -> "os" [];
	"multiprocess.forkserver" -> "selectors" [];
	"multiprocess.forkserver" -> "signal" [];
	"multiprocess.forkserver" -> "socket" [];
	"multiprocess.forkserver" -> "struct" [];
	"multiprocess.forkserver" -> "sys" [];
	"multiprocess.forkserver" -> "threading" [];
	"multiprocess.forkserver" -> "warnings" [];
	"multiprocess.spawn" -> "os" [];
	"multiprocess.spawn" -> "sys" [];
	"multiprocess.spawn" -> "runpy" [];
	"multiprocess.spawn" -> "types" [];
	"multiprocess.spawn" -> "msvcrt" [];
	"multiprocess.spawn" -> "_winapi" [];
	"multiprocess.sharedctypes" -> "ctypes" [];
	"multiprocess.sharedctypes" -> "weakref" [];
	"multiprocess.heap" -> "bisect" [];
	"multiprocess.heap" -> "collections" [];
	"multiprocess.heap" -> "mmap" [];
	"multiprocess.heap" -> "os" [];
	"multiprocess.heap" -> "sys" [];
	"multiprocess.heap" -> "tempfile" [];
	"multiprocess.heap" -> "threading" [];
	"multiprocess.heap" -> "_winapi" [];
	"multiprocess.queues" -> "sys" [];
	"multiprocess.queues" -> "os" [];
	"multiprocess.queues" -> "threading" [];
	"multiprocess.queues" -> "collections" [];
	"multiprocess.queues" -> "time" [];
	"multiprocess.queues" -> "types" [];
	"multiprocess.queues" -> "weakref" [];
	"multiprocess.queues" -> "errno" [];
	"multiprocess.queues" -> "queue" [];
	"multiprocess.queues" -> "_multiprocess" [];
	"multiprocess.queues" -> "_multiprocessing" [];
	"multiprocess.queues" -> "traceback" [];
	"multiprocess.synchronize" -> "threading" [];
	"multiprocess.synchronize" -> "sys" [];
	"multiprocess.synchronize" -> "tempfile" [];
	"multiprocess.synchronize" -> "_multiprocess" [];
	"multiprocess.synchronize" -> "_multiprocessing" [];
	"multiprocess.synchronize" -> "time" [];
	"multiprocess.synchronize" -> "struct" [];
	"multiprocess.managers" -> "sys" [];
	"multiprocess.managers" -> "threading" [];
	"multiprocess.managers" -> "signal" [];
	"multiprocess.managers" -> "array" [];
	"multiprocess.managers" -> "queue" [];
	"multiprocess.managers" -> "time" [];
	"multiprocess.managers" -> "types" [];
	"multiprocess.managers" -> "os" [];
	"multiprocess.managers" -> "traceback" [];
	"multiprocess.shared_memory" -> "functools" [];
	"multiprocess.shared_memory" -> "mmap" [];
	"multiprocess.shared_memory" -> "os" [];
	"multiprocess.shared_memory" -> "errno" [];
	"multiprocess.shared_memory" -> "struct" [];
	"multiprocess.shared_memory" -> "secrets" [];
	"multiprocess.shared_memory" -> "types" [];
	"multiprocess.shared_memory" -> "_winapi" [];
	"multiprocess.shared_memory" -> "_posixshmem" [];
	"multiprocess.reduction" -> "abc" [];
	"multiprocess.reduction" -> "copyreg" [];
	"multiprocess.reduction" -> "functools" [];
	"multiprocess.reduction" -> "io" [];
	"multiprocess.reduction" -> "os" [];
	"multiprocess.reduction" -> "dill" [];
	"multiprocess.reduction" -> "pickle" [];
	"multiprocess.reduction" -> "socket" [];
	"multiprocess.reduction" -> "sys" [];
	"multiprocess.reduction" -> "_winapi" [];
	"multiprocess.reduction" -> "array" [];
	"_multiprocess" -> "_multiprocessing" [];
	"multiprocess.util" -> "os" [];
	"multiprocess.util" -> "itertools" [];
	"multiprocess.util" -> "sys" [];
	"multiprocess.util" -> "weakref" [];
	"multiprocess.util" -> "atexit" [];
	"multiprocess.util" -> "threading" [];
	"multiprocess.util" -> "subprocess" [];
	"multiprocess.util" -> "logging" [];
	"multiprocess.util" -> "shutil" [];
	"multiprocess.util" -> "tempfile" [];
	"multiprocess.util" -> "traceback" [];
	"multiprocess.util" -> "_posixsubprocess" [];
	"multiprocess.util" -> "test" [];
	"multiprocess" -> "os" [];
	"multiprocess" -> "sys" [];
	"multiprocess" -> "version" [];
	"datasets.naming" -> "itertools" [];
	"datasets.naming" -> "os" [];
	"datasets.naming" -> "re" [];
	"datasets.utils.version" -> "dataclasses" [];
	"datasets.utils.version" -> "re" [];
	"datasets.utils.version" -> "functools" [];
	"datasets.utils.version" -> "typing" [];
	"datasets.utils.info_utils" -> "enum" [];
	"datasets.utils.info_utils" -> "os" [];
	"datasets.utils.info_utils" -> "typing" [];
	"datasets.utils.info_utils" -> "datasets" [];
	"datasets.utils.experimental" -> "warnings" [];
	"datasets.utils.experimental" -> "functools" [];
	"datasets.utils.experimental" -> "typing" [];
	"datasets.splits" -> "abc" [];
	"datasets.splits" -> "collections" [];
	"datasets.splits" -> "copy" [];
	"datasets.splits" -> "dataclasses" [];
	"datasets.splits" -> "re" [];
	"datasets.splits" -> "typing" [];
	"datasets.load" -> "filecmp" [];
	"datasets.load" -> "glob" [];
	"datasets.load" -> "importlib" [];
	"datasets.load" -> "inspect" [];
	"datasets.load" -> "json" [];
	"datasets.load" -> "os" [];
	"datasets.load" -> "posixpath" [];
	"datasets.load" -> "shutil" [];
	"datasets.load" -> "signal" [];
	"datasets.load" -> "time" [];
	"datasets.load" -> "warnings" [];
	"datasets.load" -> "collections" [];
	"datasets.load" -> "contextlib" [];
	"datasets.load" -> "dataclasses" [];
	"datasets.load" -> "pathlib" [];
	"datasets.load" -> "typing" [];
	"datasets.load" -> "fsspec" [];
	"datasets.load" -> "requests" [];
	"datasets.load" -> "yaml" [];
	"datasets.load" -> "huggingface_hub" [];
	"datasets.utils.typing" -> "os" [];
	"datasets.utils.typing" -> "typing" [];
	"datasets.utils.metadata" -> "re" [];
	"datasets.utils.metadata" -> "textwrap" [];
	"datasets.utils.metadata" -> "collections" [];
	"datasets.utils.metadata" -> "itertools" [];
	"datasets.utils.metadata" -> "operator" [];
	"datasets.utils.metadata" -> "typing" [];
	"datasets.utils.metadata" -> "yaml" [];
	"datasets.utils.metadata" -> "huggingface_hub" [];
	"datasets.utils.hub" -> "functools" [];
	"datasets.utils.hub" -> "huggingface_hub" [];
	"datasets.packaged_modules.folder_based_builder.folder_based_builder" -> "collections" [];
	"datasets.packaged_modules.folder_based_builder.folder_based_builder" -> "io" [];
	"datasets.packaged_modules.folder_based_builder.folder_based_builder" -> "itertools" [];
	"datasets.packaged_modules.folder_based_builder.folder_based_builder" -> "os" [];
	"datasets.packaged_modules.folder_based_builder.folder_based_builder" -> "dataclasses" [];
	"datasets.packaged_modules.folder_based_builder.folder_based_builder" -> "typing" [];
	"datasets.packaged_modules.folder_based_builder.folder_based_builder" -> "pandas" [];
	"datasets.packaged_modules.folder_based_builder.folder_based_builder" -> "pyarrow" [];
	"datasets.packaged_modules.folder_based_builder.folder_based_builder" -> "datasets" [];
	"datasets.packaged_modules" -> "inspect" [];
	"datasets.packaged_modules" -> "re" [];
	"datasets.packaged_modules" -> "typing" [];
	"datasets.packaged_modules.xml.xml" -> "itertools" [];
	"datasets.packaged_modules.xml.xml" -> "dataclasses" [];
	"datasets.packaged_modules.xml.xml" -> "typing" [];
	"datasets.packaged_modules.xml.xml" -> "pyarrow" [];
	"datasets.packaged_modules.xml.xml" -> "datasets" [];
	"datasets.packaged_modules.webdataset.webdataset" -> "io" [];
	"datasets.packaged_modules.webdataset.webdataset" -> "json" [];
	"datasets.packaged_modules.webdataset.webdataset" -> "re" [];
	"datasets.packaged_modules.webdataset.webdataset" -> "itertools" [];
	"datasets.packaged_modules.webdataset.webdataset" -> "typing" [];
	"datasets.packaged_modules.webdataset.webdataset" -> "fsspec" [];
	"datasets.packaged_modules.webdataset.webdataset" -> "numpy" [];
	"datasets.packaged_modules.webdataset.webdataset" -> "pyarrow" [];
	"datasets.packaged_modules.webdataset.webdataset" -> "datasets" [];
	"datasets.packaged_modules.webdataset.webdataset" -> "msgpack" [];
	"datasets.packaged_modules.webdataset.webdataset" -> "cbor" [];
	"datasets.packaged_modules.webdataset.webdataset" -> "torch" [];
	"datasets.packaged_modules.webdataset._tenbin" -> "struct" [];
	"datasets.packaged_modules.webdataset._tenbin" -> "sys" [];
	"datasets.packaged_modules.webdataset._tenbin" -> "numpy" [];
	"datasets.packaged_modules.videofolder.videofolder" -> "datasets" [];
	"datasets.packaged_modules.text.text" -> "itertools" [];
	"datasets.packaged_modules.text.text" -> "dataclasses" [];
	"datasets.packaged_modules.text.text" -> "io" [];
	"datasets.packaged_modules.text.text" -> "typing" [];
	"datasets.packaged_modules.text.text" -> "pyarrow" [];
	"datasets.packaged_modules.text.text" -> "datasets" [];
	"datasets.packaged_modules.sql.sql" -> "sys" [];
	"datasets.packaged_modules.sql.sql" -> "dataclasses" [];
	"datasets.packaged_modules.sql.sql" -> "typing" [];
	"datasets.packaged_modules.sql.sql" -> "pandas" [];
	"datasets.packaged_modules.sql.sql" -> "pyarrow" [];
	"datasets.packaged_modules.sql.sql" -> "datasets" [];
	"datasets.packaged_modules.sql.sql" -> "sqlite3" [];
	"datasets.packaged_modules.sql.sql" -> "sqlalchemy" [];
	"datasets.packaged_modules.pdffolder.pdffolder" -> "datasets" [];
	"datasets.packaged_modules.parquet.parquet" -> "itertools" [];
	"datasets.packaged_modules.parquet.parquet" -> "dataclasses" [];
	"datasets.packaged_modules.parquet.parquet" -> "typing" [];
	"datasets.packaged_modules.parquet.parquet" -> "pyarrow" [];
	"datasets.packaged_modules.parquet.parquet" -> "datasets" [];
	"datasets.packaged_modules.pandas.pandas" -> "itertools" [];
	"datasets.packaged_modules.pandas.pandas" -> "warnings" [];
	"datasets.packaged_modules.pandas.pandas" -> "dataclasses" [];
	"datasets.packaged_modules.pandas.pandas" -> "typing" [];
	"datasets.packaged_modules.pandas.pandas" -> "pandas" [];
	"datasets.packaged_modules.pandas.pandas" -> "pyarrow" [];
	"datasets.packaged_modules.pandas.pandas" -> "datasets" [];
	"datasets.packaged_modules.json.json" -> "io" [];
	"datasets.packaged_modules.json.json" -> "itertools" [];
	"datasets.packaged_modules.json.json" -> "dataclasses" [];
	"datasets.packaged_modules.json.json" -> "typing" [];
	"datasets.packaged_modules.json.json" -> "pandas" [];
	"datasets.packaged_modules.json.json" -> "pyarrow" [];
	"datasets.packaged_modules.json.json" -> "datasets" [];
	"datasets.packaged_modules.imagefolder.imagefolder" -> "datasets" [];
	"datasets.packaged_modules.csv.csv" -> "itertools" [];
	"datasets.packaged_modules.csv.csv" -> "dataclasses" [];
	"datasets.packaged_modules.csv.csv" -> "typing" [];
	"datasets.packaged_modules.csv.csv" -> "pandas" [];
	"datasets.packaged_modules.csv.csv" -> "pyarrow" [];
	"datasets.packaged_modules.csv.csv" -> "datasets" [];
	"datasets.packaged_modules.cache.cache" -> "glob" [];
	"datasets.packaged_modules.cache.cache" -> "json" [];
	"datasets.packaged_modules.cache.cache" -> "os" [];
	"datasets.packaged_modules.cache.cache" -> "shutil" [];
	"datasets.packaged_modules.cache.cache" -> "time" [];
	"datasets.packaged_modules.cache.cache" -> "pathlib" [];
	"datasets.packaged_modules.cache.cache" -> "typing" [];
	"datasets.packaged_modules.cache.cache" -> "pyarrow" [];
	"datasets.packaged_modules.cache.cache" -> "datasets" [];
	"datasets.packaged_modules.audiofolder.audiofolder" -> "datasets" [];
	"datasets.packaged_modules.arrow.arrow" -> "itertools" [];
	"datasets.packaged_modules.arrow.arrow" -> "dataclasses" [];
	"datasets.packaged_modules.arrow.arrow" -> "typing" [];
	"datasets.packaged_modules.arrow.arrow" -> "pyarrow" [];
	"datasets.packaged_modules.arrow.arrow" -> "datasets" [];
	"datasets.download.streaming_download_manager" -> "io" [];
	"datasets.download.streaming_download_manager" -> "os" [];
	"datasets.download.streaming_download_manager" -> "typing" [];
	"datasets.download.download_manager" -> "enum" [];
	"datasets.download.download_manager" -> "io" [];
	"datasets.download.download_manager" -> "multiprocessing" [];
	"datasets.download.download_manager" -> "os" [];
	"datasets.download.download_manager" -> "datetime" [];
	"datasets.download.download_manager" -> "functools" [];
	"datasets.download.download_manager" -> "typing" [];
	"datasets.download.download_manager" -> "fsspec" [];
	"datasets.download.download_manager" -> "datasets" [];
	"datasets.data_files" -> "os" [];
	"datasets.data_files" -> "re" [];
	"datasets.data_files" -> "functools" [];
	"datasets.data_files" -> "glob" [];
	"datasets.data_files" -> "pathlib" [];
	"datasets.data_files" -> "typing" [];
	"datasets.data_files" -> "huggingface_hub" [];
	"datasets.data_files" -> "packaging" [];
	"datasets.iterable_dataset" -> "asyncio" [];
	"datasets.iterable_dataset" -> "copy" [];
	"datasets.iterable_dataset" -> "inspect" [];
	"datasets.iterable_dataset" -> "itertools" [];
	"datasets.iterable_dataset" -> "sys" [];
	"datasets.iterable_dataset" -> "collections" [];
	"datasets.iterable_dataset" -> "dataclasses" [];
	"datasets.iterable_dataset" -> "functools" [];
	"datasets.iterable_dataset" -> "typing" [];
	"datasets.iterable_dataset" -> "numpy" [];
	"datasets.iterable_dataset" -> "pandas" [];
	"datasets.iterable_dataset" -> "pyarrow" [];
	"datasets.iterable_dataset" -> "torch" [];
	"datasets.iterable_dataset" -> "polars" [];
	"datasets.iterable_dataset" -> "'torch.utils'" [];
	"datasets.io.spark" -> "typing" [];
	"datasets.io.spark" -> "pyspark" [];
	"datasets.io.spark" -> "datasets" [];
	"datasets.io.abc" -> "abc" [];
	"datasets.io.abc" -> "typing" [];
	"datasets.io.abc" -> "datasets" [];
	"datasets.packaged_modules.spark.spark" -> "os" [];
	"datasets.packaged_modules.spark.spark" -> "posixpath" [];
	"datasets.packaged_modules.spark.spark" -> "uuid" [];
	"datasets.packaged_modules.spark.spark" -> "dataclasses" [];
	"datasets.packaged_modules.spark.spark" -> "itertools" [];
	"datasets.packaged_modules.spark.spark" -> "typing" [];
	"datasets.packaged_modules.spark.spark" -> "numpy" [];
	"datasets.packaged_modules.spark.spark" -> "pyarrow" [];
	"datasets.packaged_modules.spark.spark" -> "datasets" [];
	"datasets.packaged_modules.spark.spark" -> "pyspark" [];
	"datasets.packaged_modules.spark.spark" -> "'pyspark.sql'" [];
	"datasets.arrow_writer" -> "json" [];
	"datasets.arrow_writer" -> "sys" [];
	"datasets.arrow_writer" -> "typing" [];
	"datasets.arrow_writer" -> "fsspec" [];
	"datasets.arrow_writer" -> "numpy" [];
	"datasets.arrow_writer" -> "pyarrow" [];
	"datasets.arrow_writer" -> "pdfplumber" [];
	"datasets.keyhash" -> "typing" [];
	"datasets.io.generator" -> "typing" [];
	"datasets.io.generator" -> "datasets" [];
	"datasets.packaged_modules.generator.generator" -> "dataclasses" [];
	"datasets.packaged_modules.generator.generator" -> "typing" [];
	"datasets.packaged_modules.generator.generator" -> "datasets" [];
	"datasets.utils.sharding" -> "numpy" [];
	"datasets.formatting" -> "typing" [];
	"datasets.formatting.jax_formatter" -> "sys" [];
	"datasets.formatting.jax_formatter" -> "typing" [];
	"datasets.formatting.jax_formatter" -> "numpy" [];
	"datasets.formatting.jax_formatter" -> "pyarrow" [];
	"datasets.formatting.jax_formatter" -> "datasets" [];
	"datasets.formatting.jax_formatter" -> "jax" [];
	"datasets.formatting.jax_formatter" -> "jaxlib" [];
	"datasets.formatting.jax_formatter" -> "'jaxlib.xla_client'" [];
	"datasets.formatting.jax_formatter" -> "'jax.numpy'" [];
	"datasets.formatting.jax_formatter" -> "'torchvision.io'" [];
	"datasets.formatting.jax_formatter" -> "torch" [];
	"datasets.formatting.tf_formatter" -> "sys" [];
	"datasets.formatting.tf_formatter" -> "typing" [];
	"datasets.formatting.tf_formatter" -> "numpy" [];
	"datasets.formatting.tf_formatter" -> "pyarrow" [];
	"datasets.formatting.tf_formatter" -> "datasets" [];
	"datasets.formatting.tf_formatter" -> "tensorflow" [];
	"datasets.formatting.tf_formatter" -> "'torchvision.io'" [];
	"datasets.formatting.tf_formatter" -> "torch" [];
	"datasets.formatting.torch_formatter" -> "sys" [];
	"datasets.formatting.torch_formatter" -> "typing" [];
	"datasets.formatting.torch_formatter" -> "numpy" [];
	"datasets.formatting.torch_formatter" -> "pyarrow" [];
	"datasets.formatting.torch_formatter" -> "datasets" [];
	"datasets.formatting.torch_formatter" -> "torch" [];
	"datasets.formatting.torch_formatter" -> "'torchvision.io'" [];
	"datasets.formatting.polars_formatter" -> "sys" [];
	"datasets.formatting.polars_formatter" -> "functools" [];
	"datasets.formatting.polars_formatter" -> "typing" [];
	"datasets.formatting.polars_formatter" -> "pyarrow" [];
	"datasets.formatting.polars_formatter" -> "datasets" [];
	"datasets.formatting.polars_formatter" -> "polars" [];
	"datasets.formatting.np_formatter" -> "sys" [];
	"datasets.formatting.np_formatter" -> "numpy" [];
	"datasets.formatting.np_formatter" -> "pyarrow" [];
	"datasets.formatting.np_formatter" -> "datasets" [];
	"datasets.formatting.np_formatter" -> "'torchvision.io'" [];
	"datasets.formatting.np_formatter" -> "torch" [];
	"datasets.formatting.formatting" -> "operator" [];
	"datasets.formatting.formatting" -> "functools" [];
	"datasets.formatting.formatting" -> "typing" [];
	"datasets.formatting.formatting" -> "numpy" [];
	"datasets.formatting.formatting" -> "pandas" [];
	"datasets.formatting.formatting" -> "pyarrow" [];
	"datasets.formatting.formatting" -> "copy" [];
	"datasets.inspect" -> "os" [];
	"datasets.inspect" -> "typing" [];
	"datasets.info" -> "copy" [];
	"datasets.info" -> "dataclasses" [];
	"datasets.info" -> "json" [];
	"datasets.info" -> "os" [];
	"datasets.info" -> "posixpath" [];
	"datasets.info" -> "pathlib" [];
	"datasets.info" -> "typing" [];
	"datasets.info" -> "fsspec" [];
	"datasets.info" -> "huggingface_hub" [];
	"datasets.fingerprint" -> "inspect" [];
	"datasets.fingerprint" -> "os" [];
	"datasets.fingerprint" -> "random" [];
	"datasets.fingerprint" -> "shutil" [];
	"datasets.fingerprint" -> "tempfile" [];
	"datasets.fingerprint" -> "weakref" [];
	"datasets.fingerprint" -> "functools" [];
	"datasets.fingerprint" -> "pathlib" [];
	"datasets.fingerprint" -> "typing" [];
	"datasets.fingerprint" -> "numpy" [];
	"datasets.fingerprint" -> "xxhash" [];
	"datasets.dataset_dict" -> "contextlib" [];
	"datasets.dataset_dict" -> "copy" [];
	"datasets.dataset_dict" -> "fnmatch" [];
	"datasets.dataset_dict" -> "json" [];
	"datasets.dataset_dict" -> "math" [];
	"datasets.dataset_dict" -> "posixpath" [];
	"datasets.dataset_dict" -> "re" [];
	"datasets.dataset_dict" -> "functools" [];
	"datasets.dataset_dict" -> "pathlib" [];
	"datasets.dataset_dict" -> "typing" [];
	"datasets.dataset_dict" -> "fsspec" [];
	"datasets.dataset_dict" -> "numpy" [];
	"datasets.dataset_dict" -> "huggingface_hub" [];
	"datasets.io.text" -> "typing" [];
	"datasets.io.text" -> "datasets" [];
	"datasets.io.parquet" -> "os" [];
	"datasets.io.parquet" -> "typing" [];
	"datasets.io.parquet" -> "fsspec" [];
	"datasets.io.parquet" -> "datasets" [];
	"datasets.io.json" -> "multiprocessing" [];
	"datasets.io.json" -> "os" [];
	"datasets.io.json" -> "typing" [];
	"datasets.io.json" -> "fsspec" [];
	"datasets.io.json" -> "datasets" [];
	"datasets.io.csv" -> "multiprocessing" [];
	"datasets.io.csv" -> "os" [];
	"datasets.io.csv" -> "typing" [];
	"datasets.io.csv" -> "fsspec" [];
	"datasets.io.csv" -> "datasets" [];
	"datasets.utils.doc_utils" -> "typing" [];
	"datasets.combine" -> "typing" [];
	"datasets.builder" -> "abc" [];
	"datasets.builder" -> "contextlib" [];
	"datasets.builder" -> "copy" [];
	"datasets.builder" -> "inspect" [];
	"datasets.builder" -> "os" [];
	"datasets.builder" -> "posixpath" [];
	"datasets.builder" -> "shutil" [];
	"datasets.builder" -> "textwrap" [];
	"datasets.builder" -> "time" [];
	"datasets.builder" -> "urllib" [];
	"datasets.builder" -> "dataclasses" [];
	"datasets.builder" -> "functools" [];
	"datasets.builder" -> "pathlib" [];
	"datasets.builder" -> "typing" [];
	"datasets.builder" -> "fsspec" [];
	"datasets.builder" -> "multiprocess" [];
	"datasets.streaming" -> "importlib" [];
	"datasets.streaming" -> "inspect" [];
	"datasets.streaming" -> "functools" [];
	"datasets.streaming" -> "typing" [];
	"datasets.utils.patching" -> "importlib" [];
	"datasets.arrow_reader" -> "copy" [];
	"datasets.arrow_reader" -> "math" [];
	"datasets.arrow_reader" -> "os" [];
	"datasets.arrow_reader" -> "re" [];
	"datasets.arrow_reader" -> "dataclasses" [];
	"datasets.arrow_reader" -> "functools" [];
	"datasets.arrow_reader" -> "typing" [];
	"datasets.arrow_reader" -> "pyarrow" [];
	"datasets.arrow_dataset" -> "asyncio" [];
	"datasets.arrow_dataset" -> "contextlib" [];
	"datasets.arrow_dataset" -> "copy" [];
	"datasets.arrow_dataset" -> "fnmatch" [];
	"datasets.arrow_dataset" -> "inspect" [];
	"datasets.arrow_dataset" -> "itertools" [];
	"datasets.arrow_dataset" -> "json" [];
	"datasets.arrow_dataset" -> "math" [];
	"datasets.arrow_dataset" -> "os" [];
	"datasets.arrow_dataset" -> "posixpath" [];
	"datasets.arrow_dataset" -> "re" [];
	"datasets.arrow_dataset" -> "shutil" [];
	"datasets.arrow_dataset" -> "sys" [];
	"datasets.arrow_dataset" -> "tempfile" [];
	"datasets.arrow_dataset" -> "time" [];
	"datasets.arrow_dataset" -> "warnings" [];
	"datasets.arrow_dataset" -> "weakref" [];
	"datasets.arrow_dataset" -> "collections" [];
	"datasets.arrow_dataset" -> "functools" [];
	"datasets.arrow_dataset" -> "io" [];
	"datasets.arrow_dataset" -> "pathlib" [];
	"datasets.arrow_dataset" -> "random" [];
	"datasets.arrow_dataset" -> "typing" [];
	"datasets.arrow_dataset" -> "fsspec" [];
	"datasets.arrow_dataset" -> "numpy" [];
	"datasets.arrow_dataset" -> "pandas" [];
	"datasets.arrow_dataset" -> "pyarrow" [];
	"datasets.arrow_dataset" -> "huggingface_hub" [];
	"datasets.arrow_dataset" -> "multiprocess" [];
	"datasets.arrow_dataset" -> "sqlite3" [];
	"datasets.arrow_dataset" -> "polars" [];
	"datasets.arrow_dataset" -> "pyspark" [];
	"datasets.arrow_dataset" -> "sqlalchemy" [];
	"datasets.arrow_dataset" -> "tensorflow" [];
	"datasets.arrow_dataset" -> "torch" [];
	"datasets.arrow_dataset" -> "'jax.numpy'" [];
	"datasets.io.sql" -> "multiprocessing" [];
	"datasets.io.sql" -> "typing" [];
	"datasets.io.sql" -> "datasets" [];
	"datasets.io.sql" -> "sqlite3" [];
	"datasets.io.sql" -> "sqlalchemy" [];
	"datasets.utils.tf_utils" -> "os" [];
	"datasets.utils.tf_utils" -> "warnings" [];
	"datasets.utils.tf_utils" -> "functools" [];
	"datasets.utils.tf_utils" -> "math" [];
	"datasets.utils.tf_utils" -> "uuid" [];
	"datasets.utils.tf_utils" -> "numpy" [];
	"datasets.utils.tf_utils" -> "pyarrow" [];
	"datasets.utils.tf_utils" -> "multiprocess" [];
	"datasets.utils.tf_utils" -> "datasets" [];
	"datasets.utils.tf_utils" -> "tensorflow" [];
	"datasets.utils.stratify" -> "numpy" [];
	"datasets.search" -> "os" [];
	"datasets.search" -> "tempfile" [];
	"datasets.search" -> "pathlib" [];
	"datasets.search" -> "typing" [];
	"datasets.search" -> "fsspec" [];
	"datasets.search" -> "numpy" [];
	"datasets.search" -> "elasticsearch" [];
	"datasets.search" -> "faiss" [];
	"datasets.search" -> "'elasticsearch.helpers'" [];
	"datasets.config" -> "importlib" [];
	"datasets.config" -> "logging" [];
	"datasets.config" -> "os" [];
	"datasets.config" -> "platform" [];
	"datasets.config" -> "pathlib" [];
	"datasets.config" -> "typing" [];
	"datasets.config" -> "huggingface_hub" [];
	"datasets.config" -> "packaging" [];
	"langchain_community.document_loaders.html_bs" -> "logging" [];
	"langchain_community.document_loaders.html_bs" -> "pathlib" [];
	"langchain_community.document_loaders.html_bs" -> "typing" [];
	"langchain_community.document_loaders.html_bs" -> "bs4" [];
	"langchain_community.document_loaders.html" -> "pathlib" [];
	"langchain_community.document_loaders.html" -> "typing" [];
	"langchain_community.document_loaders.html" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.hn" -> "typing" [];
	"langchain_community.document_loaders.gutenberg" -> "typing" [];
	"langchain_community.document_loaders.googledrive" -> "pathlib" [];
	"langchain_community.document_loaders.googledrive" -> "typing" [];
	"langchain_community.document_loaders.googledrive" -> "pydantic" [];
	"langchain_community.document_loaders.googledrive" -> "google_auth_oauthlib" [];
	"langchain_community.document_loaders.googledrive" -> "googleapiclient" [];
	"langchain_community.document_loaders.googledrive" -> "io" [];
	"langchain_community.document_loaders.googledrive" -> "'googleapiclient.discovery'" [];
	"langchain_community.document_loaders.googledrive" -> "'googleapiclient.errors'" [];
	"langchain_community.document_loaders.googledrive" -> "'googleapiclient.http'" [];
	"langchain_community.document_loaders.googledrive" -> "PyPDF2" [];
	"langchain_community.document_loaders.google_speech_to_text" -> "__future__" [];
	"langchain_community.document_loaders.google_speech_to_text" -> "typing" [];
	"langchain_community.document_loaders.google_speech_to_text" -> "'google.cloud.speech_v2'" [];
	"langchain_community.document_loaders.glue_catalog" -> "__future__" [];
	"langchain_community.document_loaders.glue_catalog" -> "typing" [];
	"langchain_community.document_loaders.glue_catalog" -> "'boto3.session'" [];
	"langchain_community.document_loaders.glue_catalog" -> "boto3" [];
	"langchain_community.document_loaders.github" -> "base64" [];
	"langchain_community.document_loaders.github" -> "abc" [];
	"langchain_community.document_loaders.github" -> "datetime" [];
	"langchain_community.document_loaders.github" -> "typing" [];
	"langchain_community.document_loaders.github" -> "requests" [];
	"langchain_community.document_loaders.github" -> "pydantic" [];
	"langchain_community.document_loaders.gitbook" -> "warnings" [];
	"langchain_community.document_loaders.gitbook" -> "typing" [];
	"langchain_community.document_loaders.gitbook" -> "bs4" [];
	"langchain_community.document_loaders.git" -> "os" [];
	"langchain_community.document_loaders.git" -> "typing" [];
	"langchain_community.document_loaders.git" -> "git" [];
	"git" -> "typing" [];
	"git" -> "types" [];
	"git" -> "warnings" [];
	"git" -> "importlib" [];
	"git.util" -> "sys" [];
	"git.util" -> "abc" [];
	"git.util" -> "contextlib" [];
	"git.util" -> "functools" [];
	"git.util" -> "getpass" [];
	"git.util" -> "logging" [];
	"git.util" -> "os" [];
	"git.util" -> "os.path" [];
	"git.util" -> "pathlib" [];
	"git.util" -> "platform" [];
	"git.util" -> "re" [];
	"git.util" -> "shutil" [];
	"git.util" -> "stat" [];
	"git.util" -> "subprocess" [];
	"git.util" -> "time" [];
	"git.util" -> "warnings" [];
	"git.util" -> "typing" [];
	"git.util" -> "unittest" [];
	"git.repo.base" -> "__future__" [];
	"git.repo.base" -> "gc" [];
	"git.repo.base" -> "logging" [];
	"git.repo.base" -> "os" [];
	"git.repo.base" -> "os.path" [];
	"git.repo.base" -> "pathlib" [];
	"git.repo.base" -> "re" [];
	"git.repo.base" -> "shlex" [];
	"git.repo.base" -> "sys" [];
	"git.repo.base" -> "warnings" [];
	"git.repo.base" -> "gitdb" [];
	"git.repo.base" -> "typing" [];
	"git.refs.symbolic" -> "os" [];
	"git.refs.symbolic" -> "typing" [];
	"git.refs.log" -> "mmap" [];
	"git.refs.log" -> "os.path" [];
	"git.refs.log" -> "re" [];
	"git.refs.log" -> "time" [];
	"git.refs.log" -> "typing" [];
	"git.refs.log" -> "io" [];
	"git.objects.util" -> "abc" [];
	"git.objects.util" -> "calendar" [];
	"git.objects.util" -> "collections" [];
	"git.objects.util" -> "datetime" [];
	"git.objects.util" -> "re" [];
	"git.objects.util" -> "string" [];
	"git.objects.util" -> "time" [];
	"git.objects.util" -> "warnings" [];
	"git.objects.util" -> "typing" [];
	"git.objects.util" -> "io" [];
	"git.objects.util" -> "subprocess" [];
	"git.objects.tree" -> "sys" [];
	"git.objects.tree" -> "typing" [];
	"git.objects.tree" -> "typing_extensions" [];
	"git.objects.tree" -> "io" [];
	"git.objects.fun" -> "stat" [];
	"git.objects.fun" -> "typing" [];
	"git.objects.fun" -> "_typeshed" [];
	"git.objects.fun" -> "git" [];
	"git.objects.tag" -> "sys" [];
	"git.objects.tag" -> "typing" [];
	"git.objects.tag" -> "typing_extensions" [];
	"git.objects.blob" -> "mimetypes" [];
	"git.objects.blob" -> "sys" [];
	"git.objects.blob" -> "typing" [];
	"git.objects.blob" -> "typing_extensions" [];
	"git.objects.commit" -> "collections" [];
	"git.objects.commit" -> "datetime" [];
	"git.objects.commit" -> "io" [];
	"git.objects.commit" -> "logging" [];
	"git.objects.commit" -> "os" [];
	"git.objects.commit" -> "re" [];
	"git.objects.commit" -> "subprocess" [];
	"git.objects.commit" -> "sys" [];
	"git.objects.commit" -> "time" [];
	"git.objects.commit" -> "warnings" [];
	"git.objects.commit" -> "gitdb" [];
	"git.objects.commit" -> "typing" [];
	"git.objects.commit" -> "typing_extensions" [];
	"git.objects.base" -> "os.path" [];
	"git.objects.base" -> "typing" [];
	"git.refs.reference" -> "typing" [];
	"gitdb.fun" -> "zlib" [];
	"gitdb.fun" -> "mmap" [];
	"gitdb.fun" -> "itertools" [];
	"gitdb.fun" -> "functools" [];
	"gitdb.fun" -> "io" [];
	"gitdb.fun" -> "gitdb_speedups" [];
	"git.objects.submodule.base" -> "gc" [];
	"git.objects.submodule.base" -> "io" [];
	"git.objects.submodule.base" -> "logging" [];
	"git.objects.submodule.base" -> "os" [];
	"git.objects.submodule.base" -> "os.path" [];
	"git.objects.submodule.base" -> "stat" [];
	"git.objects.submodule.base" -> "sys" [];
	"git.objects.submodule.base" -> "uuid" [];
	"git.objects.submodule.base" -> "git" [];
	"git.objects.submodule.base" -> "typing" [];
	"git.objects.submodule.base" -> "typing_extensions" [];
	"git.objects.submodule.util" -> "io" [];
	"git.objects.submodule.util" -> "weakref" [];
	"git.objects.submodule.util" -> "git" [];
	"git.objects.submodule.util" -> "typing" [];
	"git.objects.submodule.root" -> "logging" [];
	"git.objects.submodule.root" -> "git" [];
	"git.objects.submodule.root" -> "typing" [];
	"git.repo.fun" -> "__future__" [];
	"git.repo.fun" -> "os" [];
	"git.repo.fun" -> "os.path" [];
	"git.repo.fun" -> "pathlib" [];
	"git.repo.fun" -> "stat" [];
	"git.repo.fun" -> "string" [];
	"git.repo.fun" -> "typing" [];
	"git.refs.tag" -> "typing" [];
	"gitdb.db.loose" -> "contextlib" [];
	"gitdb.db.loose" -> "tempfile" [];
	"gitdb.db.loose" -> "os" [];
	"gitdb.db.loose" -> "sys" [];
	"gitdb.db.loose" -> "time" [];
	"gitdb.db.ref" -> "codecs" [];
	"gitdb.db.git" -> "os" [];
	"gitdb.db.pack" -> "functools" [];
	"gitdb.db.pack" -> "os" [];
	"gitdb.db.pack" -> "glob" [];
	"gitdb.pack" -> "zlib" [];
	"gitdb.pack" -> "'gitdb_speedups._perf'" [];
	"gitdb.pack" -> "struct" [];
	"gitdb.pack" -> "binascii" [];
	"gitdb.pack" -> "tempfile" [];
	"gitdb.pack" -> "array" [];
	"gitdb.pack" -> "os" [];
	"gitdb.pack" -> "sys" [];
	"gitdb.db.mem" -> "io" [];
	"gitdb.stream" -> "io" [];
	"gitdb.stream" -> "mmap" [];
	"gitdb.stream" -> "os" [];
	"gitdb.stream" -> "sys" [];
	"gitdb.stream" -> "zlib" [];
	"gitdb.stream" -> "'gitdb_speedups._perf'" [];
	"gitdb.db.base" -> "itertools" [];
	"gitdb.db.base" -> "functools" [];
	"git.index.util" -> "contextlib" [];
	"git.index.util" -> "functools" [];
	"git.index.util" -> "os" [];
	"git.index.util" -> "os.path" [];
	"git.index.util" -> "struct" [];
	"git.index.util" -> "tempfile" [];
	"git.index.util" -> "types" [];
	"git.index.util" -> "typing" [];
	"git.index.typ" -> "binascii" [];
	"git.index.typ" -> "pathlib" [];
	"git.index.typ" -> "typing" [];
	"git.index.base" -> "contextlib" [];
	"git.index.base" -> "datetime" [];
	"git.index.base" -> "glob" [];
	"git.index.base" -> "io" [];
	"git.index.base" -> "os" [];
	"git.index.base" -> "os.path" [];
	"git.index.base" -> "stat" [];
	"git.index.base" -> "subprocess" [];
	"git.index.base" -> "sys" [];
	"git.index.base" -> "tempfile" [];
	"git.index.base" -> "typing" [];
	"git.index.fun" -> "io" [];
	"git.index.fun" -> "os" [];
	"git.index.fun" -> "os.path" [];
	"git.index.fun" -> "pathlib" [];
	"git.index.fun" -> "stat" [];
	"git.index.fun" -> "subprocess" [];
	"git.index.fun" -> "sys" [];
	"git.index.fun" -> "typing" [];
	"git.remote" -> "contextlib" [];
	"git.remote" -> "logging" [];
	"git.remote" -> "re" [];
	"git.remote" -> "typing" [];
	"git.cmd" -> "__future__" [];
	"git.cmd" -> "contextlib" [];
	"git.cmd" -> "io" [];
	"git.cmd" -> "itertools" [];
	"git.cmd" -> "logging" [];
	"git.cmd" -> "os" [];
	"git.cmd" -> "re" [];
	"git.cmd" -> "signal" [];
	"git.cmd" -> "subprocess" [];
	"git.cmd" -> "sys" [];
	"git.cmd" -> "textwrap" [];
	"git.cmd" -> "threading" [];
	"git.cmd" -> "warnings" [];
	"git.cmd" -> "typing" [];
	"git.db" -> "typing" [];
	"git.diff" -> "enum" [];
	"git.diff" -> "re" [];
	"git.diff" -> "warnings" [];
	"git.diff" -> "typing" [];
	"git.diff" -> "subprocess" [];
	"git.refs.remote" -> "os" [];
	"git.refs.remote" -> "typing" [];
	"git.refs.head" -> "typing" [];
	"git.config" -> "abc" [];
	"git.config" -> "configparser" [];
	"git.config" -> "fnmatch" [];
	"git.config" -> "functools" [];
	"git.config" -> "inspect" [];
	"git.config" -> "io" [];
	"git.config" -> "logging" [];
	"git.config" -> "os" [];
	"git.config" -> "os.path" [];
	"git.config" -> "re" [];
	"git.config" -> "sys" [];
	"git.config" -> "typing" [];
	"git.config" -> "collections" [];
	"git.compat" -> "locale" [];
	"git.compat" -> "os" [];
	"git.compat" -> "sys" [];
	"git.compat" -> "warnings" [];
	"git.compat" -> "typing" [];
	"git.types" -> "os" [];
	"git.types" -> "sys" [];
	"git.types" -> "typing" [];
	"git.types" -> "warnings" [];
	"git.types" -> "typing_extensions" [];
	"git.exc" -> "typing" [];
	"gitdb.util" -> "binascii" [];
	"gitdb.util" -> "os" [];
	"gitdb.util" -> "mmap" [];
	"gitdb.util" -> "sys" [];
	"gitdb.util" -> "time" [];
	"gitdb.util" -> "errno" [];
	"gitdb.util" -> "io" [];
	"gitdb.util" -> "smmap" [];
	"gitdb.util" -> "hashlib" [];
	"gitdb.util" -> "struct" [];
	"gitdb.util" -> "sha" [];
	"smmap.buf" -> "sys" [];
	"smmap.mman" -> "sys" [];
	"smmap.mman" -> "functools" [];
	"smmap.util" -> "os" [];
	"smmap.util" -> "sys" [];
	"smmap.util" -> "mmap" [];
	"langchain_community.document_loaders.geodataframe" -> "typing" [];
	"langchain_community.document_loaders.geodataframe" -> "geopandas" [];
	"langchain_community.document_loaders.gcs_file" -> "os" [];
	"langchain_community.document_loaders.gcs_file" -> "tempfile" [];
	"langchain_community.document_loaders.gcs_file" -> "typing" [];
	"langchain_community.document_loaders.gcs_directory" -> "logging" [];
	"langchain_community.document_loaders.gcs_directory" -> "typing" [];
	"langchain_community.document_loaders.firecrawl" -> "warnings" [];
	"langchain_community.document_loaders.firecrawl" -> "typing" [];
	"langchain_community.document_loaders.firecrawl" -> "firecrawl" [];
	"langchain_community.document_loaders.figma" -> "json" [];
	"langchain_community.document_loaders.figma" -> "typing" [];
	"langchain_community.document_loaders.fauna" -> "typing" [];
	"langchain_community.document_loaders.fauna" -> "fauna" [];
	"langchain_community.document_loaders.fauna" -> "'fauna.client'" [];
	"langchain_community.document_loaders.fauna" -> "'fauna.encoding'" [];
	"langchain_community.document_loaders.facebook_chat" -> "datetime" [];
	"langchain_community.document_loaders.facebook_chat" -> "json" [];
	"langchain_community.document_loaders.facebook_chat" -> "pathlib" [];
	"langchain_community.document_loaders.facebook_chat" -> "typing" [];
	"langchain_community.document_loaders.excel" -> "pathlib" [];
	"langchain_community.document_loaders.excel" -> "typing" [];
	"langchain_community.document_loaders.excel" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.evernote" -> "hashlib" [];
	"langchain_community.document_loaders.evernote" -> "logging" [];
	"langchain_community.document_loaders.evernote" -> "base64" [];
	"langchain_community.document_loaders.evernote" -> "pathlib" [];
	"langchain_community.document_loaders.evernote" -> "time" [];
	"langchain_community.document_loaders.evernote" -> "typing" [];
	"langchain_community.document_loaders.evernote" -> "html2text" [];
	"langchain_community.document_loaders.evernote" -> "lxml" [];
	"langchain_community.document_loaders.etherscan" -> "os" [];
	"langchain_community.document_loaders.etherscan" -> "re" [];
	"langchain_community.document_loaders.etherscan" -> "typing" [];
	"langchain_community.document_loaders.etherscan" -> "requests" [];
	"langchain_community.document_loaders.epub" -> "pathlib" [];
	"langchain_community.document_loaders.epub" -> "typing" [];
	"langchain_community.document_loaders.epub" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.email" -> "os" [];
	"langchain_community.document_loaders.email" -> "pathlib" [];
	"langchain_community.document_loaders.email" -> "typing" [];
	"langchain_community.document_loaders.email" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.email" -> "'unstructured.file_utils'" [];
	"langchain_community.document_loaders.email" -> "extract_msg" [];
	"langchain_community.document_loaders.duckdb_loader" -> "typing" [];
	"langchain_community.document_loaders.duckdb_loader" -> "duckdb" [];
	"langchain_community.document_loaders.dropbox" -> "os" [];
	"langchain_community.document_loaders.dropbox" -> "tempfile" [];
	"langchain_community.document_loaders.dropbox" -> "pathlib" [];
	"langchain_community.document_loaders.dropbox" -> "typing" [];
	"langchain_community.document_loaders.dropbox" -> "pydantic" [];
	"langchain_community.document_loaders.dropbox" -> "dropbox" [];
	"langchain_community.document_loaders.dropbox" -> "'dropbox.files'" [];
	"langchain_community.document_loaders.docusaurus" -> "typing" [];
	"langchain_community.document_loaders.docugami" -> "hashlib" [];
	"langchain_community.document_loaders.docugami" -> "io" [];
	"langchain_community.document_loaders.docugami" -> "logging" [];
	"langchain_community.document_loaders.docugami" -> "os" [];
	"langchain_community.document_loaders.docugami" -> "pathlib" [];
	"langchain_community.document_loaders.docugami" -> "typing" [];
	"langchain_community.document_loaders.docugami" -> "requests" [];
	"langchain_community.document_loaders.docugami" -> "pydantic" [];
	"langchain_community.document_loaders.docugami" -> "lxml" [];
	"langchain_community.document_loaders.docugami" -> "dgml_utils" [];
	"langchain_community.document_loaders.docugami" -> "'dgml_utils.segmentation'" [];
	"langchain_community.document_loaders.doc_intelligence" -> "__future__" [];
	"langchain_community.document_loaders.doc_intelligence" -> "typing" [];
	"langchain_community.document_loaders.doc_intelligence" -> "'azure.core'" [];
	"langchain_community.document_loaders.discord" -> "__future__" [];
	"langchain_community.document_loaders.discord" -> "typing" [];
	"langchain_community.document_loaders.discord" -> "pandas" [];
	"langchain_community.document_loaders.directory" -> "concurrent" [];
	"langchain_community.document_loaders.directory" -> "logging" [];
	"langchain_community.document_loaders.directory" -> "random" [];
	"langchain_community.document_loaders.directory" -> "pathlib" [];
	"langchain_community.document_loaders.directory" -> "typing" [];
	"langchain_community.document_loaders.directory" -> "tqdm" [];
	"langchain_community.document_loaders.diffbot" -> "logging" [];
	"langchain_community.document_loaders.diffbot" -> "typing" [];
	"langchain_community.document_loaders.diffbot" -> "requests" [];
	"langchain_community.document_loaders.dedoc" -> "html" [];
	"langchain_community.document_loaders.dedoc" -> "json" [];
	"langchain_community.document_loaders.dedoc" -> "os" [];
	"langchain_community.document_loaders.dedoc" -> "abc" [];
	"langchain_community.document_loaders.dedoc" -> "typing" [];
	"langchain_community.document_loaders.dedoc" -> "tempfile" [];
	"langchain_community.document_loaders.dedoc" -> "dedoc" [];
	"langchain_community.document_loaders.dedoc" -> "'dedoc.utils'" [];
	"langchain_community.document_loaders.dedoc" -> "requests" [];
	"langchain_community.document_loaders.dataframe" -> "typing" [];
	"langchain_community.document_loaders.dataframe" -> "pandas" [];
	"langchain_community.document_loaders.dataframe" -> "modin" [];
	"langchain_community.document_loaders.datadog_logs" -> "datetime" [];
	"langchain_community.document_loaders.datadog_logs" -> "typing" [];
	"langchain_community.document_loaders.datadog_logs" -> "datadog_api_client" [];
	"langchain_community.document_loaders.datadog_logs" -> "'datadog_api_client.v2'" [];
	"langchain_community.document_loaders.cube_semantic" -> "json" [];
	"langchain_community.document_loaders.cube_semantic" -> "logging" [];
	"langchain_community.document_loaders.cube_semantic" -> "time" [];
	"langchain_community.document_loaders.cube_semantic" -> "typing" [];
	"langchain_community.document_loaders.cube_semantic" -> "requests" [];
	"langchain_community.document_loaders.csv_loader" -> "csv" [];
	"langchain_community.document_loaders.csv_loader" -> "io" [];
	"langchain_community.document_loaders.csv_loader" -> "pathlib" [];
	"langchain_community.document_loaders.csv_loader" -> "typing" [];
	"langchain_community.document_loaders.csv_loader" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.couchbase" -> "logging" [];
	"langchain_community.document_loaders.couchbase" -> "typing" [];
	"langchain_community.document_loaders.couchbase" -> "couchbase" [];
	"langchain_community.document_loaders.couchbase" -> "'couchbase.cluster'" [];
	"langchain_community.document_loaders.couchbase" -> "'couchbase.options'" [];
	"langchain_community.document_loaders.couchbase" -> "datetime" [];
	"langchain_community.document_loaders.conllu" -> "csv" [];
	"langchain_community.document_loaders.conllu" -> "pathlib" [];
	"langchain_community.document_loaders.conllu" -> "typing" [];
	"langchain_community.document_loaders.confluence" -> "logging" [];
	"langchain_community.document_loaders.confluence" -> "enum" [];
	"langchain_community.document_loaders.confluence" -> "io" [];
	"langchain_community.document_loaders.confluence" -> "typing" [];
	"langchain_community.document_loaders.confluence" -> "requests" [];
	"langchain_community.document_loaders.confluence" -> "tenacity" [];
	"langchain_community.document_loaders.confluence" -> "atlassian" [];
	"langchain_community.document_loaders.confluence" -> "markdownify" [];
	"langchain_community.document_loaders.confluence" -> "bs4" [];
	"langchain_community.document_loaders.confluence" -> "PIL" [];
	"langchain_community.document_loaders.confluence" -> "pytesseract" [];
	"langchain_community.document_loaders.confluence" -> "pdf2image" [];
	"langchain_community.document_loaders.confluence" -> "docx2txt" [];
	"langchain_community.document_loaders.confluence" -> "os" [];
	"langchain_community.document_loaders.confluence" -> "xlrd" [];
	"langchain_community.document_loaders.confluence" -> "pandas" [];
	"langchain_community.document_loaders.confluence" -> "reportlab" [];
	"langchain_community.document_loaders.confluence" -> "svglib" [];
	"langchain_community.document_loaders.concurrent" -> "__future__" [];
	"langchain_community.document_loaders.concurrent" -> "pathlib" [];
	"langchain_community.document_loaders.concurrent" -> "typing" [];
	"langchain_community.document_loaders.generic" -> "__future__" [];
	"langchain_community.document_loaders.generic" -> "pathlib" [];
	"langchain_community.document_loaders.generic" -> "typing" [];
	"langchain_community.document_loaders.generic" -> "langchain_text_splitters" [];
	"langchain_community.document_loaders.college_confidential" -> "typing" [];
	"langchain_community.document_loaders.chromium" -> "asyncio" [];
	"langchain_community.document_loaders.chromium" -> "logging" [];
	"langchain_community.document_loaders.chromium" -> "typing" [];
	"langchain_community.document_loaders.chromium" -> "playwright" [];
	"langchain_community.document_loaders.chromium" -> "'playwright.async_api'" [];
	"langchain_community.document_loaders.chm" -> "pathlib" [];
	"langchain_community.document_loaders.chm" -> "typing" [];
	"langchain_community.document_loaders.chm" -> "chm" [];
	"langchain_community.document_loaders.chm" -> "'unstructured.partition'" [];
	"langchain_community.document_loaders.chm" -> "bs4" [];
	"langchain_community.document_loaders.chatgpt" -> "datetime" [];
	"langchain_community.document_loaders.chatgpt" -> "json" [];
	"langchain_community.document_loaders.chatgpt" -> "typing" [];
	"langchain_community.document_loaders.cassandra" -> "__future__" [];
	"langchain_community.document_loaders.cassandra" -> "typing" [];
	"langchain_community.document_loaders.cassandra" -> "'cassandra.cluster'" [];
	"langchain_community.document_loaders.cassandra" -> "'cassandra.pool'" [];
	"langchain_community.document_loaders.cassandra" -> "'cassandra.query'" [];
	"langchain_community.document_loaders.cassandra" -> "cassio" [];
	"langchain_community.utilities.cassandra" -> "__future__" [];
	"langchain_community.utilities.cassandra" -> "asyncio" [];
	"langchain_community.utilities.cassandra" -> "enum" [];
	"langchain_community.utilities.cassandra" -> "typing" [];
	"langchain_community.utilities.cassandra" -> "cassandra" [];
	"langchain_community.document_loaders.browserless" -> "typing" [];
	"langchain_community.document_loaders.browserless" -> "requests" [];
	"langchain_community.document_loaders.browserbase" -> "typing" [];
	"langchain_community.document_loaders.browserbase" -> "browserbase" [];
	"langchain_community.document_loaders.browserbase" -> "playwright" [];
	"langchain_community.document_loaders.brave_search" -> "typing" [];
	"langchain_community.document_loaders.brave_search" -> "pydantic" [];
	"langchain_community.document_loaders.blockchain" -> "os" [];
	"langchain_community.document_loaders.blockchain" -> "re" [];
	"langchain_community.document_loaders.blockchain" -> "time" [];
	"langchain_community.document_loaders.blockchain" -> "enum" [];
	"langchain_community.document_loaders.blockchain" -> "typing" [];
	"langchain_community.document_loaders.blockchain" -> "requests" [];
	"langchain_community.document_loaders.blob_loaders" -> "importlib" [];
	"langchain_community.document_loaders.blob_loaders" -> "typing" [];
	"langchain_community.document_loaders.blob_loaders.youtube_audio" -> "typing" [];
	"langchain_community.document_loaders.blob_loaders.youtube_audio" -> "yt_dlp" [];
	"yt_dlp" -> "sys" [];
	"yt_dlp" -> "collections" [];
	"yt_dlp" -> "getpass" [];
	"yt_dlp" -> "itertools" [];
	"yt_dlp" -> "optparse" [];
	"yt_dlp" -> "os" [];
	"yt_dlp" -> "re" [];
	"yt_dlp" -> "traceback" [];
	"yt_dlp" -> "msvcrt" [];
	"yt_dlp" -> "Cryptodome" [];
	"yt_dlp" -> "requests" [];
	"yt_dlp" -> "mutagen" [];
	"yt_dlp" -> "brotli" [];
	"yt_dlp" -> "certifi" [];
	"yt_dlp" -> "secretstorage" [];
	"yt_dlp" -> "curl_cffi" [];
	"urllib3.contrib.securetransport" -> "__future__" [];
	"urllib3.contrib.securetransport" -> "contextlib" [];
	"urllib3.contrib.securetransport" -> "ctypes" [];
	"urllib3.contrib.securetransport" -> "errno" [];
	"urllib3.contrib.securetransport" -> "os.path" [];
	"urllib3.contrib.securetransport" -> "shutil" [];
	"urllib3.contrib.securetransport" -> "socket" [];
	"urllib3.contrib.securetransport" -> "ssl" [];
	"urllib3.contrib.securetransport" -> "struct" [];
	"urllib3.contrib.securetransport" -> "threading" [];
	"urllib3.contrib.securetransport" -> "weakref" [];
	"urllib3.contrib.securetransport" -> "six" [];
	"urllib3.contrib.ntlmpool" -> "__future__" [];
	"urllib3.contrib.ntlmpool" -> "warnings" [];
	"urllib3.contrib.ntlmpool" -> "logging" [];
	"urllib3.contrib.ntlmpool" -> "ntlm" [];
	"urllib3.contrib.appengine" -> "__future__" [];
	"urllib3.contrib.appengine" -> "io" [];
	"urllib3.contrib.appengine" -> "logging" [];
	"urllib3.contrib.appengine" -> "warnings" [];
	"urllib3.contrib.appengine" -> "'urllib3.packages.six.moves.urllib.parse'" [];
	"urllib3.contrib.appengine" -> "'google.appengine'" [];
	"urllib3.contrib._securetransport.low_level" -> "base64" [];
	"urllib3.contrib._securetransport.low_level" -> "ctypes" [];
	"urllib3.contrib._securetransport.low_level" -> "itertools" [];
	"urllib3.contrib._securetransport.low_level" -> "os" [];
	"urllib3.contrib._securetransport.low_level" -> "re" [];
	"urllib3.contrib._securetransport.low_level" -> "ssl" [];
	"urllib3.contrib._securetransport.low_level" -> "struct" [];
	"urllib3.contrib._securetransport.low_level" -> "tempfile" [];
	"urllib3.contrib._securetransport.bindings" -> "__future__" [];
	"urllib3.contrib._securetransport.bindings" -> "platform" [];
	"urllib3.contrib._securetransport.bindings" -> "ctypes" [];
	"requests.help" -> "json" [];
	"requests.help" -> "platform" [];
	"requests.help" -> "ssl" [];
	"requests.help" -> "sys" [];
	"requests.help" -> "idna" [];
	"requests.help" -> "charset_normalizer" [];
	"requests.help" -> "chardet" [];
	"requests.help" -> "cryptography" [];
	"requests.help" -> "OpenSSL" [];
	"yt_dlp.utils._deprecated" -> "warnings" [];
	"yt_dlp.utils._deprecated" -> "re" [];
	"yt_dlp.utils._deprecated" -> "struct" [];
	"yt_dlp.compat.compat_utils" -> "collections" [];
	"yt_dlp.compat.compat_utils" -> "contextlib" [];
	"yt_dlp.compat.compat_utils" -> "functools" [];
	"yt_dlp.compat.compat_utils" -> "importlib" [];
	"yt_dlp.compat.compat_utils" -> "sys" [];
	"yt_dlp.compat.compat_utils" -> "types" [];
	"yt_dlp.compat" -> "os" [];
	"yt_dlp.compat.shutil" -> "shutil" [];
	"yt_dlp.compat.shutil" -> "sys" [];
	"yt_dlp.compat.shutil" -> "errno" [];
	"yt_dlp.compat.shutil" -> "os" [];
	"yt_dlp.compat.urllib" -> "urllib" [];
	"yt_dlp.compat.urllib.request" -> "os" [];
	"yt_dlp.compat.urllib.request" -> "sys" [];
	"yt_dlp.networking" -> "warnings" [];
	"yt_dlp.networking._curlcffi" -> "__future__" [];
	"yt_dlp.networking._curlcffi" -> "io" [];
	"yt_dlp.networking._curlcffi" -> "itertools" [];
	"yt_dlp.networking._curlcffi" -> "math" [];
	"yt_dlp.networking._curlcffi" -> "re" [];
	"yt_dlp.networking._curlcffi" -> "'curl_cffi.requests'" [];
	"yt_dlp.networking._curlcffi" -> "'curl_cffi.const'" [];
	"yt_dlp.dependencies" -> "brotlicffi" [];
	"yt_dlp.dependencies" -> "brotli" [];
	"yt_dlp.dependencies" -> "certifi" [];
	"yt_dlp.dependencies" -> "os.path" [];
	"yt_dlp.dependencies" -> "mutagen" [];
	"yt_dlp.dependencies" -> "secretstorage" [];
	"yt_dlp.dependencies" -> "sqlite3" [];
	"yt_dlp.dependencies" -> "requests" [];
	"yt_dlp.dependencies" -> "xattr" [];
	"yt_dlp.dependencies" -> "curl_cffi" [];
	"yt_dlp.dependencies.Cryptodome" -> "Cryptodome" [];
	"yt_dlp.dependencies.Cryptodome" -> "Crypto" [];
	"yt_dlp.dependencies.Cryptodome" -> "'Cryptodome.Cipher'" [];
	"yt_dlp.dependencies.Cryptodome" -> "'Cryptodome.Hash'" [];
	"yt_dlp.dependencies.Cryptodome" -> "'Cryptodome.PublicKey'" [];
	"yt_dlp.dependencies.Cryptodome" -> "'Crypto.Cipher'" [];
	"yt_dlp.dependencies.Cryptodome" -> "'Crypto.Hash'" [];
	"yt_dlp.dependencies.Cryptodome" -> "'Crypto.PublicKey'" [];
	"yt_dlp.networking.exceptions" -> "__future__" [];
	"yt_dlp.networking.exceptions" -> "typing" [];
	"yt_dlp.networking._helper" -> "__future__" [];
	"yt_dlp.networking._helper" -> "contextlib" [];
	"yt_dlp.networking._helper" -> "functools" [];
	"yt_dlp.networking._helper" -> "os" [];
	"yt_dlp.networking._helper" -> "socket" [];
	"yt_dlp.networking._helper" -> "ssl" [];
	"yt_dlp.networking._helper" -> "sys" [];
	"yt_dlp.networking._helper" -> "typing" [];
	"yt_dlp.socks" -> "collections" [];
	"yt_dlp.socks" -> "socket" [];
	"yt_dlp.socks" -> "struct" [];
	"yt_dlp.networking._websockets" -> "__future__" [];
	"yt_dlp.networking._websockets" -> "contextlib" [];
	"yt_dlp.networking._websockets" -> "functools" [];
	"yt_dlp.networking._websockets" -> "io" [];
	"yt_dlp.networking._websockets" -> "logging" [];
	"yt_dlp.networking._websockets" -> "ssl" [];
	"yt_dlp.networking._websockets" -> "sys" [];
	"yt_dlp.networking._websockets" -> "'websockets.version'" [];
	"yt_dlp.networking._websockets" -> "'websockets.sync'" [];
	"yt_dlp.networking._websockets" -> "'websockets.uri'" [];
	"yt_dlp.networking.websocket" -> "__future__" [];
	"yt_dlp.networking.websocket" -> "abc" [];
	"yt_dlp.networking._requests" -> "__future__" [];
	"yt_dlp.networking._requests" -> "contextlib" [];
	"yt_dlp.networking._requests" -> "functools" [];
	"yt_dlp.networking._requests" -> "logging" [];
	"yt_dlp.networking._requests" -> "re" [];
	"yt_dlp.networking._requests" -> "socket" [];
	"yt_dlp.networking._requests" -> "warnings" [];
	"yt_dlp.networking._urllib" -> "__future__" [];
	"yt_dlp.networking._urllib" -> "functools" [];
	"yt_dlp.networking._urllib" -> "io" [];
	"yt_dlp.networking._urllib" -> "ssl" [];
	"yt_dlp.networking._urllib" -> "zlib" [];
	"yt_dlp.networking.common" -> "__future__" [];
	"yt_dlp.networking.common" -> "abc" [];
	"yt_dlp.networking.common" -> "copy" [];
	"yt_dlp.networking.common" -> "enum" [];
	"yt_dlp.networking.common" -> "functools" [];
	"yt_dlp.networking.common" -> "io" [];
	"yt_dlp.networking.common" -> "typing" [];
	"yt_dlp.networking.common" -> "http" [];
	"yt_dlp.compat.types" -> "types" [];
	"yt_dlp.utils._legacy" -> "asyncio" [];
	"yt_dlp.utils._legacy" -> "atexit" [];
	"yt_dlp.utils._legacy" -> "platform" [];
	"yt_dlp.utils._legacy" -> "struct" [];
	"yt_dlp.utils._legacy" -> "sys" [];
	"yt_dlp.utils._legacy" -> "zlib" [];
	"yt_dlp.utils.traversal" -> "__future__" [];
	"yt_dlp.utils.traversal" -> "collections" [];
	"yt_dlp.utils.traversal" -> "contextlib" [];
	"yt_dlp.utils.traversal" -> "functools" [];
	"yt_dlp.utils.traversal" -> "inspect" [];
	"yt_dlp.utils.traversal" -> "itertools" [];
	"yt_dlp.utils.traversal" -> "re" [];
	"yt_dlp.utils.traversal" -> "typing" [];
	"yt_dlp.compat._deprecated" -> "warnings" [];
	"yt_dlp.compat._deprecated" -> "functools" [];
	"yt_dlp.compat._deprecated" -> "os" [];
	"yt_dlp.compat._legacy" -> "base64" [];
	"yt_dlp.compat._legacy" -> "collections" [];
	"yt_dlp.compat._legacy" -> "ctypes" [];
	"yt_dlp.compat._legacy" -> "getpass" [];
	"yt_dlp.compat._legacy" -> "itertools" [];
	"yt_dlp.compat._legacy" -> "os" [];
	"yt_dlp.compat._legacy" -> "shlex" [];
	"yt_dlp.compat._legacy" -> "shutil" [];
	"yt_dlp.compat._legacy" -> "socket" [];
	"yt_dlp.compat._legacy" -> "struct" [];
	"yt_dlp.compat._legacy" -> "subprocess" [];
	"yt_dlp.compat._legacy" -> "tokenize" [];
	"yt_dlp.compat._legacy" -> "asyncio" [];
	"yt_dlp.compat._legacy" -> "re" [];
	"yt_dlp.extractor.generic" -> "os" [];
	"yt_dlp.extractor.generic" -> "re" [];
	"yt_dlp.extractor.generic" -> "types" [];
	"yt_dlp.extractor.youtube._video" -> "base64" [];
	"yt_dlp.extractor.youtube._video" -> "binascii" [];
	"yt_dlp.extractor.youtube._video" -> "collections" [];
	"yt_dlp.extractor.youtube._video" -> "datetime" [];
	"yt_dlp.extractor.youtube._video" -> "functools" [];
	"yt_dlp.extractor.youtube._video" -> "itertools" [];
	"yt_dlp.extractor.youtube._video" -> "json" [];
	"yt_dlp.extractor.youtube._video" -> "math" [];
	"yt_dlp.extractor.youtube._video" -> "os.path" [];
	"yt_dlp.extractor.youtube._video" -> "random" [];
	"yt_dlp.extractor.youtube._video" -> "re" [];
	"yt_dlp.extractor.youtube._video" -> "sys" [];
	"yt_dlp.extractor.youtube._video" -> "threading" [];
	"yt_dlp.extractor.youtube._video" -> "time" [];
	"yt_dlp.extractor.youtube._video" -> "traceback" [];
	"yt_dlp.jsinterp" -> "collections" [];
	"yt_dlp.jsinterp" -> "contextlib" [];
	"yt_dlp.jsinterp" -> "itertools" [];
	"yt_dlp.jsinterp" -> "json" [];
	"yt_dlp.jsinterp" -> "math" [];
	"yt_dlp.jsinterp" -> "operator" [];
	"yt_dlp.jsinterp" -> "re" [];
	"yt_dlp.jsinterp" -> "sys" [];
	"yt_dlp.extractor.openload" -> "collections" [];
	"yt_dlp.extractor.openload" -> "contextlib" [];
	"yt_dlp.extractor.openload" -> "json" [];
	"yt_dlp.extractor.openload" -> "os" [];
	"yt_dlp.extractor.openload" -> "subprocess" [];
	"yt_dlp.extractor.openload" -> "tempfile" [];
	"yt_dlp.extractor.youtube._tab" -> "functools" [];
	"yt_dlp.extractor.youtube._tab" -> "itertools" [];
	"yt_dlp.extractor.youtube._tab" -> "re" [];
	"yt_dlp.extractor.youtube._tab" -> "shlex" [];
	"yt_dlp.extractor.youtube._redirect" -> "base64" [];
	"yt_dlp.extractor.youtube._notifications" -> "itertools" [];
	"yt_dlp.extractor.youtube._notifications" -> "re" [];
	"yt_dlp.extractor.youtube._base" -> "calendar" [];
	"yt_dlp.extractor.youtube._base" -> "copy" [];
	"yt_dlp.extractor.youtube._base" -> "datetime" [];
	"yt_dlp.extractor.youtube._base" -> "enum" [];
	"yt_dlp.extractor.youtube._base" -> "functools" [];
	"yt_dlp.extractor.youtube._base" -> "hashlib" [];
	"yt_dlp.extractor.youtube._base" -> "json" [];
	"yt_dlp.extractor.youtube._base" -> "re" [];
	"yt_dlp.extractor.youtube._base" -> "time" [];
	"yt_dlp.extractor.common" -> "base64" [];
	"yt_dlp.extractor.common" -> "collections" [];
	"yt_dlp.extractor.common" -> "functools" [];
	"yt_dlp.extractor.common" -> "getpass" [];
	"yt_dlp.extractor.common" -> "inspect" [];
	"yt_dlp.extractor.common" -> "itertools" [];
	"yt_dlp.extractor.common" -> "json" [];
	"yt_dlp.extractor.common" -> "math" [];
	"yt_dlp.extractor.common" -> "netrc" [];
	"yt_dlp.extractor.common" -> "os" [];
	"yt_dlp.extractor.common" -> "random" [];
	"yt_dlp.extractor.common" -> "re" [];
	"yt_dlp.extractor.common" -> "subprocess" [];
	"yt_dlp.extractor.common" -> "sys" [];
	"yt_dlp.extractor.common" -> "time" [];
	"yt_dlp.extractor.common" -> "types" [];
	"yt_dlp.downloader.hls" -> "binascii" [];
	"yt_dlp.downloader.hls" -> "io" [];
	"yt_dlp.downloader.hls" -> "re" [];
	"yt_dlp.downloader.hls" -> "yt_dlp" [];
	"yt_dlp.downloader.fragment" -> "contextlib" [];
	"yt_dlp.downloader.fragment" -> "json" [];
	"yt_dlp.downloader.fragment" -> "math" [];
	"yt_dlp.downloader.fragment" -> "os" [];
	"yt_dlp.downloader.fragment" -> "struct" [];
	"yt_dlp.downloader.fragment" -> "time" [];
	"yt_dlp.utils.progress" -> "__future__" [];
	"yt_dlp.utils.progress" -> "bisect" [];
	"yt_dlp.utils.progress" -> "threading" [];
	"yt_dlp.utils.progress" -> "time" [];
	"yt_dlp.aes" -> "base64" [];
	"yt_dlp.aes" -> "math" [];
	"yt_dlp.downloader.http" -> "os" [];
	"yt_dlp.downloader.http" -> "random" [];
	"yt_dlp.downloader.http" -> "time" [];
	"yt_dlp.downloader.common" -> "contextlib" [];
	"yt_dlp.downloader.common" -> "errno" [];
	"yt_dlp.downloader.common" -> "functools" [];
	"yt_dlp.downloader.common" -> "os" [];
	"yt_dlp.downloader.common" -> "random" [];
	"yt_dlp.downloader.common" -> "re" [];
	"yt_dlp.downloader.common" -> "threading" [];
	"yt_dlp.downloader.common" -> "time" [];
	"yt_dlp.minicurses" -> "functools" [];
	"yt_dlp.minicurses" -> "threading" [];
	"yt_dlp.downloader.bunnycdn" -> "hashlib" [];
	"yt_dlp.downloader.bunnycdn" -> "random" [];
	"yt_dlp.downloader.bunnycdn" -> "threading" [];
	"yt_dlp.downloader.youtube_live_chat" -> "json" [];
	"yt_dlp.downloader.youtube_live_chat" -> "time" [];
	"yt_dlp.downloader.websocket" -> "asyncio" [];
	"yt_dlp.downloader.websocket" -> "contextlib" [];
	"yt_dlp.downloader.websocket" -> "os" [];
	"yt_dlp.downloader.websocket" -> "signal" [];
	"yt_dlp.downloader.websocket" -> "threading" [];
	"yt_dlp.downloader.rtsp" -> "os" [];
	"yt_dlp.downloader.rtsp" -> "subprocess" [];
	"yt_dlp.downloader.rtmp" -> "os" [];
	"yt_dlp.downloader.rtmp" -> "re" [];
	"yt_dlp.downloader.rtmp" -> "subprocess" [];
	"yt_dlp.downloader.rtmp" -> "time" [];
	"yt_dlp.downloader.niconico" -> "json" [];
	"yt_dlp.downloader.niconico" -> "threading" [];
	"yt_dlp.downloader.niconico" -> "time" [];
	"yt_dlp.downloader.mhtml" -> "io" [];
	"yt_dlp.downloader.mhtml" -> "quopri" [];
	"yt_dlp.downloader.mhtml" -> "re" [];
	"yt_dlp.downloader.mhtml" -> "uuid" [];
	"yt_dlp.downloader.ism" -> "binascii" [];
	"yt_dlp.downloader.ism" -> "io" [];
	"yt_dlp.downloader.ism" -> "struct" [];
	"yt_dlp.downloader.ism" -> "time" [];
	"yt_dlp.downloader.fc2" -> "threading" [];
	"yt_dlp.downloader.dash" -> "time" [];
	"yt_dlp.downloader.f4m" -> "base64" [];
	"yt_dlp.downloader.f4m" -> "io" [];
	"yt_dlp.downloader.f4m" -> "itertools" [];
	"yt_dlp.downloader.f4m" -> "struct" [];
	"yt_dlp.downloader.f4m" -> "time" [];
	"yt_dlp.YoutubeDL" -> "collections" [];
	"yt_dlp.YoutubeDL" -> "contextlib" [];
	"yt_dlp.YoutubeDL" -> "copy" [];
	"yt_dlp.YoutubeDL" -> "datetime" [];
	"yt_dlp.YoutubeDL" -> "errno" [];
	"yt_dlp.YoutubeDL" -> "fileinput" [];
	"yt_dlp.YoutubeDL" -> "functools" [];
	"yt_dlp.YoutubeDL" -> "io" [];
	"yt_dlp.YoutubeDL" -> "itertools" [];
	"yt_dlp.YoutubeDL" -> "json" [];
	"yt_dlp.YoutubeDL" -> "locale" [];
	"yt_dlp.YoutubeDL" -> "operator" [];
	"yt_dlp.YoutubeDL" -> "os" [];
	"yt_dlp.YoutubeDL" -> "random" [];
	"yt_dlp.YoutubeDL" -> "re" [];
	"yt_dlp.YoutubeDL" -> "shutil" [];
	"yt_dlp.YoutubeDL" -> "string" [];
	"yt_dlp.YoutubeDL" -> "subprocess" [];
	"yt_dlp.YoutubeDL" -> "sys" [];
	"yt_dlp.YoutubeDL" -> "tempfile" [];
	"yt_dlp.YoutubeDL" -> "time" [];
	"yt_dlp.YoutubeDL" -> "tokenize" [];
	"yt_dlp.YoutubeDL" -> "traceback" [];
	"yt_dlp.YoutubeDL" -> "unicodedata" [];
	"yt_dlp.YoutubeDL" -> "ctypes" [];
	"yt_dlp.YoutubeDL" -> "pty" [];
	"yt_dlp.postprocessor.ffmpeg" -> "collections" [];
	"yt_dlp.postprocessor.ffmpeg" -> "contextvars" [];
	"yt_dlp.postprocessor.ffmpeg" -> "functools" [];
	"yt_dlp.postprocessor.ffmpeg" -> "itertools" [];
	"yt_dlp.postprocessor.ffmpeg" -> "json" [];
	"yt_dlp.postprocessor.ffmpeg" -> "os" [];
	"yt_dlp.postprocessor.ffmpeg" -> "re" [];
	"yt_dlp.postprocessor.ffmpeg" -> "subprocess" [];
	"yt_dlp.postprocessor.ffmpeg" -> "time" [];
	"yt_dlp.postprocessor.common" -> "functools" [];
	"yt_dlp.postprocessor.common" -> "json" [];
	"yt_dlp.postprocessor.common" -> "os" [];
	"yt_dlp.cache" -> "contextlib" [];
	"yt_dlp.cache" -> "json" [];
	"yt_dlp.cache" -> "os" [];
	"yt_dlp.cache" -> "re" [];
	"yt_dlp.cache" -> "shutil" [];
	"yt_dlp.cache" -> "traceback" [];
	"yt_dlp.utils._utils" -> "base64" [];
	"yt_dlp.utils._utils" -> "binascii" [];
	"yt_dlp.utils._utils" -> "calendar" [];
	"yt_dlp.utils._utils" -> "codecs" [];
	"yt_dlp.utils._utils" -> "collections" [];
	"yt_dlp.utils._utils" -> "contextlib" [];
	"yt_dlp.utils._utils" -> "datetime" [];
	"yt_dlp.utils._utils" -> "enum" [];
	"yt_dlp.utils._utils" -> "errno" [];
	"yt_dlp.utils._utils" -> "functools" [];
	"yt_dlp.utils._utils" -> "hashlib" [];
	"yt_dlp.utils._utils" -> "hmac" [];
	"yt_dlp.utils._utils" -> "inspect" [];
	"yt_dlp.utils._utils" -> "io" [];
	"yt_dlp.utils._utils" -> "itertools" [];
	"yt_dlp.utils._utils" -> "json" [];
	"yt_dlp.utils._utils" -> "locale" [];
	"yt_dlp.utils._utils" -> "math" [];
	"yt_dlp.utils._utils" -> "mimetypes" [];
	"yt_dlp.utils._utils" -> "netrc" [];
	"yt_dlp.utils._utils" -> "operator" [];
	"yt_dlp.utils._utils" -> "os" [];
	"yt_dlp.utils._utils" -> "platform" [];
	"yt_dlp.utils._utils" -> "random" [];
	"yt_dlp.utils._utils" -> "re" [];
	"yt_dlp.utils._utils" -> "shlex" [];
	"yt_dlp.utils._utils" -> "socket" [];
	"yt_dlp.utils._utils" -> "ssl" [];
	"yt_dlp.utils._utils" -> "struct" [];
	"yt_dlp.utils._utils" -> "subprocess" [];
	"yt_dlp.utils._utils" -> "sys" [];
	"yt_dlp.utils._utils" -> "tempfile" [];
	"yt_dlp.utils._utils" -> "time" [];
	"yt_dlp.utils._utils" -> "traceback" [];
	"yt_dlp.utils._utils" -> "types" [];
	"yt_dlp.utils._utils" -> "unicodedata" [];
	"yt_dlp.utils._utils" -> "msvcrt" [];
	"yt_dlp.utils._utils" -> "warnings" [];
	"yt_dlp.utils._utils" -> "ctypes" [];
	"yt_dlp.utils._utils" -> "fcntl" [];
	"yt_dlp.utils.networking" -> "__future__" [];
	"yt_dlp.utils.networking" -> "collections" [];
	"yt_dlp.utils.networking" -> "random" [];
	"yt_dlp.utils.networking" -> "typing" [];
	"yt_dlp.update" -> "__future__" [];
	"yt_dlp.update" -> "atexit" [];
	"yt_dlp.update" -> "contextlib" [];
	"yt_dlp.update" -> "functools" [];
	"yt_dlp.update" -> "hashlib" [];
	"yt_dlp.update" -> "json" [];
	"yt_dlp.update" -> "os" [];
	"yt_dlp.update" -> "platform" [];
	"yt_dlp.update" -> "re" [];
	"yt_dlp.update" -> "subprocess" [];
	"yt_dlp.update" -> "sys" [];
	"yt_dlp.update" -> "dataclasses" [];
	"yt_dlp.update" -> "zipimport" [];
	"yt_dlp.postprocessor.xattrpp" -> "os" [];
	"yt_dlp.postprocessor.sponsorblock" -> "hashlib" [];
	"yt_dlp.postprocessor.sponsorblock" -> "json" [];
	"yt_dlp.postprocessor.sponsorblock" -> "re" [];
	"yt_dlp.postprocessor.sponskrub" -> "os" [];
	"yt_dlp.postprocessor.sponskrub" -> "shlex" [];
	"yt_dlp.postprocessor.sponskrub" -> "subprocess" [];
	"yt_dlp.postprocessor.movefilesafterdownload" -> "os" [];
	"yt_dlp.postprocessor.modify_chapters" -> "copy" [];
	"yt_dlp.postprocessor.modify_chapters" -> "heapq" [];
	"yt_dlp.postprocessor.modify_chapters" -> "os" [];
	"yt_dlp.postprocessor.metadataparser" -> "re" [];
	"yt_dlp.postprocessor.embedthumbnail" -> "base64" [];
	"yt_dlp.postprocessor.embedthumbnail" -> "os" [];
	"yt_dlp.postprocessor.embedthumbnail" -> "re" [];
	"yt_dlp.postprocessor.embedthumbnail" -> "subprocess" [];
	"yt_dlp.postprocessor.embedthumbnail" -> "'mutagen.flac'" [];
	"yt_dlp.postprocessor.embedthumbnail" -> "'mutagen.mp4'" [];
	"yt_dlp.postprocessor.embedthumbnail" -> "'mutagen.oggopus'" [];
	"yt_dlp.postprocessor.embedthumbnail" -> "'mutagen.oggvorbis'" [];
	"yt_dlp.plugins" -> "contextlib" [];
	"yt_dlp.plugins" -> "dataclasses" [];
	"yt_dlp.plugins" -> "functools" [];
	"yt_dlp.plugins" -> "importlib" [];
	"yt_dlp.plugins" -> "inspect" [];
	"yt_dlp.plugins" -> "itertools" [];
	"yt_dlp.plugins" -> "os" [];
	"yt_dlp.plugins" -> "pkgutil" [];
	"yt_dlp.plugins" -> "sys" [];
	"yt_dlp.plugins" -> "traceback" [];
	"yt_dlp.plugins" -> "zipimport" [];
	"yt_dlp.plugins" -> "pathlib" [];
	"yt_dlp.plugins" -> "zipfile" [];
	"yt_dlp.options" -> "collections" [];
	"yt_dlp.options" -> "contextlib" [];
	"yt_dlp.options" -> "optparse" [];
	"yt_dlp.options" -> "os.path" [];
	"yt_dlp.options" -> "re" [];
	"yt_dlp.options" -> "shlex" [];
	"yt_dlp.options" -> "shutil" [];
	"yt_dlp.options" -> "string" [];
	"yt_dlp.options" -> "sys" [];
	"yt_dlp.globals" -> "collections" [];
	"yt_dlp.networking.impersonate" -> "__future__" [];
	"yt_dlp.networking.impersonate" -> "re" [];
	"yt_dlp.networking.impersonate" -> "abc" [];
	"yt_dlp.networking.impersonate" -> "dataclasses" [];
	"yt_dlp.networking.impersonate" -> "typing" [];
	"yt_dlp.extractor.adobepass" -> "getpass" [];
	"yt_dlp.extractor.adobepass" -> "json" [];
	"yt_dlp.extractor.adobepass" -> "re" [];
	"yt_dlp.extractor.adobepass" -> "time" [];
	"yt_dlp.extractor.extractors" -> "inspect" [];
	"yt_dlp.extractor.extractors" -> "os" [];
	"yt_dlp.extractor.lazy_extractors" -> "importlib" [];
	"yt_dlp.extractor.lazy_extractors" -> "random" [];
	"yt_dlp.extractor.lazy_extractors" -> "re" [];
	"yt_dlp.extractor.zype" -> "re" [];
	"yt_dlp.extractor.zingmp3" -> "hashlib" [];
	"yt_dlp.extractor.zingmp3" -> "hmac" [];
	"yt_dlp.extractor.zingmp3" -> "itertools" [];
	"yt_dlp.extractor.zingmp3" -> "json" [];
	"yt_dlp.extractor.zenporn" -> "base64" [];
	"yt_dlp.extractor.zenporn" -> "binascii" [];
	"yt_dlp.extractor.zee5" -> "json" [];
	"yt_dlp.extractor.zee5" -> "time" [];
	"yt_dlp.extractor.zee5" -> "uuid" [];
	"yt_dlp.extractor.zdf" -> "itertools" [];
	"yt_dlp.extractor.zdf" -> "json" [];
	"yt_dlp.extractor.zdf" -> "re" [];
	"yt_dlp.extractor.zdf" -> "time" [];
	"yt_dlp.extractor.zattoo" -> "re" [];
	"yt_dlp.extractor.zattoo" -> "uuid" [];
	"yt_dlp.extractor.zapiks" -> "re" [];
	"yt_dlp.extractor.zaiko" -> "base64" [];
	"yt_dlp.extractor.youporn" -> "itertools" [];
	"yt_dlp.extractor.youporn" -> "re" [];
	"yt_dlp.extractor.younow" -> "itertools" [];
	"yt_dlp.extractor.youku" -> "random" [];
	"yt_dlp.extractor.youku" -> "re" [];
	"yt_dlp.extractor.youku" -> "string" [];
	"yt_dlp.extractor.youku" -> "time" [];
	"yt_dlp.extractor.yandexvideo" -> "itertools" [];
	"yt_dlp.extractor.yandexmusic" -> "hashlib" [];
	"yt_dlp.extractor.yandexmusic" -> "itertools" [];
	"yt_dlp.extractor.yandexdisk" -> "json" [];
	"yt_dlp.extractor.yahoo" -> "hashlib" [];
	"yt_dlp.extractor.yahoo" -> "itertools" [];
	"yt_dlp.extractor.xvideos" -> "re" [];
	"yt_dlp.extractor.xstream" -> "re" [];
	"yt_dlp.extractor.xnxx" -> "re" [];
	"yt_dlp.extractor.xminus" -> "re" [];
	"yt_dlp.extractor.xminus" -> "time" [];
	"yt_dlp.extractor.ximalaya" -> "base64" [];
	"yt_dlp.extractor.ximalaya" -> "math" [];
	"yt_dlp.extractor.ximalaya" -> "time" [];
	"yt_dlp.extractor.xhamster" -> "itertools" [];
	"yt_dlp.extractor.xhamster" -> "re" [];
	"yt_dlp.extractor.xboxclips" -> "re" [];
	"yt_dlp.extractor.xanimu" -> "re" [];
	"yt_dlp.extractor.wykop" -> "json" [];
	"yt_dlp.extractor.wwe" -> "re" [];
	"yt_dlp.extractor.wrestleuniverse" -> "base64" [];
	"yt_dlp.extractor.wrestleuniverse" -> "binascii" [];
	"yt_dlp.extractor.wrestleuniverse" -> "json" [];
	"yt_dlp.extractor.wrestleuniverse" -> "time" [];
	"yt_dlp.extractor.wrestleuniverse" -> "uuid" [];
	"yt_dlp.extractor.wppilot" -> "json" [];
	"yt_dlp.extractor.wppilot" -> "random" [];
	"yt_dlp.extractor.wppilot" -> "re" [];
	"yt_dlp.extractor.wordpress" -> "re" [];
	"yt_dlp.extractor.wistia" -> "base64" [];
	"yt_dlp.extractor.wistia" -> "re" [];
	"yt_dlp.extractor.wikimedia" -> "re" [];
	"yt_dlp.extractor.weverse" -> "base64" [];
	"yt_dlp.extractor.weverse" -> "hashlib" [];
	"yt_dlp.extractor.weverse" -> "hmac" [];
	"yt_dlp.extractor.weverse" -> "itertools" [];
	"yt_dlp.extractor.weverse" -> "json" [];
	"yt_dlp.extractor.weverse" -> "re" [];
	"yt_dlp.extractor.weverse" -> "time" [];
	"yt_dlp.extractor.weverse" -> "uuid" [];
	"yt_dlp.extractor.weibo" -> "itertools" [];
	"yt_dlp.extractor.weibo" -> "json" [];
	"yt_dlp.extractor.weibo" -> "random" [];
	"yt_dlp.extractor.webofstories" -> "re" [];
	"yt_dlp.extractor.webcaster" -> "re" [];
	"yt_dlp.extractor.webcamerapl" -> "codecs" [];
	"yt_dlp.extractor.wdr" -> "re" [];
	"yt_dlp.extractor.washingtonpost" -> "re" [];
	"yt_dlp.extractor.walla" -> "re" [];
	"yt_dlp.extractor.vvvvid" -> "functools" [];
	"yt_dlp.extractor.vvvvid" -> "re" [];
	"yt_dlp.extractor.vuclip" -> "re" [];
	"yt_dlp.extractor.vrt" -> "json" [];
	"yt_dlp.extractor.vrt" -> "time" [];
	"yt_dlp.extractor.vrsquare" -> "itertools" [];
	"yt_dlp.extractor.once" -> "re" [];
	"yt_dlp.extractor.voicy" -> "itertools" [];
	"yt_dlp.extractor.vk" -> "collections" [];
	"yt_dlp.extractor.vk" -> "hashlib" [];
	"yt_dlp.extractor.vk" -> "re" [];
	"yt_dlp.extractor.viu" -> "json" [];
	"yt_dlp.extractor.viu" -> "random" [];
	"yt_dlp.extractor.viu" -> "re" [];
	"yt_dlp.extractor.viu" -> "uuid" [];
	"yt_dlp.extractor.viously" -> "base64" [];
	"yt_dlp.extractor.viously" -> "re" [];
	"yt_dlp.extractor.vimeo" -> "base64" [];
	"yt_dlp.extractor.vimeo" -> "functools" [];
	"yt_dlp.extractor.vimeo" -> "itertools" [];
	"yt_dlp.extractor.vimeo" -> "json" [];
	"yt_dlp.extractor.vimeo" -> "re" [];
	"yt_dlp.extractor.viidea" -> "re" [];
	"yt_dlp.extractor.viewlift" -> "json" [];
	"yt_dlp.extractor.vidyard" -> "re" [];
	"yt_dlp.extractor.vidlii" -> "re" [];
	"yt_dlp.extractor.vidflex" -> "base64" [];
	"yt_dlp.extractor.vidflex" -> "json" [];
	"yt_dlp.extractor.videoken" -> "base64" [];
	"yt_dlp.extractor.videoken" -> "functools" [];
	"yt_dlp.extractor.videoken" -> "math" [];
	"yt_dlp.extractor.videoken" -> "re" [];
	"yt_dlp.extractor.videoken" -> "time" [];
	"yt_dlp.extractor.videocampus_sachsen" -> "functools" [];
	"yt_dlp.extractor.videocampus_sachsen" -> "re" [];
	"yt_dlp.extractor.videa" -> "base64" [];
	"yt_dlp.extractor.videa" -> "random" [];
	"yt_dlp.extractor.videa" -> "string" [];
	"yt_dlp.extractor.videa" -> "struct" [];
	"yt_dlp.extractor.vice" -> "functools" [];
	"yt_dlp.extractor.vice" -> "hashlib" [];
	"yt_dlp.extractor.vice" -> "json" [];
	"yt_dlp.extractor.vice" -> "random" [];
	"yt_dlp.extractor.vice" -> "time" [];
	"yt_dlp.extractor.vgtv" -> "re" [];
	"yt_dlp.extractor.vevo" -> "json" [];
	"yt_dlp.extractor.vevo" -> "re" [];
	"yt_dlp.extractor.vesti" -> "re" [];
	"yt_dlp.extractor.ustream" -> "random" [];
	"yt_dlp.extractor.ustream" -> "re" [];
	"yt_dlp.extractor.uplynk" -> "re" [];
	"yt_dlp.extractor.unistra" -> "re" [];
	"yt_dlp.extractor.imggaming" -> "json" [];
	"yt_dlp.extractor.udn" -> "re" [];
	"yt_dlp.extractor.udemy" -> "re" [];
	"yt_dlp.extractor.txxx" -> "base64" [];
	"yt_dlp.extractor.txxx" -> "re" [];
	"yt_dlp.extractor.twitter" -> "functools" [];
	"yt_dlp.extractor.twitter" -> "json" [];
	"yt_dlp.extractor.twitter" -> "math" [];
	"yt_dlp.extractor.twitter" -> "re" [];
	"yt_dlp.extractor.twitch" -> "collections" [];
	"yt_dlp.extractor.twitch" -> "itertools" [];
	"yt_dlp.extractor.twitch" -> "json" [];
	"yt_dlp.extractor.twitch" -> "random" [];
	"yt_dlp.extractor.twitch" -> "re" [];
	"yt_dlp.extractor.twitcasting" -> "base64" [];
	"yt_dlp.extractor.twitcasting" -> "itertools" [];
	"yt_dlp.extractor.twitcasting" -> "re" [];
	"yt_dlp.extractor.tvw" -> "json" [];
	"yt_dlp.extractor.tvplay" -> "re" [];
	"yt_dlp.extractor.tvp" -> "itertools" [];
	"yt_dlp.extractor.tvp" -> "random" [];
	"yt_dlp.extractor.tvp" -> "re" [];
	"yt_dlp.extractor.tvanouvelles" -> "re" [];
	"yt_dlp.extractor.tva" -> "re" [];
	"yt_dlp.extractor.tv24ua" -> "re" [];
	"yt_dlp.extractor.tv4" -> "re" [];
	"yt_dlp.extractor.tv2dk" -> "json" [];
	"yt_dlp.extractor.tv2dk" -> "re" [];
	"yt_dlp.extractor.tv2" -> "re" [];
	"yt_dlp.extractor.tubitv" -> "re" [];
	"yt_dlp.extractor.tube8" -> "re" [];
	"yt_dlp.extractor.turner" -> "re" [];
	"yt_dlp.extractor.trovo" -> "itertools" [];
	"yt_dlp.extractor.trovo" -> "json" [];
	"yt_dlp.extractor.trovo" -> "random" [];
	"yt_dlp.extractor.trovo" -> "string" [];
	"yt_dlp.extractor.triller" -> "itertools" [];
	"yt_dlp.extractor.triller" -> "json" [];
	"yt_dlp.extractor.triller" -> "re" [];
	"yt_dlp.extractor.traileraddict" -> "re" [];
	"yt_dlp.extractor.toypics" -> "re" [];
	"yt_dlp.extractor.toutv" -> "json" [];
	"yt_dlp.extractor.toggle" -> "json" [];
	"yt_dlp.extractor.toggle" -> "re" [];
	"yt_dlp.extractor.tnaflix" -> "re" [];
	"yt_dlp.extractor.tmz" -> "re" [];
	"yt_dlp.extractor.tiktok" -> "functools" [];
	"yt_dlp.extractor.tiktok" -> "itertools" [];
	"yt_dlp.extractor.tiktok" -> "json" [];
	"yt_dlp.extractor.tiktok" -> "random" [];
	"yt_dlp.extractor.tiktok" -> "re" [];
	"yt_dlp.extractor.tiktok" -> "string" [];
	"yt_dlp.extractor.tiktok" -> "time" [];
	"yt_dlp.extractor.tiktok" -> "uuid" [];
	"yt_dlp.extractor.threespeak" -> "re" [];
	"yt_dlp.extractor.thisvid" -> "itertools" [];
	"yt_dlp.extractor.thisvid" -> "re" [];
	"yt_dlp.extractor.thisoldhouse" -> "json" [];
	"yt_dlp.extractor.theweatherchannel" -> "json" [];
	"yt_dlp.extractor.thesun" -> "re" [];
	"yt_dlp.extractor.theplatform" -> "hashlib" [];
	"yt_dlp.extractor.theplatform" -> "hmac" [];
	"yt_dlp.extractor.theplatform" -> "re" [];
	"yt_dlp.extractor.theplatform" -> "time" [];
	"yt_dlp.extractor.theguardian" -> "itertools" [];
	"yt_dlp.extractor.tfo" -> "json" [];
	"yt_dlp.extractor.tf1" -> "json" [];
	"yt_dlp.extractor.testurl" -> "re" [];
	"yt_dlp.extractor.tenplay" -> "itertools" [];
	"yt_dlp.extractor.tencent" -> "random" [];
	"yt_dlp.extractor.tencent" -> "re" [];
	"yt_dlp.extractor.tencent" -> "string" [];
	"yt_dlp.extractor.tencent" -> "time" [];
	"yt_dlp.extractor.tempo" -> "re" [];
	"yt_dlp.extractor.telewebion" -> "__future__" [];
	"yt_dlp.extractor.telewebion" -> "functools" [];
	"yt_dlp.extractor.telewebion" -> "json" [];
	"yt_dlp.extractor.telewebion" -> "textwrap" [];
	"yt_dlp.extractor.teletask" -> "re" [];
	"yt_dlp.extractor.telemb" -> "re" [];
	"yt_dlp.extractor.telegram" -> "re" [];
	"yt_dlp.extractor.telecinco" -> "json" [];
	"yt_dlp.extractor.telecinco" -> "re" [];
	"yt_dlp.extractor.telecaribe" -> "re" [];
	"yt_dlp.extractor.telebruxelles" -> "re" [];
	"yt_dlp.extractor.tele5" -> "functools" [];
	"yt_dlp.extractor.ted" -> "itertools" [];
	"yt_dlp.extractor.ted" -> "re" [];
	"yt_dlp.extractor.teamtreehouse" -> "re" [];
	"yt_dlp.extractor.teamcoco" -> "json" [];
	"yt_dlp.extractor.teamcoco" -> "re" [];
	"yt_dlp.extractor.teachertube" -> "re" [];
	"yt_dlp.extractor.teachable" -> "re" [];
	"yt_dlp.extractor.tbs" -> "re" [];
	"yt_dlp.extractor.tass" -> "json" [];
	"yt_dlp.extractor.taptap" -> "re" [];
	"yt_dlp.extractor.taptap" -> "uuid" [];
	"yt_dlp.extractor.tagesschau" -> "re" [];
	"yt_dlp.extractor.svt" -> "json" [];
	"yt_dlp.extractor.svt" -> "re" [];
	"yt_dlp.extractor.sunporno" -> "re" [];
	"yt_dlp.extractor.substack" -> "re" [];
	"yt_dlp.extractor.subsplash" -> "functools" [];
	"yt_dlp.extractor.subsplash" -> "math" [];
	"yt_dlp.extractor.streamcz" -> "json" [];
	"yt_dlp.extractor.streaks" -> "json" [];
	"yt_dlp.extractor.storyfire" -> "functools" [];
	"yt_dlp.extractor.steam" -> "re" [];
	"yt_dlp.extractor.stanfordoc" -> "re" [];
	"yt_dlp.extractor.stageplus" -> "json" [];
	"yt_dlp.extractor.stageplus" -> "uuid" [];
	"yt_dlp.extractor.stacommu" -> "time" [];
	"yt_dlp.extractor.sproutvideo" -> "base64" [];
	"yt_dlp.extractor.springboardplatform" -> "re" [];
	"yt_dlp.extractor.spreaker" -> "itertools" [];
	"yt_dlp.extractor.spotify" -> "functools" [];
	"yt_dlp.extractor.spotify" -> "json" [];
	"yt_dlp.extractor.spotify" -> "re" [];
	"yt_dlp.extractor.spankbang" -> "re" [];
	"yt_dlp.extractor.soundgasm" -> "re" [];
	"yt_dlp.extractor.soundcloud" -> "functools" [];
	"yt_dlp.extractor.soundcloud" -> "itertools" [];
	"yt_dlp.extractor.soundcloud" -> "json" [];
	"yt_dlp.extractor.soundcloud" -> "re" [];
	"yt_dlp.extractor.sonyliv" -> "datetime" [];
	"yt_dlp.extractor.sonyliv" -> "itertools" [];
	"yt_dlp.extractor.sonyliv" -> "json" [];
	"yt_dlp.extractor.sonyliv" -> "math" [];
	"yt_dlp.extractor.sonyliv" -> "random" [];
	"yt_dlp.extractor.sonyliv" -> "time" [];
	"yt_dlp.extractor.sonyliv" -> "uuid" [];
	"yt_dlp.extractor.sohu" -> "base64" [];
	"yt_dlp.extractor.sohu" -> "re" [];
	"yt_dlp.extractor.slideslive" -> "re" [];
	"yt_dlp.extractor.slideshare" -> "json" [];
	"yt_dlp.extractor.sky" -> "re" [];
	"yt_dlp.extractor.shemaroome" -> "base64" [];
	"yt_dlp.extractor.sharepoint" -> "json" [];
	"yt_dlp.extractor.shahid" -> "json" [];
	"yt_dlp.extractor.shahid" -> "math" [];
	"yt_dlp.extractor.shahid" -> "re" [];
	"yt_dlp.extractor.aws" -> "datetime" [];
	"yt_dlp.extractor.aws" -> "hashlib" [];
	"yt_dlp.extractor.aws" -> "hmac" [];
	"yt_dlp.extractor.sevenplus" -> "json" [];
	"yt_dlp.extractor.sevenplus" -> "re" [];
	"yt_dlp.extractor.sendtonews" -> "re" [];
	"yt_dlp.extractor.senategov" -> "re" [];
	"yt_dlp.extractor.sejmpl" -> "datetime" [];
	"yt_dlp.extractor.scte" -> "re" [];
	"yt_dlp.extractor.scrolller" -> "json" [];
	"yt_dlp.extractor.scrippsnetworks" -> "hashlib" [];
	"yt_dlp.extractor.scrippsnetworks" -> "json" [];
	"yt_dlp.extractor.sapo" -> "re" [];
	"yt_dlp.extractor.samplefocus" -> "re" [];
	"yt_dlp.extractor.safari" -> "json" [];
	"yt_dlp.extractor.safari" -> "re" [];
	"yt_dlp.extractor.ruutu" -> "json" [];
	"yt_dlp.extractor.ruutu" -> "re" [];
	"yt_dlp.extractor.rutv" -> "re" [];
	"yt_dlp.extractor.rutube" -> "itertools" [];
	"yt_dlp.extractor.rumble" -> "itertools" [];
	"yt_dlp.extractor.rumble" -> "re" [];
	"yt_dlp.extractor.rule34video" -> "re" [];
	"yt_dlp.extractor.rtvslo" -> "re" [];
	"yt_dlp.extractor.rtvs" -> "re" [];
	"yt_dlp.extractor.rtve" -> "base64" [];
	"yt_dlp.extractor.rtve" -> "io" [];
	"yt_dlp.extractor.rtve" -> "struct" [];
	"yt_dlp.extractor.rtvcplay" -> "re" [];
	"yt_dlp.extractor.rts" -> "re" [];
	"yt_dlp.extractor.rtp" -> "base64" [];
	"yt_dlp.extractor.rtp" -> "json" [];
	"yt_dlp.extractor.rtp" -> "re" [];
	"yt_dlp.extractor.rtnews" -> "re" [];
	"yt_dlp.extractor.rtl2" -> "re" [];
	"yt_dlp.extractor.rte" -> "re" [];
	"yt_dlp.extractor.rozhlas" -> "itertools" [];
	"yt_dlp.extractor.rokfin" -> "datetime" [];
	"yt_dlp.extractor.rokfin" -> "itertools" [];
	"yt_dlp.extractor.rokfin" -> "json" [];
	"yt_dlp.extractor.rokfin" -> "re" [];
	"yt_dlp.extractor.reuters" -> "re" [];
	"yt_dlp.extractor.redgifs" -> "functools" [];
	"yt_dlp.extractor.reddit" -> "json" [];
	"yt_dlp.extractor.redbee" -> "json" [];
	"yt_dlp.extractor.redbee" -> "re" [];
	"yt_dlp.extractor.redbee" -> "time" [];
	"yt_dlp.extractor.redbee" -> "uuid" [];
	"yt_dlp.extractor.rcti" -> "json" [];
	"yt_dlp.extractor.rcti" -> "random" [];
	"yt_dlp.extractor.rcti" -> "time" [];
	"yt_dlp.extractor.rcs" -> "re" [];
	"yt_dlp.extractor.rbgtum" -> "re" [];
	"yt_dlp.extractor.raywenderlich" -> "re" [];
	"yt_dlp.extractor.rai" -> "re" [];
	"yt_dlp.extractor.rai" -> "math" [];
	"yt_dlp.extractor.radlive" -> "json" [];
	"yt_dlp.extractor.radiokapital" -> "itertools" [];
	"yt_dlp.extractor.radiojavan" -> "re" [];
	"yt_dlp.extractor.radiofrance" -> "itertools" [];
	"yt_dlp.extractor.radiofrance" -> "re" [];
	"yt_dlp.extractor.radiocomercial" -> "itertools" [];
	"yt_dlp.extractor.radiko" -> "base64" [];
	"yt_dlp.extractor.radiko" -> "random" [];
	"yt_dlp.extractor.radiko" -> "re" [];
	"yt_dlp.extractor.qqmusic" -> "base64" [];
	"yt_dlp.extractor.qqmusic" -> "functools" [];
	"yt_dlp.extractor.qqmusic" -> "json" [];
	"yt_dlp.extractor.qqmusic" -> "random" [];
	"yt_dlp.extractor.qqmusic" -> "time" [];
	"yt_dlp.extractor.qdance" -> "json" [];
	"yt_dlp.extractor.qdance" -> "time" [];
	"yt_dlp.extractor.pyvideo" -> "re" [];
	"yt_dlp.extractor.prx" -> "itertools" [];
	"yt_dlp.extractor.prosiebensat1" -> "hashlib" [];
	"yt_dlp.extractor.prosiebensat1" -> "re" [];
	"yt_dlp.extractor.prankcast" -> "json" [];
	"yt_dlp.extractor.pr0gramm" -> "datetime" [];
	"yt_dlp.extractor.pr0gramm" -> "functools" [];
	"yt_dlp.extractor.pr0gramm" -> "json" [];
	"yt_dlp.extractor.pornotube" -> "json" [];
	"yt_dlp.extractor.pornhub" -> "functools" [];
	"yt_dlp.extractor.pornhub" -> "itertools" [];
	"yt_dlp.extractor.pornhub" -> "math" [];
	"yt_dlp.extractor.pornhub" -> "operator" [];
	"yt_dlp.extractor.pornhub" -> "re" [];
	"yt_dlp.extractor.popcorntimes" -> "base64" [];
	"yt_dlp.extractor.polskieradio" -> "itertools" [];
	"yt_dlp.extractor.polskieradio" -> "json" [];
	"yt_dlp.extractor.polskieradio" -> "math" [];
	"yt_dlp.extractor.polskieradio" -> "re" [];
	"yt_dlp.extractor.polsatgo" -> "json" [];
	"yt_dlp.extractor.polsatgo" -> "uuid" [];
	"yt_dlp.extractor.pokergo" -> "base64" [];
	"yt_dlp.extractor.podomatic" -> "json" [];
	"yt_dlp.extractor.podchaser" -> "functools" [];
	"yt_dlp.extractor.podchaser" -> "json" [];
	"yt_dlp.extractor.plutotv" -> "re" [];
	"yt_dlp.extractor.plutotv" -> "uuid" [];
	"yt_dlp.extractor.pluralsight" -> "collections" [];
	"yt_dlp.extractor.pluralsight" -> "json" [];
	"yt_dlp.extractor.pluralsight" -> "os" [];
	"yt_dlp.extractor.pluralsight" -> "random" [];
	"yt_dlp.extractor.pluralsight" -> "re" [];
	"yt_dlp.extractor.playsuisse" -> "base64" [];
	"yt_dlp.extractor.playsuisse" -> "hashlib" [];
	"yt_dlp.extractor.playsuisse" -> "json" [];
	"yt_dlp.extractor.playsuisse" -> "uuid" [];
	"yt_dlp.extractor.playplustv" -> "json" [];
	"yt_dlp.extractor.platzi" -> "base64" [];
	"yt_dlp.extractor.pinterest" -> "json" [];
	"yt_dlp.extractor.pinkbike" -> "re" [];
	"yt_dlp.extractor.piksel" -> "re" [];
	"yt_dlp.extractor.photobucket" -> "json" [];
	"yt_dlp.extractor.peloton" -> "json" [];
	"yt_dlp.extractor.peloton" -> "re" [];
	"yt_dlp.extractor.peertube" -> "functools" [];
	"yt_dlp.extractor.peertube" -> "re" [];
	"yt_dlp.extractor.peekvids" -> "re" [];
	"yt_dlp.extractor.pearvideo" -> "re" [];
	"yt_dlp.extractor.pbs" -> "re" [];
	"yt_dlp.extractor.patreon" -> "functools" [];
	"yt_dlp.extractor.patreon" -> "itertools" [];
	"yt_dlp.extractor.paramountplus" -> "itertools" [];
	"yt_dlp.extractor.panopto" -> "calendar" [];
	"yt_dlp.extractor.panopto" -> "datetime" [];
	"yt_dlp.extractor.panopto" -> "functools" [];
	"yt_dlp.extractor.panopto" -> "json" [];
	"yt_dlp.extractor.panopto" -> "random" [];
	"yt_dlp.extractor.packtpub" -> "json" [];
	"yt_dlp.extractor.owncloud" -> "re" [];
	"yt_dlp.extractor.orf" -> "base64" [];
	"yt_dlp.extractor.orf" -> "re" [];
	"yt_dlp.extractor.ora" -> "re" [];
	"yt_dlp.extractor.opencast" -> "re" [];
	"yt_dlp.extractor.onet" -> "re" [];
	"yt_dlp.extractor.ondemandkorea" -> "functools" [];
	"yt_dlp.extractor.ondemandkorea" -> "re" [];
	"yt_dlp.extractor.ondemandkorea" -> "uuid" [];
	"yt_dlp.extractor.odkmedia" -> "json" [];
	"yt_dlp.extractor.nzz" -> "re" [];
	"yt_dlp.extractor.nzherald" -> "json" [];
	"yt_dlp.extractor.nytimes" -> "json" [];
	"yt_dlp.extractor.nytimes" -> "uuid" [];
	"yt_dlp.extractor.nuvid" -> "re" [];
	"yt_dlp.extractor.nuum" -> "functools" [];
	"yt_dlp.extractor.nubilesporn" -> "re" [];
	"yt_dlp.extractor.ntvde" -> "re" [];
	"yt_dlp.extractor.nrk" -> "itertools" [];
	"yt_dlp.extractor.nrk" -> "random" [];
	"yt_dlp.extractor.nrk" -> "re" [];
	"yt_dlp.extractor.npo" -> "random" [];
	"yt_dlp.extractor.npo" -> "re" [];
	"yt_dlp.extractor.nova" -> "re" [];
	"yt_dlp.extractor.nitter" -> "random" [];
	"yt_dlp.extractor.nitter" -> "re" [];
	"yt_dlp.extractor.nintendo" -> "json" [];
	"yt_dlp.extractor.ninenow" -> "json" [];
	"yt_dlp.extractor.ninenow" -> "re" [];
	"yt_dlp.extractor.niconicochannelplus" -> "functools" [];
	"yt_dlp.extractor.niconicochannelplus" -> "json" [];
	"yt_dlp.extractor.niconico" -> "datetime" [];
	"yt_dlp.extractor.niconico" -> "functools" [];
	"yt_dlp.extractor.niconico" -> "itertools" [];
	"yt_dlp.extractor.niconico" -> "json" [];
	"yt_dlp.extractor.niconico" -> "re" [];
	"yt_dlp.extractor.niconico" -> "time" [];
	"yt_dlp.extractor.nhk" -> "re" [];
	"yt_dlp.extractor.nfl" -> "base64" [];
	"yt_dlp.extractor.nfl" -> "json" [];
	"yt_dlp.extractor.nfl" -> "re" [];
	"yt_dlp.extractor.nfl" -> "time" [];
	"yt_dlp.extractor.nfl" -> "uuid" [];
	"yt_dlp.extractor.nexx" -> "hashlib" [];
	"yt_dlp.extractor.nexx" -> "random" [];
	"yt_dlp.extractor.nexx" -> "re" [];
	"yt_dlp.extractor.nexx" -> "time" [];
	"yt_dlp.extractor.newspicks" -> "re" [];
	"yt_dlp.extractor.newgrounds" -> "functools" [];
	"yt_dlp.extractor.newgrounds" -> "re" [];
	"yt_dlp.extractor.netverse" -> "itertools" [];
	"yt_dlp.extractor.neteasemusic" -> "hashlib" [];
	"yt_dlp.extractor.neteasemusic" -> "itertools" [];
	"yt_dlp.extractor.neteasemusic" -> "json" [];
	"yt_dlp.extractor.neteasemusic" -> "random" [];
	"yt_dlp.extractor.neteasemusic" -> "re" [];
	"yt_dlp.extractor.neteasemusic" -> "time" [];
	"yt_dlp.extractor.nekohacker" -> "re" [];
	"yt_dlp.extractor.nebula" -> "itertools" [];
	"yt_dlp.extractor.nebula" -> "json" [];
	"yt_dlp.extractor.ndr" -> "re" [];
	"yt_dlp.extractor.nbc" -> "base64" [];
	"yt_dlp.extractor.nbc" -> "json" [];
	"yt_dlp.extractor.nbc" -> "re" [];
	"yt_dlp.extractor.nba" -> "functools" [];
	"yt_dlp.extractor.nba" -> "re" [];
	"yt_dlp.extractor.naver" -> "base64" [];
	"yt_dlp.extractor.naver" -> "hashlib" [];
	"yt_dlp.extractor.naver" -> "hmac" [];
	"yt_dlp.extractor.naver" -> "itertools" [];
	"yt_dlp.extractor.naver" -> "json" [];
	"yt_dlp.extractor.naver" -> "re" [];
	"yt_dlp.extractor.naver" -> "time" [];
	"yt_dlp.extractor.nate" -> "itertools" [];
	"yt_dlp.extractor.n1" -> "re" [];
	"yt_dlp.extractor.myvideoge" -> "re" [];
	"yt_dlp.extractor.myspace" -> "re" [];
	"yt_dlp.extractor.mx3" -> "re" [];
	"yt_dlp.extractor.museai" -> "re" [];
	"yt_dlp.extractor.murrtube" -> "functools" [];
	"yt_dlp.extractor.murrtube" -> "json" [];
	"yt_dlp.extractor.muenchentv" -> "json" [];
	"yt_dlp.extractor.mtv" -> "re" [];
	"yt_dlp.extractor.motherless" -> "datetime" [];
	"yt_dlp.extractor.motherless" -> "re" [];
	"yt_dlp.extractor.monstercat" -> "re" [];
	"yt_dlp.extractor.mlb" -> "json" [];
	"yt_dlp.extractor.mlb" -> "re" [];
	"yt_dlp.extractor.mlb" -> "time" [];
	"yt_dlp.extractor.mlb" -> "uuid" [];
	"yt_dlp.extractor.mixcloud" -> "base64" [];
	"yt_dlp.extractor.mixcloud" -> "itertools" [];
	"yt_dlp.extractor.mit" -> "json" [];
	"yt_dlp.extractor.mit" -> "re" [];
	"yt_dlp.extractor.microsoftstream" -> "base64" [];
	"yt_dlp.extractor.microsoftembed" -> "re" [];
	"yt_dlp.extractor.mgtv" -> "base64" [];
	"yt_dlp.extractor.mgtv" -> "time" [];
	"yt_dlp.extractor.mgtv" -> "uuid" [];
	"yt_dlp.extractor.metacritic" -> "re" [];
	"yt_dlp.extractor.megatvcom" -> "re" [];
	"yt_dlp.extractor.mediaworksnz" -> "re" [];
	"yt_dlp.extractor.mediastream" -> "re" [];
	"yt_dlp.extractor.mediasite" -> "json" [];
	"yt_dlp.extractor.mediasite" -> "re" [];
	"yt_dlp.extractor.mediaset" -> "functools" [];
	"yt_dlp.extractor.mediaset" -> "re" [];
	"yt_dlp.extractor.medialaan" -> "re" [];
	"yt_dlp.extractor.medaltv" -> "re" [];
	"yt_dlp.extractor.mbn" -> "re" [];
	"yt_dlp.extractor.massengeschmacktv" -> "re" [];
	"yt_dlp.extractor.markiza" -> "re" [];
	"yt_dlp.extractor.mangomolo" -> "base64" [];
	"yt_dlp.extractor.mainstreaming" -> "re" [];
	"yt_dlp.extractor.mailru" -> "itertools" [];
	"yt_dlp.extractor.mailru" -> "json" [];
	"yt_dlp.extractor.mailru" -> "re" [];
	"yt_dlp.extractor.lynda" -> "re" [];
	"yt_dlp.extractor.lsm" -> "re" [];
	"yt_dlp.extractor.loom" -> "json" [];
	"yt_dlp.extractor.loom" -> "textwrap" [];
	"yt_dlp.extractor.loom" -> "uuid" [];
	"yt_dlp.extractor.loco" -> "json" [];
	"yt_dlp.extractor.loco" -> "random" [];
	"yt_dlp.extractor.loco" -> "time" [];
	"yt_dlp.extractor.livestream" -> "itertools" [];
	"yt_dlp.extractor.livestream" -> "re" [];
	"yt_dlp.extractor.litv" -> "json" [];
	"yt_dlp.extractor.litv" -> "uuid" [];
	"yt_dlp.extractor.listennotes" -> "re" [];
	"yt_dlp.extractor.linkedin" -> "itertools" [];
	"yt_dlp.extractor.linkedin" -> "json" [];
	"yt_dlp.extractor.linkedin" -> "re" [];
	"yt_dlp.extractor.limelight" -> "re" [];
	"yt_dlp.extractor.likee" -> "json" [];
	"yt_dlp.extractor.lifenews" -> "re" [];
	"yt_dlp.extractor.libraryofcongress" -> "re" [];
	"yt_dlp.extractor.lego" -> "uuid" [];
	"yt_dlp.extractor.lefigaro" -> "json" [];
	"yt_dlp.extractor.lefigaro" -> "math" [];
	"yt_dlp.extractor.leeco" -> "base64" [];
	"yt_dlp.extractor.leeco" -> "datetime" [];
	"yt_dlp.extractor.leeco" -> "hashlib" [];
	"yt_dlp.extractor.leeco" -> "re" [];
	"yt_dlp.extractor.leeco" -> "time" [];
	"yt_dlp.extractor.lecturio" -> "re" [];
	"yt_dlp.extractor.lecture2go" -> "re" [];
	"yt_dlp.extractor.learningonscreen" -> "functools" [];
	"yt_dlp.extractor.learningonscreen" -> "re" [];
	"yt_dlp.extractor.lbry" -> "functools" [];
	"yt_dlp.extractor.lbry" -> "json" [];
	"yt_dlp.extractor.lbry" -> "re" [];
	"yt_dlp.extractor.laxarxames" -> "json" [];
	"yt_dlp.extractor.lastfm" -> "itertools" [];
	"yt_dlp.extractor.lastfm" -> "re" [];
	"yt_dlp.extractor.laracasts" -> "json" [];
	"yt_dlp.extractor.la7" -> "re" [];
	"yt_dlp.extractor.kuwo" -> "re" [];
	"yt_dlp.extractor.krasview" -> "json" [];
	"yt_dlp.extractor.kika" -> "itertools" [];
	"yt_dlp.extractor.khanacademy" -> "json" [];
	"yt_dlp.extractor.kankanews" -> "hashlib" [];
	"yt_dlp.extractor.kankanews" -> "random" [];
	"yt_dlp.extractor.kankanews" -> "string" [];
	"yt_dlp.extractor.kankanews" -> "time" [];
	"yt_dlp.extractor.kaltura" -> "base64" [];
	"yt_dlp.extractor.kaltura" -> "contextlib" [];
	"yt_dlp.extractor.kaltura" -> "json" [];
	"yt_dlp.extractor.kaltura" -> "re" [];
	"yt_dlp.extractor.jwplatform" -> "re" [];
	"yt_dlp.extractor.jtbc" -> "re" [];
	"yt_dlp.extractor.jstream" -> "base64" [];
	"yt_dlp.extractor.jstream" -> "json" [];
	"yt_dlp.extractor.jstream" -> "re" [];
	"yt_dlp.extractor.joqrag" -> "datetime" [];
	"yt_dlp.extractor.jiosaavn" -> "functools" [];
	"yt_dlp.extractor.jiosaavn" -> "math" [];
	"yt_dlp.extractor.jiosaavn" -> "re" [];
	"yt_dlp.extractor.jiocinema" -> "base64" [];
	"yt_dlp.extractor.jiocinema" -> "itertools" [];
	"yt_dlp.extractor.jiocinema" -> "json" [];
	"yt_dlp.extractor.jiocinema" -> "random" [];
	"yt_dlp.extractor.jiocinema" -> "re" [];
	"yt_dlp.extractor.jiocinema" -> "string" [];
	"yt_dlp.extractor.jiocinema" -> "time" [];
	"yt_dlp.extractor.japandiet" -> "re" [];
	"yt_dlp.extractor.jamendo" -> "hashlib" [];
	"yt_dlp.extractor.jamendo" -> "random" [];
	"yt_dlp.extractor.ixigua" -> "base64" [];
	"yt_dlp.extractor.iwara" -> "functools" [];
	"yt_dlp.extractor.iwara" -> "hashlib" [];
	"yt_dlp.extractor.iwara" -> "json" [];
	"yt_dlp.extractor.iwara" -> "time" [];
	"yt_dlp.extractor.ivi" -> "json" [];
	"yt_dlp.extractor.ivi" -> "re" [];
	"yt_dlp.extractor.itv" -> "json" [];
	"yt_dlp.extractor.itprotv" -> "re" [];
	"yt_dlp.extractor.islamchannel" -> "re" [];
	"yt_dlp.extractor.iqiyi" -> "hashlib" [];
	"yt_dlp.extractor.iqiyi" -> "itertools" [];
	"yt_dlp.extractor.iqiyi" -> "re" [];
	"yt_dlp.extractor.iqiyi" -> "time" [];
	"yt_dlp.extractor.iprima" -> "re" [];
	"yt_dlp.extractor.iprima" -> "time" [];
	"yt_dlp.extractor.internetvideoarchive" -> "json" [];
	"yt_dlp.extractor.internetvideoarchive" -> "re" [];
	"yt_dlp.extractor.instagram" -> "hashlib" [];
	"yt_dlp.extractor.instagram" -> "itertools" [];
	"yt_dlp.extractor.instagram" -> "json" [];
	"yt_dlp.extractor.instagram" -> "re" [];
	"yt_dlp.extractor.infoq" -> "base64" [];
	"yt_dlp.extractor.imgur" -> "functools" [];
	"yt_dlp.extractor.imgur" -> "re" [];
	"yt_dlp.extractor.imdb" -> "base64" [];
	"yt_dlp.extractor.imdb" -> "json" [];
	"yt_dlp.extractor.imdb" -> "re" [];
	"yt_dlp.extractor.ign" -> "re" [];
	"yt_dlp.extractor.icareus" -> "re" [];
	"yt_dlp.extractor.hytale" -> "re" [];
	"yt_dlp.extractor.huya" -> "base64" [];
	"yt_dlp.extractor.huya" -> "hashlib" [];
	"yt_dlp.extractor.huya" -> "random" [];
	"yt_dlp.extractor.huya" -> "re" [];
	"yt_dlp.extractor.huffpost" -> "re" [];
	"yt_dlp.extractor.hrti" -> "json" [];
	"yt_dlp.extractor.hrfensehen" -> "json" [];
	"yt_dlp.extractor.hrfensehen" -> "re" [];
	"yt_dlp.extractor.hotstar" -> "hashlib" [];
	"yt_dlp.extractor.hotstar" -> "hmac" [];
	"yt_dlp.extractor.hotstar" -> "json" [];
	"yt_dlp.extractor.hotstar" -> "re" [];
	"yt_dlp.extractor.hotstar" -> "time" [];
	"yt_dlp.extractor.hotstar" -> "uuid" [];
	"yt_dlp.extractor.hotnewhiphop" -> "base64" [];
	"yt_dlp.extractor.hollywoodreporter" -> "functools" [];
	"yt_dlp.extractor.hollywoodreporter" -> "re" [];
	"yt_dlp.extractor.hbo" -> "re" [];
	"yt_dlp.extractor.gronkh" -> "functools" [];
	"yt_dlp.extractor.gotostage" -> "json" [];
	"yt_dlp.extractor.goplay" -> "base64" [];
	"yt_dlp.extractor.goplay" -> "binascii" [];
	"yt_dlp.extractor.goplay" -> "datetime" [];
	"yt_dlp.extractor.goplay" -> "hashlib" [];
	"yt_dlp.extractor.goplay" -> "hmac" [];
	"yt_dlp.extractor.goplay" -> "json" [];
	"yt_dlp.extractor.goplay" -> "os" [];
	"yt_dlp.extractor.goplay" -> "re" [];
	"yt_dlp.extractor.googlesearch" -> "itertools" [];
	"yt_dlp.extractor.googlesearch" -> "re" [];
	"yt_dlp.extractor.googlepodcasts" -> "json" [];
	"yt_dlp.extractor.googledrive" -> "re" [];
	"yt_dlp.extractor.gofile" -> "hashlib" [];
	"yt_dlp.extractor.go" -> "re" [];
	"yt_dlp.extractor.glomex" -> "re" [];
	"yt_dlp.extractor.globo" -> "json" [];
	"yt_dlp.extractor.globo" -> "re" [];
	"yt_dlp.extractor.globo" -> "uuid" [];
	"yt_dlp.extractor.giantbomb" -> "json" [];
	"yt_dlp.extractor.getcourseru" -> "re" [];
	"yt_dlp.extractor.getcourseru" -> "time" [];
	"yt_dlp.extractor.genericembeds" -> "re" [];
	"yt_dlp.extractor.gedidigital" -> "re" [];
	"yt_dlp.extractor.gdcvault" -> "re" [];
	"yt_dlp.extractor.gaskrank" -> "re" [];
	"yt_dlp.extractor.gamejolt" -> "itertools" [];
	"yt_dlp.extractor.gamejolt" -> "json" [];
	"yt_dlp.extractor.gamejolt" -> "math" [];
	"yt_dlp.extractor.gamedevtv" -> "json" [];
	"yt_dlp.extractor.gab" -> "re" [];
	"yt_dlp.extractor.frontendmasters" -> "re" [];
	"yt_dlp.extractor.freetv" -> "itertools" [];
	"yt_dlp.extractor.freetv" -> "re" [];
	"yt_dlp.extractor.freesound" -> "re" [];
	"yt_dlp.extractor.francetv" -> "json" [];
	"yt_dlp.extractor.francetv" -> "re" [];
	"yt_dlp.extractor.fptplay" -> "hashlib" [];
	"yt_dlp.extractor.fptplay" -> "time" [];
	"yt_dlp.extractor.foxnews" -> "re" [];
	"yt_dlp.extractor.fox" -> "json" [];
	"yt_dlp.extractor.fox" -> "uuid" [];
	"yt_dlp.extractor.fourtube" -> "base64" [];
	"yt_dlp.extractor.fourtube" -> "re" [];
	"yt_dlp.extractor.floatplane" -> "functools" [];
	"yt_dlp.extractor.fc2" -> "re" [];
	"yt_dlp.extractor.faz" -> "re" [];
	"yt_dlp.extractor.fathom" -> "json" [];
	"yt_dlp.extractor.facebook" -> "json" [];
	"yt_dlp.extractor.facebook" -> "re" [];
	"yt_dlp.extractor.europeantour" -> "re" [];
	"yt_dlp.extractor.espn" -> "base64" [];
	"yt_dlp.extractor.espn" -> "json" [];
	"yt_dlp.extractor.espn" -> "re" [];
	"yt_dlp.extractor.ertgr" -> "json" [];
	"yt_dlp.extractor.ertgr" -> "re" [];
	"yt_dlp.extractor.eroprofile" -> "re" [];
	"yt_dlp.extractor.eplus" -> "json" [];
	"yt_dlp.extractor.epicon" -> "re" [];
	"yt_dlp.extractor.embedly" -> "re" [];
	"yt_dlp.extractor.elementorembed" -> "re" [];
	"yt_dlp.extractor.eighttracks" -> "json" [];
	"yt_dlp.extractor.eighttracks" -> "random" [];
	"yt_dlp.extractor.eggs" -> "secrets" [];
	"yt_dlp.extractor.eagleplatform" -> "functools" [];
	"yt_dlp.extractor.eagleplatform" -> "re" [];
	"yt_dlp.extractor.dvtv" -> "re" [];
	"yt_dlp.extractor.duboku" -> "base64" [];
	"yt_dlp.extractor.duboku" -> "re" [];
	"yt_dlp.extractor.dtube" -> "json" [];
	"yt_dlp.extractor.dtube" -> "socket" [];
	"yt_dlp.extractor.drtv" -> "json" [];
	"yt_dlp.extractor.drtv" -> "uuid" [];
	"yt_dlp.extractor.drtuber" -> "re" [];
	"yt_dlp.extractor.dropout" -> "functools" [];
	"yt_dlp.extractor.dropbox" -> "base64" [];
	"yt_dlp.extractor.dropbox" -> "os.path" [];
	"yt_dlp.extractor.dropbox" -> "re" [];
	"yt_dlp.extractor.drooble" -> "json" [];
	"yt_dlp.extractor.dplay" -> "json" [];
	"yt_dlp.extractor.dplay" -> "uuid" [];
	"yt_dlp.extractor.douyutv" -> "hashlib" [];
	"yt_dlp.extractor.douyutv" -> "time" [];
	"yt_dlp.extractor.douyutv" -> "urllib" [];
	"yt_dlp.extractor.douyutv" -> "uuid" [];
	"yt_dlp.extractor.dlive" -> "json" [];
	"yt_dlp.extractor.dlf" -> "re" [];
	"yt_dlp.extractor.dispeak" -> "re" [];
	"yt_dlp.extractor.disney" -> "re" [];
	"yt_dlp.extractor.digitalconcerthall" -> "time" [];
	"yt_dlp.extractor.democracynow" -> "os.path" [];
	"yt_dlp.extractor.democracynow" -> "re" [];
	"yt_dlp.extractor.daum" -> "itertools" [];
	"yt_dlp.extractor.dangalplay" -> "hashlib" [];
	"yt_dlp.extractor.dangalplay" -> "json" [];
	"yt_dlp.extractor.dangalplay" -> "re" [];
	"yt_dlp.extractor.dangalplay" -> "time" [];
	"yt_dlp.extractor.damtomo" -> "re" [];
	"yt_dlp.extractor.dailymotion" -> "functools" [];
	"yt_dlp.extractor.dailymotion" -> "json" [];
	"yt_dlp.extractor.dailymotion" -> "re" [];
	"yt_dlp.extractor.dacast" -> "functools" [];
	"yt_dlp.extractor.dacast" -> "hashlib" [];
	"yt_dlp.extractor.dacast" -> "re" [];
	"yt_dlp.extractor.dacast" -> "time" [];
	"yt_dlp.extractor.cwtv" -> "re" [];
	"yt_dlp.extractor.curiositystream" -> "re" [];
	"yt_dlp.extractor.ctvnews" -> "json" [];
	"yt_dlp.extractor.ctvnews" -> "re" [];
	"yt_dlp.extractor.cspan" -> "re" [];
	"yt_dlp.extractor.crtvg" -> "re" [];
	"yt_dlp.extractor.crowdbunker" -> "itertools" [];
	"yt_dlp.extractor.craftsy" -> "json" [];
	"yt_dlp.extractor.crackle" -> "hashlib" [];
	"yt_dlp.extractor.crackle" -> "hmac" [];
	"yt_dlp.extractor.crackle" -> "re" [];
	"yt_dlp.extractor.crackle" -> "time" [];
	"yt_dlp.extractor.cracked" -> "re" [];
	"yt_dlp.extractor.condenast" -> "re" [];
	"yt_dlp.extractor.cnn" -> "json" [];
	"yt_dlp.extractor.cnn" -> "re" [];
	"yt_dlp.extractor.cloudycdn" -> "re" [];
	"yt_dlp.extractor.cloudflarestream" -> "base64" [];
	"yt_dlp.extractor.closertotruth" -> "re" [];
	"yt_dlp.extractor.clippit" -> "re" [];
	"yt_dlp.extractor.ciscolive" -> "itertools" [];
	"yt_dlp.extractor.cineverse" -> "re" [];
	"yt_dlp.extractor.cinetecamilano" -> "json" [];
	"yt_dlp.extractor.chilloutzone" -> "base64" [];
	"yt_dlp.extractor.chaturbate" -> "re" [];
	"yt_dlp.extractor.ceskatelevize" -> "re" [];
	"yt_dlp.extractor.cda" -> "base64" [];
	"yt_dlp.extractor.cda" -> "codecs" [];
	"yt_dlp.extractor.cda" -> "datetime" [];
	"yt_dlp.extractor.cda" -> "hashlib" [];
	"yt_dlp.extractor.cda" -> "hmac" [];
	"yt_dlp.extractor.cda" -> "json" [];
	"yt_dlp.extractor.cda" -> "random" [];
	"yt_dlp.extractor.cda" -> "re" [];
	"yt_dlp.extractor.cctv" -> "re" [];
	"yt_dlp.extractor.cbsnews" -> "base64" [];
	"yt_dlp.extractor.cbsnews" -> "re" [];
	"yt_dlp.extractor.cbsnews" -> "zlib" [];
	"yt_dlp.extractor.cbc" -> "functools" [];
	"yt_dlp.extractor.cbc" -> "re" [];
	"yt_dlp.extractor.cbc" -> "time" [];
	"yt_dlp.extractor.caracoltv" -> "base64" [];
	"yt_dlp.extractor.caracoltv" -> "json" [];
	"yt_dlp.extractor.caracoltv" -> "uuid" [];
	"yt_dlp.extractor.canalsurmas" -> "json" [];
	"yt_dlp.extractor.canalsurmas" -> "time" [];
	"yt_dlp.extractor.canalc2" -> "re" [];
	"yt_dlp.extractor.camtasia" -> "os" [];
	"yt_dlp.extractor.camsoda" -> "random" [];
	"yt_dlp.extractor.camfm" -> "re" [];
	"yt_dlp.extractor.camdemy" -> "re" [];
	"yt_dlp.extractor.buzzfeed" -> "json" [];
	"yt_dlp.extractor.buzzfeed" -> "re" [];
	"yt_dlp.extractor.bunnycdn" -> "json" [];
	"yt_dlp.extractor.bundestag" -> "functools" [];
	"yt_dlp.extractor.bundestag" -> "re" [];
	"yt_dlp.extractor.brilliantpala" -> "hashlib" [];
	"yt_dlp.extractor.brightcove" -> "base64" [];
	"yt_dlp.extractor.brightcove" -> "re" [];
	"yt_dlp.extractor.brightcove" -> "struct" [];
	"yt_dlp.extractor.brainpop" -> "json" [];
	"yt_dlp.extractor.brainpop" -> "re" [];
	"yt_dlp.extractor.bpb" -> "re" [];
	"yt_dlp.extractor.box" -> "json" [];
	"yt_dlp.extractor.bostonglobe" -> "re" [];
	"yt_dlp.extractor.boosty" -> "json" [];
	"yt_dlp.extractor.bloomberg" -> "re" [];
	"yt_dlp.extractor.blerp" -> "json" [];
	"yt_dlp.extractor.bitchute" -> "functools" [];
	"yt_dlp.extractor.bitchute" -> "re" [];
	"yt_dlp.extractor.bilibili" -> "base64" [];
	"yt_dlp.extractor.bilibili" -> "functools" [];
	"yt_dlp.extractor.bilibili" -> "hashlib" [];
	"yt_dlp.extractor.bilibili" -> "itertools" [];
	"yt_dlp.extractor.bilibili" -> "json" [];
	"yt_dlp.extractor.bilibili" -> "math" [];
	"yt_dlp.extractor.bilibili" -> "random" [];
	"yt_dlp.extractor.bilibili" -> "re" [];
	"yt_dlp.extractor.bilibili" -> "string" [];
	"yt_dlp.extractor.bilibili" -> "time" [];
	"yt_dlp.extractor.bilibili" -> "uuid" [];
	"yt_dlp.extractor.bigflix" -> "base64" [];
	"yt_dlp.extractor.bigflix" -> "re" [];
	"yt_dlp.extractor.bfmtv" -> "re" [];
	"yt_dlp.extractor.bfi" -> "re" [];
	"yt_dlp.extractor.beatport" -> "re" [];
	"yt_dlp.extractor.beacon" -> "json" [];
	"yt_dlp.extractor.bbc" -> "functools" [];
	"yt_dlp.extractor.bbc" -> "itertools" [];
	"yt_dlp.extractor.bbc" -> "json" [];
	"yt_dlp.extractor.bbc" -> "re" [];
	"yt_dlp.extractor.bannedvideo" -> "json" [];
	"yt_dlp.extractor.bandcamp" -> "json" [];
	"yt_dlp.extractor.bandcamp" -> "random" [];
	"yt_dlp.extractor.bandcamp" -> "re" [];
	"yt_dlp.extractor.bandcamp" -> "time" [];
	"yt_dlp.extractor.banbye" -> "math" [];
	"yt_dlp.extractor.awaan" -> "base64" [];
	"yt_dlp.extractor.audius" -> "random" [];
	"yt_dlp.extractor.audiomack" -> "itertools" [];
	"yt_dlp.extractor.audiomack" -> "time" [];
	"yt_dlp.extractor.atvat" -> "datetime" [];
	"yt_dlp.extractor.atscaleconf" -> "re" [];
	"yt_dlp.extractor.asobistage" -> "functools" [];
	"yt_dlp.extractor.arte" -> "re" [];
	"yt_dlp.extractor.art19" -> "re" [];
	"yt_dlp.extractor.ard" -> "functools" [];
	"yt_dlp.extractor.ard" -> "re" [];
	"yt_dlp.extractor.arcpublishing" -> "re" [];
	"yt_dlp.extractor.archiveorg" -> "__future__" [];
	"yt_dlp.extractor.archiveorg" -> "json" [];
	"yt_dlp.extractor.archiveorg" -> "re" [];
	"yt_dlp.extractor.appletrailers" -> "json" [];
	"yt_dlp.extractor.appletrailers" -> "re" [];
	"yt_dlp.extractor.aol" -> "re" [];
	"yt_dlp.extractor.anvato" -> "base64" [];
	"yt_dlp.extractor.anvato" -> "hashlib" [];
	"yt_dlp.extractor.anvato" -> "json" [];
	"yt_dlp.extractor.anvato" -> "random" [];
	"yt_dlp.extractor.anvato" -> "re" [];
	"yt_dlp.extractor.anvato" -> "time" [];
	"yt_dlp.extractor.angel" -> "re" [];
	"yt_dlp.extractor.americastestkitchen" -> "json" [];
	"yt_dlp.extractor.amcnetworks" -> "re" [];
	"yt_dlp.extractor.amazonminitv" -> "json" [];
	"yt_dlp.extractor.amazon" -> "re" [];
	"yt_dlp.extractor.alura" -> "re" [];
	"yt_dlp.extractor.altcensored" -> "re" [];
	"yt_dlp.extractor.allstar" -> "functools" [];
	"yt_dlp.extractor.allstar" -> "json" [];
	"yt_dlp.extractor.aljazeera" -> "json" [];
	"yt_dlp.extractor.agora" -> "functools" [];
	"yt_dlp.extractor.agora" -> "uuid" [];
	"yt_dlp.extractor.afreecatv" -> "datetime" [];
	"yt_dlp.extractor.afreecatv" -> "functools" [];
	"yt_dlp.extractor.adultswim" -> "json" [];
	"yt_dlp.extractor.adobetv" -> "functools" [];
	"yt_dlp.extractor.adobetv" -> "re" [];
	"yt_dlp.extractor.adn" -> "base64" [];
	"yt_dlp.extractor.adn" -> "binascii" [];
	"yt_dlp.extractor.adn" -> "json" [];
	"yt_dlp.extractor.adn" -> "os" [];
	"yt_dlp.extractor.adn" -> "random" [];
	"yt_dlp.extractor.adn" -> "time" [];
	"yt_dlp.extractor.academicearth" -> "re" [];
	"yt_dlp.extractor.abematv" -> "base64" [];
	"yt_dlp.extractor.abematv" -> "binascii" [];
	"yt_dlp.extractor.abematv" -> "functools" [];
	"yt_dlp.extractor.abematv" -> "hashlib" [];
	"yt_dlp.extractor.abematv" -> "hmac" [];
	"yt_dlp.extractor.abematv" -> "io" [];
	"yt_dlp.extractor.abematv" -> "json" [];
	"yt_dlp.extractor.abematv" -> "re" [];
	"yt_dlp.extractor.abematv" -> "time" [];
	"yt_dlp.extractor.abematv" -> "uuid" [];
	"yt_dlp.extractor.abc" -> "hashlib" [];
	"yt_dlp.extractor.abc" -> "hmac" [];
	"yt_dlp.extractor.abc" -> "re" [];
	"yt_dlp.extractor.abc" -> "time" [];
	"yt_dlp.downloader.external" -> "enum" [];
	"yt_dlp.downloader.external" -> "functools" [];
	"yt_dlp.downloader.external" -> "json" [];
	"yt_dlp.downloader.external" -> "os" [];
	"yt_dlp.downloader.external" -> "re" [];
	"yt_dlp.downloader.external" -> "subprocess" [];
	"yt_dlp.downloader.external" -> "sys" [];
	"yt_dlp.downloader.external" -> "tempfile" [];
	"yt_dlp.downloader.external" -> "time" [];
	"yt_dlp.downloader.external" -> "uuid" [];
	"yt_dlp.webvtt" -> "io" [];
	"yt_dlp.webvtt" -> "re" [];
	"yt_dlp.cookies" -> "base64" [];
	"yt_dlp.cookies" -> "collections" [];
	"yt_dlp.cookies" -> "contextlib" [];
	"yt_dlp.cookies" -> "datetime" [];
	"yt_dlp.cookies" -> "functools" [];
	"yt_dlp.cookies" -> "glob" [];
	"yt_dlp.cookies" -> "hashlib" [];
	"yt_dlp.cookies" -> "io" [];
	"yt_dlp.cookies" -> "json" [];
	"yt_dlp.cookies" -> "os" [];
	"yt_dlp.cookies" -> "re" [];
	"yt_dlp.cookies" -> "shutil" [];
	"yt_dlp.cookies" -> "struct" [];
	"yt_dlp.cookies" -> "subprocess" [];
	"yt_dlp.cookies" -> "sys" [];
	"yt_dlp.cookies" -> "tempfile" [];
	"yt_dlp.cookies" -> "time" [];
	"yt_dlp.cookies" -> "enum" [];
	"yt_dlp.cookies" -> "ctypes" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "contextlib" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "mimetypes" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "tempfile" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "io" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "pathlib" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "typing" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "cloudpathlib" [];
	"langchain_community.document_loaders.blackboard" -> "contextlib" [];
	"langchain_community.document_loaders.blackboard" -> "re" [];
	"langchain_community.document_loaders.blackboard" -> "pathlib" [];
	"langchain_community.document_loaders.blackboard" -> "typing" [];
	"langchain_community.document_loaders.blackboard" -> "bs4" [];
	"langchain_community.document_loaders.bilibili" -> "json" [];
	"langchain_community.document_loaders.bilibili" -> "re" [];
	"langchain_community.document_loaders.bilibili" -> "warnings" [];
	"langchain_community.document_loaders.bilibili" -> "typing" [];
	"langchain_community.document_loaders.bilibili" -> "requests" [];
	"langchain_community.document_loaders.bilibili" -> "bilibili_api" [];
	"langchain_community.document_loaders.bigquery" -> "__future__" [];
	"langchain_community.document_loaders.bigquery" -> "typing" [];
	"langchain_community.document_loaders.bibtex" -> "logging" [];
	"langchain_community.document_loaders.bibtex" -> "re" [];
	"langchain_community.document_loaders.bibtex" -> "pathlib" [];
	"langchain_community.document_loaders.bibtex" -> "typing" [];
	"langchain_community.document_loaders.bibtex" -> "fitz" [];
	"langchain_community.utilities.bibtex" -> "logging" [];
	"langchain_community.utilities.bibtex" -> "typing" [];
	"langchain_community.utilities.bibtex" -> "pydantic" [];
	"langchain_community.utilities.bibtex" -> "bibtexparser" [];
	"langchain_community.document_loaders.azure_blob_storage_file" -> "os" [];
	"langchain_community.document_loaders.azure_blob_storage_file" -> "tempfile" [];
	"langchain_community.document_loaders.azure_blob_storage_file" -> "typing" [];
	"langchain_community.document_loaders.azure_blob_storage_file" -> "azure" [];
	"langchain_community.document_loaders.azure_blob_storage_container" -> "typing" [];
	"langchain_community.document_loaders.azure_blob_storage_container" -> "'azure.storage'" [];
	"langchain_community.document_loaders.azure_ai_data" -> "typing" [];
	"langchain_community.document_loaders.azure_ai_data" -> "azureml" [];
	"langchain_community.document_loaders.azlyrics" -> "typing" [];
	"langchain_community.document_loaders.athena" -> "__future__" [];
	"langchain_community.document_loaders.athena" -> "io" [];
	"langchain_community.document_loaders.athena" -> "json" [];
	"langchain_community.document_loaders.athena" -> "time" [];
	"langchain_community.document_loaders.athena" -> "typing" [];
	"langchain_community.document_loaders.athena" -> "boto3" [];
	"langchain_community.document_loaders.athena" -> "pandas" [];
	"langchain_community.document_loaders.async_html" -> "asyncio" [];
	"langchain_community.document_loaders.async_html" -> "logging" [];
	"langchain_community.document_loaders.async_html" -> "warnings" [];
	"langchain_community.document_loaders.async_html" -> "typing" [];
	"langchain_community.document_loaders.async_html" -> "aiohttp" [];
	"langchain_community.document_loaders.async_html" -> "requests" [];
	"langchain_community.document_loaders.async_html" -> "fake_useragent" [];
	"langchain_community.document_loaders.async_html" -> "bs4" [];
	"langchain_community.document_loaders.astradb" -> "__future__" [];
	"langchain_community.document_loaders.astradb" -> "json" [];
	"langchain_community.document_loaders.astradb" -> "logging" [];
	"langchain_community.document_loaders.astradb" -> "typing" [];
	"langchain_community.document_loaders.astradb" -> "'astrapy.db'" [];
	"langchain_community.utilities.astradb" -> "__future__" [];
	"langchain_community.utilities.astradb" -> "asyncio" [];
	"langchain_community.utilities.astradb" -> "inspect" [];
	"langchain_community.utilities.astradb" -> "enum" [];
	"langchain_community.utilities.astradb" -> "typing" [];
	"langchain_community.utilities.astradb" -> "astrapy" [];
	"langchain_community.utilities.astradb" -> "'astrapy.db'" [];
	"langchain_community.document_loaders.assemblyai" -> "__future__" [];
	"langchain_community.document_loaders.assemblyai" -> "enum" [];
	"langchain_community.document_loaders.assemblyai" -> "pathlib" [];
	"langchain_community.document_loaders.assemblyai" -> "typing" [];
	"langchain_community.document_loaders.assemblyai" -> "requests" [];
	"langchain_community.document_loaders.assemblyai" -> "assemblyai" [];
	"langchain_community.document_loaders.arxiv" -> "typing" [];
	"langchain_community.document_loaders.arcgis_loader" -> "__future__" [];
	"langchain_community.document_loaders.arcgis_loader" -> "json" [];
	"langchain_community.document_loaders.arcgis_loader" -> "re" [];
	"langchain_community.document_loaders.arcgis_loader" -> "warnings" [];
	"langchain_community.document_loaders.arcgis_loader" -> "datetime" [];
	"langchain_community.document_loaders.arcgis_loader" -> "typing" [];
	"langchain_community.document_loaders.arcgis_loader" -> "arcgis" [];
	"langchain_community.document_loaders.arcgis_loader" -> "bs4" [];
	"langchain_community.document_loaders.apify_dataset" -> "typing" [];
	"langchain_community.document_loaders.apify_dataset" -> "pydantic" [];
	"langchain_community.document_loaders.apify_dataset" -> "apify_client" [];
	"langchain_community.document_loaders.airtable" -> "typing" [];
	"langchain_community.document_loaders.airtable" -> "pyairtable" [];
	"langchain_community.document_loaders.airbyte_json" -> "json" [];
	"langchain_community.document_loaders.airbyte_json" -> "pathlib" [];
	"langchain_community.document_loaders.airbyte_json" -> "typing" [];
	"langchain_community.document_loaders.airbyte" -> "typing" [];
	"langchain_community.document_loaders.airbyte" -> "airbyte_cdk" [];
	"langchain_community.document_loaders.airbyte" -> "'airbyte_cdk.sources'" [];
	"langchain_community.document_loaders.acreom" -> "re" [];
	"langchain_community.document_loaders.acreom" -> "pathlib" [];
	"langchain_community.document_loaders.acreom" -> "typing" [];
	"langchain_core.output_parsers" -> "typing" [];
	"langchain_core.output_parsers.xml" -> "contextlib" [];
	"langchain_core.output_parsers.xml" -> "re" [];
	"langchain_core.output_parsers.xml" -> "xml" [];
	"langchain_core.output_parsers.xml" -> "typing" [];
	"langchain_core.output_parsers.xml" -> "defusedxml" [];
	"defusedxml.ElementTree" -> "__future__" [];
	"defusedxml.ElementTree" -> "sys" [];
	"defusedxml.ElementTree" -> "warnings" [];
	"defusedxml.ElementTree" -> "importlib" [];
	"defusedxml.common" -> "sys" [];
	"defusedxml" -> "__future__" [];
	"defusedxml" -> "warnings" [];
	"defusedxml.xmlrpc" -> "__future__" [];
	"defusedxml.xmlrpc" -> "io" [];
	"defusedxml.xmlrpc" -> "xmlrpc" [];
	"defusedxml.xmlrpc" -> "xmlrpclib" [];
	"defusedxml.xmlrpc" -> "gzip" [];
	"defusedxml.sax" -> "__future__" [];
	"defusedxml.sax" -> "io" [];
	"defusedxml.minidom" -> "__future__" [];
	"defusedxml.pulldom" -> "__future__" [];
	"defusedxml.expatreader" -> "__future__" [];
	"defusedxml.expatbuilder" -> "__future__" [];
	"defusedxml.cElementTree" -> "__future__" [];
	"defusedxml.cElementTree" -> "warnings" [];
	"langchain_core.output_parsers.pydantic" -> "json" [];
	"langchain_core.output_parsers.pydantic" -> "typing" [];
	"langchain_core.output_parsers.pydantic" -> "pydantic" [];
	"langchain_core.output_parsers.pydantic" -> "typing_extensions" [];
	"langchain_core.output_parsers.list" -> "__future__" [];
	"langchain_core.output_parsers.list" -> "csv" [];
	"langchain_core.output_parsers.list" -> "re" [];
	"langchain_core.output_parsers.list" -> "abc" [];
	"langchain_core.output_parsers.list" -> "collections" [];
	"langchain_core.output_parsers.list" -> "io" [];
	"langchain_core.output_parsers.list" -> "typing" [];
	"langchain_core.output_parsers.list" -> "typing_extensions" [];
	"langchain.chains.prompt_selector" -> "abc" [];
	"langchain.chains.prompt_selector" -> "typing" [];
	"langchain.chains.prompt_selector" -> "pydantic" [];
	"langchain_community.retrievers.weaviate_hybrid_search" -> "__future__" [];
	"langchain_community.retrievers.weaviate_hybrid_search" -> "typing" [];
	"langchain_community.retrievers.weaviate_hybrid_search" -> "uuid" [];
	"langchain_community.retrievers.weaviate_hybrid_search" -> "pydantic" [];
	"langchain_community.retrievers.weaviate_hybrid_search" -> "weaviate" [];
	"langchain_community.retrievers.weaviate_hybrid_search" -> "'weaviate.util'" [];
	"langchain_community.retrievers.vespa_retriever" -> "__future__" [];
	"langchain_community.retrievers.vespa_retriever" -> "json" [];
	"langchain_community.retrievers.vespa_retriever" -> "typing" [];
	"langchain_community.retrievers.vespa_retriever" -> "vespa" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "__future__" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "importlib" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "os" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "pathlib" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "typing" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "pydantic" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "thirdai" [];
	"langchain_community.retrievers.tfidf" -> "__future__" [];
	"langchain_community.retrievers.tfidf" -> "pickle" [];
	"langchain_community.retrievers.tfidf" -> "pathlib" [];
	"langchain_community.retrievers.tfidf" -> "typing" [];
	"langchain_community.retrievers.tfidf" -> "pydantic" [];
	"langchain_community.retrievers.tfidf" -> "'sklearn.feature_extraction'" [];
	"langchain_community.retrievers.tfidf" -> "'sklearn.metrics'" [];
	"langchain_community.retrievers.tfidf" -> "joblib" [];
	"langchain_community.retrievers.tavily_search_api" -> "os" [];
	"langchain_community.retrievers.tavily_search_api" -> "enum" [];
	"langchain_community.retrievers.tavily_search_api" -> "typing" [];
	"langchain_community.retrievers.tavily_search_api" -> "tavily" [];
	"langchain_community.retrievers.svm" -> "__future__" [];
	"langchain_community.retrievers.svm" -> "typing" [];
	"langchain_community.retrievers.svm" -> "numpy" [];
	"langchain_community.retrievers.svm" -> "pydantic" [];
	"langchain_community.retrievers.svm" -> "sklearn" [];
	"langchain_community.retrievers.remote_retriever" -> "typing" [];
	"langchain_community.retrievers.remote_retriever" -> "aiohttp" [];
	"langchain_community.retrievers.remote_retriever" -> "requests" [];
	"langchain_community.retrievers.rememberizer" -> "typing" [];
	"langchain_community.utilities.rememberizer" -> "typing" [];
	"langchain_community.utilities.rememberizer" -> "requests" [];
	"langchain_community.utilities.rememberizer" -> "pydantic" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "uuid" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "itertools" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "typing" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "pydantic" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "grpc" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "qdrant_client" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "'qdrant_client.http'" [];
	"langchain_community.retrievers.pubmed" -> "typing" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "hashlib" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "typing" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "pydantic" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "pinecone_text" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "'pinecone_text.sparse'" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "'pinecone_text.hybrid'" [];
	"langchain_community.retrievers.outline" -> "typing" [];
	"langchain_community.utilities.outline" -> "logging" [];
	"langchain_community.utilities.outline" -> "typing" [];
	"langchain_community.utilities.outline" -> "requests" [];
	"langchain_community.utilities.outline" -> "pydantic" [];
	"langchain_community.retrievers.needle" -> "typing" [];
	"langchain_community.retrievers.needle" -> "pydantic" [];
	"langchain_community.retrievers.needle" -> "'needle.v1'" [];
	"langchain_community.retrievers.nanopq" -> "__future__" [];
	"langchain_community.retrievers.nanopq" -> "typing" [];
	"langchain_community.retrievers.nanopq" -> "numpy" [];
	"langchain_community.retrievers.nanopq" -> "pydantic" [];
	"langchain_community.retrievers.nanopq" -> "nanopq" [];
	"langchain_community.retrievers.milvus" -> "warnings" [];
	"langchain_community.retrievers.milvus" -> "typing" [];
	"langchain_community.retrievers.milvus" -> "pydantic" [];
	"langchain_community.retrievers.metal" -> "typing" [];
	"langchain_community.retrievers.metal" -> "pydantic" [];
	"langchain_community.retrievers.metal" -> "metal_sdk" [];
	"langchain_community.retrievers.llama_index" -> "typing" [];
	"langchain_community.retrievers.llama_index" -> "pydantic" [];
	"langchain_community.retrievers.llama_index" -> "llama_index" [];
	"langchain_community.retrievers.llama_index" -> "'llama_index.core'" [];
	"langchain_community.retrievers.knn" -> "__future__" [];
	"langchain_community.retrievers.knn" -> "typing" [];
	"langchain_community.retrievers.knn" -> "numpy" [];
	"langchain_community.retrievers.knn" -> "pydantic" [];
	"langchain_community.retrievers.kendra" -> "re" [];
	"langchain_community.retrievers.kendra" -> "abc" [];
	"langchain_community.retrievers.kendra" -> "typing" [];
	"langchain_community.retrievers.kendra" -> "pydantic" [];
	"langchain_community.retrievers.kendra" -> "typing_extensions" [];
	"langchain_community.retrievers.kendra" -> "boto3" [];
	"langchain_community.retrievers.kay" -> "__future__" [];
	"langchain_community.retrievers.kay" -> "typing" [];
	"langchain_community.retrievers.kay" -> "kay" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "__future__" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "typing" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "pydantic" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "'google.cloud.discoveryengine_v1beta'" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "json" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "warnings" [];
	"langchain_community.retrievers.google_cloud_documentai_warehouse" -> "typing" [];
	"langchain_community.retrievers.google_cloud_documentai_warehouse" -> "'google.cloud.contentwarehouse_v1'" [];
	"langchain_community.retrievers.embedchain" -> "__future__" [];
	"langchain_community.retrievers.embedchain" -> "typing" [];
	"langchain_community.retrievers.embedchain" -> "embedchain" [];
	"langchain_community.retrievers.elastic_search_bm25" -> "__future__" [];
	"langchain_community.retrievers.elastic_search_bm25" -> "uuid" [];
	"langchain_community.retrievers.elastic_search_bm25" -> "typing" [];
	"langchain_community.retrievers.elastic_search_bm25" -> "elasticsearch" [];
	"langchain_community.retrievers.elastic_search_bm25" -> "'elasticsearch.helpers'" [];
	"langchain_community.retrievers.dria_index" -> "typing" [];
	"langchain_community.retrievers.docarray" -> "enum" [];
	"langchain_community.retrievers.docarray" -> "typing" [];
	"langchain_community.retrievers.docarray" -> "numpy" [];
	"langchain_community.retrievers.docarray" -> "pydantic" [];
	"langchain_community.retrievers.docarray" -> "'docarray.index'" [];
	"langchain_community.retrievers.cohere_rag_retriever" -> "__future__" [];
	"langchain_community.retrievers.cohere_rag_retriever" -> "typing" [];
	"langchain_community.retrievers.cohere_rag_retriever" -> "pydantic" [];
	"langchain_community.retrievers.chatgpt_plugin_retriever" -> "__future__" [];
	"langchain_community.retrievers.chatgpt_plugin_retriever" -> "typing" [];
	"langchain_community.retrievers.chatgpt_plugin_retriever" -> "aiohttp" [];
	"langchain_community.retrievers.chatgpt_plugin_retriever" -> "requests" [];
	"langchain_community.retrievers.chatgpt_plugin_retriever" -> "pydantic" [];
	"langchain_community.retrievers.chaindesk" -> "typing" [];
	"langchain_community.retrievers.chaindesk" -> "aiohttp" [];
	"langchain_community.retrievers.chaindesk" -> "requests" [];
	"langchain_community.retrievers.breebs" -> "typing" [];
	"langchain_community.retrievers.breebs" -> "requests" [];
	"langchain_community.retrievers.bm25" -> "__future__" [];
	"langchain_community.retrievers.bm25" -> "typing" [];
	"langchain_community.retrievers.bm25" -> "pydantic" [];
	"langchain_community.retrievers.bm25" -> "rank_bm25" [];
	"langchain_community.retrievers.bedrock" -> "typing" [];
	"langchain_community.retrievers.bedrock" -> "pydantic" [];
	"langchain_community.retrievers.bedrock" -> "boto3" [];
	"langchain_community.retrievers.bedrock" -> "'botocore.client'" [];
	"langchain_community.retrievers.bedrock" -> "'botocore.exceptions'" [];
	"langchain_community.retrievers.azure_ai_search" -> "__future__" [];
	"langchain_community.retrievers.azure_ai_search" -> "json" [];
	"langchain_community.retrievers.azure_ai_search" -> "typing" [];
	"langchain_community.retrievers.azure_ai_search" -> "aiohttp" [];
	"langchain_community.retrievers.azure_ai_search" -> "requests" [];
	"langchain_community.retrievers.azure_ai_search" -> "pydantic" [];
	"langchain_community.retrievers.asknews" -> "os" [];
	"langchain_community.retrievers.asknews" -> "re" [];
	"langchain_community.retrievers.asknews" -> "typing" [];
	"langchain_community.retrievers.asknews" -> "asknews_sdk" [];
	"langchain_community.retrievers.asknews" -> "'asknews_sdk.dto'" [];
	"langchain_community.retrievers.arxiv" -> "typing" [];
	"langchain_community.retrievers.arcee" -> "typing" [];
	"langchain_community.retrievers.arcee" -> "pydantic" [];
	"langchain_community.utilities.arcee" -> "enum" [];
	"langchain_community.utilities.arcee" -> "typing" [];
	"langchain_community.utilities.arcee" -> "requests" [];
	"langchain_community.utilities.arcee" -> "pydantic" [];
	"langchain.retrievers.time_weighted_retriever" -> "datetime" [];
	"langchain.retrievers.time_weighted_retriever" -> "copy" [];
	"langchain.retrievers.time_weighted_retriever" -> "typing" [];
	"langchain.retrievers.time_weighted_retriever" -> "pydantic" [];
	"langchain.retrievers.self_query.base" -> "logging" [];
	"langchain.retrievers.self_query.base" -> "typing" [];
	"langchain.retrievers.self_query.base" -> "pydantic" [];
	"langchain.retrievers.self_query.base" -> "langchain_community" [];
	"langchain.retrievers.self_query.base" -> "langchain_astradb" [];
	"langchain.retrievers.self_query.base" -> "langchain_elasticsearch" [];
	"langchain.retrievers.self_query.base" -> "langchain_pinecone" [];
	"langchain.retrievers.self_query.base" -> "langchain_mongodb" [];
	"langchain.retrievers.self_query.base" -> "langchain_neo4j" [];
	"langchain.retrievers.self_query.base" -> "langchain_chroma" [];
	"langchain.retrievers.self_query.base" -> "langchain_postgres" [];
	"langchain.retrievers.self_query.base" -> "langchain_qdrant" [];
	"langchain.retrievers.self_query.base" -> "langchain_weaviate" [];
	"langchain_community.query_constructors.hanavector" -> "typing" [];
	"langchain_community.query_constructors.weaviate" -> "datetime" [];
	"langchain_community.query_constructors.weaviate" -> "typing" [];
	"langchain_community.query_constructors.vectara" -> "typing" [];
	"langchain_community.query_constructors.timescalevector" -> "__future__" [];
	"langchain_community.query_constructors.timescalevector" -> "typing" [];
	"langchain_community.query_constructors.timescalevector" -> "timescale_vector" [];
	"langchain_community.query_constructors.supabase" -> "typing" [];
	"langchain_community.query_constructors.redis" -> "__future__" [];
	"langchain_community.query_constructors.redis" -> "typing" [];
	"langchain_community.vectorstores.redis.schema" -> "__future__" [];
	"langchain_community.vectorstores.redis.schema" -> "os" [];
	"langchain_community.vectorstores.redis.schema" -> "enum" [];
	"langchain_community.vectorstores.redis.schema" -> "pathlib" [];
	"langchain_community.vectorstores.redis.schema" -> "typing" [];
	"langchain_community.vectorstores.redis.schema" -> "numpy" [];
	"langchain_community.vectorstores.redis.schema" -> "yaml" [];
	"langchain_community.vectorstores.redis.schema" -> "pydantic" [];
	"langchain_community.vectorstores.redis.schema" -> "typing_extensions" [];
	"langchain_community.vectorstores.redis.schema" -> "'redis.commands'" [];
	"langchain_community.vectorstores.redis.constants" -> "typing" [];
	"langchain_community.vectorstores.redis.constants" -> "numpy" [];
	"langchain_community.vectorstores.redis.filters" -> "enum" [];
	"langchain_community.vectorstores.redis.filters" -> "functools" [];
	"langchain_community.vectorstores.redis.filters" -> "typing" [];
	"langchain_community.utilities.redis" -> "__future__" [];
	"langchain_community.utilities.redis" -> "logging" [];
	"langchain_community.utilities.redis" -> "re" [];
	"langchain_community.utilities.redis" -> "typing" [];
	"langchain_community.utilities.redis" -> "numpy" [];
	"langchain_community.utilities.redis" -> "'redis.client'" [];
	"langchain_community.utilities.redis" -> "redis" [];
	"langchain_community.utilities.redis" -> "'redis.cluster'" [];
	"langchain_community.query_constructors.qdrant" -> "__future__" [];
	"langchain_community.query_constructors.qdrant" -> "typing" [];
	"langchain_community.query_constructors.qdrant" -> "'qdrant_client.http'" [];
	"langchain_community.query_constructors.pinecone" -> "typing" [];
	"langchain_community.query_constructors.pgvector" -> "typing" [];
	"langchain_community.query_constructors.opensearch" -> "typing" [];
	"langchain_community.query_constructors.neo4j" -> "typing" [];
	"langchain_community.query_constructors.myscale" -> "re" [];
	"langchain_community.query_constructors.myscale" -> "typing" [];
	"langchain_community.query_constructors.mongodb_atlas" -> "typing" [];
	"langchain_community.query_constructors.milvus" -> "typing" [];
	"langchain_community.query_constructors.elasticsearch" -> "typing" [];
	"langchain_community.query_constructors.dingo" -> "typing" [];
	"langchain_community.query_constructors.deeplake" -> "typing" [];
	"langchain_community.query_constructors.databricks_vector_search" -> "collections" [];
	"langchain_community.query_constructors.databricks_vector_search" -> "itertools" [];
	"langchain_community.query_constructors.databricks_vector_search" -> "typing" [];
	"langchain_community.query_constructors.dashvector" -> "typing" [];
	"langchain_community.query_constructors.chroma" -> "typing" [];
	"langchain_community.query_constructors.astradb" -> "typing" [];
	"langchain.chains.query_constructor.schema" -> "pydantic" [];
	"langchain.retrievers.re_phraser" -> "logging" [];
	"langchain.retrievers.parent_document_retriever" -> "uuid" [];
	"langchain.retrievers.parent_document_retriever" -> "typing" [];
	"langchain.retrievers.parent_document_retriever" -> "langchain_text_splitters" [];
	"langchain.retrievers.multi_vector" -> "enum" [];
	"langchain.retrievers.multi_vector" -> "typing" [];
	"langchain.retrievers.multi_vector" -> "pydantic" [];
	"langchain.storage._lc_store" -> "typing" [];
	"langchain.storage" -> "typing" [];
	"langchain_community.storage" -> "importlib" [];
	"langchain_community.storage" -> "typing" [];
	"langchain_community.storage.upstash_redis" -> "typing" [];
	"langchain_community.storage.upstash_redis" -> "upstash_redis" [];
	"langchain_community.storage.sql" -> "contextlib" [];
	"langchain_community.storage.sql" -> "pathlib" [];
	"langchain_community.storage.sql" -> "typing" [];
	"langchain_community.storage.sql" -> "sqlalchemy" [];
	"langchain_community.storage.redis" -> "typing" [];
	"langchain_community.storage.redis" -> "redis" [];
	"langchain_community.storage.mongodb" -> "typing" [];
	"langchain_community.storage.mongodb" -> "pymongo" [];
	"langchain_community.storage.cassandra" -> "__future__" [];
	"langchain_community.storage.cassandra" -> "asyncio" [];
	"langchain_community.storage.cassandra" -> "typing" [];
	"langchain_community.storage.cassandra" -> "'cassandra.cluster'" [];
	"langchain_community.storage.cassandra" -> "'cassandra.query'" [];
	"langchain_community.storage.cassandra" -> "'cassio.config'" [];
	"langchain_community.storage.astradb" -> "__future__" [];
	"langchain_community.storage.astradb" -> "base64" [];
	"langchain_community.storage.astradb" -> "abc" [];
	"langchain_community.storage.astradb" -> "typing" [];
	"langchain_community.storage.astradb" -> "'astrapy.db'" [];
	"langchain.storage.file_system" -> "os" [];
	"langchain.storage.file_system" -> "re" [];
	"langchain.storage.file_system" -> "time" [];
	"langchain.storage.file_system" -> "pathlib" [];
	"langchain.storage.file_system" -> "typing" [];
	"langchain.storage.encoder_backed" -> "typing" [];
	"langchain.retrievers.multi_query" -> "asyncio" [];
	"langchain.retrievers.multi_query" -> "logging" [];
	"langchain.retrievers.multi_query" -> "typing" [];
	"langchain.retrievers.merger_retriever" -> "asyncio" [];
	"langchain.retrievers.ensemble" -> "asyncio" [];
	"langchain.retrievers.ensemble" -> "collections" [];
	"langchain.retrievers.ensemble" -> "itertools" [];
	"langchain.retrievers.ensemble" -> "typing" [];
	"langchain.retrievers.ensemble" -> "pydantic" [];
	"langchain.retrievers.contextual_compression" -> "typing" [];
	"langchain.retrievers.contextual_compression" -> "pydantic" [];
	"langchain.retrievers.document_compressors.base" -> "inspect" [];
	"langchain.retrievers.document_compressors.base" -> "typing" [];
	"langchain.retrievers.document_compressors.base" -> "pydantic" [];
	"langchain.retrievers.document_compressors" -> "importlib" [];
	"langchain.retrievers.document_compressors" -> "typing" [];
	"langchain.retrievers.document_compressors.listwise_rerank" -> "typing" [];
	"langchain.retrievers.document_compressors.listwise_rerank" -> "pydantic" [];
	"langchain.retrievers.document_compressors.embeddings_filter" -> "typing" [];
	"langchain.retrievers.document_compressors.embeddings_filter" -> "pydantic" [];
	"langchain.retrievers.document_compressors.embeddings_filter" -> "numpy" [];
	"langchain.retrievers.document_compressors.cross_encoder_rerank" -> "__future__" [];
	"langchain.retrievers.document_compressors.cross_encoder_rerank" -> "operator" [];
	"langchain.retrievers.document_compressors.cross_encoder_rerank" -> "typing" [];
	"langchain.retrievers.document_compressors.cross_encoder_rerank" -> "pydantic" [];
	"langchain.retrievers.document_compressors.cross_encoder" -> "abc" [];
	"langchain.retrievers.document_compressors.cohere_rerank" -> "__future__" [];
	"langchain.retrievers.document_compressors.cohere_rerank" -> "copy" [];
	"langchain.retrievers.document_compressors.cohere_rerank" -> "typing" [];
	"langchain.retrievers.document_compressors.cohere_rerank" -> "pydantic" [];
	"langchain.retrievers.document_compressors.cohere_rerank" -> "cohere" [];
	"langchain.retrievers.document_compressors.chain_filter" -> "typing" [];
	"langchain.retrievers.document_compressors.chain_filter" -> "pydantic" [];
	"langchain.retrievers.document_compressors.chain_extract" -> "__future__" [];
	"langchain.retrievers.document_compressors.chain_extract" -> "typing" [];
	"langchain.retrievers.document_compressors.chain_extract" -> "pydantic" [];
	"langchain._api.module_import" -> "importlib" [];
	"langchain._api.module_import" -> "typing" [];
	"langchain_community.query_constructors.tencentvectordb" -> "__future__" [];
	"langchain_community.query_constructors.tencentvectordb" -> "typing" [];
	"langchain.chains.query_constructor.parser" -> "datetime" [];
	"langchain.chains.query_constructor.parser" -> "warnings" [];
	"langchain.chains.query_constructor.parser" -> "typing" [];
	"langchain.chains.query_constructor.parser" -> "typing_extensions" [];
	"langchain.chains.query_constructor.parser" -> "lark" [];
	"langchain.chains.query_constructor.base" -> "__future__" [];
	"langchain.chains.query_constructor.base" -> "json" [];
	"langchain.chains.query_constructor.base" -> "typing" [];
	"langchain_core.prompts.few_shot" -> "__future__" [];
	"langchain_core.prompts.few_shot" -> "typing" [];
	"langchain_core.prompts.few_shot" -> "pydantic" [];
	"langchain_core.prompts.few_shot" -> "typing_extensions" [];
	"langchain_core.prompts.few_shot" -> "pathlib" [];
	"langchain_core.example_selectors" -> "typing" [];
	"langchain_core.example_selectors.semantic_similarity" -> "__future__" [];
	"langchain_core.example_selectors.semantic_similarity" -> "abc" [];
	"langchain_core.example_selectors.semantic_similarity" -> "typing" [];
	"langchain_core.example_selectors.semantic_similarity" -> "pydantic" [];
	"langchain_core.example_selectors.length_based" -> "re" [];
	"langchain_core.example_selectors.length_based" -> "typing" [];
	"langchain_core.example_selectors.length_based" -> "pydantic" [];
	"langchain_core.example_selectors.length_based" -> "typing_extensions" [];
	"langchain_core.example_selectors.base" -> "abc" [];
	"langchain_core.example_selectors.base" -> "typing" [];
	"langchain_community.vectorstores.tair" -> "__future__" [];
	"langchain_community.vectorstores.tair" -> "json" [];
	"langchain_community.vectorstores.tair" -> "logging" [];
	"langchain_community.vectorstores.tair" -> "uuid" [];
	"langchain_community.vectorstores.tair" -> "typing" [];
	"langchain_community.vectorstores.tair" -> "tair" [];
	"langchain_community.vectorstores.tablestore" -> "json" [];
	"langchain_community.vectorstores.tablestore" -> "logging" [];
	"langchain_community.vectorstores.tablestore" -> "uuid" [];
	"langchain_community.vectorstores.tablestore" -> "typing" [];
	"langchain_community.vectorstores.tablestore" -> "tablestore" [];
	"langchain_community.vectorstores.surrealdb" -> "asyncio" [];
	"langchain_community.vectorstores.surrealdb" -> "typing" [];
	"langchain_community.vectorstores.surrealdb" -> "numpy" [];
	"langchain_community.vectorstores.surrealdb" -> "surrealdb" [];
	"langchain_community.vectorstores.surrealdb" -> "'surrealdb.ws'" [];
	"langchain_community.vectorstores.supabase" -> "__future__" [];
	"langchain_community.vectorstores.supabase" -> "uuid" [];
	"langchain_community.vectorstores.supabase" -> "warnings" [];
	"langchain_community.vectorstores.supabase" -> "itertools" [];
	"langchain_community.vectorstores.supabase" -> "typing" [];
	"langchain_community.vectorstores.supabase" -> "numpy" [];
	"langchain_community.vectorstores.supabase" -> "supabase" [];
	"langchain_community.vectorstores.starrocks" -> "__future__" [];
	"langchain_community.vectorstores.starrocks" -> "json" [];
	"langchain_community.vectorstores.starrocks" -> "logging" [];
	"langchain_community.vectorstores.starrocks" -> "hashlib" [];
	"langchain_community.vectorstores.starrocks" -> "threading" [];
	"langchain_community.vectorstores.starrocks" -> "typing" [];
	"langchain_community.vectorstores.starrocks" -> "numpy" [];
	"langchain_community.vectorstores.starrocks" -> "pydantic_settings" [];
	"langchain_community.vectorstores.starrocks" -> "typing_extensions" [];
	"langchain_community.vectorstores.starrocks" -> "pymysql" [];
	"langchain_community.vectorstores.starrocks" -> "tqdm" [];
	"langchain_community.vectorstores.sqlitevss" -> "__future__" [];
	"langchain_community.vectorstores.sqlitevss" -> "json" [];
	"langchain_community.vectorstores.sqlitevss" -> "logging" [];
	"langchain_community.vectorstores.sqlitevss" -> "warnings" [];
	"langchain_community.vectorstores.sqlitevss" -> "typing" [];
	"langchain_community.vectorstores.sqlitevss" -> "sqlite3" [];
	"langchain_community.vectorstores.sqlitevss" -> "sqlite_vss" [];
	"langchain_community.vectorstores.sqlitevec" -> "__future__" [];
	"langchain_community.vectorstores.sqlitevec" -> "json" [];
	"langchain_community.vectorstores.sqlitevec" -> "logging" [];
	"langchain_community.vectorstores.sqlitevec" -> "struct" [];
	"langchain_community.vectorstores.sqlitevec" -> "warnings" [];
	"langchain_community.vectorstores.sqlitevec" -> "typing" [];
	"langchain_community.vectorstores.sqlitevec" -> "sqlite3" [];
	"langchain_community.vectorstores.sqlitevec" -> "sqlite_vec" [];
	"langchain_community.vectorstores.sklearn" -> "json" [];
	"langchain_community.vectorstores.sklearn" -> "math" [];
	"langchain_community.vectorstores.sklearn" -> "os" [];
	"langchain_community.vectorstores.sklearn" -> "abc" [];
	"langchain_community.vectorstores.sklearn" -> "typing" [];
	"langchain_community.vectorstores.sklearn" -> "uuid" [];
	"langchain_community.vectorstores.singlestoredb" -> "__future__" [];
	"langchain_community.vectorstores.singlestoredb" -> "json" [];
	"langchain_community.vectorstores.singlestoredb" -> "re" [];
	"langchain_community.vectorstores.singlestoredb" -> "enum" [];
	"langchain_community.vectorstores.singlestoredb" -> "typing" [];
	"langchain_community.vectorstores.singlestoredb" -> "singlestoredb" [];
	"langchain_community.vectorstores.semadb" -> "typing" [];
	"langchain_community.vectorstores.semadb" -> "uuid" [];
	"langchain_community.vectorstores.semadb" -> "numpy" [];
	"langchain_community.vectorstores.semadb" -> "requests" [];
	"langchain_community.vectorstores.scann" -> "__future__" [];
	"langchain_community.vectorstores.scann" -> "operator" [];
	"langchain_community.vectorstores.scann" -> "pickle" [];
	"langchain_community.vectorstores.scann" -> "uuid" [];
	"langchain_community.vectorstores.scann" -> "pathlib" [];
	"langchain_community.vectorstores.scann" -> "typing" [];
	"langchain_community.vectorstores.scann" -> "numpy" [];
	"langchain_community.vectorstores.rocksetdb" -> "__future__" [];
	"langchain_community.vectorstores.rocksetdb" -> "logging" [];
	"langchain_community.vectorstores.rocksetdb" -> "copy" [];
	"langchain_community.vectorstores.rocksetdb" -> "enum" [];
	"langchain_community.vectorstores.rocksetdb" -> "typing" [];
	"langchain_community.vectorstores.rocksetdb" -> "numpy" [];
	"langchain_community.vectorstores.rocksetdb" -> "rockset" [];
	"langchain_community.vectorstores.rocksetdb" -> "'rockset.models'" [];
	"langchain_community.vectorstores.relyt" -> "__future__" [];
	"langchain_community.vectorstores.relyt" -> "logging" [];
	"langchain_community.vectorstores.relyt" -> "uuid" [];
	"langchain_community.vectorstores.relyt" -> "typing" [];
	"langchain_community.vectorstores.relyt" -> "sqlalchemy" [];
	"langchain_community.vectorstores.relyt" -> "pgvecto_rs" [];
	"langchain_community.vectorstores.relyt" -> "'pgvecto_rs.sqlalchemy'" [];
	"langchain_community.vectorstores.redis.base" -> "__future__" [];
	"langchain_community.vectorstores.redis.base" -> "logging" [];
	"langchain_community.vectorstores.redis.base" -> "os" [];
	"langchain_community.vectorstores.redis.base" -> "uuid" [];
	"langchain_community.vectorstores.redis.base" -> "typing" [];
	"langchain_community.vectorstores.redis.base" -> "numpy" [];
	"langchain_community.vectorstores.redis.base" -> "yaml" [];
	"langchain_community.vectorstores.redis.base" -> "pydantic" [];
	"langchain_community.vectorstores.redis.base" -> "'redis.client'" [];
	"langchain_community.vectorstores.redis.base" -> "'redis.commands'" [];
	"langchain_community.vectorstores.redis.base" -> "redis" [];
	"langchain_community.vectorstores.qdrant" -> "__future__" [];
	"langchain_community.vectorstores.qdrant" -> "functools" [];
	"langchain_community.vectorstores.qdrant" -> "uuid" [];
	"langchain_community.vectorstores.qdrant" -> "warnings" [];
	"langchain_community.vectorstores.qdrant" -> "itertools" [];
	"langchain_community.vectorstores.qdrant" -> "operator" [];
	"langchain_community.vectorstores.qdrant" -> "typing" [];
	"langchain_community.vectorstores.qdrant" -> "numpy" [];
	"langchain_community.vectorstores.qdrant" -> "qdrant_client" [];
	"langchain_community.vectorstores.qdrant" -> "'qdrant_client.conversions'" [];
	"langchain_community.vectorstores.qdrant" -> "'qdrant_client.http'" [];
	"langchain_community.vectorstores.qdrant" -> "'qdrant_client.local'" [];
	"langchain_community.vectorstores.qdrant" -> "grpc" [];
	"langchain_community.vectorstores.pinecone" -> "__future__" [];
	"langchain_community.vectorstores.pinecone" -> "logging" [];
	"langchain_community.vectorstores.pinecone" -> "os" [];
	"langchain_community.vectorstores.pinecone" -> "uuid" [];
	"langchain_community.vectorstores.pinecone" -> "warnings" [];
	"langchain_community.vectorstores.pinecone" -> "typing" [];
	"langchain_community.vectorstores.pinecone" -> "numpy" [];
	"langchain_community.vectorstores.pinecone" -> "packaging" [];
	"langchain_community.vectorstores.pinecone" -> "pinecone" [];
	"langchain_community.vectorstores.pgvector" -> "__future__" [];
	"langchain_community.vectorstores.pgvector" -> "contextlib" [];
	"langchain_community.vectorstores.pgvector" -> "enum" [];
	"langchain_community.vectorstores.pgvector" -> "json" [];
	"langchain_community.vectorstores.pgvector" -> "logging" [];
	"langchain_community.vectorstores.pgvector" -> "uuid" [];
	"langchain_community.vectorstores.pgvector" -> "typing" [];
	"langchain_community.vectorstores.pgvector" -> "numpy" [];
	"langchain_community.vectorstores.pgvector" -> "sqlalchemy" [];
	"langchain_community.vectorstores.pgvector" -> "pgvector" [];
	"langchain_community.vectorstores.pgembedding" -> "__future__" [];
	"langchain_community.vectorstores.pgembedding" -> "logging" [];
	"langchain_community.vectorstores.pgembedding" -> "uuid" [];
	"langchain_community.vectorstores.pgembedding" -> "typing" [];
	"langchain_community.vectorstores.pgembedding" -> "sqlalchemy" [];
	"langchain_community.vectorstores.pathway" -> "json" [];
	"langchain_community.vectorstores.pathway" -> "logging" [];
	"langchain_community.vectorstores.pathway" -> "typing" [];
	"langchain_community.vectorstores.pathway" -> "requests" [];
	"langchain_community.vectorstores.oraclevs" -> "__future__" [];
	"langchain_community.vectorstores.oraclevs" -> "array" [];
	"langchain_community.vectorstores.oraclevs" -> "functools" [];
	"langchain_community.vectorstores.oraclevs" -> "hashlib" [];
	"langchain_community.vectorstores.oraclevs" -> "json" [];
	"langchain_community.vectorstores.oraclevs" -> "logging" [];
	"langchain_community.vectorstores.oraclevs" -> "os" [];
	"langchain_community.vectorstores.oraclevs" -> "uuid" [];
	"langchain_community.vectorstores.oraclevs" -> "typing" [];
	"langchain_community.vectorstores.oraclevs" -> "oracledb" [];
	"langchain_community.vectorstores.oraclevs" -> "numpy" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "__future__" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "uuid" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "warnings" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "typing" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "numpy" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "opensearchpy" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "'opensearchpy.exceptions'" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "'opensearchpy.helpers'" [];
	"langchain_community.vectorstores.neo4j_vector" -> "__future__" [];
	"langchain_community.vectorstores.neo4j_vector" -> "enum" [];
	"langchain_community.vectorstores.neo4j_vector" -> "logging" [];
	"langchain_community.vectorstores.neo4j_vector" -> "os" [];
	"langchain_community.vectorstores.neo4j_vector" -> "hashlib" [];
	"langchain_community.vectorstores.neo4j_vector" -> "typing" [];
	"langchain_community.vectorstores.neo4j_vector" -> "numpy" [];
	"langchain_community.vectorstores.neo4j_vector" -> "neo4j" [];
	"langchain_community.vectorstores.neo4j_vector" -> "'neo4j.exceptions'" [];
	"langchain_community.graphs" -> "importlib" [];
	"langchain_community.graphs" -> "typing" [];
	"langchain_community.graphs.tigergraph_graph" -> "typing" [];
	"langchain_community.graphs.tigergraph_graph" -> "pyTigerGraph" [];
	"langchain_community.graphs.graph_store" -> "abc" [];
	"langchain_community.graphs.graph_store" -> "typing" [];
	"langchain_community.graphs.graph_document" -> "__future__" [];
	"langchain_community.graphs.graph_document" -> "typing" [];
	"langchain_community.graphs.graph_document" -> "pydantic" [];
	"langchain_community.graphs.rdf_graph" -> "__future__" [];
	"langchain_community.graphs.rdf_graph" -> "typing" [];
	"langchain_community.graphs.rdf_graph" -> "rdflib" [];
	"langchain_community.graphs.rdf_graph" -> "'rdflib.plugins'" [];
	"langchain_community.graphs.rdf_graph" -> "'rdflib.exceptions'" [];
	"langchain_community.graphs.rdf_graph" -> "'rdflib.query'" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "__future__" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "os" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "typing" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "rdflib" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "'rdflib.plugins'" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "pyparsing" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "'rdflib.exceptions'" [];
	"langchain_community.graphs.ontotext_graphdb_graph" -> "'rdflib.query'" [];
	"langchain_community.graphs.networkx_graph" -> "__future__" [];
	"langchain_community.graphs.networkx_graph" -> "typing" [];
	"langchain_community.graphs.networkx_graph" -> "networkx" [];
	"langchain_community.graphs.networkx_graph" -> "'networkx.drawing'" [];
	"langchain_community.graphs.networkx_graph" -> "pygraphviz" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "json" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "types" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "typing" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "requests" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "boto3" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "botocore" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "'botocore.config'" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "'botocore.awsrequest'" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "'botocore.auth'" [];
	"langchain_community.graphs.neptune_graph" -> "json" [];
	"langchain_community.graphs.neptune_graph" -> "abc" [];
	"langchain_community.graphs.neptune_graph" -> "typing" [];
	"langchain_community.graphs.neptune_graph" -> "boto3" [];
	"langchain_community.graphs.neptune_graph" -> "botocore" [];
	"langchain_community.graphs.neptune_graph" -> "'botocore.config'" [];
	"langchain_community.graphs.neo4j_graph" -> "hashlib" [];
	"langchain_community.graphs.neo4j_graph" -> "typing" [];
	"langchain_community.graphs.neo4j_graph" -> "neo4j" [];
	"langchain_community.graphs.neo4j_graph" -> "'neo4j.exceptions'" [];
	"langchain_community.graphs.nebula_graph" -> "logging" [];
	"langchain_community.graphs.nebula_graph" -> "string" [];
	"langchain_community.graphs.nebula_graph" -> "typing" [];
	"langchain_community.graphs.nebula_graph" -> "nebula3" [];
	"langchain_community.graphs.nebula_graph" -> "pandas" [];
	"langchain_community.graphs.nebula_graph" -> "'nebula3.Config'" [];
	"langchain_community.graphs.nebula_graph" -> "'nebula3.Exception'" [];
	"langchain_community.graphs.nebula_graph" -> "'nebula3.gclient'" [];
	"langchain_community.graphs.nebula_graph" -> "'nebula3.fbthrift'" [];
	"langchain_community.graphs.memgraph_graph" -> "logging" [];
	"langchain_community.graphs.memgraph_graph" -> "hashlib" [];
	"langchain_community.graphs.memgraph_graph" -> "typing" [];
	"langchain_community.graphs.memgraph_graph" -> "neo4j" [];
	"langchain_community.graphs.memgraph_graph" -> "'neo4j.exceptions'" [];
	"langchain_community.graphs.memgraph_graph" -> "ast" [];
	"langchain_community.graphs.kuzu_graph" -> "hashlib" [];
	"langchain_community.graphs.kuzu_graph" -> "typing" [];
	"langchain_community.graphs.kuzu_graph" -> "kuzu" [];
	"langchain_community.graphs.hugegraph" -> "typing" [];
	"langchain_community.graphs.hugegraph" -> "hugegraph" [];
	"langchain_community.graphs.gremlin_graph" -> "hashlib" [];
	"langchain_community.graphs.gremlin_graph" -> "sys" [];
	"langchain_community.graphs.gremlin_graph" -> "typing" [];
	"langchain_community.graphs.gremlin_graph" -> "asyncio" [];
	"langchain_community.graphs.gremlin_graph" -> "gremlin_python" [];
	"langchain_community.graphs.falkordb_graph" -> "warnings" [];
	"langchain_community.graphs.falkordb_graph" -> "typing" [];
	"langchain_community.graphs.falkordb_graph" -> "falkordb" [];
	"langchain_community.graphs.falkordb_graph" -> "redis" [];
	"langchain_community.graphs.falkordb_graph" -> "'redis.commands'" [];
	"langchain_community.graphs.arangodb_graph" -> "os" [];
	"langchain_community.graphs.arangodb_graph" -> "math" [];
	"langchain_community.graphs.arangodb_graph" -> "typing" [];
	"langchain_community.graphs.arangodb_graph" -> "arango" [];
	"langchain_community.graphs.arangodb_graph" -> "itertools" [];
	"langchain_community.vectorstores.myscale" -> "__future__" [];
	"langchain_community.vectorstores.myscale" -> "json" [];
	"langchain_community.vectorstores.myscale" -> "logging" [];
	"langchain_community.vectorstores.myscale" -> "hashlib" [];
	"langchain_community.vectorstores.myscale" -> "threading" [];
	"langchain_community.vectorstores.myscale" -> "typing" [];
	"langchain_community.vectorstores.myscale" -> "pydantic_settings" [];
	"langchain_community.vectorstores.myscale" -> "clickhouse_connect" [];
	"langchain_community.vectorstores.myscale" -> "tqdm" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "__future__" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "logging" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "typing" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "numpy" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "'pymongo.collection'" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "pymongo" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "'pymongo.driver_info'" [];
	"langchain_community.vectorstores.momento_vector_index" -> "logging" [];
	"langchain_community.vectorstores.momento_vector_index" -> "typing" [];
	"langchain_community.vectorstores.momento_vector_index" -> "uuid" [];
	"langchain_community.vectorstores.momento_vector_index" -> "numpy" [];
	"langchain_community.vectorstores.momento_vector_index" -> "momento" [];
	"langchain_community.vectorstores.momento_vector_index" -> "'momento.requests'" [];
	"langchain_community.vectorstores.momento_vector_index" -> "'momento.responses'" [];
	"langchain_community.vectorstores.milvus" -> "__future__" [];
	"langchain_community.vectorstores.milvus" -> "logging" [];
	"langchain_community.vectorstores.milvus" -> "typing" [];
	"langchain_community.vectorstores.milvus" -> "uuid" [];
	"langchain_community.vectorstores.milvus" -> "numpy" [];
	"langchain_community.vectorstores.milvus" -> "pymilvus" [];
	"langchain_community.vectorstores.milvus" -> "'pymilvus.orm'" [];
	"langchain_community.vectorstores.milvus" -> "'pymilvus.client'" [];
	"langchain_community.vectorstores.meilisearch" -> "__future__" [];
	"langchain_community.vectorstores.meilisearch" -> "uuid" [];
	"langchain_community.vectorstores.meilisearch" -> "typing" [];
	"langchain_community.vectorstores.meilisearch" -> "meilisearch" [];
	"langchain_community.vectorstores.matching_engine" -> "__future__" [];
	"langchain_community.vectorstores.matching_engine" -> "json" [];
	"langchain_community.vectorstores.matching_engine" -> "logging" [];
	"langchain_community.vectorstores.matching_engine" -> "time" [];
	"langchain_community.vectorstores.matching_engine" -> "uuid" [];
	"langchain_community.vectorstores.matching_engine" -> "typing" [];
	"langchain_community.vectorstores.matching_engine" -> "'google.cloud.aiplatform.matching_engine'" [];
	"langchain_community.embeddings" -> "importlib" [];
	"langchain_community.embeddings" -> "logging" [];
	"langchain_community.embeddings" -> "typing" [];
	"langchain.chains.hyde.base" -> "__future__" [];
	"langchain.chains.hyde.base" -> "logging" [];
	"langchain.chains.hyde.base" -> "typing" [];
	"langchain.chains.hyde.base" -> "pydantic" [];
	"langchain.chains.hyde.base" -> "numpy" [];
	"langchain_community.embeddings.zhipuai" -> "typing" [];
	"langchain_community.embeddings.zhipuai" -> "pydantic" [];
	"langchain_community.embeddings.zhipuai" -> "zhipuai" [];
	"langchain_community.embeddings.yandex" -> "__future__" [];
	"langchain_community.embeddings.yandex" -> "logging" [];
	"langchain_community.embeddings.yandex" -> "time" [];
	"langchain_community.embeddings.yandex" -> "typing" [];
	"langchain_community.embeddings.yandex" -> "pydantic" [];
	"langchain_community.embeddings.yandex" -> "tenacity" [];
	"langchain_community.embeddings.yandex" -> "grpc" [];
	"langchain_community.embeddings.yandex" -> "'yandex.cloud'" [];
	"langchain_community.embeddings.xinference" -> "typing" [];
	"langchain_community.embeddings.xinference" -> "'xinference.client'" [];
	"langchain_community.embeddings.xinference" -> "xinference_client" [];
	"langchain_community.embeddings.voyageai" -> "__future__" [];
	"langchain_community.embeddings.voyageai" -> "json" [];
	"langchain_community.embeddings.voyageai" -> "logging" [];
	"langchain_community.embeddings.voyageai" -> "typing" [];
	"langchain_community.embeddings.voyageai" -> "requests" [];
	"langchain_community.embeddings.voyageai" -> "pydantic" [];
	"langchain_community.embeddings.voyageai" -> "tenacity" [];
	"langchain_community.embeddings.volcengine" -> "__future__" [];
	"langchain_community.embeddings.volcengine" -> "logging" [];
	"langchain_community.embeddings.volcengine" -> "typing" [];
	"langchain_community.embeddings.volcengine" -> "pydantic" [];
	"langchain_community.embeddings.volcengine" -> "'volcengine.maas'" [];
	"langchain_community.embeddings.vertexai" -> "logging" [];
	"langchain_community.embeddings.vertexai" -> "re" [];
	"langchain_community.embeddings.vertexai" -> "string" [];
	"langchain_community.embeddings.vertexai" -> "threading" [];
	"langchain_community.embeddings.vertexai" -> "typing" [];
	"langchain_community.embeddings.vertexai" -> "'vertexai.language_models'" [];
	"langchain_community.embeddings.vertexai" -> "tqdm" [];
	"langchain_community.embeddings.titan_takeoff" -> "enum" [];
	"langchain_community.embeddings.titan_takeoff" -> "typing" [];
	"langchain_community.embeddings.titan_takeoff" -> "pydantic" [];
	"langchain_community.embeddings.titan_takeoff" -> "takeoff_client" [];
	"langchain_community.embeddings.textembed" -> "asyncio" [];
	"langchain_community.embeddings.textembed" -> "typing" [];
	"langchain_community.embeddings.textembed" -> "aiohttp" [];
	"langchain_community.embeddings.textembed" -> "numpy" [];
	"langchain_community.embeddings.textembed" -> "requests" [];
	"langchain_community.embeddings.textembed" -> "pydantic" [];
	"langchain_community.embeddings.textembed" -> "typing_extensions" [];
	"langchain_community.embeddings.tensorflow_hub" -> "typing" [];
	"langchain_community.embeddings.tensorflow_hub" -> "pydantic" [];
	"langchain_community.embeddings.tensorflow_hub" -> "tensorflow_hub" [];
	"langchain_community.embeddings.tensorflow_hub" -> "tensorflow_text" [];
	"langchain_community.embeddings.sparkllm" -> "base64" [];
	"langchain_community.embeddings.sparkllm" -> "hashlib" [];
	"langchain_community.embeddings.sparkllm" -> "hmac" [];
	"langchain_community.embeddings.sparkllm" -> "json" [];
	"langchain_community.embeddings.sparkllm" -> "logging" [];
	"langchain_community.embeddings.sparkllm" -> "datetime" [];
	"langchain_community.embeddings.sparkllm" -> "time" [];
	"langchain_community.embeddings.sparkllm" -> "typing" [];
	"langchain_community.embeddings.sparkllm" -> "numpy" [];
	"langchain_community.embeddings.sparkllm" -> "requests" [];
	"langchain_community.embeddings.sparkllm" -> "pydantic" [];
	"langchain_community.embeddings.spacy_embeddings" -> "typing" [];
	"langchain_community.embeddings.spacy_embeddings" -> "pydantic" [];
	"langchain_community.embeddings.spacy_embeddings" -> "spacy" [];
	"langchain_community.embeddings.solar" -> "__future__" [];
	"langchain_community.embeddings.solar" -> "logging" [];
	"langchain_community.embeddings.solar" -> "typing" [];
	"langchain_community.embeddings.solar" -> "requests" [];
	"langchain_community.embeddings.solar" -> "pydantic" [];
	"langchain_community.embeddings.solar" -> "tenacity" [];
	"langchain_community.embeddings.self_hosted_hugging_face" -> "importlib" [];
	"langchain_community.embeddings.self_hosted_hugging_face" -> "logging" [];
	"langchain_community.embeddings.self_hosted_hugging_face" -> "typing" [];
	"langchain_community.embeddings.self_hosted_hugging_face" -> "sentence_transformers" [];
	"langchain_community.embeddings.self_hosted_hugging_face" -> "InstructorEmbedding" [];
	"langchain_community.embeddings.self_hosted_hugging_face" -> "torch" [];
	"langchain_community.embeddings.self_hosted" -> "typing" [];
	"langchain_community.embeddings.self_hosted" -> "pydantic" [];
	"langchain_community.llms.self_hosted" -> "logging" [];
	"langchain_community.llms.self_hosted" -> "pickle" [];
	"langchain_community.llms.self_hosted" -> "typing" [];
	"langchain_community.llms.self_hosted" -> "pydantic" [];
	"langchain_community.llms.self_hosted" -> "torch" [];
	"langchain_community.llms.self_hosted" -> "runhouse" [];
	"langchain_community.embeddings.sambanova" -> "json" [];
	"langchain_community.embeddings.sambanova" -> "typing" [];
	"langchain_community.embeddings.sambanova" -> "requests" [];
	"langchain_community.embeddings.sambanova" -> "pydantic" [];
	"langchain_community.embeddings.sagemaker_endpoint" -> "typing" [];
	"langchain_community.embeddings.sagemaker_endpoint" -> "pydantic" [];
	"langchain_community.embeddings.sagemaker_endpoint" -> "boto3" [];
	"langchain_community.llms.sagemaker_endpoint" -> "io" [];
	"langchain_community.llms.sagemaker_endpoint" -> "json" [];
	"langchain_community.llms.sagemaker_endpoint" -> "abc" [];
	"langchain_community.llms.sagemaker_endpoint" -> "typing" [];
	"langchain_community.llms.sagemaker_endpoint" -> "pydantic" [];
	"langchain_community.llms.sagemaker_endpoint" -> "boto3" [];
	"langchain_community.embeddings.premai" -> "__future__" [];
	"langchain_community.embeddings.premai" -> "logging" [];
	"langchain_community.embeddings.premai" -> "typing" [];
	"langchain_community.embeddings.premai" -> "pydantic" [];
	"langchain_community.embeddings.premai" -> "premai" [];
	"langchain_community.embeddings.premai" -> "'premai.models'" [];
	"langchain_community.embeddings.ovhcloud" -> "json" [];
	"langchain_community.embeddings.ovhcloud" -> "logging" [];
	"langchain_community.embeddings.ovhcloud" -> "time" [];
	"langchain_community.embeddings.ovhcloud" -> "typing" [];
	"langchain_community.embeddings.ovhcloud" -> "requests" [];
	"langchain_community.embeddings.ovhcloud" -> "pydantic" [];
	"langchain_community.embeddings.oracleai" -> "__future__" [];
	"langchain_community.embeddings.oracleai" -> "json" [];
	"langchain_community.embeddings.oracleai" -> "logging" [];
	"langchain_community.embeddings.oracleai" -> "traceback" [];
	"langchain_community.embeddings.oracleai" -> "typing" [];
	"langchain_community.embeddings.oracleai" -> "pydantic" [];
	"langchain_community.embeddings.oracleai" -> "oracledb" [];
	"langchain_community.embeddings.optimum_intel" -> "typing" [];
	"langchain_community.embeddings.optimum_intel" -> "pydantic" [];
	"langchain_community.embeddings.optimum_intel" -> "transformers" [];
	"langchain_community.embeddings.optimum_intel" -> "'optimum.intel'" [];
	"langchain_community.embeddings.optimum_intel" -> "torch" [];
	"langchain_community.embeddings.optimum_intel" -> "pandas" [];
	"langchain_community.embeddings.optimum_intel" -> "tqdm" [];
	"langchain_community.embeddings.openvino" -> "pathlib" [];
	"langchain_community.embeddings.openvino" -> "typing" [];
	"langchain_community.embeddings.openvino" -> "pydantic" [];
	"langchain_community.embeddings.openvino" -> "'optimum.intel'" [];
	"langchain_community.embeddings.openvino" -> "huggingface_hub" [];
	"langchain_community.embeddings.openvino" -> "transformers" [];
	"langchain_community.embeddings.openvino" -> "numpy" [];
	"langchain_community.embeddings.openvino" -> "tqdm" [];
	"langchain_community.embeddings.openvino" -> "torch" [];
	"langchain_community.embeddings.openai" -> "__future__" [];
	"langchain_community.embeddings.openai" -> "logging" [];
	"langchain_community.embeddings.openai" -> "os" [];
	"langchain_community.embeddings.openai" -> "warnings" [];
	"langchain_community.embeddings.openai" -> "typing" [];
	"langchain_community.embeddings.openai" -> "numpy" [];
	"langchain_community.embeddings.openai" -> "pydantic" [];
	"langchain_community.embeddings.openai" -> "tenacity" [];
	"langchain_community.embeddings.openai" -> "openai" [];
	"langchain_community.embeddings.openai" -> "transformers" [];
	"langchain_community.embeddings.openai" -> "tiktoken" [];
	"langchain_community.embeddings.ollama" -> "logging" [];
	"langchain_community.embeddings.ollama" -> "typing" [];
	"langchain_community.embeddings.ollama" -> "requests" [];
	"langchain_community.embeddings.ollama" -> "pydantic" [];
	"langchain_community.embeddings.ollama" -> "tqdm" [];
	"langchain_community.embeddings.octoai_embeddings" -> "typing" [];
	"langchain_community.embeddings.octoai_embeddings" -> "pydantic" [];
	"langchain_community.embeddings.octoai_embeddings" -> "openai" [];
	"langchain_community.embeddings.oci_generative_ai" -> "enum" [];
	"langchain_community.embeddings.oci_generative_ai" -> "typing" [];
	"langchain_community.embeddings.oci_generative_ai" -> "pydantic" [];
	"langchain_community.embeddings.oci_generative_ai" -> "oci" [];
	"langchain_community.embeddings.oci_generative_ai" -> "'oci.generative_ai_inference'" [];
	"langchain_community.embeddings.nlpcloud" -> "typing" [];
	"langchain_community.embeddings.nlpcloud" -> "pydantic" [];
	"langchain_community.embeddings.nlpcloud" -> "nlpcloud" [];
	"langchain_community.embeddings.nemo" -> "__future__" [];
	"langchain_community.embeddings.nemo" -> "asyncio" [];
	"langchain_community.embeddings.nemo" -> "json" [];
	"langchain_community.embeddings.nemo" -> "typing" [];
	"langchain_community.embeddings.nemo" -> "aiohttp" [];
	"langchain_community.embeddings.nemo" -> "requests" [];
	"langchain_community.embeddings.nemo" -> "pydantic" [];
	"langchain_community.embeddings.naver" -> "logging" [];
	"langchain_community.embeddings.naver" -> "typing" [];
	"langchain_community.embeddings.naver" -> "pydantic" [];
	"langchain_community.embeddings.naver" -> "typing_extensions" [];
	"langchain_community.embeddings.mosaicml" -> "typing" [];
	"langchain_community.embeddings.mosaicml" -> "requests" [];
	"langchain_community.embeddings.mosaicml" -> "pydantic" [];
	"langchain_community.embeddings.mosaicml" -> "time" [];
	"langchain_community.embeddings.modelscope_hub" -> "typing" [];
	"langchain_community.embeddings.modelscope_hub" -> "pydantic" [];
	"langchain_community.embeddings.modelscope_hub" -> "modelscope" [];
	"langchain_community.embeddings.modelscope_hub" -> "'modelscope.utils'" [];
	"langchain_community.embeddings.model2vec" -> "typing" [];
	"langchain_community.embeddings.model2vec" -> "model2vec" [];
	"langchain_community.embeddings.mlflow_gateway" -> "__future__" [];
	"langchain_community.embeddings.mlflow_gateway" -> "warnings" [];
	"langchain_community.embeddings.mlflow_gateway" -> "typing" [];
	"langchain_community.embeddings.mlflow_gateway" -> "pydantic" [];
	"langchain_community.embeddings.mlflow_gateway" -> "'mlflow.gateway'" [];
	"langchain_community.embeddings.mlflow" -> "__future__" [];
	"langchain_community.embeddings.mlflow" -> "typing" [];
	"langchain_community.embeddings.mlflow" -> "pydantic" [];
	"langchain_community.embeddings.mlflow" -> "'mlflow.deployments'" [];
	"langchain_community.embeddings.minimax" -> "__future__" [];
	"langchain_community.embeddings.minimax" -> "logging" [];
	"langchain_community.embeddings.minimax" -> "typing" [];
	"langchain_community.embeddings.minimax" -> "requests" [];
	"langchain_community.embeddings.minimax" -> "pydantic" [];
	"langchain_community.embeddings.minimax" -> "tenacity" [];
	"langchain_community.embeddings.localai" -> "__future__" [];
	"langchain_community.embeddings.localai" -> "logging" [];
	"langchain_community.embeddings.localai" -> "warnings" [];
	"langchain_community.embeddings.localai" -> "typing" [];
	"langchain_community.embeddings.localai" -> "pydantic" [];
	"langchain_community.embeddings.localai" -> "tenacity" [];
	"langchain_community.embeddings.localai" -> "openai" [];
	"langchain_community.embeddings.llm_rails" -> "typing" [];
	"langchain_community.embeddings.llm_rails" -> "requests" [];
	"langchain_community.embeddings.llm_rails" -> "pydantic" [];
	"langchain_community.embeddings.llamafile" -> "logging" [];
	"langchain_community.embeddings.llamafile" -> "typing" [];
	"langchain_community.embeddings.llamafile" -> "requests" [];
	"langchain_community.embeddings.llamafile" -> "pydantic" [];
	"langchain_community.embeddings.llamacpp" -> "typing" [];
	"langchain_community.embeddings.llamacpp" -> "pydantic" [];
	"langchain_community.embeddings.llamacpp" -> "typing_extensions" [];
	"langchain_community.embeddings.llamacpp" -> "llama_cpp" [];
	"langchain_community.embeddings.laser" -> "typing" [];
	"langchain_community.embeddings.laser" -> "numpy" [];
	"langchain_community.embeddings.laser" -> "pydantic" [];
	"langchain_community.embeddings.laser" -> "laser_encoders" [];
	"langchain_community.embeddings.johnsnowlabs" -> "os" [];
	"langchain_community.embeddings.johnsnowlabs" -> "sys" [];
	"langchain_community.embeddings.johnsnowlabs" -> "typing" [];
	"langchain_community.embeddings.johnsnowlabs" -> "pydantic" [];
	"langchain_community.embeddings.johnsnowlabs" -> "johnsnowlabs" [];
	"langchain_community.embeddings.johnsnowlabs" -> "nlu" [];
	"langchain_community.embeddings.jina" -> "base64" [];
	"langchain_community.embeddings.jina" -> "os.path" [];
	"langchain_community.embeddings.jina" -> "typing" [];
	"langchain_community.embeddings.jina" -> "requests" [];
	"langchain_community.embeddings.jina" -> "pydantic" [];
	"langchain_community.embeddings.javelin_ai_gateway" -> "__future__" [];
	"langchain_community.embeddings.javelin_ai_gateway" -> "typing" [];
	"langchain_community.embeddings.javelin_ai_gateway" -> "pydantic" [];
	"langchain_community.embeddings.javelin_ai_gateway" -> "javelin_sdk" [];
	"langchain_community.embeddings.itrex" -> "os" [];
	"langchain_community.embeddings.itrex" -> "typing" [];
	"langchain_community.embeddings.itrex" -> "pydantic" [];
	"langchain_community.embeddings.itrex" -> "huggingface_hub" [];
	"langchain_community.embeddings.itrex" -> "'intel_extension_for_transformers.transformers'" [];
	"langchain_community.embeddings.itrex" -> "transformers" [];
	"langchain_community.embeddings.itrex" -> "torch" [];
	"langchain_community.embeddings.itrex" -> "pandas" [];
	"langchain_community.embeddings.ipex_llm" -> "typing" [];
	"langchain_community.embeddings.ipex_llm" -> "pydantic" [];
	"langchain_community.embeddings.ipex_llm" -> "sentence_transformers" [];
	"langchain_community.embeddings.ipex_llm" -> "'ipex_llm.transformers'" [];
	"langchain_community.embeddings.infinity_local" -> "asyncio" [];
	"langchain_community.embeddings.infinity_local" -> "logging" [];
	"langchain_community.embeddings.infinity_local" -> "typing" [];
	"langchain_community.embeddings.infinity_local" -> "pydantic" [];
	"langchain_community.embeddings.infinity_local" -> "typing_extensions" [];
	"langchain_community.embeddings.infinity_local" -> "infinity_emb" [];
	"langchain_community.embeddings.infinity" -> "asyncio" [];
	"langchain_community.embeddings.infinity" -> "typing" [];
	"langchain_community.embeddings.infinity" -> "aiohttp" [];
	"langchain_community.embeddings.infinity" -> "numpy" [];
	"langchain_community.embeddings.infinity" -> "requests" [];
	"langchain_community.embeddings.infinity" -> "pydantic" [];
	"langchain_community.embeddings.hunyuan" -> "json" [];
	"langchain_community.embeddings.hunyuan" -> "typing" [];
	"langchain_community.embeddings.hunyuan" -> "pydantic" [];
	"langchain_community.embeddings.hunyuan" -> "'tencentcloud.common'" [];
	"langchain_community.embeddings.hunyuan" -> "'tencentcloud.hunyuan'" [];
	"langchain_community.embeddings.hunyuan" -> "tqdm" [];
	"langchain_community.embeddings.huggingface_hub" -> "json" [];
	"langchain_community.embeddings.huggingface_hub" -> "typing" [];
	"langchain_community.embeddings.huggingface_hub" -> "pydantic" [];
	"langchain_community.embeddings.huggingface_hub" -> "typing_extensions" [];
	"langchain_community.embeddings.huggingface_hub" -> "huggingface_hub" [];
	"langchain_community.embeddings.huggingface" -> "warnings" [];
	"langchain_community.embeddings.huggingface" -> "typing" [];
	"langchain_community.embeddings.huggingface" -> "requests" [];
	"langchain_community.embeddings.huggingface" -> "pydantic" [];
	"langchain_community.embeddings.huggingface" -> "sentence_transformers" [];
	"langchain_community.embeddings.huggingface" -> "InstructorEmbedding" [];
	"langchain_community.embeddings.gradient_ai" -> "typing" [];
	"langchain_community.embeddings.gradient_ai" -> "pydantic" [];
	"langchain_community.embeddings.gradient_ai" -> "typing_extensions" [];
	"langchain_community.embeddings.gradient_ai" -> "gradientai" [];
	"langchain_community.embeddings.gpt4all" -> "typing" [];
	"langchain_community.embeddings.gpt4all" -> "pydantic" [];
	"langchain_community.embeddings.gpt4all" -> "gpt4all" [];
	"langchain_community.embeddings.google_palm" -> "__future__" [];
	"langchain_community.embeddings.google_palm" -> "logging" [];
	"langchain_community.embeddings.google_palm" -> "typing" [];
	"langchain_community.embeddings.google_palm" -> "pydantic" [];
	"langchain_community.embeddings.google_palm" -> "tenacity" [];
	"langchain_community.embeddings.google_palm" -> "'google.generativeai'" [];
	"langchain_community.embeddings.google_palm" -> "tqdm" [];
	"langchain_community.embeddings.gigachat" -> "__future__" [];
	"langchain_community.embeddings.gigachat" -> "logging" [];
	"langchain_community.embeddings.gigachat" -> "functools" [];
	"langchain_community.embeddings.gigachat" -> "typing" [];
	"langchain_community.embeddings.gigachat" -> "pydantic" [];
	"langchain_community.embeddings.gigachat" -> "gigachat" [];
	"langchain_community.embeddings.fastembed" -> "importlib" [];
	"langchain_community.embeddings.fastembed" -> "typing" [];
	"langchain_community.embeddings.fastembed" -> "numpy" [];
	"langchain_community.embeddings.fastembed" -> "pydantic" [];
	"langchain_community.embeddings.fake" -> "hashlib" [];
	"langchain_community.embeddings.fake" -> "typing" [];
	"langchain_community.embeddings.fake" -> "numpy" [];
	"langchain_community.embeddings.fake" -> "pydantic" [];
	"langchain_community.embeddings.ernie" -> "asyncio" [];
	"langchain_community.embeddings.ernie" -> "logging" [];
	"langchain_community.embeddings.ernie" -> "threading" [];
	"langchain_community.embeddings.ernie" -> "typing" [];
	"langchain_community.embeddings.ernie" -> "requests" [];
	"langchain_community.embeddings.ernie" -> "pydantic" [];
	"langchain_community.embeddings.embaas" -> "typing" [];
	"langchain_community.embeddings.embaas" -> "requests" [];
	"langchain_community.embeddings.embaas" -> "pydantic" [];
	"langchain_community.embeddings.embaas" -> "typing_extensions" [];
	"langchain_community.embeddings.elasticsearch" -> "__future__" [];
	"langchain_community.embeddings.elasticsearch" -> "typing" [];
	"langchain_community.embeddings.elasticsearch" -> "elasticsearch" [];
	"langchain_community.embeddings.elasticsearch" -> "'elasticsearch.client'" [];
	"langchain_community.embeddings.edenai" -> "typing" [];
	"langchain_community.embeddings.edenai" -> "pydantic" [];
	"langchain_community.embeddings.edenai" -> "langchain_community" [];
	"langchain_community.embeddings.deepinfra" -> "typing" [];
	"langchain_community.embeddings.deepinfra" -> "requests" [];
	"langchain_community.embeddings.deepinfra" -> "pydantic" [];
	"langchain_community.embeddings.databricks" -> "__future__" [];
	"langchain_community.embeddings.databricks" -> "typing" [];
	"langchain_community.embeddings.dashscope" -> "__future__" [];
	"langchain_community.embeddings.dashscope" -> "logging" [];
	"langchain_community.embeddings.dashscope" -> "typing" [];
	"langchain_community.embeddings.dashscope" -> "pydantic" [];
	"langchain_community.embeddings.dashscope" -> "tenacity" [];
	"langchain_community.embeddings.dashscope" -> "dashscope" [];
	"langchain_community.embeddings.cohere" -> "typing" [];
	"langchain_community.embeddings.cohere" -> "pydantic" [];
	"langchain_community.embeddings.cohere" -> "cohere" [];
	"langchain_community.embeddings.clova" -> "__future__" [];
	"langchain_community.embeddings.clova" -> "typing" [];
	"langchain_community.embeddings.clova" -> "requests" [];
	"langchain_community.embeddings.clova" -> "pydantic" [];
	"langchain_community.embeddings.clarifai" -> "logging" [];
	"langchain_community.embeddings.clarifai" -> "typing" [];
	"langchain_community.embeddings.clarifai" -> "pydantic" [];
	"langchain_community.embeddings.clarifai" -> "'clarifai.client'" [];
	"langchain_community.embeddings.bookend" -> "json" [];
	"langchain_community.embeddings.bookend" -> "typing" [];
	"langchain_community.embeddings.bookend" -> "requests" [];
	"langchain_community.embeddings.bookend" -> "pydantic" [];
	"langchain_community.embeddings.bedrock" -> "asyncio" [];
	"langchain_community.embeddings.bedrock" -> "json" [];
	"langchain_community.embeddings.bedrock" -> "os" [];
	"langchain_community.embeddings.bedrock" -> "typing" [];
	"langchain_community.embeddings.bedrock" -> "numpy" [];
	"langchain_community.embeddings.bedrock" -> "pydantic" [];
	"langchain_community.embeddings.bedrock" -> "typing_extensions" [];
	"langchain_community.embeddings.bedrock" -> "boto3" [];
	"langchain_community.embeddings.baidu_qianfan_endpoint" -> "__future__" [];
	"langchain_community.embeddings.baidu_qianfan_endpoint" -> "logging" [];
	"langchain_community.embeddings.baidu_qianfan_endpoint" -> "typing" [];
	"langchain_community.embeddings.baidu_qianfan_endpoint" -> "pydantic" [];
	"langchain_community.embeddings.baidu_qianfan_endpoint" -> "qianfan" [];
	"langchain_community.embeddings.baichuan" -> "typing" [];
	"langchain_community.embeddings.baichuan" -> "requests" [];
	"langchain_community.embeddings.baichuan" -> "pydantic" [];
	"langchain_community.embeddings.baichuan" -> "typing_extensions" [];
	"langchain_community.embeddings.azure_openai" -> "__future__" [];
	"langchain_community.embeddings.azure_openai" -> "os" [];
	"langchain_community.embeddings.azure_openai" -> "warnings" [];
	"langchain_community.embeddings.azure_openai" -> "typing" [];
	"langchain_community.embeddings.azure_openai" -> "pydantic" [];
	"langchain_community.embeddings.azure_openai" -> "typing_extensions" [];
	"langchain_community.embeddings.azure_openai" -> "openai" [];
	"langchain_community.embeddings.awa" -> "typing" [];
	"langchain_community.embeddings.awa" -> "pydantic" [];
	"langchain_community.embeddings.awa" -> "awadb" [];
	"langchain_community.embeddings.ascend" -> "os" [];
	"langchain_community.embeddings.ascend" -> "typing" [];
	"langchain_community.embeddings.ascend" -> "pydantic" [];
	"langchain_community.embeddings.ascend" -> "transformers" [];
	"langchain_community.embeddings.ascend" -> "torch_npu" [];
	"langchain_community.embeddings.ascend" -> "torch" [];
	"langchain_community.embeddings.ascend" -> "numpy" [];
	"langchain_community.embeddings.anyscale" -> "__future__" [];
	"langchain_community.embeddings.anyscale" -> "typing" [];
	"langchain_community.embeddings.anyscale" -> "pydantic" [];
	"langchain_community.embeddings.anyscale" -> "openai" [];
	"langchain_community.embeddings.aleph_alpha" -> "typing" [];
	"langchain_community.embeddings.aleph_alpha" -> "pydantic" [];
	"langchain_community.embeddings.aleph_alpha" -> "aleph_alpha_client" [];
	"langchain_community.vectorstores.marqo" -> "__future__" [];
	"langchain_community.vectorstores.marqo" -> "json" [];
	"langchain_community.vectorstores.marqo" -> "uuid" [];
	"langchain_community.vectorstores.marqo" -> "typing" [];
	"langchain_community.vectorstores.marqo" -> "marqo" [];
	"langchain_community.vectorstores.manticore_search" -> "__future__" [];
	"langchain_community.vectorstores.manticore_search" -> "json" [];
	"langchain_community.vectorstores.manticore_search" -> "logging" [];
	"langchain_community.vectorstores.manticore_search" -> "uuid" [];
	"langchain_community.vectorstores.manticore_search" -> "hashlib" [];
	"langchain_community.vectorstores.manticore_search" -> "typing" [];
	"langchain_community.vectorstores.manticore_search" -> "pydantic_settings" [];
	"langchain_community.vectorstores.manticore_search" -> "manticoresearch" [];
	"langchain_community.vectorstores.manticore_search" -> "'manticoresearch.api_client'" [];
	"langchain_community.vectorstores.manticore_search" -> "tqdm" [];
	"langchain_community.vectorstores.llm_rails" -> "__future__" [];
	"langchain_community.vectorstores.llm_rails" -> "json" [];
	"langchain_community.vectorstores.llm_rails" -> "logging" [];
	"langchain_community.vectorstores.llm_rails" -> "os" [];
	"langchain_community.vectorstores.llm_rails" -> "uuid" [];
	"langchain_community.vectorstores.llm_rails" -> "typing" [];
	"langchain_community.vectorstores.llm_rails" -> "requests" [];
	"langchain_community.vectorstores.llm_rails" -> "pydantic" [];
	"langchain_community.vectorstores.lantern" -> "__future__" [];
	"langchain_community.vectorstores.lantern" -> "contextlib" [];
	"langchain_community.vectorstores.lantern" -> "enum" [];
	"langchain_community.vectorstores.lantern" -> "logging" [];
	"langchain_community.vectorstores.lantern" -> "uuid" [];
	"langchain_community.vectorstores.lantern" -> "typing" [];
	"langchain_community.vectorstores.lantern" -> "numpy" [];
	"langchain_community.vectorstores.lantern" -> "sqlalchemy" [];
	"langchain_community.vectorstores.lancedb" -> "__future__" [];
	"langchain_community.vectorstores.lancedb" -> "base64" [];
	"langchain_community.vectorstores.lancedb" -> "os" [];
	"langchain_community.vectorstores.lancedb" -> "uuid" [];
	"langchain_community.vectorstores.lancedb" -> "warnings" [];
	"langchain_community.vectorstores.lancedb" -> "typing" [];
	"langchain_community.vectorstores.lancedb" -> "numpy" [];
	"langchain_community.vectorstores.kinetica" -> "__future__" [];
	"langchain_community.vectorstores.kinetica" -> "asyncio" [];
	"langchain_community.vectorstores.kinetica" -> "enum" [];
	"langchain_community.vectorstores.kinetica" -> "json" [];
	"langchain_community.vectorstores.kinetica" -> "logging" [];
	"langchain_community.vectorstores.kinetica" -> "struct" [];
	"langchain_community.vectorstores.kinetica" -> "uuid" [];
	"langchain_community.vectorstores.kinetica" -> "collections" [];
	"langchain_community.vectorstores.kinetica" -> "functools" [];
	"langchain_community.vectorstores.kinetica" -> "typing" [];
	"langchain_community.vectorstores.kinetica" -> "numpy" [];
	"langchain_community.vectorstores.kinetica" -> "pydantic_settings" [];
	"langchain_community.vectorstores.kinetica" -> "gpudb" [];
	"langchain_community.vectorstores.kdbai" -> "__future__" [];
	"langchain_community.vectorstores.kdbai" -> "logging" [];
	"langchain_community.vectorstores.kdbai" -> "uuid" [];
	"langchain_community.vectorstores.kdbai" -> "typing" [];
	"langchain_community.vectorstores.kdbai" -> "kdbai_client" [];
	"langchain_community.vectorstores.kdbai" -> "numpy" [];
	"langchain_community.vectorstores.kdbai" -> "pandas" [];
	"langchain_community.vectorstores.infinispanvs" -> "__future__" [];
	"langchain_community.vectorstores.infinispanvs" -> "json" [];
	"langchain_community.vectorstores.infinispanvs" -> "logging" [];
	"langchain_community.vectorstores.infinispanvs" -> "uuid" [];
	"langchain_community.vectorstores.infinispanvs" -> "warnings" [];
	"langchain_community.vectorstores.infinispanvs" -> "typing" [];
	"langchain_community.vectorstores.hologres" -> "__future__" [];
	"langchain_community.vectorstores.hologres" -> "logging" [];
	"langchain_community.vectorstores.hologres" -> "uuid" [];
	"langchain_community.vectorstores.hologres" -> "typing" [];
	"langchain_community.vectorstores.hologres" -> "hologres_vector" [];
	"langchain_community.vectorstores.hanavector" -> "__future__" [];
	"langchain_community.vectorstores.hanavector" -> "json" [];
	"langchain_community.vectorstores.hanavector" -> "re" [];
	"langchain_community.vectorstores.hanavector" -> "typing" [];
	"langchain_community.vectorstores.hanavector" -> "numpy" [];
	"langchain_community.vectorstores.hanavector" -> "hdbcli" [];
	"langchain_community.vectorstores.faiss" -> "__future__" [];
	"langchain_community.vectorstores.faiss" -> "logging" [];
	"langchain_community.vectorstores.faiss" -> "operator" [];
	"langchain_community.vectorstores.faiss" -> "os" [];
	"langchain_community.vectorstores.faiss" -> "pickle" [];
	"langchain_community.vectorstores.faiss" -> "uuid" [];
	"langchain_community.vectorstores.faiss" -> "warnings" [];
	"langchain_community.vectorstores.faiss" -> "pathlib" [];
	"langchain_community.vectorstores.faiss" -> "typing" [];
	"langchain_community.vectorstores.faiss" -> "numpy" [];
	"langchain_community.vectorstores.faiss" -> "faiss" [];
	"langchain_community.vectorstores.epsilla" -> "__future__" [];
	"langchain_community.vectorstores.epsilla" -> "logging" [];
	"langchain_community.vectorstores.epsilla" -> "uuid" [];
	"langchain_community.vectorstores.epsilla" -> "typing" [];
	"langchain_community.vectorstores.epsilla" -> "pyepsilla" [];
	"langchain_community.vectorstores.elasticsearch" -> "logging" [];
	"langchain_community.vectorstores.elasticsearch" -> "uuid" [];
	"langchain_community.vectorstores.elasticsearch" -> "abc" [];
	"langchain_community.vectorstores.elasticsearch" -> "typing" [];
	"langchain_community.vectorstores.elasticsearch" -> "numpy" [];
	"langchain_community.vectorstores.elasticsearch" -> "elasticsearch" [];
	"langchain_community.vectorstores.elasticsearch" -> "langchain_community" [];
	"langchain_community.vectorstores.elasticsearch" -> "'elasticsearch.helpers'" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "__future__" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "uuid" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "warnings" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "typing" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "elasticsearch" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "langchain_community" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "'elasticsearch.exceptions'" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "'elasticsearch.helpers'" [];
	"langchain_community.vectorstores.ecloud_vector_search" -> "logging" [];
	"langchain_community.vectorstores.ecloud_vector_search" -> "uuid" [];
	"langchain_community.vectorstores.ecloud_vector_search" -> "typing" [];
	"langchain_community.vectorstores.ecloud_vector_search" -> "elasticsearch" [];
	"langchain_community.vectorstores.ecloud_vector_search" -> "'elasticsearch.helpers'" [];
	"langchain_community.vectorstores.duckdb" -> "__future__" [];
	"langchain_community.vectorstores.duckdb" -> "json" [];
	"langchain_community.vectorstores.duckdb" -> "logging" [];
	"langchain_community.vectorstores.duckdb" -> "uuid" [];
	"langchain_community.vectorstores.duckdb" -> "warnings" [];
	"langchain_community.vectorstores.duckdb" -> "typing" [];
	"langchain_community.vectorstores.duckdb" -> "duckdb" [];
	"langchain_community.vectorstores.duckdb" -> "pandas" [];
	"langchain_community.vectorstores.documentdb" -> "__future__" [];
	"langchain_community.vectorstores.documentdb" -> "logging" [];
	"langchain_community.vectorstores.documentdb" -> "enum" [];
	"langchain_community.vectorstores.documentdb" -> "typing" [];
	"langchain_community.vectorstores.documentdb" -> "'pymongo.collection'" [];
	"langchain_community.vectorstores.documentdb" -> "pymongo" [];
	"langchain_community.vectorstores.documentdb" -> "'bson.objectid'" [];
	"langchain_community.vectorstores.docarray.in_memory" -> "__future__" [];
	"langchain_community.vectorstores.docarray.in_memory" -> "typing" [];
	"langchain_community.vectorstores.docarray.in_memory" -> "'docarray.index'" [];
	"langchain_community.vectorstores.docarray.base" -> "abc" [];
	"langchain_community.vectorstores.docarray.base" -> "typing" [];
	"langchain_community.vectorstores.docarray.base" -> "numpy" [];
	"langchain_community.vectorstores.docarray.base" -> "pydantic" [];
	"langchain_community.vectorstores.docarray.base" -> "docarray" [];
	"langchain_community.vectorstores.docarray.base" -> "'docarray.index'" [];
	"langchain_community.vectorstores.docarray.base" -> "'docarray.typing'" [];
	"langchain_community.vectorstores.docarray.hnsw" -> "__future__" [];
	"langchain_community.vectorstores.docarray.hnsw" -> "typing" [];
	"langchain_community.vectorstores.docarray.hnsw" -> "'docarray.index'" [];
	"langchain_community.vectorstores.dingo" -> "__future__" [];
	"langchain_community.vectorstores.dingo" -> "logging" [];
	"langchain_community.vectorstores.dingo" -> "uuid" [];
	"langchain_community.vectorstores.dingo" -> "typing" [];
	"langchain_community.vectorstores.dingo" -> "numpy" [];
	"langchain_community.vectorstores.dingo" -> "dingodb" [];
	"langchain_community.vectorstores.deeplake" -> "__future__" [];
	"langchain_community.vectorstores.deeplake" -> "logging" [];
	"langchain_community.vectorstores.deeplake" -> "typing" [];
	"langchain_community.vectorstores.deeplake" -> "numpy" [];
	"langchain_community.vectorstores.deeplake" -> "deeplake" [];
	"langchain_community.vectorstores.deeplake" -> "'deeplake.core'" [];
	"langchain_community.vectorstores.deeplake" -> "'deeplake.util'" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "__future__" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "json" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "logging" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "uuid" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "typing" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "numpy" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "'databricks.vector_search'" [];
	"langchain_community.vectorstores.dashvector" -> "__future__" [];
	"langchain_community.vectorstores.dashvector" -> "logging" [];
	"langchain_community.vectorstores.dashvector" -> "uuid" [];
	"langchain_community.vectorstores.dashvector" -> "typing" [];
	"langchain_community.vectorstores.dashvector" -> "numpy" [];
	"langchain_community.vectorstores.dashvector" -> "dashvector" [];
	"langchain_community.vectorstores.couchbase" -> "__future__" [];
	"langchain_community.vectorstores.couchbase" -> "uuid" [];
	"langchain_community.vectorstores.couchbase" -> "typing" [];
	"langchain_community.vectorstores.couchbase" -> "'couchbase.cluster'" [];
	"langchain_community.vectorstores.couchbase" -> "'couchbase.exceptions'" [];
	"langchain_community.vectorstores.couchbase" -> "'couchbase.search'" [];
	"langchain_community.vectorstores.couchbase" -> "'couchbase.options'" [];
	"langchain_community.vectorstores.couchbase" -> "'couchbase.vector_search'" [];
	"langchain_community.vectorstores.clickhouse" -> "__future__" [];
	"langchain_community.vectorstores.clickhouse" -> "json" [];
	"langchain_community.vectorstores.clickhouse" -> "logging" [];
	"langchain_community.vectorstores.clickhouse" -> "hashlib" [];
	"langchain_community.vectorstores.clickhouse" -> "threading" [];
	"langchain_community.vectorstores.clickhouse" -> "typing" [];
	"langchain_community.vectorstores.clickhouse" -> "pydantic_settings" [];
	"langchain_community.vectorstores.clickhouse" -> "clickhouse_connect" [];
	"langchain_community.vectorstores.clickhouse" -> "tqdm" [];
	"langchain_community.vectorstores.clarifai" -> "__future__" [];
	"langchain_community.vectorstores.clarifai" -> "logging" [];
	"langchain_community.vectorstores.clarifai" -> "os" [];
	"langchain_community.vectorstores.clarifai" -> "traceback" [];
	"langchain_community.vectorstores.clarifai" -> "uuid" [];
	"langchain_community.vectorstores.clarifai" -> "typing" [];
	"langchain_community.vectorstores.clarifai" -> "requests" [];
	"langchain_community.vectorstores.clarifai" -> "'clarifai.client'" [];
	"langchain_community.vectorstores.clarifai" -> "clarifai_grpc" [];
	"langchain_community.vectorstores.chroma" -> "__future__" [];
	"langchain_community.vectorstores.chroma" -> "base64" [];
	"langchain_community.vectorstores.chroma" -> "logging" [];
	"langchain_community.vectorstores.chroma" -> "uuid" [];
	"langchain_community.vectorstores.chroma" -> "typing" [];
	"langchain_community.vectorstores.chroma" -> "numpy" [];
	"langchain_community.vectorstores.chroma" -> "chromadb" [];
	"langchain_community.vectorstores.chroma" -> "'chromadb.config'" [];
	"langchain_community.vectorstores.chroma" -> "'chromadb.api'" [];
	"langchain_community.vectorstores.chroma" -> "'chromadb.utils'" [];
	"langchain_community.vectorstores.cassandra" -> "__future__" [];
	"langchain_community.vectorstores.cassandra" -> "asyncio" [];
	"langchain_community.vectorstores.cassandra" -> "typing" [];
	"langchain_community.vectorstores.cassandra" -> "uuid" [];
	"langchain_community.vectorstores.cassandra" -> "warnings" [];
	"langchain_community.vectorstores.cassandra" -> "numpy" [];
	"langchain_community.vectorstores.cassandra" -> "'cassandra.cluster'" [];
	"langchain_community.vectorstores.cassandra" -> "'cassio.table'" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "__future__" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "asyncio" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "json" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "logging" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "sys" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "uuid" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "datetime" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "functools" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "threading" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "typing" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "numpy" [];
	"langchain_community.utils.google" -> "importlib" [];
	"langchain_community.utils.google" -> "typing" [];
	"langchain_community.vectorstores.baiduvectordb" -> "__future__" [];
	"langchain_community.vectorstores.baiduvectordb" -> "json" [];
	"langchain_community.vectorstores.baiduvectordb" -> "logging" [];
	"langchain_community.vectorstores.baiduvectordb" -> "time" [];
	"langchain_community.vectorstores.baiduvectordb" -> "typing" [];
	"langchain_community.vectorstores.baiduvectordb" -> "numpy" [];
	"langchain_community.vectorstores.baiducloud_vector_search" -> "logging" [];
	"langchain_community.vectorstores.baiducloud_vector_search" -> "uuid" [];
	"langchain_community.vectorstores.baiducloud_vector_search" -> "typing" [];
	"langchain_community.vectorstores.baiducloud_vector_search" -> "elasticsearch" [];
	"langchain_community.vectorstores.baiducloud_vector_search" -> "'elasticsearch.helpers'" [];
	"langchain_community.vectorstores.bagel" -> "__future__" [];
	"langchain_community.vectorstores.bagel" -> "uuid" [];
	"langchain_community.vectorstores.bagel" -> "typing" [];
	"langchain_community.vectorstores.bagel" -> "bagel" [];
	"langchain_community.vectorstores.bagel" -> "'bagel.config'" [];
	"langchain_community.vectorstores.bagel" -> "'bagel.api'" [];
	"langchain_community.vectorstores.azuresearch" -> "__future__" [];
	"langchain_community.vectorstores.azuresearch" -> "asyncio" [];
	"langchain_community.vectorstores.azuresearch" -> "base64" [];
	"langchain_community.vectorstores.azuresearch" -> "itertools" [];
	"langchain_community.vectorstores.azuresearch" -> "json" [];
	"langchain_community.vectorstores.azuresearch" -> "logging" [];
	"langchain_community.vectorstores.azuresearch" -> "time" [];
	"langchain_community.vectorstores.azuresearch" -> "uuid" [];
	"langchain_community.vectorstores.azuresearch" -> "typing" [];
	"langchain_community.vectorstores.azuresearch" -> "numpy" [];
	"langchain_community.vectorstores.azuresearch" -> "pydantic" [];
	"langchain_community.vectorstores.azuresearch" -> "'azure.core'" [];
	"langchain_community.vectorstores.azuresearch" -> "'azure.search'" [];
	"langchain_community.vectorstores.azuresearch" -> "'azure.identity'" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "__future__" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "uuid" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "warnings" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "enum" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "typing" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "numpy" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "pydantic" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "'azure.cosmos'" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "'azure.identity'" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "__future__" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "logging" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "enum" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "typing" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "numpy" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "'pymongo.collection'" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "pymongo" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "bson" [];
	"langchain_community.vectorstores.awadb" -> "__future__" [];
	"langchain_community.vectorstores.awadb" -> "logging" [];
	"langchain_community.vectorstores.awadb" -> "uuid" [];
	"langchain_community.vectorstores.awadb" -> "typing" [];
	"langchain_community.vectorstores.awadb" -> "numpy" [];
	"langchain_community.vectorstores.awadb" -> "awadb" [];
	"langchain_community.vectorstores.atlas" -> "__future__" [];
	"langchain_community.vectorstores.atlas" -> "logging" [];
	"langchain_community.vectorstores.atlas" -> "uuid" [];
	"langchain_community.vectorstores.atlas" -> "typing" [];
	"langchain_community.vectorstores.atlas" -> "numpy" [];
	"langchain_community.vectorstores.atlas" -> "nomic" [];
	"langchain_community.vectorstores.astradb" -> "__future__" [];
	"langchain_community.vectorstores.astradb" -> "uuid" [];
	"langchain_community.vectorstores.astradb" -> "warnings" [];
	"langchain_community.vectorstores.astradb" -> "typing" [];
	"langchain_community.vectorstores.astradb" -> "numpy" [];
	"langchain_community.vectorstores.astradb" -> "'astrapy.db'" [];
	"langchain_community.vectorstores.aperturedb" -> "__future__" [];
	"langchain_community.vectorstores.aperturedb" -> "logging" [];
	"langchain_community.vectorstores.aperturedb" -> "time" [];
	"langchain_community.vectorstores.aperturedb" -> "uuid" [];
	"langchain_community.vectorstores.aperturedb" -> "typing" [];
	"langchain_community.vectorstores.aperturedb" -> "numpy" [];
	"langchain_community.vectorstores.aperturedb" -> "typing_extensions" [];
	"langchain_community.vectorstores.aperturedb" -> "aperturedb" [];
	"langchain_community.vectorstores.aperturedb" -> "'aperturedb.Utils'" [];
	"langchain_community.vectorstores.aperturedb" -> "'aperturedb.Descriptors'" [];
	"langchain_community.vectorstores.aperturedb" -> "'aperturedb.ParallelLoader'" [];
	"langchain_core.indexing.base" -> "__future__" [];
	"langchain_core.indexing.base" -> "abc" [];
	"langchain_core.indexing.base" -> "time" [];
	"langchain_core.indexing.base" -> "typing" [];
	"langchain_core.indexing" -> "typing" [];
	"langchain_core.indexing.api" -> "__future__" [];
	"langchain_core.indexing.api" -> "hashlib" [];
	"langchain_core.indexing.api" -> "json" [];
	"langchain_core.indexing.api" -> "uuid" [];
	"langchain_core.indexing.api" -> "itertools" [];
	"langchain_core.indexing.api" -> "typing" [];
	"langchain_core.indexing.api" -> "pydantic" [];
	"langchain_community.vectorstores.apache_doris" -> "__future__" [];
	"langchain_community.vectorstores.apache_doris" -> "json" [];
	"langchain_community.vectorstores.apache_doris" -> "logging" [];
	"langchain_community.vectorstores.apache_doris" -> "hashlib" [];
	"langchain_community.vectorstores.apache_doris" -> "threading" [];
	"langchain_community.vectorstores.apache_doris" -> "typing" [];
	"langchain_community.vectorstores.apache_doris" -> "numpy" [];
	"langchain_community.vectorstores.apache_doris" -> "pydantic_settings" [];
	"langchain_community.vectorstores.apache_doris" -> "typing_extensions" [];
	"langchain_community.vectorstores.apache_doris" -> "pymysql" [];
	"langchain_community.vectorstores.apache_doris" -> "tqdm" [];
	"langchain_community.vectorstores.annoy" -> "__future__" [];
	"langchain_community.vectorstores.annoy" -> "os" [];
	"langchain_community.vectorstores.annoy" -> "pickle" [];
	"langchain_community.vectorstores.annoy" -> "uuid" [];
	"langchain_community.vectorstores.annoy" -> "configparser" [];
	"langchain_community.vectorstores.annoy" -> "pathlib" [];
	"langchain_community.vectorstores.annoy" -> "typing" [];
	"langchain_community.vectorstores.annoy" -> "numpy" [];
	"langchain_community.vectorstores.analyticdb" -> "__future__" [];
	"langchain_community.vectorstores.analyticdb" -> "logging" [];
	"langchain_community.vectorstores.analyticdb" -> "uuid" [];
	"langchain_community.vectorstores.analyticdb" -> "typing" [];
	"langchain_community.vectorstores.analyticdb" -> "sqlalchemy" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "json" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "logging" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "numbers" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "hashlib" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "typing" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "alibabacloud_ha3engine_vector" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "alibabacloud_tea_util" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "'alibabacloud_ha3engine_vector.models'" [];
	"langchain_community.vectorstores.aerospike" -> "__future__" [];
	"langchain_community.vectorstores.aerospike" -> "logging" [];
	"langchain_community.vectorstores.aerospike" -> "uuid" [];
	"langchain_community.vectorstores.aerospike" -> "warnings" [];
	"langchain_community.vectorstores.aerospike" -> "typing" [];
	"langchain_community.vectorstores.aerospike" -> "numpy" [];
	"langchain_community.vectorstores.aerospike" -> "aerospike_vector_search" [];
	"langchain_community.vectorstores.aerospike" -> "'aerospike_vector_search.types'" [];
	"langchain_community" -> "importlib" [];
	"langchain_core.vectorstores" -> "typing" [];
	"langchain_core.vectorstores.in_memory" -> "__future__" [];
	"langchain_core.vectorstores.in_memory" -> "json" [];
	"langchain_core.vectorstores.in_memory" -> "uuid" [];
	"langchain_core.vectorstores.in_memory" -> "pathlib" [];
	"langchain_core.vectorstores.in_memory" -> "typing" [];
	"langchain_core.vectorstores.in_memory" -> "typing_extensions" [];
	"langchain_core.vectorstores.in_memory" -> "numpy" [];
	"langchain_core.vectorstores.utils" -> "__future__" [];
	"langchain_core.vectorstores.utils" -> "logging" [];
	"langchain_core.vectorstores.utils" -> "typing" [];
	"langchain_core.vectorstores.utils" -> "numpy" [];
	"langchain_core.vectorstores.utils" -> "simsimd" [];
	"langchain_core.vectorstores.base" -> "__future__" [];
	"langchain_core.vectorstores.base" -> "logging" [];
	"langchain_core.vectorstores.base" -> "math" [];
	"langchain_core.vectorstores.base" -> "warnings" [];
	"langchain_core.vectorstores.base" -> "abc" [];
	"langchain_core.vectorstores.base" -> "itertools" [];
	"langchain_core.vectorstores.base" -> "typing" [];
	"langchain_core.vectorstores.base" -> "pydantic" [];
	"langchain_core.vectorstores.base" -> "typing_extensions" [];
	"langchain_community.utilities" -> "importlib" [];
	"langchain_community.utilities" -> "typing" [];
	"langchain_community.utilities.twilio" -> "typing" [];
	"langchain_community.utilities.twilio" -> "pydantic" [];
	"langchain_community.utilities.twilio" -> "twilio" [];
	"langchain_community.utilities.serpapi" -> "os" [];
	"langchain_community.utilities.serpapi" -> "sys" [];
	"langchain_community.utilities.serpapi" -> "typing" [];
	"langchain_community.utilities.serpapi" -> "aiohttp" [];
	"langchain_community.utilities.serpapi" -> "pydantic" [];
	"langchain_community.utilities.serpapi" -> "serpapi" [];
	"langchain_community.utilities.portkey" -> "json" [];
	"langchain_community.utilities.portkey" -> "os" [];
	"langchain_community.utilities.portkey" -> "typing" [];
	"langchain_community.utilities.passio_nutrition_ai" -> "datetime" [];
	"langchain_community.utilities.passio_nutrition_ai" -> "typing" [];
	"langchain_community.utilities.passio_nutrition_ai" -> "requests" [];
	"langchain_community.utilities.passio_nutrition_ai" -> "pydantic" [];
	"langchain_community.utilities.passio_nutrition_ai" -> "tenacity" [];
	"langchain_community.utilities.oracleai" -> "__future__" [];
	"langchain_community.utilities.oracleai" -> "json" [];
	"langchain_community.utilities.oracleai" -> "logging" [];
	"langchain_community.utilities.oracleai" -> "traceback" [];
	"langchain_community.utilities.oracleai" -> "typing" [];
	"langchain_community.utilities.oracleai" -> "oracledb" [];
	"langchain_community.utilities.nvidia_riva" -> "asyncio" [];
	"langchain_community.utilities.nvidia_riva" -> "logging" [];
	"langchain_community.utilities.nvidia_riva" -> "pathlib" [];
	"langchain_community.utilities.nvidia_riva" -> "queue" [];
	"langchain_community.utilities.nvidia_riva" -> "tempfile" [];
	"langchain_community.utilities.nvidia_riva" -> "threading" [];
	"langchain_community.utilities.nvidia_riva" -> "wave" [];
	"langchain_community.utilities.nvidia_riva" -> "enum" [];
	"langchain_community.utilities.nvidia_riva" -> "typing" [];
	"langchain_community.utilities.nvidia_riva" -> "pydantic" [];
	"langchain_community.utilities.nvidia_riva" -> "riva" [];
	"langchain_community.utilities.nvidia_riva" -> "'riva.client'" [];
	"langchain_community.utilities.infobip" -> "typing" [];
	"langchain_community.utilities.infobip" -> "requests" [];
	"langchain_community.utilities.infobip" -> "pydantic" [];
	"langchain_community.utilities.infobip" -> "requests_toolbelt" [];
	"requests_toolbelt.utils.user_agent" -> "collections" [];
	"requests_toolbelt.utils.user_agent" -> "platform" [];
	"requests_toolbelt.utils.user_agent" -> "sys" [];
	"requests_toolbelt.multipart.encoder" -> "contextlib" [];
	"requests_toolbelt.multipart.encoder" -> "io" [];
	"requests_toolbelt.multipart.encoder" -> "os" [];
	"requests_toolbelt.multipart.encoder" -> "uuid" [];
	"requests_toolbelt.multipart.encoder" -> "requests" [];
	"requests_toolbelt._compat" -> "sys" [];
	"requests_toolbelt._compat" -> "requests" [];
	"requests_toolbelt._compat" -> "'requests.packages.urllib3'" [];
	"requests_toolbelt._compat" -> "queue" [];
	"requests_toolbelt._compat" -> "collections" [];
	"requests_toolbelt._compat" -> "Queue" [];
	"requests_toolbelt._compat" -> "urllib" [];
	"requests_toolbelt._compat" -> "urlparse" [];
	"requests_toolbelt.multipart.decoder" -> "sys" [];
	"requests_toolbelt.auth.guess" -> "requests" [];
	"requests_toolbelt.auth.http_proxy_digest" -> "re" [];
	"requests_toolbelt.auth.http_proxy_digest" -> "requests" [];
	"requests_toolbelt.auth._digest_auth_compat" -> "requests" [];
	"requests_toolbelt.adapters.ssl" -> "requests" [];
	"langchain_community.utilities.google_trends" -> "typing" [];
	"langchain_community.utilities.google_trends" -> "pydantic" [];
	"langchain_community.utilities.google_trends" -> "serpapi" [];
	"langchain_community.utilities.google_scholar" -> "typing" [];
	"langchain_community.utilities.google_scholar" -> "pydantic" [];
	"langchain_community.utilities.google_scholar" -> "serpapi" [];
	"langchain_community.utilities.google_lens" -> "typing" [];
	"langchain_community.utilities.google_lens" -> "requests" [];
	"langchain_community.utilities.google_lens" -> "pydantic" [];
	"langchain_community.utilities.google_jobs" -> "typing" [];
	"langchain_community.utilities.google_jobs" -> "pydantic" [];
	"langchain_community.utilities.google_jobs" -> "serpapi" [];
	"langchain_community.utilities.google_finance" -> "typing" [];
	"langchain_community.utilities.google_finance" -> "pydantic" [];
	"langchain_community.utilities.google_finance" -> "serpapi" [];
	"langchain_community.utilities.golden_query" -> "json" [];
	"langchain_community.utilities.golden_query" -> "typing" [];
	"langchain_community.utilities.golden_query" -> "requests" [];
	"langchain_community.utilities.golden_query" -> "pydantic" [];
	"langchain_community.utilities.dria_index" -> "logging" [];
	"langchain_community.utilities.dria_index" -> "typing" [];
	"langchain_community.utilities.dria_index" -> "dria" [];
	"langchain_community.utilities.awslambda" -> "json" [];
	"langchain_community.utilities.awslambda" -> "typing" [];
	"langchain_community.utilities.awslambda" -> "pydantic" [];
	"langchain_community.utilities.awslambda" -> "boto3" [];
	"langchain_community.utilities.apify" -> "typing" [];
	"langchain_community.utilities.apify" -> "pydantic" [];
	"langchain_community.utilities.apify" -> "apify_client" [];
	"langchain_community.utilities.alpha_vantage" -> "typing" [];
	"langchain_community.utilities.alpha_vantage" -> "requests" [];
	"langchain_community.utilities.alpha_vantage" -> "pydantic" [];
	"langchain_core.prompts" -> "typing" [];
	"langchain_core.prompts.pipeline" -> "typing" [];
	"langchain_core.prompts.pipeline" -> "pydantic" [];
	"langchain_core.prompts.loading" -> "json" [];
	"langchain_core.prompts.loading" -> "logging" [];
	"langchain_core.prompts.loading" -> "pathlib" [];
	"langchain_core.prompts.loading" -> "typing" [];
	"langchain_core.prompts.loading" -> "yaml" [];
	"langchain_core.prompts.few_shot_with_templates" -> "pathlib" [];
	"langchain_core.prompts.few_shot_with_templates" -> "typing" [];
	"langchain_core.prompts.few_shot_with_templates" -> "pydantic" [];
	"langchain_core.prompts.few_shot_with_templates" -> "typing_extensions" [];
	"langchain_community.llms.huggingface_pipeline" -> "__future__" [];
	"langchain_community.llms.huggingface_pipeline" -> "logging" [];
	"langchain_community.llms.huggingface_pipeline" -> "typing" [];
	"langchain_community.llms.huggingface_pipeline" -> "pydantic" [];
	"langchain_community.llms.huggingface_pipeline" -> "transformers" [];
	"langchain_community.llms.huggingface_pipeline" -> "optimum" [];
	"langchain_community.llms.huggingface_pipeline" -> "'optimum.intel'" [];
	"langchain_community.llms.huggingface_pipeline" -> "torch" [];
	"langchain_community.llms.huggingface_pipeline" -> "threading" [];
	"langchain_community.llms" -> "typing" [];
	"langchain_community.llms.yi" -> "__future__" [];
	"langchain_community.llms.yi" -> "json" [];
	"langchain_community.llms.yi" -> "logging" [];
	"langchain_community.llms.yi" -> "typing" [];
	"langchain_community.llms.yi" -> "requests" [];
	"langchain_community.llms.yi" -> "pydantic" [];
	"langchain_community.llms.you" -> "os" [];
	"langchain_community.llms.you" -> "typing" [];
	"langchain_community.llms.you" -> "requests" [];
	"langchain_community.llms.you" -> "pydantic" [];
	"langchain_community.llms.you" -> "sseclient" [];
	"langchain_community.llms.sparkllm" -> "__future__" [];
	"langchain_community.llms.sparkllm" -> "base64" [];
	"langchain_community.llms.sparkllm" -> "hashlib" [];
	"langchain_community.llms.sparkllm" -> "hmac" [];
	"langchain_community.llms.sparkllm" -> "json" [];
	"langchain_community.llms.sparkllm" -> "logging" [];
	"langchain_community.llms.sparkllm" -> "queue" [];
	"langchain_community.llms.sparkllm" -> "threading" [];
	"langchain_community.llms.sparkllm" -> "datetime" [];
	"langchain_community.llms.sparkllm" -> "time" [];
	"langchain_community.llms.sparkllm" -> "typing" [];
	"langchain_community.llms.sparkllm" -> "pydantic" [];
	"langchain_community.llms.sparkllm" -> "websocket" [];
	"langchain_community.llms.yuan2" -> "json" [];
	"langchain_community.llms.yuan2" -> "logging" [];
	"langchain_community.llms.yuan2" -> "typing" [];
	"langchain_community.llms.yuan2" -> "requests" [];
	"langchain_community.llms.yuan2" -> "pydantic" [];
	"langchain_community.llms.xinference" -> "__future__" [];
	"langchain_community.llms.xinference" -> "json" [];
	"langchain_community.llms.xinference" -> "typing" [];
	"langchain_community.llms.xinference" -> "aiohttp" [];
	"langchain_community.llms.xinference" -> "requests" [];
	"langchain_community.llms.xinference" -> "xinference" [];
	"langchain_community.llms.xinference" -> "'xinference.model'" [];
	"langchain_community.llms.xinference" -> "'xinference.client'" [];
	"langchain_community.llms.xinference" -> "xinference_client" [];
	"langchain_community.llms.writer" -> "typing" [];
	"langchain_community.llms.writer" -> "pydantic" [];
	"langchain_community.llms.writer" -> "writerai" [];
	"langchain_community.llms.weight_only_quantization" -> "importlib" [];
	"langchain_community.llms.weight_only_quantization" -> "typing" [];
	"langchain_community.llms.weight_only_quantization" -> "pydantic" [];
	"langchain_community.llms.weight_only_quantization" -> "intel_extension_for_transformers" [];
	"langchain_community.llms.weight_only_quantization" -> "'intel_extension_for_transformers.utils'" [];
	"langchain_community.llms.weight_only_quantization" -> "transformers" [];
	"langchain_community.llms.watsonxllm" -> "logging" [];
	"langchain_community.llms.watsonxllm" -> "os" [];
	"langchain_community.llms.watsonxllm" -> "typing" [];
	"langchain_community.llms.watsonxllm" -> "pydantic" [];
	"langchain_community.llms.watsonxllm" -> "ibm_watsonx_ai" [];
	"langchain_community.llms.vllm" -> "typing" [];
	"langchain_community.llms.vllm" -> "pydantic" [];
	"langchain_community.llms.vllm" -> "vllm" [];
	"langchain_community.llms.together" -> "logging" [];
	"langchain_community.llms.together" -> "typing" [];
	"langchain_community.llms.together" -> "aiohttp" [];
	"langchain_community.llms.together" -> "pydantic" [];
	"langchain_community.llms.together" -> "langchain_community" [];
	"langchain_community.llms.titan_takeoff" -> "enum" [];
	"langchain_community.llms.titan_takeoff" -> "typing" [];
	"langchain_community.llms.titan_takeoff" -> "pydantic" [];
	"langchain_community.llms.titan_takeoff" -> "takeoff_client" [];
	"langchain_community.llms.textgen" -> "json" [];
	"langchain_community.llms.textgen" -> "logging" [];
	"langchain_community.llms.textgen" -> "typing" [];
	"langchain_community.llms.textgen" -> "requests" [];
	"langchain_community.llms.textgen" -> "pydantic" [];
	"langchain_community.llms.textgen" -> "websocket" [];
	"langchain_community.llms.symblai_nebula" -> "json" [];
	"langchain_community.llms.symblai_nebula" -> "logging" [];
	"langchain_community.llms.symblai_nebula" -> "typing" [];
	"langchain_community.llms.symblai_nebula" -> "requests" [];
	"langchain_community.llms.symblai_nebula" -> "pydantic" [];
	"langchain_community.llms.symblai_nebula" -> "tenacity" [];
	"langchain_community.llms.stochasticai" -> "logging" [];
	"langchain_community.llms.stochasticai" -> "time" [];
	"langchain_community.llms.stochasticai" -> "typing" [];
	"langchain_community.llms.stochasticai" -> "requests" [];
	"langchain_community.llms.stochasticai" -> "pydantic" [];
	"langchain_community.llms.self_hosted_hugging_face" -> "logging" [];
	"langchain_community.llms.self_hosted_hugging_face" -> "typing" [];
	"langchain_community.llms.self_hosted_hugging_face" -> "pydantic" [];
	"langchain_community.llms.self_hosted_hugging_face" -> "transformers" [];
	"langchain_community.llms.self_hosted_hugging_face" -> "torch" [];
	"langchain_community.llms.sambanova" -> "json" [];
	"langchain_community.llms.sambanova" -> "typing" [];
	"langchain_community.llms.sambanova" -> "requests" [];
	"langchain_community.llms.sambanova" -> "pydantic" [];
	"langchain_community.llms.sambanova" -> "sseclient" [];
	"langchain_community.llms.rwkv" -> "typing" [];
	"langchain_community.llms.rwkv" -> "pydantic" [];
	"langchain_community.llms.rwkv" -> "tokenizers" [];
	"langchain_community.llms.rwkv" -> "rwkv" [];
	"langchain_community.llms.rwkv" -> "'rwkv.utils'" [];
	"langchain_community.llms.replicate" -> "__future__" [];
	"langchain_community.llms.replicate" -> "logging" [];
	"langchain_community.llms.replicate" -> "typing" [];
	"langchain_community.llms.replicate" -> "pydantic" [];
	"langchain_community.llms.replicate" -> "replicate" [];
	"langchain_community.llms.promptlayer_openai" -> "datetime" [];
	"langchain_community.llms.promptlayer_openai" -> "typing" [];
	"langchain_community.llms.promptlayer_openai" -> "promptlayer" [];
	"langchain_community.llms.promptlayer_openai" -> "'promptlayer.utils'" [];
	"langchain_community.llms.predictionguard" -> "logging" [];
	"langchain_community.llms.predictionguard" -> "typing" [];
	"langchain_community.llms.predictionguard" -> "pydantic" [];
	"langchain_community.llms.predictionguard" -> "predictionguard" [];
	"langchain_community.llms.predibase" -> "os" [];
	"langchain_community.llms.predibase" -> "typing" [];
	"langchain_community.llms.predibase" -> "pydantic" [];
	"langchain_community.llms.predibase" -> "predibase" [];
	"langchain_community.llms.predibase" -> "'predibase.pql'" [];
	"langchain_community.llms.predibase" -> "'predibase.resource'" [];
	"langchain_community.llms.predibase" -> "requests" [];
	"langchain_community.llms.predibase" -> "lorax" [];
	"langchain_community.llms.predibase" -> "'lorax.errors'" [];
	"langchain_community.llms.predibase" -> "'lorax.types'" [];
	"langchain_community.llms.predibase" -> "semantic_version" [];
	"langchain_community.llms.predibase" -> "'predibase.version'" [];
	"langchain_community.llms.predibase" -> "'semantic_version.base'" [];
	"langchain_community.llms.pipelineai" -> "logging" [];
	"langchain_community.llms.pipelineai" -> "typing" [];
	"langchain_community.llms.pipelineai" -> "pydantic" [];
	"langchain_community.llms.pipelineai" -> "pipeline" [];
	"langchain_community.llms.petals" -> "logging" [];
	"langchain_community.llms.petals" -> "typing" [];
	"langchain_community.llms.petals" -> "pydantic" [];
	"langchain_community.llms.petals" -> "petals" [];
	"langchain_community.llms.petals" -> "transformers" [];
	"langchain_community.llms.pai_eas_endpoint" -> "json" [];
	"langchain_community.llms.pai_eas_endpoint" -> "logging" [];
	"langchain_community.llms.pai_eas_endpoint" -> "typing" [];
	"langchain_community.llms.pai_eas_endpoint" -> "requests" [];
	"langchain_community.llms.outlines" -> "__future__" [];
	"langchain_community.llms.outlines" -> "logging" [];
	"langchain_community.llms.outlines" -> "platform" [];
	"langchain_community.llms.outlines" -> "typing" [];
	"langchain_community.llms.outlines" -> "pydantic" [];
	"langchain_community.llms.outlines" -> "outlines" [];
	"langchain_community.llms.outlines" -> "transformers" [];
	"langchain_community.llms.openlm" -> "typing" [];
	"langchain_community.llms.openlm" -> "openlm" [];
	"langchain_community.llms.openllm" -> "__future__" [];
	"langchain_community.llms.openllm" -> "typing" [];
	"langchain_community.llms.opaqueprompts" -> "logging" [];
	"langchain_community.llms.opaqueprompts" -> "typing" [];
	"langchain_community.llms.opaqueprompts" -> "pydantic" [];
	"langchain_community.llms.opaqueprompts" -> "opaqueprompts" [];
	"langchain_community.llms.octoai_endpoint" -> "typing" [];
	"langchain_community.llms.octoai_endpoint" -> "pydantic" [];
	"langchain_community.llms.octoai_endpoint" -> "openai" [];
	"langchain_community.llms.nlpcloud" -> "typing" [];
	"langchain_community.llms.nlpcloud" -> "pydantic" [];
	"langchain_community.llms.nlpcloud" -> "nlpcloud" [];
	"langchain_community.llms.mosaicml" -> "typing" [];
	"langchain_community.llms.mosaicml" -> "requests" [];
	"langchain_community.llms.mosaicml" -> "pydantic" [];
	"langchain_community.llms.mosaicml" -> "time" [];
	"langchain_community.llms.modal" -> "logging" [];
	"langchain_community.llms.modal" -> "typing" [];
	"langchain_community.llms.modal" -> "requests" [];
	"langchain_community.llms.modal" -> "pydantic" [];
	"langchain_community.llms.mlflow_ai_gateway" -> "__future__" [];
	"langchain_community.llms.mlflow_ai_gateway" -> "warnings" [];
	"langchain_community.llms.mlflow_ai_gateway" -> "typing" [];
	"langchain_community.llms.mlflow_ai_gateway" -> "pydantic" [];
	"langchain_community.llms.mlflow_ai_gateway" -> "'mlflow.gateway'" [];
	"langchain_community.llms.mlflow" -> "__future__" [];
	"langchain_community.llms.mlflow" -> "typing" [];
	"langchain_community.llms.mlflow" -> "pydantic" [];
	"langchain_community.llms.mlflow" -> "'mlflow.deployments'" [];
	"langchain_community.llms.minimax" -> "__future__" [];
	"langchain_community.llms.minimax" -> "logging" [];
	"langchain_community.llms.minimax" -> "typing" [];
	"langchain_community.llms.minimax" -> "requests" [];
	"langchain_community.llms.minimax" -> "pydantic" [];
	"langchain_community.llms.manifest" -> "typing" [];
	"langchain_community.llms.manifest" -> "pydantic" [];
	"langchain_community.llms.manifest" -> "manifest" [];
	"langchain_community.llms.llamafile" -> "__future__" [];
	"langchain_community.llms.llamafile" -> "json" [];
	"langchain_community.llms.llamafile" -> "io" [];
	"langchain_community.llms.llamafile" -> "typing" [];
	"langchain_community.llms.llamafile" -> "requests" [];
	"langchain_community.llms.llamafile" -> "pydantic" [];
	"langchain_community.llms.llamacpp" -> "__future__" [];
	"langchain_community.llms.llamacpp" -> "logging" [];
	"langchain_community.llms.llamacpp" -> "pathlib" [];
	"langchain_community.llms.llamacpp" -> "typing" [];
	"langchain_community.llms.llamacpp" -> "pydantic" [];
	"langchain_community.llms.llamacpp" -> "llama_cpp" [];
	"langchain_community.llms.konko" -> "logging" [];
	"langchain_community.llms.konko" -> "warnings" [];
	"langchain_community.llms.konko" -> "typing" [];
	"langchain_community.llms.konko" -> "pydantic" [];
	"langchain_community.llms.konko" -> "konko" [];
	"langchain_community.llms.konko" -> "langchain_community" [];
	"langchain_community.llms.koboldai" -> "logging" [];
	"langchain_community.llms.koboldai" -> "typing" [];
	"langchain_community.llms.koboldai" -> "requests" [];
	"langchain_community.llms.javelin_ai_gateway" -> "__future__" [];
	"langchain_community.llms.javelin_ai_gateway" -> "typing" [];
	"langchain_community.llms.javelin_ai_gateway" -> "pydantic" [];
	"langchain_community.llms.javelin_ai_gateway" -> "javelin_sdk" [];
	"langchain_community.llms.ipex_llm" -> "logging" [];
	"langchain_community.llms.ipex_llm" -> "typing" [];
	"langchain_community.llms.ipex_llm" -> "pydantic" [];
	"langchain_community.llms.ipex_llm" -> "ipex_llm" [];
	"langchain_community.llms.ipex_llm" -> "transformers" [];
	"langchain_community.llms.ipex_llm" -> "'transformers.generation'" [];
	"langchain_community.llms.ipex_llm" -> "'transformers.tools'" [];
	"langchain_community.llms.human" -> "typing" [];
	"langchain_community.llms.human" -> "pydantic" [];
	"langchain_community.llms.gradient_ai" -> "asyncio" [];
	"langchain_community.llms.gradient_ai" -> "logging" [];
	"langchain_community.llms.gradient_ai" -> "typing" [];
	"langchain_community.llms.gradient_ai" -> "aiohttp" [];
	"langchain_community.llms.gradient_ai" -> "requests" [];
	"langchain_community.llms.gradient_ai" -> "pydantic" [];
	"langchain_community.llms.gradient_ai" -> "typing_extensions" [];
	"langchain_community.llms.gradient_ai" -> "gradientai" [];
	"langchain_community.llms.gpt4all" -> "functools" [];
	"langchain_community.llms.gpt4all" -> "typing" [];
	"langchain_community.llms.gpt4all" -> "pydantic" [];
	"langchain_community.llms.gpt4all" -> "gpt4all" [];
	"langchain_community.llms.gooseai" -> "logging" [];
	"langchain_community.llms.gooseai" -> "typing" [];
	"langchain_community.llms.gooseai" -> "pydantic" [];
	"langchain_community.llms.gooseai" -> "openai" [];
	"langchain_community.llms.google_palm" -> "__future__" [];
	"langchain_community.llms.google_palm" -> "typing" [];
	"langchain_community.llms.google_palm" -> "pydantic" [];
	"langchain_community.llms.google_palm" -> "'google.generativeai'" [];
	"langchain_community.llms.forefrontai" -> "typing" [];
	"langchain_community.llms.forefrontai" -> "requests" [];
	"langchain_community.llms.forefrontai" -> "pydantic" [];
	"langchain_community.llms.fireworks" -> "asyncio" [];
	"langchain_community.llms.fireworks" -> "typing" [];
	"langchain_community.llms.fireworks" -> "pydantic" [];
	"langchain_community.llms.fireworks" -> "fireworks" [];
	"langchain_community.llms.fireworks" -> "'fireworks.client'" [];
	"langchain_community.llms.fake" -> "asyncio" [];
	"langchain_community.llms.fake" -> "time" [];
	"langchain_community.llms.fake" -> "typing" [];
	"langchain_community.llms.edenai" -> "logging" [];
	"langchain_community.llms.edenai" -> "typing" [];
	"langchain_community.llms.edenai" -> "aiohttp" [];
	"langchain_community.llms.edenai" -> "pydantic" [];
	"langchain_community.llms.edenai" -> "langchain_community" [];
	"langchain_community.llms.deepsparse" -> "typing" [];
	"langchain_community.llms.deepsparse" -> "pydantic" [];
	"langchain_community.llms.deepsparse" -> "deepsparse" [];
	"langchain_community.llms.deepinfra" -> "json" [];
	"langchain_community.llms.deepinfra" -> "typing" [];
	"langchain_community.llms.deepinfra" -> "aiohttp" [];
	"langchain_community.llms.deepinfra" -> "pydantic" [];
	"langchain_community.llms.databricks" -> "os" [];
	"langchain_community.llms.databricks" -> "re" [];
	"langchain_community.llms.databricks" -> "warnings" [];
	"langchain_community.llms.databricks" -> "abc" [];
	"langchain_community.llms.databricks" -> "typing" [];
	"langchain_community.llms.databricks" -> "requests" [];
	"langchain_community.llms.databricks" -> "pydantic" [];
	"langchain_community.llms.databricks" -> "mlflow" [];
	"langchain_community.llms.databricks" -> "'dbruntime.databricks_repl_context'" [];
	"langchain_community.llms.databricks" -> "cloudpickle" [];
	"langchain_community.llms.ctranslate2" -> "typing" [];
	"langchain_community.llms.ctranslate2" -> "pydantic" [];
	"langchain_community.llms.ctranslate2" -> "ctranslate2" [];
	"langchain_community.llms.ctranslate2" -> "transformers" [];
	"langchain_community.llms.ctransformers" -> "functools" [];
	"langchain_community.llms.ctransformers" -> "typing" [];
	"langchain_community.llms.ctransformers" -> "ctransformers" [];
	"langchain_community.llms.clarifai" -> "logging" [];
	"langchain_community.llms.clarifai" -> "typing" [];
	"langchain_community.llms.clarifai" -> "pydantic" [];
	"langchain_community.llms.clarifai" -> "clarifai" [];
	"langchain_community.llms.clarifai" -> "'clarifai.client'" [];
	"langchain_community.llms.chatglm" -> "logging" [];
	"langchain_community.llms.chatglm" -> "typing" [];
	"langchain_community.llms.chatglm" -> "requests" [];
	"langchain_community.llms.cerebriumai" -> "logging" [];
	"langchain_community.llms.cerebriumai" -> "typing" [];
	"langchain_community.llms.cerebriumai" -> "requests" [];
	"langchain_community.llms.cerebriumai" -> "pydantic" [];
	"langchain_community.llms.bittensor" -> "json" [];
	"langchain_community.llms.bittensor" -> "ssl" [];
	"langchain_community.llms.bittensor" -> "typing" [];
	"langchain_community.llms.bigdl_llm" -> "logging" [];
	"langchain_community.llms.bigdl_llm" -> "typing" [];
	"langchain_community.llms.bigdl_llm" -> "bigdl" [];
	"langchain_community.llms.bigdl_llm" -> "transformers" [];
	"langchain_community.llms.bigdl_llm" -> "'bigdl.llm'" [];
	"langchain_community.llms.beam" -> "base64" [];
	"langchain_community.llms.beam" -> "json" [];
	"langchain_community.llms.beam" -> "logging" [];
	"langchain_community.llms.beam" -> "subprocess" [];
	"langchain_community.llms.beam" -> "textwrap" [];
	"langchain_community.llms.beam" -> "time" [];
	"langchain_community.llms.beam" -> "typing" [];
	"langchain_community.llms.beam" -> "requests" [];
	"langchain_community.llms.beam" -> "pydantic" [];
	"langchain_community.llms.beam" -> "beam" [];
	"langchain_community.llms.baseten" -> "logging" [];
	"langchain_community.llms.baseten" -> "os" [];
	"langchain_community.llms.baseten" -> "typing" [];
	"langchain_community.llms.baseten" -> "requests" [];
	"langchain_community.llms.baseten" -> "pydantic" [];
	"langchain_community.llms.bananadev" -> "logging" [];
	"langchain_community.llms.bananadev" -> "typing" [];
	"langchain_community.llms.bananadev" -> "pydantic" [];
	"langchain_community.llms.bananadev" -> "banana_dev" [];
	"langchain_community.llms.baidu_qianfan_endpoint" -> "__future__" [];
	"langchain_community.llms.baidu_qianfan_endpoint" -> "logging" [];
	"langchain_community.llms.baidu_qianfan_endpoint" -> "typing" [];
	"langchain_community.llms.baidu_qianfan_endpoint" -> "pydantic" [];
	"langchain_community.llms.baidu_qianfan_endpoint" -> "qianfan" [];
	"langchain_community.llms.baichuan" -> "__future__" [];
	"langchain_community.llms.baichuan" -> "json" [];
	"langchain_community.llms.baichuan" -> "logging" [];
	"langchain_community.llms.baichuan" -> "typing" [];
	"langchain_community.llms.baichuan" -> "requests" [];
	"langchain_community.llms.baichuan" -> "pydantic" [];
	"langchain_community.llms.azureml_endpoint" -> "json" [];
	"langchain_community.llms.azureml_endpoint" -> "warnings" [];
	"langchain_community.llms.azureml_endpoint" -> "abc" [];
	"langchain_community.llms.azureml_endpoint" -> "enum" [];
	"langchain_community.llms.azureml_endpoint" -> "typing" [];
	"langchain_community.llms.azureml_endpoint" -> "pydantic" [];
	"langchain_community.llms.aviary" -> "dataclasses" [];
	"langchain_community.llms.aviary" -> "os" [];
	"langchain_community.llms.aviary" -> "typing" [];
	"langchain_community.llms.aviary" -> "requests" [];
	"langchain_community.llms.aviary" -> "pydantic" [];
	"langchain_community.llms.arcee" -> "typing" [];
	"langchain_community.llms.arcee" -> "pydantic" [];
	"langchain_community.llms.aphrodite" -> "typing" [];
	"langchain_community.llms.aphrodite" -> "pydantic" [];
	"langchain_community.llms.aphrodite" -> "aphrodite" [];
	"langchain_community.llms.anyscale" -> "typing" [];
	"langchain_community.llms.anyscale" -> "pydantic" [];
	"langchain_community.llms.anyscale" -> "openai" [];
	"langchain_community.llms.amazon_api_gateway" -> "typing" [];
	"langchain_community.llms.amazon_api_gateway" -> "requests" [];
	"langchain_community.llms.amazon_api_gateway" -> "pydantic" [];
	"langchain_community.llms.aleph_alpha" -> "typing" [];
	"langchain_community.llms.aleph_alpha" -> "pydantic" [];
	"langchain_community.llms.aleph_alpha" -> "aleph_alpha_client" [];
	"langchain_community.llms.ai21" -> "typing" [];
	"langchain_community.llms.ai21" -> "requests" [];
	"langchain_community.llms.ai21" -> "pydantic" [];
	"langchain_community.docstore" -> "importlib" [];
	"langchain_community.docstore" -> "typing" [];
	"langchain_community.docstore.wikipedia" -> "typing" [];
	"langchain_community.docstore.wikipedia" -> "wikipedia" [];
	"langchain_community.docstore.arbitrary_fn" -> "typing" [];
	"langchain.chains" -> "typing" [];
	"langchain.agents" -> "pathlib" [];
	"langchain.agents" -> "typing" [];
	"langchain_community.agent_toolkits.sql.base" -> "__future__" [];
	"langchain_community.agent_toolkits.sql.base" -> "typing" [];
	"langchain_community.agent_toolkits" -> "importlib" [];
	"langchain_community.agent_toolkits" -> "typing" [];
	"langchain_community.agent_toolkits.zapier.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.steam.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.spark_sql.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.spark_sql.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.slack.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.slack.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.slack.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.slack.toolkit" -> "slack_sdk" [];
	"langchain_community.agent_toolkits.powerbi.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.powerbi.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.powerbi.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.polygon.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.playwright.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.playwright.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.playwright.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.playwright.toolkit" -> "'playwright.async_api'" [];
	"langchain_community.agent_toolkits.playwright.toolkit" -> "'playwright.sync_api'" [];
	"langchain_community.agent_toolkits.openapi.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.openapi.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.office365.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.office365.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.office365.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.office365.toolkit" -> "O365" [];
	"langchain_community.agent_toolkits.nla.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.nla.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.nla.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.nla.tool" -> "__future__" [];
	"langchain_community.agent_toolkits.nla.tool" -> "typing" [];
	"langchain_community.chains.openapi.chain" -> "__future__" [];
	"langchain_community.chains.openapi.chain" -> "json" [];
	"langchain_community.chains.openapi.chain" -> "typing" [];
	"langchain_community.chains.openapi.chain" -> "pydantic" [];
	"langchain_community.chains.openapi.chain" -> "requests" [];
	"langchain_community.chains" -> "importlib" [];
	"langchain_community.chains" -> "typing" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "datetime" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "inspect" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "logging" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "typing" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "pydantic" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "json" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "logging" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "os" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "platform" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "enum" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "http" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "typing" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "aiohttp" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "pydantic" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "requests" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "socket" [];
	"langchain_community.chains.pebblo_retrieval.models" -> "typing" [];
	"langchain_community.chains.pebblo_retrieval.models" -> "pydantic" [];
	"langchain_community.chains.pebblo_retrieval.enforcement_filters" -> "logging" [];
	"langchain_community.chains.pebblo_retrieval.enforcement_filters" -> "typing" [];
	"langchain_community.chains.pebblo_retrieval.enforcement_filters" -> "qdrant_client" [];
	"langchain_community.chains.pebblo_retrieval.enforcement_filters" -> "'qdrant_client.http'" [];
	"langchain.chains.api.openapi.response_chain" -> "typing" [];
	"langchain_community.chains.openapi.response_chain" -> "json" [];
	"langchain_community.chains.openapi.response_chain" -> "re" [];
	"langchain_community.chains.openapi.response_chain" -> "typing" [];
	"langchain.chains.api.openapi.prompts" -> "typing" [];
	"langchain.chains.api.openapi.requests_chain" -> "typing" [];
	"langchain_community.chains.openapi.requests_chain" -> "json" [];
	"langchain_community.chains.openapi.requests_chain" -> "re" [];
	"langchain_community.chains.openapi.requests_chain" -> "typing" [];
	"langchain_community.agent_toolkits.nasa.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.multion.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.multion.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.multion.toolkit" -> "pydantic" [];
	"langchain_community.tools.multion.update_session" -> "typing" [];
	"langchain_community.tools.multion.update_session" -> "pydantic" [];
	"langchain_community.tools.multion.update_session" -> "multion" [];
	"langchain_community.tools.multion.create_session" -> "typing" [];
	"langchain_community.tools.multion.create_session" -> "pydantic" [];
	"langchain_community.tools.multion.create_session" -> "multion" [];
	"langchain_community.tools.multion.close_session" -> "typing" [];
	"langchain_community.tools.multion.close_session" -> "pydantic" [];
	"langchain_community.tools.multion.close_session" -> "multion" [];
	"langchain_community.agent_toolkits.json.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.json.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.jira.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.gmail.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.gmail.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.gmail.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.gmail.toolkit" -> "'googleapiclient.discovery'" [];
	"langchain_community.agent_toolkits.file_management.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.file_management.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.file_management.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.connery.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.connery.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.cogniswitch.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.cassandra_database.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.cassandra_database.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.azure_cognitive_services" -> "__future__" [];
	"langchain_community.agent_toolkits.azure_cognitive_services" -> "sys" [];
	"langchain_community.agent_toolkits.azure_cognitive_services" -> "typing" [];
	"langchain_community.agent_toolkits.azure_ai_services" -> "__future__" [];
	"langchain_community.agent_toolkits.azure_ai_services" -> "typing" [];
	"langchain_community.agent_toolkits.amadeus.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.amadeus.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.amadeus.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.amadeus.toolkit" -> "amadeus" [];
	"langchain_community.tools.amadeus.utils" -> "__future__" [];
	"langchain_community.tools.amadeus.utils" -> "logging" [];
	"langchain_community.tools.amadeus.utils" -> "os" [];
	"langchain_community.tools.amadeus.utils" -> "typing" [];
	"langchain_community.tools.amadeus.utils" -> "amadeus" [];
	"langchain_community.tools.amadeus.flight_search" -> "logging" [];
	"langchain_community.tools.amadeus.flight_search" -> "datetime" [];
	"langchain_community.tools.amadeus.flight_search" -> "typing" [];
	"langchain_community.tools.amadeus.flight_search" -> "pydantic" [];
	"langchain_community.tools.amadeus.flight_search" -> "amadeus" [];
	"langchain_community.tools.amadeus.base" -> "__future__" [];
	"langchain_community.tools.amadeus.base" -> "typing" [];
	"langchain_community.tools.amadeus.base" -> "pydantic" [];
	"langchain_community.tools.amadeus.base" -> "amadeus" [];
	"langchain_community.tools.amadeus.closest_airport" -> "typing" [];
	"langchain_community.tools.amadeus.closest_airport" -> "pydantic" [];
	"langchain_community.agent_toolkits.ainetwork.toolkit" -> "__future__" [];
	"langchain_community.agent_toolkits.ainetwork.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.ainetwork.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.ainetwork.toolkit" -> "'ain.ain'" [];
	"langchain_community.agent_toolkits.sql.toolkit" -> "typing" [];
	"langchain_community.agent_toolkits.sql.toolkit" -> "pydantic" [];
	"langchain_community.agent_toolkits.spark_sql.base" -> "__future__" [];
	"langchain_community.agent_toolkits.spark_sql.base" -> "typing" [];
	"langchain_community.agent_toolkits.powerbi.chat_base" -> "__future__" [];
	"langchain_community.agent_toolkits.powerbi.chat_base" -> "typing" [];
	"langchain.memory" -> "typing" [];
	"langchain_community.memory.zep_memory" -> "__future__" [];
	"langchain_community.memory.zep_memory" -> "typing" [];
	"langchain_community.memory.motorhead_memory" -> "typing" [];
	"langchain_community.memory.motorhead_memory" -> "requests" [];
	"langchain_community.memory.kg" -> "typing" [];
	"langchain_community.memory.kg" -> "pydantic" [];
	"langchain.memory.utils" -> "typing" [];
	"langchain_community.chat_message_histories" -> "importlib" [];
	"langchain_community.chat_message_histories" -> "typing" [];
	"langchain_community.chat_message_histories.zep_cloud" -> "__future__" [];
	"langchain_community.chat_message_histories.zep_cloud" -> "logging" [];
	"langchain_community.chat_message_histories.zep_cloud" -> "typing" [];
	"langchain_community.chat_message_histories.zep_cloud" -> "zep_cloud" [];
	"langchain_community.chat_message_histories.zep_cloud" -> "'zep_cloud.client'" [];
	"langchain_community.chat_message_histories.zep" -> "__future__" [];
	"langchain_community.chat_message_histories.zep" -> "logging" [];
	"langchain_community.chat_message_histories.zep" -> "enum" [];
	"langchain_community.chat_message_histories.zep" -> "typing" [];
	"langchain_community.chat_message_histories.zep" -> "zep_python" [];
	"langchain_community.chat_message_histories.xata" -> "json" [];
	"langchain_community.chat_message_histories.xata" -> "typing" [];
	"langchain_community.chat_message_histories.xata" -> "xata" [];
	"langchain_community.chat_message_histories.upstash_redis" -> "json" [];
	"langchain_community.chat_message_histories.upstash_redis" -> "logging" [];
	"langchain_community.chat_message_histories.upstash_redis" -> "typing" [];
	"langchain_community.chat_message_histories.upstash_redis" -> "upstash_redis" [];
	"langchain_community.chat_message_histories.tidb" -> "json" [];
	"langchain_community.chat_message_histories.tidb" -> "logging" [];
	"langchain_community.chat_message_histories.tidb" -> "datetime" [];
	"langchain_community.chat_message_histories.tidb" -> "typing" [];
	"langchain_community.chat_message_histories.tidb" -> "sqlalchemy" [];
	"langchain_community.chat_message_histories.streamlit" -> "typing" [];
	"langchain_community.chat_message_histories.streamlit" -> "streamlit" [];
	"streamlit" -> "os" [];
	"streamlit.components.v1" -> "streamlit" [];
	"streamlit.components.v1.component_registry" -> "__future__" [];
	"streamlit.components.v1.component_registry" -> "inspect" [];
	"streamlit.components.v1.component_registry" -> "os" [];
	"streamlit.components.v1.component_registry" -> "pathlib" [];
	"streamlit.components.v1.component_registry" -> "typing" [];
	"streamlit.components.v1.component_registry" -> "types" [];
	"streamlit.components.types.base_component_registry" -> "__future__" [];
	"streamlit.components.types.base_component_registry" -> "abc" [];
	"streamlit.components.types.base_component_registry" -> "typing" [];
	"streamlit.components.types.base_custom_component" -> "__future__" [];
	"streamlit.components.types.base_custom_component" -> "os" [];
	"streamlit.components.types.base_custom_component" -> "abc" [];
	"streamlit.components.types.base_custom_component" -> "typing" [];
	"streamlit.components.types.base_custom_component" -> "streamlit" [];
	"streamlit.runtime.state.common" -> "__future__" [];
	"streamlit.runtime.state.common" -> "dataclasses" [];
	"streamlit.runtime.state.common" -> "typing" [];
	"streamlit.runtime.state.common" -> "typing_extensions" [];
	"streamlit.runtime.state.common" -> "streamlit" [];
	"streamlit.runtime.scriptrunner_utils.script_run_context" -> "__future__" [];
	"streamlit.runtime.scriptrunner_utils.script_run_context" -> "collections" [];
	"streamlit.runtime.scriptrunner_utils.script_run_context" -> "contextlib" [];
	"streamlit.runtime.scriptrunner_utils.script_run_context" -> "contextvars" [];
	"streamlit.runtime.scriptrunner_utils.script_run_context" -> "threading" [];
	"streamlit.runtime.scriptrunner_utils.script_run_context" -> "dataclasses" [];
	"streamlit.runtime.scriptrunner_utils.script_run_context" -> "typing" [];
	"streamlit.runtime.scriptrunner_utils.script_run_context" -> "urllib" [];
	"streamlit.runtime.scriptrunner_utils.script_run_context" -> "typing_extensions" [];
	"streamlit.runtime.scriptrunner_utils.script_run_context" -> "pathlib" [];
	"streamlit.runtime.uploaded_file_manager" -> "__future__" [];
	"streamlit.runtime.uploaded_file_manager" -> "io" [];
	"streamlit.runtime.uploaded_file_manager" -> "abc" [];
	"streamlit.runtime.uploaded_file_manager" -> "typing" [];
	"streamlit.runtime.uploaded_file_manager" -> "streamlit" [];
	"streamlit.runtime.stats" -> "__future__" [];
	"streamlit.runtime.stats" -> "itertools" [];
	"streamlit.runtime.stats" -> "abc" [];
	"streamlit.runtime.stats" -> "typing" [];
	"streamlit.runtime.scriptrunner_utils.script_requests" -> "__future__" [];
	"streamlit.runtime.scriptrunner_utils.script_requests" -> "threading" [];
	"streamlit.runtime.scriptrunner_utils.script_requests" -> "dataclasses" [];
	"streamlit.runtime.scriptrunner_utils.script_requests" -> "enum" [];
	"streamlit.runtime.scriptrunner_utils.script_requests" -> "typing" [];
	"streamlit.runtime.scriptrunner_utils.script_requests" -> "streamlit" [];
	"streamlit.runtime.pages_manager" -> "__future__" [];
	"streamlit.runtime.pages_manager" -> "pathlib" [];
	"streamlit.runtime.pages_manager" -> "typing" [];
	"streamlit.source_util" -> "__future__" [];
	"streamlit.source_util" -> "re" [];
	"streamlit.source_util" -> "typing" [];
	"streamlit.source_util" -> "typing_extensions" [];
	"streamlit.source_util" -> "pathlib" [];
	"streamlit.source_util" -> "tokenize" [];
	"streamlit.string_util" -> "__future__" [];
	"streamlit.string_util" -> "re" [];
	"streamlit.string_util" -> "textwrap" [];
	"streamlit.string_util" -> "typing" [];
	"streamlit.emojis" -> "re" [];
	"streamlit.runtime.scriptrunner.script_cache" -> "__future__" [];
	"streamlit.runtime.scriptrunner.script_cache" -> "os.path" [];
	"streamlit.runtime.scriptrunner.script_cache" -> "threading" [];
	"streamlit.runtime.scriptrunner.script_cache" -> "typing" [];
	"streamlit.runtime.scriptrunner.script_cache" -> "streamlit" [];
	"streamlit.runtime.scriptrunner.magic" -> "__future__" [];
	"streamlit.runtime.scriptrunner.magic" -> "ast" [];
	"streamlit.runtime.scriptrunner.magic" -> "sys" [];
	"streamlit.runtime.scriptrunner.magic" -> "typing" [];
	"streamlit.runtime.scriptrunner.magic" -> "streamlit" [];
	"streamlit.runtime.scriptrunner.script_runner" -> "__future__" [];
	"streamlit.runtime.scriptrunner.script_runner" -> "gc" [];
	"streamlit.runtime.scriptrunner.script_runner" -> "sys" [];
	"streamlit.runtime.scriptrunner.script_runner" -> "threading" [];
	"streamlit.runtime.scriptrunner.script_runner" -> "types" [];
	"streamlit.runtime.scriptrunner.script_runner" -> "contextlib" [];
	"streamlit.runtime.scriptrunner.script_runner" -> "enum" [];
	"streamlit.runtime.scriptrunner.script_runner" -> "timeit" [];
	"streamlit.runtime.scriptrunner.script_runner" -> "typing" [];
	"streamlit.runtime.scriptrunner.script_runner" -> "blinker" [];
	"streamlit.runtime.scriptrunner.script_runner" -> "streamlit" [];
	"streamlit.runtime.scriptrunner.script_runner" -> "pathlib" [];
	"streamlit.runtime.scriptrunner.exec_code" -> "__future__" [];
	"streamlit.runtime.scriptrunner.exec_code" -> "sys" [];
	"streamlit.runtime.scriptrunner.exec_code" -> "typing" [];
	"streamlit.runtime.scriptrunner.exec_code" -> "streamlit" [];
	"streamlit.error_util" -> "__future__" [];
	"streamlit.error_util" -> "typing" [];
	"streamlit.error_util" -> "rich" [];
	"streamlit.elements.exception" -> "__future__" [];
	"streamlit.elements.exception" -> "os" [];
	"streamlit.elements.exception" -> "traceback" [];
	"streamlit.elements.exception" -> "typing" [];
	"streamlit.elements.exception" -> "streamlit" [];
	"streamlit.elements.lib.layout_utils" -> "typing" [];
	"streamlit.elements.lib.layout_utils" -> "typing_extensions" [];
	"blinker.base" -> "__future__" [];
	"blinker.base" -> "typing" [];
	"blinker.base" -> "collections" [];
	"blinker.base" -> "contextlib" [];
	"blinker.base" -> "inspect" [];
	"blinker.base" -> "warnings" [];
	"blinker.base" -> "weakref" [];
	"blinker.base" -> "typing_extensions" [];
	"blinker._utilities" -> "__future__" [];
	"blinker._utilities" -> "typing" [];
	"blinker._utilities" -> "weakref" [];
	"blinker._saferef" -> "operator" [];
	"blinker._saferef" -> "sys" [];
	"blinker._saferef" -> "traceback" [];
	"blinker._saferef" -> "weakref" [];
	"streamlit.runtime.forward_msg_cache" -> "__future__" [];
	"streamlit.runtime.forward_msg_cache" -> "typing" [];
	"streamlit.runtime.forward_msg_cache" -> "streamlit" [];
	"streamlit.runtime" -> "__future__" [];
	"streamlit.runtime.session_manager" -> "__future__" [];
	"streamlit.runtime.session_manager" -> "abc" [];
	"streamlit.runtime.session_manager" -> "dataclasses" [];
	"streamlit.runtime.session_manager" -> "typing" [];
	"streamlit.runtime.script_data" -> "__future__" [];
	"streamlit.runtime.script_data" -> "os" [];
	"streamlit.runtime.script_data" -> "dataclasses" [];
	"streamlit.runtime.app_session" -> "__future__" [];
	"streamlit.runtime.app_session" -> "asyncio" [];
	"streamlit.runtime.app_session" -> "json" [];
	"streamlit.runtime.app_session" -> "os" [];
	"streamlit.runtime.app_session" -> "sys" [];
	"streamlit.runtime.app_session" -> "uuid" [];
	"streamlit.runtime.app_session" -> "enum" [];
	"streamlit.runtime.app_session" -> "typing" [];
	"streamlit.runtime.app_session" -> "streamlit" [];
	"streamlit.git_util" -> "__future__" [];
	"streamlit.git_util" -> "os" [];
	"streamlit.git_util" -> "re" [];
	"streamlit.git_util" -> "typing" [];
	"streamlit.git_util" -> "git" [];
	"streamlit.watcher.path_watcher" -> "__future__" [];
	"streamlit.watcher.path_watcher" -> "os" [];
	"streamlit.watcher.path_watcher" -> "typing" [];
	"streamlit.watcher.path_watcher" -> "streamlit" [];
	"streamlit.watcher.path_watcher" -> "watchdog" [];
	"streamlit.watcher.event_based_path_watcher" -> "__future__" [];
	"streamlit.watcher.event_based_path_watcher" -> "os" [];
	"streamlit.watcher.event_based_path_watcher" -> "threading" [];
	"streamlit.watcher.event_based_path_watcher" -> "typing" [];
	"streamlit.watcher.event_based_path_watcher" -> "blinker" [];
	"streamlit.watcher.event_based_path_watcher" -> "typing_extensions" [];
	"streamlit.watcher.event_based_path_watcher" -> "watchdog" [];
	"streamlit.watcher.event_based_path_watcher" -> "'watchdog.observers'" [];
	"streamlit.watcher.polling_path_watcher" -> "__future__" [];
	"streamlit.watcher.polling_path_watcher" -> "time" [];
	"streamlit.watcher.polling_path_watcher" -> "typing" [];
	"streamlit.watcher.local_sources_watcher" -> "__future__" [];
	"streamlit.watcher.local_sources_watcher" -> "os" [];
	"streamlit.watcher.local_sources_watcher" -> "sys" [];
	"streamlit.watcher.local_sources_watcher" -> "pathlib" [];
	"streamlit.watcher.local_sources_watcher" -> "typing" [];
	"streamlit.watcher.local_sources_watcher" -> "streamlit" [];
	"streamlit.watcher.local_sources_watcher" -> "types" [];
	"streamlit.watcher.folder_black_list" -> "__future__" [];
	"streamlit.watcher.folder_black_list" -> "os" [];
	"streamlit.watcher.folder_black_list" -> "streamlit" [];
	"streamlit.watcher.util" -> "__future__" [];
	"streamlit.watcher.util" -> "os" [];
	"streamlit.watcher.util" -> "time" [];
	"streamlit.watcher.util" -> "pathlib" [];
	"streamlit.watcher.util" -> "typing" [];
	"streamlit.runtime.forward_msg_queue" -> "__future__" [];
	"streamlit.runtime.forward_msg_queue" -> "typing" [];
	"streamlit.runtime.runtime" -> "__future__" [];
	"streamlit.runtime.runtime" -> "asyncio" [];
	"streamlit.runtime.runtime" -> "time" [];
	"streamlit.runtime.runtime" -> "traceback" [];
	"streamlit.runtime.runtime" -> "dataclasses" [];
	"streamlit.runtime.runtime" -> "enum" [];
	"streamlit.runtime.runtime" -> "typing" [];
	"streamlit.runtime.media_file_storage" -> "__future__" [];
	"streamlit.runtime.media_file_storage" -> "abc" [];
	"streamlit.runtime.media_file_storage" -> "enum" [];
	"streamlit.runtime.media_file_storage" -> "typing" [];
	"streamlit.runtime.caching.storage.cache_storage_protocol" -> "__future__" [];
	"streamlit.runtime.caching.storage.cache_storage_protocol" -> "abc" [];
	"streamlit.runtime.caching.storage.cache_storage_protocol" -> "dataclasses" [];
	"streamlit.runtime.caching.storage.cache_storage_protocol" -> "typing" [];
	"streamlit.runtime.websocket_session_manager" -> "__future__" [];
	"streamlit.runtime.websocket_session_manager" -> "typing" [];
	"streamlit.runtime.memory_session_storage" -> "__future__" [];
	"streamlit.runtime.memory_session_storage" -> "typing" [];
	"streamlit.runtime.memory_session_storage" -> "cachetools" [];
	"streamlit.runtime.media_file_manager" -> "__future__" [];
	"streamlit.runtime.media_file_manager" -> "collections" [];
	"streamlit.runtime.media_file_manager" -> "threading" [];
	"streamlit.runtime.media_file_manager" -> "typing" [];
	"streamlit.runtime.caching.storage.local_disk_cache_storage" -> "__future__" [];
	"streamlit.runtime.caching.storage.local_disk_cache_storage" -> "math" [];
	"streamlit.runtime.caching.storage.local_disk_cache_storage" -> "os" [];
	"streamlit.runtime.caching.storage.local_disk_cache_storage" -> "shutil" [];
	"streamlit.runtime.caching.storage.local_disk_cache_storage" -> "typing" [];
	"streamlit.runtime.caching.storage.local_disk_cache_storage" -> "streamlit" [];
	"streamlit.runtime.caching.storage.in_memory_cache_storage_wrapper" -> "__future__" [];
	"streamlit.runtime.caching.storage.in_memory_cache_storage_wrapper" -> "math" [];
	"streamlit.runtime.caching.storage.in_memory_cache_storage_wrapper" -> "threading" [];
	"streamlit.runtime.caching.storage.in_memory_cache_storage_wrapper" -> "cachetools" [];
	"streamlit.runtime.caching.cache_utils" -> "__future__" [];
	"streamlit.runtime.caching.cache_utils" -> "contextlib" [];
	"streamlit.runtime.caching.cache_utils" -> "functools" [];
	"streamlit.runtime.caching.cache_utils" -> "hashlib" [];
	"streamlit.runtime.caching.cache_utils" -> "inspect" [];
	"streamlit.runtime.caching.cache_utils" -> "threading" [];
	"streamlit.runtime.caching.cache_utils" -> "time" [];
	"streamlit.runtime.caching.cache_utils" -> "abc" [];
	"streamlit.runtime.caching.cache_utils" -> "collections" [];
	"streamlit.runtime.caching.cache_utils" -> "typing" [];
	"streamlit.runtime.caching.cache_utils" -> "streamlit" [];
	"streamlit.runtime.caching.cache_utils" -> "types" [];
	"streamlit.runtime.caching.cache_type" -> "__future__" [];
	"streamlit.runtime.caching.cache_type" -> "enum" [];
	"streamlit.runtime.caching.hashing" -> "__future__" [];
	"streamlit.runtime.caching.hashing" -> "collections" [];
	"streamlit.runtime.caching.hashing" -> "dataclasses" [];
	"streamlit.runtime.caching.hashing" -> "datetime" [];
	"streamlit.runtime.caching.hashing" -> "functools" [];
	"streamlit.runtime.caching.hashing" -> "hashlib" [];
	"streamlit.runtime.caching.hashing" -> "inspect" [];
	"streamlit.runtime.caching.hashing" -> "io" [];
	"streamlit.runtime.caching.hashing" -> "os" [];
	"streamlit.runtime.caching.hashing" -> "pickle" [];
	"streamlit.runtime.caching.hashing" -> "sys" [];
	"streamlit.runtime.caching.hashing" -> "tempfile" [];
	"streamlit.runtime.caching.hashing" -> "threading" [];
	"streamlit.runtime.caching.hashing" -> "uuid" [];
	"streamlit.runtime.caching.hashing" -> "weakref" [];
	"streamlit.runtime.caching.hashing" -> "enum" [];
	"streamlit.runtime.caching.hashing" -> "re" [];
	"streamlit.runtime.caching.hashing" -> "types" [];
	"streamlit.runtime.caching.hashing" -> "typing" [];
	"streamlit.runtime.caching.hashing" -> "typing_extensions" [];
	"streamlit.runtime.caching.hashing" -> "streamlit" [];
	"streamlit.runtime.caching.hashing" -> "struct" [];
	"streamlit.runtime.caching.hashing" -> "pandas" [];
	"streamlit.runtime.caching.hashing" -> "polars" [];
	"streamlit.runtime.caching.hashing" -> "numpy" [];
	"streamlit.runtime.caching.cached_message_replay" -> "__future__" [];
	"streamlit.runtime.caching.cached_message_replay" -> "contextlib" [];
	"streamlit.runtime.caching.cached_message_replay" -> "threading" [];
	"streamlit.runtime.caching.cached_message_replay" -> "dataclasses" [];
	"streamlit.runtime.caching.cached_message_replay" -> "typing" [];
	"streamlit.runtime.caching.cached_message_replay" -> "streamlit" [];
	"streamlit.runtime.caching.cached_message_replay" -> "types" [];
	"streamlit.runtime.caching.cache_errors" -> "__future__" [];
	"streamlit.runtime.caching.cache_errors" -> "typing" [];
	"streamlit.runtime.caching.cache_errors" -> "streamlit" [];
	"streamlit.runtime.caching.cache_errors" -> "types" [];
	"streamlit.dataframe_util" -> "__future__" [];
	"streamlit.dataframe_util" -> "contextlib" [];
	"streamlit.dataframe_util" -> "dataclasses" [];
	"streamlit.dataframe_util" -> "inspect" [];
	"streamlit.dataframe_util" -> "math" [];
	"streamlit.dataframe_util" -> "re" [];
	"streamlit.dataframe_util" -> "collections" [];
	"streamlit.dataframe_util" -> "enum" [];
	"streamlit.dataframe_util" -> "types" [];
	"streamlit.dataframe_util" -> "typing" [];
	"streamlit.dataframe_util" -> "typing_extensions" [];
	"streamlit.dataframe_util" -> "numpy" [];
	"streamlit.dataframe_util" -> "pyarrow" [];
	"streamlit.dataframe_util" -> "pandas" [];
	"streamlit.dataframe_util" -> "array" [];
	"streamlit.dataframe_util" -> "polars" [];
	"streamlit.dataframe_util" -> "xarray" [];
	"streamlit.components.lib.local_component_registry" -> "__future__" [];
	"streamlit.components.lib.local_component_registry" -> "os" [];
	"streamlit.components.lib.local_component_registry" -> "threading" [];
	"streamlit.components.lib.local_component_registry" -> "typing" [];
	"streamlit.components.lib.local_component_registry" -> "streamlit" [];
	"streamlit.components.v1.custom_component" -> "__future__" [];
	"streamlit.components.v1.custom_component" -> "json" [];
	"streamlit.components.v1.custom_component" -> "typing" [];
	"streamlit.components.v1.custom_component" -> "pyarrow" [];
	"streamlit.elements.lib.utils" -> "__future__" [];
	"streamlit.elements.lib.utils" -> "hashlib" [];
	"streamlit.elements.lib.utils" -> "datetime" [];
	"streamlit.elements.lib.utils" -> "typing" [];
	"streamlit.elements.lib.utils" -> "typing_extensions" [];
	"streamlit.elements.lib.utils" -> "streamlit" [];
	"streamlit.elements.lib.utils" -> "builtins" [];
	"streamlit.elements.lib.policies" -> "__future__" [];
	"streamlit.elements.lib.policies" -> "typing" [];
	"streamlit.elements.lib.policies" -> "streamlit" [];
	"streamlit.elements.lib.form_utils" -> "__future__" [];
	"streamlit.elements.lib.form_utils" -> "typing" [];
	"streamlit.elements.lib.form_utils" -> "streamlit" [];
	"streamlit.components.v1.component_arrow" -> "__future__" [];
	"streamlit.components.v1.component_arrow" -> "typing" [];
	"streamlit.components.v1.component_arrow" -> "streamlit" [];
	"streamlit.components.v1.component_arrow" -> "pandas" [];
	"streamlit.elements.lib.pandas_styler_utils" -> "__future__" [];
	"streamlit.elements.lib.pandas_styler_utils" -> "typing" [];
	"streamlit.elements.lib.pandas_styler_utils" -> "streamlit" [];
	"streamlit.elements.lib.pandas_styler_utils" -> "pandas" [];
	"streamlit.elements.lib.pandas_styler_utils" -> "re" [];
	"streamlit.commands.execution_control" -> "__future__" [];
	"streamlit.commands.execution_control" -> "os" [];
	"streamlit.commands.execution_control" -> "itertools" [];
	"streamlit.commands.execution_control" -> "pathlib" [];
	"streamlit.commands.execution_control" -> "typing" [];
	"streamlit.commands.execution_control" -> "streamlit" [];
	"streamlit.commands.page_config" -> "__future__" [];
	"streamlit.commands.page_config" -> "random" [];
	"streamlit.commands.page_config" -> "pathlib" [];
	"streamlit.commands.page_config" -> "textwrap" [];
	"streamlit.commands.page_config" -> "typing" [];
	"streamlit.commands.page_config" -> "typing_extensions" [];
	"streamlit.elements.lib.image_utils" -> "__future__" [];
	"streamlit.elements.lib.image_utils" -> "io" [];
	"streamlit.elements.lib.image_utils" -> "os" [];
	"streamlit.elements.lib.image_utils" -> "re" [];
	"streamlit.elements.lib.image_utils" -> "enum" [];
	"streamlit.elements.lib.image_utils" -> "pathlib" [];
	"streamlit.elements.lib.image_utils" -> "typing" [];
	"streamlit.elements.lib.image_utils" -> "typing_extensions" [];
	"streamlit.elements.lib.image_utils" -> "streamlit" [];
	"streamlit.elements.lib.image_utils" -> "PIL" [];
	"streamlit.elements.lib.image_utils" -> "numpy" [];
	"streamlit.elements.lib.image_utils" -> "base64" [];
	"streamlit.elements.lib.image_utils" -> "mimetypes" [];
	"PIL.GifImagePlugin" -> "__future__" [];
	"PIL.GifImagePlugin" -> "itertools" [];
	"PIL.GifImagePlugin" -> "math" [];
	"PIL.GifImagePlugin" -> "os" [];
	"PIL.GifImagePlugin" -> "subprocess" [];
	"PIL.GifImagePlugin" -> "enum" [];
	"PIL.GifImagePlugin" -> "functools" [];
	"PIL.GifImagePlugin" -> "typing" [];
	"PIL.GifImagePlugin" -> "copy" [];
	"PIL.GifImagePlugin" -> "io" [];
	"PIL.ImageMath" -> "__future__" [];
	"PIL.ImageMath" -> "builtins" [];
	"PIL.ImageMath" -> "types" [];
	"PIL.ImageMath" -> "typing" [];
	"PIL._imagingmath" -> "typing" [];
	"PIL.ImageChops" -> "__future__" [];
	"streamlit.elements.spinner" -> "__future__" [];
	"streamlit.elements.spinner" -> "contextlib" [];
	"streamlit.elements.spinner" -> "threading" [];
	"streamlit.elements.spinner" -> "typing" [];
	"streamlit.elements.spinner" -> "streamlit" [];
	"streamlit.navigation.page" -> "__future__" [];
	"streamlit.navigation.page" -> "types" [];
	"streamlit.navigation.page" -> "pathlib" [];
	"streamlit.navigation.page" -> "typing" [];
	"streamlit.commands.navigation" -> "__future__" [];
	"streamlit.commands.navigation" -> "pathlib" [];
	"streamlit.commands.navigation" -> "typing" [];
	"streamlit.commands.navigation" -> "typing_extensions" [];
	"streamlit.commands.navigation" -> "streamlit" [];
	"streamlit.commands.logo" -> "__future__" [];
	"streamlit.commands.logo" -> "typing" [];
	"streamlit.commands.logo" -> "streamlit" [];
	"streamlit.commands.echo" -> "__future__" [];
	"streamlit.commands.echo" -> "ast" [];
	"streamlit.commands.echo" -> "contextlib" [];
	"streamlit.commands.echo" -> "re" [];
	"streamlit.commands.echo" -> "textwrap" [];
	"streamlit.commands.echo" -> "traceback" [];
	"streamlit.commands.echo" -> "typing" [];
	"streamlit.commands.echo" -> "streamlit" [];
	"streamlit.column_config" -> "__future__" [];
	"streamlit.elements.lib.column_types" -> "__future__" [];
	"streamlit.elements.lib.column_types" -> "datetime" [];
	"streamlit.elements.lib.column_types" -> "typing" [];
	"streamlit.elements.lib.column_types" -> "typing_extensions" [];
	"streamlit.commands.experimental_query_params" -> "__future__" [];
	"streamlit.commands.experimental_query_params" -> "typing" [];
	"streamlit.runtime.state.query_params" -> "__future__" [];
	"streamlit.runtime.state.query_params" -> "dataclasses" [];
	"streamlit.runtime.state.query_params" -> "typing" [];
	"streamlit.runtime.state.query_params" -> "urllib" [];
	"streamlit.runtime.state.query_params" -> "_typeshed" [];
	"streamlit.user_info" -> "__future__" [];
	"streamlit.user_info" -> "typing" [];
	"streamlit.auth_util" -> "__future__" [];
	"streamlit.auth_util" -> "datetime" [];
	"streamlit.auth_util" -> "typing" [];
	"streamlit.auth_util" -> "authlib" [];
	"streamlit.auth_util" -> "'authlib.jose'" [];
	"streamlit.runtime.state.widgets" -> "__future__" [];
	"streamlit.runtime.state.widgets" -> "typing" [];
	"streamlit.runtime.state.session_state_proxy" -> "__future__" [];
	"streamlit.runtime.state.session_state_proxy" -> "typing" [];
	"streamlit.runtime.state.session_state_proxy" -> "streamlit" [];
	"streamlit.runtime.state.session_state" -> "__future__" [];
	"streamlit.runtime.state.session_state" -> "json" [];
	"streamlit.runtime.state.session_state" -> "pickle" [];
	"streamlit.runtime.state.session_state" -> "copy" [];
	"streamlit.runtime.state.session_state" -> "dataclasses" [];
	"streamlit.runtime.state.session_state" -> "typing" [];
	"streamlit.runtime.state.session_state" -> "typing_extensions" [];
	"streamlit.runtime.state.session_state" -> "streamlit" [];
	"streamlit.vendor.pympler.asizeof" -> "sys" [];
	"streamlit.vendor.pympler.asizeof" -> "types" [];
	"streamlit.vendor.pympler.asizeof" -> "warnings" [];
	"streamlit.vendor.pympler.asizeof" -> "weakref" [];
	"streamlit.vendor.pympler.asizeof" -> "inspect" [];
	"streamlit.vendor.pympler.asizeof" -> "math" [];
	"streamlit.vendor.pympler.asizeof" -> "os" [];
	"streamlit.vendor.pympler.asizeof" -> "struct" [];
	"streamlit.vendor.pympler.asizeof" -> "_testcapi" [];
	"streamlit.vendor.pympler.asizeof" -> "gc" [];
	"streamlit.vendor.pympler.asizeof" -> "array" [];
	"streamlit.vendor.pympler.asizeof" -> "numpy" [];
	"streamlit.vendor.pympler.asizeof" -> "mmap" [];
	"streamlit.vendor.pympler.asizeof" -> "re" [];
	"streamlit.runtime.state.safe_session_state" -> "__future__" [];
	"streamlit.runtime.state.safe_session_state" -> "threading" [];
	"streamlit.runtime.state.safe_session_state" -> "contextlib" [];
	"streamlit.runtime.state.safe_session_state" -> "typing" [];
	"streamlit.runtime.state.query_params_proxy" -> "__future__" [];
	"streamlit.runtime.state.query_params_proxy" -> "typing" [];
	"streamlit.runtime.state.query_params_proxy" -> "_typeshed" [];
	"streamlit.runtime.context" -> "__future__" [];
	"streamlit.runtime.context" -> "functools" [];
	"streamlit.runtime.context" -> "types" [];
	"streamlit.runtime.context" -> "typing" [];
	"streamlit.runtime.context" -> "streamlit" [];
	"tornado.web" -> "base64" [];
	"tornado.web" -> "binascii" [];
	"tornado.web" -> "datetime" [];
	"tornado.web" -> "functools" [];
	"tornado.web" -> "gzip" [];
	"tornado.web" -> "hashlib" [];
	"tornado.web" -> "hmac" [];
	"tornado.web" -> "inspect" [];
	"tornado.web" -> "io" [];
	"tornado.web" -> "mimetypes" [];
	"tornado.web" -> "numbers" [];
	"tornado.web" -> "os.path" [];
	"tornado.web" -> "re" [];
	"tornado.web" -> "socket" [];
	"tornado.web" -> "sys" [];
	"tornado.web" -> "threading" [];
	"tornado.web" -> "time" [];
	"tornado.web" -> "warnings" [];
	"tornado.web" -> "traceback" [];
	"tornado.web" -> "types" [];
	"tornado.web" -> "typing" [];
	"tornado.routing" -> "re" [];
	"tornado.routing" -> "functools" [];
	"tornado.routing" -> "typing" [];
	"tornado.httpserver" -> "socket" [];
	"tornado.httpserver" -> "ssl" [];
	"tornado.httpserver" -> "typing" [];
	"tornado.tcpserver" -> "errno" [];
	"tornado.tcpserver" -> "os" [];
	"tornado.tcpserver" -> "socket" [];
	"tornado.tcpserver" -> "ssl" [];
	"tornado.tcpserver" -> "typing" [];
	"tornado.http1connection" -> "asyncio" [];
	"tornado.http1connection" -> "logging" [];
	"tornado.http1connection" -> "re" [];
	"tornado.http1connection" -> "types" [];
	"tornado.http1connection" -> "typing" [];
	"tornado.httputil" -> "calendar" [];
	"tornado.httputil" -> "copy" [];
	"tornado.httputil" -> "datetime" [];
	"tornado.httputil" -> "functools" [];
	"tornado.httputil" -> "re" [];
	"tornado.httputil" -> "ssl" [];
	"tornado.httputil" -> "time" [];
	"tornado.httputil" -> "unicodedata" [];
	"tornado.httputil" -> "typing" [];
	"tornado.httputil" -> "asyncio" [];
	"tornado.httputil" -> "unittest" [];
	"tornado.httputil" -> "doctest" [];
	"streamlit.runtime.context_util" -> "__future__" [];
	"streamlit.runtime.context_util" -> "typing" [];
	"streamlit.runtime.secrets" -> "__future__" [];
	"streamlit.runtime.secrets" -> "os" [];
	"streamlit.runtime.secrets" -> "threading" [];
	"streamlit.runtime.secrets" -> "copy" [];
	"streamlit.runtime.secrets" -> "typing" [];
	"streamlit.runtime.secrets" -> "blinker" [];
	"streamlit.runtime.secrets" -> "streamlit" [];
	"streamlit.runtime.secrets" -> "toml" [];
	"streamlit.runtime.metrics_util" -> "__future__" [];
	"streamlit.runtime.metrics_util" -> "contextlib" [];
	"streamlit.runtime.metrics_util" -> "inspect" [];
	"streamlit.runtime.metrics_util" -> "os" [];
	"streamlit.runtime.metrics_util" -> "sys" [];
	"streamlit.runtime.metrics_util" -> "threading" [];
	"streamlit.runtime.metrics_util" -> "time" [];
	"streamlit.runtime.metrics_util" -> "uuid" [];
	"streamlit.runtime.metrics_util" -> "functools" [];
	"streamlit.runtime.metrics_util" -> "typing" [];
	"streamlit.runtime.metrics_util" -> "streamlit" [];
	"streamlit.runtime.metrics_util" -> "timeit" [];
	"streamlit.runtime.fragment" -> "__future__" [];
	"streamlit.runtime.fragment" -> "contextlib" [];
	"streamlit.runtime.fragment" -> "inspect" [];
	"streamlit.runtime.fragment" -> "abc" [];
	"streamlit.runtime.fragment" -> "copy" [];
	"streamlit.runtime.fragment" -> "functools" [];
	"streamlit.runtime.fragment" -> "typing" [];
	"streamlit.runtime.fragment" -> "datetime" [];
	"streamlit.runtime.fragment" -> "streamlit" [];
	"streamlit.time_util" -> "__future__" [];
	"streamlit.time_util" -> "math" [];
	"streamlit.time_util" -> "datetime" [];
	"streamlit.time_util" -> "typing" [];
	"streamlit.time_util" -> "numpy" [];
	"streamlit.time_util" -> "pandas" [];
	"streamlit.runtime.connection_factory" -> "__future__" [];
	"streamlit.runtime.connection_factory" -> "os" [];
	"streamlit.runtime.connection_factory" -> "re" [];
	"streamlit.runtime.connection_factory" -> "typing" [];
	"streamlit.runtime.connection_factory" -> "datetime" [];
	"streamlit.runtime.connection_factory" -> "importlib" [];
	"streamlit.connections.sql_connection" -> "__future__" [];
	"streamlit.connections.sql_connection" -> "collections" [];
	"streamlit.connections.sql_connection" -> "copy" [];
	"streamlit.connections.sql_connection" -> "typing" [];
	"streamlit.connections.sql_connection" -> "datetime" [];
	"streamlit.connections.sql_connection" -> "pandas" [];
	"streamlit.connections.sql_connection" -> "sqlalchemy" [];
	"streamlit.connections.sql_connection" -> "tenacity" [];
	"streamlit.connections.util" -> "__future__" [];
	"streamlit.connections.util" -> "os" [];
	"streamlit.connections.util" -> "typing" [];
	"streamlit.connections.util" -> "configparser" [];
	"streamlit.connections.util" -> "'snowflake.snowpark'" [];
	"streamlit.connections.snowpark_connection" -> "__future__" [];
	"streamlit.connections.snowpark_connection" -> "threading" [];
	"streamlit.connections.snowpark_connection" -> "collections" [];
	"streamlit.connections.snowpark_connection" -> "contextlib" [];
	"streamlit.connections.snowpark_connection" -> "typing" [];
	"streamlit.connections.snowpark_connection" -> "datetime" [];
	"streamlit.connections.snowpark_connection" -> "pandas" [];
	"streamlit.connections.snowpark_connection" -> "'snowflake.snowpark'" [];
	"streamlit.connections.snowpark_connection" -> "tenacity" [];
	"streamlit.connections.snowflake_connection" -> "__future__" [];
	"streamlit.connections.snowflake_connection" -> "typing" [];
	"streamlit.connections.snowflake_connection" -> "streamlit" [];
	"streamlit.connections.snowflake_connection" -> "datetime" [];
	"streamlit.connections.snowflake_connection" -> "pandas" [];
	"streamlit.connections.snowflake_connection" -> "'snowflake.connector'" [];
	"streamlit.connections.snowflake_connection" -> "'snowflake.snowpark'" [];
	"streamlit.connections.snowflake_connection" -> "tenacity" [];
	"streamlit.connections.base_connection" -> "__future__" [];
	"streamlit.connections.base_connection" -> "json" [];
	"streamlit.connections.base_connection" -> "abc" [];
	"streamlit.connections.base_connection" -> "typing" [];
	"streamlit.runtime.caching" -> "__future__" [];
	"streamlit.runtime.caching" -> "typing" [];
	"streamlit.runtime.caching.legacy_cache_api" -> "__future__" [];
	"streamlit.runtime.caching.legacy_cache_api" -> "typing" [];
	"streamlit.runtime.caching.legacy_cache_api" -> "streamlit" [];
	"streamlit.runtime.caching.cache_resource_api" -> "__future__" [];
	"streamlit.runtime.caching.cache_resource_api" -> "math" [];
	"streamlit.runtime.caching.cache_resource_api" -> "threading" [];
	"streamlit.runtime.caching.cache_resource_api" -> "typing" [];
	"streamlit.runtime.caching.cache_resource_api" -> "cachetools" [];
	"streamlit.runtime.caching.cache_resource_api" -> "typing_extensions" [];
	"streamlit.runtime.caching.cache_resource_api" -> "streamlit" [];
	"streamlit.runtime.caching.cache_resource_api" -> "types" [];
	"streamlit.runtime.caching.cache_resource_api" -> "datetime" [];
	"streamlit.runtime.caching.cache_data_api" -> "__future__" [];
	"streamlit.runtime.caching.cache_data_api" -> "pickle" [];
	"streamlit.runtime.caching.cache_data_api" -> "threading" [];
	"streamlit.runtime.caching.cache_data_api" -> "typing" [];
	"streamlit.runtime.caching.cache_data_api" -> "typing_extensions" [];
	"streamlit.runtime.caching.cache_data_api" -> "streamlit" [];
	"streamlit.runtime.caching.cache_data_api" -> "types" [];
	"streamlit.runtime.caching.cache_data_api" -> "datetime" [];
	"streamlit.runtime.caching.storage.dummy_cache_storage" -> "__future__" [];
	"streamlit.elements.dialog_decorator" -> "__future__" [];
	"streamlit.elements.dialog_decorator" -> "functools" [];
	"streamlit.elements.dialog_decorator" -> "typing" [];
	"streamlit.elements.lib.dialog" -> "__future__" [];
	"streamlit.elements.lib.dialog" -> "typing" [];
	"streamlit.elements.lib.dialog" -> "typing_extensions" [];
	"streamlit.elements.lib.dialog" -> "types" [];
	"streamlit.elements.lib.mutable_status_container" -> "__future__" [];
	"streamlit.elements.lib.mutable_status_container" -> "time" [];
	"streamlit.elements.lib.mutable_status_container" -> "typing" [];
	"streamlit.elements.lib.mutable_status_container" -> "typing_extensions" [];
	"streamlit.elements.lib.mutable_status_container" -> "types" [];
	"streamlit.delta_generator" -> "__future__" [];
	"streamlit.delta_generator" -> "sys" [];
	"streamlit.delta_generator" -> "copy" [];
	"streamlit.delta_generator" -> "typing" [];
	"streamlit.delta_generator" -> "typing_extensions" [];
	"streamlit.elements.lib.built_in_chart_utils" -> "__future__" [];
	"streamlit.elements.lib.built_in_chart_utils" -> "dataclasses" [];
	"streamlit.elements.lib.built_in_chart_utils" -> "datetime" [];
	"streamlit.elements.lib.built_in_chart_utils" -> "enum" [];
	"streamlit.elements.lib.built_in_chart_utils" -> "typing" [];
	"streamlit.elements.lib.built_in_chart_utils" -> "typing_extensions" [];
	"streamlit.elements.lib.built_in_chart_utils" -> "streamlit" [];
	"streamlit.elements.lib.built_in_chart_utils" -> "altair" [];
	"streamlit.elements.lib.built_in_chart_utils" -> "pandas" [];
	"altair.utils.deprecation" -> "__future__" [];
	"altair.utils.deprecation" -> "sys" [];
	"altair.utils.deprecation" -> "threading" [];
	"altair.utils.deprecation" -> "warnings" [];
	"altair.utils.deprecation" -> "typing" [];
	"altair.utils.deprecation" -> "typing_extensions" [];
	"altair._magics" -> "__future__" [];
	"altair._magics" -> "json" [];
	"altair._magics" -> "warnings" [];
	"altair._magics" -> "typing" [];
	"altair._magics" -> "yaml" [];
	"altair.vegalite.v5.display" -> "__future__" [];
	"altair.vegalite.v5.display" -> "pathlib" [];
	"altair.vegalite.v5.display" -> "typing" [];
	"altair.vegalite.v5.display" -> "altair" [];
	"altair.utils._show" -> "__future__" [];
	"altair.utils._show" -> "webbrowser" [];
	"altair.utils._show" -> "typing" [];
	"altair.utils.display" -> "__future__" [];
	"altair.utils.display" -> "json" [];
	"altair.utils.display" -> "pkgutil" [];
	"altair.utils.display" -> "textwrap" [];
	"altair.utils.display" -> "uuid" [];
	"altair.utils.display" -> "typing" [];
	"altair.utils.display" -> "sys" [];
	"altair.utils.display" -> "typing_extensions" [];
	"altair.utils.schemapi" -> "__future__" [];
	"altair.utils.schemapi" -> "contextlib" [];
	"altair.utils.schemapi" -> "copy" [];
	"altair.utils.schemapi" -> "datetime" [];
	"altair.utils.schemapi" -> "inspect" [];
	"altair.utils.schemapi" -> "json" [];
	"altair.utils.schemapi" -> "sys" [];
	"altair.utils.schemapi" -> "textwrap" [];
	"altair.utils.schemapi" -> "collections" [];
	"altair.utils.schemapi" -> "functools" [];
	"altair.utils.schemapi" -> "itertools" [];
	"altair.utils.schemapi" -> "math" [];
	"altair.utils.schemapi" -> "typing" [];
	"altair.utils.schemapi" -> "typing_extensions" [];
	"altair.utils.schemapi" -> "jsonschema" [];
	"altair.utils.schemapi" -> "altair" [];
	"altair.utils.schemapi" -> "types" [];
	"altair.utils.schemapi" -> "referencing" [];
	"narwhals.stable.v1" -> "__future__" [];
	"narwhals.stable.v1" -> "functools" [];
	"narwhals.stable.v1" -> "typing" [];
	"narwhals.stable.v1" -> "warnings" [];
	"narwhals.stable.v1" -> "narwhals" [];
	"narwhals.stable.v1" -> "types" [];
	"narwhals.stable.v1" -> "typing_extensions" [];
	"narwhals.dtypes" -> "__future__" [];
	"narwhals.dtypes" -> "enum" [];
	"narwhals.dtypes" -> "collections" [];
	"narwhals.dtypes" -> "datetime" [];
	"narwhals.dtypes" -> "itertools" [];
	"narwhals.dtypes" -> "typing" [];
	"narwhals.dtypes" -> "typing_extensions" [];
	"narwhals._translate" -> "__future__" [];
	"narwhals._translate" -> "typing" [];
	"narwhals._translate" -> "pyarrow" [];
	"narwhals._translate" -> "typing_extensions" [];
	"narwhals._translate" -> "sys" [];
	"narwhals.utils" -> "__future__" [];
	"narwhals.utils" -> "os" [];
	"narwhals.utils" -> "re" [];
	"narwhals.utils" -> "datetime" [];
	"narwhals.utils" -> "enum" [];
	"narwhals.utils" -> "functools" [];
	"narwhals.utils" -> "inspect" [];
	"narwhals.utils" -> "secrets" [];
	"narwhals.utils" -> "typing" [];
	"narwhals.utils" -> "warnings" [];
	"narwhals.utils" -> "types" [];
	"narwhals.utils" -> "pandas" [];
	"narwhals.utils" -> "pyarrow" [];
	"narwhals.utils" -> "typing_extensions" [];
	"narwhals.utils" -> "'modin.pandas'" [];
	"narwhals.utils" -> "cudf" [];
	"narwhals.utils" -> "'pyspark.sql'" [];
	"narwhals.utils" -> "polars" [];
	"narwhals.utils" -> "'dask.dataframe'" [];
	"narwhals.utils" -> "duckdb" [];
	"narwhals.utils" -> "sqlframe" [];
	"narwhals.utils" -> "'sqlframe._version'" [];
	"narwhals.utils" -> "pathlib" [];
	"narwhals.utils" -> "collections" [];
	"narwhals.utils" -> "sys" [];
	"narwhals._arrow.namespace" -> "__future__" [];
	"narwhals._arrow.namespace" -> "operator" [];
	"narwhals._arrow.namespace" -> "functools" [];
	"narwhals._arrow.namespace" -> "itertools" [];
	"narwhals._arrow.namespace" -> "typing" [];
	"narwhals._arrow.namespace" -> "pyarrow" [];
	"narwhals._arrow.typing" -> "__future__" [];
	"narwhals._arrow.typing" -> "typing" [];
	"narwhals._arrow.typing" -> "sys" [];
	"narwhals._arrow.typing" -> "typing_extensions" [];
	"narwhals._arrow.typing" -> "pyarrow" [];
	"narwhals._arrow.typing" -> "'pyarrow.__lib_pxi'" [];
	"narwhals._arrow.typing" -> "'pyarrow._stubs_typing'" [];
	"narwhals._expression_parsing" -> "__future__" [];
	"narwhals._expression_parsing" -> "enum" [];
	"narwhals._expression_parsing" -> "itertools" [];
	"narwhals._expression_parsing" -> "typing" [];
	"narwhals._expression_parsing" -> "typing_extensions" [];
	"narwhals._arrow.series" -> "__future__" [];
	"narwhals._arrow.series" -> "typing" [];
	"narwhals._arrow.series" -> "pyarrow" [];
	"narwhals._arrow.series" -> "types" [];
	"narwhals._arrow.series" -> "pandas" [];
	"narwhals._arrow.series" -> "polars" [];
	"narwhals._arrow.series" -> "typing_extensions" [];
	"narwhals._arrow.series" -> "numpy" [];
	"narwhals._arrow.series_struct" -> "__future__" [];
	"narwhals._arrow.series_struct" -> "typing" [];
	"narwhals._arrow.series_str" -> "__future__" [];
	"narwhals._arrow.series_str" -> "string" [];
	"narwhals._arrow.series_str" -> "typing" [];
	"narwhals._arrow.series_list" -> "__future__" [];
	"narwhals._arrow.series_list" -> "typing" [];
	"narwhals._arrow.series_list" -> "pyarrow" [];
	"narwhals._arrow.series_dt" -> "__future__" [];
	"narwhals._arrow.series_dt" -> "typing" [];
	"narwhals._arrow.series_dt" -> "pyarrow" [];
	"narwhals._arrow.series_dt" -> "typing_extensions" [];
	"narwhals._duration" -> "__future__" [];
	"narwhals._duration" -> "re" [];
	"narwhals._duration" -> "typing" [];
	"narwhals._duration" -> "typing_extensions" [];
	"narwhals._arrow.series_cat" -> "__future__" [];
	"narwhals._arrow.series_cat" -> "typing" [];
	"narwhals._arrow.series_cat" -> "pyarrow" [];
	"narwhals._arrow.selectors" -> "__future__" [];
	"narwhals._arrow.selectors" -> "typing" [];
	"narwhals._arrow.expr" -> "__future__" [];
	"narwhals._arrow.expr" -> "typing" [];
	"narwhals._arrow.expr" -> "typing_extensions" [];
	"narwhals._arrow.dataframe" -> "__future__" [];
	"narwhals._arrow.dataframe" -> "functools" [];
	"narwhals._arrow.dataframe" -> "typing" [];
	"narwhals._arrow.dataframe" -> "pyarrow" [];
	"narwhals._arrow.dataframe" -> "io" [];
	"narwhals._arrow.dataframe" -> "pathlib" [];
	"narwhals._arrow.dataframe" -> "types" [];
	"narwhals._arrow.dataframe" -> "pandas" [];
	"narwhals._arrow.dataframe" -> "polars" [];
	"narwhals._arrow.dataframe" -> "typing_extensions" [];
	"narwhals._arrow.dataframe" -> "numpy" [];
	"narwhals._arrow.dataframe" -> "duckdb" [];
	"narwhals._arrow.dataframe" -> "dask" [];
	"narwhals._arrow.dataframe" -> "'dask.dataframe'" [];
	"narwhals._dask.dataframe" -> "__future__" [];
	"narwhals._dask.dataframe" -> "typing" [];
	"narwhals._dask.dataframe" -> "'dask.dataframe'" [];
	"narwhals._dask.dataframe" -> "pandas" [];
	"narwhals._dask.dataframe" -> "types" [];
	"narwhals._dask.dataframe" -> "typing_extensions" [];
	"narwhals._dask.dataframe" -> "polars" [];
	"narwhals._dask.dataframe" -> "pyarrow" [];
	"narwhals._dask.namespace" -> "__future__" [];
	"narwhals._dask.namespace" -> "operator" [];
	"narwhals._dask.namespace" -> "functools" [];
	"narwhals._dask.namespace" -> "typing" [];
	"narwhals._dask.namespace" -> "'dask.dataframe'" [];
	"narwhals._dask.namespace" -> "pandas" [];
	"narwhals._dask.selectors" -> "__future__" [];
	"narwhals._dask.selectors" -> "typing" [];
	"narwhals._dask.selectors" -> "'dask.dataframe'" [];
	"narwhals._compliant.namespace" -> "__future__" [];
	"narwhals._compliant.namespace" -> "functools" [];
	"narwhals._compliant.namespace" -> "typing" [];
	"narwhals._compliant.namespace" -> "typing_extensions" [];
	"narwhals._compliant.when_then" -> "__future__" [];
	"narwhals._compliant.when_then" -> "sys" [];
	"narwhals._compliant.when_then" -> "typing" [];
	"narwhals._compliant.when_then" -> "typing_extensions" [];
	"narwhals._compliant.expr" -> "__future__" [];
	"narwhals._compliant.expr" -> "sys" [];
	"narwhals._compliant.expr" -> "functools" [];
	"narwhals._compliant.expr" -> "operator" [];
	"narwhals._compliant.expr" -> "typing" [];
	"narwhals._compliant.expr" -> "typing_extensions" [];
	"narwhals._compliant.series" -> "__future__" [];
	"narwhals._compliant.series" -> "typing" [];
	"narwhals._compliant.series" -> "types" [];
	"narwhals._compliant.series" -> "pandas" [];
	"narwhals._compliant.series" -> "polars" [];
	"narwhals._compliant.series" -> "pyarrow" [];
	"narwhals._compliant.series" -> "typing_extensions" [];
	"narwhals._compliant.dataframe" -> "__future__" [];
	"narwhals._compliant.dataframe" -> "itertools" [];
	"narwhals._compliant.dataframe" -> "typing" [];
	"narwhals._compliant.dataframe" -> "io" [];
	"narwhals._compliant.dataframe" -> "pathlib" [];
	"narwhals._compliant.dataframe" -> "pandas" [];
	"narwhals._compliant.dataframe" -> "polars" [];
	"narwhals._compliant.dataframe" -> "pyarrow" [];
	"narwhals._compliant.dataframe" -> "typing_extensions" [];
	"narwhals._compliant.group_by" -> "__future__" [];
	"narwhals._compliant.group_by" -> "re" [];
	"narwhals._compliant.group_by" -> "sys" [];
	"narwhals._compliant.group_by" -> "typing" [];
	"narwhals._compliant.group_by" -> "typing_extensions" [];
	"narwhals._compliant.any_namespace" -> "__future__" [];
	"narwhals._compliant.any_namespace" -> "typing" [];
	"narwhals._compliant.selectors" -> "__future__" [];
	"narwhals._compliant.selectors" -> "re" [];
	"narwhals._compliant.selectors" -> "functools" [];
	"narwhals._compliant.selectors" -> "typing" [];
	"narwhals._compliant.selectors" -> "sys" [];
	"narwhals._compliant.selectors" -> "datetime" [];
	"narwhals._compliant.selectors" -> "typing_extensions" [];
	"narwhals._dask.group_by" -> "__future__" [];
	"narwhals._dask.group_by" -> "functools" [];
	"narwhals._dask.group_by" -> "typing" [];
	"narwhals._dask.group_by" -> "'dask.dataframe'" [];
	"narwhals._dask.group_by" -> "pandas" [];
	"narwhals._dask.group_by" -> "typing_extensions" [];
	"narwhals._dask.group_by" -> "dask_expr" [];
	"narwhals._dask.expr" -> "__future__" [];
	"narwhals._dask.expr" -> "warnings" [];
	"narwhals._dask.expr" -> "typing" [];
	"narwhals._dask.expr" -> "'dask.dataframe'" [];
	"narwhals._dask.expr" -> "typing_extensions" [];
	"narwhals._dask.expr" -> "'dask.array'" [];
	"narwhals._pandas_like.group_by" -> "__future__" [];
	"narwhals._pandas_like.group_by" -> "collections" [];
	"narwhals._pandas_like.group_by" -> "warnings" [];
	"narwhals._pandas_like.group_by" -> "typing" [];
	"narwhals._pandas_like.expr" -> "__future__" [];
	"narwhals._pandas_like.expr" -> "typing" [];
	"narwhals._pandas_like.expr" -> "typing_extensions" [];
	"narwhals._pandas_like.namespace" -> "__future__" [];
	"narwhals._pandas_like.namespace" -> "operator" [];
	"narwhals._pandas_like.namespace" -> "warnings" [];
	"narwhals._pandas_like.namespace" -> "functools" [];
	"narwhals._pandas_like.namespace" -> "typing" [];
	"narwhals._pandas_like.namespace" -> "pandas" [];
	"narwhals._pandas_like.typing" -> "__future__" [];
	"narwhals._pandas_like.typing" -> "typing" [];
	"narwhals._pandas_like.typing" -> "pandas" [];
	"narwhals._pandas_like.typing" -> "typing_extensions" [];
	"narwhals._pandas_like.selectors" -> "__future__" [];
	"narwhals._pandas_like.selectors" -> "typing" [];
	"narwhals._dask.expr_str" -> "__future__" [];
	"narwhals._dask.expr_str" -> "typing" [];
	"narwhals._dask.expr_str" -> "'dask.dataframe'" [];
	"narwhals._dask.expr_dt" -> "__future__" [];
	"narwhals._dask.expr_dt" -> "typing" [];
	"narwhals._dask.expr_dt" -> "'dask.dataframe'" [];
	"narwhals._dask.utils" -> "__future__" [];
	"narwhals._dask.utils" -> "typing" [];
	"narwhals._dask.utils" -> "'dask.dataframe'" [];
	"narwhals._dask.utils" -> "dask_expr" [];
	"narwhals._dask.utils" -> "pandas" [];
	"narwhals._polars.dataframe" -> "__future__" [];
	"narwhals._polars.dataframe" -> "typing" [];
	"narwhals._polars.dataframe" -> "polars" [];
	"narwhals._polars.dataframe" -> "types" [];
	"narwhals._polars.dataframe" -> "pandas" [];
	"narwhals._polars.dataframe" -> "pyarrow" [];
	"narwhals._polars.dataframe" -> "typing_extensions" [];
	"narwhals._polars.dataframe" -> "duckdb" [];
	"narwhals._polars.dataframe" -> "dask" [];
	"narwhals._polars.dataframe" -> "'dask.dataframe'" [];
	"narwhals._polars.group_by" -> "__future__" [];
	"narwhals._polars.group_by" -> "typing" [];
	"narwhals._polars.group_by" -> "'polars.dataframe'" [];
	"narwhals._polars.group_by" -> "'polars.lazyframe'" [];
	"narwhals._polars.expr" -> "__future__" [];
	"narwhals._polars.expr" -> "typing" [];
	"narwhals._polars.expr" -> "polars" [];
	"narwhals._polars.expr" -> "typing_extensions" [];
	"narwhals._polars.utils" -> "__future__" [];
	"narwhals._polars.utils" -> "functools" [];
	"narwhals._polars.utils" -> "typing" [];
	"narwhals._polars.utils" -> "polars" [];
	"narwhals._polars.utils" -> "typing_extensions" [];
	"narwhals._polars.series" -> "__future__" [];
	"narwhals._polars.series" -> "typing" [];
	"narwhals._polars.series" -> "polars" [];
	"narwhals._polars.series" -> "types" [];
	"narwhals._polars.series" -> "pandas" [];
	"narwhals._polars.series" -> "pyarrow" [];
	"narwhals._polars.series" -> "typing_extensions" [];
	"narwhals._polars.namespace" -> "__future__" [];
	"narwhals._polars.namespace" -> "operator" [];
	"narwhals._polars.namespace" -> "typing" [];
	"narwhals._polars.namespace" -> "polars" [];
	"narwhals._polars.namespace" -> "datetime" [];
	"narwhals._polars.typing" -> "__future__" [];
	"narwhals._polars.typing" -> "typing" [];
	"narwhals._polars.typing" -> "sys" [];
	"narwhals._polars.typing" -> "typing_extensions" [];
	"narwhals._duckdb.dataframe" -> "__future__" [];
	"narwhals._duckdb.dataframe" -> "contextlib" [];
	"narwhals._duckdb.dataframe" -> "functools" [];
	"narwhals._duckdb.dataframe" -> "operator" [];
	"narwhals._duckdb.dataframe" -> "typing" [];
	"narwhals._duckdb.dataframe" -> "duckdb" [];
	"narwhals._duckdb.dataframe" -> "types" [];
	"narwhals._duckdb.dataframe" -> "pandas" [];
	"narwhals._duckdb.dataframe" -> "pyarrow" [];
	"narwhals._duckdb.dataframe" -> "typing_extensions" [];
	"narwhals._duckdb.dataframe" -> "polars" [];
	"narwhals._duckdb.series" -> "__future__" [];
	"narwhals._duckdb.series" -> "typing" [];
	"narwhals._duckdb.series" -> "types" [];
	"narwhals._duckdb.series" -> "duckdb" [];
	"narwhals._duckdb.series" -> "typing_extensions" [];
	"narwhals._duckdb.namespace" -> "__future__" [];
	"narwhals._duckdb.namespace" -> "operator" [];
	"narwhals._duckdb.namespace" -> "functools" [];
	"narwhals._duckdb.namespace" -> "itertools" [];
	"narwhals._duckdb.namespace" -> "typing" [];
	"narwhals._duckdb.namespace" -> "duckdb" [];
	"narwhals._duckdb.namespace" -> "'duckdb.typing'" [];
	"narwhals._duckdb.selectors" -> "__future__" [];
	"narwhals._duckdb.selectors" -> "typing" [];
	"narwhals._duckdb.selectors" -> "duckdb" [];
	"narwhals._duckdb.group_by" -> "__future__" [];
	"narwhals._duckdb.group_by" -> "itertools" [];
	"narwhals._duckdb.group_by" -> "typing" [];
	"narwhals._duckdb.group_by" -> "duckdb" [];
	"narwhals._duckdb.expr" -> "__future__" [];
	"narwhals._duckdb.expr" -> "contextlib" [];
	"narwhals._duckdb.expr" -> "operator" [];
	"narwhals._duckdb.expr" -> "typing" [];
	"narwhals._duckdb.expr" -> "duckdb" [];
	"narwhals._duckdb.expr" -> "'duckdb.typing'" [];
	"narwhals._duckdb.expr" -> "typing_extensions" [];
	"narwhals._duckdb.typing" -> "__future__" [];
	"narwhals._duckdb.typing" -> "typing" [];
	"narwhals._duckdb.typing" -> "duckdb" [];
	"narwhals._duckdb.expr_struct" -> "__future__" [];
	"narwhals._duckdb.expr_struct" -> "typing" [];
	"narwhals._duckdb.expr_struct" -> "duckdb" [];
	"narwhals._duckdb.expr_str" -> "__future__" [];
	"narwhals._duckdb.expr_str" -> "typing" [];
	"narwhals._duckdb.expr_str" -> "duckdb" [];
	"narwhals._duckdb.expr_str" -> "string" [];
	"narwhals._duckdb.expr_list" -> "__future__" [];
	"narwhals._duckdb.expr_list" -> "typing" [];
	"narwhals._duckdb.expr_list" -> "duckdb" [];
	"narwhals._duckdb.expr_dt" -> "__future__" [];
	"narwhals._duckdb.expr_dt" -> "datetime" [];
	"narwhals._duckdb.expr_dt" -> "typing" [];
	"narwhals._duckdb.expr_dt" -> "duckdb" [];
	"narwhals._duckdb.utils" -> "__future__" [];
	"narwhals._duckdb.utils" -> "functools" [];
	"narwhals._duckdb.utils" -> "typing" [];
	"narwhals._duckdb.utils" -> "duckdb" [];
	"narwhals._duckdb.utils" -> "'duckdb.typing'" [];
	"narwhals._arrow.group_by" -> "__future__" [];
	"narwhals._arrow.group_by" -> "collections" [];
	"narwhals._arrow.group_by" -> "typing" [];
	"narwhals._arrow.group_by" -> "pyarrow" [];
	"narwhals._arrow.utils" -> "__future__" [];
	"narwhals._arrow.utils" -> "functools" [];
	"narwhals._arrow.utils" -> "typing" [];
	"narwhals._arrow.utils" -> "pyarrow" [];
	"narwhals._arrow.utils" -> "typing_extensions" [];
	"narwhals._interchange.series" -> "__future__" [];
	"narwhals._interchange.series" -> "typing" [];
	"narwhals._interchange.series" -> "typing_extensions" [];
	"narwhals._interchange.dataframe" -> "__future__" [];
	"narwhals._interchange.dataframe" -> "enum" [];
	"narwhals._interchange.dataframe" -> "typing" [];
	"narwhals._interchange.dataframe" -> "pandas" [];
	"narwhals._interchange.dataframe" -> "pyarrow" [];
	"narwhals._interchange.dataframe" -> "typing_extensions" [];
	"narwhals._pandas_like.utils" -> "__future__" [];
	"narwhals._pandas_like.utils" -> "functools" [];
	"narwhals._pandas_like.utils" -> "re" [];
	"narwhals._pandas_like.utils" -> "contextlib" [];
	"narwhals._pandas_like.utils" -> "typing" [];
	"narwhals._pandas_like.utils" -> "pandas" [];
	"narwhals._pandas_like.utils" -> "pyarrow" [];
	"narwhals._pandas_like.utils" -> "collections" [];
	"narwhals._pandas_like.series" -> "__future__" [];
	"narwhals._pandas_like.series" -> "typing" [];
	"narwhals._pandas_like.series" -> "numpy" [];
	"narwhals._pandas_like.series" -> "types" [];
	"narwhals._pandas_like.series" -> "pandas" [];
	"narwhals._pandas_like.series" -> "polars" [];
	"narwhals._pandas_like.series" -> "pyarrow" [];
	"narwhals._pandas_like.series" -> "typing_extensions" [];
	"narwhals._pandas_like.series_struct" -> "__future__" [];
	"narwhals._pandas_like.series_struct" -> "typing" [];
	"narwhals._pandas_like.series_str" -> "__future__" [];
	"narwhals._pandas_like.series_str" -> "typing" [];
	"narwhals._pandas_like.series_list" -> "__future__" [];
	"narwhals._pandas_like.series_list" -> "typing" [];
	"narwhals._pandas_like.series_dt" -> "__future__" [];
	"narwhals._pandas_like.series_dt" -> "typing" [];
	"narwhals._pandas_like.series_cat" -> "__future__" [];
	"narwhals._pandas_like.series_cat" -> "typing" [];
	"narwhals._pandas_like.dataframe" -> "__future__" [];
	"narwhals._pandas_like.dataframe" -> "itertools" [];
	"narwhals._pandas_like.dataframe" -> "typing" [];
	"narwhals._pandas_like.dataframe" -> "numpy" [];
	"narwhals._pandas_like.dataframe" -> "io" [];
	"narwhals._pandas_like.dataframe" -> "pathlib" [];
	"narwhals._pandas_like.dataframe" -> "types" [];
	"narwhals._pandas_like.dataframe" -> "pandas" [];
	"narwhals._pandas_like.dataframe" -> "polars" [];
	"narwhals._pandas_like.dataframe" -> "typing_extensions" [];
	"narwhals._pandas_like.dataframe" -> "'modin.pandas'" [];
	"narwhals._pandas_like.dataframe" -> "pyarrow" [];
	"narwhals._pandas_like.dataframe" -> "duckdb" [];
	"narwhals._pandas_like.dataframe" -> "dask" [];
	"narwhals._pandas_like.dataframe" -> "'dask.dataframe'" [];
	"narwhals.stable.v1._namespace" -> "__future__" [];
	"narwhals._namespace" -> "__future__" [];
	"narwhals._namespace" -> "typing" [];
	"narwhals._namespace" -> "types" [];
	"narwhals._namespace" -> "duckdb" [];
	"narwhals._namespace" -> "pandas" [];
	"narwhals._namespace" -> "polars" [];
	"narwhals._namespace" -> "pyarrow" [];
	"narwhals._namespace" -> "'pyspark.sql'" [];
	"narwhals._namespace" -> "typing_extensions" [];
	"narwhals._spark_like.namespace" -> "__future__" [];
	"narwhals._spark_like.namespace" -> "operator" [];
	"narwhals._spark_like.namespace" -> "functools" [];
	"narwhals._spark_like.namespace" -> "typing" [];
	"narwhals._spark_like.namespace" -> "'sqlframe.base'" [];
	"narwhals._spark_like.utils" -> "__future__" [];
	"narwhals._spark_like.utils" -> "importlib" [];
	"narwhals._spark_like.utils" -> "typing" [];
	"narwhals._spark_like.utils" -> "types" [];
	"narwhals._spark_like.utils" -> "'sqlframe.base'" [];
	"narwhals._spark_like.utils" -> "typing_extensions" [];
	"narwhals._spark_like.utils" -> "'pyspark.sql'" [];
	"narwhals._spark_like.selectors" -> "__future__" [];
	"narwhals._spark_like.selectors" -> "typing" [];
	"narwhals._spark_like.selectors" -> "'sqlframe.base'" [];
	"narwhals._spark_like.expr" -> "__future__" [];
	"narwhals._spark_like.expr" -> "operator" [];
	"narwhals._spark_like.expr" -> "typing" [];
	"narwhals._spark_like.expr" -> "'sqlframe.base'" [];
	"narwhals._spark_like.expr" -> "typing_extensions" [];
	"narwhals._spark_like.typing" -> "__future__" [];
	"narwhals._spark_like.typing" -> "typing" [];
	"narwhals._spark_like.typing" -> "'sqlframe.base'" [];
	"narwhals._spark_like.expr_struct" -> "__future__" [];
	"narwhals._spark_like.expr_struct" -> "typing" [];
	"narwhals._spark_like.expr_struct" -> "'sqlframe.base'" [];
	"narwhals._spark_like.expr_str" -> "__future__" [];
	"narwhals._spark_like.expr_str" -> "functools" [];
	"narwhals._spark_like.expr_str" -> "typing" [];
	"narwhals._spark_like.expr_str" -> "'sqlframe.base'" [];
	"narwhals._spark_like.expr_str" -> "string" [];
	"narwhals._spark_like.expr_list" -> "__future__" [];
	"narwhals._spark_like.expr_list" -> "typing" [];
	"narwhals._spark_like.expr_dt" -> "__future__" [];
	"narwhals._spark_like.expr_dt" -> "typing" [];
	"narwhals._spark_like.expr_dt" -> "'sqlframe.base'" [];
	"narwhals._spark_like.dataframe" -> "__future__" [];
	"narwhals._spark_like.dataframe" -> "warnings" [];
	"narwhals._spark_like.dataframe" -> "functools" [];
	"narwhals._spark_like.dataframe" -> "operator" [];
	"narwhals._spark_like.dataframe" -> "typing" [];
	"narwhals._spark_like.dataframe" -> "types" [];
	"narwhals._spark_like.dataframe" -> "pyarrow" [];
	"narwhals._spark_like.dataframe" -> "'sqlframe.base'" [];
	"narwhals._spark_like.dataframe" -> "typing_extensions" [];
	"narwhals._spark_like.dataframe" -> "pandas" [];
	"narwhals._spark_like.dataframe" -> "polars" [];
	"narwhals._spark_like.group_by" -> "__future__" [];
	"narwhals._spark_like.group_by" -> "typing" [];
	"narwhals._spark_like.group_by" -> "'sqlframe.base'" [];
	"narwhals._compliant.typing" -> "__future__" [];
	"narwhals._compliant.typing" -> "typing" [];
	"narwhals._compliant.typing" -> "typing_extensions" [];
	"narwhals._compliant" -> "__future__" [];
	"narwhals._enum" -> "__future__" [];
	"narwhals._enum" -> "enum" [];
	"narwhals._enum" -> "typing" [];
	"narwhals.typing" -> "__future__" [];
	"narwhals.typing" -> "typing" [];
	"narwhals.typing" -> "datetime" [];
	"narwhals.typing" -> "decimal" [];
	"narwhals.typing" -> "types" [];
	"narwhals.typing" -> "numpy" [];
	"narwhals.typing" -> "typing_extensions" [];
	"narwhals.translate" -> "__future__" [];
	"narwhals.translate" -> "datetime" [];
	"narwhals.translate" -> "decimal" [];
	"narwhals.translate" -> "functools" [];
	"narwhals.translate" -> "typing" [];
	"narwhals.translate" -> "ibis" [];
	"narwhals._ibis.dataframe" -> "__future__" [];
	"narwhals._ibis.dataframe" -> "functools" [];
	"narwhals._ibis.dataframe" -> "typing" [];
	"narwhals._ibis.dataframe" -> "'ibis.selectors'" [];
	"narwhals._ibis.dataframe" -> "types" [];
	"narwhals._ibis.dataframe" -> "pandas" [];
	"narwhals._ibis.dataframe" -> "pyarrow" [];
	"narwhals._ibis.dataframe" -> "typing_extensions" [];
	"narwhals._ibis.series" -> "__future__" [];
	"narwhals._ibis.series" -> "typing" [];
	"narwhals._ibis.series" -> "types" [];
	"narwhals._ibis.series" -> "typing_extensions" [];
	"narwhals.stable.v1.dtypes" -> "__future__" [];
	"narwhals.stable.v1._dtypes" -> "__future__" [];
	"narwhals.stable.v1._dtypes" -> "typing" [];
	"narwhals.stable.v1._dtypes" -> "datetime" [];
	"narwhals.stable" -> "__future__" [];
	"narwhals.series" -> "__future__" [];
	"narwhals.series" -> "typing" [];
	"narwhals.series" -> "types" [];
	"narwhals.series" -> "pandas" [];
	"narwhals.series" -> "polars" [];
	"narwhals.series" -> "pyarrow" [];
	"narwhals.series" -> "typing_extensions" [];
	"narwhals.series_struct" -> "__future__" [];
	"narwhals.series_struct" -> "typing" [];
	"narwhals.series_str" -> "__future__" [];
	"narwhals.series_str" -> "typing" [];
	"narwhals.series_list" -> "__future__" [];
	"narwhals.series_list" -> "typing" [];
	"narwhals.series_dt" -> "__future__" [];
	"narwhals.series_dt" -> "typing" [];
	"narwhals.series_cat" -> "__future__" [];
	"narwhals.series_cat" -> "typing" [];
	"narwhals.schema" -> "__future__" [];
	"narwhals.schema" -> "collections" [];
	"narwhals.schema" -> "functools" [];
	"narwhals.schema" -> "typing" [];
	"narwhals.schema" -> "polars" [];
	"narwhals.schema" -> "pyarrow" [];
	"narwhals.schema" -> "pandas" [];
	"narwhals.schema" -> "itertools" [];
	"narwhals.functions" -> "__future__" [];
	"narwhals.functions" -> "platform" [];
	"narwhals.functions" -> "sys" [];
	"narwhals.functions" -> "typing" [];
	"narwhals.functions" -> "types" [];
	"narwhals.functions" -> "typing_extensions" [];
	"narwhals.functions" -> "pyarrow" [];
	"narwhals.expr" -> "__future__" [];
	"narwhals.expr" -> "typing" [];
	"narwhals.expr" -> "typing_extensions" [];
	"narwhals.expr_struct" -> "__future__" [];
	"narwhals.expr_struct" -> "typing" [];
	"narwhals.expr_str" -> "__future__" [];
	"narwhals.expr_str" -> "typing" [];
	"narwhals.expr_name" -> "__future__" [];
	"narwhals.expr_name" -> "typing" [];
	"narwhals.expr_list" -> "__future__" [];
	"narwhals.expr_list" -> "typing" [];
	"narwhals.expr_dt" -> "__future__" [];
	"narwhals.expr_dt" -> "typing" [];
	"narwhals.expr_cat" -> "__future__" [];
	"narwhals.expr_cat" -> "typing" [];
	"narwhals.dataframe" -> "__future__" [];
	"narwhals.dataframe" -> "abc" [];
	"narwhals.dataframe" -> "itertools" [];
	"narwhals.dataframe" -> "typing" [];
	"narwhals.dataframe" -> "warnings" [];
	"narwhals.dataframe" -> "io" [];
	"narwhals.dataframe" -> "pathlib" [];
	"narwhals.dataframe" -> "types" [];
	"narwhals.dataframe" -> "pandas" [];
	"narwhals.dataframe" -> "polars" [];
	"narwhals.dataframe" -> "pyarrow" [];
	"narwhals.dataframe" -> "typing_extensions" [];
	"narwhals.group_by" -> "__future__" [];
	"narwhals.group_by" -> "typing" [];
	"narwhals.selectors" -> "__future__" [];
	"narwhals.selectors" -> "typing" [];
	"narwhals.selectors" -> "datetime" [];
	"narwhals.exceptions" -> "__future__" [];
	"narwhals.dependencies" -> "__future__" [];
	"narwhals.dependencies" -> "sys" [];
	"narwhals.dependencies" -> "typing" [];
	"narwhals.dependencies" -> "cudf" [];
	"narwhals.dependencies" -> "'dask.dataframe'" [];
	"narwhals.dependencies" -> "duckdb" [];
	"narwhals.dependencies" -> "ibis" [];
	"narwhals.dependencies" -> "'modin.pandas'" [];
	"narwhals.dependencies" -> "pandas" [];
	"narwhals.dependencies" -> "polars" [];
	"narwhals.dependencies" -> "pyarrow" [];
	"narwhals.dependencies" -> "'pyspark.sql'" [];
	"narwhals.dependencies" -> "typing_extensions" [];
	"narwhals.dependencies" -> "'sqlframe.base'" [];
	"narwhals" -> "__future__" [];
	"narwhals" -> "typing" [];
	"narwhals" -> "importlib" [];
	"altair.utils.plugin_registry" -> "__future__" [];
	"altair.utils.plugin_registry" -> "sys" [];
	"altair.utils.plugin_registry" -> "functools" [];
	"altair.utils.plugin_registry" -> "typing" [];
	"altair.utils.plugin_registry" -> "typing_extensions" [];
	"altair.utils.plugin_registry" -> "types" [];
	"altair.utils._vegafusion_data" -> "__future__" [];
	"altair.utils._vegafusion_data" -> "uuid" [];
	"altair.utils._vegafusion_data" -> "typing" [];
	"altair.utils._vegafusion_data" -> "weakref" [];
	"altair.utils._vegafusion_data" -> "sys" [];
	"altair.utils._vegafusion_data" -> "'vegafusion.runtime'" [];
	"altair.utils._vegafusion_data" -> "typing_extensions" [];
	"altair.utils._vegafusion_data" -> "altair" [];
	"narwhals.stable.v1.typing" -> "__future__" [];
	"narwhals.stable.v1.typing" -> "typing" [];
	"narwhals.stable.v1.typing" -> "sys" [];
	"narwhals.stable.v1.typing" -> "typing_extensions" [];
	"altair.vegalite.data" -> "__future__" [];
	"altair.vegalite.data" -> "typing" [];
	"altair.utils.data" -> "__future__" [];
	"altair.utils.data" -> "hashlib" [];
	"altair.utils.data" -> "json" [];
	"altair.utils.data" -> "random" [];
	"altair.utils.data" -> "sys" [];
	"altair.utils.data" -> "functools" [];
	"altair.utils.data" -> "pathlib" [];
	"altair.utils.data" -> "typing" [];
	"altair.utils.data" -> "typing_extensions" [];
	"altair.utils.data" -> "pandas" [];
	"altair.utils.data" -> "pyarrow" [];
	"altair.utils.core" -> "__future__" [];
	"altair.utils.core" -> "itertools" [];
	"altair.utils.core" -> "json" [];
	"altair.utils.core" -> "re" [];
	"altair.utils.core" -> "sys" [];
	"altair.utils.core" -> "traceback" [];
	"altair.utils.core" -> "warnings" [];
	"altair.utils.core" -> "copy" [];
	"altair.utils.core" -> "operator" [];
	"altair.utils.core" -> "typing" [];
	"altair.utils.core" -> "jsonschema" [];
	"altair.utils.core" -> "typing_extensions" [];
	"altair.utils.core" -> "pandas" [];
	"altair.utils.core" -> "numpy" [];
	"altair.vegalite.v5.schema.channels" -> "__future__" [];
	"altair.vegalite.v5.schema.channels" -> "sys" [];
	"altair.vegalite.v5.schema.channels" -> "typing" [];
	"altair.vegalite.v5.schema.channels" -> "typing_extensions" [];
	"altair.vegalite.v5.schema.channels" -> "altair" [];
	"altair.vegalite.v5.schema._typing" -> "__future__" [];
	"altair.vegalite.v5.schema._typing" -> "re" [];
	"altair.vegalite.v5.schema._typing" -> "sys" [];
	"altair.vegalite.v5.schema._typing" -> "datetime" [];
	"altair.vegalite.v5.schema._typing" -> "typing" [];
	"altair.vegalite.v5.schema._typing" -> "typing_extensions" [];
	"altair.utils._dfi_types" -> "__future__" [];
	"altair.utils._dfi_types" -> "enum" [];
	"altair.utils._dfi_types" -> "typing" [];
	"altair.utils._importers" -> "__future__" [];
	"altair.utils._importers" -> "typing" [];
	"altair.utils._importers" -> "types" [];
	"altair.utils._importers" -> "vegafusion" [];
	"altair.utils._importers" -> "vl_convert" [];
	"altair.utils.mimebundle" -> "__future__" [];
	"altair.utils.mimebundle" -> "struct" [];
	"altair.utils.mimebundle" -> "typing" [];
	"altair.utils.mimebundle" -> "sys" [];
	"altair.utils.mimebundle" -> "typing_extensions" [];
	"altair.utils.mimebundle" -> "altair" [];
	"altair.utils.html" -> "__future__" [];
	"altair.utils.html" -> "json" [];
	"altair.utils.html" -> "typing" [];
	"altair.utils.html" -> "jinja2" [];
	"altair.vegalite.v5.data" -> "typing" [];
	"altair.vegalite.v5.schema.mixins" -> "__future__" [];
	"altair.vegalite.v5.schema.mixins" -> "typing" [];
	"altair.vegalite.v5.schema.mixins" -> "sys" [];
	"altair.vegalite.v5.schema.mixins" -> "typing_extensions" [];
	"altair.vegalite.v5.schema.mixins" -> "altair" [];
	"altair.vegalite.v5.compiler" -> "typing" [];
	"altair.utils.compiler" -> "typing" [];
	"altair.vegalite.v5.api" -> "__future__" [];
	"altair.vegalite.v5.api" -> "functools" [];
	"altair.vegalite.v5.api" -> "hashlib" [];
	"altair.vegalite.v5.api" -> "io" [];
	"altair.vegalite.v5.api" -> "itertools" [];
	"altair.vegalite.v5.api" -> "json" [];
	"altair.vegalite.v5.api" -> "operator" [];
	"altair.vegalite.v5.api" -> "sys" [];
	"altair.vegalite.v5.api" -> "typing" [];
	"altair.vegalite.v5.api" -> "warnings" [];
	"altair.vegalite.v5.api" -> "copy" [];
	"altair.vegalite.v5.api" -> "jsonschema" [];
	"altair.vegalite.v5.api" -> "altair" [];
	"altair.vegalite.v5.api" -> "typing_extensions" [];
	"altair.vegalite.v5.api" -> "pathlib" [];
	"altair.vegalite.v5.api" -> "webbrowser" [];
	"altair.utils._transformed_data" -> "__future__" [];
	"altair.utils._transformed_data" -> "typing" [];
	"altair.utils._transformed_data" -> "altair" [];
	"altair.utils._transformed_data" -> "sys" [];
	"altair.utils._transformed_data" -> "typing_extensions" [];
	"altair.utils.server" -> "itertools" [];
	"altair.utils.server" -> "random" [];
	"altair.utils.server" -> "socket" [];
	"altair.utils.server" -> "sys" [];
	"altair.utils.server" -> "threading" [];
	"altair.utils.server" -> "webbrowser" [];
	"altair.utils.server" -> "http" [];
	"altair.utils.server" -> "io" [];
	"altair.utils.save" -> "__future__" [];
	"altair.utils.save" -> "json" [];
	"altair.utils.save" -> "pathlib" [];
	"altair.utils.save" -> "warnings" [];
	"altair.utils.save" -> "typing" [];
	"altair.vegalite.v5.schema._config" -> "__future__" [];
	"altair.vegalite.v5.schema._config" -> "sys" [];
	"altair.vegalite.v5.schema._config" -> "typing" [];
	"altair.vegalite.v5.schema._config" -> "typing_extensions" [];
	"altair.expr.core" -> "__future__" [];
	"altair.expr.core" -> "datetime" [];
	"altair.expr.core" -> "typing" [];
	"altair.expr.core" -> "sys" [];
	"altair.expr.core" -> "typing_extensions" [];
	"narwhals.stable.v1.dependencies" -> "__future__" [];
	"altair.typing" -> "__future__" [];
	"altair.expr" -> "__future__" [];
	"altair.expr" -> "sys" [];
	"altair.expr" -> "typing" [];
	"altair.expr" -> "typing_extensions" [];
	"altair.jupyter" -> "anywidget" [];
	"altair.jupyter.jupyter_chart" -> "__future__" [];
	"altair.jupyter.jupyter_chart" -> "json" [];
	"altair.jupyter.jupyter_chart" -> "pathlib" [];
	"altair.jupyter.jupyter_chart" -> "typing" [];
	"altair.jupyter.jupyter_chart" -> "anywidget" [];
	"altair.jupyter.jupyter_chart" -> "traitlets" [];
	"altair.jupyter.jupyter_chart" -> "altair" [];
	"altair.utils.selection" -> "__future__" [];
	"altair.utils.selection" -> "dataclasses" [];
	"altair.utils.selection" -> "typing" [];
	"altair.vegalite.v5.schema.core" -> "__future__" [];
	"altair.vegalite.v5.schema.core" -> "json" [];
	"altair.vegalite.v5.schema.core" -> "pkgutil" [];
	"altair.vegalite.v5.schema.core" -> "typing" [];
	"altair.vegalite.v5.schema.core" -> "altair" [];
	"altair.theme" -> "__future__" [];
	"altair.theme" -> "functools" [];
	"altair.theme" -> "typing" [];
	"altair.theme" -> "sys" [];
	"altair.theme" -> "typing_extensions" [];
	"altair.vegalite.v5.theme" -> "__future__" [];
	"altair.vegalite.v5.theme" -> "typing" [];
	"altair.vegalite.v5.theme" -> "sys" [];
	"altair.vegalite.v5.theme" -> "functools" [];
	"altair.vegalite.v5.theme" -> "typing_extensions" [];
	"streamlit.elements.lib.color_util" -> "__future__" [];
	"streamlit.elements.lib.color_util" -> "typing" [];
	"streamlit.elements.lib.color_util" -> "typing_extensions" [];
	"streamlit.elements.write" -> "__future__" [];
	"streamlit.elements.write" -> "dataclasses" [];
	"streamlit.elements.write" -> "inspect" [];
	"streamlit.elements.write" -> "types" [];
	"streamlit.elements.write" -> "collections" [];
	"streamlit.elements.write" -> "io" [];
	"streamlit.elements.write" -> "typing" [];
	"streamlit.elements.write" -> "streamlit" [];
	"streamlit.elements.write" -> "'tensorflow.python'" [];
	"streamlit.elements.widgets.time_widgets" -> "__future__" [];
	"streamlit.elements.widgets.time_widgets" -> "re" [];
	"streamlit.elements.widgets.time_widgets" -> "dataclasses" [];
	"streamlit.elements.widgets.time_widgets" -> "datetime" [];
	"streamlit.elements.widgets.time_widgets" -> "textwrap" [];
	"streamlit.elements.widgets.time_widgets" -> "typing" [];
	"streamlit.elements.widgets.time_widgets" -> "typing_extensions" [];
	"streamlit.elements.widgets.text_widgets" -> "__future__" [];
	"streamlit.elements.widgets.text_widgets" -> "dataclasses" [];
	"streamlit.elements.widgets.text_widgets" -> "textwrap" [];
	"streamlit.elements.widgets.text_widgets" -> "typing" [];
	"streamlit.elements.widgets.slider" -> "__future__" [];
	"streamlit.elements.widgets.slider" -> "dataclasses" [];
	"streamlit.elements.widgets.slider" -> "datetime" [];
	"streamlit.elements.widgets.slider" -> "numbers" [];
	"streamlit.elements.widgets.slider" -> "textwrap" [];
	"streamlit.elements.widgets.slider" -> "typing" [];
	"streamlit.elements.widgets.slider" -> "typing_extensions" [];
	"streamlit.elements.lib.js_number" -> "__future__" [];
	"streamlit.elements.lib.js_number" -> "numbers" [];
	"streamlit.elements.widgets.selectbox" -> "__future__" [];
	"streamlit.elements.widgets.selectbox" -> "textwrap" [];
	"streamlit.elements.widgets.selectbox" -> "typing" [];
	"streamlit.elements.lib.options_selector_utils" -> "__future__" [];
	"streamlit.elements.lib.options_selector_utils" -> "enum" [];
	"streamlit.elements.lib.options_selector_utils" -> "typing" [];
	"streamlit.elements.lib.options_selector_utils" -> "streamlit" [];
	"streamlit.elements.widgets.select_slider" -> "__future__" [];
	"streamlit.elements.widgets.select_slider" -> "dataclasses" [];
	"streamlit.elements.widgets.select_slider" -> "textwrap" [];
	"streamlit.elements.widgets.select_slider" -> "typing" [];
	"streamlit.elements.widgets.select_slider" -> "typing_extensions" [];
	"streamlit.elements.widgets.radio" -> "__future__" [];
	"streamlit.elements.widgets.radio" -> "dataclasses" [];
	"streamlit.elements.widgets.radio" -> "textwrap" [];
	"streamlit.elements.widgets.radio" -> "typing" [];
	"streamlit.elements.widgets.number_input" -> "__future__" [];
	"streamlit.elements.widgets.number_input" -> "numbers" [];
	"streamlit.elements.widgets.number_input" -> "dataclasses" [];
	"streamlit.elements.widgets.number_input" -> "textwrap" [];
	"streamlit.elements.widgets.number_input" -> "typing" [];
	"streamlit.elements.widgets.number_input" -> "typing_extensions" [];
	"streamlit.elements.widgets.number_input" -> "streamlit" [];
	"streamlit.elements.widgets.multiselect" -> "__future__" [];
	"streamlit.elements.widgets.multiselect" -> "textwrap" [];
	"streamlit.elements.widgets.multiselect" -> "typing" [];
	"streamlit.elements.widgets.file_uploader" -> "__future__" [];
	"streamlit.elements.widgets.file_uploader" -> "dataclasses" [];
	"streamlit.elements.widgets.file_uploader" -> "textwrap" [];
	"streamlit.elements.widgets.file_uploader" -> "typing" [];
	"streamlit.elements.widgets.file_uploader" -> "typing_extensions" [];
	"streamlit.elements.widgets.file_uploader" -> "streamlit" [];
	"streamlit.elements.lib.file_uploader_utils" -> "__future__" [];
	"streamlit.elements.lib.file_uploader_utils" -> "os" [];
	"streamlit.elements.lib.file_uploader_utils" -> "typing" [];
	"streamlit.elements.widgets.data_editor" -> "__future__" [];
	"streamlit.elements.widgets.data_editor" -> "json" [];
	"streamlit.elements.widgets.data_editor" -> "dataclasses" [];
	"streamlit.elements.widgets.data_editor" -> "decimal" [];
	"streamlit.elements.widgets.data_editor" -> "typing" [];
	"streamlit.elements.widgets.data_editor" -> "typing_extensions" [];
	"streamlit.elements.widgets.data_editor" -> "streamlit" [];
	"streamlit.elements.widgets.data_editor" -> "numpy" [];
	"streamlit.elements.widgets.data_editor" -> "pandas" [];
	"streamlit.elements.widgets.data_editor" -> "pyarrow" [];
	"streamlit.elements.lib.column_config_utils" -> "__future__" [];
	"streamlit.elements.lib.column_config_utils" -> "copy" [];
	"streamlit.elements.lib.column_config_utils" -> "json" [];
	"streamlit.elements.lib.column_config_utils" -> "enum" [];
	"streamlit.elements.lib.column_config_utils" -> "typing" [];
	"streamlit.elements.lib.column_config_utils" -> "typing_extensions" [];
	"streamlit.elements.lib.column_config_utils" -> "pyarrow" [];
	"streamlit.elements.lib.column_config_utils" -> "pandas" [];
	"streamlit.elements.lib.dicttools" -> "__future__" [];
	"streamlit.elements.lib.dicttools" -> "typing" [];
	"streamlit.elements.widgets.color_picker" -> "__future__" [];
	"streamlit.elements.widgets.color_picker" -> "re" [];
	"streamlit.elements.widgets.color_picker" -> "dataclasses" [];
	"streamlit.elements.widgets.color_picker" -> "textwrap" [];
	"streamlit.elements.widgets.color_picker" -> "typing" [];
	"streamlit.elements.widgets.checkbox" -> "__future__" [];
	"streamlit.elements.widgets.checkbox" -> "dataclasses" [];
	"streamlit.elements.widgets.checkbox" -> "textwrap" [];
	"streamlit.elements.widgets.checkbox" -> "typing" [];
	"streamlit.elements.widgets.chat" -> "__future__" [];
	"streamlit.elements.widgets.chat" -> "dataclasses" [];
	"streamlit.elements.widgets.chat" -> "enum" [];
	"streamlit.elements.widgets.chat" -> "typing" [];
	"streamlit.elements.widgets.chat" -> "streamlit" [];
	"streamlit.elements.widgets.camera_input" -> "__future__" [];
	"streamlit.elements.widgets.camera_input" -> "dataclasses" [];
	"streamlit.elements.widgets.camera_input" -> "textwrap" [];
	"streamlit.elements.widgets.camera_input" -> "typing" [];
	"streamlit.elements.widgets.camera_input" -> "typing_extensions" [];
	"streamlit.elements.widgets.button_group" -> "__future__" [];
	"streamlit.elements.widgets.button_group" -> "dataclasses" [];
	"streamlit.elements.widgets.button_group" -> "typing" [];
	"streamlit.elements.widgets.button_group" -> "typing_extensions" [];
	"streamlit.elements.widgets.button" -> "__future__" [];
	"streamlit.elements.widgets.button" -> "io" [];
	"streamlit.elements.widgets.button" -> "os" [];
	"streamlit.elements.widgets.button" -> "dataclasses" [];
	"streamlit.elements.widgets.button" -> "pathlib" [];
	"streamlit.elements.widgets.button" -> "textwrap" [];
	"streamlit.elements.widgets.button" -> "typing" [];
	"streamlit.elements.widgets.button" -> "typing_extensions" [];
	"streamlit.elements.widgets.button" -> "streamlit" [];
	"streamlit.elements.widgets.audio_input" -> "__future__" [];
	"streamlit.elements.widgets.audio_input" -> "dataclasses" [];
	"streamlit.elements.widgets.audio_input" -> "textwrap" [];
	"streamlit.elements.widgets.audio_input" -> "typing" [];
	"streamlit.elements.widgets.audio_input" -> "typing_extensions" [];
	"streamlit.elements.vega_charts" -> "__future__" [];
	"streamlit.elements.vega_charts" -> "json" [];
	"streamlit.elements.vega_charts" -> "re" [];
	"streamlit.elements.vega_charts" -> "contextlib" [];
	"streamlit.elements.vega_charts" -> "dataclasses" [];
	"streamlit.elements.vega_charts" -> "typing" [];
	"streamlit.elements.vega_charts" -> "typing_extensions" [];
	"streamlit.elements.vega_charts" -> "streamlit" [];
	"streamlit.elements.vega_charts" -> "altair" [];
	"streamlit.elements.lib.event_utils" -> "typing" [];
	"streamlit.elements.toast" -> "__future__" [];
	"streamlit.elements.toast" -> "typing" [];
	"streamlit.elements.text" -> "__future__" [];
	"streamlit.elements.text" -> "typing" [];
	"streamlit.elements.snow" -> "__future__" [];
	"streamlit.elements.snow" -> "typing" [];
	"streamlit.elements.pyplot" -> "__future__" [];
	"streamlit.elements.pyplot" -> "io" [];
	"streamlit.elements.pyplot" -> "typing" [];
	"streamlit.elements.pyplot" -> "'matplotlib.figure'" [];
	"streamlit.elements.pyplot" -> "'matplotlib.pyplot'" [];
	"streamlit.elements.progress" -> "__future__" [];
	"streamlit.elements.progress" -> "math" [];
	"streamlit.elements.progress" -> "typing" [];
	"streamlit.elements.progress" -> "typing_extensions" [];
	"streamlit.elements.plotly_chart" -> "__future__" [];
	"streamlit.elements.plotly_chart" -> "json" [];
	"streamlit.elements.plotly_chart" -> "dataclasses" [];
	"streamlit.elements.plotly_chart" -> "typing" [];
	"streamlit.elements.plotly_chart" -> "typing_extensions" [];
	"streamlit.elements.plotly_chart" -> "streamlit" [];
	"streamlit.elements.plotly_chart" -> "matplotlib" [];
	"streamlit.elements.plotly_chart" -> "'plotly.graph_objs'" [];
	"streamlit.elements.plotly_chart" -> "'plotly.basedatatypes'" [];
	"streamlit.elements.plotly_chart" -> "'plotly.io'" [];
	"streamlit.elements.plotly_chart" -> "'plotly.tools'" [];
	"streamlit.elements.lib.streamlit_plotly_theme" -> "__future__" [];
	"streamlit.elements.lib.streamlit_plotly_theme" -> "contextlib" [];
	"streamlit.elements.lib.streamlit_plotly_theme" -> "'plotly.graph_objects'" [];
	"streamlit.elements.lib.streamlit_plotly_theme" -> "'plotly.io'" [];
	"streamlit.elements.metric" -> "__future__" [];
	"streamlit.elements.metric" -> "dataclasses" [];
	"streamlit.elements.metric" -> "textwrap" [];
	"streamlit.elements.metric" -> "typing" [];
	"streamlit.elements.metric" -> "typing_extensions" [];
	"streamlit.elements.metric" -> "numpy" [];
	"streamlit.elements.media" -> "__future__" [];
	"streamlit.elements.media" -> "io" [];
	"streamlit.elements.media" -> "re" [];
	"streamlit.elements.media" -> "datetime" [];
	"streamlit.elements.media" -> "pathlib" [];
	"streamlit.elements.media" -> "typing" [];
	"streamlit.elements.media" -> "typing_extensions" [];
	"streamlit.elements.media" -> "streamlit" [];
	"streamlit.elements.media" -> "numpy" [];
	"streamlit.elements.media" -> "wave" [];
	"streamlit.elements.lib.subtitle_utils" -> "__future__" [];
	"streamlit.elements.lib.subtitle_utils" -> "io" [];
	"streamlit.elements.lib.subtitle_utils" -> "os" [];
	"streamlit.elements.lib.subtitle_utils" -> "re" [];
	"streamlit.elements.lib.subtitle_utils" -> "pathlib" [];
	"streamlit.elements.lib.subtitle_utils" -> "streamlit" [];
	"streamlit.elements.markdown" -> "__future__" [];
	"streamlit.elements.markdown" -> "typing" [];
	"streamlit.elements.markdown" -> "sympy" [];
	"streamlit.elements.map" -> "__future__" [];
	"streamlit.elements.map" -> "copy" [];
	"streamlit.elements.map" -> "json" [];
	"streamlit.elements.map" -> "typing" [];
	"streamlit.elements.map" -> "streamlit" [];
	"streamlit.elements.map" -> "pandas" [];
	"streamlit.elements.layouts" -> "__future__" [];
	"streamlit.elements.layouts" -> "typing" [];
	"streamlit.elements.layouts" -> "typing_extensions" [];
	"streamlit.elements.json" -> "__future__" [];
	"streamlit.elements.json" -> "json" [];
	"streamlit.elements.json" -> "types" [];
	"streamlit.elements.json" -> "collections" [];
	"streamlit.elements.json" -> "typing" [];
	"streamlit.elements.image" -> "__future__" [];
	"streamlit.elements.image" -> "typing" [];
	"streamlit.elements.image" -> "typing_extensions" [];
	"streamlit.elements.iframe" -> "__future__" [];
	"streamlit.elements.iframe" -> "typing" [];
	"streamlit.elements.html" -> "__future__" [];
	"streamlit.elements.html" -> "os" [];
	"streamlit.elements.html" -> "re" [];
	"streamlit.elements.html" -> "pathlib" [];
	"streamlit.elements.html" -> "typing" [];
	"streamlit.elements.heading" -> "__future__" [];
	"streamlit.elements.heading" -> "enum" [];
	"streamlit.elements.heading" -> "typing" [];
	"streamlit.elements.heading" -> "typing_extensions" [];
	"streamlit.elements.graphviz_chart" -> "__future__" [];
	"streamlit.elements.graphviz_chart" -> "typing" [];
	"streamlit.elements.graphviz_chart" -> "typing_extensions" [];
	"streamlit.elements.graphviz_chart" -> "streamlit" [];
	"streamlit.elements.graphviz_chart" -> "graphviz" [];
	"streamlit.elements.form" -> "__future__" [];
	"streamlit.elements.form" -> "textwrap" [];
	"streamlit.elements.form" -> "typing" [];
	"streamlit.elements.empty" -> "__future__" [];
	"streamlit.elements.empty" -> "typing" [];
	"streamlit.elements.doc_string" -> "__future__" [];
	"streamlit.elements.doc_string" -> "ast" [];
	"streamlit.elements.doc_string" -> "contextlib" [];
	"streamlit.elements.doc_string" -> "inspect" [];
	"streamlit.elements.doc_string" -> "re" [];
	"streamlit.elements.doc_string" -> "types" [];
	"streamlit.elements.doc_string" -> "typing" [];
	"streamlit.elements.doc_string" -> "streamlit" [];
	"streamlit.elements.deck_gl_json_chart" -> "__future__" [];
	"streamlit.elements.deck_gl_json_chart" -> "json" [];
	"streamlit.elements.deck_gl_json_chart" -> "dataclasses" [];
	"streamlit.elements.deck_gl_json_chart" -> "typing" [];
	"streamlit.elements.deck_gl_json_chart" -> "typing_extensions" [];
	"streamlit.elements.deck_gl_json_chart" -> "streamlit" [];
	"streamlit.elements.deck_gl_json_chart" -> "pydeck" [];
	"pydeck.bindings.map_styles" -> "warnings" [];
	"pydeck.bindings.json_tools" -> "json" [];
	"pydeck.types.base" -> "abc" [];
	"pydeck.types.function" -> "functools" [];
	"pydeck.types.image" -> "base64" [];
	"pydeck.types.image" -> "os" [];
	"pydeck.types.image" -> "pathlib" [];
	"pydeck.types.image" -> "re" [];
	"pydeck.types.string" -> "functools" [];
	"pydeck.bindings.layer" -> "uuid" [];
	"pydeck.bindings.layer" -> "numpy" [];
	"pydeck.data_utils.color_scales" -> "collections" [];
	"pydeck.data_utils.color_scales" -> "random" [];
	"pydeck.data_utils.viewport_helpers" -> "math" [];
	"pydeck.bindings.deck" -> "os" [];
	"pydeck.bindings.deck" -> "sys" [];
	"pydeck.widget.widget" -> "ast" [];
	"pydeck.widget.widget" -> "json" [];
	"pydeck.widget.widget" -> "ipywidgets" [];
	"pydeck.widget.widget" -> "traitlets" [];
	"pydeck.widget.debounce" -> "asyncio" [];
	"pydeck.data_utils.binary_transfer" -> "collections" [];
	"pydeck.data_utils.binary_transfer" -> "numpy" [];
	"pydeck.bindings.base_map_provider" -> "enum" [];
	"pydeck.io.html" -> "html" [];
	"pydeck.io.html" -> "os" [];
	"pydeck.io.html" -> "os.path" [];
	"pydeck.io.html" -> "sys" [];
	"pydeck.io.html" -> "time" [];
	"pydeck.io.html" -> "warnings" [];
	"pydeck.io.html" -> "webbrowser" [];
	"pydeck.io.html" -> "jinja2" [];
	"streamlit.elements.code" -> "__future__" [];
	"streamlit.elements.code" -> "typing" [];
	"streamlit.elements.bokeh_chart" -> "__future__" [];
	"streamlit.elements.bokeh_chart" -> "json" [];
	"streamlit.elements.bokeh_chart" -> "typing" [];
	"streamlit.elements.bokeh_chart" -> "bokeh" [];
	"streamlit.elements.bokeh_chart" -> "'bokeh.embed'" [];
	"streamlit.elements.balloons" -> "__future__" [];
	"streamlit.elements.balloons" -> "typing" [];
	"streamlit.elements.arrow" -> "__future__" [];
	"streamlit.elements.arrow" -> "json" [];
	"streamlit.elements.arrow" -> "dataclasses" [];
	"streamlit.elements.arrow" -> "typing" [];
	"streamlit.elements.arrow" -> "typing_extensions" [];
	"streamlit.elements.arrow" -> "streamlit" [];
	"streamlit.elements.arrow" -> "numpy" [];
	"streamlit.elements.arrow" -> "pandas" [];
	"streamlit.elements.arrow" -> "pyarrow" [];
	"streamlit.elements.alert" -> "__future__" [];
	"streamlit.elements.alert" -> "typing" [];
	"streamlit.delta_generator_singletons" -> "__future__" [];
	"streamlit.delta_generator_singletons" -> "contextvars" [];
	"streamlit.delta_generator_singletons" -> "typing" [];
	"streamlit.version" -> "typing" [];
	"streamlit.deprecation_util" -> "__future__" [];
	"streamlit.deprecation_util" -> "functools" [];
	"streamlit.deprecation_util" -> "typing" [];
	"streamlit.logger" -> "__future__" [];
	"streamlit.logger" -> "logging" [];
	"streamlit.logger" -> "sys" [];
	"streamlit.logger" -> "typing" [];
	"streamlit.config_util" -> "__future__" [];
	"streamlit.config_util" -> "re" [];
	"streamlit.config_util" -> "toml" [];
	"streamlit.config_option" -> "__future__" [];
	"streamlit.config_option" -> "datetime" [];
	"streamlit.config_option" -> "re" [];
	"streamlit.config_option" -> "textwrap" [];
	"streamlit.config_option" -> "typing" [];
	"streamlit.url_util" -> "__future__" [];
	"streamlit.url_util" -> "re" [];
	"streamlit.url_util" -> "typing" [];
	"streamlit.url_util" -> "typing_extensions" [];
	"streamlit.cursor" -> "__future__" [];
	"streamlit.cursor" -> "typing" [];
	"streamlit.type_util" -> "__future__" [];
	"streamlit.type_util" -> "dataclasses" [];
	"streamlit.type_util" -> "re" [];
	"streamlit.type_util" -> "types" [];
	"streamlit.type_util" -> "collections" [];
	"streamlit.type_util" -> "enum" [];
	"streamlit.type_util" -> "typing" [];
	"streamlit.type_util" -> "typing_extensions" [];
	"streamlit.type_util" -> "graphviz" [];
	"streamlit.type_util" -> "sympy" [];
	"streamlit.type_util" -> "plotly" [];
	"streamlit.type_util" -> "pydeck" [];
	"streamlit.type_util" -> "array" [];
	"streamlit.type_util" -> "altair" [];
	"streamlit.type_util" -> "packaging" [];
	"streamlit.type_util" -> "asyncio" [];
	"streamlit.file_util" -> "__future__" [];
	"streamlit.file_util" -> "contextlib" [];
	"streamlit.file_util" -> "errno" [];
	"streamlit.file_util" -> "io" [];
	"streamlit.file_util" -> "os" [];
	"streamlit.file_util" -> "pathlib" [];
	"streamlit.file_util" -> "fnmatch" [];
	"streamlit.config" -> "__future__" [];
	"streamlit.config" -> "copy" [];
	"streamlit.config" -> "logging" [];
	"streamlit.config" -> "os" [];
	"streamlit.config" -> "secrets" [];
	"streamlit.config" -> "threading" [];
	"streamlit.config" -> "collections" [];
	"streamlit.config" -> "enum" [];
	"streamlit.config" -> "typing" [];
	"streamlit.config" -> "blinker" [];
	"streamlit.config" -> "rich" [];
	"streamlit.config" -> "toml" [];
	"streamlit.cli_util" -> "__future__" [];
	"streamlit.cli_util" -> "os" [];
	"streamlit.cli_util" -> "subprocess" [];
	"streamlit.cli_util" -> "click" [];
	"streamlit.cli_util" -> "webbrowser" [];
	"streamlit.cli_util" -> "platform" [];
	"streamlit.errors" -> "__future__" [];
	"streamlit.errors" -> "os" [];
	"streamlit.errors" -> "typing" [];
	"streamlit.errors" -> "inspect" [];
	"streamlit.errors" -> "traceback" [];
	"streamlit.util" -> "__future__" [];
	"streamlit.util" -> "dataclasses" [];
	"streamlit.util" -> "functools" [];
	"streamlit.util" -> "hashlib" [];
	"streamlit.util" -> "typing" [];
	"streamlit.env_util" -> "__future__" [];
	"streamlit.env_util" -> "os" [];
	"streamlit.env_util" -> "platform" [];
	"streamlit.env_util" -> "re" [];
	"streamlit.env_util" -> "sys" [];
	"streamlit.env_util" -> "inspect" [];
	"streamlit.env_util" -> "shutil" [];
	"langchain_community.chat_message_histories.sql" -> "contextlib" [];
	"langchain_community.chat_message_histories.sql" -> "json" [];
	"langchain_community.chat_message_histories.sql" -> "logging" [];
	"langchain_community.chat_message_histories.sql" -> "abc" [];
	"langchain_community.chat_message_histories.sql" -> "typing" [];
	"langchain_community.chat_message_histories.sql" -> "sqlalchemy" [];
	"langchain_community.chat_message_histories.singlestoredb" -> "json" [];
	"langchain_community.chat_message_histories.singlestoredb" -> "logging" [];
	"langchain_community.chat_message_histories.singlestoredb" -> "re" [];
	"langchain_community.chat_message_histories.singlestoredb" -> "typing" [];
	"langchain_community.chat_message_histories.singlestoredb" -> "singlestoredb" [];
	"langchain_community.chat_message_histories.rocksetdb" -> "datetime" [];
	"langchain_community.chat_message_histories.rocksetdb" -> "time" [];
	"langchain_community.chat_message_histories.rocksetdb" -> "typing" [];
	"langchain_community.chat_message_histories.rocksetdb" -> "uuid" [];
	"langchain_community.chat_message_histories.rocksetdb" -> "rockset" [];
	"langchain_community.chat_message_histories.redis" -> "json" [];
	"langchain_community.chat_message_histories.redis" -> "logging" [];
	"langchain_community.chat_message_histories.redis" -> "typing" [];
	"langchain_community.chat_message_histories.redis" -> "redis" [];
	"langchain_community.chat_message_histories.postgres" -> "json" [];
	"langchain_community.chat_message_histories.postgres" -> "logging" [];
	"langchain_community.chat_message_histories.postgres" -> "typing" [];
	"langchain_community.chat_message_histories.postgres" -> "psycopg" [];
	"langchain_community.chat_message_histories.postgres" -> "'psycopg.rows'" [];
	"langchain_community.chat_message_histories.neo4j" -> "typing" [];
	"langchain_community.chat_message_histories.neo4j" -> "neo4j" [];
	"langchain_community.chat_message_histories.mongodb" -> "json" [];
	"langchain_community.chat_message_histories.mongodb" -> "logging" [];
	"langchain_community.chat_message_histories.mongodb" -> "typing" [];
	"langchain_community.chat_message_histories.mongodb" -> "pymongo" [];
	"langchain_community.chat_message_histories.momento" -> "__future__" [];
	"langchain_community.chat_message_histories.momento" -> "json" [];
	"langchain_community.chat_message_histories.momento" -> "datetime" [];
	"langchain_community.chat_message_histories.momento" -> "typing" [];
	"langchain_community.chat_message_histories.momento" -> "momento" [];
	"langchain_community.chat_message_histories.momento" -> "'momento.responses'" [];
	"langchain_community.chat_message_histories.momento" -> "'momento.requests'" [];
	"langchain_community.chat_message_histories.kafka" -> "__future__" [];
	"langchain_community.chat_message_histories.kafka" -> "json" [];
	"langchain_community.chat_message_histories.kafka" -> "logging" [];
	"langchain_community.chat_message_histories.kafka" -> "time" [];
	"langchain_community.chat_message_histories.kafka" -> "enum" [];
	"langchain_community.chat_message_histories.kafka" -> "typing" [];
	"langchain_community.chat_message_histories.kafka" -> "confluent_kafka" [];
	"langchain_community.chat_message_histories.kafka" -> "'confluent_kafka.admin'" [];
	"langchain_community.chat_message_histories.firestore" -> "__future__" [];
	"langchain_community.chat_message_histories.firestore" -> "logging" [];
	"langchain_community.chat_message_histories.firestore" -> "typing" [];
	"langchain_community.chat_message_histories.firestore" -> "'google.cloud.firestore'" [];
	"langchain_community.chat_message_histories.firestore" -> "firebase_admin" [];
	"langchain_community.chat_message_histories.file" -> "json" [];
	"langchain_community.chat_message_histories.file" -> "pathlib" [];
	"langchain_community.chat_message_histories.file" -> "typing" [];
	"langchain_community.chat_message_histories.elasticsearch" -> "json" [];
	"langchain_community.chat_message_histories.elasticsearch" -> "logging" [];
	"langchain_community.chat_message_histories.elasticsearch" -> "time" [];
	"langchain_community.chat_message_histories.elasticsearch" -> "typing" [];
	"langchain_community.chat_message_histories.elasticsearch" -> "elasticsearch" [];
	"langchain_community.chat_message_histories.elasticsearch" -> "langchain_community" [];
	"langchain_community.chat_message_histories.dynamodb" -> "__future__" [];
	"langchain_community.chat_message_histories.dynamodb" -> "decimal" [];
	"langchain_community.chat_message_histories.dynamodb" -> "typing" [];
	"langchain_community.chat_message_histories.dynamodb" -> "'boto3.session'" [];
	"langchain_community.chat_message_histories.dynamodb" -> "boto3" [];
	"langchain_community.chat_message_histories.dynamodb" -> "dynamodb_encryption_sdk" [];
	"langchain_community.chat_message_histories.dynamodb" -> "'dynamodb_encryption_sdk.identifiers'" [];
	"langchain_community.chat_message_histories.dynamodb" -> "'dynamodb_encryption_sdk.material_providers'" [];
	"langchain_community.chat_message_histories.dynamodb" -> "'dynamodb_encryption_sdk.structures'" [];
	"langchain_community.chat_message_histories.dynamodb" -> "time" [];
	"langchain_community.chat_message_histories.cosmos_db" -> "__future__" [];
	"langchain_community.chat_message_histories.cosmos_db" -> "logging" [];
	"langchain_community.chat_message_histories.cosmos_db" -> "types" [];
	"langchain_community.chat_message_histories.cosmos_db" -> "typing" [];
	"langchain_community.chat_message_histories.cosmos_db" -> "'azure.cosmos'" [];
	"langchain_community.chat_message_histories.cassandra" -> "__future__" [];
	"langchain_community.chat_message_histories.cassandra" -> "json" [];
	"langchain_community.chat_message_histories.cassandra" -> "uuid" [];
	"langchain_community.chat_message_histories.cassandra" -> "typing" [];
	"langchain_community.chat_message_histories.cassandra" -> "'cassandra.cluster'" [];
	"langchain_community.chat_message_histories.cassandra" -> "'cassio.table'" [];
	"langchain_community.chat_message_histories.astradb" -> "__future__" [];
	"langchain_community.chat_message_histories.astradb" -> "json" [];
	"langchain_community.chat_message_histories.astradb" -> "time" [];
	"langchain_community.chat_message_histories.astradb" -> "typing" [];
	"langchain_community.chat_message_histories.astradb" -> "'astrapy.db'" [];
	"langchain.memory.vectorstore_token_buffer_memory" -> "warnings" [];
	"langchain.memory.vectorstore_token_buffer_memory" -> "datetime" [];
	"langchain.memory.vectorstore_token_buffer_memory" -> "typing" [];
	"langchain.memory.vectorstore_token_buffer_memory" -> "pydantic" [];
	"langchain.text_splitter" -> "langchain_text_splitters" [];
	"langchain_text_splitters.spacy" -> "__future__" [];
	"langchain_text_splitters.spacy" -> "typing" [];
	"langchain_text_splitters.spacy" -> "spacy" [];
	"langchain_text_splitters.spacy" -> "'spacy.lang'" [];
	"langchain_text_splitters.sentence_transformers" -> "__future__" [];
	"langchain_text_splitters.sentence_transformers" -> "typing" [];
	"langchain_text_splitters.sentence_transformers" -> "sentence_transformers" [];
	"langchain_text_splitters.python" -> "__future__" [];
	"langchain_text_splitters.python" -> "typing" [];
	"langchain_text_splitters.nltk" -> "__future__" [];
	"langchain_text_splitters.nltk" -> "typing" [];
	"langchain_text_splitters.nltk" -> "'nltk.tokenize'" [];
	"langchain_text_splitters.markdown" -> "__future__" [];
	"langchain_text_splitters.markdown" -> "re" [];
	"langchain_text_splitters.markdown" -> "typing" [];
	"langchain_text_splitters.latex" -> "__future__" [];
	"langchain_text_splitters.latex" -> "typing" [];
	"langchain_text_splitters.konlpy" -> "__future__" [];
	"langchain_text_splitters.konlpy" -> "typing" [];
	"langchain_text_splitters.konlpy" -> "konlpy" [];
	"langchain_text_splitters.json" -> "__future__" [];
	"langchain_text_splitters.json" -> "copy" [];
	"langchain_text_splitters.json" -> "json" [];
	"langchain_text_splitters.json" -> "typing" [];
	"langchain_text_splitters.html" -> "__future__" [];
	"langchain_text_splitters.html" -> "copy" [];
	"langchain_text_splitters.html" -> "pathlib" [];
	"langchain_text_splitters.html" -> "re" [];
	"langchain_text_splitters.html" -> "io" [];
	"langchain_text_splitters.html" -> "typing" [];
	"langchain_text_splitters.html" -> "requests" [];
	"langchain_text_splitters.html" -> "bs4" [];
	"langchain_text_splitters.html" -> "lxml" [];
	"langchain_text_splitters.html" -> "nltk" [];
	"langchain_text_splitters.html" -> "'nltk.corpus'" [];
	"langchain_text_splitters.character" -> "__future__" [];
	"langchain_text_splitters.character" -> "re" [];
	"langchain_text_splitters.character" -> "typing" [];
	"langchain_text_splitters.base" -> "__future__" [];
	"langchain_text_splitters.base" -> "copy" [];
	"langchain_text_splitters.base" -> "logging" [];
	"langchain_text_splitters.base" -> "abc" [];
	"langchain_text_splitters.base" -> "dataclasses" [];
	"langchain_text_splitters.base" -> "enum" [];
	"langchain_text_splitters.base" -> "typing" [];
	"langchain_text_splitters.base" -> "transformers" [];
	"langchain_text_splitters.base" -> "tiktoken" [];
	"langchain.memory.vectorstore" -> "typing" [];
	"langchain.memory.vectorstore" -> "pydantic" [];
	"langchain.memory.token_buffer" -> "typing" [];
	"langchain.memory.summary_buffer" -> "typing" [];
	"langchain.memory.summary" -> "__future__" [];
	"langchain.memory.summary" -> "typing" [];
	"langchain.memory.summary" -> "pydantic" [];
	"langchain.memory.simple" -> "typing" [];
	"langchain.memory.readonly" -> "typing" [];
	"langchain.memory.entity" -> "logging" [];
	"langchain.memory.entity" -> "abc" [];
	"langchain.memory.entity" -> "itertools" [];
	"langchain.memory.entity" -> "typing" [];
	"langchain.memory.entity" -> "pydantic" [];
	"langchain.memory.entity" -> "upstash_redis" [];
	"langchain.memory.entity" -> "redis" [];
	"langchain.memory.entity" -> "sqlite3" [];
	"langchain.memory.combined" -> "warnings" [];
	"langchain.memory.combined" -> "typing" [];
	"langchain.memory.combined" -> "pydantic" [];
	"langchain.memory.buffer_window" -> "typing" [];
	"langchain.memory.buffer" -> "typing" [];
	"langchain.memory.chat_memory" -> "warnings" [];
	"langchain.memory.chat_memory" -> "abc" [];
	"langchain.memory.chat_memory" -> "typing" [];
	"langchain.memory.chat_memory" -> "pydantic" [];
	"langchain_community.agent_toolkits.powerbi.base" -> "__future__" [];
	"langchain_community.agent_toolkits.powerbi.base" -> "typing" [];
	"langchain_community.agent_toolkits.openapi.base" -> "__future__" [];
	"langchain_community.agent_toolkits.openapi.base" -> "typing" [];
	"langchain_community.agent_toolkits.load_tools" -> "warnings" [];
	"langchain_community.agent_toolkits.load_tools" -> "typing" [];
	"langchain_community.agent_toolkits.load_tools" -> "mypy_extensions" [];
	"langchain_community.agent_toolkits.load_tools" -> "transformers" [];
	"langchain.chains.api.base" -> "__future__" [];
	"langchain.chains.api.base" -> "typing" [];
	"langchain.chains.api.base" -> "pydantic" [];
	"langchain.chains.api.base" -> "typing_extensions" [];
	"langchain.chains.llm_math.base" -> "__future__" [];
	"langchain.chains.llm_math.base" -> "math" [];
	"langchain.chains.llm_math.base" -> "re" [];
	"langchain.chains.llm_math.base" -> "warnings" [];
	"langchain.chains.llm_math.base" -> "typing" [];
	"langchain.chains.llm_math.base" -> "pydantic" [];
	"langchain.chains.llm_math.base" -> "numexpr" [];
	"langchain_community.utilities.dataforseo_api_search" -> "base64" [];
	"langchain_community.utilities.dataforseo_api_search" -> "typing" [];
	"langchain_community.utilities.dataforseo_api_search" -> "aiohttp" [];
	"langchain_community.utilities.dataforseo_api_search" -> "requests" [];
	"langchain_community.utilities.dataforseo_api_search" -> "pydantic" [];
	"langchain_community.utilities.dalle_image_generator" -> "logging" [];
	"langchain_community.utilities.dalle_image_generator" -> "typing" [];
	"langchain_community.utilities.dalle_image_generator" -> "pydantic" [];
	"langchain_community.utilities.dalle_image_generator" -> "typing_extensions" [];
	"langchain_community.utilities.dalle_image_generator" -> "openai" [];
	"langchain_community.tools.memorize.tool" -> "abc" [];
	"langchain_community.tools.memorize.tool" -> "typing" [];
	"langchain_community.tools.memorize.tool" -> "pydantic" [];
	"langchain_community.tools.google_trends.tool" -> "typing" [];
	"langchain_community.tools.google_scholar.tool" -> "typing" [];
	"langchain_community.tools.google_lens.tool" -> "typing" [];
	"langchain_community.tools.google_jobs.tool" -> "typing" [];
	"langchain_community.tools.google_finance.tool" -> "typing" [];
	"langchain_community.tools.golden_query.tool" -> "typing" [];
	"langchain_community.tools.dataforseo_api_search.tool" -> "typing" [];
	"langchain_community.tools.dataforseo_api_search.tool" -> "pydantic" [];
	"langchain_community.agent_toolkits.json.base" -> "__future__" [];
	"langchain_community.agent_toolkits.json.base" -> "typing" [];
	"langchain.agents.xml.base" -> "typing" [];
	"langchain.agents.output_parsers.xml" -> "typing" [];
	"langchain.agents.output_parsers.tools" -> "json" [];
	"langchain.agents.output_parsers.tools" -> "typing" [];
	"langchain.agents.output_parsers.self_ask" -> "typing" [];
	"langchain.agents.output_parsers.react_single_input" -> "re" [];
	"langchain.agents.output_parsers.react_single_input" -> "typing" [];
	"langchain.agents.output_parsers.react_json_single_input" -> "json" [];
	"langchain.agents.output_parsers.react_json_single_input" -> "re" [];
	"langchain.agents.output_parsers.react_json_single_input" -> "typing" [];
	"langchain.agents.output_parsers.openai_functions" -> "json" [];
	"langchain.agents.output_parsers.openai_functions" -> "typing" [];
	"langchain.agents.output_parsers.json" -> "__future__" [];
	"langchain.agents.output_parsers.json" -> "logging" [];
	"langchain.agents.output_parsers.json" -> "typing" [];
	"langchain.agents.format_scratchpad.tools" -> "json" [];
	"langchain.agents.format_scratchpad.openai_functions" -> "json" [];
	"langchain_core.tools.render" -> "__future__" [];
	"langchain_core.tools.render" -> "inspect" [];
	"langchain_core.tools.render" -> "typing" [];
	"langchain.agents.tool_calling_agent.base" -> "typing" [];
	"langchain.agents.structured_chat.base" -> "re" [];
	"langchain.agents.structured_chat.base" -> "typing" [];
	"langchain.agents.structured_chat.base" -> "pydantic" [];
	"langchain.tools" -> "warnings" [];
	"langchain.tools" -> "typing" [];
	"langchain.tools" -> "langchain_community" [];
	"langchain.agents.structured_chat.output_parser" -> "__future__" [];
	"langchain.agents.structured_chat.output_parser" -> "json" [];
	"langchain.agents.structured_chat.output_parser" -> "logging" [];
	"langchain.agents.structured_chat.output_parser" -> "re" [];
	"langchain.agents.structured_chat.output_parser" -> "typing" [];
	"langchain.agents.structured_chat.output_parser" -> "pydantic" [];
	"langchain.agents.self_ask_with_search.base" -> "__future__" [];
	"langchain.agents.self_ask_with_search.base" -> "typing" [];
	"langchain.agents.self_ask_with_search.base" -> "pydantic" [];
	"langchain.agents.react.base" -> "__future__" [];
	"langchain.agents.react.base" -> "typing" [];
	"langchain.agents.react.base" -> "pydantic" [];
	"langchain.agents.react.output_parser" -> "re" [];
	"langchain.agents.react.output_parser" -> "typing" [];
	"langchain.agents.react.agent" -> "__future__" [];
	"langchain.agents.react.agent" -> "typing" [];
	"langchain.agents.openai_tools.base" -> "typing" [];
	"langchain.agents.output_parsers.openai_tools" -> "typing" [];
	"langchain.agents.openai_functions_multi_agent.base" -> "json" [];
	"langchain.agents.openai_functions_multi_agent.base" -> "typing" [];
	"langchain.agents.openai_functions_multi_agent.base" -> "pydantic" [];
	"langchain.agents.openai_functions_multi_agent.base" -> "typing_extensions" [];
	"langchain.agents.openai_functions_agent.base" -> "typing" [];
	"langchain.agents.openai_functions_agent.base" -> "pydantic" [];
	"langchain.agents.openai_functions_agent.base" -> "typing_extensions" [];
	"langchain.agents.mrkl.base" -> "__future__" [];
	"langchain.agents.mrkl.base" -> "typing" [];
	"langchain.agents.mrkl.base" -> "pydantic" [];
	"langchain.agents.mrkl.output_parser" -> "re" [];
	"langchain.agents.mrkl.output_parser" -> "typing" [];
	"langchain.agents.loading" -> "json" [];
	"langchain.agents.loading" -> "logging" [];
	"langchain.agents.loading" -> "pathlib" [];
	"langchain.agents.loading" -> "typing" [];
	"langchain.agents.loading" -> "yaml" [];
	"langchain.chains.loading" -> "__future__" [];
	"langchain.chains.loading" -> "json" [];
	"langchain.chains.loading" -> "pathlib" [];
	"langchain.chains.loading" -> "typing" [];
	"langchain.chains.loading" -> "yaml" [];
	"langchain.chains.loading" -> "'langchain_experimental.llm_bash'" [];
	"langchain.chains.loading" -> "'langchain_experimental.pal_chain'" [];
	"langchain.chains.loading" -> "'langchain_experimental.sql'" [];
	"langchain_community.llms.loading" -> "json" [];
	"langchain_community.llms.loading" -> "pathlib" [];
	"langchain_community.llms.loading" -> "typing" [];
	"langchain_community.llms.loading" -> "yaml" [];
	"langchain.chains.llm_requests" -> "typing" [];
	"langchain_community.chains.llm_requests" -> "__future__" [];
	"langchain_community.chains.llm_requests" -> "typing" [];
	"langchain_community.chains.llm_requests" -> "pydantic" [];
	"langchain_community.chains.llm_requests" -> "bs4" [];
	"langchain_community.chains.graph_qa.cypher" -> "__future__" [];
	"langchain_community.chains.graph_qa.cypher" -> "re" [];
	"langchain_community.chains.graph_qa.cypher" -> "typing" [];
	"langchain_community.chains.graph_qa.cypher" -> "pydantic" [];
	"langchain_community.chains.graph_qa.cypher_utils" -> "re" [];
	"langchain_community.chains.graph_qa.cypher_utils" -> "collections" [];
	"langchain_community.chains.graph_qa.cypher_utils" -> "typing" [];
	"langchain.chains.qa_with_sources.vector_db" -> "warnings" [];
	"langchain.chains.qa_with_sources.vector_db" -> "typing" [];
	"langchain.chains.qa_with_sources.vector_db" -> "pydantic" [];
	"langchain.chains.llm_checker.base" -> "__future__" [];
	"langchain.chains.llm_checker.base" -> "warnings" [];
	"langchain.chains.llm_checker.base" -> "typing" [];
	"langchain.chains.llm_checker.base" -> "pydantic" [];
	"langchain.chains.sequential" -> "typing" [];
	"langchain.chains.sequential" -> "pydantic" [];
	"langchain.chains.sequential" -> "typing_extensions" [];
	"langchain.agents.types" -> "typing" [];
	"langchain.agents.chat.base" -> "typing" [];
	"langchain.agents.chat.base" -> "pydantic" [];
	"langchain.agents.chat.output_parser" -> "json" [];
	"langchain.agents.chat.output_parser" -> "re" [];
	"langchain.agents.chat.output_parser" -> "typing" [];
	"langchain.agents.json_chat.base" -> "typing" [];
	"langchain.agents.initialize" -> "typing" [];
	"langchain.agents.conversational_chat.base" -> "__future__" [];
	"langchain.agents.conversational_chat.base" -> "typing" [];
	"langchain.agents.conversational_chat.base" -> "pydantic" [];
	"langchain.agents.conversational_chat.output_parser" -> "__future__" [];
	"langchain.agents.conversational_chat.output_parser" -> "typing" [];
	"langchain.agents.conversational.base" -> "__future__" [];
	"langchain.agents.conversational.base" -> "typing" [];
	"langchain.agents.conversational.base" -> "pydantic" [];
	"langchain.agents.conversational.output_parser" -> "re" [];
	"langchain.agents.conversational.output_parser" -> "typing" [];
	"langchain.agents.agent_types" -> "enum" [];
	"langchain.agents.agent_toolkits.vectorstore.base" -> "typing" [];
	"langchain.agents.agent_toolkits" -> "pathlib" [];
	"langchain.agents.agent_toolkits" -> "typing" [];
	"langchain.agents.agent_toolkits.conversational_retrieval.openai_functions" -> "typing" [];
	"langchain.agents.openai_functions_agent.agent_token_buffer_memory" -> "typing" [];
	"langchain_core.tools.retriever" -> "__future__" [];
	"langchain_core.tools.retriever" -> "functools" [];
	"langchain_core.tools.retriever" -> "typing" [];
	"langchain_core.tools.retriever" -> "pydantic" [];
	"langchain.agents.agent_toolkits.vectorstore.toolkit" -> "pydantic" [];
	"langchain.agents.agent_iterator" -> "__future__" [];
	"langchain.agents.agent_iterator" -> "asyncio" [];
	"langchain.agents.agent_iterator" -> "logging" [];
	"langchain.agents.agent_iterator" -> "time" [];
	"langchain.agents.agent_iterator" -> "typing" [];
	"langchain.agents.agent_iterator" -> "uuid" [];
	"langchain.utilities.asyncio" -> "sys" [];
	"langchain.utilities.asyncio" -> "async_timeout" [];
	"langchain.utilities.asyncio" -> "asyncio" [];
	"langchain.utilities" -> "typing" [];
	"langchain.agents.agent" -> "__future__" [];
	"langchain.agents.agent" -> "asyncio" [];
	"langchain.agents.agent" -> "builtins" [];
	"langchain.agents.agent" -> "json" [];
	"langchain.agents.agent" -> "logging" [];
	"langchain.agents.agent" -> "time" [];
	"langchain.agents.agent" -> "abc" [];
	"langchain.agents.agent" -> "pathlib" [];
	"langchain.agents.agent" -> "typing" [];
	"langchain.agents.agent" -> "yaml" [];
	"langchain.agents.agent" -> "pydantic" [];
	"langchain.agents.agent" -> "typing_extensions" [];
	"langchain.agents.tools" -> "typing" [];
	"langchain_core._api.path" -> "os" [];
	"langchain_core._api.path" -> "pathlib" [];
	"langchain_core._api.path" -> "typing" [];
	"langchain._api.interactive_env" -> "sys" [];
	"langsmith.env._git" -> "functools" [];
	"langsmith.env._git" -> "logging" [];
	"langsmith.env._git" -> "subprocess" [];
	"langsmith.env._git" -> "typing" [];
	"langsmith.env._git" -> "typing_extensions" [];
	"langsmith.run_trees" -> "__future__" [];
	"langsmith.run_trees" -> "json" [];
	"langsmith.run_trees" -> "logging" [];
	"langsmith.run_trees" -> "sys" [];
	"langsmith.run_trees" -> "datetime" [];
	"langsmith.run_trees" -> "typing" [];
	"langsmith.run_trees" -> "uuid" [];
	"langsmith.run_trees" -> "pydantic" [];
	"langsmith.run_trees" -> "threading" [];
	"langsmith.client" -> "__future__" [];
	"langsmith.client" -> "atexit" [];
	"langsmith.client" -> "collections" [];
	"langsmith.client" -> "contextlib" [];
	"langsmith.client" -> "datetime" [];
	"langsmith.client" -> "functools" [];
	"langsmith.client" -> "importlib" [];
	"langsmith.client" -> "io" [];
	"langsmith.client" -> "itertools" [];
	"langsmith.client" -> "json" [];
	"langsmith.client" -> "logging" [];
	"langsmith.client" -> "os" [];
	"langsmith.client" -> "random" [];
	"langsmith.client" -> "threading" [];
	"langsmith.client" -> "time" [];
	"langsmith.client" -> "traceback" [];
	"langsmith.client" -> "typing" [];
	"langsmith.client" -> "uuid" [];
	"langsmith.client" -> "warnings" [];
	"langsmith.client" -> "weakref" [];
	"langsmith.client" -> "inspect" [];
	"langsmith.client" -> "pathlib" [];
	"langsmith.client" -> "queue" [];
	"langsmith.client" -> "urllib" [];
	"langsmith.client" -> "requests" [];
	"langsmith.client" -> "requests_toolbelt" [];
	"langsmith.client" -> "typing_extensions" [];
	"langsmith.client" -> "opentelemetry" [];
	"langsmith.client" -> "'opentelemetry.trace'" [];
	"langsmith.client" -> "zoneinfo" [];
	"langsmith.client" -> "'opentelemetry.sdk'" [];
	"langsmith.client" -> "pandas" [];
	"langsmith.client" -> "langsmith_pyo3" [];
	"langsmith.client" -> "langchain_openai" [];
	"langsmith.client" -> "langchain_anthropic" [];
	"langchain_core.prompts.structured" -> "typing" [];
	"langchain_core.prompts.structured" -> "pydantic" [];
	"langchain_core.prompts.structured" -> "typing_extensions" [];
	"langchain.smith.evaluation.string_run_evaluator" -> "__future__" [];
	"langchain.smith.evaluation.string_run_evaluator" -> "uuid" [];
	"langchain.smith.evaluation.string_run_evaluator" -> "abc" [];
	"langchain.smith.evaluation.string_run_evaluator" -> "typing" [];
	"langchain.smith.evaluation.string_run_evaluator" -> "langsmith" [];
	"langchain.evaluation.schema" -> "__future__" [];
	"langchain.evaluation.schema" -> "logging" [];
	"langchain.evaluation.schema" -> "abc" [];
	"langchain.evaluation.schema" -> "enum" [];
	"langchain.evaluation.schema" -> "typing" [];
	"langchain.evaluation.schema" -> "warnings" [];
	"langchain.evaluation.string_distance.base" -> "enum" [];
	"langchain.evaluation.string_distance.base" -> "typing" [];
	"langchain.evaluation.string_distance.base" -> "pydantic" [];
	"langchain.evaluation.string_distance.base" -> "rapidfuzz" [];
	"langchain.evaluation.scoring.eval_chain" -> "__future__" [];
	"langchain.evaluation.scoring.eval_chain" -> "logging" [];
	"langchain.evaluation.scoring.eval_chain" -> "re" [];
	"langchain.evaluation.scoring.eval_chain" -> "typing" [];
	"langchain.evaluation.scoring.eval_chain" -> "pydantic" [];
	"langchain.evaluation.criteria.eval_chain" -> "__future__" [];
	"langchain.evaluation.criteria.eval_chain" -> "re" [];
	"langchain.evaluation.criteria.eval_chain" -> "enum" [];
	"langchain.evaluation.criteria.eval_chain" -> "typing" [];
	"langchain.evaluation.criteria.eval_chain" -> "pydantic" [];
	"langchain.chains.constitutional_ai.models" -> "pydantic" [];
	"langchain.evaluation.regex_match.base" -> "re" [];
	"langchain.evaluation.regex_match.base" -> "typing" [];
	"langchain.evaluation.qa.generate_chain" -> "__future__" [];
	"langchain.evaluation.qa.generate_chain" -> "typing" [];
	"langchain.evaluation.qa.generate_chain" -> "pydantic" [];
	"langchain.evaluation.qa.eval_chain" -> "__future__" [];
	"langchain.evaluation.qa.eval_chain" -> "re" [];
	"langchain.evaluation.qa.eval_chain" -> "string" [];
	"langchain.evaluation.qa.eval_chain" -> "typing" [];
	"langchain.evaluation.qa.eval_chain" -> "pydantic" [];
	"langchain.evaluation.parsing.json_schema" -> "typing" [];
	"langchain.evaluation.parsing.json_schema" -> "jsonschema" [];
	"langchain.evaluation.parsing.json_distance" -> "json" [];
	"langchain.evaluation.parsing.json_distance" -> "typing" [];
	"langchain.evaluation.parsing.json_distance" -> "rapidfuzz" [];
	"langchain.evaluation.parsing.base" -> "json" [];
	"langchain.evaluation.parsing.base" -> "operator" [];
	"langchain.evaluation.parsing.base" -> "typing" [];
	"langchain.evaluation.loading" -> "typing" [];
	"langchain.evaluation.loading" -> "datasets" [];
	"langchain.evaluation.loading" -> "langchain_openai" [];
	"langchain.evaluation.embedding_distance.base" -> "functools" [];
	"langchain.evaluation.embedding_distance.base" -> "logging" [];
	"langchain.evaluation.embedding_distance.base" -> "enum" [];
	"langchain.evaluation.embedding_distance.base" -> "importlib" [];
	"langchain.evaluation.embedding_distance.base" -> "typing" [];
	"langchain.evaluation.embedding_distance.base" -> "pydantic" [];
	"langchain.evaluation.embedding_distance.base" -> "numpy" [];
	"langchain.evaluation.embedding_distance.base" -> "langchain_openai" [];
	"langchain.evaluation.embedding_distance.base" -> "tiktoken" [];
	"langchain.evaluation.comparison.eval_chain" -> "__future__" [];
	"langchain.evaluation.comparison.eval_chain" -> "logging" [];
	"langchain.evaluation.comparison.eval_chain" -> "re" [];
	"langchain.evaluation.comparison.eval_chain" -> "typing" [];
	"langchain.evaluation.comparison.eval_chain" -> "pydantic" [];
	"langchain.evaluation.agents.trajectory_eval_chain" -> "re" [];
	"langchain.evaluation.agents.trajectory_eval_chain" -> "typing" [];
	"langchain.evaluation.agents.trajectory_eval_chain" -> "pydantic" [];
	"langchain.evaluation.exact_match.base" -> "string" [];
	"langchain.evaluation.exact_match.base" -> "typing" [];
	"langchain.smith.evaluation.runner_utils" -> "__future__" [];
	"langchain.smith.evaluation.runner_utils" -> "dataclasses" [];
	"langchain.smith.evaluation.runner_utils" -> "functools" [];
	"langchain.smith.evaluation.runner_utils" -> "inspect" [];
	"langchain.smith.evaluation.runner_utils" -> "logging" [];
	"langchain.smith.evaluation.runner_utils" -> "uuid" [];
	"langchain.smith.evaluation.runner_utils" -> "datetime" [];
	"langchain.smith.evaluation.runner_utils" -> "typing" [];
	"langchain.smith.evaluation.runner_utils" -> "requests" [];
	"langchain.smith.evaluation.runner_utils" -> "typing_extensions" [];
	"langchain.smith.evaluation.runner_utils" -> "pandas" [];
	"langchain.smith.evaluation.runner_utils" -> "IPython" [];
	"langchain.smith.evaluation.progress" -> "threading" [];
	"langchain.smith.evaluation.progress" -> "typing" [];
	"langchain.smith.evaluation.progress" -> "uuid" [];
	"langchain.smith.evaluation.name_generation" -> "random" [];
	"langchain.smith.evaluation.config" -> "typing" [];
	"langchain.smith.evaluation.config" -> "langsmith" [];
	"langchain.smith.evaluation.config" -> "pydantic" [];
	"langsmith.evaluation._runner" -> "__future__" [];
	"langsmith.evaluation._runner" -> "ast" [];
	"langsmith.evaluation._runner" -> "collections" [];
	"langsmith.evaluation._runner" -> "functools" [];
	"langsmith.evaluation._runner" -> "inspect" [];
	"langsmith.evaluation._runner" -> "io" [];
	"langsmith.evaluation._runner" -> "itertools" [];
	"langsmith.evaluation._runner" -> "logging" [];
	"langsmith.evaluation._runner" -> "pathlib" [];
	"langsmith.evaluation._runner" -> "queue" [];
	"langsmith.evaluation._runner" -> "random" [];
	"langsmith.evaluation._runner" -> "textwrap" [];
	"langsmith.evaluation._runner" -> "threading" [];
	"langsmith.evaluation._runner" -> "uuid" [];
	"langsmith.evaluation._runner" -> "contextvars" [];
	"langsmith.evaluation._runner" -> "typing" [];
	"langsmith.evaluation._runner" -> "typing_extensions" [];
	"langsmith.evaluation._runner" -> "langsmith" [];
	"langsmith.evaluation._runner" -> "pandas" [];
	"langsmith.evaluation._name_generation" -> "random" [];
	"langsmith.evaluation.integrations._langchain" -> "__future__" [];
	"langsmith.evaluation.integrations._langchain" -> "typing" [];
	"langsmith.evaluation._arunner" -> "__future__" [];
	"langsmith.evaluation._arunner" -> "asyncio" [];
	"langsmith.evaluation._arunner" -> "io" [];
	"langsmith.evaluation._arunner" -> "logging" [];
	"langsmith.evaluation._arunner" -> "pathlib" [];
	"langsmith.evaluation._arunner" -> "uuid" [];
	"langsmith.evaluation._arunner" -> "typing" [];
	"langsmith.evaluation._arunner" -> "langsmith" [];
	"langsmith.evaluation._arunner" -> "pandas" [];
	"langsmith.evaluation" -> "typing" [];
	"langsmith.evaluation.string_evaluator" -> "uuid" [];
	"langsmith.evaluation.string_evaluator" -> "typing" [];
	"langsmith.evaluation.string_evaluator" -> "pydantic" [];
	"langsmith._internal.otel._otel_exporter" -> "__future__" [];
	"langsmith._internal.otel._otel_exporter" -> "datetime" [];
	"langsmith._internal.otel._otel_exporter" -> "logging" [];
	"langsmith._internal.otel._otel_exporter" -> "uuid" [];
	"langsmith._internal.otel._otel_exporter" -> "warnings" [];
	"langsmith._internal.otel._otel_exporter" -> "typing" [];
	"langsmith._internal.otel._otel_exporter" -> "langsmith" [];
	"langsmith._internal.otel._otel_exporter" -> "opentelemetry" [];
	"langsmith._internal.otel._otel_exporter" -> "'opentelemetry.context'" [];
	"langsmith._internal.otel._otel_exporter" -> "'opentelemetry.trace'" [];
	"langsmith._internal.otel._otel_client" -> "os" [];
	"langsmith._internal.otel._otel_client" -> "langsmith" [];
	"langsmith._internal.otel._otel_client" -> "'opentelemetry.exporter'" [];
	"langsmith._internal.otel._otel_client" -> "'opentelemetry.sdk'" [];
	"langsmith._internal._serde" -> "__future__" [];
	"langsmith._internal._serde" -> "base64" [];
	"langsmith._internal._serde" -> "collections" [];
	"langsmith._internal._serde" -> "datetime" [];
	"langsmith._internal._serde" -> "decimal" [];
	"langsmith._internal._serde" -> "ipaddress" [];
	"langsmith._internal._serde" -> "json" [];
	"langsmith._internal._serde" -> "logging" [];
	"langsmith._internal._serde" -> "pathlib" [];
	"langsmith._internal._serde" -> "re" [];
	"langsmith._internal._serde" -> "uuid" [];
	"langsmith._internal._serde" -> "typing" [];
	"langsmith._internal._serde" -> "zoneinfo" [];
	"langsmith._internal._operations" -> "__future__" [];
	"langsmith._internal._operations" -> "itertools" [];
	"langsmith._internal._operations" -> "logging" [];
	"langsmith._internal._operations" -> "os" [];
	"langsmith._internal._operations" -> "uuid" [];
	"langsmith._internal._operations" -> "io" [];
	"langsmith._internal._operations" -> "typing" [];
	"langsmith._internal._operations" -> "langsmith" [];
	"langsmith._internal._multipart" -> "__future__" [];
	"langsmith._internal._multipart" -> "io" [];
	"langsmith._internal._multipart" -> "typing" [];
	"langsmith._internal._constants" -> "uuid" [];
	"langsmith._internal._compressed_traces" -> "io" [];
	"langsmith._internal._compressed_traces" -> "threading" [];
	"langsmith._internal._compressed_traces" -> "zstandard" [];
	"langsmith._internal._compressed_traces" -> "langsmith" [];
	"langsmith._internal._beta_decorator" -> "functools" [];
	"langsmith._internal._beta_decorator" -> "warnings" [];
	"langsmith._internal._beta_decorator" -> "typing" [];
	"langsmith._internal._background_thread" -> "__future__" [];
	"langsmith._internal._background_thread" -> "functools" [];
	"langsmith._internal._background_thread" -> "io" [];
	"langsmith._internal._background_thread" -> "logging" [];
	"langsmith._internal._background_thread" -> "sys" [];
	"langsmith._internal._background_thread" -> "threading" [];
	"langsmith._internal._background_thread" -> "time" [];
	"langsmith._internal._background_thread" -> "weakref" [];
	"langsmith._internal._background_thread" -> "multiprocessing" [];
	"langsmith._internal._background_thread" -> "queue" [];
	"langsmith._internal._background_thread" -> "typing" [];
	"langsmith._internal._background_thread" -> "langsmith" [];
	"langsmith._internal._background_thread" -> "'opentelemetry.context'" [];
	"langsmith.evaluation.evaluator" -> "__future__" [];
	"langsmith.evaluation.evaluator" -> "asyncio" [];
	"langsmith.evaluation.evaluator" -> "inspect" [];
	"langsmith.evaluation.evaluator" -> "uuid" [];
	"langsmith.evaluation.evaluator" -> "abc" [];
	"langsmith.evaluation.evaluator" -> "typing" [];
	"langsmith.evaluation.evaluator" -> "typing_extensions" [];
	"langsmith.evaluation.evaluator" -> "langsmith" [];
	"langsmith.evaluation.evaluator" -> "pydantic" [];
	"langsmith.evaluation.evaluator" -> "logging" [];
	"langsmith.evaluation.evaluator" -> "functools" [];
	"langsmith" -> "typing" [];
	"langsmith.testing._internal" -> "__future__" [];
	"langsmith.testing._internal" -> "atexit" [];
	"langsmith.testing._internal" -> "contextlib" [];
	"langsmith.testing._internal" -> "contextvars" [];
	"langsmith.testing._internal" -> "datetime" [];
	"langsmith.testing._internal" -> "functools" [];
	"langsmith.testing._internal" -> "importlib" [];
	"langsmith.testing._internal" -> "inspect" [];
	"langsmith.testing._internal" -> "logging" [];
	"langsmith.testing._internal" -> "os" [];
	"langsmith.testing._internal" -> "threading" [];
	"langsmith.testing._internal" -> "time" [];
	"langsmith.testing._internal" -> "uuid" [];
	"langsmith.testing._internal" -> "warnings" [];
	"langsmith.testing._internal" -> "pathlib" [];
	"langsmith.testing._internal" -> "typing" [];
	"langsmith.testing._internal" -> "typing_extensions" [];
	"langsmith.testing._internal" -> "langsmith" [];
	"langsmith.testing._internal" -> "pytest" [];
	"langsmith.async_client" -> "__future__" [];
	"langsmith.async_client" -> "asyncio" [];
	"langsmith.async_client" -> "contextlib" [];
	"langsmith.async_client" -> "datetime" [];
	"langsmith.async_client" -> "json" [];
	"langsmith.async_client" -> "uuid" [];
	"langsmith.async_client" -> "typing" [];
	"langsmith._expect" -> "__future__" [];
	"langsmith._expect" -> "atexit" [];
	"langsmith._expect" -> "inspect" [];
	"langsmith._expect" -> "typing" [];
	"langsmith._internal._embedding_distance" -> "__future__" [];
	"langsmith._internal._embedding_distance" -> "logging" [];
	"langsmith._internal._embedding_distance" -> "typing" [];
	"langsmith._internal._embedding_distance" -> "typing_extensions" [];
	"langsmith._internal._embedding_distance" -> "numpy" [];
	"langsmith._internal._embedding_distance" -> "simsimd" [];
	"langsmith._internal._embedding_distance" -> "openai" [];
	"langsmith._internal._edit_distance" -> "typing" [];
	"langsmith._internal._edit_distance" -> "typing_extensions" [];
	"langsmith._internal._edit_distance" -> "rapidfuzz" [];
	"langchain_core.tracers.langchain" -> "__future__" [];
	"langchain_core.tracers.langchain" -> "logging" [];
	"langchain_core.tracers.langchain" -> "warnings" [];
	"langchain_core.tracers.langchain" -> "datetime" [];
	"langchain_core.tracers.langchain" -> "typing" [];
	"langchain_core.tracers.langchain" -> "uuid" [];
	"langchain_core.tracers.langchain" -> "langsmith" [];
	"langchain_core.tracers.langchain" -> "pydantic" [];
	"langchain_core.tracers.langchain" -> "tenacity" [];
	"langchain_core.tracers.langchain" -> "typing_extensions" [];
	"langchain_core.tracers.base" -> "__future__" [];
	"langchain_core.tracers.base" -> "asyncio" [];
	"langchain_core.tracers.base" -> "logging" [];
	"langchain_core.tracers.base" -> "abc" [];
	"langchain_core.tracers.base" -> "typing" [];
	"langchain_core.tracers.base" -> "typing_extensions" [];
	"langchain_core.tracers.base" -> "uuid" [];
	"langchain_core.tracers.base" -> "tenacity" [];
	"langchain_core.tracers.core" -> "__future__" [];
	"langchain_core.tracers.core" -> "logging" [];
	"langchain_core.tracers.core" -> "sys" [];
	"langchain_core.tracers.core" -> "traceback" [];
	"langchain_core.tracers.core" -> "abc" [];
	"langchain_core.tracers.core" -> "datetime" [];
	"langchain_core.tracers.core" -> "typing" [];
	"langchain_core.tracers.core" -> "uuid" [];
	"langchain_core.tracers.core" -> "tenacity" [];
	"langchain_core.tracers.event_stream" -> "__future__" [];
	"langchain_core.tracers.event_stream" -> "asyncio" [];
	"langchain_core.tracers.event_stream" -> "contextlib" [];
	"langchain_core.tracers.event_stream" -> "logging" [];
	"langchain_core.tracers.event_stream" -> "typing" [];
	"langchain_core.tracers.event_stream" -> "uuid" [];
	"langchain_core.tracers.event_stream" -> "typing_extensions" [];
	"langchain_core.tracers.memory_stream" -> "asyncio" [];
	"langchain_core.tracers.memory_stream" -> "typing" [];
	"langchain_core.runnables.passthrough" -> "__future__" [];
	"langchain_core.runnables.passthrough" -> "asyncio" [];
	"langchain_core.runnables.passthrough" -> "inspect" [];
	"langchain_core.runnables.passthrough" -> "threading" [];
	"langchain_core.runnables.passthrough" -> "typing" [];
	"langchain_core.runnables.passthrough" -> "pydantic" [];
	"langchain_core.runnables.passthrough" -> "typing_extensions" [];
	"langchain_core.tracers.schemas" -> "__future__" [];
	"langchain_core.tracers.schemas" -> "datetime" [];
	"langchain_core.tracers.schemas" -> "warnings" [];
	"langchain_core.tracers.schemas" -> "typing" [];
	"langchain_core.tracers.schemas" -> "uuid" [];
	"langchain_core.tracers.schemas" -> "langsmith" [];
	"langchain_core.tracers.schemas" -> "pydantic" [];
	"langchain_core.tracers.root_listeners" -> "typing" [];
	"langchain_core.tracers.root_listeners" -> "uuid" [];
	"langchain_core.tracers.log_stream" -> "__future__" [];
	"langchain_core.tracers.log_stream" -> "asyncio" [];
	"langchain_core.tracers.log_stream" -> "contextlib" [];
	"langchain_core.tracers.log_stream" -> "copy" [];
	"langchain_core.tracers.log_stream" -> "threading" [];
	"langchain_core.tracers.log_stream" -> "collections" [];
	"langchain_core.tracers.log_stream" -> "typing" [];
	"langchain_core.tracers.log_stream" -> "jsonpatch" [];
	"langchain_core.tracers.log_stream" -> "typing_extensions" [];
	"langchain_core.tracers.log_stream" -> "uuid" [];
	"langchain_core.tracers.log_stream" -> "pprint" [];
	"langchain_core.tools" -> "__future__" [];
	"langchain_core.tools" -> "typing" [];
	"langchain_core.runnables.schema" -> "__future__" [];
	"langchain_core.runnables.schema" -> "typing" [];
	"langchain_core.runnables.schema" -> "typing_extensions" [];
	"langchain_core.runnables.retry" -> "typing" [];
	"langchain_core.runnables.retry" -> "tenacity" [];
	"langchain_core.runnables.retry" -> "typing_extensions" [];
	"langchain_core.runnables.fallbacks" -> "asyncio" [];
	"langchain_core.runnables.fallbacks" -> "inspect" [];
	"langchain_core.runnables.fallbacks" -> "typing" [];
	"langchain_core.runnables.fallbacks" -> "functools" [];
	"langchain_core.runnables.fallbacks" -> "pydantic" [];
	"langchain_core.runnables.fallbacks" -> "typing_extensions" [];
	"langchain_core.prompts.base" -> "__future__" [];
	"langchain_core.prompts.base" -> "contextlib" [];
	"langchain_core.prompts.base" -> "json" [];
	"langchain_core.prompts.base" -> "typing" [];
	"langchain_core.prompts.base" -> "abc" [];
	"langchain_core.prompts.base" -> "functools" [];
	"langchain_core.prompts.base" -> "pathlib" [];
	"langchain_core.prompts.base" -> "yaml" [];
	"langchain_core.prompts.base" -> "pydantic" [];
	"langchain_core.prompts.base" -> "typing_extensions" [];
	"langchain_core.callbacks.manager" -> "__future__" [];
	"langchain_core.callbacks.manager" -> "asyncio" [];
	"langchain_core.callbacks.manager" -> "atexit" [];
	"langchain_core.callbacks.manager" -> "functools" [];
	"langchain_core.callbacks.manager" -> "logging" [];
	"langchain_core.callbacks.manager" -> "uuid" [];
	"langchain_core.callbacks.manager" -> "abc" [];
	"langchain_core.callbacks.manager" -> "contextlib" [];
	"langchain_core.callbacks.manager" -> "contextvars" [];
	"langchain_core.callbacks.manager" -> "typing" [];
	"langchain_core.callbacks.manager" -> "typing_extensions" [];
	"langchain_core.callbacks.manager" -> "tenacity" [];
	"langchain_core.utils.pydantic" -> "__future__" [];
	"langchain_core.utils.pydantic" -> "inspect" [];
	"langchain_core.utils.pydantic" -> "textwrap" [];
	"langchain_core.utils.pydantic" -> "warnings" [];
	"langchain_core.utils.pydantic" -> "contextlib" [];
	"langchain_core.utils.pydantic" -> "functools" [];
	"langchain_core.utils.pydantic" -> "types" [];
	"langchain_core.utils.pydantic" -> "typing" [];
	"langchain_core.utils.pydantic" -> "pydantic" [];
	"langchain_core.utils.pydantic" -> "packaging" [];
	"langchain_core.utils.pydantic" -> "typing_extensions" [];
	"langchain_core.utils.pydantic" -> "pydantic_core" [];
	"langchain_core.utils.iter" -> "collections" [];
	"langchain_core.utils.iter" -> "contextlib" [];
	"langchain_core.utils.iter" -> "itertools" [];
	"langchain_core.utils.iter" -> "types" [];
	"langchain_core.utils.iter" -> "typing" [];
	"langchain_core.utils.iter" -> "typing_extensions" [];
	"langchain_core.utils.aiter" -> "collections" [];
	"langchain_core.utils.aiter" -> "contextlib" [];
	"langchain_core.utils.aiter" -> "types" [];
	"langchain_core.utils.aiter" -> "typing" [];
	"langchain_core.utils.aiter" -> "typing_extensions" [];
	"langchain_core.runnables.utils" -> "__future__" [];
	"langchain_core.runnables.utils" -> "ast" [];
	"langchain_core.runnables.utils" -> "asyncio" [];
	"langchain_core.runnables.utils" -> "inspect" [];
	"langchain_core.runnables.utils" -> "textwrap" [];
	"langchain_core.runnables.utils" -> "contextvars" [];
	"langchain_core.runnables.utils" -> "functools" [];
	"langchain_core.runnables.utils" -> "itertools" [];
	"langchain_core.runnables.utils" -> "typing" [];
	"langchain_core.runnables.utils" -> "typing_extensions" [];
	"langchain_core.runnables.graph" -> "__future__" [];
	"langchain_core.runnables.graph" -> "inspect" [];
	"langchain_core.runnables.graph" -> "collections" [];
	"langchain_core.runnables.graph" -> "dataclasses" [];
	"langchain_core.runnables.graph" -> "enum" [];
	"langchain_core.runnables.graph" -> "typing" [];
	"langchain_core.runnables.graph" -> "uuid" [];
	"langchain_core.runnables.graph" -> "pydantic" [];
	"langchain_core.runnables.graph_mermaid" -> "asyncio" [];
	"langchain_core.runnables.graph_mermaid" -> "base64" [];
	"langchain_core.runnables.graph_mermaid" -> "random" [];
	"langchain_core.runnables.graph_mermaid" -> "re" [];
	"langchain_core.runnables.graph_mermaid" -> "time" [];
	"langchain_core.runnables.graph_mermaid" -> "dataclasses" [];
	"langchain_core.runnables.graph_mermaid" -> "pathlib" [];
	"langchain_core.runnables.graph_mermaid" -> "typing" [];
	"langchain_core.runnables.graph_mermaid" -> "yaml" [];
	"langchain_core.runnables.graph_mermaid" -> "pyppeteer" [];
	"langchain_core.runnables.graph_mermaid" -> "requests" [];
	"langchain_core.runnables.graph_png" -> "typing" [];
	"langchain_core.runnables.graph_png" -> "pygraphviz" [];
	"langchain_core.runnables.graph_ascii" -> "math" [];
	"langchain_core.runnables.graph_ascii" -> "os" [];
	"langchain_core.runnables.graph_ascii" -> "typing" [];
	"langchain_core.runnables.graph_ascii" -> "grandalf" [];
	"langchain_core.runnables.graph_ascii" -> "'grandalf.layouts'" [];
	"langchain_core.runnables.graph_ascii" -> "'grandalf.routing'" [];
	"langchain_core.runnables.config" -> "__future__" [];
	"langchain_core.runnables.config" -> "asyncio" [];
	"langchain_core.runnables.config" -> "uuid" [];
	"langchain_core.runnables.config" -> "warnings" [];
	"langchain_core.runnables.config" -> "contextlib" [];
	"langchain_core.runnables.config" -> "contextvars" [];
	"langchain_core.runnables.config" -> "functools" [];
	"langchain_core.runnables.config" -> "typing" [];
	"langchain_core.runnables.config" -> "typing_extensions" [];
	"langchain_core.runnables" -> "typing" [];
	"langchain_core.runnables.router" -> "__future__" [];
	"langchain_core.runnables.router" -> "itertools" [];
	"langchain_core.runnables.router" -> "typing" [];
	"langchain_core.runnables.router" -> "pydantic" [];
	"langchain_core.runnables.router" -> "typing_extensions" [];
	"langchain_core.runnables.history" -> "__future__" [];
	"langchain_core.runnables.history" -> "inspect" [];
	"langchain_core.runnables.history" -> "types" [];
	"langchain_core.runnables.history" -> "typing" [];
	"langchain_core.runnables.history" -> "pydantic" [];
	"langchain_core.runnables.history" -> "typing_extensions" [];
	"langchain_core.runnables.branch" -> "typing" [];
	"langchain_core.runnables.branch" -> "pydantic" [];
	"langchain_core.runnables.branch" -> "typing_extensions" [];
	"langchain_core.load.serializable" -> "contextlib" [];
	"langchain_core.load.serializable" -> "logging" [];
	"langchain_core.load.serializable" -> "abc" [];
	"langchain_core.load.serializable" -> "typing" [];
	"langchain_core.load.serializable" -> "pydantic" [];
	"langchain_core.load.serializable" -> "typing_extensions" [];
	"langchain_core._api.beta_decorator" -> "contextlib" [];
	"langchain_core._api.beta_decorator" -> "functools" [];
	"langchain_core._api.beta_decorator" -> "inspect" [];
	"langchain_core._api.beta_decorator" -> "warnings" [];
	"langchain_core._api.beta_decorator" -> "typing" [];
	"langchain_core._api" -> "typing" [];
	"langchain_core.prompt_values" -> "__future__" [];
	"langchain_core.prompt_values" -> "abc" [];
	"langchain_core.prompt_values" -> "typing" [];
	"langchain_core.prompt_values" -> "typing_extensions" [];
	"langchain_core.language_models" -> "typing" [];
	"langchain_core.language_models.fake_chat_models" -> "asyncio" [];
	"langchain_core.language_models.fake_chat_models" -> "re" [];
	"langchain_core.language_models.fake_chat_models" -> "time" [];
	"langchain_core.language_models.fake_chat_models" -> "typing" [];
	"langchain_core.language_models.fake_chat_models" -> "typing_extensions" [];
	"langchain_core.language_models.fake" -> "asyncio" [];
	"langchain_core.language_models.fake" -> "time" [];
	"langchain_core.language_models.fake" -> "typing" [];
	"langchain_core.language_models.fake" -> "typing_extensions" [];
	"langchain_text_splitters.jsx" -> "re" [];
	"langchain_text_splitters.jsx" -> "typing" [];
	"langchain_core.exceptions" -> "enum" [];
	"langchain_core.exceptions" -> "typing" [];
	"pydantic" -> "typing" [];
	"pydantic" -> "importlib" [];
	"pydantic" -> "warnings" [];
	"pydantic" -> "pydantic_core" [];
	"pydantic.v1.mypy" -> "sys" [];
	"pydantic.v1.mypy" -> "configparser" [];
	"pydantic.v1.mypy" -> "typing" [];
	"pydantic.v1.mypy" -> "'mypy.errorcodes'" [];
	"pydantic.v1.mypy" -> "'mypy.nodes'" [];
	"pydantic.v1.mypy" -> "'mypy.options'" [];
	"pydantic.v1.mypy" -> "'mypy.plugin'" [];
	"pydantic.v1.mypy" -> "'mypy.plugins'" [];
	"pydantic.v1.mypy" -> "'mypy.semanal'" [];
	"pydantic.v1.mypy" -> "'mypy.server'" [];
	"pydantic.v1.mypy" -> "'mypy.types'" [];
	"pydantic.v1.mypy" -> "'mypy.typevars'" [];
	"pydantic.v1.mypy" -> "'mypy.util'" [];
	"pydantic.v1.mypy" -> "'mypy.version'" [];
	"pydantic.v1.mypy" -> "tomllib" [];
	"pydantic.v1.mypy" -> "toml" [];
	"pydantic.v1.mypy" -> "warnings" [];
	"pydantic.v1.generics" -> "sys" [];
	"pydantic.v1.generics" -> "types" [];
	"pydantic.v1.generics" -> "typing" [];
	"pydantic.v1.generics" -> "weakref" [];
	"pydantic.v1.generics" -> "typing_extensions" [];
	"pydantic.v1._hypothesis_plugin" -> "contextlib" [];
	"pydantic.v1._hypothesis_plugin" -> "datetime" [];
	"pydantic.v1._hypothesis_plugin" -> "ipaddress" [];
	"pydantic.v1._hypothesis_plugin" -> "json" [];
	"pydantic.v1._hypothesis_plugin" -> "math" [];
	"pydantic.v1._hypothesis_plugin" -> "fractions" [];
	"pydantic.v1._hypothesis_plugin" -> "typing" [];
	"pydantic.v1._hypothesis_plugin" -> "hypothesis" [];
	"pydantic.v1._hypothesis_plugin" -> "pydantic" [];
	"pydantic.v1._hypothesis_plugin" -> "email_validator" [];
	"pydantic.mypy" -> "__future__" [];
	"pydantic.mypy" -> "sys" [];
	"pydantic.mypy" -> "configparser" [];
	"pydantic.mypy" -> "typing" [];
	"pydantic.mypy" -> "mypy" [];
	"pydantic.mypy" -> "'mypy.expandtype'" [];
	"pydantic.mypy" -> "'mypy.nodes'" [];
	"pydantic.mypy" -> "'mypy.options'" [];
	"pydantic.mypy" -> "'mypy.plugin'" [];
	"pydantic.mypy" -> "'mypy.plugins'" [];
	"pydantic.mypy" -> "'mypy.semanal'" [];
	"pydantic.mypy" -> "'mypy.server'" [];
	"pydantic.mypy" -> "'mypy.state'" [];
	"pydantic.mypy" -> "'mypy.type_visitor'" [];
	"pydantic.mypy" -> "'mypy.typeops'" [];
	"pydantic.mypy" -> "'mypy.types'" [];
	"pydantic.mypy" -> "'mypy.typevars'" [];
	"pydantic.mypy" -> "'mypy.util'" [];
	"pydantic.mypy" -> "'mypy.version'" [];
	"pydantic.mypy" -> "tomllib" [];
	"pydantic.mypy" -> "warnings" [];
	"pydantic.experimental.pipeline" -> "__future__" [];
	"pydantic.experimental.pipeline" -> "datetime" [];
	"pydantic.experimental.pipeline" -> "operator" [];
	"pydantic.experimental.pipeline" -> "re" [];
	"pydantic.experimental.pipeline" -> "sys" [];
	"pydantic.experimental.pipeline" -> "collections" [];
	"pydantic.experimental.pipeline" -> "dataclasses" [];
	"pydantic.experimental.pipeline" -> "decimal" [];
	"pydantic.experimental.pipeline" -> "functools" [];
	"pydantic.experimental.pipeline" -> "typing" [];
	"pydantic.experimental.pipeline" -> "annotated_types" [];
	"pydantic.experimental.pipeline" -> "pydantic_core" [];
	"pydantic.experimental.pipeline" -> "pydantic" [];
	"pydantic.experimental.pipeline" -> "types" [];
	"pydantic.experimental.pipeline" -> "inspect" [];
	"pydantic.experimental.arguments_schema" -> "__future__" [];
	"pydantic.experimental.arguments_schema" -> "typing" [];
	"pydantic.experimental.arguments_schema" -> "pydantic_core" [];
	"pydantic.experimental.arguments_schema" -> "pydantic" [];
	"pydantic.experimental" -> "warnings" [];
	"pydantic.deprecated.decorator" -> "warnings" [];
	"pydantic.deprecated.decorator" -> "functools" [];
	"pydantic.deprecated.decorator" -> "typing" [];
	"pydantic.deprecated.decorator" -> "typing_extensions" [];
	"pydantic.deprecated.decorator" -> "inspect" [];
	"pydantic.alias_generators" -> "re" [];
	"pydantic.deprecated.tools" -> "__future__" [];
	"pydantic.deprecated.tools" -> "json" [];
	"pydantic.deprecated.tools" -> "warnings" [];
	"pydantic.deprecated.tools" -> "typing" [];
	"pydantic.deprecated.tools" -> "typing_extensions" [];
	"pydantic.deprecated.config" -> "__future__" [];
	"pydantic.deprecated.config" -> "warnings" [];
	"pydantic.deprecated.config" -> "typing" [];
	"pydantic.deprecated.config" -> "typing_extensions" [];
	"pydantic.deprecated.class_validators" -> "__future__" [];
	"pydantic.deprecated.class_validators" -> "functools" [];
	"pydantic.deprecated.class_validators" -> "types" [];
	"pydantic.deprecated.class_validators" -> "typing" [];
	"pydantic.deprecated.class_validators" -> "warnings" [];
	"pydantic.deprecated.class_validators" -> "typing_extensions" [];
	"pydantic.validate_call_decorator" -> "__future__" [];
	"pydantic.validate_call_decorator" -> "inspect" [];
	"pydantic.validate_call_decorator" -> "functools" [];
	"pydantic.validate_call_decorator" -> "types" [];
	"pydantic.validate_call_decorator" -> "typing" [];
	"pydantic.functional_serializers" -> "__future__" [];
	"pydantic.functional_serializers" -> "dataclasses" [];
	"pydantic.functional_serializers" -> "functools" [];
	"pydantic.functional_serializers" -> "typing" [];
	"pydantic.functional_serializers" -> "pydantic_core" [];
	"pydantic.functional_serializers" -> "typing_extensions" [];
	"langchain_core.messages.tool" -> "json" [];
	"langchain_core.messages.tool" -> "typing" [];
	"langchain_core.messages.tool" -> "uuid" [];
	"langchain_core.messages.tool" -> "pydantic" [];
	"langchain_core.messages.tool" -> "typing_extensions" [];
	"langchain_core.messages.system" -> "typing" [];
	"langchain_core.messages.modifier" -> "typing" [];
	"langchain_core.messages.human" -> "typing" [];
	"langchain_core.messages.function" -> "typing" [];
	"langchain_core.messages.function" -> "typing_extensions" [];
	"langchain_core.messages.content_blocks" -> "warnings" [];
	"langchain_core.messages.content_blocks" -> "typing" [];
	"langchain_core.messages.content_blocks" -> "pydantic" [];
	"langchain_core.messages.content_blocks" -> "typing_extensions" [];
	"langchain_core.messages.chat" -> "typing" [];
	"langchain_core.messages.chat" -> "typing_extensions" [];
	"langchain_core.messages.base" -> "__future__" [];
	"langchain_core.messages.base" -> "typing" [];
	"langchain_core.messages.base" -> "pydantic" [];
	"langchain_core.messages.ai" -> "json" [];
	"langchain_core.messages.ai" -> "logging" [];
	"langchain_core.messages.ai" -> "operator" [];
	"langchain_core.messages.ai" -> "typing" [];
	"langchain_core.messages.ai" -> "pydantic" [];
	"langchain_core.messages.ai" -> "typing_extensions" [];
	"langchain_core.utils.usage" -> "typing" [];
	"langchain_core._import_utils" -> "importlib" [];
	"langchain_core._import_utils" -> "typing" [];
	"langchain_google_genai.llms" -> "__future__" [];
	"langchain_google_genai.llms" -> "logging" [];
	"langchain_google_genai.llms" -> "difflib" [];
	"langchain_google_genai.llms" -> "typing" [];
	"langchain_google_genai.llms" -> "pydantic" [];
	"langchain_google_genai.llms" -> "typing_extensions" [];
	"langchain_google_genai._common" -> "os" [];
	"langchain_google_genai._common" -> "importlib" [];
	"langchain_google_genai._common" -> "typing" [];
	"langchain_google_genai._common" -> "pydantic" [];
	"langchain_google_genai.google_vector_store" -> "asyncio" [];
	"langchain_google_genai.google_vector_store" -> "functools" [];
	"langchain_google_genai.google_vector_store" -> "typing" [];
	"langchain_google_genai.google_vector_store" -> "pydantic" [];
	"google.ai.generativelanguage_v1beta.types.tuned_model" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.tuned_model" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.tuned_model" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.pagers" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.pagers" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.pagers" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.pagers" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.pagers" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.text_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.text_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.text_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.safety" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.safety" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.safety" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.retriever_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.retriever_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.retriever_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.retriever" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.retriever" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.retriever" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.prediction_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.prediction_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.prediction_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.permission_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.permission_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.permission_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.permission" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.permission" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.permission" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.model_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.model_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.model_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.model" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.model" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.model" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.generative_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.generative_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.generative_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.file_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.file_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.file_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.file" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.file" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.file" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.discuss_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.discuss_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.discuss_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.content" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.content" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.content" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.citation" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.citation" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.citation" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.cached_content" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.cached_content" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.cached_content" -> "proto" [];
	"google.ai.generativelanguage_v1beta.types.cache_service" -> "__future__" [];
	"google.ai.generativelanguage_v1beta.types.cache_service" -> "typing" [];
	"google.ai.generativelanguage_v1beta.types.cache_service" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "http" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.text_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.text_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.text_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.text_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "http" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "http" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "http" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "http" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.model_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.model_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.model_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.model_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "http" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "http" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.file_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.file_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.file_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.file_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "http" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.async_client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "http" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "os" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" -> "dataclasses" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" -> "requests" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest_base" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest_base" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest_base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "inspect" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "json" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "pickle" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "warnings" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "grpc" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "proto" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.base" -> "abc" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.base" -> "typing" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.async_client" -> "collections" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.async_client" -> "logging" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.async_client" -> "re" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.async_client" -> "typing" [];
	"langchain_google_genai.genai_aqa" -> "typing" [];
	"langchain_google_genai.genai_aqa" -> "pydantic" [];
	"langchain_google_genai.embeddings" -> "re" [];
	"langchain_google_genai.embeddings" -> "string" [];
	"langchain_google_genai.embeddings" -> "typing" [];
	"langchain_google_genai.embeddings" -> "pydantic" [];
	"langchain_google_genai.embeddings" -> "typing_extensions" [];
	"langchain_google_genai.chat_models" -> "__future__" [];
	"langchain_google_genai.chat_models" -> "asyncio" [];
	"langchain_google_genai.chat_models" -> "base64" [];
	"langchain_google_genai.chat_models" -> "json" [];
	"langchain_google_genai.chat_models" -> "logging" [];
	"langchain_google_genai.chat_models" -> "mimetypes" [];
	"langchain_google_genai.chat_models" -> "uuid" [];
	"langchain_google_genai.chat_models" -> "warnings" [];
	"langchain_google_genai.chat_models" -> "difflib" [];
	"langchain_google_genai.chat_models" -> "operator" [];
	"langchain_google_genai.chat_models" -> "typing" [];
	"langchain_google_genai.chat_models" -> "filetype" [];
	"langchain_google_genai.chat_models" -> "proto" [];
	"langchain_google_genai.chat_models" -> "pydantic" [];
	"langchain_google_genai.chat_models" -> "tenacity" [];
	"langchain_google_genai.chat_models" -> "typing_extensions" [];
	"langchain_google_genai._image_utils" -> "__future__" [];
	"langchain_google_genai._image_utils" -> "base64" [];
	"langchain_google_genai._image_utils" -> "mimetypes" [];
	"langchain_google_genai._image_utils" -> "os" [];
	"langchain_google_genai._image_utils" -> "re" [];
	"langchain_google_genai._image_utils" -> "enum" [];
	"langchain_google_genai._image_utils" -> "typing" [];
	"langchain_google_genai._image_utils" -> "filetype" [];
	"langchain_google_genai._image_utils" -> "requests" [];
	"langchain_google_genai._function_utils" -> "__future__" [];
	"langchain_google_genai._function_utils" -> "collections" [];
	"langchain_google_genai._function_utils" -> "importlib" [];
	"langchain_google_genai._function_utils" -> "json" [];
	"langchain_google_genai._function_utils" -> "logging" [];
	"langchain_google_genai._function_utils" -> "typing" [];
	"langchain_google_genai._function_utils" -> "proto" [];
	"langchain_google_genai._function_utils" -> "pydantic" [];
	"filetype" -> "__future__" [];
	"filetype.match" -> "__future__" [];
	"filetype.utils" -> "pathlib" [];
	"filetype.types" -> "__future__" [];
	"filetype.types.video" -> "__future__" [];
	"filetype.types.isobmff" -> "__future__" [];
	"filetype.types.isobmff" -> "codecs" [];
	"filetype.types.image" -> "__future__" [];
	"filetype.types.font" -> "__future__" [];
	"filetype.types.document" -> "__future__" [];
	"filetype.types.application" -> "__future__" [];
	"filetype.types.audio" -> "__future__" [];
	"filetype.types.archive" -> "__future__" [];
	"filetype.types.archive" -> "struct" [];
	"filetype.helpers" -> "__future__" [];
	"filetype.filetype" -> "__future__" [];
	"langchain_google_genai._genai_extension" -> "datetime" [];
	"langchain_google_genai._genai_extension" -> "logging" [];
	"langchain_google_genai._genai_extension" -> "re" [];
	"langchain_google_genai._genai_extension" -> "dataclasses" [];
	"langchain_google_genai._genai_extension" -> "typing" [];
	"langchain_google_genai._genai_extension" -> "langchain_core" [];
	"dotenv" -> "typing" [];
	"dotenv.main" -> "io" [];
	"dotenv.main" -> "logging" [];
	"dotenv.main" -> "os" [];
	"dotenv.main" -> "pathlib" [];
	"dotenv.main" -> "shutil" [];
	"dotenv.main" -> "sys" [];
	"dotenv.main" -> "tempfile" [];
	"dotenv.main" -> "collections" [];
	"dotenv.main" -> "contextlib" [];
	"dotenv.main" -> "typing" [];
	"dotenv.variables" -> "re" [];
	"dotenv.variables" -> "abc" [];
	"dotenv.variables" -> "typing" [];
	"dotenv.parser" -> "codecs" [];
	"dotenv.parser" -> "re" [];
	"dotenv.parser" -> "typing" [];
	"PIL.Image" -> "__future__" [];
	"PIL.Image" -> "abc" [];
	"PIL.Image" -> "atexit" [];
	"PIL.Image" -> "builtins" [];
	"PIL.Image" -> "io" [];
	"PIL.Image" -> "logging" [];
	"PIL.Image" -> "math" [];
	"PIL.Image" -> "os" [];
	"PIL.Image" -> "re" [];
	"PIL.Image" -> "struct" [];
	"PIL.Image" -> "sys" [];
	"PIL.Image" -> "tempfile" [];
	"PIL.Image" -> "warnings" [];
	"PIL.Image" -> "enum" [];
	"PIL.Image" -> "types" [];
	"PIL.Image" -> "typing" [];
	"PIL.Image" -> "defusedxml" [];
	"PIL.Image" -> "mmap" [];
	"PIL.XpmImagePlugin" -> "__future__" [];
	"PIL.XpmImagePlugin" -> "re" [];
	"PIL.XbmImagePlugin" -> "__future__" [];
	"PIL.XbmImagePlugin" -> "re" [];
	"PIL.XbmImagePlugin" -> "typing" [];
	"PIL.XVThumbImagePlugin" -> "__future__" [];
	"PIL.WmfImagePlugin" -> "__future__" [];
	"PIL.WmfImagePlugin" -> "typing" [];
	"PIL.WebPImagePlugin" -> "__future__" [];
	"PIL.WebPImagePlugin" -> "io" [];
	"PIL.WebPImagePlugin" -> "typing" [];
	"PIL._webp" -> "typing" [];
	"PIL.TgaImagePlugin" -> "__future__" [];
	"PIL.TgaImagePlugin" -> "warnings" [];
	"PIL.TgaImagePlugin" -> "typing" [];
	"PIL.SunImagePlugin" -> "__future__" [];
	"PIL.SpiderImagePlugin" -> "__future__" [];
	"PIL.SpiderImagePlugin" -> "os" [];
	"PIL.SpiderImagePlugin" -> "struct" [];
	"PIL.SpiderImagePlugin" -> "sys" [];
	"PIL.SpiderImagePlugin" -> "typing" [];
	"PIL.ImageTk" -> "__future__" [];
	"PIL.ImageTk" -> "io" [];
	"PIL.ImageTk" -> "typing" [];
	"PIL._imagingtk" -> "typing" [];
	"PIL.SgiImagePlugin" -> "__future__" [];
	"PIL.SgiImagePlugin" -> "os" [];
	"PIL.SgiImagePlugin" -> "struct" [];
	"PIL.SgiImagePlugin" -> "typing" [];
	"PIL.QoiImagePlugin" -> "__future__" [];
	"PIL.QoiImagePlugin" -> "os" [];
	"PIL.PsdImagePlugin" -> "__future__" [];
	"PIL.PsdImagePlugin" -> "io" [];
	"PIL.PsdImagePlugin" -> "functools" [];
	"PIL.PsdImagePlugin" -> "typing" [];
	"PIL.PixarImagePlugin" -> "__future__" [];
	"PIL.PdfImagePlugin" -> "__future__" [];
	"PIL.PdfImagePlugin" -> "io" [];
	"PIL.PdfImagePlugin" -> "math" [];
	"PIL.PdfImagePlugin" -> "os" [];
	"PIL.PdfImagePlugin" -> "time" [];
	"PIL.PdfImagePlugin" -> "typing" [];
	"PIL.PdfParser" -> "__future__" [];
	"PIL.PdfParser" -> "calendar" [];
	"PIL.PdfParser" -> "codecs" [];
	"PIL.PdfParser" -> "collections" [];
	"PIL.PdfParser" -> "mmap" [];
	"PIL.PdfParser" -> "os" [];
	"PIL.PdfParser" -> "re" [];
	"PIL.PdfParser" -> "time" [];
	"PIL.PdfParser" -> "zlib" [];
	"PIL.PdfParser" -> "typing" [];
	"PIL.PcxImagePlugin" -> "__future__" [];
	"PIL.PcxImagePlugin" -> "io" [];
	"PIL.PcxImagePlugin" -> "logging" [];
	"PIL.PcxImagePlugin" -> "typing" [];
	"PIL.PcdImagePlugin" -> "__future__" [];
	"PIL.PalmImagePlugin" -> "__future__" [];
	"PIL.PalmImagePlugin" -> "typing" [];
	"PIL.MspImagePlugin" -> "__future__" [];
	"PIL.MspImagePlugin" -> "io" [];
	"PIL.MspImagePlugin" -> "struct" [];
	"PIL.MspImagePlugin" -> "typing" [];
	"PIL.MpoImagePlugin" -> "__future__" [];
	"PIL.MpoImagePlugin" -> "itertools" [];
	"PIL.MpoImagePlugin" -> "os" [];
	"PIL.MpoImagePlugin" -> "struct" [];
	"PIL.MpoImagePlugin" -> "typing" [];
	"PIL.MpegImagePlugin" -> "__future__" [];
	"PIL.MicImagePlugin" -> "__future__" [];
	"PIL.MicImagePlugin" -> "olefile" [];
	"PIL.McIdasImagePlugin" -> "__future__" [];
	"PIL.McIdasImagePlugin" -> "struct" [];
	"PIL.Jpeg2KImagePlugin" -> "__future__" [];
	"PIL.Jpeg2KImagePlugin" -> "io" [];
	"PIL.Jpeg2KImagePlugin" -> "os" [];
	"PIL.Jpeg2KImagePlugin" -> "struct" [];
	"PIL.Jpeg2KImagePlugin" -> "typing" [];
	"PIL.IptcImagePlugin" -> "__future__" [];
	"PIL.IptcImagePlugin" -> "io" [];
	"PIL.IptcImagePlugin" -> "typing" [];
	"PIL.ImtImagePlugin" -> "__future__" [];
	"PIL.ImtImagePlugin" -> "re" [];
	"PIL.ImImagePlugin" -> "__future__" [];
	"PIL.ImImagePlugin" -> "os" [];
	"PIL.ImImagePlugin" -> "re" [];
	"PIL.ImImagePlugin" -> "typing" [];
	"PIL.IcoImagePlugin" -> "__future__" [];
	"PIL.IcoImagePlugin" -> "warnings" [];
	"PIL.IcoImagePlugin" -> "io" [];
	"PIL.IcoImagePlugin" -> "math" [];
	"PIL.IcoImagePlugin" -> "typing" [];
	"PIL.IcnsImagePlugin" -> "__future__" [];
	"PIL.IcnsImagePlugin" -> "io" [];
	"PIL.IcnsImagePlugin" -> "os" [];
	"PIL.IcnsImagePlugin" -> "struct" [];
	"PIL.IcnsImagePlugin" -> "sys" [];
	"PIL.IcnsImagePlugin" -> "typing" [];
	"PIL.Hdf5StubImagePlugin" -> "__future__" [];
	"PIL.Hdf5StubImagePlugin" -> "os" [];
	"PIL.Hdf5StubImagePlugin" -> "typing" [];
	"PIL.GribStubImagePlugin" -> "__future__" [];
	"PIL.GribStubImagePlugin" -> "os" [];
	"PIL.GribStubImagePlugin" -> "typing" [];
	"PIL.GbrImagePlugin" -> "__future__" [];
	"PIL.FtexImagePlugin" -> "__future__" [];
	"PIL.FtexImagePlugin" -> "struct" [];
	"PIL.FtexImagePlugin" -> "enum" [];
	"PIL.FtexImagePlugin" -> "io" [];
	"PIL.FpxImagePlugin" -> "__future__" [];
	"PIL.FpxImagePlugin" -> "olefile" [];
	"PIL.FliImagePlugin" -> "__future__" [];
	"PIL.FliImagePlugin" -> "os" [];
	"PIL.FitsImagePlugin" -> "__future__" [];
	"PIL.FitsImagePlugin" -> "gzip" [];
	"PIL.FitsImagePlugin" -> "math" [];
	"PIL.EpsImagePlugin" -> "__future__" [];
	"PIL.EpsImagePlugin" -> "io" [];
	"PIL.EpsImagePlugin" -> "os" [];
	"PIL.EpsImagePlugin" -> "re" [];
	"PIL.EpsImagePlugin" -> "subprocess" [];
	"PIL.EpsImagePlugin" -> "sys" [];
	"PIL.EpsImagePlugin" -> "tempfile" [];
	"PIL.EpsImagePlugin" -> "typing" [];
	"PIL.EpsImagePlugin" -> "shutil" [];
	"PIL.DdsImagePlugin" -> "__future__" [];
	"PIL.DdsImagePlugin" -> "io" [];
	"PIL.DdsImagePlugin" -> "struct" [];
	"PIL.DdsImagePlugin" -> "sys" [];
	"PIL.DdsImagePlugin" -> "enum" [];
	"PIL.DdsImagePlugin" -> "typing" [];
	"PIL.DcxImagePlugin" -> "__future__" [];
	"PIL.CurImagePlugin" -> "__future__" [];
	"PIL.BufrStubImagePlugin" -> "__future__" [];
	"PIL.BufrStubImagePlugin" -> "os" [];
	"PIL.BufrStubImagePlugin" -> "typing" [];
	"PIL.BlpImagePlugin" -> "__future__" [];
	"PIL.BlpImagePlugin" -> "abc" [];
	"PIL.BlpImagePlugin" -> "os" [];
	"PIL.BlpImagePlugin" -> "struct" [];
	"PIL.BlpImagePlugin" -> "enum" [];
	"PIL.BlpImagePlugin" -> "io" [];
	"PIL.BlpImagePlugin" -> "typing" [];
	"PIL.AvifImagePlugin" -> "__future__" [];
	"PIL.AvifImagePlugin" -> "os" [];
	"PIL.AvifImagePlugin" -> "io" [];
	"PIL.AvifImagePlugin" -> "typing" [];
	"PIL.ImageShow" -> "__future__" [];
	"PIL.ImageShow" -> "abc" [];
	"PIL.ImageShow" -> "os" [];
	"PIL.ImageShow" -> "shutil" [];
	"PIL.ImageShow" -> "subprocess" [];
	"PIL.ImageShow" -> "sys" [];
	"PIL.ImageShow" -> "shlex" [];
	"PIL.ImageShow" -> "typing" [];
	"PIL.ImageCms" -> "__future__" [];
	"PIL.ImageCms" -> "operator" [];
	"PIL.ImageCms" -> "sys" [];
	"PIL.ImageCms" -> "enum" [];
	"PIL.ImageCms" -> "functools" [];
	"PIL.ImageCms" -> "typing" [];
	"PIL.ImageWin" -> "__future__" [];
	"PIL._imagingcms" -> "datetime" [];
	"PIL._imagingcms" -> "sys" [];
	"PIL._imagingcms" -> "typing" [];
	"PIL.PngImagePlugin" -> "__future__" [];
	"PIL.PngImagePlugin" -> "itertools" [];
	"PIL.PngImagePlugin" -> "logging" [];
	"PIL.PngImagePlugin" -> "re" [];
	"PIL.PngImagePlugin" -> "struct" [];
	"PIL.PngImagePlugin" -> "warnings" [];
	"PIL.PngImagePlugin" -> "zlib" [];
	"PIL.PngImagePlugin" -> "enum" [];
	"PIL.PngImagePlugin" -> "typing" [];
	"PIL.PngImagePlugin" -> "io" [];
	"PIL.PpmImagePlugin" -> "__future__" [];
	"PIL.PpmImagePlugin" -> "math" [];
	"PIL.PpmImagePlugin" -> "typing" [];
	"PIL.JpegImagePlugin" -> "__future__" [];
	"PIL.JpegImagePlugin" -> "array" [];
	"PIL.JpegImagePlugin" -> "io" [];
	"PIL.JpegImagePlugin" -> "math" [];
	"PIL.JpegImagePlugin" -> "os" [];
	"PIL.JpegImagePlugin" -> "struct" [];
	"PIL.JpegImagePlugin" -> "subprocess" [];
	"PIL.JpegImagePlugin" -> "sys" [];
	"PIL.JpegImagePlugin" -> "tempfile" [];
	"PIL.JpegImagePlugin" -> "warnings" [];
	"PIL.JpegImagePlugin" -> "typing" [];
	"PIL.JpegPresets" -> "__future__" [];
	"PIL.BmpImagePlugin" -> "__future__" [];
	"PIL.BmpImagePlugin" -> "os" [];
	"PIL.BmpImagePlugin" -> "typing" [];
	"PIL.ImageQt" -> "__future__" [];
	"PIL.ImageQt" -> "sys" [];
	"PIL.ImageQt" -> "io" [];
	"PIL.ImageQt" -> "typing" [];
	"PIL.ImageFilter" -> "__future__" [];
	"PIL.ImageFilter" -> "abc" [];
	"PIL.ImageFilter" -> "functools" [];
	"PIL.ImageFilter" -> "types" [];
	"PIL.ImageFilter" -> "typing" [];
	"PIL.ImageMode" -> "__future__" [];
	"PIL.ImageMode" -> "sys" [];
	"PIL.ImageMode" -> "functools" [];
	"PIL.ImageMode" -> "typing" [];
	"PIL" -> "__future__" [];
	"PIL._version" -> "__future__" [];
	"kivy.loader" -> "collections" [];
	"kivy.loader" -> "time" [];
	"kivy.loader" -> "os.path" [];
	"kivy.loader" -> "os" [];
	"kivy.loader" -> "threading" [];
	"kivy.loader" -> "mimetypes" [];
	"kivy.loader" -> "tempfile" [];
	"kivy.loader" -> "smb" [];
	"kivy.loader" -> "certifi" [];
	"kivy.loader" -> "ssl" [];
	"kivy.compat" -> "sys" [];
	"kivy.compat" -> "time" [];
	"kivy.compat" -> "math" [];
	"kivy.compat" -> "queue" [];
	"kivy.compat" -> "Queue" [];
	"kivy.utils" -> "os" [];
	"kivy.utils" -> "sys" [];
	"kivy.utils" -> "re" [];
	"kivy.utils" -> "random" [];
	"kivy.utils" -> "inspect" [];
	"kivy.utils" -> "functools" [];
	"kivy.config" -> "ConfigParser" [];
	"kivy.config" -> "configparser" [];
	"kivy.config" -> "collections" [];
	"kivy.config" -> "os" [];
	"kivy.config" -> "os.path" [];
	"kivy.config" -> "weakref" [];
	"kivy.cache" -> "os" [];
	"kivy.cache" -> "heapq" [];
	"kivy.clock" -> "sys" [];
	"kivy.clock" -> "os" [];
	"kivy.clock" -> "functools" [];
	"kivy.clock" -> "time" [];
	"kivy.clock" -> "threading" [];
	"kivy.clock" -> "ctypes" [];
	"kivy.clock" -> "trio" [];
	"kivy.clock" -> "asyncio" [];
	"kivy.base" -> "sys" [];
	"kivy.base" -> "os" [];
	"kivy.base" -> "android" [];
	"kivy.input.postproc" -> "os" [];
	"kivy.input.postproc.retaintouch" -> "time" [];
	"kivy.vector" -> "math" [];
	"kivy.input.postproc.tripletap" -> "time" [];
	"kivy.input.postproc.doubletap" -> "time" [];
	"kivy.input.providers" -> "os" [];
	"kivy.input.providers.leapfinger" -> "collections" [];
	"kivy.input.providers.leapfinger" -> "Leap" [];
	"kivy.input.providers.androidjoystick" -> "os" [];
	"kivy.input.providers.androidjoystick" -> "android" [];
	"kivy.input.providers.androidjoystick" -> "pygame" [];
	"kivy.input.providers.linuxwacom" -> "os" [];
	"kivy.input.providers.linuxwacom" -> "threading" [];
	"kivy.input.providers.linuxwacom" -> "collections" [];
	"kivy.input.providers.linuxwacom" -> "struct" [];
	"kivy.input.providers.linuxwacom" -> "fcntl" [];
	"kivy.input.providers.hidinput" -> "os" [];
	"kivy.input.providers.hidinput" -> "threading" [];
	"kivy.input.providers.hidinput" -> "collections" [];
	"kivy.input.providers.hidinput" -> "struct" [];
	"kivy.input.providers.hidinput" -> "fcntl" [];
	"kivy.input.providers.mtdev" -> "os" [];
	"kivy.input.providers.mtdev" -> "os.path" [];
	"kivy.input.providers.mtdev" -> "time" [];
	"kivy.input.providers.mtdev" -> "threading" [];
	"kivy.input.providers.mtdev" -> "collections" [];
	"kivy.lib.mtdev" -> "os" [];
	"kivy.lib.mtdev" -> "time" [];
	"kivy.lib.mtdev" -> "ctypes" [];
	"kivy.input.providers.probesysfs" -> "os" [];
	"kivy.input.providers.probesysfs" -> "os.path" [];
	"kivy.input.providers.probesysfs" -> "ctypes" [];
	"kivy.input.providers.probesysfs" -> "re" [];
	"kivy.input.providers.probesysfs" -> "glob" [];
	"kivy.input.providers.probesysfs" -> "subprocess" [];
	"kivy.input.providers.mactouch" -> "ctypes" [];
	"kivy.input.providers.mactouch" -> "threading" [];
	"kivy.input.providers.mactouch" -> "collections" [];
	"kivy.input.providers.mactouch" -> "os" [];
	"kivy.input.providers.wm_pen" -> "os" [];
	"kivy.input.providers.wm_pen" -> "collections" [];
	"kivy.input.providers.wm_pen" -> "ctypes" [];
	"kivy.input.providers.wm_common" -> "os" [];
	"kivy.input.providers.wm_common" -> "ctypes" [];
	"kivy.input.providers.wm_touch" -> "os" [];
	"kivy.input.providers.wm_touch" -> "ctypes" [];
	"kivy.input.providers.wm_touch" -> "collections" [];
	"kivy.input.providers.mouse" -> "collections" [];
	"kivy.input.providers.tuio" -> "functools" [];
	"kivy.input.providers.tuio" -> "collections" [];
	"kivy.input.providers.tuio" -> "oscpy" [];
	"kivy.input.motionevent" -> "weakref" [];
	"kivy.input.motionevent" -> "inspect" [];
	"kivy.input.motionevent" -> "copy" [];
	"kivy.input.motionevent" -> "time" [];
	"kivy.core.window" -> "os.path" [];
	"kivy.core.window" -> "os" [];
	"kivy.core.window" -> "collections" [];
	"kivy.core.window" -> "ios" [];
	"kivy.core.window" -> "android" [];
	"kivy.core.window" -> "math" [];
	"kivy.uix.vkeyboard" -> "kivy" [];
	"kivy.uix.vkeyboard" -> "io" [];
	"kivy.uix.vkeyboard" -> "os.path" [];
	"kivy.uix.vkeyboard" -> "os" [];
	"kivy.uix.vkeyboard" -> "json" [];
	"kivy.uix.scatter" -> "math" [];
	"kivy.metrics" -> "os" [];
	"kivy.metrics" -> "jnius" [];
	"kivy.metrics" -> "android" [];
	"kivy.metrics" -> "ios" [];
	"kivy.core.gl" -> "sys" [];
	"kivy.core.gl" -> "os" [];
	"kivy.core.gl" -> "ctypes" [];
	"kivy.animation" -> "math" [];
	"kivy.animation" -> "collections" [];
	"kivy.uix.behaviors.cover" -> "decimal" [];
	"kivy.uix.behaviors.codenavigation" -> "string" [];
	"kivy.uix.behaviors.compoundselection" -> "time" [];
	"kivy.uix.behaviors.compoundselection" -> "os" [];
	"kivy.uix.behaviors.drag" -> "functools" [];
	"kivy.uix.behaviors.togglebutton" -> "weakref" [];
	"kivy.uix.behaviors.button" -> "time" [];
	"kivy.modules" -> "importlib" [];
	"kivy.modules" -> "os" [];
	"kivy.modules" -> "sys" [];
	"kivy.modules" -> "traceback" [];
	"kivy.core" -> "os" [];
	"kivy.core" -> "sysconfig" [];
	"kivy.core" -> "sys" [];
	"kivy.core" -> "traceback" [];
	"kivy.core" -> "tempfile" [];
	"kivy.core" -> "subprocess" [];
	"kivy.core" -> "importlib" [];
	"kivy.lang.parser" -> "os" [];
	"kivy.lang.parser" -> "re" [];
	"kivy.lang.parser" -> "sys" [];
	"kivy.lang.parser" -> "traceback" [];
	"kivy.lang.parser" -> "ast" [];
	"kivy.lang.parser" -> "importlib" [];
	"kivy.lang.parser" -> "types" [];
	"kivy.lang.parser" -> "functools" [];
	"kivy.lang.parser" -> "collections" [];
	"kivy.lang.parser" -> "kivy" [];
	"kivy.lang.builder" -> "sys" [];
	"kivy.lang.builder" -> "os" [];
	"kivy.lang.builder" -> "os.path" [];
	"kivy.lang.builder" -> "copy" [];
	"kivy.lang.builder" -> "types" [];
	"kivy.lang.builder" -> "functools" [];
	"kivy.lang.builder" -> "kivy" [];
	"kivy.lang.builder" -> "atexit" [];
	"kivy.lang.builder" -> "html" [];
	"kivy.factory" -> "copy" [];
	"kivy.factory" -> "importlib" [];
	"kivy.logger" -> "logging" [];
	"kivy.logger" -> "os" [];
	"kivy.logger" -> "sys" [];
	"kivy.logger" -> "functools" [];
	"kivy.logger" -> "pathlib" [];
	"kivy.logger" -> "time" [];
	"kivy.resources" -> "os.path" [];
	"kivy.resources" -> "sys" [];
	"kivy.resources" -> "os" [];
	"kivy.core.image" -> "re" [];
	"kivy.core.image" -> "base64" [];
	"kivy.core.image" -> "filetype" [];
	"kivy.core.image" -> "zipfile" [];
	"kivy.core.image" -> "io" [];
	"kivy.core.image" -> "os" [];
	"kivy.core.image" -> "sys" [];
	"kivy.atlas" -> "json" [];
	"kivy.atlas" -> "os.path" [];
	"kivy.atlas" -> "os" [];
	"kivy.atlas" -> "PIL" [];
	"kivy.atlas" -> "sys" [];
	"kivy.atlas" -> "glob" [];
	"kivy.uix.widget" -> "functools" [];
	"kivy.uix.widget" -> "itertools" [];
	"kivy.uix.filechooser" -> "weakref" [];
	"kivy.uix.filechooser" -> "time" [];
	"kivy.uix.filechooser" -> "os" [];
	"kivy.uix.filechooser" -> "os.path" [];
	"kivy.uix.filechooser" -> "fnmatch" [];
	"kivy.uix.filechooser" -> "win32file" [];
	"kivy.uix.filechooser" -> "pprint" [];
	"kivy.uix.filechooser" -> "textwrap" [];
	"kivy.uix.filechooser" -> "sys" [];
	"kivy.core.text" -> "re" [];
	"kivy.core.text" -> "os" [];
	"kivy.core.text" -> "ast" [];
	"kivy.core.text" -> "functools" [];
	"kivy.core.text" -> "copy" [];
	"kivy.core.text" -> "kivy" [];
	"kivy.core.text" -> "sys" [];
	"kivy.core.text.text_pango" -> "types" [];
	"kivy.core.text.text_pango" -> "os.path" [];
	"kivy.core.text.text_pango" -> "'kivy.core.text._text_pango'" [];
	"kivy.core.text.markup" -> "re" [];
	"kivy.core.text.markup" -> "copy" [];
	"kivy.core.text.markup" -> "functools" [];
	"kivy.parser" -> "re" [];
	"kivy.app" -> "os" [];
	"kivy.app" -> "inspect" [];
	"kivy.app" -> "os.path" [];
	"kivy.app" -> "jnius" [];
	"kivy.app" -> "android" [];
	"kivy.app" -> "pygame" [];
	"kivy.uix.settings" -> "json" [];
	"kivy.uix.settings" -> "os" [];
	"kivy.uix.settings" -> "kivy" [];
	"kivy.uix.settings" -> "os.path" [];
	"kivy.uix.textinput" -> "re" [];
	"kivy.uix.textinput" -> "sys" [];
	"kivy.uix.textinput" -> "math" [];
	"kivy.uix.textinput" -> "os" [];
	"kivy.uix.textinput" -> "weakref" [];
	"kivy.uix.textinput" -> "itertools" [];
	"kivy.uix.textinput" -> "textwrap" [];
	"kivy.core.clipboard" -> "kivy" [];
	"kivy.uix.gridlayout" -> "math" [];
	"kivy.uix.gridlayout" -> "itertools" [];
	"kivy.uix.gridlayout" -> "operator" [];
	"kivy.uix.scrollview" -> "functools" [];
	"kivy.effects.scroll" -> "time" [];
	"kivy.effects.kinetic" -> "time" [];
	"kivy.uix.colorpicker" -> "math" [];
	"kivy.uix.colorpicker" -> "colorsys" [];
	"kivy.uix.tabbedpanel" -> "functools" [];
	"kivy" -> "sys" [];
	"kivy" -> "shutil" [];
	"kivy" -> "getopt" [];
	"kivy" -> "os" [];
	"kivy" -> "os.path" [];
	"kivy" -> "pkgutil" [];
	"kivy" -> "re" [];
	"kivy" -> "importlib" [];
	"kivy" -> "site" [];
	"kivy" -> "kivy_deps" [];
	"kivy.core.window.window_sdl2" -> "os.path" [];
	"kivy.core.window.window_sdl2" -> "sys" [];
	"kivy.core.window.window_sdl2" -> "typing" [];
	"kivy.core.window.window_sdl2" -> "kivy" [];
	"kivy.core.window.window_sdl2" -> "collections" [];
	"kivy.core.window.window_sdl2" -> "android" [];
	"kivy.core.window.window_sdl2" -> "win32con" [];
	"kivy.core.window.window_sdl2" -> "ctypes" [];
	"kivy.core.video.video_ffpyplayer" -> "ffpyplayer" [];
	"kivy.core.video.video_ffpyplayer" -> "'ffpyplayer.player'" [];
	"kivy.core.video.video_ffpyplayer" -> "'ffpyplayer.tools'" [];
	"kivy.core.video.video_ffpyplayer" -> "threading" [];
	"kivy.core.video.video_ffpyplayer" -> "queue" [];
	"kivy.core.video.video_ffpyplayer" -> "time" [];
	"kivy.core.audio.audio_android" -> "jnius" [];
	"kivy.core.audio.audio_android" -> "android" [];
	"kivy.weakmethod" -> "weakref" [];
	"kivy.uix.recyclegridlayout" -> "itertools" [];
	"kivy.uix.recyclegridlayout" -> "collections" [];
	"kivy.uix.gesturesurface" -> "random" [];
	"kivy.uix.gesturesurface" -> "colorsys" [];
	"kivy.core.camera.camera_picamera" -> "math" [];
	"kivy.core.camera.camera_picamera" -> "picamera" [];
	"kivy.core.camera.camera_picamera" -> "numpy" [];
	"kivy.uix.codeinput" -> "pygments" [];
	"kivy.extras.highlight" -> "pygments" [];
	"kivy.extras.highlight" -> "sys" [];
	"kivy.core.clipboard.clipboard_winctypes" -> "ctypes" [];
	"kivy.core.camera.camera_android" -> "jnius" [];
	"kivy.core.camera.camera_android" -> "threading" [];
	"kivy.core.camera.camera_android" -> "numpy" [];
	"kivy.core.camera.camera_android" -> "cv2" [];
	"kivy.core.clipboard.clipboard_xsel" -> "subprocess" [];
	"kivy.core.camera.camera_gi" -> "'gi.repository'" [];
	"kivy.core.camera.camera_gi" -> "ctypes" [];
	"kivy.core.camera.camera_gi" -> "weakref" [];
	"kivy.core.camera.camera_gi" -> "atexit" [];
	"kivy.support" -> "'gi.repository'" [];
	"kivy.support" -> "gobject" [];
	"kivy.support" -> "android" [];
	"kivy.support" -> "pygame" [];
	"kivy.support" -> "collections" [];
	"kivy.support" -> "sys" [];
	"kivy.core.audio.audio_pygame" -> "'android.mixer'" [];
	"kivy.core.audio.audio_pygame" -> "android_mixer" [];
	"kivy.core.audio.audio_pygame" -> "pygame" [];
	"kivy.core.clipboard.clipboard_xclip" -> "subprocess" [];
	"kivy.core.video.video_gstplayer" -> "threading" [];
	"kivy.core.video.video_gstplayer" -> "functools" [];
	"kivy.core.video.video_gstplayer" -> "os.path" [];
	"kivy.core.video.video_gstplayer" -> "weakref" [];
	"kivy.core.video.video_gstplayer" -> "urllib" [];
	"kivy.lib.gstplayer" -> "os" [];
	"kivy.lib.gstplayer" -> "'kivy.lib.gstplayer._gstplayer'" [];
	"kivy.core.window.window_pygame" -> "pygame" [];
	"kivy.core.window.window_pygame" -> "os" [];
	"kivy.core.window.window_pygame" -> "os.path" [];
	"kivy.core.window.window_pygame" -> "kivy" [];
	"kivy.core.window.window_pygame" -> "android" [];
	"kivy.core.window.window_pygame" -> "win32api" [];
	"kivy.core.window.window_pygame" -> "win32gui" [];
	"kivy.core.window.window_pygame" -> "win32con" [];
	"kivy.uix.videoplayer" -> "json" [];
	"kivy.uix.videoplayer" -> "os.path" [];
	"kivy.uix.videoplayer" -> "sys" [];
	"kivy.core.video.video_ffmpeg" -> "ffmpeg" [];
	"kivy.core.image.img_tex" -> "json" [];
	"kivy.core.image.img_tex" -> "struct" [];
	"kivy.gesture" -> "pickle" [];
	"kivy.gesture" -> "base64" [];
	"kivy.gesture" -> "zlib" [];
	"kivy.gesture" -> "math" [];
	"kivy.gesture" -> "io" [];
	"kivy.uix.recycleview.__init__" -> "copy" [];
	"kivy.uix.recycleview" -> "copy" [];
	"kivy.core.clipboard.clipboard_android" -> "kivy" [];
	"kivy.core.clipboard.clipboard_android" -> "jnius" [];
	"kivy.core.clipboard.clipboard_android" -> "'android.runnable'" [];
	"kivy.core.clipboard.clipboard_android" -> "android" [];
	"kivy.core.clipboard.clipboard_android" -> "time" [];
	"kivy.core.spelling.spelling_osxappkit" -> "AppKit" [];
	"kivy.uix.sandbox" -> "functools" [];
	"kivy.uix.sandbox" -> "traceback" [];
	"kivy.uix.recycleview.views" -> "collections" [];
	"kivy.core.clipboard.clipboard_dbusklipper" -> "dbus" [];
	"kivy.uix.rst" -> "os" [];
	"kivy.uix.rst" -> "os.path" [];
	"kivy.uix.rst" -> "docutils" [];
	"kivy.uix.rst" -> "sys" [];
	"docutils.parsers.rst.directives" -> "re" [];
	"docutils.parsers.rst.directives" -> "codecs" [];
	"docutils.parsers.rst.directives" -> "importlib" [];
	"docutils.parsers.rst.directives" -> "docutils" [];
	"docutils.languages" -> "importlib" [];
	"docutils.utils" -> "sys" [];
	"docutils.utils" -> "os" [];
	"docutils.utils" -> "os.path" [];
	"docutils.utils" -> "pathlib" [];
	"docutils.utils" -> "re" [];
	"docutils.utils" -> "itertools" [];
	"docutils.utils" -> "warnings" [];
	"docutils.utils" -> "unicodedata" [];
	"docutils.utils.smartquotes" -> "re" [];
	"docutils.utils.smartquotes" -> "sys" [];
	"docutils.utils.smartquotes" -> "itertools" [];
	"docutils.utils.smartquotes" -> "locale" [];
	"docutils.utils.smartquotes" -> "argparse" [];
	"docutils.utils.smartquotes" -> "unittest" [];
	"docutils.utils.roman" -> "argparse" [];
	"docutils.utils.roman" -> "re" [];
	"docutils.utils.roman" -> "sys" [];
	"docutils.io" -> "codecs" [];
	"docutils.io" -> "locale" [];
	"docutils.io" -> "os" [];
	"docutils.io" -> "re" [];
	"docutils.io" -> "sys" [];
	"docutils.io" -> "warnings" [];
	"docutils.frontend" -> "codecs" [];
	"docutils.frontend" -> "configparser" [];
	"docutils.frontend" -> "optparse" [];
	"docutils.frontend" -> "os" [];
	"docutils.frontend" -> "os.path" [];
	"docutils.frontend" -> "pathlib" [];
	"docutils.frontend" -> "sys" [];
	"docutils.frontend" -> "warnings" [];
	"docutils.nodes" -> "collections" [];
	"docutils.nodes" -> "re" [];
	"docutils.nodes" -> "sys" [];
	"docutils.nodes" -> "warnings" [];
	"docutils.nodes" -> "unicodedata" [];
	"docutils.transforms.parts" -> "sys" [];
	"docutils.transforms.parts" -> "docutils" [];
	"docutils.transforms.misc" -> "docutils" [];
	"docutils.transforms.references" -> "docutils" [];
	"docutils.transforms.frontmatter" -> "re" [];
	"docutils.transforms.frontmatter" -> "docutils" [];
	"docutils.transforms.writer_aux" -> "warnings" [];
	"docutils.transforms.writer_aux" -> "docutils" [];
	"docutils.transforms.universal" -> "re" [];
	"docutils.transforms.universal" -> "time" [];
	"docutils.transforms.universal" -> "docutils" [];
	"docutils" -> "collections" [];
	"docutils" -> "warnings" [];
	"docutils.parsers.rst.directives.tables" -> "csv" [];
	"docutils.parsers.rst.directives.tables" -> "warnings" [];
	"docutils.parsers.rst.directives.tables" -> "docutils" [];
	"docutils.statemachine" -> "sys" [];
	"docutils.statemachine" -> "re" [];
	"docutils.statemachine" -> "unicodedata" [];
	"docutils.parsers.rst.directives.references" -> "docutils" [];
	"docutils.parsers.rst.directives.parts" -> "docutils" [];
	"docutils.parsers.rst.directives.misc" -> "pathlib" [];
	"docutils.parsers.rst.directives.misc" -> "re" [];
	"docutils.parsers.rst.directives.misc" -> "time" [];
	"docutils.parsers.rst.directives.misc" -> "docutils" [];
	"docutils.parsers.rst.states" -> "re" [];
	"docutils.parsers.rst.states" -> "types" [];
	"docutils.parsers.rst.states" -> "docutils" [];
	"docutils.parsers.rst.tableparser" -> "re" [];
	"docutils.parsers.rst.tableparser" -> "sys" [];
	"docutils.parsers.rst.tableparser" -> "docutils" [];
	"docutils.parsers.rst.directives.images" -> "Image" [];
	"docutils.parsers.rst.directives.images" -> "docutils" [];
	"docutils.parsers.rst.directives.html" -> "warnings" [];
	"docutils.parsers.rst.directives.body" -> "docutils" [];
	"docutils.utils.code_analyzer" -> "docutils" [];
	"docutils.utils.code_analyzer" -> "pygments" [];
	"docutils.parsers.rst.directives.admonitions" -> "docutils" [];
	"docutils.writers.xetex" -> "docutils" [];
	"docutils.writers.s5_html" -> "sys" [];
	"docutils.writers.s5_html" -> "os" [];
	"docutils.writers.s5_html" -> "re" [];
	"docutils.writers.s5_html" -> "docutils" [];
	"docutils.writers.pseudoxml" -> "docutils" [];
	"docutils.writers.pep_html" -> "os" [];
	"docutils.writers.pep_html" -> "os.path" [];
	"docutils.writers.pep_html" -> "docutils" [];
	"docutils.writers.pep_html" -> "random" [];
	"docutils.writers.odf_odt.pygmentsformatter" -> "pygments" [];
	"docutils.writers.odf_odt.prepstyles" -> "sys" [];
	"docutils.writers.odf_odt.prepstyles" -> "zipfile" [];
	"docutils.writers.odf_odt.prepstyles" -> "tempfile" [];
	"docutils.writers.odf_odt.prepstyles" -> "shutil" [];
	"docutils.writers.odf_odt.prepstyles" -> "os" [];
	"docutils.writers.odf_odt" -> "configparser" [];
	"docutils.writers.odf_odt" -> "copy" [];
	"docutils.writers.odf_odt" -> "io" [];
	"docutils.writers.odf_odt" -> "itertools" [];
	"docutils.writers.odf_odt" -> "locale" [];
	"docutils.writers.odf_odt" -> "os" [];
	"docutils.writers.odf_odt" -> "os.path" [];
	"docutils.writers.odf_odt" -> "pathlib" [];
	"docutils.writers.odf_odt" -> "re" [];
	"docutils.writers.odf_odt" -> "subprocess" [];
	"docutils.writers.odf_odt" -> "tempfile" [];
	"docutils.writers.odf_odt" -> "time" [];
	"docutils.writers.odf_odt" -> "urllib" [];
	"docutils.writers.odf_odt" -> "weakref" [];
	"docutils.writers.odf_odt" -> "zipfile" [];
	"docutils.writers.odf_odt" -> "docutils" [];
	"docutils.writers.odf_odt" -> "pygments" [];
	"docutils.readers.standalone" -> "docutils" [];
	"docutils.readers" -> "importlib" [];
	"docutils.writers.null" -> "docutils" [];
	"docutils.writers.manpage" -> "re" [];
	"docutils.writers.manpage" -> "docutils" [];
	"docutils.writers.manpage" -> "roman" [];
	"docutils.writers.latex2e" -> "pathlib" [];
	"docutils.writers.latex2e" -> "re" [];
	"docutils.writers.latex2e" -> "string" [];
	"docutils.writers.latex2e" -> "warnings" [];
	"docutils.writers.latex2e" -> "roman" [];
	"docutils.writers.latex2e" -> "docutils" [];
	"docutils.utils.math.tex2mathml_extern" -> "subprocess" [];
	"docutils.utils.math.tex2mathml_extern" -> "docutils" [];
	"docutils.utils.math.math2html" -> "pathlib" [];
	"docutils.utils.math.math2html" -> "sys" [];
	"docutils.utils.math.math2html" -> "unicodedata" [];
	"docutils.utils.math.latex2mathml" -> "re" [];
	"docutils.utils.math.latex2mathml" -> "unicodedata" [];
	"docutils.utils.math.mathml_elements" -> "numbers" [];
	"docutils.writers.html5_polyglot" -> "pathlib" [];
	"docutils.writers.html5_polyglot" -> "docutils" [];
	"docutils.writers.html4css1" -> "os.path" [];
	"docutils.writers.html4css1" -> "re" [];
	"docutils.writers.html4css1" -> "docutils" [];
	"docutils.writers.docutils_xml" -> "io" [];
	"docutils.writers.docutils_xml" -> "docutils" [];
	"docutils.writers._html_base" -> "base64" [];
	"docutils.writers._html_base" -> "mimetypes" [];
	"docutils.writers._html_base" -> "os" [];
	"docutils.writers._html_base" -> "os.path" [];
	"docutils.writers._html_base" -> "pathlib" [];
	"docutils.writers._html_base" -> "re" [];
	"docutils.writers._html_base" -> "urllib" [];
	"docutils.writers._html_base" -> "warnings" [];
	"docutils.writers._html_base" -> "docutils" [];
	"docutils.writers" -> "importlib" [];
	"docutils.parsers.rst.roles" -> "docutils" [];
	"docutils.parsers.rst" -> "docutils" [];
	"docutils.parsers" -> "importlib" [];
	"kivy.core.image.img_pygame" -> "os.path" [];
	"kivy.core.image.img_pygame" -> "pygame" [];
	"kivy.core.image.img_pygame" -> "traceback" [];
	"kivy.core.spelling" -> "sys" [];
	"kivy.core.clipboard.clipboard_nspaste" -> "pyobjus" [];
	"kivy.core.clipboard.clipboard_nspaste" -> "'pyobjus.dylib_manager'" [];
	"kivy.core.image.img_pil" -> "Image" [];
	"kivy.core.image.img_pil" -> "PIL" [];
	"kivy.core.audio.audio_ffpyplayer" -> "ffpyplayer" [];
	"kivy.core.audio.audio_ffpyplayer" -> "'ffpyplayer.player'" [];
	"kivy.core.audio.audio_ffpyplayer" -> "'ffpyplayer.tools'" [];
	"kivy.core.audio.audio_ffpyplayer" -> "time" [];
	"kivy.uix.video" -> "sys" [];
	"kivy.core.text.text_pil" -> "PIL" [];
	"kivy.multistroke" -> "pickle" [];
	"kivy.multistroke" -> "base64" [];
	"kivy.multistroke" -> "zlib" [];
	"kivy.multistroke" -> "re" [];
	"kivy.multistroke" -> "collections" [];
	"kivy.multistroke" -> "math" [];
	"kivy.multistroke" -> "io" [];
	"kivy.core.text.text_pygame" -> "pygame" [];
	"kivy.core.window.window_egl_rpi" -> "os" [];
	"kivy.core.clipboard.clipboard_pygame" -> "pygame" [];
	"kivy.core.clipboard.clipboard_pygame" -> "'pygame.scrap'" [];
	"kivy.core.clipboard.clipboard_gtk3" -> "gi" [];
	"kivy.core.clipboard.clipboard_gtk3" -> "'gi.repository'" [];
	"kivy.uix.recycleview.datamodel" -> "functools" [];
	"kivy.core.audio.audio_avplayer" -> "pyobjus" [];
	"kivy.core.audio.audio_avplayer" -> "'pyobjus.dylib_manager'" [];
	"kivy.core.image.img_ffpyplayer" -> "ffpyplayer" [];
	"kivy.core.image.img_ffpyplayer" -> "'ffpyplayer.pic'" [];
	"kivy.core.image.img_ffpyplayer" -> "'ffpyplayer.tools'" [];
	"kivy.core.audio.audio_gstplayer" -> "os.path" [];
	"kivy.core.audio.audio_gstplayer" -> "urllib" [];
	"kivy.uix.actionbar" -> "functools" [];
	"kivy.lib.ddsfile" -> "struct" [];
	"kivy.lib.ddsfile" -> "sys" [];
	"kivy.core.spelling.spelling_enchant" -> "enchant" [];
	"kivy.uix.checkbox" -> "random" [];
	"kivy.uix.carousel" -> "functools" [];
	"kivy.core.camera.camera_opencv" -> "__future__" [];
	"kivy.core.camera.camera_opencv" -> "opencv" [];
	"kivy.core.camera.camera_opencv" -> "'opencv.highgui'" [];
	"kivy.core.camera.camera_opencv" -> "cv2" [];
	"kivy.core.audio" -> "sys" [];
	"encodings.zlib_codec" -> "codecs" [];
	"encodings.zlib_codec" -> "zlib" [];
	"encodings.uu_codec" -> "codecs" [];
	"encodings.uu_codec" -> "binascii" [];
	"encodings.uu_codec" -> "io" [];
	"encodings.utf_8_sig" -> "codecs" [];
	"encodings.utf_8" -> "codecs" [];
	"encodings.utf_7" -> "codecs" [];
	"encodings.utf_32_le" -> "codecs" [];
	"encodings.utf_32_be" -> "codecs" [];
	"encodings.utf_32" -> "codecs" [];
	"encodings.utf_32" -> "sys" [];
	"encodings.utf_16_le" -> "codecs" [];
	"encodings.utf_16_be" -> "codecs" [];
	"encodings.utf_16" -> "codecs" [];
	"encodings.utf_16" -> "sys" [];
	"encodings.unicode_escape" -> "codecs" [];
	"encodings.undefined" -> "codecs" [];
	"encodings.tis_620" -> "codecs" [];
	"encodings.shift_jisx0213" -> "_codecs_jp" [];
	"encodings.shift_jisx0213" -> "codecs" [];
	"encodings.shift_jisx0213" -> "_multibytecodec" [];
	"encodings.shift_jis_2004" -> "_codecs_jp" [];
	"encodings.shift_jis_2004" -> "codecs" [];
	"encodings.shift_jis_2004" -> "_multibytecodec" [];
	"encodings.shift_jis" -> "_codecs_jp" [];
	"encodings.shift_jis" -> "codecs" [];
	"encodings.shift_jis" -> "_multibytecodec" [];
	"encodings.rot_13" -> "codecs" [];
	"encodings.rot_13" -> "sys" [];
	"encodings.raw_unicode_escape" -> "codecs" [];
	"encodings.quopri_codec" -> "codecs" [];
	"encodings.quopri_codec" -> "quopri" [];
	"encodings.quopri_codec" -> "io" [];
	"encodings.punycode" -> "codecs" [];
	"encodings.ptcp154" -> "codecs" [];
	"encodings.palmos" -> "codecs" [];
	"encodings.oem" -> "codecs" [];
	"encodings.mbcs" -> "codecs" [];
	"encodings.mac_turkish" -> "codecs" [];
	"encodings.mac_romanian" -> "codecs" [];
	"encodings.mac_roman" -> "codecs" [];
	"encodings.mac_latin2" -> "codecs" [];
	"encodings.mac_iceland" -> "codecs" [];
	"encodings.mac_greek" -> "codecs" [];
	"encodings.mac_farsi" -> "codecs" [];
	"encodings.mac_cyrillic" -> "codecs" [];
	"encodings.mac_croatian" -> "codecs" [];
	"encodings.mac_arabic" -> "codecs" [];
	"encodings.latin_1" -> "codecs" [];
	"encodings.kz1048" -> "codecs" [];
	"encodings.koi8_u" -> "codecs" [];
	"encodings.koi8_t" -> "codecs" [];
	"encodings.koi8_r" -> "codecs" [];
	"encodings.johab" -> "_codecs_kr" [];
	"encodings.johab" -> "codecs" [];
	"encodings.johab" -> "_multibytecodec" [];
	"encodings.iso8859_9" -> "codecs" [];
	"encodings.iso8859_8" -> "codecs" [];
	"encodings.iso8859_7" -> "codecs" [];
	"encodings.iso8859_6" -> "codecs" [];
	"encodings.iso8859_5" -> "codecs" [];
	"encodings.iso8859_4" -> "codecs" [];
	"encodings.iso8859_3" -> "codecs" [];
	"encodings.iso8859_2" -> "codecs" [];
	"encodings.iso8859_16" -> "codecs" [];
	"encodings.iso8859_15" -> "codecs" [];
	"encodings.iso8859_14" -> "codecs" [];
	"encodings.iso8859_13" -> "codecs" [];
	"encodings.iso8859_11" -> "codecs" [];
	"encodings.iso8859_10" -> "codecs" [];
	"encodings.iso8859_1" -> "codecs" [];
	"encodings.iso2022_kr" -> "_codecs_iso2022" [];
	"encodings.iso2022_kr" -> "codecs" [];
	"encodings.iso2022_kr" -> "_multibytecodec" [];
	"encodings.iso2022_jp_ext" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_ext" -> "codecs" [];
	"encodings.iso2022_jp_ext" -> "_multibytecodec" [];
	"encodings.iso2022_jp_3" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_3" -> "codecs" [];
	"encodings.iso2022_jp_3" -> "_multibytecodec" [];
	"encodings.iso2022_jp_2004" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_2004" -> "codecs" [];
	"encodings.iso2022_jp_2004" -> "_multibytecodec" [];
	"encodings.iso2022_jp_2" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_2" -> "codecs" [];
	"encodings.iso2022_jp_2" -> "_multibytecodec" [];
	"encodings.iso2022_jp_1" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp_1" -> "codecs" [];
	"encodings.iso2022_jp_1" -> "_multibytecodec" [];
	"encodings.iso2022_jp" -> "_codecs_iso2022" [];
	"encodings.iso2022_jp" -> "codecs" [];
	"encodings.iso2022_jp" -> "_multibytecodec" [];
	"encodings.idna" -> "stringprep" [];
	"encodings.idna" -> "re" [];
	"encodings.idna" -> "codecs" [];
	"encodings.idna" -> "unicodedata" [];
	"stringprep" -> "unicodedata" [];
	"encodings.hz" -> "_codecs_cn" [];
	"encodings.hz" -> "codecs" [];
	"encodings.hz" -> "_multibytecodec" [];
	"encodings.hp_roman8" -> "codecs" [];
	"encodings.hex_codec" -> "codecs" [];
	"encodings.hex_codec" -> "binascii" [];
	"encodings.gbk" -> "_codecs_cn" [];
	"encodings.gbk" -> "codecs" [];
	"encodings.gbk" -> "_multibytecodec" [];
	"encodings.gb2312" -> "_codecs_cn" [];
	"encodings.gb2312" -> "codecs" [];
	"encodings.gb2312" -> "_multibytecodec" [];
	"encodings.gb18030" -> "_codecs_cn" [];
	"encodings.gb18030" -> "codecs" [];
	"encodings.gb18030" -> "_multibytecodec" [];
	"encodings.euc_kr" -> "_codecs_kr" [];
	"encodings.euc_kr" -> "codecs" [];
	"encodings.euc_kr" -> "_multibytecodec" [];
	"encodings.euc_jp" -> "_codecs_jp" [];
	"encodings.euc_jp" -> "codecs" [];
	"encodings.euc_jp" -> "_multibytecodec" [];
	"encodings.euc_jisx0213" -> "_codecs_jp" [];
	"encodings.euc_jisx0213" -> "codecs" [];
	"encodings.euc_jisx0213" -> "_multibytecodec" [];
	"encodings.euc_jis_2004" -> "_codecs_jp" [];
	"encodings.euc_jis_2004" -> "codecs" [];
	"encodings.euc_jis_2004" -> "_multibytecodec" [];
	"encodings.cp950" -> "_codecs_tw" [];
	"encodings.cp950" -> "codecs" [];
	"encodings.cp950" -> "_multibytecodec" [];
	"encodings.cp949" -> "_codecs_kr" [];
	"encodings.cp949" -> "codecs" [];
	"encodings.cp949" -> "_multibytecodec" [];
	"encodings.cp932" -> "_codecs_jp" [];
	"encodings.cp932" -> "codecs" [];
	"encodings.cp932" -> "_multibytecodec" [];
	"encodings.cp875" -> "codecs" [];
	"encodings.cp874" -> "codecs" [];
	"encodings.cp869" -> "codecs" [];
	"encodings.cp866" -> "codecs" [];
	"encodings.cp865" -> "codecs" [];
	"encodings.cp864" -> "codecs" [];
	"encodings.cp863" -> "codecs" [];
	"encodings.cp862" -> "codecs" [];
	"encodings.cp861" -> "codecs" [];
	"encodings.cp860" -> "codecs" [];
	"encodings.cp858" -> "codecs" [];
	"encodings.cp857" -> "codecs" [];
	"encodings.cp856" -> "codecs" [];
	"encodings.cp855" -> "codecs" [];
	"encodings.cp852" -> "codecs" [];
	"encodings.cp850" -> "codecs" [];
	"encodings.cp775" -> "codecs" [];
	"encodings.cp737" -> "codecs" [];
	"encodings.cp720" -> "codecs" [];
	"encodings.cp500" -> "codecs" [];
	"encodings.cp437" -> "codecs" [];
	"encodings.cp424" -> "codecs" [];
	"encodings.cp273" -> "codecs" [];
	"encodings.cp1258" -> "codecs" [];
	"encodings.cp1257" -> "codecs" [];
	"encodings.cp1256" -> "codecs" [];
	"encodings.cp1255" -> "codecs" [];
	"encodings.cp1254" -> "codecs" [];
	"encodings.cp1253" -> "codecs" [];
	"encodings.cp1252" -> "codecs" [];
	"encodings.cp1251" -> "codecs" [];
	"encodings.cp1250" -> "codecs" [];
	"encodings.cp1140" -> "codecs" [];
	"encodings.cp1125" -> "codecs" [];
	"encodings.cp1026" -> "codecs" [];
	"encodings.cp1006" -> "codecs" [];
	"encodings.cp037" -> "codecs" [];
	"encodings.charmap" -> "codecs" [];
	"encodings.bz2_codec" -> "codecs" [];
	"encodings.bz2_codec" -> "bz2" [];
	"encodings.big5hkscs" -> "_codecs_hk" [];
	"encodings.big5hkscs" -> "codecs" [];
	"encodings.big5hkscs" -> "_multibytecodec" [];
	"encodings.big5" -> "_codecs_tw" [];
	"encodings.big5" -> "codecs" [];
	"encodings.big5" -> "_multibytecodec" [];
	"encodings.base64_codec" -> "codecs" [];
	"encodings.base64_codec" -> "base64" [];
	"encodings.ascii" -> "codecs" [];
	"encodings" -> "codecs" [];
	"encodings" -> "sys" [];
	"encodings" -> "_winapi" [];
	"re" -> "enum" [];
	"re" -> "sre_compile" [];
	"re" -> "sre_parse" [];
	"re" -> "functools" [];
	"re" -> "_locale" [];
	"re" -> "copyreg" [];
	"re" -> "sre_constants" [];
	"sre_parse" -> "sre_constants" [];
	"sre_parse" -> "unicodedata" [];
	"sre_parse" -> "warnings" [];
	"_bootlocale" -> "sys" [];
	"_bootlocale" -> "_locale" [];
	"_bootlocale" -> "locale" [];
	"functools" -> "abc" [];
	"functools" -> "collections" [];
	"functools" -> "reprlib" [];
	"functools" -> "_thread" [];
	"functools" -> "types" [];
	"functools" -> "_functools" [];
	"functools" -> "weakref" [];
	"functools" -> "typing" [];
	"abc" -> "_abc" [];
	"abc" -> "_py_abc" [];
	"_py_abc" -> "_weakrefset" [];
	"_collections_abc" -> "abc" [];
	"_collections_abc" -> "sys" [];
	"_collections_abc" -> "warnings" [];
	"sre_compile" -> "_sre" [];
	"sre_compile" -> "sre_parse" [];
	"sre_compile" -> "sre_constants" [];
	"sre_compile" -> "sys" [];
	"heapq" -> "_heapq" [];
	"weakref" -> "_weakref" [];
	"weakref" -> "_weakrefset" [];
	"weakref" -> "_collections_abc" [];
	"weakref" -> "sys" [];
	"weakref" -> "itertools" [];
	"weakref" -> "copy" [];
	"weakref" -> "atexit" [];
	"weakref" -> "gc" [];
	"linecache" -> "functools" [];
	"linecache" -> "sys" [];
	"linecache" -> "os" [];
	"linecache" -> "tokenize" [];
	"operator" -> "builtins" [];
	"operator" -> "functools" [];
	"operator" -> "_operator" [];
	"enum" -> "sys" [];
	"enum" -> "types" [];
	"enum" -> "warnings" [];
	"os" -> "abc" [];
	"os" -> "sys" [];
	"os" -> "stat" [];
	"os" -> "_collections_abc" [];
	"os" -> "posix" [];
	"os" -> "posixpath" [];
	"os" -> "nt" [];
	"os" -> "ntpath" [];
	"os" -> "os.path" [];
	"os" -> "warnings" [];
	"os" -> "subprocess" [];
	"os" -> "io" [];
	"traceback" -> "collections" [];
	"traceback" -> "itertools" [];
	"traceback" -> "linecache" [];
	"traceback" -> "sys" [];
	"_weakrefset" -> "_weakref" [];
	"_weakrefset" -> "types" [];
	"types" -> "sys" [];
	"types" -> "functools" [];
	"types" -> "_collections_abc" [];
	"locale" -> "sys" [];
	"locale" -> "encodings" [];
	"locale" -> "re" [];
	"locale" -> "_collections_abc" [];
	"locale" -> "builtins" [];
	"locale" -> "functools" [];
	"locale" -> "_locale" [];
	"locale" -> "warnings" [];
	"locale" -> "os" [];
	"locale" -> "_bootlocale" [];
	"sre_constants" -> "_sre" [];
	"collections.abc" -> "_collections_abc" [];
	"collections" -> "_collections_abc" [];
	"collections" -> "heapq" [];
	"collections" -> "sys" [];
	"collections" -> "itertools" [];
	"collections" -> "keyword" [];
	"collections" -> "operator" [];
	"collections" -> "reprlib" [];
	"collections" -> "_weakref" [];
	"collections" -> "_collections" [];
	"collections" -> "warnings" [];
	"collections" -> "copy" [];
	"ntpath" -> "os" [];
	"ntpath" -> "sys" [];
	"ntpath" -> "stat" [];
	"ntpath" -> "genericpath" [];
	"ntpath" -> "nt" [];
	"ntpath" -> "string" [];
	"genericpath" -> "os" [];
	"genericpath" -> "stat" [];
	"reprlib" -> "builtins" [];
	"reprlib" -> "itertools" [];
	"reprlib" -> "_thread" [];
	"io" -> "_io" [];
	"io" -> "abc" [];
	"stat" -> "_stat" [];
	"warnings" -> "sys" [];
	"warnings" -> "linecache" [];
	"warnings" -> "tracemalloc" [];
	"warnings" -> "re" [];
	"warnings" -> "builtins" [];
	"warnings" -> "traceback" [];
	"warnings" -> "_warnings" [];
	"_pickle" -> "codecs" [];
	"_pickle" -> "copyreg" [];
	"_pickle" -> "_compat_pickle" [];
	"datetime" -> "time" [];
	"datetime" -> "math" [];
	"datetime" -> "sys" [];
	"datetime" -> "warnings" [];
	"datetime" -> "_strptime" [];
	"datetime" -> "_datetime" [];
	"_strptime" -> "time" [];
	"_strptime" -> "locale" [];
	"_strptime" -> "calendar" [];
	"_strptime" -> "re" [];
	"_strptime" -> "datetime" [];
	"_strptime" -> "_thread" [];
	"_datetime" -> "time" [];
	"_datetime" -> "_strptime" [];
	"_posixsubprocess" -> "gc" [];
	"posixpath" -> "os" [];
	"posixpath" -> "sys" [];
	"posixpath" -> "stat" [];
	"posixpath" -> "genericpath" [];
	"posixpath" -> "pwd" [];
	"posixpath" -> "re" [];
	"posix" -> "resource" [];
	"_sre" -> "copy" [];
	"_sre" -> "re" [];
	"codecs" -> "builtins" [];
	"codecs" -> "sys" [];
	"codecs" -> "_codecs" [];
	"codecs" -> "encodings" [];
	"time" -> "_strptime" [];
	"gc" -> "time" [];
	"<PyiModuleGraph>" -> "http" [];
	"<PyiModuleGraph>" -> "urllib3.packages.six.moves" [];
	"urllib3.packages.six" -> "importlib" [];
	"zipfile" -> "importlib" [];
	"py_compile" -> "importlib" [];
	"pathlib" -> "urllib" [];
	"email.utils" -> "urllib" [];
	"urllib3.util.response" -> "email" [];
	"urllib3.packages.six.moves.http_client" -> "http" [];
	"urllib3.contrib.pyopenssl" -> "urllib" [];
	"urllib3.connection" -> "urllib3.packages.six.moves" [];
	"urllib3.fields" -> "email" [];
	"mimetypes" -> "urllib" [];
	"urllib3.exceptions" -> "urllib3.packages.six.moves" [];
	"logging" -> "collections" [];
	"http.client" -> "email" [];
	"http.client" -> "collections" [];
	"http.client" -> "urllib" [];
	"xml.sax.expatreader" -> "xml" [];
	"xml.sax.saxutils" -> "urllib" [];
	"urllib.request" -> "http" [];
	"nturl2path" -> "urllib" [];
	"http.cookiejar" -> "urllib" [];
	"xml.etree.ElementTree" -> "xml" [];
	"xml.etree.ElementInclude" -> "urllib" [];
	"_json" -> "json" [];
	"zipimport" -> "importlib" [];
	"setuptools" -> "_distutils_hack" [];
	"setuptools" -> "distutils" [];
	"pydoc" -> "importlib" [];
	"pydoc" -> "urllib" [];
	"pydoc" -> "pydoc_data" [];
	"pydoc" -> "http" [];
	"pydoc" -> "email" [];
	"http.server" -> "email" [];
	"http.server" -> "urllib" [];
	"runpy" -> "importlib" [];
	"setuptools._vendor.packaging.tags" -> "distutils" [];
	"setuptools._vendor.packaging.tags" -> "importlib" [];
	"setuptools._vendor.more_itertools.more" -> "concurrent" [];
	"multiprocessing.connection" -> "xmlrpc" [];
	"xmlrpc.client" -> "http" [];
	"xmlrpc.client" -> "urllib" [];
	"xmlrpc.client" -> "xml" [];
	"xmlrpc.server" -> "http" [];
	"setuptools.msvc" -> "distutils" [];
	"distutils.command.build_ext" -> "concurrent" [];
	"setuptools.monkey" -> "distutils" [];
	"setuptools.depends" -> "distutils" [];
	"setuptools._imp" -> "importlib" [];
	"setuptools.dist" -> "distutils" [];
	"setuptools.command.py36compat" -> "distutils" [];
	"pkg_resources" -> "email" [];
	"packaging.tags" -> "importlib" [];
	"packaging.metadata" -> "email" [];
	"pkg_resources._vendor.packaging.tags" -> "distutils" [];
	"pkg_resources._vendor.packaging.tags" -> "importlib" [];
	"pkg_resources.extern" -> "importlib" [];
	"setuptools.config" -> "distutils" [];
	"distutils.command.bdist" -> "distutils" [];
	"setuptools.extern" -> "importlib" [];
	"setuptools.extension" -> "distutils" [];
	"distutils.util" -> "importlib" [];
	"cgi" -> "collections" [];
	"cgi" -> "urllib" [];
	"cgi" -> "email" [];
	"/Users/andik/flask_env/lib/python3.9/site-packages/_pyinstaller_hooks_contrib/rthooks/pyi_rth_traitlets.py" -> "traitlets" [];
	"traitlets.utils.decorators" -> "traitlets" [];
	"typing_extensions" -> "asyncio" [];
	"asyncio.coroutines" -> "collections" [];
	"asyncio.base_events" -> "concurrent" [];
	"asyncio.tasks" -> "concurrent" [];
	"asyncio.futures" -> "concurrent" [];
	"ai_agent" -> "langchain_core" [];
	"sqlalchemy.util._has_cy" -> "sqlalchemy" [];
	"sqlalchemy.util.compat" -> "collections" [];
	"importlib_metadata._adapters" -> "email" [];
	"importlib_metadata._meta" -> "collections" [];
	"sqlalchemy.engine.url" -> "collections" [];
	"sqlalchemy.engine.url" -> "urllib" [];
	"sqlalchemy.engine.row" -> "collections" [];
	"sqlalchemy.engine.row" -> "sqlalchemy" [];
	"sqlalchemy.sql.lambdas" -> "collections" [];
	"sqlalchemy.sql.dml" -> "collections" [];
	"sqlalchemy.sql.sqltypes" -> "collections" [];
	"sqlalchemy.future.engine" -> "sqlalchemy" [];
	"sqlalchemy.orm.query" -> "collections" [];
	"sqlalchemy.sql.coercions" -> "collections" [];
	"sqlalchemy.dialects._typing" -> "sqlalchemy" [];
	"sqlite3.dbapi2" -> "collections" [];
	"sqlalchemy.dialects.postgresql.types" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.operators" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.ext" -> "sqlalchemy" [];
	"sqlalchemy.dialects.postgresql.psycopg2" -> "collections" [];
	"sqlalchemy.dialects.oracle.vector" -> "sqlalchemy" [];
	"sqlalchemy.connectors.asyncio" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mysql.mariadb" -> "sqlalchemy" [];
	"sqlalchemy.connectors.pyodbc" -> "urllib" [];
	"sqlalchemy.dialects.mysql.pymysql" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql" -> "sqlalchemy" [];
	"sqlalchemy.ext.baked" -> "collections" [];
	"sqlalchemy.orm._typing" -> "sqlalchemy" [];
	"langchain_core.messages.utils" -> "collections" [];
	"langchain_core.messages.utils" -> "langchain_core" [];
	"langchain_core.runnables.base" -> "concurrent" [];
	"langchain_core.runnables.base" -> "langchain_core" [];
	"langchain_core.runnables.configurable" -> "collections" [];
	"langchain_core.tracers._streaming" -> "collections" [];
	"langchain_core.utils.mustache" -> "collections" [];
	"langchain_core.utils.utils" -> "collections" [];
	"langchain_core.utils.utils" -> "packaging" [];
	"requests" -> "urllib" [];
	"requests.compat" -> "urllib" [];
	"requests.models" -> "encodings" [];
	"certifi.core" -> "importlib" [];
	"charset_normalizer.utils" -> "encodings" [];
	"charset_normalizer.constant" -> "encodings" [];
	"charset_normalizer.models" -> "encodings" [];
	"langchain_core._api.deprecation" -> "collections" [];
	"langchain_core.utils.formatting" -> "collections" [];
	"langchain_core.tracers.evaluation" -> "concurrent" [];
	"langchain_core.tracers.evaluation" -> "collections" [];
	"langchain_core.tracers.context" -> "collections" [];
	"langchain_core.callbacks.base" -> "collections" [];
	"langchain_core.callbacks.base" -> "langchain_core" [];
	"langchain_core.outputs.generation" -> "langchain_core" [];
	"langchain_core.load.dump" -> "langchain_core" [];
	"langchain_core.load.load" -> "langchain_core" [];
	"langchain_core.outputs.chat_generation" -> "langchain_core" [];
	"langchain_core.documents.transformers" -> "collections" [];
	"langchain_core.documents.compressor" -> "langchain_core" [];
	"langchain_core.documents.compressor" -> "collections" [];
	"langchain_core.documents.base" -> "collections" [];
	"langchain_core.agents" -> "collections" [];
	"langchain_core.callbacks.usage" -> "collections" [];
	"langchain_core.callbacks.usage" -> "langchain_core" [];
	"langchain_core.callbacks.streaming_stdout" -> "langchain_core" [];
	"langchain_core.callbacks.stdout" -> "langchain_core" [];
	"langchain_core.callbacks.file" -> "langchain_core" [];
	"tornado.ioloop" -> "concurrent" [];
	"tornado.netutil" -> "concurrent" [];
	"tornado.platform.asyncio" -> "concurrent" [];
	"tornado.platform.asyncio" -> "tornado" [];
	"tornado.escape" -> "urllib" [];
	"logging.handlers" -> "email" [];
	"logging.handlers" -> "http" [];
	"logging.handlers" -> "urllib" [];
	"smtplib" -> "email" [];
	"tornado.gen" -> "concurrent" [];
	"tornado.autoreload" -> "importlib" [];
	"langsmith.utils" -> "collections" [];
	"langsmith.utils" -> "concurrent" [];
	"langsmith.utils" -> "http" [];
	"langsmith._internal._patch" -> "urllib" [];
	"zoneinfo._common" -> "importlib" [];
	"pydantic.v1.typing" -> "collections" [];
	"httpx._main" -> "pygments" [];
	"httpx._main" -> "rich" [];
	"rich.jupyter" -> "IPython" [];
	"IPython.lib.display" -> "urllib" [];
	"pygments.plugin" -> "importlib" [];
	"pygments.styles.zenburn" -> "pygments" [];
	"pygments.styles.xcode" -> "pygments" [];
	"pygments.styles.vs" -> "pygments" [];
	"pygments.styles.vim" -> "pygments" [];
	"pygments.styles.trac" -> "pygments" [];
	"pygments.styles.tango" -> "pygments" [];
	"pygments.styles.stata_light" -> "pygments" [];
	"pygments.styles.stata_dark" -> "pygments" [];
	"pygments.styles.staroffice" -> "pygments" [];
	"pygments.styles.solarized" -> "pygments" [];
	"pygments.styles.sas" -> "pygments" [];
	"pygments.styles.rrt" -> "pygments" [];
	"pygments.styles.rainbow_dash" -> "pygments" [];
	"pygments.styles.perldoc" -> "pygments" [];
	"pygments.styles.pastie" -> "pygments" [];
	"pygments.styles.paraiso_light" -> "pygments" [];
	"pygments.styles.paraiso_dark" -> "pygments" [];
	"pygments.styles.onedark" -> "pygments" [];
	"pygments.styles.nord" -> "pygments" [];
	"pygments.styles.native" -> "pygments" [];
	"pygments.styles.murphy" -> "pygments" [];
	"pygments.styles.monokai" -> "pygments" [];
	"pygments.styles.material" -> "pygments" [];
	"pygments.styles.manni" -> "pygments" [];
	"pygments.styles.lovelace" -> "pygments" [];
	"pygments.styles.lilypond" -> "pygments" [];
	"pygments.styles.lightbulb" -> "pygments" [];
	"pygments.styles.inkpot" -> "pygments" [];
	"pygments.styles.igor" -> "pygments" [];
	"pygments.styles.gruvbox" -> "pygments" [];
	"pygments.styles.gh_dark" -> "pygments" [];
	"pygments.styles.fruity" -> "pygments" [];
	"pygments.styles.friendly_grayscale" -> "pygments" [];
	"pygments.styles.friendly" -> "pygments" [];
	"pygments.styles.emacs" -> "pygments" [];
	"pygments.styles.dracula" -> "pygments" [];
	"pygments.styles.default" -> "pygments" [];
	"pygments.styles.colorful" -> "pygments" [];
	"pygments.styles.coffee" -> "pygments" [];
	"pygments.styles.bw" -> "pygments" [];
	"pygments.styles.borland" -> "pygments" [];
	"pygments.styles.autumn" -> "pygments" [];
	"pygments.styles.arduino" -> "pygments" [];
	"pygments.styles.algol_nu" -> "pygments" [];
	"pygments.styles.algol" -> "pygments" [];
	"pygments.styles.abap" -> "pygments" [];
	"pygments.lexers.zig" -> "pygments" [];
	"pygments.lexers.yara" -> "pygments" [];
	"pygments.lexers.yang" -> "pygments" [];
	"pygments.lexers.xorg" -> "pygments" [];
	"pygments.lexers.x10" -> "pygments" [];
	"pygments.lexers.wren" -> "pygments" [];
	"pygments.lexers.wowtoc" -> "pygments" [];
	"pygments.lexers.whiley" -> "pygments" [];
	"pygments.lexers.webmisc" -> "pygments" [];
	"pygments.lexers.webidl" -> "pygments" [];
	"pygments.lexers.webassembly" -> "pygments" [];
	"pygments.lexers.vyper" -> "pygments" [];
	"pygments.lexers.vip" -> "pygments" [];
	"pygments.lexers.verifpal" -> "pygments" [];
	"pygments.lexers.verification" -> "pygments" [];
	"pygments.lexers.varnish" -> "pygments" [];
	"pygments.lexers.usd" -> "pygments" [];
	"pygments.lexers.urbi" -> "pygments" [];
	"pygments.lexers.unicon" -> "pygments" [];
	"pygments.lexers.ul4" -> "pygments" [];
	"pygments.lexers.typst" -> "pygments" [];
	"pygments.lexers.typoscript" -> "pygments" [];
	"pygments.lexers.trafficscript" -> "pygments" [];
	"pygments.lexers.tnt" -> "pygments" [];
	"pygments.lexers.tls" -> "pygments" [];
	"pygments.lexers.tlb" -> "pygments" [];
	"pygments.lexers.thingsdb" -> "pygments" [];
	"pygments.lexers.theorem" -> "pygments" [];
	"pygments.lexers.textfmts" -> "pygments" [];
	"pygments.lexers.textedit" -> "pygments" [];
	"pygments.lexers.testing" -> "pygments" [];
	"pygments.lexers.teraterm" -> "pygments" [];
	"pygments.lexers.templates" -> "pygments" [];
	"pygments.lexers.teal" -> "pygments" [];
	"pygments.lexers.tcl" -> "pygments" [];
	"pygments.lexers.tal" -> "pygments" [];
	"pygments.lexers.tact" -> "pygments" [];
	"pygments.lexers.tablegen" -> "pygments" [];
	"pygments.lexers.supercollider" -> "pygments" [];
	"pygments.lexers.stata" -> "pygments" [];
	"pygments.lexers.srcinfo" -> "pygments" [];
	"pygments.lexers.sql" -> "pygments" [];
	"pygments.lexers.spice" -> "pygments" [];
	"pygments.lexers.special" -> "pygments" [];
	"pygments.lexers.sophia" -> "pygments" [];
	"pygments.lexers.soong" -> "pygments" [];
	"pygments.lexers.solidity" -> "pygments" [];
	"pygments.lexers.snobol" -> "pygments" [];
	"pygments.lexers.smv" -> "pygments" [];
	"pygments.lexers.smithy" -> "pygments" [];
	"pygments.lexers.smalltalk" -> "pygments" [];
	"pygments.lexers.slash" -> "pygments" [];
	"pygments.lexers.sieve" -> "pygments" [];
	"pygments.lexers.shell" -> "pygments" [];
	"pygments.lexers.sgf" -> "pygments" [];
	"pygments.lexers.scripting" -> "pygments" [];
	"pygments.lexers.scdoc" -> "pygments" [];
	"pygments.lexers.savi" -> "pygments" [];
	"pygments.lexers.sas" -> "pygments" [];
	"pygments.lexers.rust" -> "pygments" [];
	"pygments.lexers.ruby" -> "pygments" [];
	"pygments.lexers.robotframework" -> "pygments" [];
	"pygments.lexers.roboconf" -> "pygments" [];
	"pygments.lexers.rnc" -> "pygments" [];
	"pygments.lexers.rita" -> "pygments" [];
	"pygments.lexers.ride" -> "pygments" [];
	"pygments.lexers.resource" -> "pygments" [];
	"pygments.lexers.rego" -> "pygments" [];
	"pygments.lexers.rebol" -> "pygments" [];
	"pygments.lexers.rdf" -> "pygments" [];
	"pygments.lexers.r" -> "pygments" [];
	"pygments.lexers.qvt" -> "pygments" [];
	"pygments.lexers.qlik" -> "pygments" [];
	"pygments.lexers.q" -> "pygments" [];
	"pygments.lexers.ptx" -> "pygments" [];
	"pygments.lexers.prql" -> "pygments" [];
	"pygments.lexers.promql" -> "pygments" [];
	"pygments.lexers.prolog" -> "pygments" [];
	"pygments.lexers.procfile" -> "pygments" [];
	"pygments.lexers.praat" -> "pygments" [];
	"pygments.lexers.pony" -> "pygments" [];
	"pygments.lexers.pointless" -> "pygments" [];
	"pygments.lexers.php" -> "pygments" [];
	"pygments.lexers.phix" -> "pygments" [];
	"pygments.lexers.perl" -> "pygments" [];
	"pygments.lexers.pddl" -> "pygments" [];
	"pygments.lexers.pawn" -> "pygments" [];
	"pygments.lexers.pascal" -> "pygments" [];
	"pygments.lexers.parsers" -> "pygments" [];
	"pygments.lexers.parasail" -> "pygments" [];
	"pygments.lexers.openscad" -> "pygments" [];
	"pygments.lexers.ooc" -> "pygments" [];
	"pygments.lexers.objective" -> "pygments" [];
	"pygments.lexers.oberon" -> "pygments" [];
	"pygments.lexers.numbair" -> "pygments" [];
	"pygments.lexers.nix" -> "pygments" [];
	"pygments.lexers.nit" -> "pygments" [];
	"pygments.lexers.nimrod" -> "pygments" [];
	"pygments.lexers.ncl" -> "pygments" [];
	"pygments.lexers.mosel" -> "pygments" [];
	"pygments.lexers.monte" -> "pygments" [];
	"pygments.lexers.modula2" -> "pygments" [];
	"pygments.lexers.modeling" -> "pygments" [];
	"pygments.lexers.ml" -> "pygments" [];
	"pygments.lexers.mips" -> "pygments" [];
	"pygments.lexers.minecraft" -> "pygments" [];
	"pygments.lexers.mime" -> "pygments" [];
	"pygments.lexers.meson" -> "pygments" [];
	"pygments.lexers.maxima" -> "pygments" [];
	"pygments.lexers.matlab" -> "pygments" [];
	"pygments.lexers.markup" -> "pygments" [];
	"pygments.lexers.maple" -> "pygments" [];
	"pygments.lexers.make" -> "pygments" [];
	"pygments.lexers.macaulay2" -> "pygments" [];
	"pygments.lexers.lisp" -> "pygments" [];
	"pygments.lexers.lilypond" -> "pygments" [];
	"pygments.lexers.lean" -> "pygments" [];
	"pygments.lexers.ldap" -> "pygments" [];
	"pygments.lexers.kusto" -> "pygments" [];
	"pygments.lexers.kuin" -> "pygments" [];
	"pygments.lexers.julia" -> "pygments" [];
	"pygments.lexers.jsx" -> "pygments" [];
	"pygments.lexers.jsonnet" -> "pygments" [];
	"pygments.lexers.json5" -> "pygments" [];
	"pygments.lexers.jslt" -> "pygments" [];
	"pygments.lexers.jmespath" -> "pygments" [];
	"pygments.lexers.javascript" -> "pygments" [];
	"pygments.lexers.j" -> "pygments" [];
	"pygments.lexers.iolang" -> "pygments" [];
	"pygments.lexers.int_fiction" -> "pygments" [];
	"pygments.lexers.installers" -> "pygments" [];
	"pygments.lexers.inferno" -> "pygments" [];
	"pygments.lexers.igor" -> "pygments" [];
	"pygments.lexers.idl" -> "pygments" [];
	"pygments.lexers.html" -> "pygments" [];
	"pygments.lexers.hexdump" -> "pygments" [];
	"pygments.lexers.hdl" -> "pygments" [];
	"pygments.lexers.haxe" -> "pygments" [];
	"pygments.lexers.hare" -> "pygments" [];
	"pygments.lexers.gsql" -> "pygments" [];
	"pygments.lexers.graphviz" -> "pygments" [];
	"pygments.lexers.graphql" -> "pygments" [];
	"pygments.lexers.graphics" -> "pygments" [];
	"pygments.lexers.graph" -> "pygments" [];
	"pygments.lexers.grammar_notation" -> "pygments" [];
	"pygments.lexers.go" -> "pygments" [];
	"pygments.lexers.gleam" -> "pygments" [];
	"pygments.lexers.gdscript" -> "pygments" [];
	"pygments.lexers.gcodelexer" -> "pygments" [];
	"pygments.lexers.func" -> "pygments" [];
	"pygments.lexers.freefem" -> "pygments" [];
	"pygments.lexers.foxpro" -> "pygments" [];
	"pygments.lexers.fortran" -> "pygments" [];
	"pygments.lexers.forth" -> "pygments" [];
	"pygments.lexers.floscript" -> "pygments" [];
	"pygments.lexers.fift" -> "pygments" [];
	"pygments.lexers.felix" -> "pygments" [];
	"pygments.lexers.fantom" -> "pygments" [];
	"pygments.lexers.factor" -> "pygments" [];
	"pygments.lexers.ezhil" -> "pygments" [];
	"pygments.lexers.esoteric" -> "pygments" [];
	"pygments.lexers.erlang" -> "pygments" [];
	"pygments.lexers.email" -> "pygments" [];
	"pygments.lexers.elpi" -> "pygments" [];
	"pygments.lexers.elm" -> "pygments" [];
	"pygments.lexers.eiffel" -> "pygments" [];
	"pygments.lexers.ecl" -> "pygments" [];
	"pygments.lexers.dylan" -> "pygments" [];
	"pygments.lexers.dsls" -> "pygments" [];
	"pygments.lexers.dns" -> "pygments" [];
	"pygments.lexers.diff" -> "pygments" [];
	"pygments.lexers.devicetree" -> "pygments" [];
	"pygments.lexers.dax" -> "pygments" [];
	"pygments.lexers.data" -> "pygments" [];
	"pygments.lexers.dalvik" -> "pygments" [];
	"pygments.lexers.d" -> "pygments" [];
	"pygments.lexers.css" -> "pygments" [];
	"pygments.lexers.csound" -> "pygments" [];
	"pygments.lexers.crystal" -> "pygments" [];
	"pygments.lexers.cplint" -> "pygments" [];
	"pygments.lexers.console" -> "pygments" [];
	"pygments.lexers.configs" -> "pygments" [];
	"pygments.lexers.comal" -> "pygments" [];
	"pygments.lexers.codeql" -> "pygments" [];
	"pygments.lexers.clean" -> "pygments" [];
	"pygments.lexers.chapel" -> "pygments" [];
	"pygments.lexers.cddl" -> "pygments" [];
	"pygments.lexers.carbon" -> "pygments" [];
	"pygments.lexers.capnproto" -> "pygments" [];
	"pygments.lexers.c_like" -> "pygments" [];
	"pygments.lexers.c_cpp" -> "pygments" [];
	"pygments.lexers.business" -> "pygments" [];
	"pygments.lexers.bqn" -> "pygments" [];
	"pygments.lexers.boa" -> "pygments" [];
	"pygments.lexers.blueprint" -> "pygments" [];
	"pygments.lexers.bibtex" -> "pygments" [];
	"pygments.lexers.berry" -> "pygments" [];
	"pygments.lexers.bdd" -> "pygments" [];
	"pygments.lexers.basic" -> "pygments" [];
	"pygments.lexers.bare" -> "pygments" [];
	"pygments.lexers.automation" -> "pygments" [];
	"pygments.lexers.asn1" -> "pygments" [];
	"pygments.lexers.asm" -> "pygments" [];
	"pygments.lexers.asc" -> "pygments" [];
	"pygments.lexers.arturo" -> "pygments" [];
	"pygments.lexers.arrow" -> "pygments" [];
	"pygments.lexers.archetype" -> "pygments" [];
	"pygments.lexers.apl" -> "pygments" [];
	"pygments.lexers.apdlexer" -> "pygments" [];
	"pygments.lexers.ampl" -> "pygments" [];
	"pygments.lexers.amdgpu" -> "pygments" [];
	"pygments.lexers.ambient" -> "pygments" [];
	"pygments.lexers.algebra" -> "pygments" [];
	"pygments.lexers.ada" -> "pygments" [];
	"pygments.lexers.actionscript" -> "pygments" [];
	"pygments.lexers._sourcemod_builtins" -> "urllib" [];
	"pygments.lexers._sourcemod_builtins" -> "pygments" [];
	"pygments.lexers._scilab_builtins" -> "pygments" [];
	"pygments.lexers._postgres_builtins" -> "urllib" [];
	"pygments.lexers._postgres_builtins" -> "pygments" [];
	"pygments.lexers._php_builtins" -> "urllib" [];
	"pygments.lexers._mysql_builtins" -> "urllib" [];
	"pygments.lexers._mysql_builtins" -> "pygments" [];
	"pygments.lexers._lua_builtins" -> "urllib" [];
	"pygments.formatters.terminal256" -> "pygments" [];
	"pygments.formatters.terminal" -> "pygments" [];
	"pygments.formatters.svg" -> "pygments" [];
	"pygments.formatters.rtf" -> "pygments" [];
	"pygments.formatters.pangomarkup" -> "pygments" [];
	"pygments.formatters.other" -> "pygments" [];
	"pygments.formatters.latex" -> "pygments" [];
	"pygments.formatters.irc" -> "pygments" [];
	"pygments.formatters.img" -> "pygments" [];
	"PIL.ImageFont" -> "packaging" [];
	"PIL.TiffImagePlugin" -> "collections" [];
	"PIL.ImagePalette" -> "collections" [];
	"PIL.ImageOps" -> "collections" [];
	"PIL._typing" -> "collections" [];
	"PIL._typing" -> "numpy" [];
	"numpy._core._methods" -> "numpy" [];
	"numpy._core._exceptions" -> "numpy" [];
	"numpy._core._ufunc_config" -> "collections" [];
	"numpy._core._ufunc_config" -> "numpy" [];
	"numpy._core.numerictypes" -> "numpy" [];
	"numpy._core._machar" -> "numpy" [];
	"numpy._core.getlimits" -> "numpy" [];
	"numpy._core.records" -> "numpy" [];
	"numpy.matrixlib.defmatrix" -> "numpy" [];
	"numpy.lib._function_base_impl" -> "collections" [];
	"numpy.lib._array_utils_impl" -> "numpy" [];
	"numpy.lib._npyio_impl" -> "collections" [];
	"numpy.lib._datasource" -> "numpy" [];
	"numpy.lib._datasource" -> "urllib" [];
	"numpy.lib._polynomial_impl" -> "numpy" [];
	"numpy.lib._shape_base_impl" -> "numpy" [];
	"numpy.lib._type_check_impl" -> "numpy" [];
	"numpy.lib.mixins" -> "numpy" [];
	"numpy._core.overrides" -> "numpy" [];
	"numpy.testing._private.extbuild" -> "importlib" [];
	"numpy._typing._array_like" -> "collections" [];
	"numpy._typing._nested_sequence" -> "collections" [];
	"numpy._typing._dtype_like" -> "collections" [];
	"numpy._typing._shape" -> "collections" [];
	"PIL.ImageDraw" -> "collections" [];
	"pygments.formatters.html" -> "pygments" [];
	"pygments.formatters.groff" -> "pygments" [];
	"pygments.formatters.bbcode" -> "pygments" [];
	"numpy._core.defchararray" -> "numpy" [];
	"numpy.f2py._backends._distutils" -> "numpy" [];
	"numpy.f2py.__version__" -> "numpy" [];
	"numpy.random.mtrand" -> "collections" [];
	"numpy.random._pcg64" -> "numpy" [];
	"numpy.random.bit_generator" -> "collections" [];
	"numpy.random._generator" -> "collections" [];
	"numpy.fft._helper" -> "numpy" [];
	"numpy.fft._pocketfft" -> "numpy" [];
	"yaml.constructor" -> "collections" [];
	"IPython.core.display" -> "urllib" [];
	"IPython.core.display" -> "xml" [];
	"IPython.core.display" -> "matplotlib_inline" [];
	"matplotlib_inline.backend_inline" -> "IPython" [];
	"traitlets.config.application" -> "traitlets" [];
	"traitlets.config.loader" -> "traitlets" [];
	"IPython.core.pylabtools" -> "IPython" [];
	"IPython.core.pylabtools" -> "matplotlib_inline" [];
	"IPython.utils.capture" -> "IPython" [];
	"IPython.utils.openpy" -> "urllib" [];
	"IPython.core.interactiveshell" -> "IPython" [];
	"IPython.core.interactiveshell" -> "matplotlib_inline" [];
	"IPython.core.interactiveshell" -> "urllib" [];
	"nbformat" -> "traitlets" [];
	"nbformat.notebooknode" -> "collections" [];
	"nbformat._version" -> "importlib" [];
	"nbformat.v4.nbjson" -> "nbformat" [];
	"nbformat.v4.convert" -> "traitlets" [];
	"jsonschema.exceptions" -> "attr" [];
	"jsonschema.exceptions" -> "referencing" [];
	"jsonschema._types" -> "attr" [];
	"jsonschema._utils" -> "collections" [];
	"jsonschema._utils" -> "urllib" [];
	"referencing.exceptions" -> "attr" [];
	"referencing.typing" -> "collections" [];
	"referencing._core" -> "collections" [];
	"referencing._core" -> "urllib" [];
	"referencing._core" -> "attr" [];
	"referencing.jsonschema" -> "collections" [];
	"referencing._attrs" -> "attr" [];
	"attrs.validators" -> "attr" [];
	"attr._compat" -> "collections" [];
	"attr._make" -> "collections" [];
	"attrs.setters" -> "attr" [];
	"attrs.filters" -> "attr" [];
	"attrs.exceptions" -> "attr" [];
	"attrs.converters" -> "attr" [];
	"attr" -> "importlib" [];
	"jsonschema.protocols" -> "collections" [];
	"jsonschema.protocols" -> "referencing" [];
	"jsonschema.validators" -> "urllib" [];
	"jsonschema.validators" -> "attr" [];
	"jsonschema.validators" -> "referencing" [];
	"jsonschema_specifications" -> "referencing" [];
	"jsonschema_specifications._core" -> "importlib" [];
	"jsonschema._typing" -> "referencing" [];
	"jsonschema._legacy_keywords" -> "referencing" [];
	"isoduration.parser.util" -> "isoduration" [];
	"isoduration.parser.parsing" -> "isoduration" [];
	"arrow.util" -> "dateutil" [];
	"six" -> "importlib" [];
	"isoduration.formatter.formatting" -> "isoduration" [];
	"isoduration.formatter.checking" -> "isoduration" [];
	"uri_template.uritemplate" -> "collections" [];
	"jsonpointer" -> "collections" [];
	"nbformat.v3.nbbase" -> "nbformat" [];
	"nbformat.v2.nbbase" -> "nbformat" [];
	"nbformat.v1.nbbase" -> "nbformat" [];
	"IPython.core.magics.script" -> "IPython" [];
	"IPython.core.magics.pylab" -> "IPython" [];
	"IPython.core.magics.osm" -> "IPython" [];
	"IPython.core.magics.namespace" -> "IPython" [];
	"IPython.core.magics.history" -> "IPython" [];
	"IPython.core.magics.execution" -> "IPython" [];
	"IPython.core.magics.display" -> "IPython" [];
	"IPython.core.magics.code" -> "urllib" [];
	"IPython.core.magics.basic" -> "IPython" [];
	"IPython.core.completer" -> "IPython" [];
	"jedi.api.classes" -> "parso" [];
	"jedi.inference.value.iterable" -> "jedi" [];
	"jedi.inference.value.instance" -> "parso" [];
	"jedi.plugins.pytest" -> "parso" [];
	"jedi.plugins.pytest" -> "importlib" [];
	"jedi.inference.value.function" -> "parso" [];
	"jedi.inference.flow_analysis" -> "jedi" [];
	"jedi.inference.context" -> "parso" [];
	"jedi.inference.finder" -> "parso" [];
	"jedi.inference.filters" -> "parso" [];
	"jedi.inference.filters" -> "jedi" [];
	"jedi.inference.lazy_value" -> "jedi" [];
	"jedi.inference.analysis" -> "parso" [];
	"jedi.inference.value.module" -> "jedi" [];
	"jedi.inference.syntax_tree" -> "parso" [];
	"jedi.inference.sys_path" -> "importlib" [];
	"jedi.inference.helpers" -> "parso" [];
	"jedi.inference.arguments" -> "parso" [];
	"jedi.inference.references" -> "jedi" [];
	"jedi.inference.imports" -> "parso" [];
	"jedi.api.environment" -> "jedi" [];
	"jedi.api.strings" -> "jedi" [];
	"jedi.api.interpreter" -> "jedi" [];
	"parso.python.tree" -> "parso" [];
	"parso.python.tokenize" -> "parso" [];
	"parso.python.pep8" -> "parso" [];
	"parso.python.errors" -> "parso" [];
	"parso.python.parser" -> "parso" [];
	"parso.pgen2.grammar_parser" -> "parso" [];
	"jedi.inference.names" -> "parso" [];
	"jedi.inference.names" -> "jedi" [];
	"jedi.cache" -> "parso" [];
	"jedi.api.helpers" -> "parso" [];
	"jedi.api.helpers" -> "jedi" [];
	"exceptiongroup._formatting" -> "collections" [];
	"exceptiongroup._exceptions" -> "collections" [];
	"exceptiongroup._catch" -> "collections" [];
	"IPython.core.profiledir" -> "IPython" [];
	"IPython.core.inputtransformer2" -> "IPython" [];
	"IPython.core.history" -> "IPython" [];
	"IPython.core.formatters" -> "IPython" [];
	"IPython.terminal.interactiveshell" -> "pygments" [];
	"black" -> "collections" [];
	"blib2to3.pgen2.tokenize" -> "collections" [];
	"blib2to3.pgen2.pgen" -> "collections" [];
	"blib2to3.pgen2.parse" -> "collections" [];
	"blib2to3.pgen2.parse" -> "blib2to3" [];
	"blib2to3.pgen2.driver" -> "collections" [];
	"blib2to3.pgen2.driver" -> "blib2to3" [];
	"black.trans" -> "blib2to3" [];
	"black.strings" -> "blib2to3" [];
	"black.schema" -> "importlib" [];
	"black.numerics" -> "blib2to3" [];
	"black.debug" -> "collections" [];
	"black.debug" -> "blib2to3" [];
	"black.brackets" -> "collections" [];
	"black.brackets" -> "blib2to3" [];
	"platformdirs.unix" -> "collections" [];
	"platformdirs.windows" -> "collections" [];
	"platformdirs.api" -> "collections" [];
	"black.concurrency" -> "collections" [];
	"black.concurrency" -> "concurrent" [];
	"blib2to3.pytree" -> "collections" [];
	"black.ranges" -> "collections" [];
	"black.parsing" -> "collections" [];
	"black.nodes" -> "collections" [];
	"black.lines" -> "collections" [];
	"black.lines" -> "blib2to3" [];
	"black.linegen" -> "collections" [];
	"black.linegen" -> "blib2to3" [];
	"black.handle_ipynb_magics" -> "importlib" [];
	"black.files" -> "collections" [];
	"black.files" -> "packaging" [];
	"black.files" -> "toml" [];
	"tomli._parser" -> "collections" [];
	"black.comments" -> "collections" [];
	"black.comments" -> "blib2to3" [];
	"black.cache" -> "collections" [];
	"pathspec.util" -> "collections" [];
	"pathspec.pathspec" -> "collections" [];
	"click._termui_impl" -> "urllib" [];
	"IPython.terminal.shortcuts.auto_suggest" -> "prompt_toolkit" [];
	"prompt_toolkit.clipboard.base" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.bindings.named_commands" -> "prompt_toolkit" [];
	"prompt_toolkit.application.run_in_terminal" -> "prompt_toolkit" [];
	"prompt_toolkit.application.dummy" -> "prompt_toolkit" [];
	"prompt_toolkit.input.posix_pipe" -> "prompt_toolkit" [];
	"prompt_toolkit.output.windows10" -> "prompt_toolkit" [];
	"prompt_toolkit.output.win32" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.vi_state" -> "prompt_toolkit" [];
	"prompt_toolkit.output.vt100" -> "prompt_toolkit" [];
	"prompt_toolkit.output.defaults" -> "prompt_toolkit" [];
	"prompt_toolkit.output.conemu" -> "prompt_toolkit" [];
	"prompt_toolkit.output.plain_text" -> "prompt_toolkit" [];
	"prompt_toolkit.output.base" -> "prompt_toolkit" [];
	"prompt_toolkit.input.win32_pipe" -> "prompt_toolkit" [];
	"prompt_toolkit.input.vt100_parser" -> "prompt_toolkit" [];
	"prompt_toolkit.input.ansi_escape_sequences" -> "prompt_toolkit" [];
	"prompt_toolkit.eventloop.win32" -> "prompt_toolkit" [];
	"prompt_toolkit.input.vt100" -> "prompt_toolkit" [];
	"prompt_toolkit.input.win32" -> "prompt_toolkit" [];
	"prompt_toolkit.input.base" -> "prompt_toolkit" [];
	"prompt_toolkit.application.application" -> "prompt_toolkit" [];
	"prompt_toolkit.layout.screen" -> "prompt_toolkit" [];
	"prompt_toolkit.layout.scrollable_pane" -> "prompt_toolkit" [];
	"prompt_toolkit.layout.menus" -> "prompt_toolkit" [];
	"prompt_toolkit.formatted_text.base" -> "prompt_toolkit" [];
	"prompt_toolkit.completion.word_completer" -> "prompt_toolkit" [];
	"prompt_toolkit.completion.nested" -> "prompt_toolkit" [];
	"prompt_toolkit.completion.fuzzy_completer" -> "prompt_toolkit" [];
	"prompt_toolkit.completion.filesystem" -> "prompt_toolkit" [];
	"prompt_toolkit.completion.deduplicate" -> "prompt_toolkit" [];
	"prompt_toolkit.completion.base" -> "prompt_toolkit" [];
	"prompt_toolkit.layout.margins" -> "prompt_toolkit" [];
	"prompt_toolkit.layout.mouse_handlers" -> "prompt_toolkit" [];
	"prompt_toolkit.layout.layout" -> "prompt_toolkit" [];
	"prompt_toolkit.layout.dummy" -> "prompt_toolkit" [];
	"prompt_toolkit.layout.containers" -> "prompt_toolkit" [];
	"prompt_toolkit.formatted_text.utils" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.defaults" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.bindings.vi" -> "prompt_toolkit" [];
	"prompt_toolkit.filters.app" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.bindings.mouse" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.bindings.emacs" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.bindings.cpr" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.bindings.basic" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.bindings.page_navigation" -> "prompt_toolkit" [];
	"prompt_toolkit.input.typeahead" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.bindings.completion" -> "prompt_toolkit" [];
	"prompt_toolkit.shortcuts.prompt" -> "prompt_toolkit" [];
	"prompt_toolkit.widgets.toolbars" -> "prompt_toolkit" [];
	"prompt_toolkit.widgets.menus" -> "prompt_toolkit" [];
	"prompt_toolkit.widgets.dialogs" -> "prompt_toolkit" [];
	"prompt_toolkit.widgets.base" -> "prompt_toolkit" [];
	"prompt_toolkit.lexers.pygments" -> "prompt_toolkit" [];
	"prompt_toolkit.lexers.pygments" -> "pygments" [];
	"prompt_toolkit.lexers.base" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.bindings.open_in_editor" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.bindings.auto_suggest" -> "prompt_toolkit" [];
	"prompt_toolkit.layout.controls" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.key_processor" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.key_bindings" -> "prompt_toolkit" [];
	"IPython.terminal.shortcuts.filters" -> "prompt_toolkit" [];
	"IPython.terminal.shortcuts" -> "prompt_toolkit" [];
	"IPython.terminal.shortcuts.auto_match" -> "prompt_toolkit" [];
	"IPython.terminal.ptutils" -> "prompt_toolkit" [];
	"IPython.terminal.ptutils" -> "pygments" [];
	"IPython.terminal.prompts" -> "pygments" [];
	"IPython.terminal.prompts" -> "prompt_toolkit" [];
	"IPython.external.qt_loaders" -> "importlib" [];
	"IPython.terminal.magics" -> "IPython" [];
	"IPython.terminal.debugger" -> "pygments" [];
	"IPython.terminal.debugger" -> "concurrent" [];
	"IPython.terminal.embed" -> "IPython" [];
	"IPython.terminal.ipapp" -> "IPython" [];
	"IPython.core.shellapp" -> "IPython" [];
	"IPython.core.application" -> "IPython" [];
	"IPython.utils.sysinfo" -> "IPython" [];
	"prompt_toolkit.styles.pygments" -> "pygments" [];
	"prompt_toolkit.styles.style" -> "prompt_toolkit" [];
	"prompt_toolkit.styles.style_transformation" -> "prompt_toolkit" [];
	"prompt_toolkit.styles.defaults" -> "prompt_toolkit" [];
	"prompt_toolkit.shortcuts.utils" -> "asyncio" [];
	"prompt_toolkit.shortcuts.utils" -> "prompt_toolkit" [];
	"prompt_toolkit.shortcuts.progress_bar.formatters" -> "prompt_toolkit" [];
	"prompt_toolkit.shortcuts.progress_bar.base" -> "prompt_toolkit" [];
	"prompt_toolkit.shortcuts.dialogs" -> "prompt_toolkit" [];
	"prompt_toolkit.layout.processors" -> "prompt_toolkit" [];
	"prompt_toolkit.formatted_text.pygments" -> "pygments" [];
	"IPython.core.ultratb" -> "collections" [];
	"IPython.core.ultratb" -> "pygments" [];
	"stack_data.core" -> "asttokens" [];
	"stack_data.core" -> "pygments" [];
	"IPython.core.splitinput" -> "IPython" [];
	"IPython.core.oinspect" -> "IPython" [];
	"xml.dom.pulldom" -> "xml" [];
	"xml.dom.expatbuilder" -> "xml" [];
	"xml.dom.xmlbuilder" -> "urllib" [];
	"IPython" -> "ipykernel" [];
	"ipykernel.kernelapp" -> "jupyter_client" [];
	"ipykernel.kernelapp" -> "jupyter_core" [];
	"ipykernel.kernelapp" -> "traitlets" [];
	"ipykernel.kernelapp" -> "IPython" [];
	"ipykernel.serialize" -> "jupyter_client" [];
	"ipykernel.pickleutil" -> "traitlets" [];
	"shelve" -> "collections" [];
	"dbm.dumb" -> "collections" [];
	"dill._dill" -> "importlib" [];
	"dill._dill" -> "multiprocessing" [];
	"ipykernel.zmqshell" -> "IPython" [];
	"ipykernel.zmqshell" -> "jupyter_client" [];
	"ipykernel.zmqshell" -> "jupyter_core" [];
	"ipykernel.eventloops" -> "packaging" [];
	"ctypes.util" -> "importlib" [];
	"nest_asyncio" -> "tornado" [];
	"ipykernel.jsonutil" -> "jupyter_client" [];
	"jupyter_client.provisioning.provisioner_base" -> "traitlets" [];
	"jupyter_client.provisioning.provisioner_base" -> "jupyter_client" [];
	"jupyter_client.provisioning.local_provisioner" -> "jupyter_client" [];
	"jupyter_client.provisioning.factory" -> "importlib" [];
	"jupyter_client.provisioning.factory" -> "traitlets" [];
	"jupyter_client.utils" -> "jupyter_core" [];
	"jupyter_client.manager" -> "concurrent" [];
	"jupyter_client.manager" -> "jupyter_core" [];
	"jupyter_client.launcher" -> "traitlets" [];
	"jupyter_client.client" -> "zmq" [];
	"jupyter_client.client" -> "jupyter_core" [];
	"jupyter_client.channels" -> "zmq" [];
	"jupyter_client.channels" -> "jupyter_core" [];
	"jupyter_client.blocking.client" -> "jupyter_client" [];
	"jupyter_client.asynchronous.client" -> "zmq" [];
	"jupyter_client.asynchronous.client" -> "jupyter_client" [];
	"jupyter_client.kernelspec" -> "jupyter_core" [];
	"jupyter_client.kernelspec" -> "IPython" [];
	"jupyter_client.kernelspec" -> "ipykernel" [];
	"ipykernel.kernelspec" -> "jupyter_client" [];
	"ipykernel.displayhook" -> "jupyter_client" [];
	"ipykernel.parentpoller" -> "traitlets" [];
	"ipykernel.ipkernel" -> "IPython" [];
	"ipykernel.ipkernel" -> "jupyter_client" [];
	"ipykernel.debugger" -> "tornado" [];
	"ipykernel.debugger" -> "jupyter_client" [];
	"ipykernel.debugger" -> "debugpy" [];
	"jupyter_client.jsonutil" -> "collections" [];
	"jupyter_client.jsonutil" -> "dateutil" [];
	"ipykernel.kernelbase" -> "concurrent" [];
	"ipykernel.kernelbase" -> "jupyter_client" [];
	"ipykernel.kernelbase" -> "traitlets" [];
	"ipykernel.comm.manager" -> "comm" [];
	"ipykernel.comm.comm" -> "comm" [];
	"ipykernel.comm.comm" -> "ipykernel" [];
	"ipykernel.iostream" -> "jupyter_client" [];
	"ipykernel.iostream" -> "tornado" [];
	"ipykernel.heartbeat" -> "jupyter_client" [];
	"ipykernel.control" -> "tornado" [];
	"ipykernel.connect" -> "traitlets" [];
	"zmq.eventloop.zmqstream" -> "tornado" [];
	"zmq.eventloop" -> "tornado" [];
	"jupyter_client.session" -> "zmq" [];
	"jupyter_client.session" -> "tornado" [];
	"jupyter_client.connect" -> "jupyter_core" [];
	"zmq.sugar.version" -> "zmq" [];
	"zmq.sugar.tracker" -> "zmq" [];
	"cffi.api" -> "ctypes" [];
	"cffi.verifier" -> "importlib" [];
	"zmq.sugar.poll" -> "zmq" [];
	"rich.traceback" -> "pygments" [];
	"rich.scope" -> "collections" [];
	"rich.syntax" -> "pygments" [];
	"rich.live" -> "IPython" [];
	"ipywidgets.widgets.widget_style" -> "ipywidgets" [];
	"ipywidgets.widgets.widget_layout" -> "ipywidgets" [];
	"ipywidgets.widgets.interaction" -> "collections" [];
	"ipywidgets.widgets.interaction" -> "matplotlib_inline" [];
	"ipywidgets.widgets.widget_selection" -> "collections" [];
	"ipywidgets.widgets.widget_output" -> "ipywidgets" [];
	"ipywidgets.widgets.widget_core" -> "ipywidgets" [];
	"ipywidgets.widgets.widget" -> "collections" [];
	"markdown_it.token" -> "collections" [];
	"markdown_it._compat" -> "collections" [];
	"markdown_it.main" -> "collections" [];
	"markdown_it.utils" -> "collections" [];
	"markdown_it.rules_core.text_join" -> "markdown_it" [];
	"markdown_it.rules_core.smartquotes" -> "markdown_it" [];
	"markdown_it.rules_core.replacements" -> "markdown_it" [];
	"markdown_it.rules_core.linkify" -> "markdown_it" [];
	"markdown_it.rules_core.block" -> "markdown_it" [];
	"markdown_it.ruler" -> "collections" [];
	"markdown_it.renderer" -> "collections" [];
	"markdown_it.rules_inline.image" -> "markdown_it" [];
	"markdown_it.common.entities" -> "html" [];
	"markdown_it.rules_block.state_block" -> "markdown_it" [];
	"markdown_it.common.normalize_url" -> "collections" [];
	"markdown_it.common.normalize_url" -> "urllib" [];
	"mdurl._encode" -> "collections" [];
	"mdurl._encode" -> "urllib" [];
	"mdurl._decode" -> "collections" [];
	"markdown_it.presets.zero" -> "markdown_it" [];
	"markdown_it.presets.default" -> "markdown_it" [];
	"markdown_it.presets.commonmark" -> "markdown_it" [];
	"markdown_it.helpers.parse_link_label" -> "markdown_it" [];
	"httpcore._backends.trio" -> "httpcore" [];
	"httpcore._backends.anyio" -> "httpcore" [];
	"anyio._backends._trio" -> "collections" [];
	"anyio._backends._trio" -> "concurrent" [];
	"anyio.abc._eventloop" -> "collections" [];
	"anyio.abc._eventloop" -> "anyio" [];
	"anyio.abc._testing" -> "collections" [];
	"anyio.abc._tasks" -> "collections" [];
	"anyio.abc._streams" -> "collections" [];
	"anyio.abc._sockets" -> "collections" [];
	"anyio.from_thread" -> "collections" [];
	"anyio.from_thread" -> "concurrent" [];
	"anyio._backends._asyncio" -> "concurrent" [];
	"anyio._core._typedattr" -> "collections" [];
	"anyio._core._testing" -> "collections" [];
	"anyio._core._tasks" -> "collections" [];
	"anyio._core._synchronization" -> "anyio" [];
	"anyio._core._subprocesses" -> "collections" [];
	"anyio._core._subprocesses" -> "anyio" [];
	"anyio._core._sockets" -> "collections" [];
	"anyio.streams.tls" -> "collections" [];
	"anyio.streams.stapled" -> "collections" [];
	"anyio._core._signals" -> "collections" [];
	"anyio._core._resources" -> "anyio" [];
	"anyio._core._fileio" -> "collections" [];
	"anyio._core._eventloop" -> "collections" [];
	"anyio._core._eventloop" -> "anyio" [];
	"anyio.to_thread" -> "collections" [];
	"httpcore._sync.socks_proxy" -> "httpcore" [];
	"httpcore._sync.http2" -> "httpcore" [];
	"httpcore._sync.interfaces" -> "httpcore" [];
	"httpcore._sync.http_proxy" -> "httpcore" [];
	"httpcore._sync.http11" -> "httpcore" [];
	"httpcore._sync.connection_pool" -> "httpcore" [];
	"httpcore._sync.connection" -> "httpcore" [];
	"httpcore._models" -> "urllib" [];
	"httpcore._backends.sync" -> "httpcore" [];
	"httpcore._backends.mock" -> "httpcore" [];
	"httpcore._async.socks_proxy" -> "httpcore" [];
	"httpcore._backends.auto" -> "httpcore" [];
	"httpcore._async.http2" -> "httpcore" [];
	"httpcore._async.interfaces" -> "httpcore" [];
	"httpcore._async.http_proxy" -> "httpcore" [];
	"httpcore._async.http11" -> "httpcore" [];
	"httpcore._async.connection_pool" -> "httpcore" [];
	"httpcore._async.connection" -> "httpcore" [];
	"httpx._urls" -> "urllib" [];
	"httpx._utils" -> "email" [];
	"httpx._utils" -> "urllib" [];
	"httpx._types" -> "http" [];
	"httpx._models" -> "email" [];
	"httpx._models" -> "urllib" [];
	"httpx._models" -> "collections" [];
	"httpx._models" -> "http" [];
	"httpx._content" -> "urllib" [];
	"httpx._auth" -> "urllib" [];
	"langsmith.run_helpers" -> "collections" [];
	"langsmith.run_helpers" -> "langchain_core" [];
	"langchain" -> "langchain_community" [];
	"langchain" -> "langchain_core" [];
	"langchain.globals" -> "langchain_core" [];
	"langchain_core.caches" -> "collections" [];
	"langchain_community.vectorstores" -> "langchain_core" [];
	"langchain_community.vectorstores.zilliz" -> "langchain_core" [];
	"langchain_community.vectorstores.zep_cloud" -> "langchain_core" [];
	"langchain_community.vectorstores.zep" -> "langchain_core" [];
	"langchain_community.vectorstores.yellowbrick" -> "langchain_core" [];
	"langchain_community.docstore.document" -> "langchain_core" [];
	"langchain_community.vectorstores.weaviate" -> "langchain_core" [];
	"langchain_community.vectorstores.utils" -> "langchain_core" [];
	"langchain_community.vectorstores.vlite" -> "langchain_core" [];
	"langchain_community.vectorstores.vespa" -> "langchain_core" [];
	"langchain_community.vectorstores.vectara" -> "langchain_core" [];
	"langchain_community.vectorstores.vearch" -> "langchain_core" [];
	"langchain_community.vectorstores.vdms" -> "langchain_core" [];
	"langchain_community.vectorstores.vald" -> "langchain_core" [];
	"grpc.aio._server" -> "concurrent" [];
	"grpc.experimental.aio" -> "grpc" [];
	"langchain_community.vectorstores.usearch" -> "langchain_core" [];
	"langchain_community.docstore.in_memory" -> "langchain_core" [];
	"langchain_community.docstore.base" -> "langchain_core" [];
	"langchain_community.vectorstores.upstash" -> "langchain_core" [];
	"langchain_community.vectorstores.typesense" -> "langchain_core" [];
	"langchain_community.vectorstores.timescalevector" -> "langchain_core" [];
	"langchain_community.vectorstores.tiledb" -> "langchain_core" [];
	"langchain_community.vectorstores.tigris" -> "langchain_core" [];
	"langchain_community.vectorstores.tidb_vector" -> "langchain_core" [];
	"langchain_community.vectorstores.thirdai_neuraldb" -> "langchain_core" [];
	"pandas._libs.writers" -> "pandas" [];
	"pandas._typing" -> "collections" [];
	"pandas.tseries.holiday" -> "dateutil" [];
	"pandas.io.formats.format" -> "collections" [];
	"pandas.io.formats.csvs" -> "collections" [];
	"pandas.io.formats.csvs" -> "pandas" [];
	"pandas.core.arraylike" -> "pandas" [];
	"pandas.core.ops.common" -> "pandas" [];
	"pandas.core.ops.mask_ops" -> "pandas" [];
	"pandas.core.ops.invalid" -> "pandas" [];
	"pandas.core.ops.array_ops" -> "pandas" [];
	"pandas.core.ops.dispatch" -> "pandas" [];
	"pandas.core.computation.expressions" -> "pandas" [];
	"pandas.core.util.hashing" -> "collections" [];
	"pandas.core.computation.scope" -> "pandas" [];
	"pandas.core.computation.parsing" -> "collections" [];
	"pandas.core.computation.ops" -> "collections" [];
	"pandas.core.computation.engines" -> "pandas" [];
	"pandas.core.computation.align" -> "collections" [];
	"pandas.util._validators" -> "collections" [];
	"pandas.util._validators" -> "pandas" [];
	"pandas.core.computation.common" -> "pandas" [];
	"pandas.core.dtypes.cast" -> "collections" [];
	"pandas.core.arrays.timedeltas" -> "collections" [];
	"pandas.core.arrays._ranges" -> "pandas" [];
	"pandas.core.arrays.datetimelike" -> "collections" [];
	"pandas.core.groupby.ops" -> "pandas" [];
	"pandas.core.groupby.grouper" -> "pandas" [];
	"pandas.core.groupby.grouper" -> "collections" [];
	"pandas.core.arrays.categorical" -> "collections" [];
	"pandas.core.dtypes.concat" -> "collections" [];
	"pandas.core.dtypes.astype" -> "pandas" [];
	"pandas.core.strings.object_array" -> "collections" [];
	"pandas.core.strings.base" -> "collections" [];
	"pandas.core.groupby.groupby" -> "collections" [];
	"pandas.core.groupby.groupby" -> "pandas" [];
	"pandas.core._numba.kernels.var_" -> "pandas" [];
	"pandas.core._numba.kernels.sum_" -> "pandas" [];
	"pandas.core._numba.kernels.min_max_" -> "pandas" [];
	"pandas.core._numba.kernels.mean_" -> "pandas" [];
	"pandas.core.window.numba_" -> "pandas" [];
	"pandas.core.util.numba_" -> "pandas" [];
	"pandas.core.internals.blocks" -> "pandas" [];
	"pandas.core.internals.blocks" -> "collections" [];
	"pandas.core.array_algos.transforms" -> "pandas" [];
	"pandas.core.array_algos.replace" -> "pandas" [];
	"pandas.core.array_algos.quantile" -> "pandas" [];
	"pandas.core.groupby.indexing" -> "collections" [];
	"pandas.core.arrays.string_arrow" -> "collections" [];
	"pandas.core.arrays.masked" -> "collections" [];
	"pandas.core.arrays._utils" -> "pandas" [];
	"pandas.core.array_algos.masked_reductions" -> "pandas" [];
	"pandas.core.array_algos.masked_accumulations" -> "pandas" [];
	"pandas.core.arrays.arrow._arrow_utils" -> "pandas" [];
	"pandas.core.arrays.numeric" -> "pandas" [];
	"pandas.core.arrays.numeric" -> "collections" [];
	"pandas.core.arrays.boolean" -> "pandas" [];
	"pandas.core.arrays.arrow.accessors" -> "collections" [];
	"pandas.core.arrays._arrow_string_mixins" -> "pandas" [];
	"pandas.core._numba.extensions" -> "pandas" [];
	"pandas.core._numba.executor" -> "pandas" [];
	"pandas.core.groupby.numba_" -> "pandas" [];
	"pandas.core.groupby.base" -> "collections" [];
	"pandas.core.arrays.period" -> "pandas" [];
	"pandas.core.arrays.period" -> "collections" [];
	"pandas.core.arrays.arrow.extension_types" -> "pandas" [];
	"pandas.core.arrays.interval" -> "collections" [];
	"pandas.core.indexers.utils" -> "pandas" [];
	"pandas.core.arrays._mixins" -> "collections" [];
	"pandas.core.array_algos.datetimelike_accumulations" -> "pandas" [];
	"pandas.compat.numpy.function" -> "pandas" [];
	"pandas.core.arrays.datetimes" -> "collections" [];
	"pyarrow.parquet.encryption" -> "pyarrow" [];
	"pyarrow.pandas_compat" -> "collections" [];
	"pyarrow.util" -> "urllib" [];
	"fsspec" -> "importlib" [];
	"fsspec.utils" -> "urllib" [];
	"fsspec.parquet" -> "pyarrow" [];
	"fsspec.implementations.webhdfs" -> "urllib" [];
	"fsspec.implementations.webhdfs" -> "fsspec" [];
	"fsspec.implementations.reference" -> "fsspec" [];
	"fsspec.implementations.reference" -> "importlib" [];
	"jinja2.utils" -> "urllib" [];
	"fsspec.implementations.http_sync" -> "urllib" [];
	"fsspec.implementations.http_sync" -> "fsspec" [];
	"yarl._url" -> "collections" [];
	"yarl._url" -> "urllib" [];
	"yarl._url" -> "propcache" [];
	"yarl._quoters" -> "urllib" [];
	"yarl._path" -> "collections" [];
	"yarl._parse" -> "urllib" [];
	"propcache._helpers_py" -> "collections" [];
	"multidict" -> "collections" [];
	"multidict._multidict_py" -> "collections" [];
	"multidict._abc" -> "collections" [];
	"yarl._query" -> "collections" [];
	"fsspec.implementations.http" -> "urllib" [];
	"fsspec.implementations.http" -> "fsspec" [];
	"aiohttp.web_response" -> "collections" [];
	"aiohttp.web_response" -> "concurrent" [];
	"aiohttp.typedefs" -> "http" [];
	"aiohttp.compression_utils" -> "concurrent" [];
	"aiohttp.web_request" -> "http" [];
	"aiohttp.web_request" -> "urllib" [];
	"aiohttp.client_reqrep" -> "http" [];
	"aiohttp.abc" -> "collections" [];
	"aiohttp.abc" -> "http" [];
	"frozenlist" -> "collections" [];
	"aiohttp.web" -> "collections" [];
	"aiohttp._websocket.helpers" -> "aiohttp" [];
	"aiohttp._websocket.writer" -> "aiohttp" [];
	"aiohttp._websocket.reader" -> "aiohttp" [];
	"aiohttp._websocket.reader_c" -> "aiohttp" [];
	"aiohttp._websocket.reader_py" -> "aiohttp" [];
	"aiohttp.payload" -> "collections" [];
	"aiohttp.helpers" -> "email" [];
	"aiohttp.helpers" -> "urllib" [];
	"aiohttp.helpers" -> "propcache" [];
	"aiohttp.formdata" -> "urllib" [];
	"aiohttp.cookiejar" -> "http" [];
	"aiohttp.multipart" -> "urllib" [];
	"fsspec.implementations.git" -> "fsspec" [];
	"fsspec.implementations.ftp" -> "fsspec" [];
	"fsspec.implementations.data" -> "urllib" [];
	"fsspec.implementations.cache_metadata" -> "fsspec" [];
	"fsspec.implementations.asyn_wrapper" -> "fsspec" [];
	"fsspec.implementations.arrow" -> "urllib" [];
	"fsspec.implementations.arrow" -> "fsspec" [];
	"fsspec.implementations.arrow" -> "pyarrow" [];
	"fsspec.dircache" -> "collections" [];
	"fsspec.mapping" -> "collections" [];
	"tqdm.notebook" -> "IPython" [];
	"fsspec.caching" -> "concurrent" [];
	"pandas.core.arrays.arrow.array" -> "collections" [];
	"pandas.core.tools.times" -> "pandas" [];
	"pandas.core.tools.timedeltas" -> "collections" [];
	"pandas.core.dtypes.inference" -> "pandas" [];
	"pandas.util._exceptions" -> "collections" [];
	"pandas.core.ops.missing" -> "pandas" [];
	"pandas.core.construction" -> "collections" [];
	"pandas.core.internals.construction" -> "pandas" [];
	"pandas.core.internals.managers" -> "collections" [];
	"pandas.core.internals.managers" -> "pandas" [];
	"pandas.core.internals.ops" -> "collections" [];
	"pandas.core.internals.ops" -> "pandas" [];
	"pandas.core.internals.base" -> "pandas" [];
	"pandas.core.internals.array_manager" -> "pandas" [];
	"pandas.core.internals.array_manager" -> "collections" [];
	"pandas.core.array_algos.take" -> "pandas" [];
	"pandas.core.sample" -> "pandas" [];
	"pandas.core.indexing" -> "collections" [];
	"pandas.core.nanops" -> "pandas" [];
	"pandas.util._decorators" -> "pandas" [];
	"pandas.util._decorators" -> "collections" [];
	"pandas.io.formats.string" -> "collections" [];
	"pandas.io.formats.html" -> "collections" [];
	"pandas.core.indexes.multi" -> "collections" [];
	"pandas.core.reshape.util" -> "pandas" [];
	"pandas.core.indexes.frozen" -> "pandas" [];
	"pandas.io.formats.printing" -> "collections" [];
	"pandas.io.formats.printing" -> "pandas" [];
	"pandas.io.formats.style" -> "collections" [];
	"pandas.io.formats.excel" -> "collections" [];
	"pandas.io.excel._xlsxwriter" -> "pandas" [];
	"pandas.io.excel._util" -> "collections" [];
	"pandas.io.excel._openpyxl" -> "pandas" [];
	"pandas.io.excel._odswriter" -> "pandas" [];
	"pandas.io.excel._base" -> "collections" [];
	"pandas.io.excel._base" -> "pandas" [];
	"pandas.io.excel._xlrd" -> "pandas" [];
	"pandas.io.excel._pyxlsb" -> "pandas" [];
	"pandas.io.formats.css" -> "pandas" [];
	"pandas.io.formats.css" -> "collections" [];
	"pandas.io.common" -> "urllib" [];
	"pandas.core.indexes.timedeltas" -> "pandas" [];
	"pandas.core.indexes.extension" -> "pandas" [];
	"pandas.core.indexes.datetimelike" -> "collections" [];
	"pandas.core.indexes.range" -> "collections" [];
	"pandas.core.indexes.range" -> "pandas" [];
	"pandas.core.indexes.datetimes" -> "pandas" [];
	"pandas.core.indexes.datetimes" -> "collections" [];
	"pandas.core.indexes.datetimes" -> "dateutil" [];
	"pandas.core.indexes.api" -> "pandas" [];
	"pandas.core.indexes.period" -> "pandas" [];
	"pandas.core.indexes.period" -> "collections" [];
	"pandas.core.indexes.interval" -> "pandas" [];
	"pandas.core.indexes.interval" -> "collections" [];
	"pandas.core.indexes.category" -> "pandas" [];
	"pandas.core.indexes.category" -> "collections" [];
	"pandas.core.base" -> "collections" [];
	"pandas.core.arrays.sparse.scipy_sparse" -> "collections" [];
	"pandas.core.dtypes.common" -> "pandas" [];
	"pandas._config.config" -> "pandas" [];
	"pandas._config.config" -> "collections" [];
	"pandas.core.window.rolling" -> "collections" [];
	"pandas.core.series" -> "collections" [];
	"pandas.core.series" -> "pandas" [];
	"pandas.core.reshape.reshape" -> "pandas" [];
	"pandas.io.formats.info" -> "collections" [];
	"pandas.core.strings.accessor" -> "collections" [];
	"pandas.core.methods.selectn" -> "collections" [];
	"pandas.core.resample" -> "collections" [];
	"pandas.core.internals.concat" -> "collections" [];
	"pandas.core.internals.api" -> "pandas" [];
	"pandas.core.reshape.merge" -> "collections" [];
	"pandas.io.clipboard" -> "pandas" [];
	"pandas.compat.pickle_compat" -> "collections" [];
	"pandas.io.sql" -> "collections" [];
	"pandas.io.pytables" -> "collections" [];
	"pandas.core.computation.pytables" -> "pandas" [];
	"pandas.core.methods.describe" -> "collections" [];
	"pandas.core.reshape.pivot" -> "collections" [];
	"pandas.io.xml" -> "collections" [];
	"pandas.io.orc" -> "pyarrow" [];
	"pandas.io.parquet" -> "pyarrow" [];
	"pandas.io.feather_format" -> "collections" [];
	"google.auth._helpers" -> "email" [];
	"google.auth._default" -> "google" [];
	"google.oauth2.gdch_credentials" -> "google" [];
	"google.oauth2._client" -> "http" [];
	"google.oauth2._client" -> "google" [];
	"google.auth.transport" -> "http" [];
	"google.auth.transport.mtls" -> "google" [];
	"google.auth.transport._mtls_helper" -> "google" [];
	"google.auth.transport._custom_tls_signer" -> "google" [];
	"google.oauth2.service_account" -> "google" [];
	"google.oauth2.credentials" -> "google" [];
	"google.oauth2.reauth" -> "google" [];
	"google.oauth2.challenges" -> "google" [];
	"google.oauth2.webauthn_types" -> "google" [];
	"google.oauth2.webauthn_handler" -> "google" [];
	"google.oauth2.sts" -> "http" [];
	"google.oauth2.utils" -> "google" [];
	"google.auth.transport.requests" -> "google" [];
	"google.auth.compute_engine._metadata" -> "http" [];
	"google.auth.compute_engine._metadata" -> "urllib" [];
	"google.auth.compute_engine._metadata" -> "google" [];
	"google.auth.transport._http_client" -> "http" [];
	"google.auth.transport._http_client" -> "google" [];
	"google.auth.aws" -> "http" [];
	"google.auth.external_account" -> "google" [];
	"google.auth.impersonated_credentials" -> "http" [];
	"google.auth.impersonated_credentials" -> "google" [];
	"google.auth.external_account_authorized_user" -> "google" [];
	"google.auth.compute_engine.credentials" -> "google" [];
	"google.auth.crypt.es256" -> "google" [];
	"google.auth.crypt.base" -> "google" [];
	"google.auth.iam" -> "http" [];
	"google.auth.crypt._python_rsa" -> "google" [];
	"rsa.key" -> "pyasn1" [];
	"pyasn1.type.error" -> "pyasn1" [];
	"pyasn1.codec.ber.eoo" -> "pyasn1" [];
	"rsa.asn1" -> "pyasn1" [];
	"pyasn1_modules.rfc2251" -> "pyasn1" [];
	"pyasn1_modules.rfc2459" -> "pyasn1" [];
	"pyasn1.codec.der.decoder" -> "pyasn1" [];
	"google.auth.crypt._cryptography_rsa" -> "google" [];
	"pandas.core.interchange.dataframe_protocol" -> "collections" [];
	"pandas.core.reshape.melt" -> "collections" [];
	"pandas.core.arrays.base" -> "collections" [];
	"pandas._libs.window.indexers" -> "pandas" [];
	"pandas._libs.window.aggregations" -> "pandas" [];
	"pandas._libs.tslibs.vectorized" -> "pandas" [];
	"pandas._libs.tslibs.tzconversion" -> "pandas" [];
	"pandas._libs.tslibs.timestamps" -> "pandas" [];
	"pandas._libs.tslibs.timedeltas" -> "pandas" [];
	"pandas._libs.tslibs.strptime" -> "pandas" [];
	"pandas._libs.tslibs.period" -> "pandas" [];
	"pandas._libs.tslibs.parsing" -> "pandas" [];
	"pandas._libs.tslibs.offsets" -> "pandas" [];
	"pandas._libs.tslibs.np_datetime" -> "pandas" [];
	"pandas._libs.tslibs.nattype" -> "pandas" [];
	"pandas._libs.tslibs.fields" -> "pandas" [];
	"pandas._libs.tslib" -> "pandas" [];
	"pandas._libs.sparse" -> "pandas" [];
	"pandas.io.sas.sasreader" -> "collections" [];
	"pandas._libs.reshape" -> "pandas" [];
	"pandas._libs.properties" -> "pandas" [];
	"pandas._libs.parsers" -> "pandas" [];
	"pandas._libs.ops" -> "pandas" [];
	"pandas._libs.lib" -> "pandas" [];
	"pandas._libs.join" -> "pandas" [];
	"pandas._libs.interval" -> "pandas" [];
	"pandas._libs.hashtable" -> "pandas" [];
	"pandas._libs.hashing" -> "pandas" [];
	"pandas._libs.groupby" -> "pandas" [];
	"pandas._libs.arrays" -> "pandas" [];
	"pandas._libs.algos" -> "pandas" [];
	"pandas.io.spss" -> "collections" [];
	"bs4.dammit" -> "html" [];
	"bs4.builder._htmlparser" -> "html" [];
	"pandas.util._print_versions" -> "pandas" [];
	"pandas._testing.contexts" -> "collections" [];
	"pandas._testing._warnings" -> "pandas" [];
	"pandas._testing._warnings" -> "collections" [];
	"pandas._config.localization" -> "collections" [];
	"pandas.plotting._misc" -> "collections" [];
	"pandas.plotting._core" -> "collections" [];
	"pandas.api.typing" -> "pandas" [];
	"pandas.core.reshape.encoding" -> "pandas" [];
	"pandas.core.dtypes.dtypes" -> "collections" [];
	"pandas.core.api" -> "pandas" [];
	"pandas.core.config_init" -> "pandas" [];
	"langchain_community.vectorstores.tencentvectordb" -> "langchain_core" [];
	"langchain_core.structured_query" -> "collections" [];
	"langchain.retrievers.self_query.tencentvectordb" -> "langchain" [];
	"langchain.retrievers" -> "langchain_community" [];
	"langchain_community.retrievers.zilliz" -> "langchain_core" [];
	"langchain_community.retrievers.zep_cloud" -> "langchain_core" [];
	"langchain_community.retrievers.zep" -> "langchain_core" [];
	"langchain_community.retrievers.you" -> "langchain_core" [];
	"langchain_community.retrievers.you" -> "langchain_community" [];
	"langchain_community.retrievers.wikipedia" -> "langchain_core" [];
	"langchain_community.utilities.wikipedia" -> "langchain_core" [];
	"langchain_community.retrievers.web_research" -> "langchain" [];
	"langchain_community.retrievers.web_research" -> "langchain_core" [];
	"langchain_community.retrievers.web_research" -> "langchain_community" [];
	"langchain_community.document_transformers.openai_functions" -> "langchain_core" [];
	"langchain.chains.structured_output.base" -> "collections" [];
	"langchain.chains.structured_output.base" -> "langchain_core" [];
	"langchain_core.output_parsers.openai_tools" -> "langchain_core" [];
	"langchain_core.utils.json" -> "langchain_core" [];
	"langchain_core.output_parsers.transform" -> "langchain_core" [];
	"langchain_core.output_parsers.transform" -> "collections" [];
	"langchain_core.output_parsers.base" -> "langchain_core" [];
	"langchain_core.output_parsers.openai_functions" -> "langchain_core" [];
	"langchain_core.output_parsers.json" -> "langchain_core" [];
	"langchain.chains.openai_functions.tagging" -> "langchain_core" [];
	"langchain.chains.llm" -> "collections" [];
	"langchain.chains.llm" -> "langchain_core" [];
	"langchain.chains.base" -> "langchain_core" [];
	"langchain.chains.base" -> "langchain" [];
	"langchain.schema" -> "langchain_core" [];
	"langchain_core.stores" -> "collections" [];
	"langchain_core.chat_history" -> "collections" [];
	"langchain.chains.openai_functions.qa_with_structure" -> "langchain_core" [];
	"langchain_core.prompts.chat" -> "langchain_core" [];
	"langchain_core.prompts.chat" -> "collections" [];
	"langchain_core.prompts.string" -> "langchain_core" [];
	"langchain_core.prompts.message" -> "langchain_core" [];
	"langchain_core.prompts.image" -> "langchain_core" [];
	"langchain_core.prompts.dict" -> "langchain_core" [];
	"langchain.chains.openai_functions.extraction" -> "langchain_core" [];
	"langchain.chains.openai_functions.citation_fuzzy_match" -> "collections" [];
	"langchain.chains.openai_functions.citation_fuzzy_match" -> "langchain_core" [];
	"langchain.chains.openai_functions.base" -> "collections" [];
	"langchain.chains.openai_functions.base" -> "langchain_core" [];
	"langchain.chains.openai_functions.base" -> "langchain" [];
	"langchain_core.utils.function_calling" -> "langchain_core" [];
	"langchain_core.tools.simple" -> "collections" [];
	"langchain_core.tools.simple" -> "langchain_core" [];
	"langchain_core.tools.base" -> "langchain_core" [];
	"langchain_core.tools.base" -> "collections" [];
	"langchain_core.utils.json_schema" -> "collections" [];
	"langchain_community.document_transformers.nuclia_text_transform" -> "langchain_core" [];
	"langchain_community.tools.nuclia.tool" -> "langchain_core" [];
	"langchain_community.tools" -> "langchain_core" [];
	"langchain_community.tools.zenguard.tool" -> "langchain_core" [];
	"langchain_community.tools.zapier.tool" -> "langchain_core" [];
	"langchain_community.utilities.zapier" -> "langchain_core" [];
	"langchain_community.tools.youtube.search" -> "langchain_core" [];
	"langchain_community.tools.you.tool" -> "langchain_core" [];
	"langchain_community.utilities.you" -> "langchain_core" [];
	"langchain_community.tools.yahoo_finance_news" -> "langchain_core" [];
	"langchain_community.tools.yahoo_finance_news" -> "requests" [];
	"langchain_community.document_loaders.web_base" -> "langchain_core" [];
	"langchain_community.document_loaders.web_base" -> "tqdm" [];
	"langchain_community.document_loaders.base" -> "langchain_core" [];
	"langchain_core.document_loaders.langsmith" -> "collections" [];
	"langchain_core.document_loaders.langsmith" -> "langchain_core" [];
	"langchain_core.document_loaders.blob_loaders" -> "collections" [];
	"langchain_core.document_loaders.base" -> "langchain_core" [];
	"langchain_core.document_loaders.base" -> "collections" [];
	"langchain_community.tools.wolfram_alpha.tool" -> "langchain_core" [];
	"langchain_community.utilities.wolfram_alpha" -> "langchain_core" [];
	"langchain_community.tools.wikipedia.tool" -> "langchain_core" [];
	"langchain_community.tools.vectorstore.tool" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.retrieval" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.loading" -> "collections" [];
	"langchain.chains.qa_with_sources.loading" -> "langchain_core" [];
	"langchain.chains.question_answering.map_rerank_prompt" -> "langchain_core" [];
	"langchain.chains.question_answering.chain" -> "collections" [];
	"langchain.chains.question_answering.chain" -> "langchain_core" [];
	"langchain.chains.question_answering.chain" -> "langchain" [];
	"langchain.chains.question_answering.stuff_prompt" -> "langchain_core" [];
	"langchain.output_parsers.regex" -> "langchain_core" [];
	"langchain.output_parsers" -> "langchain_core" [];
	"langchain_community.output_parsers.rail_parser" -> "langchain_core" [];
	"langchain.output_parsers.yaml" -> "langchain_core" [];
	"langchain.output_parsers.structured" -> "langchain_core" [];
	"langchain.output_parsers.retry" -> "langchain_core" [];
	"langchain.output_parsers.regex_dict" -> "langchain_core" [];
	"langchain.output_parsers.pandas_dataframe" -> "langchain_core" [];
	"langchain.output_parsers.fix" -> "langchain_core" [];
	"langchain.output_parsers.enum" -> "langchain_core" [];
	"langchain.output_parsers.datetime" -> "langchain_core" [];
	"langchain.output_parsers.combining" -> "langchain_core" [];
	"langchain.output_parsers.boolean" -> "langchain_core" [];
	"langchain.chains.combine_documents.refine" -> "langchain_core" [];
	"langchain.chains.combine_documents.reduce" -> "langchain_core" [];
	"langchain.chains.combine_documents.map_rerank" -> "collections" [];
	"langchain.chains.combine_documents.map_rerank" -> "langchain_core" [];
	"langchain.chains.combine_documents.map_reduce" -> "langchain_core" [];
	"langchain.chains.combine_documents.base" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.stuff_prompt" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.refine_prompts" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.map_reduce_prompt" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.base" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.base" -> "langchain" [];
	"langchain.chains.combine_documents.stuff" -> "langchain_core" [];
	"langchain.chains.retrieval_qa.base" -> "langchain_core" [];
	"langchain_community.llms.openai" -> "langchain_core" [];
	"tiktoken.core" -> "concurrent" [];
	"openai" -> "http" [];
	"openai.resources.vector_stores.vector_stores" -> "http" [];
	"openai.types.vector_store_search_response" -> "openai" [];
	"openai.types.shared.response_format_json_schema" -> "openai" [];
	"openai.types.shared.response_format_json_object" -> "openai" [];
	"openai.types.shared.response_format_text" -> "openai" [];
	"openai.types.shared.function_definition" -> "openai" [];
	"openai.types.shared.comparison_filter" -> "openai" [];
	"openai.types.shared.compound_filter" -> "openai" [];
	"openai.types.shared.error_object" -> "openai" [];
	"openai.types.shared.reasoning" -> "openai" [];
	"openai.types.vector_store_deleted" -> "openai" [];
	"openai.types.vector_store" -> "openai" [];
	"pydantic._internal._validators" -> "collections" [];
	"pydantic._internal._validators" -> "pydantic" [];
	"pydantic._internal._decorators_v1" -> "pydantic" [];
	"pydantic.main" -> "collections" [];
	"pydantic.deprecated.json" -> "pydantic" [];
	"pydantic.types" -> "collections" [];
	"pydantic.types" -> "typing_inspection" [];
	"typing_inspection.introspection" -> "collections" [];
	"pydantic.networks" -> "importlib" [];
	"pydantic.type_adapter" -> "collections" [];
	"pydantic._internal._generate_schema" -> "collections" [];
	"pydantic._internal._generate_schema" -> "pydantic" [];
	"pydantic._internal._dataclasses" -> "pydantic" [];
	"pydantic._internal._signature" -> "pydantic" [];
	"pydantic._internal._schema_gather" -> "pydantic_core" [];
	"pydantic._internal._core_utils" -> "collections" [];
	"pydantic._internal._core_utils" -> "rich" [];
	"pydantic._internal._schema_generation_shared" -> "pydantic" [];
	"pydantic.deprecated.parse" -> "pydantic" [];
	"pydantic.plugin._schema_validator" -> "collections" [];
	"pydantic.plugin._loader" -> "importlib" [];
	"pydantic.plugin._loader" -> "collections" [];
	"pydantic.json_schema" -> "typing_inspection" [];
	"pydantic._internal._namespace_utils" -> "collections" [];
	"pydantic._internal._validate_call" -> "collections" [];
	"pydantic._internal._validate_call" -> "pydantic" [];
	"pydantic._internal._discriminated_union" -> "collections" [];
	"pydantic._internal._discriminated_union" -> "pydantic" [];
	"pydantic._internal._model_construction" -> "pydantic" [];
	"pydantic._internal._mock_val_ser" -> "collections" [];
	"pydantic._internal._mock_val_ser" -> "pydantic" [];
	"pydantic._internal._fields" -> "collections" [];
	"pydantic._internal._generics" -> "pydantic" [];
	"pydantic._internal._decorators" -> "pydantic" [];
	"pydantic._internal._core_metadata" -> "pydantic" [];
	"pydantic._internal._config" -> "pydantic" [];
	"pydantic._internal._typing_extra" -> "collections" [];
	"typing_inspection.typing_objects" -> "collections" [];
	"pydantic_core._pydantic_core" -> "collections" [];
	"pydantic_core.core_schema" -> "collections" [];
	"pydantic.errors" -> "typing_inspection" [];
	"pydantic.version" -> "importlib" [];
	"pydantic.fields" -> "collections" [];
	"openai.resources.vector_stores.file_batches" -> "concurrent" [];
	"openai.resources.vector_stores.file_batches" -> "http" [];
	"openai.types.vector_stores.vector_store_file_batch" -> "openai" [];
	"openai.types.vector_stores.vector_store_file" -> "openai" [];
	"openai.types.file_chunking_strategy" -> "openai" [];
	"openai.types.static_file_chunking_strategy_object" -> "openai" [];
	"openai.types.static_file_chunking_strategy" -> "openai" [];
	"openai.types.other_file_chunking_strategy_object" -> "openai" [];
	"openai.types.vector_stores.vector_store_file_deleted" -> "openai" [];
	"openai.types.vector_stores.file_content_response" -> "openai" [];
	"openai.types.file_object" -> "openai" [];
	"openai.resources.vector_stores.files" -> "http" [];
	"openai.resources.moderations" -> "http" [];
	"openai.types.moderation_create_response" -> "openai" [];
	"openai.types.moderation" -> "openai" [];
	"openai.resources.fine_tuning.fine_tuning" -> "openai" [];
	"openai.resources.fine_tuning.checkpoints.checkpoints" -> "openai" [];
	"openai.resources.fine_tuning.checkpoints.permissions" -> "http" [];
	"openai.types.fine_tuning.checkpoints.permission_retrieve_response" -> "openai" [];
	"openai.types.fine_tuning.checkpoints.permission_delete_response" -> "openai" [];
	"openai.types.fine_tuning.checkpoints.permission_create_response" -> "openai" [];
	"openai.types.fine_tuning.fine_tuning_job_wandb_integration_object" -> "openai" [];
	"openai.types.fine_tuning.fine_tuning_job_wandb_integration" -> "openai" [];
	"openai.types.fine_tuning.fine_tuning_job_event" -> "openai" [];
	"openai.types.fine_tuning.fine_tuning_job" -> "openai" [];
	"openai.resources.fine_tuning.jobs.jobs" -> "http" [];
	"openai.resources.fine_tuning.jobs.checkpoints" -> "http" [];
	"openai.types.fine_tuning.jobs.fine_tuning_job_checkpoint" -> "openai" [];
	"openai.resources.completions" -> "http" [];
	"openai.types.chat.chat_completion_message_tool_call" -> "openai" [];
	"openai.types.chat.chat_completion_token_logprob" -> "openai" [];
	"openai.types.chat.chat_completion_message" -> "openai" [];
	"openai.types.chat.chat_completion_deleted" -> "openai" [];
	"openai.types.chat.parsed_chat_completion" -> "openai" [];
	"openai.types.chat.chat_completion_chunk" -> "openai" [];
	"openai.types.completion_usage" -> "openai" [];
	"openai.types.chat.chat_completion_audio" -> "openai" [];
	"openai.types.chat.chat_completion" -> "openai" [];
	"openai.types.completion" -> "openai" [];
	"openai.types.completion_choice" -> "openai" [];
	"openai._streaming" -> "http" [];
	"openai.resources.embeddings" -> "http" [];
	"openai.types.create_embedding_response" -> "openai" [];
	"openai.types.embedding" -> "openai" [];
	"openai._extras.sounddevice_proxy" -> "openai" [];
	"openai._extras._common" -> "openai" [];
	"openai._extras.pandas_proxy" -> "openai" [];
	"openai._extras.numpy_proxy" -> "openai" [];
	"openai.resources.responses.input_items" -> "http" [];
	"openai.types.responses.response_item" -> "openai" [];
	"openai.types.responses.response_function_tool_call_output_item" -> "openai" [];
	"openai.types.responses.response_computer_tool_call_output_item" -> "openai" [];
	"openai.types.responses.response_computer_tool_call_output_screenshot" -> "openai" [];
	"openai.types.responses.response_function_tool_call" -> "openai" [];
	"openai.types.responses.response_file_search_tool_call" -> "openai" [];
	"openai.types.responses.response_function_web_search" -> "openai" [];
	"openai.types.responses.response_input_message_item" -> "openai" [];
	"openai.types.responses.response_input_content" -> "openai" [];
	"openai.types.responses.response_input_image" -> "openai" [];
	"openai.types.responses.response_input_text" -> "openai" [];
	"openai.types.responses.response_input_file" -> "openai" [];
	"openai.types.responses.response_computer_tool_call" -> "openai" [];
	"openai.types.responses.response_output_message" -> "openai" [];
	"openai.types.responses.response_output_refusal" -> "openai" [];
	"openai.types.responses.response_output_text" -> "openai" [];
	"openai.types.responses.response_code_interpreter_call_interpreting_event" -> "openai" [];
	"openai.types.responses.response_code_interpreter_call_in_progress_event" -> "openai" [];
	"openai.types.responses.response_code_interpreter_call_code_delta_event" -> "openai" [];
	"openai.types.responses.response_code_interpreter_call_completed_event" -> "openai" [];
	"openai.types.responses.response_code_interpreter_call_code_done_event" -> "openai" [];
	"openai.types.responses.response_function_call_arguments_delta_event" -> "openai" [];
	"openai.types.responses.response_function_call_arguments_done_event" -> "openai" [];
	"openai.types.responses.response_file_search_call_in_progress_event" -> "openai" [];
	"openai.types.responses.response_web_search_call_in_progress_event" -> "openai" [];
	"openai.types.responses.response_file_search_call_searching_event" -> "openai" [];
	"openai.types.responses.response_file_search_call_completed_event" -> "openai" [];
	"openai.types.responses.response_web_search_call_searching_event" -> "openai" [];
	"openai.types.responses.response_web_search_call_completed_event" -> "openai" [];
	"openai.types.responses.response_format_text_json_schema_config" -> "openai" [];
	"openai.types.responses.response_audio_transcript_delta_event" -> "openai" [];
	"openai.types.responses.response_text_annotation_delta_event" -> "openai" [];
	"openai.types.responses.response_audio_transcript_done_event" -> "openai" [];
	"openai.types.responses.response_code_interpreter_tool_call" -> "openai" [];
	"openai.types.responses.response_content_part_added_event" -> "openai" [];
	"openai.types.responses.response_output_item_added_event" -> "openai" [];
	"openai.types.responses.response_content_part_done_event" -> "openai" [];
	"openai.types.responses.response_output_item_done_event" -> "openai" [];
	"openai.types.responses.response_refusal_delta_event" -> "openai" [];
	"openai.types.responses.response_refusal_done_event" -> "openai" [];
	"openai.types.responses.response_format_text_config" -> "openai" [];
	"openai.types.responses.response_in_progress_event" -> "openai" [];
	"openai.types.responses.response_audio_delta_event" -> "openai" [];
	"openai.types.responses.response_text_delta_event" -> "openai" [];
	"openai.types.responses.response_incomplete_event" -> "openai" [];
	"openai.types.responses.response_audio_done_event" -> "openai" [];
	"openai.types.responses.response_text_done_event" -> "openai" [];
	"openai.types.responses.response_completed_event" -> "openai" [];
	"openai.types.responses.response_reasoning_item" -> "openai" [];
	"openai.types.responses.response_created_event" -> "openai" [];
	"openai.types.responses.response_stream_event" -> "openai" [];
	"openai.types.responses.response_failed_event" -> "openai" [];
	"openai.types.responses.tool_choice_function" -> "openai" [];
	"openai.types.responses.response_text_config" -> "openai" [];
	"openai.types.responses.response_output_item" -> "openai" [];
	"openai.types.responses.response_error_event" -> "openai" [];
	"openai.types.responses.response_item_list" -> "openai" [];
	"openai.types.responses.tool_choice_types" -> "openai" [];
	"openai.types.responses.file_search_tool" -> "openai" [];
	"openai.types.responses.web_search_tool" -> "openai" [];
	"openai.types.responses.parsed_response" -> "openai" [];
	"openai._utils._transform" -> "openai" [];
	"openai._utils._typing" -> "openai" [];
	"openai._utils._utils" -> "openai" [];
	"openai.types.responses.response_usage" -> "openai" [];
	"openai.types.responses.response_error" -> "openai" [];
	"openai.types.responses.function_tool" -> "openai" [];
	"openai.types.responses.computer_tool" -> "openai" [];
	"openai.types.responses.response" -> "openai" [];
	"openai.types.responses.tool" -> "openai" [];
	"openai.resources.responses.responses" -> "http" [];
	"openai.lib.streaming.responses._responses" -> "openai" [];
	"openai.lib.streaming.responses._events" -> "openai" [];
	"openai.lib._parsing._responses" -> "openai" [];
	"openai.lib._parsing._completions" -> "openai" [];
	"openai.lib._pydantic" -> "openai" [];
	"openai.resources.uploads.uploads" -> "http" [];
	"openai.types.upload" -> "openai" [];
	"openai.resources.uploads.parts" -> "http" [];
	"openai.types.uploads.upload_part" -> "openai" [];
	"openai.types.uploads.part_create_params" -> "openai" [];
	"openai.resources.batches" -> "http" [];
	"openai.types.batch" -> "openai" [];
	"openai.types.batch_request_counts" -> "openai" [];
	"openai.types.batch_error" -> "openai" [];
	"openai.resources.models" -> "http" [];
	"openai.types.model_deleted" -> "openai" [];
	"openai.types.model" -> "openai" [];
	"openai.resources.images" -> "http" [];
	"openai.types.images_response" -> "openai" [];
	"openai.types.image" -> "openai" [];
	"openai.types.image_create_variation_params" -> "openai" [];
	"openai.types.image_edit_params" -> "openai" [];
	"openai.resources.files" -> "http" [];
	"openai.types.file_deleted" -> "openai" [];
	"openai.types.file_create_params" -> "openai" [];
	"openai.resources.evals.evals" -> "http" [];
	"openai.types.eval_retrieve_response" -> "openai" [];
	"openai.types.eval_stored_completions_data_source_config" -> "openai" [];
	"openai.types.eval_custom_data_source_config" -> "openai" [];
	"openai.types.eval_text_similarity_grader" -> "openai" [];
	"openai.types.eval_string_check_grader" -> "openai" [];
	"openai.types.eval_label_model_grader" -> "openai" [];
	"openai.types.eval_update_response" -> "openai" [];
	"openai.types.eval_delete_response" -> "openai" [];
	"openai.types.eval_create_response" -> "openai" [];
	"openai.types.eval_list_response" -> "openai" [];
	"openai.resources.evals.runs.runs" -> "http" [];
	"openai.types.evals.run_retrieve_response" -> "openai" [];
	"openai.types.evals.create_eval_completions_run_data_source" -> "openai" [];
	"openai.types.evals.create_eval_jsonl_run_data_source" -> "openai" [];
	"openai.types.evals.eval_api_error" -> "openai" [];
	"openai.types.evals.run_delete_response" -> "openai" [];
	"openai.types.evals.run_create_response" -> "openai" [];
	"openai.types.evals.run_cancel_response" -> "openai" [];
	"openai.types.evals.run_list_response" -> "openai" [];
	"openai.resources.evals.runs.output_items" -> "http" [];
	"openai.types.evals.runs.output_item_retrieve_response" -> "openai" [];
	"openai.types.evals.runs.output_item_list_response" -> "openai" [];
	"openai.resources.audio.transcriptions" -> "http" [];
	"openai.types.audio.transcription_stream_event" -> "openai" [];
	"openai.types.audio.transcription_text_delta_event" -> "openai" [];
	"openai.types.audio.transcription_text_done_event" -> "openai" [];
	"openai.types.audio.transcription_verbose" -> "openai" [];
	"openai.types.audio.transcription_segment" -> "openai" [];
	"openai.types.audio.transcription_word" -> "openai" [];
	"openai.types.audio.transcription" -> "openai" [];
	"openai.types.audio.transcription_create_params" -> "openai" [];
	"openai.types.audio.translation_create_params" -> "openai" [];
	"openai.types.audio.translation_verbose" -> "openai" [];
	"openai.types.audio.translation" -> "openai" [];
	"openai.resources.audio.translations" -> "http" [];
	"openai.resources.audio.speech" -> "http" [];
	"openai.resources.audio.audio" -> "openai" [];
	"openai.resources.chat.completions.completions" -> "http" [];
	"openai.resources.chat.completions.messages" -> "http" [];
	"openai.resources.chat.chat" -> "openai" [];
	"openai.resources.beta.assistants" -> "http" [];
	"openai.types.beta.assistant_deleted" -> "openai" [];
	"openai.types.beta.assistant" -> "openai" [];
	"openai.types.beta.assistant_tool" -> "openai" [];
	"openai.types.beta.code_interpreter_tool" -> "openai" [];
	"openai.types.beta.file_search_tool" -> "openai" [];
	"openai.types.beta.function_tool" -> "openai" [];
	"openai.types.beta.assistant_tool_choice_function" -> "openai" [];
	"openai.types.beta.threads.required_action_function_tool_call" -> "openai" [];
	"openai.types.beta.threads.file_citation_delta_annotation" -> "openai" [];
	"openai.types.beta.threads.file_path_delta_annotation" -> "openai" [];
	"openai.types.beta.threads.image_file_content_block" -> "openai" [];
	"openai.types.beta.threads.file_citation_annotation" -> "openai" [];
	"openai.types.beta.threads.image_url_content_block" -> "openai" [];
	"openai.types.beta.threads.image_file_delta_block" -> "openai" [];
	"openai.types.beta.threads.refusal_content_block" -> "openai" [];
	"openai.types.beta.threads.message_content_delta" -> "openai" [];
	"openai.types.beta.threads.image_url_delta_block" -> "openai" [];
	"openai.types.beta.threads.file_path_annotation" -> "openai" [];
	"openai.types.beta.threads.refusal_delta_block" -> "openai" [];
	"openai.types.beta.threads.message_delta_event" -> "openai" [];
	"openai.types.beta.threads.text_content_block" -> "openai" [];
	"openai.types.beta.threads.runs.code_interpreter_tool_call_delta" -> "openai" [];
	"openai.types.beta.threads.runs.message_creation_step_details" -> "openai" [];
	"openai.types.beta.threads.runs.code_interpreter_output_image" -> "openai" [];
	"openai.types.beta.threads.runs.run_step_delta_message_delta" -> "openai" [];
	"openai.types.beta.threads.runs.file_search_tool_call_delta" -> "openai" [];
	"openai.types.beta.threads.runs.code_interpreter_tool_call" -> "openai" [];
	"openai.types.beta.threads.runs.function_tool_call_delta" -> "openai" [];
	"openai.types.beta.threads.runs.tool_calls_step_details" -> "openai" [];
	"openai.types.beta.threads.runs.tool_call_delta_object" -> "openai" [];
	"openai.types.beta.threads.runs.file_search_tool_call" -> "openai" [];
	"openai.types.beta.threads.runs.code_interpreter_logs" -> "openai" [];
	"openai.types.beta.threads.runs.run_step_delta_event" -> "openai" [];
	"openai.types.beta.threads.runs.function_tool_call" -> "openai" [];
	"openai.types.beta.threads.runs.tool_call_delta" -> "openai" [];
	"openai.types.beta.threads.runs.run_step_delta" -> "openai" [];
	"openai.types.beta.threads.runs.tool_call" -> "openai" [];
	"openai.types.beta.threads.runs.run_step" -> "openai" [];
	"openai.types.beta.threads.text_delta_block" -> "openai" [];
	"openai.types.beta.threads.image_file_delta" -> "openai" [];
	"openai.types.beta.threads.annotation_delta" -> "openai" [];
	"openai.types.beta.threads.message_deleted" -> "openai" [];
	"openai.types.beta.threads.message_content" -> "openai" [];
	"openai.types.beta.threads.image_url_delta" -> "openai" [];
	"openai.types.beta.threads.message_delta" -> "openai" [];
	"openai.types.beta.threads.text_delta" -> "openai" [];
	"openai.types.beta.threads.image_file" -> "openai" [];
	"openai.types.beta.threads.annotation" -> "openai" [];
	"openai.types.beta.threads.image_url" -> "openai" [];
	"openai.types.beta.threads.message" -> "openai" [];
	"openai.types.beta.threads.text" -> "openai" [];
	"openai.types.beta.threads.run" -> "openai" [];
	"openai.types.beta.assistant_stream_event" -> "openai" [];
	"openai.types.beta.assistant_tool_choice" -> "openai" [];
	"openai.types.beta.thread_deleted" -> "openai" [];
	"openai.types.beta.thread" -> "openai" [];
	"openai.resources.beta.threads.messages" -> "http" [];
	"openai.resources.beta.threads.threads" -> "http" [];
	"openai.resources.beta.threads.runs.runs" -> "http" [];
	"openai.resources.beta.threads.runs.steps" -> "http" [];
	"openai.resources.beta.beta" -> "openai" [];
	"openai.resources.beta.realtime.realtime" -> "http" [];
	"openai.resources.beta.realtime.realtime" -> "openai" [];
	"openai.types.beta.realtime.realtime_server_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_completed_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_failed_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_input_audio_transcription_delta_event" -> "openai" [];
	"openai.types.beta.realtime.response_function_call_arguments_delta_event" -> "openai" [];
	"openai.types.beta.realtime.response_function_call_arguments_done_event" -> "openai" [];
	"openai.types.beta.realtime.input_audio_buffer_speech_stopped_event" -> "openai" [];
	"openai.types.beta.realtime.input_audio_buffer_speech_started_event" -> "openai" [];
	"openai.types.beta.realtime.response_audio_transcript_delta_event" -> "openai" [];
	"openai.types.beta.realtime.response_audio_transcript_done_event" -> "openai" [];
	"openai.types.beta.realtime.transcription_session_updated_event" -> "openai" [];
	"openai.types.beta.realtime.transcription_session" -> "openai" [];
	"openai.types.beta.realtime.input_audio_buffer_committed_event" -> "openai" [];
	"openai.types.beta.realtime.response_content_part_added_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_truncated_event" -> "openai" [];
	"openai.types.beta.realtime.response_output_item_added_event" -> "openai" [];
	"openai.types.beta.realtime.response_content_part_done_event" -> "openai" [];
	"openai.types.beta.realtime.input_audio_buffer_cleared_event" -> "openai" [];
	"openai.types.beta.realtime.response_output_item_done_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_deleted_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_created_event" -> "openai" [];
	"openai.types.beta.realtime.response_audio_delta_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_created_event" -> "openai" [];
	"openai.types.beta.realtime.response_text_delta_event" -> "openai" [];
	"openai.types.beta.realtime.response_audio_done_event" -> "openai" [];
	"openai.types.beta.realtime.rate_limits_updated_event" -> "openai" [];
	"openai.types.beta.realtime.response_text_done_event" -> "openai" [];
	"openai.types.beta.realtime.response_created_event" -> "openai" [];
	"openai.types.beta.realtime.realtime_response" -> "openai" [];
	"openai.types.beta.realtime.realtime_response_status" -> "openai" [];
	"openai.types.beta.realtime.realtime_response_usage" -> "openai" [];
	"openai.types.beta.realtime.session_updated_event" -> "openai" [];
	"openai.types.beta.realtime.session" -> "openai" [];
	"openai.types.beta.realtime.session_created_event" -> "openai" [];
	"openai.types.beta.realtime.response_done_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_content" -> "openai" [];
	"openai.types.beta.realtime.error_event" -> "openai" [];
	"openai.types.beta.realtime.realtime_client_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_truncate_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_retrieve_event" -> "openai" [];
	"openai.types.beta.realtime.input_audio_buffer_commit_event" -> "openai" [];
	"openai.types.beta.realtime.input_audio_buffer_append_event" -> "openai" [];
	"openai.types.beta.realtime.input_audio_buffer_clear_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_delete_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_create_event" -> "openai" [];
	"openai.types.beta.realtime.transcription_session_update" -> "openai" [];
	"openai.types.beta.realtime.response_create_event" -> "openai" [];
	"openai.types.beta.realtime.conversation_item_with_reference" -> "openai" [];
	"openai.types.beta.realtime.response_cancel_event" -> "openai" [];
	"openai.types.beta.realtime.session_update_event" -> "openai" [];
	"openai.types.websocket_connection_options" -> "websocket" [];
	"openai.resources.beta.realtime.transcription_sessions" -> "http" [];
	"openai.types.beta.realtime.session_create_response" -> "openai" [];
	"openai.resources.beta.realtime.sessions" -> "http" [];
	"openai.resources.beta.chat.chat" -> "openai" [];
	"openai.resources.beta.chat.completions" -> "http" [];
	"openai.lib.streaming.chat._completions" -> "openai" [];
	"openai.lib.streaming._deltas" -> "openai" [];
	"openai.lib.streaming.chat._events" -> "openai" [];
	"openai.lib.streaming._assistants" -> "http" [];
	"openai.lib.streaming._assistants" -> "openai" [];
	"openai.lib._old_api" -> "openai" [];
	"openai.lib.azure" -> "http" [];
	"openai.lib.azure" -> "openai" [];
	"openai._base_client" -> "http" [];
	"openai._qs" -> "urllib" [];
	"openai._exceptions" -> "http" [];
	"openai._constants" -> "http" [];
	"openai._response" -> "http" [];
	"openai._models" -> "pydantic_core" [];
	"openai._client" -> "http" [];
	"openai._types" -> "http" [];
	"openai._legacy_response" -> "http" [];
	"langchain_community.utils.openai" -> "importlib" [];
	"langchain_community.utils.openai" -> "packaging" [];
	"langchain_core.language_models.llms" -> "collections" [];
	"langchain_core.language_models.llms" -> "langchain_core" [];
	"langchain_core.language_models.base" -> "collections" [];
	"langchain_core.language_models.base" -> "langchain_core" [];
	"langchain_community.tools.tavily_search.tool" -> "langchain_core" [];
	"langchain_community.utilities.tavily_search" -> "langchain_core" [];
	"langchain_community.tools.steamship_image_generation.tool" -> "langchain_core" [];
	"langchain_community.tools.steam.tool" -> "langchain_core" [];
	"langchain_community.tools.stackexchange.tool" -> "langchain_core" [];
	"langchain_community.tools.sql_database.tool" -> "sqlalchemy" [];
	"langchain_community.tools.sql_database.tool" -> "langchain_core" [];
	"langchain_community.utilities.sql_database" -> "langchain_core" [];
	"langchain_community.tools.spark_sql.tool" -> "langchain_core" [];
	"langchain_community.tools.sleep.tool" -> "langchain_core" [];
	"langchain_community.tools.slack.send_message" -> "langchain_core" [];
	"langchain_community.tools.slack.base" -> "langchain_core" [];
	"langchain_community.tools.slack.schedule_message" -> "langchain_core" [];
	"langchain_community.tools.slack.get_message" -> "langchain_core" [];
	"langchain_community.tools.slack.get_channel" -> "langchain_core" [];
	"langchain_community.tools.shell.tool" -> "langchain_core" [];
	"langchain_community.tools.searx_search.tool" -> "langchain_core" [];
	"langchain_community.utilities.searx_search" -> "langchain_core" [];
	"langchain_community.tools.searchapi.tool" -> "langchain_core" [];
	"langchain_community.utilities.searchapi" -> "langchain_core" [];
	"langchain_community.tools.scenexplain.tool" -> "langchain_core" [];
	"langchain_community.utilities.scenexplain" -> "langchain_core" [];
	"langchain_community.tools.requests.tool" -> "langchain_core" [];
	"langchain_community.tools.reddit_search.tool" -> "langchain_core" [];
	"langchain_community.utilities.reddit_search" -> "langchain_core" [];
	"langchain_community.tools.pubmed.tool" -> "langchain_core" [];
	"langchain_community.utilities.pubmed" -> "urllib" [];
	"langchain_community.utilities.pubmed" -> "langchain_core" [];
	"langchain_community.tools.powerbi.tool" -> "langchain_core" [];
	"langchain_community.chat_models.openai" -> "langchain_core" [];
	"langchain_community.chat_models.zhipuai" -> "collections" [];
	"langchain_community.chat_models.zhipuai" -> "langchain_core" [];
	"langchain_community.chat_models.zhipuai" -> "http" [];
	"httpx_sse._exceptions" -> "http" [];
	"httpx_sse._api" -> "http" [];
	"langchain_community.chat_models.yuan2" -> "langchain_core" [];
	"langchain_community.chat_models.yi" -> "langchain_core" [];
	"langchain_community.chat_models.yi" -> "http" [];
	"langchain_community.chat_models.yandex" -> "langchain_core" [];
	"google.protobuf.internal.builder" -> "google" [];
	"google.protobuf.internal.api_implementation" -> "google" [];
	"google.protobuf.internal.python_message" -> "google" [];
	"google.protobuf.internal.wire_format" -> "google" [];
	"google.protobuf.internal.well_known_types" -> "collections" [];
	"google.protobuf.internal.type_checkers" -> "google" [];
	"google.protobuf.internal.extension_dict" -> "google" [];
	"google.protobuf.internal.decoder" -> "google" [];
	"google.protobuf.internal.containers" -> "collections" [];
	"google.protobuf.text_format" -> "encodings" [];
	"langchain_community.llms.yandex" -> "langchain_core" [];
	"langchain_community.chat_models.volcengine_maas" -> "langchain_core" [];
	"langchain_community.llms.volcengine_maas" -> "langchain_core" [];
	"langchain_community.chat_models.vertexai" -> "urllib" [];
	"langchain_community.chat_models.vertexai" -> "langchain_core" [];
	"langchain_community.utilities.vertexai" -> "langchain_core" [];
	"langchain_community.utilities.vertexai" -> "google" [];
	"google.api_core.operations_v1.operations_rest_client_async" -> "google" [];
	"google.auth.aio.credentials" -> "google" [];
	"google.auth.aio._helpers" -> "google" [];
	"google.longrunning.operations_proto_pb2" -> "google" [];
	"google.rpc.status_pb2" -> "google" [];
	"google.rpc.code_pb2" -> "google" [];
	"google.rpc.error_details_pb2" -> "google" [];
	"google.api.client_pb2" -> "google" [];
	"google.api.launch_stage_pb2" -> "google" [];
	"google.api.annotations_pb2" -> "google" [];
	"google.api.http_pb2" -> "google" [];
	"google.longrunning.operations_pb2_grpc" -> "google" [];
	"google.api_core.operations_v1.abstract_operations_base_client" -> "google" [];
	"google.api_core.operations_v1.transports.base" -> "google" [];
	"google.api_core.operations_v1.pagers_async" -> "google" [];
	"google.api_core.operations_v1.pagers_base" -> "google" [];
	"google.api_core.operations_v1.transports.rest_asyncio" -> "google" [];
	"google.auth.aio.transport.sessions" -> "google" [];
	"google.auth.aio.transport.aiohttp" -> "google" [];
	"google.api_core.operations_v1.transports.rest" -> "google" [];
	"google.api_core.operations_v1.operations_client" -> "google" [];
	"google.api_core.operations_v1.operations_async_client" -> "google" [];
	"google.api_core.operations_v1.abstract_operations_client" -> "google" [];
	"google.api_core.operations_v1.pagers" -> "google" [];
	"google.api_core.operation_async" -> "google" [];
	"google.api_core.future.async_future" -> "google" [];
	"google.api_core.future.polling" -> "concurrent" [];
	"google.api_core.future.polling" -> "google" [];
	"google.api_core.operation" -> "google" [];
	"google.api_core.protobuf_helpers" -> "google" [];
	"proto.message" -> "google" [];
	"proto.utils" -> "google" [];
	"proto.marshal.marshal" -> "google" [];
	"proto.marshal.marshal" -> "proto" [];
	"proto.marshal.rules.field_mask" -> "google" [];
	"proto.marshal.rules.wrappers" -> "google" [];
	"proto.marshal.rules.struct" -> "collections" [];
	"proto.marshal.rules.struct" -> "google" [];
	"proto.marshal.collections.repeated" -> "proto" [];
	"proto.marshal.collections.maps" -> "proto" [];
	"proto.marshal.rules.dates" -> "google" [];
	"proto.marshal.rules.stringy_numbers" -> "proto" [];
	"proto.marshal.compat" -> "google" [];
	"proto.fields" -> "google" [];
	"proto.enums" -> "google" [];
	"proto._file_info" -> "google" [];
	"proto.datetime_helpers" -> "google" [];
	"google.api_core.gapic_v1.routing_header" -> "urllib" [];
	"google.api_core.gapic_v1.method_async" -> "google" [];
	"google.api_core.gapic_v1.method" -> "google" [];
	"google.api_core.gapic_v1.config_async" -> "google" [];
	"google.api_core.gapic_v1.config" -> "google" [];
	"google.api_core.grpc_helpers" -> "google" [];
	"google.auth.transport.grpc" -> "google" [];
	"google.api_core.retry.retry_base" -> "requests" [];
	"google.api_core.retry.retry_base" -> "google" [];
	"google.api_core.retry" -> "google" [];
	"google.api_core.datetime_helpers" -> "google" [];
	"google.api_core.exceptions" -> "http" [];
	"google.api_core.exceptions" -> "google" [];
	"grpc_status.rpc_status" -> "google" [];
	"grpc_status._async" -> "google" [];
	"grpc_status._async" -> "grpc" [];
	"google.api_core.gapic_v1.client_info" -> "google" [];
	"langchain_community.llms.vertexai" -> "concurrent" [];
	"langchain_community.llms.vertexai" -> "langchain_core" [];
	"langchain_community.llms.vertexai" -> "google" [];
	"langchain_community.chat_models.tongyi" -> "langchain_core" [];
	"langchain_community.chat_models.tongyi" -> "requests" [];
	"langchain_community.llms.tongyi" -> "langchain_core" [];
	"langchain_community.llms.tongyi" -> "requests" [];
	"langchain_community.chat_models.symblai_nebula" -> "langchain_core" [];
	"langchain_community.chat_models.sparkllm" -> "urllib" [];
	"langchain_community.chat_models.sparkllm" -> "wsgiref" [];
	"langchain_community.chat_models.sparkllm" -> "langchain_core" [];
	"websocket._url" -> "urllib" [];
	"websocket._cookiejar" -> "http" [];
	"wsgiref.util" -> "urllib" [];
	"langchain_community.chat_models.solar" -> "langchain_core" [];
	"langchain_community.llms.solar" -> "langchain_core" [];
	"langchain_community.chat_models.snowflake" -> "langchain_core" [];
	"langchain_community.chat_models.sambanova" -> "langchain_core" [];
	"langchain_community.chat_models.reka" -> "langchain_core" [];
	"langchain_community.chat_models.promptlayer_openai" -> "langchain_core" [];
	"langchain_community.chat_models.premai" -> "langchain_core" [];
	"langchain_community.chat_models.perplexity" -> "langchain_core" [];
	"langchain_community.chat_models.pai_eas_endpoint" -> "langchain_core" [];
	"langchain_community.chat_models.outlines" -> "importlib" [];
	"langchain_community.chat_models.outlines" -> "collections" [];
	"langchain_community.chat_models.outlines" -> "langchain_core" [];
	"huggingface_hub.utils._validators" -> "huggingface_hub" [];
	"huggingface_hub.utils._telemetry" -> "urllib" [];
	"huggingface_hub.utils._runtime" -> "importlib" [];
	"huggingface_hub.utils._git_credential" -> "huggingface_hub" [];
	"huggingface_hub.utils._cache_manager" -> "huggingface_hub" [];
	"huggingface_hub.utils._cache_assets" -> "huggingface_hub" [];
	"huggingface_hub.utils.tqdm" -> "tqdm" [];
	"huggingface_hub.utils.tqdm" -> "huggingface_hub" [];
	"huggingface_hub.serialization._dduf" -> "huggingface_hub" [];
	"huggingface_hub.repository" -> "urllib" [];
	"huggingface_hub.lfs" -> "urllib" [];
	"tqdm.contrib.concurrent" -> "tqdm" [];
	"tqdm.contrib.concurrent" -> "concurrent" [];
	"huggingface_hub.keras_mixin" -> "collections" [];
	"huggingface_hub.inference._generated._async_client" -> "PIL" [];
	"huggingface_hub.inference._providers" -> "huggingface_hub" [];
	"huggingface_hub.inference._providers.together" -> "huggingface_hub" [];
	"huggingface_hub.inference._providers.sambanova" -> "huggingface_hub" [];
	"huggingface_hub.inference._providers.replicate" -> "huggingface_hub" [];
	"huggingface_hub.inference._providers.openai" -> "huggingface_hub" [];
	"huggingface_hub.inference._providers.novita" -> "huggingface_hub" [];
	"huggingface_hub.inference._providers.nebius" -> "huggingface_hub" [];
	"huggingface_hub.inference._providers.hyperbolic" -> "huggingface_hub" [];
	"huggingface_hub.inference._providers.fal_ai" -> "urllib" [];
	"huggingface_hub.inference._providers.black_forest_labs" -> "huggingface_hub" [];
	"huggingface_hub.inference._common" -> "huggingface_hub" [];
	"huggingface_hub.inference._client" -> "PIL" [];
	"huggingface_hub.hub_mixin" -> "packaging" [];
	"huggingface_hub.hf_file_system" -> "urllib" [];
	"huggingface_hub.hf_api" -> "concurrent" [];
	"huggingface_hub.hf_api" -> "urllib" [];
	"huggingface_hub.hf_api" -> "tqdm" [];
	"huggingface_hub.utils.endpoint_helpers" -> "huggingface_hub" [];
	"huggingface_hub._upload_large_folder" -> "urllib" [];
	"huggingface_hub.file_download" -> "urllib" [];
	"huggingface_hub._snapshot_download" -> "tqdm" [];
	"huggingface_hub._login" -> "ipywidgets" [];
	"huggingface_hub._login" -> "IPython" [];
	"huggingface_hub.commands.delete_cache" -> "huggingface_hub" [];
	"huggingface_hub._commit_scheduler" -> "concurrent" [];
	"langchain_community.chat_models.ollama" -> "langchain_core" [];
	"langchain_community.llms.ollama" -> "langchain_core" [];
	"langchain_community.chat_models.octoai" -> "langchain_core" [];
	"langchain_community.chat_models.oci_generative_ai" -> "langchain_core" [];
	"langchain_community.llms.oci_generative_ai" -> "langchain_core" [];
	"langchain_community.chat_models.oci_data_science" -> "langchain_core" [];
	"langchain_openai.chat_models.base" -> "collections" [];
	"langchain_openai.chat_models.base" -> "urllib" [];
	"langchain_openai.chat_models.base" -> "langchain_core" [];
	"langchain_openai.chat_models.base" -> "http" [];
	"langchain_openai.chat_models.azure" -> "collections" [];
	"langchain_openai.chat_models.azure" -> "langchain_core" [];
	"langchain_openai.llms.base" -> "collections" [];
	"langchain_openai.llms.base" -> "langchain_core" [];
	"langchain_openai.llms.azure" -> "collections" [];
	"langchain_openai.llms.azure" -> "langchain_core" [];
	"langchain_openai.embeddings.base" -> "collections" [];
	"langchain_openai.embeddings.base" -> "langchain_core" [];
	"langchain_openai.embeddings.base" -> "http" [];
	"langchain_openai.embeddings.base" -> "tqdm" [];
	"langchain_openai.embeddings.azure" -> "collections" [];
	"langchain_openai.embeddings.azure" -> "langchain_core" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "langchain_core" [];
	"langchain_community.chat_models.naver" -> "http" [];
	"langchain_community.chat_models.naver" -> "langchain_core" [];
	"langchain_community.chat_models.moonshot" -> "langchain_core" [];
	"langchain_community.llms.moonshot" -> "langchain_core" [];
	"langchain_community.chat_models.mlx" -> "langchain_core" [];
	"langchain_community.llms.mlx_pipeline" -> "langchain_core" [];
	"langchain_community.chat_models.mlflow_ai_gateway" -> "langchain_core" [];
	"langchain_community.chat_models.mlflow" -> "urllib" [];
	"langchain_community.chat_models.mlflow" -> "langchain_core" [];
	"langchain_community.chat_models.minimax" -> "langchain_core" [];
	"langchain_community.chat_models.minimax" -> "http" [];
	"langchain_community.chat_models.maritalk" -> "langchain_core" [];
	"langchain_community.chat_models.llamacpp" -> "langchain_core" [];
	"langchain_community.chat_models.llama_edge" -> "langchain_core" [];
	"langchain_community.chat_models.litellm_router" -> "langchain_core" [];
	"langchain_community.chat_models.litellm_router" -> "litellm" [];
	"litellm.utils" -> "http" [];
	"litellm.llms.gemini.common_utils" -> "http" [];
	"litellm.responses.litellm_completion_transformation.transformation" -> "litellm" [];
	"litellm.caching.s3_cache" -> "litellm" [];
	"litellm.proxy.proxy_server" -> "websocket" [];
	"litellm.proxy.guardrails.guardrail_hooks.guardrails_ai" -> "http" [];
	"litellm.proxy.guardrails.guardrail_hooks.presidio" -> "concurrent" [];
	"litellm.proxy.guardrails.guardrail_hooks.lakera_ai" -> "http" [];
	"litellm.llms.bedrock.base_aws_llm" -> "http" [];
	"litellm.llms.bedrock.base_aws_llm" -> "litellm" [];
	"litellm.litellm_core_utils.safe_json_dumps" -> "litellm" [];
	"litellm.secret_managers.hashicorp_secret_manager" -> "http" [];
	"litellm.secret_managers.base_secret_manager" -> "http" [];
	"litellm.llms.vertex_ai.vertex_llm_base" -> "litellm" [];
	"litellm.llms.vertex_ai.vertex_llm_base" -> "google" [];
	"litellm.llms.vertex_ai.vertex_ai_non_gemini" -> "http" [];
	"litellm.llms.vertex_ai.vertex_ai_non_gemini" -> "google" [];
	"litellm.llms.vertex_ai.common_utils" -> "http" [];
	"litellm.litellm_core_utils.asyncify" -> "concurrent" [];
	"litellm.secret_managers.aws_secret_manager_v2" -> "http" [];
	"litellm.vector_stores.vector_store_registry" -> "litellm" [];
	"litellm.proxy._experimental.mcp_server.mcp_server_manager" -> "litellm" [];
	"prometheus_client.exposition" -> "http" [];
	"prometheus_client.exposition" -> "urllib" [];
	"prometheus_client.exposition" -> "wsgiref" [];
	"prometheus_client.asgi" -> "urllib" [];
	"prometheus_client.openmetrics.exposition" -> "prometheus_client" [];
	"wsgiref.simple_server" -> "http" [];
	"wsgiref.simple_server" -> "urllib" [];
	"litellm.secret_managers.google_kms" -> "google" [];
	"litellm.router" -> "http" [];
	"litellm.router_utils.router_callbacks.track_deployment_metrics" -> "litellm" [];
	"litellm.router_utils.prompt_caching_cache" -> "litellm" [];
	"litellm.router_utils.handle_error" -> "litellm" [];
	"litellm.router_utils.client_initalization_utils" -> "litellm" [];
	"litellm.router_strategy.tag_based_routing" -> "litellm" [];
	"litellm.router_strategy.simple_shuffle" -> "litellm" [];
	"litellm.router_strategy.lowest_tpm_rpm_v2" -> "http" [];
	"litellm.router_strategy.base_routing_strategy" -> "litellm" [];
	"litellm.proxy.vertex_ai_endpoints.langfuse_endpoints" -> "http" [];
	"litellm.proxy.db.prisma_client" -> "litellm" [];
	"litellm.proxy.auth.rds_iam_token" -> "http" [];
	"litellm.proxy.auth.rds_iam_token" -> "urllib" [];
	"litellm.proxy.db.log_db_metrics" -> "litellm" [];
	"litellm.proxy.db.log_db_metrics" -> "http" [];
	"litellm.proxy.db.db_transaction_queue.spend_update_queue" -> "litellm" [];
	"litellm.proxy.db.db_transaction_queue.base_update_queue" -> "litellm" [];
	"litellm.proxy.db.db_transaction_queue.redis_update_buffer" -> "litellm" [];
	"litellm.proxy.db.db_transaction_queue.pod_lock_manager" -> "litellm" [];
	"litellm.proxy.db.db_transaction_queue.daily_spend_update_queue" -> "litellm" [];
	"litellm.llms.custom_httpx.httpx_handler" -> "http" [];
	"litellm.llms.custom_httpx.httpx_handler" -> "litellm" [];
	"email.mime.text" -> "email" [];
	"litellm.llms.together_ai.cost_calculator" -> "litellm" [];
	"litellm.llms.openai.cost_calculation" -> "litellm" [];
	"litellm.llms.fireworks_ai.cost_calculator" -> "litellm" [];
	"litellm.llms.databricks.cost_calculator" -> "litellm" [];
	"litellm.llms.azure.cost_calculation" -> "litellm" [];
	"litellm.proxy.rerank_endpoints.endpoints" -> "litellm" [];
	"litellm.proxy.pass_through_endpoints.pass_through_endpoints" -> "urllib" [];
	"litellm.proxy.pass_through_endpoints.pass_through_endpoints" -> "http" [];
	"litellm.proxy.pass_through_endpoints.success_handler" -> "urllib" [];
	"litellm.proxy.pass_through_endpoints.success_handler" -> "http" [];
	"litellm.proxy.pass_through_endpoints.success_handler" -> "litellm" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.vertex_passthrough_logging_handler" -> "urllib" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.vertex_passthrough_logging_handler" -> "http" [];
	"litellm.llms.vertex_ai.image_generation.image_generation_handler" -> "http" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.base_passthrough_logging_handler" -> "http" [];
	"litellm.llms.cohere.chat.v2_transformation" -> "http" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "jinja2" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "email" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "http" [];
	"litellm.litellm_core_utils.prompt_templates.image_handling" -> "http" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.assembly_passthrough_logging_handler" -> "urllib" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.assembly_passthrough_logging_handler" -> "http" [];
	"litellm.proxy.pass_through_endpoints.llm_provider_handlers.anthropic_passthrough_logging_handler" -> "http" [];
	"litellm.llms.anthropic.chat.transformation" -> "http" [];
	"litellm.llms.anthropic.common_utils" -> "http" [];
	"litellm.llms.anthropic.chat.handler" -> "http" [];
	"litellm.llms.base" -> "http" [];
	"litellm.proxy.pass_through_endpoints.streaming_handler" -> "http" [];
	"litellm.proxy.pass_through_endpoints.streaming_handler" -> "litellm" [];
	"litellm.proxy.pass_through_endpoints.llm_passthrough_endpoints" -> "http" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "urllib" [];
	"litellm.llms.bedrock.chat.invoke_handler" -> "http" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_deepseek_transformation" -> "http" [];
	"litellm.llms.bedrock.chat.invoke_transformations.base_invoke_transformation" -> "urllib" [];
	"litellm.llms.bedrock.chat.invoke_transformations.base_invoke_transformation" -> "http" [];
	"litellm.llms.bedrock.chat.converse_transformation" -> "http" [];
	"litellm.llms.bedrock.chat.converse_handler" -> "http" [];
	"litellm.proxy.pass_through_endpoints.passthrough_endpoint_router" -> "litellm" [];
	"litellm.proxy.auth.route_checks" -> "litellm" [];
	"litellm.proxy.openai_files_endpoints.files_endpoints" -> "http" [];
	"litellm.proxy.management_helpers.team_member_permission_checks" -> "litellm" [];
	"litellm.proxy.management_endpoints.team_callback_endpoints" -> "litellm" [];
	"litellm.proxy.management_endpoints.tag_management_endpoints" -> "litellm" [];
	"litellm.proxy.management_endpoints.common_daily_activity" -> "litellm" [];
	"litellm.proxy.management_endpoints.scim.scim_v2" -> "litellm" [];
	"litellm.proxy.management_endpoints.organization_endpoints" -> "litellm" [];
	"litellm.proxy.management_endpoints.model_management_endpoints" -> "litellm" [];
	"litellm.integrations.langfuse.langfuse" -> "packaging" [];
	"litellm.integrations.datadog.datadog" -> "http" [];
	"litellm.proxy.guardrails.guardrail_endpoints" -> "litellm" [];
	"litellm.proxy.db.db_transaction_queue.spend_log_cleanup" -> "litellm" [];
	"litellm.proxy.common_utils.swagger_utils" -> "litellm" [];
	"litellm.proxy.common_utils.reset_budget_job" -> "litellm" [];
	"litellm.proxy.common_utils.load_config_utils" -> "litellm" [];
	"litellm.integrations.gcs_bucket.gcs_bucket" -> "urllib" [];
	"litellm.integrations.gcs_bucket.gcs_bucket" -> "litellm" [];
	"litellm.main" -> "http" [];
	"litellm.llms.watsonx.common_utils" -> "http" [];
	"litellm.llms.watsonx.chat.handler" -> "http" [];
	"litellm.llms.watsonx.chat.transformation" -> "litellm" [];
	"litellm.llms.openai.chat.gpt_transformation" -> "http" [];
	"litellm.llms.openai.common_utils" -> "http" [];
	"litellm.llms.vllm.completion.handler" -> "http" [];
	"litellm.llms.vllm.completion.handler" -> "litellm" [];
	"litellm.llms.vertex_ai.vertex_model_garden.main" -> "http" [];
	"litellm.llms.vertex_ai.vertex_model_garden.main" -> "litellm" [];
	"litellm.llms.vertex_ai.vertex_embeddings.embedding_handler" -> "http" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.main" -> "http" [];
	"litellm.llms.vertex_ai.text_to_speech.text_to_speech_handler" -> "http" [];
	"litellm.llms.vertex_ai.multimodal_embeddings.embedding_handler" -> "http" [];
	"litellm.llms.vertex_ai.multimodal_embeddings.transformation" -> "http" [];
	"litellm.llms.vertex_ai.multimodal_embeddings.transformation" -> "litellm" [];
	"litellm.llms.vertex_ai.gemini_embeddings.batch_embed_content_handler" -> "http" [];
	"litellm.llms.sagemaker.completion.handler" -> "http" [];
	"litellm.llms.sagemaker.common_utils" -> "http" [];
	"litellm.llms.sagemaker.chat.handler" -> "http" [];
	"litellm.llms.sagemaker.chat.handler" -> "litellm" [];
	"litellm.llms.sagemaker.chat.transformation" -> "http" [];
	"litellm.llms.replicate.chat.transformation" -> "http" [];
	"litellm.llms.replicate.common_utils" -> "http" [];
	"litellm.llms.predibase.chat.handler" -> "http" [];
	"litellm.llms.predibase.common_utils" -> "http" [];
	"litellm.llms.petals.common_utils" -> "http" [];
	"litellm.llms.openai_like.embedding.handler" -> "http" [];
	"litellm.llms.openai_like.common_utils" -> "http" [];
	"litellm.llms.openai_like.chat.handler" -> "http" [];
	"litellm.llms.openai_like.chat.transformation" -> "http" [];
	"litellm.llms.openai.transcriptions.handler" -> "http" [];
	"litellm.llms.openai.openai" -> "urllib" [];
	"litellm.llms.openai.openai" -> "http" [];
	"litellm.llms.openai.image_variations.handler" -> "http" [];
	"litellm.llms.oobabooga.chat.transformation" -> "http" [];
	"litellm.llms.oobabooga.common_utils" -> "http" [];
	"litellm.llms.nlp_cloud.chat.transformation" -> "http" [];
	"litellm.llms.nlp_cloud.chat.transformation" -> "litellm" [];
	"litellm.llms.nlp_cloud.common_utils" -> "http" [];
	"litellm.llms.huggingface.embedding.handler" -> "http" [];
	"litellm.llms.huggingface.embedding.transformation" -> "http" [];
	"litellm.llms.huggingface.common_utils" -> "http" [];
	"litellm.llms.groq.chat.handler" -> "litellm" [];
	"litellm.llms.deprecated_providers.palm" -> "http" [];
	"litellm.llms.deprecated_providers.aleph_alpha" -> "http" [];
	"litellm.llms.databricks.embed.handler" -> "litellm" [];
	"litellm.llms.custom_llm" -> "http" [];
	"litellm.llms.custom_llm" -> "litellm" [];
	"litellm.llms.custom_httpx.llm_http_handler" -> "http" [];
	"litellm.llms.custom_httpx.llm_http_handler" -> "websocket" [];
	"litellm.responses.streaming_iterator" -> "http" [];
	"litellm.responses.streaming_iterator" -> "litellm" [];
	"litellm.litellm_core_utils.realtime_streaming" -> "concurrent" [];
	"litellm.litellm_core_utils.realtime_streaming" -> "websocket" [];
	"litellm.llms.custom_httpx.aiohttp_handler" -> "http" [];
	"litellm.llms.cohere.embed.handler" -> "http" [];
	"litellm.llms.cohere.embed.v1_transformation" -> "http" [];
	"litellm.llms.codestral.completion.handler" -> "http" [];
	"litellm.llms.bedrock.image.image_handler" -> "http" [];
	"litellm.llms.bedrock.embed.embedding" -> "http" [];
	"litellm.llms.bedrock.embed.amazon_titan_multimodal_transformation" -> "litellm" [];
	"litellm.llms.azure_ai.embed.cohere_transformation" -> "litellm" [];
	"litellm.llms.azure.completion.handler" -> "litellm" [];
	"litellm.llms.azure.common_utils" -> "http" [];
	"litellm.llms.azure.chat.o_series_handler" -> "http" [];
	"litellm.llms.azure.azure" -> "http" [];
	"litellm.llms.azure.audio_transcriptions" -> "litellm" [];
	"litellm.llms.ollama_chat" -> "http" [];
	"litellm.litellm_core_utils.streaming_chunk_builder_utils" -> "litellm" [];
	"litellm.realtime_api.main" -> "websocket" [];
	"litellm.llms.openai.realtime.handler" -> "websocket" [];
	"litellm.llms.azure.realtime.handler" -> "websocket" [];
	"litellm.proxy.common_utils.http_parsing_utils" -> "litellm" [];
	"litellm.proxy.common_utils.encrypt_decrypt_utils" -> "litellm" [];
	"tracemalloc" -> "collections" [];
	"litellm.proxy.common_request_processing" -> "http" [];
	"litellm.batches.main" -> "http" [];
	"litellm.llms.vertex_ai.batches.handler" -> "http" [];
	"litellm.llms.vertex_ai.batches.transformation" -> "urllib" [];
	"litellm.llms.azure.batches.handler" -> "http" [];
	"litellm.proxy.auth.oauth2_proxy_hook" -> "litellm" [];
	"litellm.proxy.auth.oauth2_check" -> "http" [];
	"litellm.proxy.auth.oauth2_check" -> "litellm" [];
	"litellm.proxy.auth.litellm_license" -> "http" [];
	"litellm.proxy.auth.litellm_license" -> "litellm" [];
	"litellm.proxy.auth.handle_jwt" -> "litellm" [];
	"litellm.proxy._experimental.mcp_server.tool_registry" -> "litellm" [];
	"litellm.proxy._experimental.mcp_server.server" -> "litellm" [];
	"litellm.proxy._experimental.mcp_server.sse_transport" -> "urllib" [];
	"litellm.proxy._experimental.mcp_server.sse_transport" -> "litellm" [];
	"litellm.litellm_core_utils.sensitive_data_masker" -> "litellm" [];
	"litellm.integrations.email_alerting" -> "litellm" [];
	"litellm.integrations.SlackAlerting.batching_handler" -> "litellm" [];
	"litellm.integrations.arize.arize_phoenix" -> "urllib" [];
	"litellm.integrations.arize.arize_phoenix" -> "litellm" [];
	"litellm.integrations.arize._utils" -> "litellm" [];
	"litellm.caching.redis_cluster_cache" -> "litellm" [];
	"litellm.caching.dual_cache" -> "concurrent" [];
	"litellm.llms.vertex_ai.gemini.vertex_and_google_ai_studio_gemini" -> "http" [];
	"litellm.llms.vertex_ai.gemini.transformation" -> "http" [];
	"litellm.llms.vertex_ai.context_caching.vertex_ai_context_caching" -> "http" [];
	"litellm.llms.vertex_ai.context_caching.transformation" -> "litellm" [];
	"litellm.llms.azure.image_generation" -> "litellm" [];
	"litellm.llms.vertex_ai.files.transformation" -> "http" [];
	"litellm.llms.gemini.files.transformation" -> "http" [];
	"litellm.llms.gemini.files.transformation" -> "litellm" [];
	"litellm.llms.vllm.common_utils" -> "http" [];
	"litellm.llms.cohere.embed.transformation" -> "http" [];
	"litellm.caching.in_memory_cache" -> "litellm" [];
	"litellm.litellm_core_utils.specialty_caches.dynamic_logging_cache" -> "litellm" [];
	"litellm.integrations.traceloop" -> "litellm" [];
	"litellm.integrations.opik.opik" -> "litellm" [];
	"litellm.integrations.openmeter" -> "http" [];
	"litellm.integrations.logfire_logger" -> "litellm" [];
	"litellm.integrations.literal_ai" -> "http" [];
	"litellm.integrations.literal_ai" -> "litellm" [];
	"litellm.integrations.langsmith" -> "http" [];
	"litellm.integrations.langfuse.langfuse_prompt_management" -> "packaging" [];
	"litellm.integrations.lago" -> "http" [];
	"litellm.integrations.humanloop" -> "http" [];
	"litellm.integrations.datadog.datadog_llm_obs" -> "http" [];
	"litellm.integrations.braintrust_logging" -> "http" [];
	"litellm.integrations.azure_storage.azure_storage" -> "litellm" [];
	"litellm.integrations.argilla" -> "http" [];
	"litellm.litellm_core_utils.model_param_helper" -> "litellm" [];
	"litellm.integrations.mlflow" -> "litellm" [];
	"litellm.files.main" -> "http" [];
	"litellm.llms.vertex_ai.files.handler" -> "http" [];
	"litellm.llms.azure.files.handler" -> "http" [];
	"litellm.llms.azure.files.handler" -> "litellm" [];
	"litellm.types.router" -> "http" [];
	"litellm.types.router" -> "litellm" [];
	"litellm.proxy._types" -> "http" [];
	"litellm.exceptions" -> "http" [];
	"litellm.llms.base_llm.responses.transformation" -> "http" [];
	"litellm.llms.base_llm.rerank.transformation" -> "http" [];
	"litellm.llms.base_llm.realtime.transformation" -> "http" [];
	"litellm.llms.base_llm.image_variations.transformation" -> "http" [];
	"litellm.llms.base_llm.image_generation.transformation" -> "http" [];
	"litellm.llms.base_llm.files.transformation" -> "http" [];
	"litellm.llms.base_llm.files.transformation" -> "litellm" [];
	"litellm.llms.base_llm.embedding.transformation" -> "http" [];
	"litellm.llms.base_llm.completion.transformation" -> "http" [];
	"litellm.llms.base_llm.chat.transformation" -> "http" [];
	"litellm.llms.base_llm.chat.transformation" -> "litellm" [];
	"litellm.llms.base_llm.base_utils" -> "openai" [];
	"litellm.llms.base_llm.base_utils" -> "litellm" [];
	"litellm.llms.base_llm.audio_transcription.transformation" -> "http" [];
	"litellm.llms.base_llm.anthropic_messages.transformation" -> "http" [];
	"litellm.litellm_core_utils.thread_pool_executor" -> "concurrent" [];
	"litellm.types.utils" -> "openai" [];
	"litellm.types.llms.openai" -> "http" [];
	"litellm.types.llms.openai" -> "openai" [];
	"litellm.secret_managers.main" -> "http" [];
	"litellm.router_utils.get_retry_from_policy" -> "litellm" [];
	"litellm.llms.custom_httpx.http_handler" -> "http" [];
	"litellm.llms.bedrock.common_utils" -> "http" [];
	"litellm.litellm_core_utils.streaming_handler" -> "collections" [];
	"litellm.litellm_core_utils.streaming_handler" -> "http" [];
	"litellm.litellm_core_utils.get_llm_provider_logic" -> "http" [];
	"litellm.litellm_core_utils.exception_mapping_utils" -> "http" [];
	"litellm.litellm_core_utils.core_helpers" -> "http" [];
	"litellm.litellm_core_utils.core_helpers" -> "litellm" [];
	"litellm.integrations.custom_guardrail" -> "litellm" [];
	"litellm.integrations.prometheus_services" -> "litellm" [];
	"litellm" -> "http" [];
	"litellm.fine_tuning.main" -> "http" [];
	"litellm.llms.vertex_ai.fine_tuning.handler" -> "http" [];
	"litellm.llms.openai.fine_tuning.handler" -> "http" [];
	"litellm.llms.openai.fine_tuning.handler" -> "litellm" [];
	"litellm.llms.azure.fine_tuning.handler" -> "http" [];
	"litellm.responses.main" -> "http" [];
	"litellm.llms.bedrock.rerank.handler" -> "http" [];
	"litellm.batch_completion.main" -> "concurrent" [];
	"litellm.assistants.main" -> "http" [];
	"litellm.llms.azure.assistants" -> "http" [];
	"litellm.proxy.proxy_cli" -> "urllib" [];
	"litellm.proxy.proxy_cli" -> "http" [];
	"litellm.proxy.db.check_migration" -> "litellm" [];
	"litellm.llms.watsonx.embed.transformation" -> "http" [];
	"litellm.llms.watsonx.completion.transformation" -> "http" [];
	"litellm.llms.watsonx.completion.transformation" -> "litellm" [];
	"litellm.llms.hosted_vllm.chat.transformation" -> "litellm" [];
	"litellm.llms.xai.common_utils" -> "http" [];
	"litellm.llms.fireworks_ai.common_utils" -> "http" [];
	"litellm.llms.fireworks_ai.chat.transformation" -> "http" [];
	"litellm.llms.sambanova.chat" -> "litellm" [];
	"litellm.llms.openai.transcriptions.whisper_transformation" -> "http" [];
	"litellm.llms.azure.responses.transformation" -> "http" [];
	"litellm.llms.azure.responses.transformation" -> "urllib" [];
	"litellm.llms.openai.responses.transformation" -> "http" [];
	"litellm.llms.azure_ai.chat.transformation" -> "urllib" [];
	"litellm.llms.azure_ai.chat.transformation" -> "http" [];
	"litellm.llms.infinity.embedding.transformation" -> "http" [];
	"litellm.llms.infinity.common_utils" -> "http" [];
	"litellm.llms.voyage.embedding.transformation" -> "http" [];
	"litellm.llms.topaz.image_variations.transformation" -> "http" [];
	"litellm.llms.deepgram.audio_transcription.transformation" -> "http" [];
	"litellm.llms.openai.image_variations.transformation" -> "http" [];
	"litellm.llms.cohere.chat.transformation" -> "http" [];
	"litellm.llms.bedrock.chat.invoke_transformations.anthropic_claude3_transformation" -> "http" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_nova_transformation" -> "http" [];
	"litellm.llms.ollama.common_utils" -> "http" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.llama3.transformation" -> "http" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.anthropic.transformation" -> "http" [];
	"litellm.llms.petals.completion.transformation" -> "http" [];
	"litellm.llms.cloudflare.chat.transformation" -> "http" [];
	"litellm.llms.bedrock.messages.invoke_transformations.anthropic_claude3_transformation" -> "http" [];
	"litellm.llms.anthropic.experimental_pass_through.messages.transformation" -> "http" [];
	"litellm.llms.clarifai.chat.transformation" -> "http" [];
	"litellm.llms.clarifai.chat.transformation" -> "litellm" [];
	"litellm.llms.jina_ai.rerank.transformation" -> "http" [];
	"litellm.llms.infinity.rerank.transformation" -> "http" [];
	"litellm.llms.azure_ai.rerank.transformation" -> "http" [];
	"litellm.llms.cohere.rerank.transformation" -> "http" [];
	"litellm.llms.snowflake.chat.transformation" -> "http" [];
	"litellm.llms.cohere.completion.transformation" -> "http" [];
	"litellm.llms.predibase.chat.transformation" -> "http" [];
	"litellm.llms.predibase.chat.transformation" -> "litellm" [];
	"litellm.llms.databricks.chat.transformation" -> "http" [];
	"litellm.llms.databricks.chat.transformation" -> "litellm" [];
	"litellm.llms.triton.embedding.transformation" -> "http" [];
	"litellm.llms.triton.common_utils" -> "http" [];
	"litellm.llms.triton.completion.transformation" -> "http" [];
	"litellm.llms.triton.completion.transformation" -> "litellm" [];
	"litellm.llms.anthropic.completion.transformation" -> "http" [];
	"litellm.llms.openrouter.chat.transformation" -> "http" [];
	"litellm.llms.huggingface.chat.transformation" -> "http" [];
	"litellm.litellm_core_utils.get_model_cost_map" -> "http" [];
	"litellm.litellm_core_utils.get_model_cost_map" -> "importlib" [];
	"langchain_community.chat_models.litellm" -> "langchain_core" [];
	"langchain_community.chat_models.konko" -> "langchain_core" [];
	"langchain_community.chat_models.kinetica" -> "importlib" [];
	"langchain_community.chat_models.kinetica" -> "langchain_core" [];
	"langchain_community.chat_models.jinachat" -> "langchain_core" [];
	"langchain_community.chat_models.javelin_ai_gateway" -> "langchain_core" [];
	"langchain_community.chat_models.hunyuan" -> "langchain_core" [];
	"langchain_community.chat_models.human" -> "langchain_core" [];
	"langchain_community.chat_models.huggingface" -> "langchain_core" [];
	"langchain_community.llms.huggingface_text_gen_inference" -> "langchain_core" [];
	"langchain_community.llms.huggingface_hub" -> "langchain_core" [];
	"langchain_community.llms.huggingface_endpoint" -> "langchain_core" [];
	"langchain_community.chat_models.gpt_router" -> "langchain_core" [];
	"langchain_community.chat_models.google_palm" -> "langchain_core" [];
	"langchain_community.chat_models.gigachat" -> "langchain_core" [];
	"langchain_community.llms.gigachat" -> "langchain_core" [];
	"langchain_community.chat_models.friendli" -> "langchain_core" [];
	"langchain_community.llms.friendli" -> "langchain_core" [];
	"langchain_community.chat_models.fireworks" -> "langchain_core" [];
	"langchain_community.chat_models.fake" -> "langchain_core" [];
	"langchain_community.chat_models.everlyai" -> "langchain_core" [];
	"langchain_community.chat_models.ernie" -> "langchain_core" [];
	"langchain_community.chat_models.edenai" -> "langchain_core" [];
	"langchain_community.chat_models.deepinfra" -> "langchain_core" [];
	"langchain_community.chat_models.databricks" -> "urllib" [];
	"langchain_community.chat_models.databricks" -> "langchain_core" [];
	"langchain_community.chat_models.coze" -> "langchain_core" [];
	"langchain_community.chat_models.cohere" -> "langchain_core" [];
	"langchain_community.llms.cohere" -> "langchain_core" [];
	"langchain_community.chat_models.bedrock" -> "langchain_core" [];
	"langchain_community.llms.bedrock" -> "langchain_core" [];
	"langchain_community.chat_models.meta" -> "langchain_core" [];
	"langchain_community.chat_models.baidu_qianfan_endpoint" -> "langchain_core" [];
	"langchain_community.chat_models.baichuan" -> "langchain_core" [];
	"langchain_community.chat_models.baichuan" -> "http" [];
	"langchain_community.chat_models.azure_openai" -> "langchain_core" [];
	"langchain_community.chat_models.anyscale" -> "langchain_core" [];
	"langchain_community.chat_models.anthropic" -> "langchain_core" [];
	"langchain_community.llms.anthropic" -> "langchain_core" [];
	"langchain_community.adapters.openai" -> "langchain_core" [];
	"langchain_core.chat_sessions" -> "collections" [];
	"langchain_core.language_models.chat_models" -> "collections" [];
	"langchain_core.language_models.chat_models" -> "langchain_core" [];
	"langchain_core.language_models._utils" -> "collections" [];
	"langchain_core.language_models._utils" -> "langchain_core" [];
	"langchain_community.tools.polygon.ticker_news" -> "langchain_core" [];
	"langchain_community.utilities.polygon" -> "langchain_core" [];
	"langchain_community.tools.polygon.last_quote" -> "langchain_core" [];
	"langchain_community.tools.polygon.financials" -> "langchain_core" [];
	"langchain_community.tools.polygon.aggregates" -> "langchain_core" [];
	"langchain_community.tools.plugin" -> "langchain_core" [];
	"langchain_community.tools.playwright.navigate_back" -> "langchain_core" [];
	"langchain_community.tools.playwright.base" -> "langchain_core" [];
	"langchain_community.tools.playwright.navigate" -> "urllib" [];
	"langchain_community.tools.playwright.navigate" -> "langchain_core" [];
	"langchain_community.tools.playwright.get_elements" -> "langchain_core" [];
	"langchain_community.tools.playwright.extract_text" -> "langchain_core" [];
	"langchain_community.tools.playwright.extract_hyperlinks" -> "langchain_core" [];
	"langchain_community.tools.playwright.extract_hyperlinks" -> "urllib" [];
	"langchain_community.tools.playwright.current_page" -> "langchain_core" [];
	"langchain_community.tools.playwright.click" -> "langchain_core" [];
	"langchain_community.tools.openweathermap.tool" -> "langchain_core" [];
	"langchain_community.utilities.openweathermap" -> "langchain_core" [];
	"langchain_community.tools.office365.send_message" -> "langchain_core" [];
	"langchain_community.tools.office365.base" -> "langchain_core" [];
	"langchain_community.tools.office365.send_event" -> "langchain_core" [];
	"langchain_community.tools.office365.messages_search" -> "langchain_core" [];
	"langchain_community.tools.office365.events_search" -> "langchain_core" [];
	"langchain_community.tools.office365.create_draft_message" -> "langchain_core" [];
	"langchain_community.tools.nasa.tool" -> "langchain_core" [];
	"langchain_community.tools.mojeek_search.tool" -> "langchain_core" [];
	"langchain_community.tools.metaphor_search.tool" -> "langchain_core" [];
	"langchain_community.utilities.metaphor_search" -> "langchain_core" [];
	"langchain_community.tools.merriam_webster.tool" -> "langchain_core" [];
	"langchain_community.utilities.merriam_webster" -> "urllib" [];
	"langchain_community.utilities.merriam_webster" -> "langchain_core" [];
	"langchain_community.tools.json.tool" -> "langchain_core" [];
	"langchain_community.tools.jira.tool" -> "langchain_core" [];
	"langchain_community.utilities.jira" -> "langchain_core" [];
	"langchain_community.tools.jina_search.tool" -> "langchain_core" [];
	"langchain_community.utilities.jina_search" -> "langchain_core" [];
	"langchain_community.tools.ifttt" -> "langchain_core" [];
	"langchain_community.tools.human.tool" -> "langchain_core" [];
	"langchain_community.tools.graphql.tool" -> "langchain_core" [];
	"langchain_community.tools.google_serper.tool" -> "langchain_core" [];
	"langchain_community.utilities.google_serper" -> "langchain_core" [];
	"langchain_community.tools.google_search.tool" -> "langchain_core" [];
	"langchain_community.utilities.google_search" -> "langchain_core" [];
	"langchain_community.tools.google_places.tool" -> "langchain_core" [];
	"langchain_community.utilities.google_places_api" -> "langchain_core" [];
	"langchain_community.tools.google_cloud.texttospeech" -> "langchain_core" [];
	"langchain_community.tools.google_cloud.texttospeech" -> "google" [];
	"langchain_community.tools.google_books" -> "langchain_core" [];
	"langchain_community.utilities.google_books" -> "langchain_core" [];
	"langchain_community.tools.gmail.utils" -> "langchain_core" [];
	"langchain_community.tools.gmail.send_message" -> "langchain_core" [];
	"langchain_community.tools.gmail.base" -> "langchain_core" [];
	"langchain_community.tools.gmail.search" -> "langchain_core" [];
	"langchain_community.tools.gmail.get_thread" -> "langchain_core" [];
	"langchain_community.tools.gmail.get_message" -> "langchain_core" [];
	"langchain_community.tools.gmail.create_draft" -> "email" [];
	"langchain_community.tools.gmail.create_draft" -> "langchain_core" [];
	"langchain_community.tools.financial_datasets.income_statements" -> "langchain_core" [];
	"langchain_community.utilities.financial_datasets" -> "langchain_core" [];
	"langchain_community.tools.financial_datasets.cash_flow_statements" -> "langchain_core" [];
	"langchain_community.tools.financial_datasets.balance_sheets" -> "langchain_core" [];
	"langchain_community.tools.file_management.write" -> "langchain_core" [];
	"langchain_community.tools.file_management.read" -> "langchain_core" [];
	"langchain_community.tools.file_management.move" -> "langchain_core" [];
	"langchain_community.tools.file_management.list_dir" -> "langchain_core" [];
	"langchain_community.tools.file_management.file_search" -> "langchain_core" [];
	"langchain_community.tools.file_management.delete" -> "langchain_core" [];
	"langchain_community.tools.file_management.copy" -> "langchain_core" [];
	"langchain_community.tools.eleven_labs.text2speech" -> "langchain_core" [];
	"langchain_community.tools.edenai.text_moderation" -> "langchain_core" [];
	"langchain_community.tools.edenai.ocr_invoiceparser" -> "langchain_core" [];
	"langchain_community.tools.edenai.ocr_identityparser" -> "langchain_core" [];
	"langchain_community.tools.edenai.image_objectdetection" -> "langchain_core" [];
	"langchain_community.tools.edenai.image_explicitcontent" -> "langchain_core" [];
	"langchain_community.tools.edenai.edenai_base_tool" -> "langchain_core" [];
	"langchain_community.tools.edenai.audio_text_to_speech" -> "langchain_core" [];
	"langchain_community.tools.edenai.audio_speech_to_text" -> "langchain_core" [];
	"langchain_community.tools.e2b_data_analysis.tool" -> "langchain_core" [];
	"langchain_community.tools.ddg_search.tool" -> "langchain_core" [];
	"langchain_community.tools.dataherald.tool" -> "langchain_core" [];
	"langchain_community.utilities.dataherald" -> "langchain_core" [];
	"langchain_community.tools.connery.tool" -> "langchain_core" [];
	"langchain_community.tools.cogniswitch.tool" -> "langchain_core" [];
	"langchain_community.tools.cassandra_database.tool" -> "langchain_core" [];
	"langchain_community.tools.brave_search.tool" -> "langchain_core" [];
	"langchain_community.utilities.brave_search" -> "langchain_core" [];
	"langchain_community.tools.bing_search.tool" -> "langchain_core" [];
	"langchain_community.utilities.bing_search" -> "langchain_core" [];
	"langchain_community.tools.bearly.tool" -> "langchain_core" [];
	"langchain_community.tools.azure_cognitive_services.text_analytics_health" -> "langchain_core" [];
	"langchain_community.tools.azure_cognitive_services.text2speech" -> "langchain_core" [];
	"langchain_community.tools.azure_cognitive_services.speech2text" -> "langchain_core" [];
	"langchain_community.tools.azure_cognitive_services.utils" -> "urllib" [];
	"langchain_community.tools.azure_cognitive_services.image_analysis" -> "langchain_core" [];
	"langchain_community.tools.azure_cognitive_services.form_recognizer" -> "langchain_core" [];
	"langchain_community.tools.azure_ai_services.text_to_speech" -> "langchain_core" [];
	"langchain_community.tools.azure_ai_services.text_analytics_for_health" -> "langchain_core" [];
	"langchain_community.tools.azure_ai_services.speech_to_text" -> "langchain_core" [];
	"langchain_community.tools.azure_ai_services.utils" -> "urllib" [];
	"langchain_community.tools.azure_ai_services.image_analysis" -> "langchain_core" [];
	"langchain_community.tools.azure_ai_services.document_intelligence" -> "langchain_core" [];
	"langchain_community.tools.asknews.tool" -> "langchain_core" [];
	"langchain_community.utilities.asknews" -> "langchain_core" [];
	"langchain_community.tools.arxiv.tool" -> "langchain_core" [];
	"langchain_community.utilities.arxiv" -> "langchain_core" [];
	"langchain_community.tools.ainetwork.value" -> "langchain_core" [];
	"langchain_community.tools.ainetwork.base" -> "langchain_core" [];
	"langchain_community.tools.ainetwork.transfer" -> "langchain_core" [];
	"langchain_community.tools.ainetwork.rule" -> "langchain_core" [];
	"langchain_community.tools.ainetwork.owner" -> "langchain_core" [];
	"langchain_community.tools.ainetwork.app" -> "langchain_core" [];
	"langchain_core.tools.convert" -> "langchain_core" [];
	"langchain_core.tools.structured" -> "collections" [];
	"langchain_core.tools.structured" -> "langchain_core" [];
	"langchain_community.document_transformers.markdownify" -> "langchain_core" [];
	"langchain_community.document_transformers.long_context_reorder" -> "langchain_core" [];
	"langchain_community.document_transformers.html2text" -> "langchain_core" [];
	"langchain_community.document_transformers.google_translate" -> "langchain_core" [];
	"langchain_community.document_transformers.google_translate" -> "google" [];
	"langchain_community.document_transformers.embeddings_redundant_filter" -> "langchain_core" [];
	"langchain_community.document_transformers.doctran_text_translate" -> "langchain_core" [];
	"langchain_community.document_transformers.doctran_text_qa" -> "langchain_core" [];
	"langchain_community.document_transformers.doctran_text_extract" -> "langchain_core" [];
	"langchain_community.document_transformers.beautiful_soup_transformer" -> "langchain_core" [];
	"langchain_community.document_loaders.yuque" -> "langchain_core" [];
	"langchain_community.document_loaders.youtube" -> "urllib" [];
	"langchain_community.document_loaders.youtube" -> "langchain_core" [];
	"langchain_community.document_loaders.youtube" -> "google" [];
	"langchain_community.document_loaders.word_document" -> "urllib" [];
	"langchain_community.document_loaders.word_document" -> "langchain_core" [];
	"langchain_community.document_loaders.wikipedia" -> "langchain_core" [];
	"langchain_community.document_loaders.whatsapp_chat" -> "langchain_core" [];
	"langchain_community.document_loaders.weather" -> "langchain_core" [];
	"langchain_community.document_loaders.vsdx" -> "urllib" [];
	"langchain_community.document_loaders.parsers.pdf" -> "urllib" [];
	"langchain_community.document_loaders.parsers.pdf" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.language.language_parser" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.images" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.html.bs4" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.grobid" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.docai" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.docai" -> "google" [];
	"langchain_community.document_loaders.parsers.doc_intelligence" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.audio" -> "langchain_core" [];
	"langchain_community.document_loaders.url_selenium" -> "langchain_core" [];
	"langchain_community.document_loaders.url_playwright" -> "langchain_core" [];
	"langchain_community.document_loaders.url" -> "langchain_core" [];
	"langchain_community.document_loaders.unstructured" -> "langchain_core" [];
	"langchain_community.document_loaders.twitter" -> "langchain_core" [];
	"langchain_community.document_loaders.trello" -> "langchain_core" [];
	"langchain_community.document_loaders.toml" -> "langchain_core" [];
	"langchain_community.document_loaders.toml" -> "toml" [];
	"langchain_community.document_loaders.tomarkdown" -> "langchain_core" [];
	"langchain_community.document_loaders.tidb" -> "langchain_core" [];
	"langchain_community.document_loaders.text" -> "langchain_core" [];
	"langchain_community.document_loaders.helpers" -> "concurrent" [];
	"langchain_community.document_loaders.tensorflow_datasets" -> "langchain_core" [];
	"langchain_community.utilities.tensorflow_datasets" -> "langchain_core" [];
	"langchain_community.document_loaders.tencent_cos_file" -> "langchain_core" [];
	"langchain_community.document_loaders.tencent_cos_directory" -> "langchain_core" [];
	"langchain_community.document_loaders.telegram" -> "langchain_core" [];
	"langchain_community.document_loaders.surrealdb" -> "langchain_core" [];
	"langchain_community.document_loaders.stripe" -> "urllib" [];
	"langchain_community.document_loaders.stripe" -> "langchain_core" [];
	"langchain_community.document_loaders.srt" -> "langchain_core" [];
	"langchain_community.document_loaders.spreedly" -> "urllib" [];
	"langchain_community.document_loaders.spreedly" -> "langchain_core" [];
	"langchain_community.document_loaders.spider" -> "langchain_core" [];
	"langchain_community.document_loaders.snowflake_loader" -> "langchain_core" [];
	"langchain_community.document_loaders.slack_directory" -> "langchain_core" [];
	"langchain_community.document_loaders.sitemap" -> "urllib" [];
	"langchain_community.document_loaders.sitemap" -> "langchain_core" [];
	"langchain_community.document_loaders.sharepoint" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.txt" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.msword" -> "langchain_core" [];
	"langchain_community.document_loaders.parsers.generic" -> "langchain_core" [];
	"langchain_community.document_loaders.blob_loaders.file_system" -> "tqdm" [];
	"pydantic_settings.sources.types" -> "collections" [];
	"pydantic_settings.sources.types" -> "pydantic" [];
	"pydantic_settings.sources.providers.yaml" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.toml" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.toml" -> "toml" [];
	"pydantic_settings.sources.providers.secrets" -> "pydantic" [];
	"pydantic_settings.sources.providers.secrets" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.pyproject" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.json" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.gcp" -> "collections" [];
	"pydantic_settings.sources.providers.gcp" -> "google" [];
	"pydantic_settings.sources.providers.gcp" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.env" -> "collections" [];
	"pydantic_settings.sources.providers.env" -> "pydantic" [];
	"pydantic_settings.sources.providers.env" -> "typing_inspection" [];
	"pydantic_settings.sources.providers.env" -> "pydantic_settings" [];
	"pydantic_settings.sources.utils" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.dotenv" -> "collections" [];
	"pydantic_settings.sources.providers.dotenv" -> "typing_inspection" [];
	"pydantic_settings.sources.providers.dotenv" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.cli" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.azure" -> "collections" [];
	"pydantic_settings.sources.providers.azure" -> "pydantic_settings" [];
	"pydantic_settings.sources.providers.aws" -> "collections" [];
	"pydantic_settings.sources.providers.aws" -> "pydantic_settings" [];
	"pydantic_settings.sources.base" -> "typing_inspection" [];
	"pydantic_settings.sources.base" -> "pydantic_settings" [];
	"langchain_community.document_loaders.scrapingant" -> "langchain_core" [];
	"langchain_community.document_loaders.scrapfly" -> "langchain_core" [];
	"langchain_community.document_loaders.s3_directory" -> "langchain_core" [];
	"langchain_community.document_loaders.rss" -> "langchain_core" [];
	"langchain_community.document_loaders.rocksetdb" -> "langchain_core" [];
	"langchain_community.document_loaders.roam" -> "langchain_core" [];
	"langchain_community.document_loaders.reddit" -> "langchain_core" [];
	"langchain_community.document_loaders.recursive_url_loader" -> "langchain_core" [];
	"langchain_core.utils.html" -> "collections" [];
	"langchain_core.utils.html" -> "urllib" [];
	"langchain_community.document_loaders.readthedocs" -> "langchain_core" [];
	"langchain_community.document_loaders.pyspark_dataframe" -> "langchain_core" [];
	"langchain_community.document_loaders.pubmed" -> "langchain_core" [];
	"langchain_community.document_loaders.psychic" -> "langchain_core" [];
	"langchain_community.document_loaders.polars_dataframe" -> "langchain_core" [];
	"langchain_community.document_loaders.pebblo" -> "importlib" [];
	"langchain_community.document_loaders.pebblo" -> "langchain_core" [];
	"langchain_community.utilities.pebblo" -> "langchain_core" [];
	"langchain_community.utilities.pebblo" -> "langchain_community" [];
	"langchain_community.document_loaders.pdf" -> "urllib" [];
	"langchain_community.document_loaders.pdf" -> "langchain_core" [];
	"langchain_community.document_loaders.oracleai" -> "html" [];
	"langchain_community.document_loaders.oracleai" -> "langchain_core" [];
	"langchain_community.document_loaders.oracleadb_loader" -> "langchain_core" [];
	"langchain_community.document_loaders.open_city_data" -> "langchain_core" [];
	"langchain_community.document_loaders.onedrive_file" -> "langchain_core" [];
	"langchain_community.document_loaders.obsidian" -> "langchain_core" [];
	"langchain_community.document_loaders.obs_file" -> "langchain_core" [];
	"langchain_community.document_loaders.obs_directory" -> "langchain_core" [];
	"langchain_community.document_loaders.notiondb" -> "langchain_core" [];
	"langchain_community.document_loaders.notion" -> "langchain_core" [];
	"langchain_community.document_loaders.notebook" -> "langchain_core" [];
	"langchain_community.document_loaders.news" -> "langchain_core" [];
	"langchain_community.document_loaders.needle" -> "langchain_core" [];
	"langchain_community.document_loaders.mongodb" -> "langchain_core" [];
	"langchain_community.document_loaders.modern_treasury" -> "urllib" [];
	"langchain_community.document_loaders.modern_treasury" -> "langchain_core" [];
	"langchain_community.document_loaders.mhtml" -> "langchain_core" [];
	"langchain_community.document_loaders.merge" -> "langchain_core" [];
	"langchain_community.document_loaders.mediawikidump" -> "langchain_core" [];
	"langchain_community.document_loaders.max_compute" -> "langchain_core" [];
	"langchain_community.utilities.max_compute" -> "langchain_core" [];
	"langchain_community.document_loaders.mastodon" -> "langchain_core" [];
	"langchain_community.document_loaders.llmsherpa" -> "urllib" [];
	"langchain_community.document_loaders.llmsherpa" -> "langchain_core" [];
	"langchain_community.document_loaders.larksuite" -> "urllib" [];
	"langchain_community.document_loaders.larksuite" -> "langchain_core" [];
	"langchain_community.document_loaders.lakefs" -> "urllib" [];
	"langchain_community.document_loaders.lakefs" -> "langchain_core" [];
	"langchain_community.document_loaders.kinetica_loader" -> "langchain_core" [];
	"langchain_community.document_loaders.json_loader" -> "langchain_core" [];
	"langchain_community.document_loaders.joplin" -> "langchain_core" [];
	"langchain_community.document_loaders.iugu" -> "urllib" [];
	"langchain_community.document_loaders.iugu" -> "langchain_core" [];
	"langchain_community.document_loaders.imsdb" -> "langchain_core" [];
	"langchain_community.document_loaders.image_captions" -> "langchain_core" [];
	"langchain_community.document_loaders.ifixit" -> "langchain_core" [];
	"langchain_community.document_loaders.hugging_face_model" -> "langchain_core" [];
	"langchain_community.document_loaders.hugging_face_dataset" -> "langchain_core" [];
	"datasets.utils.tqdm" -> "tqdm" [];
	"datasets.utils.tqdm" -> "datasets" [];
	"datasets.utils._dataset_viewer" -> "huggingface_hub" [];
	"datasets.utils.file_utils" -> "collections" [];
	"datasets.utils.file_utils" -> "unittest" [];
	"datasets.utils.file_utils" -> "urllib" [];
	"datasets.utils.file_utils" -> "xml" [];
	"datasets.utils.file_utils" -> "aiohttp" [];
	"datasets.utils.file_utils" -> "pyarrow" [];
	"datasets.utils.track" -> "collections" [];
	"datasets.table" -> "collections" [];
	"datasets.features.features" -> "collections" [];
	"datasets.features.features" -> "PIL" [];
	"datasets.features.image" -> "PIL" [];
	"datasets.utils.py_utils" -> "collections" [];
	"datasets.utils.py_utils" -> "urllib" [];
	"datasets.utils.py_utils" -> "tqdm" [];
	"datasets.parallel.parallel" -> "tqdm" [];
	"datasets.parallel.parallel" -> "datasets" [];
	"joblib._dask" -> "concurrent" [];
	"joblib._dask" -> "tornado" [];
	"joblib.externals.loky" -> "concurrent" [];
	"joblib.externals.loky.process_executor" -> "concurrent" [];
	"joblib.externals.loky.backend.reduction" -> "joblib" [];
	"joblib.externals.loky.backend.process" -> "multiprocessing" [];
	"joblib.externals.loky._base" -> "concurrent" [];
	"numpy.core.multiarray" -> "numpy" [];
	"joblib._parallel_backends" -> "multiprocessing" [];
	"joblib.pool" -> "multiprocessing" [];
	"multiprocess.connection" -> "xmlrpc" [];
	"datasets.utils.info_utils" -> "huggingface_hub" [];
	"datasets.utils.metadata" -> "datasets" [];
	"datasets.packaged_modules" -> "huggingface_hub" [];
	"datasets.download.streaming_download_manager" -> "collections" [];
	"datasets.data_files" -> "fsspec" [];
	"datasets.iterable_dataset" -> "multiprocessing" [];
	"datasets.iterable_dataset" -> "fsspec" [];
	"datasets.packaged_modules.spark.spark" -> "collections" [];
	"datasets.arrow_writer" -> "collections" [];
	"datasets.arrow_writer" -> "PIL" [];
	"datasets.keyhash" -> "huggingface_hub" [];
	"datasets.formatting.jax_formatter" -> "collections" [];
	"datasets.formatting.jax_formatter" -> "PIL" [];
	"datasets.formatting.tf_formatter" -> "collections" [];
	"datasets.formatting.tf_formatter" -> "PIL" [];
	"datasets.formatting.torch_formatter" -> "collections" [];
	"datasets.formatting.torch_formatter" -> "PIL" [];
	"datasets.formatting.np_formatter" -> "collections" [];
	"datasets.formatting.np_formatter" -> "PIL" [];
	"datasets.formatting.formatting" -> "collections" [];
	"datasets.formatting.formatting" -> "datasets" [];
	"datasets.inspect" -> "collections" [];
	"datasets.dataset_dict" -> "collections" [];
	"datasets.io.parquet" -> "pyarrow" [];
	"datasets.builder" -> "collections" [];
	"datasets.builder" -> "unittest" [];
	"datasets.search" -> "importlib" [];
	"datasets.search" -> "concurrent" [];
	"langchain_community.document_loaders.html_bs" -> "importlib" [];
	"langchain_community.document_loaders.html_bs" -> "langchain_core" [];
	"langchain_community.document_loaders.hn" -> "langchain_core" [];
	"langchain_community.document_loaders.gutenberg" -> "langchain_core" [];
	"langchain_community.document_loaders.gutenberg" -> "urllib" [];
	"langchain_community.document_loaders.googledrive" -> "langchain_core" [];
	"langchain_community.document_loaders.googledrive" -> "google" [];
	"langchain_community.document_loaders.google_speech_to_text" -> "langchain_core" [];
	"langchain_community.document_loaders.glue_catalog" -> "langchain_core" [];
	"langchain_community.document_loaders.github" -> "langchain_core" [];
	"langchain_community.document_loaders.gitbook" -> "urllib" [];
	"langchain_community.document_loaders.gitbook" -> "langchain_core" [];
	"langchain_community.document_loaders.git" -> "langchain_core" [];
	"git" -> "gitdb" [];
	"git.util" -> "urllib" [];
	"git.util" -> "gitdb" [];
	"git.repo.base" -> "git" [];
	"git.refs.symbolic" -> "gitdb" [];
	"git.refs.symbolic" -> "git" [];
	"git.refs.log" -> "git" [];
	"git.objects.util" -> "git" [];
	"git.objects.tree" -> "git" [];
	"git.objects.tag" -> "git" [];
	"git.objects.commit" -> "git" [];
	"git.objects.base" -> "gitdb" [];
	"git.objects.base" -> "git" [];
	"git.refs.reference" -> "git" [];
	"git.repo.fun" -> "gitdb" [];
	"git.repo.fun" -> "git" [];
	"git.refs.tag" -> "git" [];
	"gitdb.db.loose" -> "gitdb" [];
	"gitdb.db.git" -> "gitdb" [];
	"gitdb.db.pack" -> "gitdb" [];
	"gitdb.db.mem" -> "gitdb" [];
	"gitdb.db.base" -> "gitdb" [];
	"git.index.util" -> "git" [];
	"git.index.typ" -> "git" [];
	"git.index.base" -> "gitdb" [];
	"git.index.base" -> "git" [];
	"git.index.fun" -> "gitdb" [];
	"git.index.fun" -> "git" [];
	"git.db" -> "gitdb" [];
	"git.refs.remote" -> "git" [];
	"git.refs.head" -> "git" [];
	"git.exc" -> "gitdb" [];
	"langchain_community.document_loaders.geodataframe" -> "langchain_core" [];
	"langchain_community.document_loaders.gcs_file" -> "langchain_core" [];
	"langchain_community.document_loaders.gcs_file" -> "google" [];
	"langchain_community.document_loaders.gcs_directory" -> "langchain_core" [];
	"langchain_community.document_loaders.gcs_directory" -> "google" [];
	"langchain_community.document_loaders.firecrawl" -> "langchain_core" [];
	"langchain_community.document_loaders.figma" -> "urllib" [];
	"langchain_community.document_loaders.figma" -> "langchain_core" [];
	"langchain_community.document_loaders.fauna" -> "langchain_core" [];
	"langchain_community.document_loaders.facebook_chat" -> "langchain_core" [];
	"langchain_community.document_loaders.evernote" -> "langchain_core" [];
	"langchain_community.document_loaders.etherscan" -> "langchain_core" [];
	"langchain_community.document_loaders.email" -> "langchain_core" [];
	"langchain_community.document_loaders.duckdb_loader" -> "langchain_core" [];
	"langchain_community.document_loaders.dropbox" -> "langchain_core" [];
	"langchain_community.document_loaders.docugami" -> "langchain_core" [];
	"langchain_community.document_loaders.doc_intelligence" -> "langchain_core" [];
	"langchain_community.document_loaders.discord" -> "langchain_core" [];
	"langchain_community.document_loaders.directory" -> "langchain_core" [];
	"langchain_community.document_loaders.diffbot" -> "langchain_core" [];
	"langchain_community.document_loaders.dedoc" -> "langchain_core" [];
	"langchain_community.document_loaders.dataframe" -> "langchain_core" [];
	"langchain_community.document_loaders.datadog_logs" -> "langchain_core" [];
	"langchain_community.document_loaders.cube_semantic" -> "langchain_core" [];
	"langchain_community.document_loaders.csv_loader" -> "langchain_core" [];
	"langchain_community.document_loaders.couchbase" -> "langchain_core" [];
	"langchain_community.document_loaders.conllu" -> "langchain_core" [];
	"langchain_community.document_loaders.confluence" -> "langchain_core" [];
	"langchain_community.document_loaders.concurrent" -> "concurrent" [];
	"langchain_community.document_loaders.concurrent" -> "langchain_core" [];
	"langchain_community.document_loaders.generic" -> "langchain_core" [];
	"langchain_community.document_loaders.college_confidential" -> "langchain_core" [];
	"langchain_community.document_loaders.chromium" -> "langchain_core" [];
	"langchain_community.document_loaders.chm" -> "urllib" [];
	"langchain_community.document_loaders.chatgpt" -> "langchain_core" [];
	"langchain_community.document_loaders.cassandra" -> "langchain_core" [];
	"langchain_community.document_loaders.browserless" -> "langchain_core" [];
	"langchain_community.document_loaders.browserbase" -> "langchain_core" [];
	"langchain_community.document_loaders.brave_search" -> "langchain_core" [];
	"langchain_community.document_loaders.blockchain" -> "langchain_core" [];
	"langchain_community.document_loaders.blob_loaders" -> "langchain_core" [];
	"yt_dlp" -> "ctypes" [];
	"yt_dlp" -> "urllib" [];
	"urllib3.contrib.securetransport" -> "urllib" [];
	"urllib3.contrib.ntlmpool" -> "urllib" [];
	"urllib3.contrib.ntlmpool" -> "urllib3.packages.six.moves" [];
	"requests.help" -> "urllib" [];
	"yt_dlp.compat.urllib.request" -> "urllib" [];
	"yt_dlp.networking._curlcffi" -> "urllib" [];
	"yt_dlp.networking._curlcffi" -> "yt_dlp" [];
	"yt_dlp.dependencies" -> "websocket" [];
	"yt_dlp.dependencies" -> "urllib" [];
	"yt_dlp.networking.exceptions" -> "yt_dlp" [];
	"yt_dlp.networking._helper" -> "urllib" [];
	"yt_dlp.networking._helper" -> "yt_dlp" [];
	"yt_dlp.networking._helper" -> "collections" [];
	"yt_dlp.networking._websockets" -> "yt_dlp" [];
	"yt_dlp.networking._requests" -> "http" [];
	"yt_dlp.networking._requests" -> "yt_dlp" [];
	"yt_dlp.networking._requests" -> "requests" [];
	"yt_dlp.networking._urllib" -> "http" [];
	"yt_dlp.networking._urllib" -> "urllib" [];
	"yt_dlp.networking._urllib" -> "yt_dlp" [];
	"yt_dlp.networking.common" -> "urllib" [];
	"yt_dlp.networking.common" -> "collections" [];
	"yt_dlp.networking.common" -> "email" [];
	"yt_dlp.networking.common" -> "yt_dlp" [];
	"yt_dlp.utils._legacy" -> "urllib" [];
	"yt_dlp.utils._legacy" -> "yt_dlp" [];
	"yt_dlp.utils.traversal" -> "http" [];
	"yt_dlp.compat._deprecated" -> "yt_dlp" [];
	"yt_dlp.compat._legacy" -> "html" [];
	"yt_dlp.compat._legacy" -> "http" [];
	"yt_dlp.compat._legacy" -> "urllib" [];
	"yt_dlp.compat._legacy" -> "yt_dlp" [];
	"yt_dlp.extractor.generic" -> "urllib" [];
	"yt_dlp.extractor.generic" -> "yt_dlp" [];
	"yt_dlp.extractor.youtube._video" -> "urllib" [];
	"yt_dlp.extractor.youtube._video" -> "yt_dlp" [];
	"yt_dlp.extractor.openload" -> "urllib" [];
	"yt_dlp.extractor.openload" -> "yt_dlp" [];
	"yt_dlp.extractor.youtube._tab" -> "urllib" [];
	"yt_dlp.extractor.youtube._tab" -> "yt_dlp" [];
	"yt_dlp.extractor.youtube._search" -> "urllib" [];
	"yt_dlp.extractor.youtube._search" -> "yt_dlp" [];
	"yt_dlp.extractor.youtube._redirect" -> "urllib" [];
	"yt_dlp.extractor.youtube._redirect" -> "yt_dlp" [];
	"yt_dlp.extractor.youtube._notifications" -> "yt_dlp" [];
	"yt_dlp.extractor.youtube._mistakes" -> "yt_dlp" [];
	"yt_dlp.extractor.youtube._clip" -> "yt_dlp" [];
	"yt_dlp.extractor.youtube._base" -> "urllib" [];
	"yt_dlp.extractor.youtube._base" -> "yt_dlp" [];
	"yt_dlp.extractor.commonprotocols" -> "urllib" [];
	"yt_dlp.extractor.common" -> "http" [];
	"yt_dlp.extractor.common" -> "urllib" [];
	"yt_dlp.extractor.common" -> "yt_dlp" [];
	"yt_dlp.downloader.hls" -> "urllib" [];
	"yt_dlp.downloader.fragment" -> "concurrent" [];
	"yt_dlp.downloader.fragment" -> "yt_dlp" [];
	"yt_dlp.downloader.http" -> "yt_dlp" [];
	"yt_dlp.downloader.common" -> "yt_dlp" [];
	"yt_dlp.downloader.bunnycdn" -> "yt_dlp" [];
	"yt_dlp.downloader.youtube_live_chat" -> "yt_dlp" [];
	"yt_dlp.downloader.websocket" -> "yt_dlp" [];
	"yt_dlp.downloader.rtsp" -> "yt_dlp" [];
	"yt_dlp.downloader.rtmp" -> "yt_dlp" [];
	"yt_dlp.downloader.niconico" -> "yt_dlp" [];
	"yt_dlp.downloader.mhtml" -> "yt_dlp" [];
	"yt_dlp.downloader.ism" -> "yt_dlp" [];
	"yt_dlp.downloader.dash" -> "urllib" [];
	"yt_dlp.downloader.dash" -> "yt_dlp" [];
	"yt_dlp.downloader.f4m" -> "urllib" [];
	"yt_dlp.downloader.f4m" -> "yt_dlp" [];
	"yt_dlp.YoutubeDL" -> "http" [];
	"yt_dlp.postprocessor.ffmpeg" -> "yt_dlp" [];
	"yt_dlp.postprocessor.common" -> "yt_dlp" [];
	"yt_dlp.cache" -> "urllib" [];
	"yt_dlp.utils._utils" -> "email" [];
	"yt_dlp.utils._utils" -> "html" [];
	"yt_dlp.utils._utils" -> "urllib" [];
	"yt_dlp.utils._utils" -> "yt_dlp" [];
	"yt_dlp.utils.networking" -> "urllib" [];
	"yt_dlp.postprocessor.xattrpp" -> "yt_dlp" [];
	"yt_dlp.postprocessor.sponsorblock" -> "urllib" [];
	"yt_dlp.postprocessor.sponskrub" -> "yt_dlp" [];
	"yt_dlp.postprocessor.movefilesafterdownload" -> "yt_dlp" [];
	"yt_dlp.postprocessor.modify_chapters" -> "yt_dlp" [];
	"yt_dlp.postprocessor.metadataparser" -> "yt_dlp" [];
	"yt_dlp.postprocessor.exec" -> "yt_dlp" [];
	"yt_dlp.postprocessor.embedthumbnail" -> "yt_dlp" [];
	"yt_dlp.networking.impersonate" -> "yt_dlp" [];
	"yt_dlp.extractor.adobepass" -> "urllib" [];
	"yt_dlp.extractor.adobepass" -> "yt_dlp" [];
	"yt_dlp.extractor.extractors" -> "yt_dlp" [];
	"yt_dlp.extractor.lazy_extractors" -> "yt_dlp" [];
	"yt_dlp.extractor.zype" -> "yt_dlp" [];
	"yt_dlp.extractor.zoom" -> "yt_dlp" [];
	"yt_dlp.extractor.zingmp3" -> "urllib" [];
	"yt_dlp.extractor.zingmp3" -> "yt_dlp" [];
	"yt_dlp.extractor.zhihu" -> "yt_dlp" [];
	"yt_dlp.extractor.zetland" -> "yt_dlp" [];
	"yt_dlp.extractor.zenporn" -> "yt_dlp" [];
	"yt_dlp.extractor.zeenews" -> "yt_dlp" [];
	"yt_dlp.extractor.zee5" -> "yt_dlp" [];
	"yt_dlp.extractor.zdf" -> "yt_dlp" [];
	"yt_dlp.extractor.zattoo" -> "yt_dlp" [];
	"yt_dlp.extractor.zapiks" -> "yt_dlp" [];
	"yt_dlp.extractor.zaiko" -> "yt_dlp" [];
	"yt_dlp.extractor.youporn" -> "yt_dlp" [];
	"yt_dlp.extractor.younow" -> "yt_dlp" [];
	"yt_dlp.extractor.youku" -> "yt_dlp" [];
	"yt_dlp.extractor.youjizz" -> "yt_dlp" [];
	"yt_dlp.extractor.yle_areena" -> "yt_dlp" [];
	"yt_dlp.extractor.yappy" -> "yt_dlp" [];
	"yt_dlp.extractor.yapfiles" -> "yt_dlp" [];
	"yt_dlp.extractor.yandexvideo" -> "yt_dlp" [];
	"yt_dlp.extractor.yandexmusic" -> "yt_dlp" [];
	"yt_dlp.extractor.yandexdisk" -> "yt_dlp" [];
	"yt_dlp.extractor.yahoo" -> "urllib" [];
	"yt_dlp.extractor.yahoo" -> "yt_dlp" [];
	"yt_dlp.extractor.xxxymovies" -> "yt_dlp" [];
	"yt_dlp.extractor.xvideos" -> "urllib" [];
	"yt_dlp.extractor.xvideos" -> "yt_dlp" [];
	"yt_dlp.extractor.xstream" -> "yt_dlp" [];
	"yt_dlp.extractor.xnxx" -> "yt_dlp" [];
	"yt_dlp.extractor.xminus" -> "yt_dlp" [];
	"yt_dlp.extractor.xinpianchang" -> "yt_dlp" [];
	"yt_dlp.extractor.ximalaya" -> "yt_dlp" [];
	"yt_dlp.extractor.xiaohongshu" -> "yt_dlp" [];
	"yt_dlp.extractor.xhamster" -> "yt_dlp" [];
	"yt_dlp.extractor.xboxclips" -> "yt_dlp" [];
	"yt_dlp.extractor.xanimu" -> "yt_dlp" [];
	"yt_dlp.extractor.wykop" -> "yt_dlp" [];
	"yt_dlp.extractor.wwe" -> "yt_dlp" [];
	"yt_dlp.extractor.wsj" -> "yt_dlp" [];
	"yt_dlp.extractor.wrestleuniverse" -> "yt_dlp" [];
	"yt_dlp.extractor.wppilot" -> "yt_dlp" [];
	"yt_dlp.extractor.wordpress" -> "yt_dlp" [];
	"yt_dlp.extractor.wistia" -> "urllib" [];
	"yt_dlp.extractor.wistia" -> "yt_dlp" [];
	"yt_dlp.extractor.wimtv" -> "yt_dlp" [];
	"yt_dlp.extractor.wimbledon" -> "yt_dlp" [];
	"yt_dlp.extractor.wikimedia" -> "yt_dlp" [];
	"yt_dlp.extractor.whyp" -> "yt_dlp" [];
	"yt_dlp.extractor.whowatch" -> "yt_dlp" [];
	"yt_dlp.extractor.weyyak" -> "yt_dlp" [];
	"yt_dlp.extractor.wevidi" -> "yt_dlp" [];
	"yt_dlp.extractor.weverse" -> "urllib" [];
	"yt_dlp.extractor.weverse" -> "yt_dlp" [];
	"yt_dlp.extractor.weibo" -> "urllib" [];
	"yt_dlp.extractor.weibo" -> "yt_dlp" [];
	"yt_dlp.extractor.webofstories" -> "yt_dlp" [];
	"yt_dlp.extractor.webcaster" -> "yt_dlp" [];
	"yt_dlp.extractor.wdr" -> "urllib" [];
	"yt_dlp.extractor.wdr" -> "yt_dlp" [];
	"yt_dlp.extractor.wat" -> "yt_dlp" [];
	"yt_dlp.extractor.washingtonpost" -> "yt_dlp" [];
	"yt_dlp.extractor.walla" -> "yt_dlp" [];
	"yt_dlp.extractor.vvvvid" -> "yt_dlp" [];
	"yt_dlp.extractor.vuclip" -> "urllib" [];
	"yt_dlp.extractor.vuclip" -> "yt_dlp" [];
	"yt_dlp.extractor.vtv" -> "yt_dlp" [];
	"yt_dlp.extractor.vtm" -> "yt_dlp" [];
	"yt_dlp.extractor.vrt" -> "urllib" [];
	"yt_dlp.extractor.vrt" -> "yt_dlp" [];
	"yt_dlp.extractor.vrsquare" -> "yt_dlp" [];
	"yt_dlp.extractor.voxmedia" -> "urllib" [];
	"yt_dlp.extractor.voxmedia" -> "yt_dlp" [];
	"yt_dlp.extractor.voicy" -> "yt_dlp" [];
	"yt_dlp.extractor.vodplatform" -> "yt_dlp" [];
	"yt_dlp.extractor.vocaroo" -> "yt_dlp" [];
	"yt_dlp.extractor.vk" -> "yt_dlp" [];
	"yt_dlp.extractor.viu" -> "urllib" [];
	"yt_dlp.extractor.viu" -> "yt_dlp" [];
	"yt_dlp.extractor.viqeo" -> "yt_dlp" [];
	"yt_dlp.extractor.viously" -> "yt_dlp" [];
	"yt_dlp.extractor.vimeo" -> "urllib" [];
	"yt_dlp.extractor.vimeo" -> "yt_dlp" [];
	"yt_dlp.extractor.viidea" -> "urllib" [];
	"yt_dlp.extractor.viidea" -> "yt_dlp" [];
	"yt_dlp.extractor.viewlift" -> "yt_dlp" [];
	"yt_dlp.extractor.vidyard" -> "yt_dlp" [];
	"yt_dlp.extractor.vidly" -> "yt_dlp" [];
	"yt_dlp.extractor.vidlii" -> "yt_dlp" [];
	"yt_dlp.extractor.vidio" -> "yt_dlp" [];
	"yt_dlp.extractor.vidflex" -> "yt_dlp" [];
	"yt_dlp.extractor.videopress" -> "yt_dlp" [];
	"yt_dlp.extractor.videomore" -> "yt_dlp" [];
	"yt_dlp.extractor.videoken" -> "urllib" [];
	"yt_dlp.extractor.videoken" -> "yt_dlp" [];
	"yt_dlp.extractor.videofyme" -> "yt_dlp" [];
	"yt_dlp.extractor.videocampus_sachsen" -> "yt_dlp" [];
	"yt_dlp.extractor.videa" -> "yt_dlp" [];
	"yt_dlp.extractor.viddler" -> "yt_dlp" [];
	"yt_dlp.extractor.vice" -> "yt_dlp" [];
	"yt_dlp.extractor.vgtv" -> "yt_dlp" [];
	"yt_dlp.extractor.vevo" -> "yt_dlp" [];
	"yt_dlp.extractor.vesti" -> "yt_dlp" [];
	"yt_dlp.extractor.veo" -> "yt_dlp" [];
	"yt_dlp.extractor.vbox7" -> "yt_dlp" [];
	"yt_dlp.extractor.varzesh3" -> "yt_dlp" [];
	"yt_dlp.extractor.utreon" -> "yt_dlp" [];
	"yt_dlp.extractor.ustudio" -> "yt_dlp" [];
	"yt_dlp.extractor.ustream" -> "urllib" [];
	"yt_dlp.extractor.ustream" -> "yt_dlp" [];
	"yt_dlp.extractor.usatoday" -> "yt_dlp" [];
	"yt_dlp.extractor.urplay" -> "yt_dlp" [];
	"yt_dlp.extractor.urort" -> "urllib" [];
	"yt_dlp.extractor.urort" -> "yt_dlp" [];
	"yt_dlp.extractor.uplynk" -> "yt_dlp" [];
	"yt_dlp.extractor.uol" -> "urllib" [];
	"yt_dlp.extractor.uol" -> "yt_dlp" [];
	"yt_dlp.extractor.unsupported" -> "yt_dlp" [];
	"yt_dlp.extractor.unistra" -> "yt_dlp" [];
	"yt_dlp.extractor.umg" -> "yt_dlp" [];
	"yt_dlp.extractor.uliza" -> "yt_dlp" [];
	"yt_dlp.extractor.ukcolumn" -> "yt_dlp" [];
	"yt_dlp.extractor.imggaming" -> "yt_dlp" [];
	"yt_dlp.extractor.udn" -> "urllib" [];
	"yt_dlp.extractor.udn" -> "yt_dlp" [];
	"yt_dlp.extractor.udemy" -> "urllib" [];
	"yt_dlp.extractor.udemy" -> "yt_dlp" [];
	"yt_dlp.extractor.txxx" -> "yt_dlp" [];
	"yt_dlp.extractor.twitter" -> "urllib" [];
	"yt_dlp.extractor.twitter" -> "yt_dlp" [];
	"yt_dlp.extractor.twitch" -> "urllib" [];
	"yt_dlp.extractor.twitch" -> "yt_dlp" [];
	"yt_dlp.extractor.twitcasting" -> "yt_dlp" [];
	"yt_dlp.extractor.twentythreevideo" -> "yt_dlp" [];
	"yt_dlp.extractor.twentymin" -> "yt_dlp" [];
	"yt_dlp.extractor.tweakers" -> "yt_dlp" [];
	"yt_dlp.extractor.tvw" -> "yt_dlp" [];
	"yt_dlp.extractor.tvplayer" -> "yt_dlp" [];
	"yt_dlp.extractor.tvplay" -> "urllib" [];
	"yt_dlp.extractor.tvplay" -> "yt_dlp" [];
	"yt_dlp.extractor.tvp" -> "yt_dlp" [];
	"yt_dlp.extractor.tvopengr" -> "yt_dlp" [];
	"yt_dlp.extractor.tvnoe" -> "yt_dlp" [];
	"yt_dlp.extractor.tvn24" -> "yt_dlp" [];
	"yt_dlp.extractor.tviplayer" -> "yt_dlp" [];
	"yt_dlp.extractor.tvigle" -> "yt_dlp" [];
	"yt_dlp.extractor.tver" -> "yt_dlp" [];
	"yt_dlp.extractor.tvc" -> "yt_dlp" [];
	"yt_dlp.extractor.tva" -> "yt_dlp" [];
	"yt_dlp.extractor.tv24ua" -> "yt_dlp" [];
	"yt_dlp.extractor.tv5unis" -> "yt_dlp" [];
	"yt_dlp.extractor.tv5mondeplus" -> "urllib" [];
	"yt_dlp.extractor.tv5mondeplus" -> "yt_dlp" [];
	"yt_dlp.extractor.tv4" -> "yt_dlp" [];
	"yt_dlp.extractor.tv2hu" -> "yt_dlp" [];
	"yt_dlp.extractor.tv2dk" -> "yt_dlp" [];
	"yt_dlp.extractor.tv2" -> "yt_dlp" [];
	"yt_dlp.extractor.tunein" -> "urllib" [];
	"yt_dlp.extractor.tunein" -> "yt_dlp" [];
	"yt_dlp.extractor.tumblr" -> "yt_dlp" [];
	"yt_dlp.extractor.tubitv" -> "yt_dlp" [];
	"yt_dlp.extractor.tubetugraz" -> "yt_dlp" [];
	"yt_dlp.extractor.tube8" -> "urllib" [];
	"yt_dlp.extractor.tube8" -> "yt_dlp" [];
	"yt_dlp.extractor.trutv" -> "yt_dlp" [];
	"yt_dlp.extractor.turner" -> "yt_dlp" [];
	"yt_dlp.extractor.truth" -> "yt_dlp" [];
	"yt_dlp.extractor.trueid" -> "yt_dlp" [];
	"yt_dlp.extractor.trtworld" -> "yt_dlp" [];
	"yt_dlp.extractor.trtcocuk" -> "yt_dlp" [];
	"yt_dlp.extractor.trovo" -> "yt_dlp" [];
	"yt_dlp.extractor.triller" -> "yt_dlp" [];
	"yt_dlp.extractor.toutv" -> "yt_dlp" [];
	"yt_dlp.extractor.toongoggles" -> "yt_dlp" [];
	"yt_dlp.extractor.tonline" -> "yt_dlp" [];
	"yt_dlp.extractor.toggo" -> "yt_dlp" [];
	"yt_dlp.extractor.toggle" -> "yt_dlp" [];
	"yt_dlp.extractor.tnaflix" -> "yt_dlp" [];
	"yt_dlp.extractor.tmz" -> "yt_dlp" [];
	"yt_dlp.extractor.tiktok" -> "urllib" [];
	"yt_dlp.extractor.tiktok" -> "yt_dlp" [];
	"yt_dlp.extractor.threespeak" -> "yt_dlp" [];
	"yt_dlp.extractor.threeqsdn" -> "yt_dlp" [];
	"yt_dlp.extractor.thisvid" -> "urllib" [];
	"yt_dlp.extractor.thisvid" -> "yt_dlp" [];
	"yt_dlp.extractor.thisoldhouse" -> "yt_dlp" [];
	"yt_dlp.extractor.theweatherchannel" -> "yt_dlp" [];
	"yt_dlp.extractor.thesun" -> "yt_dlp" [];
	"yt_dlp.extractor.theplatform" -> "yt_dlp" [];
	"yt_dlp.extractor.theintercept" -> "yt_dlp" [];
	"yt_dlp.extractor.theholetv" -> "yt_dlp" [];
	"yt_dlp.extractor.theguardian" -> "yt_dlp" [];
	"yt_dlp.extractor.tfo" -> "yt_dlp" [];
	"yt_dlp.extractor.tf1" -> "yt_dlp" [];
	"yt_dlp.extractor.testurl" -> "yt_dlp" [];
	"yt_dlp.extractor.tenplay" -> "yt_dlp" [];
	"yt_dlp.extractor.tennistv" -> "urllib" [];
	"yt_dlp.extractor.tennistv" -> "yt_dlp" [];
	"yt_dlp.extractor.tencent" -> "yt_dlp" [];
	"yt_dlp.extractor.tempo" -> "yt_dlp" [];
	"yt_dlp.extractor.telewebion" -> "yt_dlp" [];
	"yt_dlp.extractor.teletask" -> "yt_dlp" [];
	"yt_dlp.extractor.telequebec" -> "yt_dlp" [];
	"yt_dlp.extractor.telemundo" -> "yt_dlp" [];
	"yt_dlp.extractor.telemb" -> "yt_dlp" [];
	"yt_dlp.extractor.telegram" -> "yt_dlp" [];
	"yt_dlp.extractor.telegraaf" -> "yt_dlp" [];
	"yt_dlp.extractor.telecinco" -> "yt_dlp" [];
	"yt_dlp.extractor.telecaribe" -> "yt_dlp" [];
	"yt_dlp.extractor.tele13" -> "yt_dlp" [];
	"yt_dlp.extractor.tele5" -> "yt_dlp" [];
	"yt_dlp.extractor.ted" -> "yt_dlp" [];
	"yt_dlp.extractor.teamtreehouse" -> "yt_dlp" [];
	"yt_dlp.extractor.teamcoco" -> "yt_dlp" [];
	"yt_dlp.extractor.teachertube" -> "yt_dlp" [];
	"yt_dlp.extractor.teachable" -> "yt_dlp" [];
	"yt_dlp.extractor.tbsjp" -> "yt_dlp" [];
	"yt_dlp.extractor.tbs" -> "urllib" [];
	"yt_dlp.extractor.tbs" -> "yt_dlp" [];
	"yt_dlp.extractor.tass" -> "yt_dlp" [];
	"yt_dlp.extractor.taptap" -> "yt_dlp" [];
	"yt_dlp.extractor.tagesschau" -> "yt_dlp" [];
	"yt_dlp.extractor.syvdk" -> "yt_dlp" [];
	"yt_dlp.extractor.syfy" -> "yt_dlp" [];
	"yt_dlp.extractor.swearnet" -> "yt_dlp" [];
	"yt_dlp.extractor.svt" -> "yt_dlp" [];
	"yt_dlp.extractor.sverigesradio" -> "yt_dlp" [];
	"yt_dlp.extractor.sunporno" -> "yt_dlp" [];
	"yt_dlp.extractor.substack" -> "urllib" [];
	"yt_dlp.extractor.substack" -> "yt_dlp" [];
	"yt_dlp.extractor.subsplash" -> "yt_dlp" [];
	"yt_dlp.extractor.stv" -> "yt_dlp" [];
	"yt_dlp.extractor.stripchat" -> "yt_dlp" [];
	"yt_dlp.extractor.streetvoice" -> "yt_dlp" [];
	"yt_dlp.extractor.streamcz" -> "yt_dlp" [];
	"yt_dlp.extractor.streamable" -> "yt_dlp" [];
	"yt_dlp.extractor.streaks" -> "urllib" [];
	"yt_dlp.extractor.streaks" -> "yt_dlp" [];
	"yt_dlp.extractor.storyfire" -> "yt_dlp" [];
	"yt_dlp.extractor.stitcher" -> "yt_dlp" [];
	"yt_dlp.extractor.steam" -> "yt_dlp" [];
	"yt_dlp.extractor.startv" -> "yt_dlp" [];
	"yt_dlp.extractor.startrek" -> "yt_dlp" [];
	"yt_dlp.extractor.stanfordoc" -> "yt_dlp" [];
	"yt_dlp.extractor.stageplus" -> "yt_dlp" [];
	"yt_dlp.extractor.stacommu" -> "yt_dlp" [];
	"yt_dlp.extractor.srmediathek" -> "yt_dlp" [];
	"yt_dlp.extractor.srgssr" -> "yt_dlp" [];
	"yt_dlp.extractor.sproutvideo" -> "urllib" [];
	"yt_dlp.extractor.sproutvideo" -> "yt_dlp" [];
	"yt_dlp.extractor.sprout" -> "yt_dlp" [];
	"yt_dlp.extractor.springboardplatform" -> "yt_dlp" [];
	"yt_dlp.extractor.spreaker" -> "yt_dlp" [];
	"yt_dlp.extractor.spotify" -> "yt_dlp" [];
	"yt_dlp.extractor.sportdeutschland" -> "yt_dlp" [];
	"yt_dlp.extractor.sportbox" -> "yt_dlp" [];
	"yt_dlp.extractor.sport5" -> "yt_dlp" [];
	"yt_dlp.extractor.spankbang" -> "yt_dlp" [];
	"yt_dlp.extractor.sovietscloset" -> "yt_dlp" [];
	"yt_dlp.extractor.soundcloud" -> "yt_dlp" [];
	"yt_dlp.extractor.sonyliv" -> "yt_dlp" [];
	"yt_dlp.extractor.sohu" -> "urllib" [];
	"yt_dlp.extractor.sohu" -> "yt_dlp" [];
	"yt_dlp.extractor.softwhiteunderbelly" -> "yt_dlp" [];
	"yt_dlp.extractor.snotr" -> "yt_dlp" [];
	"yt_dlp.extractor.snapchat" -> "yt_dlp" [];
	"yt_dlp.extractor.smotrim" -> "yt_dlp" [];
	"yt_dlp.extractor.slideslive" -> "urllib" [];
	"yt_dlp.extractor.slideslive" -> "yt_dlp" [];
	"yt_dlp.extractor.slideshare" -> "urllib" [];
	"yt_dlp.extractor.slideshare" -> "yt_dlp" [];
	"yt_dlp.extractor.skynewsau" -> "yt_dlp" [];
	"yt_dlp.extractor.skynewsarabia" -> "yt_dlp" [];
	"yt_dlp.extractor.skyit" -> "urllib" [];
	"yt_dlp.extractor.skyit" -> "yt_dlp" [];
	"yt_dlp.extractor.sky" -> "yt_dlp" [];
	"yt_dlp.extractor.skeb" -> "yt_dlp" [];
	"yt_dlp.extractor.sixplay" -> "yt_dlp" [];
	"yt_dlp.extractor.sina" -> "yt_dlp" [];
	"yt_dlp.extractor.simplecast" -> "yt_dlp" [];
	"yt_dlp.extractor.showroomlive" -> "yt_dlp" [];
	"yt_dlp.extractor.shemaroome" -> "yt_dlp" [];
	"yt_dlp.extractor.sharepoint" -> "urllib" [];
	"yt_dlp.extractor.sharepoint" -> "yt_dlp" [];
	"yt_dlp.extractor.shahid" -> "yt_dlp" [];
	"yt_dlp.extractor.aws" -> "urllib" [];
	"yt_dlp.extractor.seznamzpravy" -> "urllib" [];
	"yt_dlp.extractor.seznamzpravy" -> "yt_dlp" [];
	"yt_dlp.extractor.sevenplus" -> "yt_dlp" [];
	"yt_dlp.extractor.servus" -> "yt_dlp" [];
	"yt_dlp.extractor.sendtonews" -> "yt_dlp" [];
	"yt_dlp.extractor.senategov" -> "urllib" [];
	"yt_dlp.extractor.senategov" -> "yt_dlp" [];
	"yt_dlp.extractor.sen" -> "yt_dlp" [];
	"yt_dlp.extractor.sejmpl" -> "yt_dlp" [];
	"yt_dlp.extractor.scte" -> "yt_dlp" [];
	"yt_dlp.extractor.scrolller" -> "yt_dlp" [];
	"yt_dlp.extractor.scrippsnetworks" -> "yt_dlp" [];
	"yt_dlp.extractor.screencastomatic" -> "yt_dlp" [];
	"yt_dlp.extractor.screencastify" -> "urllib" [];
	"yt_dlp.extractor.screencastify" -> "yt_dlp" [];
	"yt_dlp.extractor.screencast" -> "urllib" [];
	"yt_dlp.extractor.screencast" -> "yt_dlp" [];
	"yt_dlp.extractor.screen9" -> "yt_dlp" [];
	"yt_dlp.extractor.sbscokr" -> "yt_dlp" [];
	"yt_dlp.extractor.sbs" -> "yt_dlp" [];
	"yt_dlp.extractor.sapo" -> "yt_dlp" [];
	"yt_dlp.extractor.samplefocus" -> "yt_dlp" [];
	"yt_dlp.extractor.saitosan" -> "yt_dlp" [];
	"yt_dlp.extractor.safari" -> "urllib" [];
	"yt_dlp.extractor.safari" -> "yt_dlp" [];
	"yt_dlp.extractor.s4c" -> "yt_dlp" [];
	"yt_dlp.extractor.ruv" -> "yt_dlp" [];
	"yt_dlp.extractor.ruutu" -> "urllib" [];
	"yt_dlp.extractor.ruutu" -> "yt_dlp" [];
	"yt_dlp.extractor.rutv" -> "yt_dlp" [];
	"yt_dlp.extractor.rutube" -> "yt_dlp" [];
	"yt_dlp.extractor.rumble" -> "yt_dlp" [];
	"yt_dlp.extractor.rule34video" -> "yt_dlp" [];
	"yt_dlp.extractor.rudovideo" -> "yt_dlp" [];
	"yt_dlp.extractor.rtvslo" -> "yt_dlp" [];
	"yt_dlp.extractor.rtvs" -> "yt_dlp" [];
	"yt_dlp.extractor.rtve" -> "urllib" [];
	"yt_dlp.extractor.rtve" -> "yt_dlp" [];
	"yt_dlp.extractor.rtvcplay" -> "yt_dlp" [];
	"yt_dlp.extractor.rts" -> "yt_dlp" [];
	"yt_dlp.extractor.rtp" -> "urllib" [];
	"yt_dlp.extractor.rtp" -> "yt_dlp" [];
	"yt_dlp.extractor.rtnews" -> "yt_dlp" [];
	"yt_dlp.extractor.rtlnl" -> "yt_dlp" [];
	"yt_dlp.extractor.rtl2" -> "yt_dlp" [];
	"yt_dlp.extractor.rte" -> "yt_dlp" [];
	"yt_dlp.extractor.rozhlas" -> "yt_dlp" [];
	"yt_dlp.extractor.rottentomatoes" -> "yt_dlp" [];
	"yt_dlp.extractor.roosterteeth" -> "yt_dlp" [];
	"yt_dlp.extractor.rokfin" -> "urllib" [];
	"yt_dlp.extractor.rokfin" -> "yt_dlp" [];
	"yt_dlp.extractor.rockstargames" -> "yt_dlp" [];
	"yt_dlp.extractor.rmcdecouverte" -> "urllib" [];
	"yt_dlp.extractor.rmcdecouverte" -> "yt_dlp" [];
	"yt_dlp.extractor.rinsefm" -> "yt_dlp" [];
	"yt_dlp.extractor.ridehome" -> "yt_dlp" [];
	"yt_dlp.extractor.rheinmaintv" -> "yt_dlp" [];
	"yt_dlp.extractor.reverbnation" -> "yt_dlp" [];
	"yt_dlp.extractor.reuters" -> "yt_dlp" [];
	"yt_dlp.extractor.rentv" -> "yt_dlp" [];
	"yt_dlp.extractor.redtube" -> "yt_dlp" [];
	"yt_dlp.extractor.redgifs" -> "urllib" [];
	"yt_dlp.extractor.redgifs" -> "yt_dlp" [];
	"yt_dlp.extractor.redge" -> "yt_dlp" [];
	"yt_dlp.extractor.reddit" -> "urllib" [];
	"yt_dlp.extractor.reddit" -> "yt_dlp" [];
	"yt_dlp.extractor.redbulltv" -> "yt_dlp" [];
	"yt_dlp.extractor.redbee" -> "urllib" [];
	"yt_dlp.extractor.redbee" -> "yt_dlp" [];
	"yt_dlp.extractor.rds" -> "yt_dlp" [];
	"yt_dlp.extractor.rcti" -> "yt_dlp" [];
	"yt_dlp.extractor.rcs" -> "yt_dlp" [];
	"yt_dlp.extractor.rbgtum" -> "yt_dlp" [];
	"yt_dlp.extractor.raywenderlich" -> "yt_dlp" [];
	"yt_dlp.extractor.rai" -> "yt_dlp" [];
	"yt_dlp.extractor.radlive" -> "yt_dlp" [];
	"yt_dlp.extractor.radiozet" -> "yt_dlp" [];
	"yt_dlp.extractor.radioradicale" -> "yt_dlp" [];
	"yt_dlp.extractor.radiokapital" -> "urllib" [];
	"yt_dlp.extractor.radiokapital" -> "yt_dlp" [];
	"yt_dlp.extractor.radiojavan" -> "yt_dlp" [];
	"yt_dlp.extractor.radiofrance" -> "urllib" [];
	"yt_dlp.extractor.radiofrance" -> "yt_dlp" [];
	"yt_dlp.extractor.radiocomercial" -> "yt_dlp" [];
	"yt_dlp.extractor.radiocanada" -> "yt_dlp" [];
	"yt_dlp.extractor.radiko" -> "urllib" [];
	"yt_dlp.extractor.radiko" -> "yt_dlp" [];
	"yt_dlp.extractor.r7" -> "yt_dlp" [];
	"yt_dlp.extractor.qqmusic" -> "yt_dlp" [];
	"yt_dlp.extractor.qingting" -> "yt_dlp" [];
	"yt_dlp.extractor.qdance" -> "yt_dlp" [];
	"yt_dlp.extractor.pyvideo" -> "yt_dlp" [];
	"yt_dlp.extractor.puls4" -> "yt_dlp" [];
	"yt_dlp.extractor.puhutv" -> "yt_dlp" [];
	"yt_dlp.extractor.prx" -> "yt_dlp" [];
	"yt_dlp.extractor.prosiebensat1" -> "yt_dlp" [];
	"yt_dlp.extractor.projectveritas" -> "yt_dlp" [];
	"yt_dlp.extractor.presstv" -> "yt_dlp" [];
	"yt_dlp.extractor.premiershiprugby" -> "yt_dlp" [];
	"yt_dlp.extractor.prankcast" -> "yt_dlp" [];
	"yt_dlp.extractor.pr0gramm" -> "urllib" [];
	"yt_dlp.extractor.pr0gramm" -> "yt_dlp" [];
	"yt_dlp.extractor.pornoxo" -> "yt_dlp" [];
	"yt_dlp.extractor.pornovoisines" -> "yt_dlp" [];
	"yt_dlp.extractor.pornotube" -> "yt_dlp" [];
	"yt_dlp.extractor.pornhub" -> "yt_dlp" [];
	"yt_dlp.extractor.pornflip" -> "yt_dlp" [];
	"yt_dlp.extractor.pornbox" -> "yt_dlp" [];
	"yt_dlp.extractor.popcorntv" -> "yt_dlp" [];
	"yt_dlp.extractor.popcorntimes" -> "yt_dlp" [];
	"yt_dlp.extractor.polskieradio" -> "urllib" [];
	"yt_dlp.extractor.polskieradio" -> "yt_dlp" [];
	"yt_dlp.extractor.polsatgo" -> "yt_dlp" [];
	"yt_dlp.extractor.pokergo" -> "yt_dlp" [];
	"yt_dlp.extractor.podomatic" -> "yt_dlp" [];
	"yt_dlp.extractor.podchaser" -> "yt_dlp" [];
	"yt_dlp.extractor.podbayfm" -> "yt_dlp" [];
	"yt_dlp.extractor.plvideo" -> "yt_dlp" [];
	"yt_dlp.extractor.plutotv" -> "urllib" [];
	"yt_dlp.extractor.plutotv" -> "yt_dlp" [];
	"yt_dlp.extractor.pluralsight" -> "urllib" [];
	"yt_dlp.extractor.pluralsight" -> "yt_dlp" [];
	"yt_dlp.extractor.playwire" -> "yt_dlp" [];
	"yt_dlp.extractor.playtvak" -> "urllib" [];
	"yt_dlp.extractor.playtvak" -> "yt_dlp" [];
	"yt_dlp.extractor.playsuisse" -> "yt_dlp" [];
	"yt_dlp.extractor.playplustv" -> "yt_dlp" [];
	"yt_dlp.extractor.platzi" -> "yt_dlp" [];
	"yt_dlp.extractor.planetmarathi" -> "yt_dlp" [];
	"yt_dlp.extractor.pladform" -> "yt_dlp" [];
	"yt_dlp.extractor.pixivsketch" -> "yt_dlp" [];
	"yt_dlp.extractor.piramidetv" -> "yt_dlp" [];
	"yt_dlp.extractor.pinterest" -> "yt_dlp" [];
	"yt_dlp.extractor.pinkbike" -> "yt_dlp" [];
	"yt_dlp.extractor.piksel" -> "yt_dlp" [];
	"yt_dlp.extractor.picarto" -> "urllib" [];
	"yt_dlp.extractor.picarto" -> "yt_dlp" [];
	"yt_dlp.extractor.piapro" -> "urllib" [];
	"yt_dlp.extractor.piapro" -> "yt_dlp" [];
	"yt_dlp.extractor.pialive" -> "yt_dlp" [];
	"yt_dlp.extractor.photobucket" -> "urllib" [];
	"yt_dlp.extractor.phoenix" -> "yt_dlp" [];
	"yt_dlp.extractor.philharmoniedeparis" -> "yt_dlp" [];
	"yt_dlp.extractor.periscope" -> "yt_dlp" [];
	"yt_dlp.extractor.performgroup" -> "yt_dlp" [];
	"yt_dlp.extractor.peloton" -> "urllib" [];
	"yt_dlp.extractor.peloton" -> "yt_dlp" [];
	"yt_dlp.extractor.peertv" -> "yt_dlp" [];
	"yt_dlp.extractor.peertube" -> "yt_dlp" [];
	"yt_dlp.extractor.peekvids" -> "yt_dlp" [];
	"yt_dlp.extractor.pearvideo" -> "yt_dlp" [];
	"yt_dlp.extractor.pbs" -> "yt_dlp" [];
	"yt_dlp.extractor.patreon" -> "urllib" [];
	"yt_dlp.extractor.patreon" -> "yt_dlp" [];
	"yt_dlp.extractor.parti" -> "yt_dlp" [];
	"yt_dlp.extractor.parlview" -> "yt_dlp" [];
	"yt_dlp.extractor.parler" -> "yt_dlp" [];
	"yt_dlp.extractor.paramountplus" -> "yt_dlp" [];
	"yt_dlp.extractor.panopto" -> "urllib" [];
	"yt_dlp.extractor.panopto" -> "yt_dlp" [];
	"yt_dlp.extractor.palcomp3" -> "yt_dlp" [];
	"yt_dlp.extractor.packtpub" -> "yt_dlp" [];
	"yt_dlp.extractor.owncloud" -> "urllib" [];
	"yt_dlp.extractor.owncloud" -> "yt_dlp" [];
	"yt_dlp.extractor.orf" -> "yt_dlp" [];
	"yt_dlp.extractor.ora" -> "urllib" [];
	"yt_dlp.extractor.ora" -> "yt_dlp" [];
	"yt_dlp.extractor.openrec" -> "yt_dlp" [];
	"yt_dlp.extractor.opencast" -> "yt_dlp" [];
	"yt_dlp.extractor.onionstudios" -> "yt_dlp" [];
	"yt_dlp.extractor.onet" -> "yt_dlp" [];
	"yt_dlp.extractor.onenewsnz" -> "yt_dlp" [];
	"yt_dlp.extractor.onefootball" -> "yt_dlp" [];
	"yt_dlp.extractor.ondemandkorea" -> "yt_dlp" [];
	"yt_dlp.extractor.on24" -> "yt_dlp" [];
	"yt_dlp.extractor.olympics" -> "yt_dlp" [];
	"yt_dlp.extractor.oftv" -> "yt_dlp" [];
	"yt_dlp.extractor.odnoklassniki" -> "urllib" [];
	"yt_dlp.extractor.odnoklassniki" -> "yt_dlp" [];
	"yt_dlp.extractor.odkmedia" -> "yt_dlp" [];
	"yt_dlp.extractor.nzonscreen" -> "yt_dlp" [];
	"yt_dlp.extractor.nzherald" -> "yt_dlp" [];
	"yt_dlp.extractor.nytimes" -> "yt_dlp" [];
	"yt_dlp.extractor.nuvid" -> "yt_dlp" [];
	"yt_dlp.extractor.nuum" -> "yt_dlp" [];
	"yt_dlp.extractor.nubilesporn" -> "yt_dlp" [];
	"yt_dlp.extractor.ntvru" -> "yt_dlp" [];
	"yt_dlp.extractor.ntvde" -> "yt_dlp" [];
	"yt_dlp.extractor.ntvcojp" -> "yt_dlp" [];
	"yt_dlp.extractor.nts" -> "yt_dlp" [];
	"yt_dlp.extractor.nrk" -> "yt_dlp" [];
	"yt_dlp.extractor.npr" -> "yt_dlp" [];
	"yt_dlp.extractor.npo" -> "urllib" [];
	"yt_dlp.extractor.npo" -> "yt_dlp" [];
	"yt_dlp.extractor.noz" -> "urllib" [];
	"yt_dlp.extractor.noz" -> "yt_dlp" [];
	"yt_dlp.extractor.nowness" -> "yt_dlp" [];
	"yt_dlp.extractor.novaplay" -> "yt_dlp" [];
	"yt_dlp.extractor.nova" -> "yt_dlp" [];
	"yt_dlp.extractor.nosnl" -> "yt_dlp" [];
	"yt_dlp.extractor.noovo" -> "yt_dlp" [];
	"yt_dlp.extractor.noodlemagazine" -> "yt_dlp" [];
	"yt_dlp.extractor.nuevo" -> "yt_dlp" [];
	"yt_dlp.extractor.noice" -> "yt_dlp" [];
	"yt_dlp.extractor.nobelprize" -> "yt_dlp" [];
	"yt_dlp.extractor.nitter" -> "urllib" [];
	"yt_dlp.extractor.nitter" -> "yt_dlp" [];
	"yt_dlp.extractor.nintendo" -> "urllib" [];
	"yt_dlp.extractor.nintendo" -> "yt_dlp" [];
	"yt_dlp.extractor.ninenow" -> "yt_dlp" [];
	"yt_dlp.extractor.ninenews" -> "yt_dlp" [];
	"yt_dlp.extractor.ninegag" -> "yt_dlp" [];
	"yt_dlp.extractor.ninecninemedia" -> "yt_dlp" [];
	"yt_dlp.extractor.ninaprotocol" -> "yt_dlp" [];
	"yt_dlp.extractor.niconicochannelplus" -> "yt_dlp" [];
	"yt_dlp.extractor.niconico" -> "urllib" [];
	"yt_dlp.extractor.niconico" -> "yt_dlp" [];
	"yt_dlp.extractor.nick" -> "yt_dlp" [];
	"yt_dlp.extractor.nhl" -> "yt_dlp" [];
	"yt_dlp.extractor.nhk" -> "yt_dlp" [];
	"yt_dlp.extractor.nfl" -> "yt_dlp" [];
	"yt_dlp.extractor.nfhsnetwork" -> "yt_dlp" [];
	"yt_dlp.extractor.nfb" -> "yt_dlp" [];
	"yt_dlp.extractor.nexx" -> "yt_dlp" [];
	"yt_dlp.extractor.nextmedia" -> "urllib" [];
	"yt_dlp.extractor.nextmedia" -> "yt_dlp" [];
	"yt_dlp.extractor.newsy" -> "yt_dlp" [];
	"yt_dlp.extractor.newspicks" -> "yt_dlp" [];
	"yt_dlp.extractor.newgrounds" -> "yt_dlp" [];
	"yt_dlp.extractor.netzkino" -> "yt_dlp" [];
	"yt_dlp.extractor.netverse" -> "yt_dlp" [];
	"yt_dlp.extractor.neteasemusic" -> "yt_dlp" [];
	"yt_dlp.extractor.nest" -> "yt_dlp" [];
	"yt_dlp.extractor.nerdcubed" -> "yt_dlp" [];
	"yt_dlp.extractor.nekohacker" -> "yt_dlp" [];
	"yt_dlp.extractor.nebula" -> "yt_dlp" [];
	"yt_dlp.extractor.ndtv" -> "urllib" [];
	"yt_dlp.extractor.ndtv" -> "yt_dlp" [];
	"yt_dlp.extractor.ndr" -> "urllib" [];
	"yt_dlp.extractor.ndr" -> "yt_dlp" [];
	"yt_dlp.extractor.nbc" -> "urllib" [];
	"yt_dlp.extractor.nbc" -> "yt_dlp" [];
	"yt_dlp.extractor.nba" -> "urllib" [];
	"yt_dlp.extractor.nba" -> "yt_dlp" [];
	"yt_dlp.extractor.naver" -> "urllib" [];
	"yt_dlp.extractor.naver" -> "yt_dlp" [];
	"yt_dlp.extractor.nationalgeographic" -> "yt_dlp" [];
	"yt_dlp.extractor.nate" -> "yt_dlp" [];
	"yt_dlp.extractor.n1" -> "yt_dlp" [];
	"yt_dlp.extractor.mzaalo" -> "yt_dlp" [];
	"yt_dlp.extractor.myvideoge" -> "yt_dlp" [];
	"yt_dlp.extractor.myspass" -> "yt_dlp" [];
	"yt_dlp.extractor.myspace" -> "yt_dlp" [];
	"yt_dlp.extractor.mxplayer" -> "yt_dlp" [];
	"yt_dlp.extractor.mx3" -> "yt_dlp" [];
	"yt_dlp.extractor.musicdex" -> "yt_dlp" [];
	"yt_dlp.extractor.museai" -> "yt_dlp" [];
	"yt_dlp.extractor.murrtube" -> "yt_dlp" [];
	"yt_dlp.extractor.muenchentv" -> "yt_dlp" [];
	"yt_dlp.extractor.mtv" -> "yt_dlp" [];
	"yt_dlp.extractor.msn" -> "yt_dlp" [];
	"yt_dlp.extractor.movingimage" -> "yt_dlp" [];
	"yt_dlp.extractor.jixie" -> "yt_dlp" [];
	"yt_dlp.extractor.motorsport" -> "urllib" [];
	"yt_dlp.extractor.motherless" -> "urllib" [];
	"yt_dlp.extractor.motherless" -> "yt_dlp" [];
	"yt_dlp.extractor.monstercat" -> "yt_dlp" [];
	"yt_dlp.extractor.mojvideo" -> "yt_dlp" [];
	"yt_dlp.extractor.mojevideo" -> "yt_dlp" [];
	"yt_dlp.extractor.mocha" -> "yt_dlp" [];
	"yt_dlp.extractor.mlb" -> "yt_dlp" [];
	"yt_dlp.extractor.mixcloud" -> "urllib" [];
	"yt_dlp.extractor.mixcloud" -> "yt_dlp" [];
	"yt_dlp.extractor.mixch" -> "yt_dlp" [];
	"yt_dlp.extractor.mitele" -> "yt_dlp" [];
	"yt_dlp.extractor.mit" -> "yt_dlp" [];
	"yt_dlp.extractor.mirrorcouk" -> "yt_dlp" [];
	"yt_dlp.extractor.mirrativ" -> "yt_dlp" [];
	"yt_dlp.extractor.minoto" -> "yt_dlp" [];
	"yt_dlp.extractor.minds" -> "yt_dlp" [];
	"yt_dlp.extractor.microsoftstream" -> "yt_dlp" [];
	"yt_dlp.extractor.microsoftembed" -> "yt_dlp" [];
	"yt_dlp.extractor.mgtv" -> "yt_dlp" [];
	"yt_dlp.extractor.metacritic" -> "yt_dlp" [];
	"yt_dlp.extractor.melonvod" -> "yt_dlp" [];
	"yt_dlp.extractor.meipai" -> "yt_dlp" [];
	"yt_dlp.extractor.megatvcom" -> "yt_dlp" [];
	"yt_dlp.extractor.megaphone" -> "yt_dlp" [];
	"yt_dlp.extractor.medici" -> "urllib" [];
	"yt_dlp.extractor.medici" -> "yt_dlp" [];
	"yt_dlp.extractor.mediaworksnz" -> "yt_dlp" [];
	"yt_dlp.extractor.mediastream" -> "yt_dlp" [];
	"yt_dlp.extractor.mediasite" -> "urllib" [];
	"yt_dlp.extractor.mediasite" -> "yt_dlp" [];
	"yt_dlp.extractor.mediaset" -> "yt_dlp" [];
	"yt_dlp.extractor.medialaan" -> "yt_dlp" [];
	"yt_dlp.extractor.mediaklikk" -> "urllib" [];
	"yt_dlp.extractor.mediaklikk" -> "yt_dlp" [];
	"yt_dlp.extractor.medaltv" -> "yt_dlp" [];
	"yt_dlp.extractor.mdr" -> "urllib" [];
	"yt_dlp.extractor.mdr" -> "yt_dlp" [];
	"yt_dlp.extractor.mbn" -> "yt_dlp" [];
	"yt_dlp.extractor.masters" -> "yt_dlp" [];
	"yt_dlp.extractor.massengeschmacktv" -> "yt_dlp" [];
	"yt_dlp.extractor.markiza" -> "yt_dlp" [];
	"yt_dlp.extractor.manyvids" -> "yt_dlp" [];
	"yt_dlp.extractor.manoto" -> "yt_dlp" [];
	"yt_dlp.extractor.mangomolo" -> "urllib" [];
	"yt_dlp.extractor.mangomolo" -> "yt_dlp" [];
	"yt_dlp.extractor.mainstreaming" -> "yt_dlp" [];
	"yt_dlp.extractor.mailru" -> "urllib" [];
	"yt_dlp.extractor.mailru" -> "yt_dlp" [];
	"yt_dlp.extractor.magentamusik" -> "yt_dlp" [];
	"yt_dlp.extractor.magellantv" -> "yt_dlp" [];
	"yt_dlp.extractor.maariv" -> "yt_dlp" [];
	"yt_dlp.extractor.lynda" -> "urllib" [];
	"yt_dlp.extractor.lynda" -> "yt_dlp" [];
	"yt_dlp.extractor.lsm" -> "urllib" [];
	"yt_dlp.extractor.lsm" -> "yt_dlp" [];
	"yt_dlp.extractor.lrt" -> "yt_dlp" [];
	"yt_dlp.extractor.loom" -> "urllib" [];
	"yt_dlp.extractor.loom" -> "yt_dlp" [];
	"yt_dlp.extractor.loco" -> "yt_dlp" [];
	"yt_dlp.extractor.lnk" -> "yt_dlp" [];
	"yt_dlp.extractor.livestreamfails" -> "yt_dlp" [];
	"yt_dlp.extractor.livestream" -> "urllib" [];
	"yt_dlp.extractor.livestream" -> "yt_dlp" [];
	"yt_dlp.extractor.livejournal" -> "yt_dlp" [];
	"yt_dlp.extractor.litv" -> "yt_dlp" [];
	"yt_dlp.extractor.listennotes" -> "yt_dlp" [];
	"yt_dlp.extractor.linkedin" -> "yt_dlp" [];
	"yt_dlp.extractor.limelight" -> "yt_dlp" [];
	"yt_dlp.extractor.likee" -> "yt_dlp" [];
	"yt_dlp.extractor.lifenews" -> "urllib" [];
	"yt_dlp.extractor.lifenews" -> "yt_dlp" [];
	"yt_dlp.extractor.libsyn" -> "yt_dlp" [];
	"yt_dlp.extractor.libraryofcongress" -> "yt_dlp" [];
	"yt_dlp.extractor.lego" -> "yt_dlp" [];
	"yt_dlp.extractor.lefigaro" -> "yt_dlp" [];
	"yt_dlp.extractor.leeco" -> "urllib" [];
	"yt_dlp.extractor.leeco" -> "yt_dlp" [];
	"yt_dlp.extractor.lecturio" -> "yt_dlp" [];
	"yt_dlp.extractor.lecture2go" -> "yt_dlp" [];
	"yt_dlp.extractor.learningonscreen" -> "yt_dlp" [];
	"yt_dlp.extractor.lci" -> "yt_dlp" [];
	"yt_dlp.extractor.lbry" -> "urllib" [];
	"yt_dlp.extractor.lbry" -> "yt_dlp" [];
	"yt_dlp.extractor.laxarxames" -> "yt_dlp" [];
	"yt_dlp.extractor.lastfm" -> "yt_dlp" [];
	"yt_dlp.extractor.laracasts" -> "yt_dlp" [];
	"yt_dlp.extractor.la7" -> "yt_dlp" [];
	"yt_dlp.extractor.kuwo" -> "urllib" [];
	"yt_dlp.extractor.kuwo" -> "yt_dlp" [];
	"yt_dlp.extractor.kukululive" -> "urllib" [];
	"yt_dlp.extractor.kukululive" -> "yt_dlp" [];
	"yt_dlp.extractor.kth" -> "yt_dlp" [];
	"yt_dlp.extractor.krasview" -> "yt_dlp" [];
	"yt_dlp.extractor.koo" -> "yt_dlp" [];
	"yt_dlp.extractor.kommunetv" -> "yt_dlp" [];
	"yt_dlp.extractor.kinopoisk" -> "yt_dlp" [];
	"yt_dlp.extractor.kinja" -> "urllib" [];
	"yt_dlp.extractor.kinja" -> "yt_dlp" [];
	"yt_dlp.extractor.kika" -> "yt_dlp" [];
	"yt_dlp.extractor.kickstarter" -> "yt_dlp" [];
	"yt_dlp.extractor.kick" -> "yt_dlp" [];
	"yt_dlp.extractor.khanacademy" -> "yt_dlp" [];
	"yt_dlp.extractor.kenh14" -> "yt_dlp" [];
	"yt_dlp.extractor.kelbyone" -> "yt_dlp" [];
	"yt_dlp.extractor.kankanews" -> "urllib" [];
	"yt_dlp.extractor.kaltura" -> "urllib" [];
	"yt_dlp.extractor.kaltura" -> "yt_dlp" [];
	"yt_dlp.extractor.kakao" -> "yt_dlp" [];
	"yt_dlp.extractor.jwplatform" -> "yt_dlp" [];
	"yt_dlp.extractor.jtbc" -> "yt_dlp" [];
	"yt_dlp.extractor.jstream" -> "yt_dlp" [];
	"yt_dlp.extractor.jove" -> "yt_dlp" [];
	"yt_dlp.extractor.joqrag" -> "urllib" [];
	"yt_dlp.extractor.joqrag" -> "yt_dlp" [];
	"yt_dlp.extractor.joj" -> "yt_dlp" [];
	"yt_dlp.extractor.jiosaavn" -> "yt_dlp" [];
	"yt_dlp.extractor.jiocinema" -> "yt_dlp" [];
	"yt_dlp.extractor.japandiet" -> "yt_dlp" [];
	"yt_dlp.extractor.jamendo" -> "yt_dlp" [];
	"yt_dlp.extractor.izlesene" -> "urllib" [];
	"yt_dlp.extractor.izlesene" -> "yt_dlp" [];
	"yt_dlp.extractor.ixigua" -> "yt_dlp" [];
	"yt_dlp.extractor.iwara" -> "urllib" [];
	"yt_dlp.extractor.iwara" -> "yt_dlp" [];
	"yt_dlp.extractor.ivoox" -> "yt_dlp" [];
	"yt_dlp.extractor.ivideon" -> "urllib" [];
	"yt_dlp.extractor.ivideon" -> "yt_dlp" [];
	"yt_dlp.extractor.ivi" -> "yt_dlp" [];
	"yt_dlp.extractor.itv" -> "yt_dlp" [];
	"yt_dlp.extractor.itprotv" -> "yt_dlp" [];
	"yt_dlp.extractor.israelnationalnews" -> "yt_dlp" [];
	"yt_dlp.extractor.islamchannel" -> "yt_dlp" [];
	"yt_dlp.extractor.iqiyi" -> "urllib" [];
	"yt_dlp.extractor.iqiyi" -> "yt_dlp" [];
	"yt_dlp.extractor.iprima" -> "yt_dlp" [];
	"yt_dlp.extractor.internetvideoarchive" -> "yt_dlp" [];
	"yt_dlp.extractor.internazionale" -> "yt_dlp" [];
	"yt_dlp.extractor.instagram" -> "yt_dlp" [];
	"yt_dlp.extractor.infoq" -> "urllib" [];
	"yt_dlp.extractor.infoq" -> "yt_dlp" [];
	"yt_dlp.extractor.indavideo" -> "yt_dlp" [];
	"yt_dlp.extractor.ina" -> "yt_dlp" [];
	"yt_dlp.extractor.imgur" -> "yt_dlp" [];
	"yt_dlp.extractor.imdb" -> "yt_dlp" [];
	"yt_dlp.extractor.iltalehti" -> "yt_dlp" [];
	"yt_dlp.extractor.ilpost" -> "yt_dlp" [];
	"yt_dlp.extractor.iheart" -> "yt_dlp" [];
	"yt_dlp.extractor.ign" -> "urllib" [];
	"yt_dlp.extractor.ign" -> "yt_dlp" [];
	"yt_dlp.extractor.idolplus" -> "yt_dlp" [];
	"yt_dlp.extractor.ichinanalive" -> "yt_dlp" [];
	"yt_dlp.extractor.icareus" -> "yt_dlp" [];
	"yt_dlp.extractor.hypergryph" -> "yt_dlp" [];
	"yt_dlp.extractor.hypem" -> "yt_dlp" [];
	"yt_dlp.extractor.huya" -> "urllib" [];
	"yt_dlp.extractor.huya" -> "yt_dlp" [];
	"yt_dlp.extractor.hungama" -> "yt_dlp" [];
	"yt_dlp.extractor.huffpost" -> "yt_dlp" [];
	"yt_dlp.extractor.huajiao" -> "yt_dlp" [];
	"yt_dlp.extractor.hse" -> "yt_dlp" [];
	"yt_dlp.extractor.hrti" -> "yt_dlp" [];
	"yt_dlp.extractor.hrfensehen" -> "yt_dlp" [];
	"yt_dlp.extractor.hotstar" -> "yt_dlp" [];
	"yt_dlp.extractor.hotnewhiphop" -> "yt_dlp" [];
	"yt_dlp.extractor.holodex" -> "yt_dlp" [];
	"yt_dlp.extractor.hollywoodreporter" -> "yt_dlp" [];
	"yt_dlp.extractor.hketv" -> "yt_dlp" [];
	"yt_dlp.extractor.hitrecord" -> "yt_dlp" [];
	"yt_dlp.extractor.historicfilms" -> "yt_dlp" [];
	"yt_dlp.extractor.hidive" -> "yt_dlp" [];
	"yt_dlp.extractor.hellporno" -> "yt_dlp" [];
	"yt_dlp.extractor.heise" -> "urllib" [];
	"yt_dlp.extractor.heise" -> "yt_dlp" [];
	"yt_dlp.extractor.hearthisat" -> "yt_dlp" [];
	"yt_dlp.extractor.hbo" -> "yt_dlp" [];
	"yt_dlp.extractor.harpodeon" -> "yt_dlp" [];
	"yt_dlp.extractor.gronkh" -> "yt_dlp" [];
	"yt_dlp.extractor.graspop" -> "yt_dlp" [];
	"yt_dlp.extractor.gotostage" -> "yt_dlp" [];
	"yt_dlp.extractor.goshgay" -> "urllib" [];
	"yt_dlp.extractor.goshgay" -> "yt_dlp" [];
	"yt_dlp.extractor.gopro" -> "yt_dlp" [];
	"yt_dlp.extractor.goplay" -> "urllib" [];
	"yt_dlp.extractor.goplay" -> "yt_dlp" [];
	"yt_dlp.extractor.googlepodcasts" -> "yt_dlp" [];
	"yt_dlp.extractor.googledrive" -> "urllib" [];
	"yt_dlp.extractor.googledrive" -> "yt_dlp" [];
	"yt_dlp.extractor.goodgame" -> "yt_dlp" [];
	"yt_dlp.extractor.golem" -> "urllib" [];
	"yt_dlp.extractor.golem" -> "yt_dlp" [];
	"yt_dlp.extractor.gofile" -> "yt_dlp" [];
	"yt_dlp.extractor.godtube" -> "yt_dlp" [];
	"yt_dlp.extractor.godresource" -> "yt_dlp" [];
	"yt_dlp.extractor.go" -> "yt_dlp" [];
	"yt_dlp.extractor.glomex" -> "urllib" [];
	"yt_dlp.extractor.glomex" -> "yt_dlp" [];
	"yt_dlp.extractor.globo" -> "yt_dlp" [];
	"yt_dlp.extractor.globalplayer" -> "yt_dlp" [];
	"yt_dlp.extractor.giantbomb" -> "yt_dlp" [];
	"yt_dlp.extractor.gettr" -> "yt_dlp" [];
	"yt_dlp.extractor.getcourseru" -> "urllib" [];
	"yt_dlp.extractor.getcourseru" -> "yt_dlp" [];
	"yt_dlp.extractor.germanupa" -> "yt_dlp" [];
	"yt_dlp.extractor.genius" -> "yt_dlp" [];
	"yt_dlp.extractor.genericembeds" -> "urllib" [];
	"yt_dlp.extractor.genericembeds" -> "yt_dlp" [];
	"yt_dlp.extractor.gedidigital" -> "yt_dlp" [];
	"yt_dlp.extractor.gdcvault" -> "yt_dlp" [];
	"yt_dlp.extractor.gbnews" -> "yt_dlp" [];
	"yt_dlp.extractor.gaskrank" -> "yt_dlp" [];
	"yt_dlp.extractor.gamestar" -> "yt_dlp" [];
	"yt_dlp.extractor.gamespot" -> "urllib" [];
	"yt_dlp.extractor.gamejolt" -> "urllib" [];
	"yt_dlp.extractor.gamejolt" -> "yt_dlp" [];
	"yt_dlp.extractor.gamedevtv" -> "yt_dlp" [];
	"yt_dlp.extractor.gaia" -> "urllib" [];
	"yt_dlp.extractor.gaia" -> "yt_dlp" [];
	"yt_dlp.extractor.gab" -> "yt_dlp" [];
	"yt_dlp.extractor.fuyintv" -> "yt_dlp" [];
	"yt_dlp.extractor.funker530" -> "yt_dlp" [];
	"yt_dlp.extractor.fujitv" -> "yt_dlp" [];
	"yt_dlp.extractor.frontendmasters" -> "urllib" [];
	"yt_dlp.extractor.frontendmasters" -> "yt_dlp" [];
	"yt_dlp.extractor.freetv" -> "yt_dlp" [];
	"yt_dlp.extractor.freesound" -> "yt_dlp" [];
	"yt_dlp.extractor.francetv" -> "urllib" [];
	"yt_dlp.extractor.francetv" -> "yt_dlp" [];
	"yt_dlp.extractor.franceinter" -> "yt_dlp" [];
	"yt_dlp.extractor.francaisfacile" -> "urllib" [];
	"yt_dlp.extractor.francaisfacile" -> "yt_dlp" [];
	"yt_dlp.extractor.fptplay" -> "urllib" [];
	"yt_dlp.extractor.fptplay" -> "yt_dlp" [];
	"yt_dlp.extractor.foxsports" -> "yt_dlp" [];
	"yt_dlp.extractor.amp" -> "yt_dlp" [];
	"yt_dlp.extractor.fox" -> "urllib" [];
	"yt_dlp.extractor.fox" -> "yt_dlp" [];
	"yt_dlp.extractor.fourtube" -> "urllib" [];
	"yt_dlp.extractor.fourtube" -> "yt_dlp" [];
	"yt_dlp.extractor.folketinget" -> "urllib" [];
	"yt_dlp.extractor.folketinget" -> "yt_dlp" [];
	"yt_dlp.extractor.floatplane" -> "yt_dlp" [];
	"yt_dlp.extractor.flickr" -> "urllib" [];
	"yt_dlp.extractor.flickr" -> "yt_dlp" [];
	"yt_dlp.extractor.flextv" -> "yt_dlp" [];
	"yt_dlp.extractor.fivetv" -> "yt_dlp" [];
	"yt_dlp.extractor.firsttv" -> "urllib" [];
	"yt_dlp.extractor.firsttv" -> "yt_dlp" [];
	"yt_dlp.extractor.filmon" -> "yt_dlp" [];
	"yt_dlp.extractor.fifa" -> "yt_dlp" [];
	"yt_dlp.extractor.fczenit" -> "yt_dlp" [];
	"yt_dlp.extractor.fc2" -> "urllib" [];
	"yt_dlp.extractor.fc2" -> "yt_dlp" [];
	"yt_dlp.extractor.faz" -> "yt_dlp" [];
	"yt_dlp.extractor.fathom" -> "yt_dlp" [];
	"yt_dlp.extractor.fancode" -> "yt_dlp" [];
	"yt_dlp.extractor.facebook" -> "urllib" [];
	"yt_dlp.extractor.facebook" -> "yt_dlp" [];
	"yt_dlp.extractor.eyedotv" -> "yt_dlp" [];
	"yt_dlp.extractor.expressen" -> "yt_dlp" [];
	"yt_dlp.extractor.euscreen" -> "yt_dlp" [];
	"yt_dlp.extractor.eurosport" -> "yt_dlp" [];
	"yt_dlp.extractor.europa" -> "yt_dlp" [];
	"yt_dlp.extractor.ettutv" -> "yt_dlp" [];
	"yt_dlp.extractor.espn" -> "urllib" [];
	"yt_dlp.extractor.espn" -> "yt_dlp" [];
	"yt_dlp.extractor.ertgr" -> "yt_dlp" [];
	"yt_dlp.extractor.err" -> "yt_dlp" [];
	"yt_dlp.extractor.eroprofile" -> "urllib" [];
	"yt_dlp.extractor.eroprofile" -> "yt_dlp" [];
	"yt_dlp.extractor.erocast" -> "yt_dlp" [];
	"yt_dlp.extractor.eporner" -> "yt_dlp" [];
	"yt_dlp.extractor.epoch" -> "yt_dlp" [];
	"yt_dlp.extractor.eplus" -> "yt_dlp" [];
	"yt_dlp.extractor.epidemicsound" -> "yt_dlp" [];
	"yt_dlp.extractor.epicon" -> "yt_dlp" [];
	"yt_dlp.extractor.embedly" -> "urllib" [];
	"yt_dlp.extractor.embedly" -> "yt_dlp" [];
	"yt_dlp.extractor.elpais" -> "yt_dlp" [];
	"yt_dlp.extractor.elonet" -> "yt_dlp" [];
	"yt_dlp.extractor.elementorembed" -> "yt_dlp" [];
	"yt_dlp.extractor.eitb" -> "yt_dlp" [];
	"yt_dlp.extractor.eighttracks" -> "yt_dlp" [];
	"yt_dlp.extractor.eggs" -> "yt_dlp" [];
	"yt_dlp.extractor.egghead" -> "yt_dlp" [];
	"yt_dlp.extractor.ebay" -> "yt_dlp" [];
	"yt_dlp.extractor.eagleplatform" -> "yt_dlp" [];
	"yt_dlp.extractor.dw" -> "urllib" [];
	"yt_dlp.extractor.dw" -> "yt_dlp" [];
	"yt_dlp.extractor.dvtv" -> "yt_dlp" [];
	"yt_dlp.extractor.duoplay" -> "yt_dlp" [];
	"yt_dlp.extractor.dumpert" -> "yt_dlp" [];
	"yt_dlp.extractor.duboku" -> "urllib" [];
	"yt_dlp.extractor.duboku" -> "yt_dlp" [];
	"yt_dlp.extractor.dtube" -> "yt_dlp" [];
	"yt_dlp.extractor.drtv" -> "yt_dlp" [];
	"yt_dlp.extractor.drtuber" -> "yt_dlp" [];
	"yt_dlp.extractor.drtalks" -> "yt_dlp" [];
	"yt_dlp.extractor.dropout" -> "yt_dlp" [];
	"yt_dlp.extractor.dropbox" -> "urllib" [];
	"yt_dlp.extractor.dropbox" -> "yt_dlp" [];
	"yt_dlp.extractor.drooble" -> "yt_dlp" [];
	"yt_dlp.extractor.dreisat" -> "yt_dlp" [];
	"yt_dlp.extractor.drbonanza" -> "yt_dlp" [];
	"yt_dlp.extractor.dplay" -> "yt_dlp" [];
	"yt_dlp.extractor.douyutv" -> "yt_dlp" [];
	"yt_dlp.extractor.dlive" -> "yt_dlp" [];
	"yt_dlp.extractor.dlf" -> "yt_dlp" [];
	"yt_dlp.extractor.dispeak" -> "yt_dlp" [];
	"yt_dlp.extractor.disney" -> "yt_dlp" [];
	"yt_dlp.extractor.discogs" -> "yt_dlp" [];
	"yt_dlp.extractor.digiview" -> "yt_dlp" [];
	"yt_dlp.extractor.digiteka" -> "yt_dlp" [];
	"yt_dlp.extractor.digitalconcerthall" -> "yt_dlp" [];
	"yt_dlp.extractor.dhm" -> "yt_dlp" [];
	"yt_dlp.extractor.dfb" -> "yt_dlp" [];
	"yt_dlp.extractor.deuxm" -> "yt_dlp" [];
	"yt_dlp.extractor.detik" -> "yt_dlp" [];
	"yt_dlp.extractor.democracynow" -> "urllib" [];
	"yt_dlp.extractor.democracynow" -> "yt_dlp" [];
	"yt_dlp.extractor.dctp" -> "yt_dlp" [];
	"yt_dlp.extractor.daystar" -> "yt_dlp" [];
	"yt_dlp.extractor.daum" -> "urllib" [];
	"yt_dlp.extractor.daum" -> "yt_dlp" [];
	"yt_dlp.extractor.dangalplay" -> "yt_dlp" [];
	"yt_dlp.extractor.damtomo" -> "yt_dlp" [];
	"yt_dlp.extractor.dailywire" -> "yt_dlp" [];
	"yt_dlp.extractor.dailymotion" -> "urllib" [];
	"yt_dlp.extractor.dailymotion" -> "yt_dlp" [];
	"yt_dlp.extractor.dailymail" -> "yt_dlp" [];
	"yt_dlp.extractor.dacast" -> "yt_dlp" [];
	"yt_dlp.extractor.cybrary" -> "yt_dlp" [];
	"yt_dlp.extractor.cwtv" -> "yt_dlp" [];
	"yt_dlp.extractor.curiositystream" -> "urllib" [];
	"yt_dlp.extractor.curiositystream" -> "yt_dlp" [];
	"yt_dlp.extractor.cultureunplugged" -> "yt_dlp" [];
	"yt_dlp.extractor.ctvnews" -> "urllib" [];
	"yt_dlp.extractor.ctvnews" -> "yt_dlp" [];
	"yt_dlp.extractor.ctsnews" -> "yt_dlp" [];
	"yt_dlp.extractor.cspan" -> "yt_dlp" [];
	"yt_dlp.extractor.crtvg" -> "yt_dlp" [];
	"yt_dlp.extractor.crowdbunker" -> "yt_dlp" [];
	"yt_dlp.extractor.crooksandliars" -> "yt_dlp" [];
	"yt_dlp.extractor.craftsy" -> "yt_dlp" [];
	"yt_dlp.extractor.crackle" -> "yt_dlp" [];
	"yt_dlp.extractor.cracked" -> "yt_dlp" [];
	"yt_dlp.extractor.cpac" -> "yt_dlp" [];
	"yt_dlp.extractor.cozytv" -> "yt_dlp" [];
	"yt_dlp.extractor.coub" -> "yt_dlp" [];
	"yt_dlp.extractor.corus" -> "yt_dlp" [];
	"yt_dlp.extractor.contv" -> "yt_dlp" [];
	"yt_dlp.extractor.condenast" -> "urllib" [];
	"yt_dlp.extractor.condenast" -> "yt_dlp" [];
	"yt_dlp.extractor.commonmistakes" -> "yt_dlp" [];
	"yt_dlp.extractor.cnn" -> "yt_dlp" [];
	"yt_dlp.extractor.cnbc" -> "yt_dlp" [];
	"yt_dlp.extractor.clyp" -> "yt_dlp" [];
	"yt_dlp.extractor.clubic" -> "yt_dlp" [];
	"yt_dlp.extractor.cloudycdn" -> "yt_dlp" [];
	"yt_dlp.extractor.clippit" -> "yt_dlp" [];
	"yt_dlp.extractor.clipchamp" -> "yt_dlp" [];
	"yt_dlp.extractor.cjsw" -> "yt_dlp" [];
	"yt_dlp.extractor.ciscowebex" -> "yt_dlp" [];
	"yt_dlp.extractor.ciscolive" -> "yt_dlp" [];
	"yt_dlp.extractor.cineverse" -> "yt_dlp" [];
	"yt_dlp.extractor.cinetecamilano" -> "yt_dlp" [];
	"yt_dlp.extractor.chzzk" -> "yt_dlp" [];
	"yt_dlp.extractor.chilloutzone" -> "yt_dlp" [];
	"yt_dlp.extractor.chaturbate" -> "yt_dlp" [];
	"yt_dlp.extractor.charlierose" -> "yt_dlp" [];
	"yt_dlp.extractor.cgtn" -> "yt_dlp" [];
	"yt_dlp.extractor.ceskatelevize" -> "urllib" [];
	"yt_dlp.extractor.ceskatelevize" -> "yt_dlp" [];
	"yt_dlp.extractor.cellebrite" -> "yt_dlp" [];
	"yt_dlp.extractor.cda" -> "urllib" [];
	"yt_dlp.extractor.cda" -> "yt_dlp" [];
	"yt_dlp.extractor.cctv" -> "yt_dlp" [];
	"yt_dlp.extractor.ccma" -> "yt_dlp" [];
	"yt_dlp.extractor.ccc" -> "yt_dlp" [];
	"yt_dlp.extractor.cbssports" -> "yt_dlp" [];
	"yt_dlp.extractor.cbsnews" -> "urllib" [];
	"yt_dlp.extractor.cbsnews" -> "yt_dlp" [];
	"yt_dlp.extractor.cbs" -> "yt_dlp" [];
	"yt_dlp.extractor.cbc" -> "urllib" [];
	"yt_dlp.extractor.cbc" -> "yt_dlp" [];
	"yt_dlp.extractor.cartoonnetwork" -> "yt_dlp" [];
	"yt_dlp.extractor.caracoltv" -> "yt_dlp" [];
	"yt_dlp.extractor.canalsurmas" -> "yt_dlp" [];
	"yt_dlp.extractor.canalplus" -> "yt_dlp" [];
	"yt_dlp.extractor.canalc2" -> "yt_dlp" [];
	"yt_dlp.extractor.canalalpha" -> "yt_dlp" [];
	"yt_dlp.extractor.camtasia" -> "urllib" [];
	"yt_dlp.extractor.camtasia" -> "yt_dlp" [];
	"yt_dlp.extractor.camsoda" -> "yt_dlp" [];
	"yt_dlp.extractor.cammodels" -> "yt_dlp" [];
	"yt_dlp.extractor.camfm" -> "yt_dlp" [];
	"yt_dlp.extractor.camdemy" -> "urllib" [];
	"yt_dlp.extractor.camdemy" -> "yt_dlp" [];
	"yt_dlp.extractor.callin" -> "yt_dlp" [];
	"yt_dlp.extractor.caffeinetv" -> "yt_dlp" [];
	"yt_dlp.extractor.c56" -> "yt_dlp" [];
	"yt_dlp.extractor.byutv" -> "yt_dlp" [];
	"yt_dlp.extractor.bunnycdn" -> "yt_dlp" [];
	"yt_dlp.extractor.bundestag" -> "yt_dlp" [];
	"yt_dlp.extractor.brilliantpala" -> "yt_dlp" [];
	"yt_dlp.extractor.brightcove" -> "urllib" [];
	"yt_dlp.extractor.brightcove" -> "yt_dlp" [];
	"yt_dlp.extractor.bravotv" -> "yt_dlp" [];
	"yt_dlp.extractor.brainpop" -> "yt_dlp" [];
	"yt_dlp.extractor.br" -> "yt_dlp" [];
	"yt_dlp.extractor.bpb" -> "yt_dlp" [];
	"yt_dlp.extractor.boxcast" -> "yt_dlp" [];
	"yt_dlp.extractor.box" -> "urllib" [];
	"yt_dlp.extractor.box" -> "yt_dlp" [];
	"yt_dlp.extractor.bostonglobe" -> "yt_dlp" [];
	"yt_dlp.extractor.boosty" -> "urllib" [];
	"yt_dlp.extractor.boosty" -> "yt_dlp" [];
	"yt_dlp.extractor.bongacams" -> "yt_dlp" [];
	"yt_dlp.extractor.bokecc" -> "urllib" [];
	"yt_dlp.extractor.bokecc" -> "yt_dlp" [];
	"yt_dlp.extractor.bluesky" -> "yt_dlp" [];
	"yt_dlp.extractor.blogger" -> "yt_dlp" [];
	"yt_dlp.extractor.blerp" -> "yt_dlp" [];
	"yt_dlp.extractor.bleacherreport" -> "yt_dlp" [];
	"yt_dlp.extractor.blackboardcollaborate" -> "yt_dlp" [];
	"yt_dlp.extractor.bitchute" -> "yt_dlp" [];
	"yt_dlp.extractor.biobiochiletv" -> "yt_dlp" [];
	"yt_dlp.extractor.bilibili" -> "urllib" [];
	"yt_dlp.extractor.bilibili" -> "yt_dlp" [];
	"yt_dlp.extractor.bild" -> "yt_dlp" [];
	"yt_dlp.extractor.bigo" -> "yt_dlp" [];
	"yt_dlp.extractor.bigflix" -> "urllib" [];
	"yt_dlp.extractor.bibeltv" -> "yt_dlp" [];
	"yt_dlp.extractor.bfmtv" -> "yt_dlp" [];
	"yt_dlp.extractor.bfi" -> "yt_dlp" [];
	"yt_dlp.extractor.bet" -> "yt_dlp" [];
	"yt_dlp.extractor.berufetv" -> "yt_dlp" [];
	"yt_dlp.extractor.behindkink" -> "yt_dlp" [];
	"yt_dlp.extractor.beeg" -> "yt_dlp" [];
	"yt_dlp.extractor.beatport" -> "yt_dlp" [];
	"yt_dlp.extractor.beacon" -> "yt_dlp" [];
	"yt_dlp.extractor.bbc" -> "urllib" [];
	"yt_dlp.extractor.bbc" -> "yt_dlp" [];
	"yt_dlp.extractor.bannedvideo" -> "yt_dlp" [];
	"yt_dlp.extractor.bandlab" -> "yt_dlp" [];
	"yt_dlp.extractor.bandcamp" -> "yt_dlp" [];
	"yt_dlp.extractor.bandaichannel" -> "yt_dlp" [];
	"yt_dlp.extractor.banbye" -> "urllib" [];
	"yt_dlp.extractor.banbye" -> "yt_dlp" [];
	"yt_dlp.extractor.baidu" -> "yt_dlp" [];
	"yt_dlp.extractor.axs" -> "yt_dlp" [];
	"yt_dlp.extractor.awaan" -> "urllib" [];
	"yt_dlp.extractor.awaan" -> "yt_dlp" [];
	"yt_dlp.extractor.audius" -> "urllib" [];
	"yt_dlp.extractor.audius" -> "yt_dlp" [];
	"yt_dlp.extractor.audiomack" -> "yt_dlp" [];
	"yt_dlp.extractor.audiodraft" -> "yt_dlp" [];
	"yt_dlp.extractor.audioboom" -> "yt_dlp" [];
	"yt_dlp.extractor.audimedia" -> "yt_dlp" [];
	"yt_dlp.extractor.atvat" -> "yt_dlp" [];
	"yt_dlp.extractor.atresplayer" -> "urllib" [];
	"yt_dlp.extractor.atresplayer" -> "yt_dlp" [];
	"yt_dlp.extractor.asobistage" -> "yt_dlp" [];
	"yt_dlp.extractor.asobichannel" -> "yt_dlp" [];
	"yt_dlp.extractor.arte" -> "yt_dlp" [];
	"yt_dlp.extractor.art19" -> "yt_dlp" [];
	"yt_dlp.extractor.arnes" -> "urllib" [];
	"yt_dlp.extractor.arnes" -> "yt_dlp" [];
	"yt_dlp.extractor.arkena" -> "yt_dlp" [];
	"yt_dlp.extractor.ard" -> "yt_dlp" [];
	"yt_dlp.extractor.arcpublishing" -> "yt_dlp" [];
	"yt_dlp.extractor.archiveorg" -> "urllib" [];
	"yt_dlp.extractor.archiveorg" -> "yt_dlp" [];
	"yt_dlp.extractor.appletrailers" -> "urllib" [];
	"yt_dlp.extractor.appletrailers" -> "yt_dlp" [];
	"yt_dlp.extractor.applepodcasts" -> "yt_dlp" [];
	"yt_dlp.extractor.appleconnect" -> "yt_dlp" [];
	"yt_dlp.extractor.aparat" -> "yt_dlp" [];
	"yt_dlp.extractor.apa" -> "yt_dlp" [];
	"yt_dlp.extractor.aol" -> "yt_dlp" [];
	"yt_dlp.extractor.anvato" -> "yt_dlp" [];
	"yt_dlp.extractor.antenna" -> "urllib" [];
	"yt_dlp.extractor.antenna" -> "yt_dlp" [];
	"yt_dlp.extractor.angel" -> "yt_dlp" [];
	"yt_dlp.extractor.anchorfm" -> "yt_dlp" [];
	"yt_dlp.extractor.americastestkitchen" -> "yt_dlp" [];
	"yt_dlp.extractor.amcnetworks" -> "yt_dlp" [];
	"yt_dlp.extractor.amazonminitv" -> "yt_dlp" [];
	"yt_dlp.extractor.amazon" -> "yt_dlp" [];
	"yt_dlp.extractor.amara" -> "yt_dlp" [];
	"yt_dlp.extractor.amadeustv" -> "yt_dlp" [];
	"yt_dlp.extractor.alura" -> "urllib" [];
	"yt_dlp.extractor.alura" -> "yt_dlp" [];
	"yt_dlp.extractor.altcensored" -> "yt_dlp" [];
	"yt_dlp.extractor.alsace20tv" -> "yt_dlp" [];
	"yt_dlp.extractor.alphaporno" -> "yt_dlp" [];
	"yt_dlp.extractor.allstar" -> "yt_dlp" [];
	"yt_dlp.extractor.allocine" -> "yt_dlp" [];
	"yt_dlp.extractor.aljazeera" -> "yt_dlp" [];
	"yt_dlp.extractor.aliexpress" -> "yt_dlp" [];
	"yt_dlp.extractor.aitube" -> "yt_dlp" [];
	"yt_dlp.extractor.airtv" -> "yt_dlp" [];
	"yt_dlp.extractor.agora" -> "yt_dlp" [];
	"yt_dlp.extractor.afreecatv" -> "yt_dlp" [];
	"yt_dlp.extractor.aeonco" -> "yt_dlp" [];
	"yt_dlp.extractor.aenetworks" -> "yt_dlp" [];
	"yt_dlp.extractor.adultswim" -> "yt_dlp" [];
	"yt_dlp.extractor.adobetv" -> "yt_dlp" [];
	"yt_dlp.extractor.adobeconnect" -> "urllib" [];
	"yt_dlp.extractor.adn" -> "yt_dlp" [];
	"yt_dlp.extractor.acfun" -> "yt_dlp" [];
	"yt_dlp.extractor.acast" -> "yt_dlp" [];
	"yt_dlp.extractor.abematv" -> "urllib" [];
	"yt_dlp.extractor.abematv" -> "yt_dlp" [];
	"yt_dlp.extractor.abcotvs" -> "yt_dlp" [];
	"yt_dlp.extractor.abcnews" -> "yt_dlp" [];
	"yt_dlp.extractor.abc" -> "yt_dlp" [];
	"yt_dlp.downloader.external" -> "yt_dlp" [];
	"yt_dlp.cookies" -> "http" [];
	"yt_dlp.cookies" -> "urllib" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "urllib" [];
	"langchain_community.document_loaders.blob_loaders.cloud_blob_loader" -> "tqdm" [];
	"langchain_community.document_loaders.blackboard" -> "urllib" [];
	"langchain_community.document_loaders.blackboard" -> "langchain_core" [];
	"langchain_community.document_loaders.bilibili" -> "langchain_core" [];
	"langchain_community.document_loaders.bigquery" -> "langchain_core" [];
	"langchain_community.document_loaders.bigquery" -> "google" [];
	"langchain_community.document_loaders.bibtex" -> "langchain_core" [];
	"langchain_community.document_loaders.azure_blob_storage_file" -> "langchain_core" [];
	"langchain_community.document_loaders.azure_blob_storage_container" -> "langchain_core" [];
	"langchain_community.document_loaders.azlyrics" -> "langchain_core" [];
	"langchain_community.document_loaders.athena" -> "langchain_core" [];
	"langchain_community.document_loaders.async_html" -> "concurrent" [];
	"langchain_community.document_loaders.async_html" -> "langchain_core" [];
	"langchain_community.document_loaders.async_html" -> "tqdm" [];
	"langchain_community.document_loaders.astradb" -> "langchain_core" [];
	"langchain_community.document_loaders.assemblyai" -> "langchain_core" [];
	"langchain_community.document_loaders.arxiv" -> "langchain_core" [];
	"langchain_community.document_loaders.arcgis_loader" -> "langchain_core" [];
	"langchain_community.document_loaders.apify_dataset" -> "langchain_core" [];
	"langchain_community.document_loaders.airtable" -> "langchain_core" [];
	"langchain_community.document_loaders.airbyte_json" -> "langchain_core" [];
	"langchain_community.document_loaders.airbyte" -> "langchain_core" [];
	"langchain_community.document_loaders.acreom" -> "langchain_core" [];
	"langchain_core.output_parsers.xml" -> "collections" [];
	"langchain_core.output_parsers.xml" -> "langchain_core" [];
	"defusedxml.sax" -> "xml" [];
	"langchain_core.output_parsers.pydantic" -> "langchain_core" [];
	"langchain_core.output_parsers.list" -> "langchain_core" [];
	"langchain.chains.prompt_selector" -> "langchain_core" [];
	"langchain_community.retrievers.weaviate_hybrid_search" -> "langchain_core" [];
	"langchain_community.retrievers.vespa_retriever" -> "langchain_core" [];
	"langchain_community.retrievers.thirdai_neuraldb" -> "langchain_core" [];
	"langchain_community.retrievers.tfidf" -> "langchain_core" [];
	"langchain_community.retrievers.tavily_search_api" -> "langchain_core" [];
	"langchain_community.retrievers.svm" -> "concurrent" [];
	"langchain_community.retrievers.svm" -> "langchain_core" [];
	"langchain_community.retrievers.remote_retriever" -> "langchain_core" [];
	"langchain_community.retrievers.rememberizer" -> "langchain_core" [];
	"langchain_community.utilities.rememberizer" -> "langchain_core" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "langchain_core" [];
	"langchain_community.retrievers.pubmed" -> "langchain_core" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "langchain_core" [];
	"langchain_community.retrievers.pinecone_hybrid_search" -> "tqdm" [];
	"langchain_community.retrievers.outline" -> "langchain_core" [];
	"langchain_community.utilities.outline" -> "langchain_core" [];
	"langchain_community.retrievers.needle" -> "langchain_core" [];
	"langchain_community.retrievers.nanopq" -> "concurrent" [];
	"langchain_community.retrievers.nanopq" -> "langchain_core" [];
	"langchain_community.retrievers.milvus" -> "langchain_core" [];
	"langchain_community.retrievers.metal" -> "langchain_core" [];
	"langchain_community.retrievers.llama_index" -> "langchain_core" [];
	"langchain_community.retrievers.knn" -> "concurrent" [];
	"langchain_community.retrievers.knn" -> "langchain_core" [];
	"langchain_community.retrievers.kendra" -> "langchain_core" [];
	"langchain_community.retrievers.kay" -> "langchain_core" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "langchain_core" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "google" [];
	"langchain_community.retrievers.google_cloud_documentai_warehouse" -> "langchain_core" [];
	"langchain_community.retrievers.embedchain" -> "langchain_core" [];
	"langchain_community.retrievers.elastic_search_bm25" -> "langchain_core" [];
	"langchain_community.retrievers.dria_index" -> "langchain_core" [];
	"langchain_community.retrievers.dria_index" -> "langchain_community" [];
	"langchain_community.retrievers.docarray" -> "langchain_core" [];
	"langchain_community.retrievers.cohere_rag_retriever" -> "langchain_core" [];
	"langchain_community.retrievers.chatgpt_plugin_retriever" -> "langchain_core" [];
	"langchain_community.retrievers.chaindesk" -> "langchain_core" [];
	"langchain_community.retrievers.breebs" -> "langchain_core" [];
	"langchain_community.retrievers.bm25" -> "langchain_core" [];
	"langchain_community.retrievers.bedrock" -> "langchain_core" [];
	"langchain_community.retrievers.azure_ai_search" -> "langchain_core" [];
	"langchain_community.retrievers.asknews" -> "langchain_core" [];
	"langchain_community.retrievers.arxiv" -> "langchain_core" [];
	"langchain_community.retrievers.arcee" -> "langchain_core" [];
	"langchain_community.utilities.arcee" -> "langchain_core" [];
	"langchain.retrievers.time_weighted_retriever" -> "langchain_core" [];
	"langchain.retrievers.self_query.base" -> "collections" [];
	"langchain.retrievers.self_query.base" -> "langchain_core" [];
	"langchain_community.query_constructors.hanavector" -> "langchain_core" [];
	"langchain_community.query_constructors.weaviate" -> "langchain_core" [];
	"langchain_community.query_constructors.vectara" -> "langchain_core" [];
	"langchain_community.query_constructors.timescalevector" -> "langchain_core" [];
	"langchain_community.query_constructors.supabase" -> "langchain_core" [];
	"langchain_community.query_constructors.redis" -> "langchain_core" [];
	"langchain_community.utilities.redis" -> "urllib" [];
	"langchain_community.query_constructors.qdrant" -> "langchain_core" [];
	"langchain_community.query_constructors.pinecone" -> "langchain_core" [];
	"langchain_community.query_constructors.pgvector" -> "langchain_core" [];
	"langchain_community.query_constructors.opensearch" -> "langchain_core" [];
	"langchain_community.query_constructors.neo4j" -> "langchain_core" [];
	"langchain_community.query_constructors.myscale" -> "langchain_core" [];
	"langchain_community.query_constructors.mongodb_atlas" -> "langchain_core" [];
	"langchain_community.query_constructors.milvus" -> "langchain_core" [];
	"langchain_community.query_constructors.elasticsearch" -> "langchain_core" [];
	"langchain_community.query_constructors.dingo" -> "langchain_core" [];
	"langchain_community.query_constructors.deeplake" -> "langchain_core" [];
	"langchain_community.query_constructors.databricks_vector_search" -> "langchain_core" [];
	"langchain_community.query_constructors.dashvector" -> "langchain_core" [];
	"langchain_community.query_constructors.chroma" -> "langchain_core" [];
	"langchain_community.query_constructors.astradb" -> "langchain_core" [];
	"langchain.retrievers.re_phraser" -> "langchain_core" [];
	"langchain.retrievers.parent_document_retriever" -> "collections" [];
	"langchain.retrievers.parent_document_retriever" -> "langchain_core" [];
	"langchain.retrievers.multi_vector" -> "langchain_core" [];
	"langchain.storage._lc_store" -> "langchain_core" [];
	"langchain.storage" -> "langchain_core" [];
	"langchain.storage" -> "langchain_community" [];
	"langchain_community.storage.upstash_redis" -> "langchain_core" [];
	"langchain_community.storage.sql" -> "langchain_core" [];
	"langchain_community.storage.redis" -> "langchain_core" [];
	"langchain_community.storage.mongodb" -> "langchain_core" [];
	"langchain_community.storage.cassandra" -> "langchain_core" [];
	"langchain_community.storage.astradb" -> "langchain_core" [];
	"langchain.storage.file_system" -> "collections" [];
	"langchain.storage.file_system" -> "langchain_core" [];
	"langchain.storage.exceptions" -> "langchain_core" [];
	"langchain.storage.encoder_backed" -> "collections" [];
	"langchain.storage.encoder_backed" -> "langchain_core" [];
	"langchain.retrievers.multi_query" -> "collections" [];
	"langchain.retrievers.multi_query" -> "langchain_core" [];
	"langchain.retrievers.merger_retriever" -> "langchain_core" [];
	"langchain.retrievers.ensemble" -> "langchain_core" [];
	"langchain.retrievers.contextual_compression" -> "langchain_core" [];
	"langchain.retrievers.document_compressors.base" -> "collections" [];
	"langchain.retrievers.document_compressors.base" -> "langchain_core" [];
	"langchain.retrievers.document_compressors.listwise_rerank" -> "collections" [];
	"langchain.retrievers.document_compressors.listwise_rerank" -> "langchain_core" [];
	"langchain.retrievers.document_compressors.embeddings_filter" -> "collections" [];
	"langchain.retrievers.document_compressors.embeddings_filter" -> "langchain_core" [];
	"langchain.retrievers.document_compressors.cross_encoder_rerank" -> "collections" [];
	"langchain.retrievers.document_compressors.cross_encoder_rerank" -> "langchain_core" [];
	"langchain.retrievers.document_compressors.cohere_rerank" -> "collections" [];
	"langchain.retrievers.document_compressors.cohere_rerank" -> "langchain_core" [];
	"langchain.retrievers.document_compressors.chain_filter" -> "collections" [];
	"langchain.retrievers.document_compressors.chain_filter" -> "langchain_core" [];
	"langchain.retrievers.document_compressors.chain_filter" -> "langchain" [];
	"langchain.retrievers.document_compressors.chain_extract" -> "collections" [];
	"langchain.retrievers.document_compressors.chain_extract" -> "langchain_core" [];
	"langchain._api.module_import" -> "langchain_core" [];
	"langchain_community.query_constructors.tencentvectordb" -> "langchain_core" [];
	"langchain.chains.query_constructor.parser" -> "collections" [];
	"langchain.chains.query_constructor.parser" -> "langchain_core" [];
	"langchain.chains.query_constructor.base" -> "collections" [];
	"langchain.chains.query_constructor.base" -> "langchain_core" [];
	"langchain.chains.query_constructor.prompt" -> "langchain_core" [];
	"langchain_core.prompts.few_shot" -> "langchain_core" [];
	"langchain_core.example_selectors.semantic_similarity" -> "langchain_core" [];
	"langchain_core.example_selectors.base" -> "langchain_core" [];
	"langchain_community.vectorstores.tair" -> "langchain_core" [];
	"langchain_community.vectorstores.tablestore" -> "langchain_core" [];
	"langchain_community.vectorstores.surrealdb" -> "langchain_core" [];
	"langchain_community.vectorstores.supabase" -> "langchain_core" [];
	"langchain_community.vectorstores.starrocks" -> "langchain_core" [];
	"langchain_community.vectorstores.sqlitevss" -> "langchain_core" [];
	"langchain_community.vectorstores.sqlitevec" -> "langchain_core" [];
	"langchain_community.vectorstores.sklearn" -> "langchain_core" [];
	"langchain_community.vectorstores.singlestoredb" -> "langchain_core" [];
	"langchain_community.vectorstores.singlestoredb" -> "sqlalchemy" [];
	"langchain_community.vectorstores.semadb" -> "langchain_core" [];
	"langchain_community.vectorstores.scann" -> "langchain_core" [];
	"langchain_community.vectorstores.rocksetdb" -> "langchain_core" [];
	"langchain_community.vectorstores.relyt" -> "langchain_core" [];
	"langchain_community.vectorstores.redis.base" -> "langchain_core" [];
	"langchain_community.vectorstores.qdrant" -> "langchain_core" [];
	"langchain_community.vectorstores.pinecone" -> "langchain_core" [];
	"langchain_community.vectorstores.pgvector" -> "langchain_core" [];
	"langchain_community.vectorstores.pgembedding" -> "langchain_core" [];
	"langchain_community.vectorstores.pathway" -> "langchain_core" [];
	"langchain_community.vectorstores.oraclevs" -> "langchain_core" [];
	"langchain_community.vectorstores.opensearch_vector_search" -> "langchain_core" [];
	"langchain_community.vectorstores.neo4j_vector" -> "langchain_core" [];
	"langchain_community.vectorstores.neo4j_vector" -> "langchain_community" [];
	"langchain_community.graphs.graph_document" -> "langchain_core" [];
	"langchain_community.graphs.neo4j_graph" -> "langchain_core" [];
	"langchain_community.graphs.memgraph_graph" -> "langchain_core" [];
	"langchain_community.graphs.gremlin_graph" -> "langchain_core" [];
	"langchain_community.graphs.falkordb_graph" -> "langchain_core" [];
	"langchain_community.vectorstores.myscale" -> "langchain_core" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "langchain_core" [];
	"langchain_community.vectorstores.mongodb_atlas" -> "importlib" [];
	"langchain_community.vectorstores.momento_vector_index" -> "langchain_core" [];
	"langchain_community.vectorstores.milvus" -> "langchain_core" [];
	"langchain_community.vectorstores.meilisearch" -> "langchain_core" [];
	"langchain_community.vectorstores.matching_engine" -> "langchain_core" [];
	"langchain_community.vectorstores.matching_engine" -> "google" [];
	"langchain_community.vectorstores.matching_engine" -> "langchain_community" [];
	"langchain.chains.hyde.base" -> "langchain_core" [];
	"langchain_community.embeddings.zhipuai" -> "langchain_core" [];
	"langchain_community.embeddings.yandex" -> "langchain_core" [];
	"langchain_community.embeddings.xinference" -> "langchain_core" [];
	"langchain_community.embeddings.voyageai" -> "langchain_core" [];
	"langchain_community.embeddings.voyageai" -> "tqdm" [];
	"langchain_community.embeddings.volcengine" -> "langchain_core" [];
	"langchain_community.embeddings.vertexai" -> "concurrent" [];
	"langchain_community.embeddings.vertexai" -> "langchain_core" [];
	"langchain_community.embeddings.titan_takeoff" -> "langchain_core" [];
	"langchain_community.embeddings.textembed" -> "concurrent" [];
	"langchain_community.embeddings.textembed" -> "langchain_core" [];
	"langchain_community.embeddings.tensorflow_hub" -> "langchain_core" [];
	"langchain_community.embeddings.sparkllm" -> "urllib" [];
	"langchain_community.embeddings.sparkllm" -> "wsgiref" [];
	"langchain_community.embeddings.sparkllm" -> "langchain_core" [];
	"langchain_community.embeddings.spacy_embeddings" -> "importlib" [];
	"langchain_community.embeddings.spacy_embeddings" -> "langchain_core" [];
	"langchain_community.embeddings.solar" -> "langchain_core" [];
	"langchain_community.embeddings.self_hosted" -> "langchain_core" [];
	"langchain_community.llms.self_hosted" -> "importlib" [];
	"langchain_community.llms.self_hosted" -> "langchain_core" [];
	"langchain_community.embeddings.sambanova" -> "langchain_core" [];
	"langchain_community.embeddings.sagemaker_endpoint" -> "langchain_core" [];
	"langchain_community.llms.sagemaker_endpoint" -> "langchain_core" [];
	"langchain_community.embeddings.premai" -> "langchain_core" [];
	"langchain_community.embeddings.ovhcloud" -> "langchain_core" [];
	"langchain_community.embeddings.oracleai" -> "langchain_core" [];
	"langchain_community.embeddings.optimum_intel" -> "langchain_core" [];
	"langchain_community.embeddings.openvino" -> "langchain_core" [];
	"langchain_community.embeddings.openai" -> "langchain_core" [];
	"langchain_community.embeddings.openai" -> "tqdm" [];
	"langchain_community.embeddings.ollama" -> "langchain_core" [];
	"langchain_community.embeddings.octoai_embeddings" -> "langchain_core" [];
	"langchain_community.embeddings.oci_generative_ai" -> "langchain_core" [];
	"langchain_community.embeddings.nlpcloud" -> "langchain_core" [];
	"langchain_community.embeddings.nemo" -> "langchain_core" [];
	"langchain_community.embeddings.naver" -> "http" [];
	"langchain_community.embeddings.naver" -> "langchain_core" [];
	"langchain_community.embeddings.mosaicml" -> "langchain_core" [];
	"langchain_community.embeddings.modelscope_hub" -> "langchain_core" [];
	"langchain_community.embeddings.model2vec" -> "langchain_core" [];
	"langchain_community.embeddings.mlflow_gateway" -> "langchain_core" [];
	"langchain_community.embeddings.mlflow" -> "urllib" [];
	"langchain_community.embeddings.mlflow" -> "langchain_core" [];
	"langchain_community.embeddings.minimax" -> "langchain_core" [];
	"langchain_community.embeddings.localai" -> "langchain_core" [];
	"langchain_community.embeddings.llm_rails" -> "langchain_core" [];
	"langchain_community.embeddings.llamafile" -> "langchain_core" [];
	"langchain_community.embeddings.llamacpp" -> "langchain_core" [];
	"langchain_community.embeddings.laser" -> "langchain_core" [];
	"langchain_community.embeddings.johnsnowlabs" -> "langchain_core" [];
	"langchain_community.embeddings.jina" -> "urllib" [];
	"langchain_community.embeddings.jina" -> "langchain_core" [];
	"langchain_community.embeddings.javelin_ai_gateway" -> "langchain_core" [];
	"langchain_community.embeddings.itrex" -> "importlib" [];
	"langchain_community.embeddings.itrex" -> "langchain_core" [];
	"langchain_community.embeddings.ipex_llm" -> "langchain_core" [];
	"langchain_community.embeddings.infinity_local" -> "langchain_core" [];
	"langchain_community.embeddings.infinity" -> "concurrent" [];
	"langchain_community.embeddings.infinity" -> "langchain_core" [];
	"langchain_community.embeddings.hunyuan" -> "langchain_core" [];
	"langchain_community.embeddings.huggingface_hub" -> "langchain_core" [];
	"langchain_community.embeddings.huggingface" -> "langchain_core" [];
	"langchain_community.embeddings.gradient_ai" -> "langchain_core" [];
	"langchain_community.embeddings.gradient_ai" -> "packaging" [];
	"langchain_community.embeddings.gpt4all" -> "langchain_core" [];
	"langchain_community.embeddings.google_palm" -> "langchain_core" [];
	"langchain_community.embeddings.gigachat" -> "langchain_core" [];
	"langchain_community.embeddings.fastembed" -> "langchain_core" [];
	"langchain_community.embeddings.fake" -> "langchain_core" [];
	"langchain_community.embeddings.ernie" -> "langchain_core" [];
	"langchain_community.embeddings.embaas" -> "langchain_core" [];
	"langchain_community.embeddings.elasticsearch" -> "langchain_core" [];
	"langchain_community.embeddings.edenai" -> "langchain_core" [];
	"langchain_community.embeddings.deepinfra" -> "langchain_core" [];
	"langchain_community.embeddings.databricks" -> "urllib" [];
	"langchain_community.embeddings.databricks" -> "langchain_core" [];
	"langchain_community.embeddings.dashscope" -> "langchain_core" [];
	"langchain_community.embeddings.dashscope" -> "requests" [];
	"langchain_community.embeddings.cohere" -> "langchain_core" [];
	"langchain_community.embeddings.clova" -> "langchain_core" [];
	"langchain_community.embeddings.clarifai" -> "langchain_core" [];
	"langchain_community.embeddings.bookend" -> "langchain_core" [];
	"langchain_community.embeddings.bedrock" -> "langchain_core" [];
	"langchain_community.embeddings.baidu_qianfan_endpoint" -> "langchain_core" [];
	"langchain_community.embeddings.baichuan" -> "langchain_core" [];
	"langchain_community.embeddings.azure_openai" -> "langchain_core" [];
	"langchain_community.embeddings.awa" -> "langchain_core" [];
	"langchain_community.embeddings.ascend" -> "langchain_core" [];
	"langchain_community.embeddings.anyscale" -> "langchain_core" [];
	"langchain_community.embeddings.aleph_alpha" -> "langchain_core" [];
	"langchain_community.vectorstores.marqo" -> "langchain_core" [];
	"langchain_community.vectorstores.manticore_search" -> "langchain_core" [];
	"langchain_community.vectorstores.llm_rails" -> "langchain_core" [];
	"langchain_community.vectorstores.lantern" -> "langchain_core" [];
	"langchain_community.vectorstores.lancedb" -> "langchain_core" [];
	"langchain_community.vectorstores.kinetica" -> "langchain_core" [];
	"langchain_community.vectorstores.kdbai" -> "langchain_core" [];
	"langchain_community.vectorstores.inmemory" -> "langchain_core" [];
	"langchain_community.vectorstores.infinispanvs" -> "http" [];
	"langchain_community.vectorstores.infinispanvs" -> "langchain_core" [];
	"langchain_community.vectorstores.hologres" -> "langchain_core" [];
	"langchain_community.vectorstores.hanavector" -> "importlib" [];
	"langchain_community.vectorstores.hanavector" -> "langchain_core" [];
	"langchain_community.vectorstores.faiss" -> "langchain_core" [];
	"langchain_community.vectorstores.epsilla" -> "langchain_core" [];
	"langchain_community.vectorstores.elasticsearch" -> "langchain_core" [];
	"langchain_community.vectorstores.elastic_vector_search" -> "langchain_core" [];
	"langchain_community.vectorstores.ecloud_vector_search" -> "langchain_core" [];
	"langchain_community.vectorstores.duckdb" -> "langchain_core" [];
	"langchain_community.vectorstores.documentdb" -> "langchain_core" [];
	"langchain_community.vectorstores.docarray.in_memory" -> "langchain_core" [];
	"langchain_community.vectorstores.docarray.base" -> "langchain_core" [];
	"langchain_community.vectorstores.docarray.hnsw" -> "langchain_core" [];
	"langchain_community.vectorstores.dingo" -> "langchain_core" [];
	"langchain_community.vectorstores.deeplake" -> "langchain_core" [];
	"langchain_community.vectorstores.databricks_vector_search" -> "langchain_core" [];
	"langchain_community.vectorstores.dashvector" -> "langchain_core" [];
	"langchain_community.vectorstores.couchbase" -> "langchain_core" [];
	"langchain_community.vectorstores.clickhouse" -> "langchain_core" [];
	"langchain_community.vectorstores.clarifai" -> "concurrent" [];
	"langchain_community.vectorstores.clarifai" -> "langchain_core" [];
	"langchain_community.vectorstores.clarifai" -> "google" [];
	"langchain_community.vectorstores.chroma" -> "langchain_core" [];
	"langchain_community.vectorstores.cassandra" -> "importlib" [];
	"langchain_community.vectorstores.cassandra" -> "packaging" [];
	"langchain_community.vectorstores.cassandra" -> "langchain_core" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "langchain_core" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "google" [];
	"langchain_community.vectorstores.baiduvectordb" -> "langchain_core" [];
	"langchain_community.vectorstores.baiducloud_vector_search" -> "langchain_core" [];
	"langchain_community.vectorstores.bagel" -> "langchain_core" [];
	"langchain_community.vectorstores.azuresearch" -> "langchain_core" [];
	"langchain_community.vectorstores.azure_cosmos_db_no_sql" -> "langchain_core" [];
	"langchain_community.vectorstores.azure_cosmos_db" -> "langchain_core" [];
	"langchain_community.vectorstores.awadb" -> "langchain_core" [];
	"langchain_community.vectorstores.atlas" -> "langchain_core" [];
	"langchain_community.vectorstores.astradb" -> "concurrent" [];
	"langchain_community.vectorstores.astradb" -> "langchain_core" [];
	"langchain_community.vectorstores.aperturedb" -> "langchain_core" [];
	"langchain_core.indexing.base" -> "langchain_core" [];
	"langchain_core.indexing.base" -> "collections" [];
	"langchain_core.indexing.api" -> "collections" [];
	"langchain_core.indexing.api" -> "langchain_core" [];
	"langchain_community.vectorstores.apache_doris" -> "langchain_core" [];
	"langchain_community.vectorstores.annoy" -> "langchain_core" [];
	"langchain_community.vectorstores.analyticdb" -> "langchain_core" [];
	"langchain_community.vectorstores.alibabacloud_opensearch" -> "langchain_core" [];
	"langchain_community.vectorstores.aerospike" -> "langchain_core" [];
	"langchain_core.vectorstores.in_memory" -> "langchain_core" [];
	"langchain_core.vectorstores.in_memory" -> "collections" [];
	"langchain_core.vectorstores.base" -> "langchain_core" [];
	"langchain_core.vectorstores.base" -> "collections" [];
	"langchain_community.utilities.twilio" -> "langchain_core" [];
	"langchain_community.utilities.serpapi" -> "langchain_core" [];
	"langchain_community.utilities.passio_nutrition_ai" -> "langchain_core" [];
	"langchain_community.utilities.oracleai" -> "langchain_core" [];
	"langchain_community.utilities.nvidia_riva" -> "langchain_core" [];
	"langchain_community.utilities.infobip" -> "langchain_core" [];
	"requests_toolbelt.streaming_iterator" -> "requests" [];
	"requests_toolbelt.multipart.encoder" -> "requests_toolbelt" [];
	"requests_toolbelt.multipart.decoder" -> "email" [];
	"requests_toolbelt.multipart.decoder" -> "requests" [];
	"requests_toolbelt.adapters.source" -> "requests" [];
	"requests_toolbelt.adapters.source" -> "requests_toolbelt" [];
	"requests_toolbelt.adapters.ssl" -> "requests_toolbelt" [];
	"langchain_community.utilities.google_trends" -> "langchain_core" [];
	"langchain_community.utilities.google_scholar" -> "langchain_core" [];
	"langchain_community.utilities.google_lens" -> "langchain_core" [];
	"langchain_community.utilities.google_jobs" -> "langchain_core" [];
	"langchain_community.utilities.google_finance" -> "langchain_core" [];
	"langchain_community.utilities.golden_query" -> "langchain_core" [];
	"langchain_community.utilities.apify" -> "langchain_core" [];
	"langchain_community.utilities.apify" -> "langchain_community" [];
	"langchain_community.utilities.alpha_vantage" -> "langchain_core" [];
	"langchain_core.prompts.pipeline" -> "langchain_core" [];
	"langchain_community.llms.huggingface_pipeline" -> "importlib" [];
	"langchain_community.llms.huggingface_pipeline" -> "langchain_core" [];
	"langchain_community.llms.yi" -> "langchain_core" [];
	"langchain_community.llms.you" -> "langchain_core" [];
	"langchain_community.llms.sparkllm" -> "urllib" [];
	"langchain_community.llms.sparkllm" -> "wsgiref" [];
	"langchain_community.llms.sparkllm" -> "langchain_core" [];
	"langchain_community.llms.yuan2" -> "langchain_core" [];
	"langchain_community.llms.xinference" -> "langchain_core" [];
	"langchain_community.llms.writer" -> "langchain_core" [];
	"langchain_community.llms.watsonxllm" -> "langchain_core" [];
	"langchain_community.llms.vllm" -> "langchain_core" [];
	"langchain_community.llms.together" -> "langchain_core" [];
	"langchain_community.llms.titan_takeoff" -> "langchain_core" [];
	"langchain_community.llms.textgen" -> "langchain_core" [];
	"langchain_community.llms.symblai_nebula" -> "langchain_core" [];
	"langchain_community.llms.stochasticai" -> "langchain_core" [];
	"langchain_community.llms.self_hosted_hugging_face" -> "importlib" [];
	"langchain_community.llms.self_hosted_hugging_face" -> "langchain_core" [];
	"langchain_community.llms.sambanova" -> "langchain_core" [];
	"langchain_community.llms.rwkv" -> "langchain_core" [];
	"langchain_community.llms.replicate" -> "langchain_core" [];
	"langchain_community.llms.promptlayer_openai" -> "langchain_core" [];
	"langchain_community.llms.predictionguard" -> "langchain_core" [];
	"langchain_community.llms.predibase" -> "langchain_core" [];
	"langchain_community.llms.pipelineai" -> "langchain_core" [];
	"langchain_community.llms.petals" -> "langchain_core" [];
	"langchain_community.llms.pai_eas_endpoint" -> "langchain_core" [];
	"langchain_community.llms.outlines" -> "importlib" [];
	"langchain_community.llms.outlines" -> "langchain_core" [];
	"langchain_community.llms.openlm" -> "langchain_core" [];
	"langchain_community.llms.opaqueprompts" -> "langchain_core" [];
	"langchain_community.llms.octoai_endpoint" -> "langchain_core" [];
	"langchain_community.llms.nlpcloud" -> "langchain_core" [];
	"langchain_community.llms.mosaicml" -> "langchain_core" [];
	"langchain_community.llms.modal" -> "langchain_core" [];
	"langchain_community.llms.mlflow_ai_gateway" -> "langchain_core" [];
	"langchain_community.llms.mlflow" -> "urllib" [];
	"langchain_community.llms.mlflow" -> "langchain_core" [];
	"langchain_community.llms.minimax" -> "langchain_core" [];
	"langchain_community.llms.manifest" -> "langchain_core" [];
	"langchain_community.llms.llamafile" -> "langchain_core" [];
	"langchain_community.llms.llamacpp" -> "langchain_core" [];
	"langchain_community.llms.konko" -> "langchain_core" [];
	"langchain_community.llms.koboldai" -> "langchain_core" [];
	"langchain_community.llms.javelin_ai_gateway" -> "langchain_core" [];
	"langchain_community.llms.ipex_llm" -> "langchain_core" [];
	"langchain_community.llms.human" -> "langchain_core" [];
	"langchain_community.llms.gradient_ai" -> "concurrent" [];
	"langchain_community.llms.gradient_ai" -> "langchain_core" [];
	"langchain_community.llms.gpt4all" -> "langchain_core" [];
	"langchain_community.llms.gooseai" -> "langchain_core" [];
	"langchain_community.llms.google_palm" -> "langchain_core" [];
	"langchain_community.llms.forefrontai" -> "langchain_core" [];
	"langchain_community.llms.fireworks" -> "concurrent" [];
	"langchain_community.llms.fireworks" -> "langchain_core" [];
	"langchain_community.llms.fake" -> "langchain_core" [];
	"langchain_community.llms.edenai" -> "langchain_core" [];
	"langchain_community.llms.deepsparse" -> "langchain_core" [];
	"langchain_community.llms.deepinfra" -> "langchain_core" [];
	"langchain_community.llms.databricks" -> "langchain_core" [];
	"langchain_community.llms.ctranslate2" -> "langchain_core" [];
	"langchain_community.llms.ctransformers" -> "langchain_core" [];
	"langchain_community.llms.clarifai" -> "langchain_core" [];
	"langchain_community.llms.chatglm" -> "langchain_core" [];
	"langchain_community.llms.cerebriumai" -> "langchain_core" [];
	"langchain_community.llms.bittensor" -> "http" [];
	"langchain_community.llms.bittensor" -> "langchain_core" [];
	"langchain_community.llms.beam" -> "langchain_core" [];
	"langchain_community.llms.baseten" -> "langchain_core" [];
	"langchain_community.llms.bananadev" -> "langchain_core" [];
	"langchain_community.llms.baidu_qianfan_endpoint" -> "langchain_core" [];
	"langchain_community.llms.baichuan" -> "langchain_core" [];
	"langchain_community.llms.azureml_endpoint" -> "urllib" [];
	"langchain_community.llms.azureml_endpoint" -> "langchain_core" [];
	"langchain_community.llms.aviary" -> "langchain_core" [];
	"langchain_community.llms.arcee" -> "langchain_core" [];
	"langchain_community.llms.aphrodite" -> "langchain_core" [];
	"langchain_community.llms.anyscale" -> "langchain_core" [];
	"langchain_community.llms.amazon_api_gateway" -> "langchain_core" [];
	"langchain_community.llms.aleph_alpha" -> "langchain_core" [];
	"langchain_community.llms.ai21" -> "langchain_core" [];
	"langchain_community.docstore.wikipedia" -> "langchain_core" [];
	"langchain_community.docstore.arbitrary_fn" -> "langchain_core" [];
	"langchain.agents" -> "langchain_core" [];
	"langchain_community.agent_toolkits.sql.base" -> "langchain_core" [];
	"langchain_community.agent_toolkits.sql.base" -> "langchain" [];
	"langchain_community.agent_toolkits.zapier.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.steam.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.spark_sql.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.slack.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.powerbi.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.polygon.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.playwright.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.openapi.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.office365.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.nla.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.nla.tool" -> "langchain_core" [];
	"langchain_community.chains.openapi.chain" -> "langchain_core" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "importlib" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "langchain_core" [];
	"langchain_community.chains.pebblo_retrieval.utilities" -> "langchain_core" [];
	"langchain_community.chains.pebblo_retrieval.enforcement_filters" -> "langchain_core" [];
	"langchain.chains.api.openapi.response_chain" -> "langchain" [];
	"langchain_community.chains.openapi.response_chain" -> "langchain_core" [];
	"langchain.chains.api.openapi.prompts" -> "langchain" [];
	"langchain.chains.api.openapi.requests_chain" -> "langchain" [];
	"langchain_community.chains.openapi.requests_chain" -> "langchain_core" [];
	"langchain_community.agent_toolkits.nasa.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.multion.toolkit" -> "langchain_core" [];
	"langchain_community.tools.multion.update_session" -> "langchain_core" [];
	"langchain_community.tools.multion.create_session" -> "langchain_core" [];
	"langchain_community.tools.multion.close_session" -> "langchain_core" [];
	"langchain_community.agent_toolkits.json.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.jira.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.gmail.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.file_management.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.connery.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.cogniswitch.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.cassandra_database.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.azure_cognitive_services" -> "langchain_core" [];
	"langchain_community.agent_toolkits.azure_ai_services" -> "langchain_core" [];
	"langchain_community.agent_toolkits.amadeus.toolkit" -> "langchain_core" [];
	"langchain_community.tools.amadeus.flight_search" -> "langchain_core" [];
	"langchain_community.tools.amadeus.base" -> "langchain_core" [];
	"langchain_community.tools.amadeus.closest_airport" -> "langchain_core" [];
	"langchain_community.tools.amadeus.closest_airport" -> "langchain_community" [];
	"langchain_community.agent_toolkits.ainetwork.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.sql.toolkit" -> "langchain_core" [];
	"langchain_community.agent_toolkits.spark_sql.base" -> "langchain_core" [];
	"langchain_community.agent_toolkits.powerbi.chat_base" -> "langchain_core" [];
	"langchain_community.agent_toolkits.powerbi.chat_base" -> "langchain" [];
	"langchain.memory" -> "langchain_community" [];
	"langchain_community.memory.zep_memory" -> "langchain_community" [];
	"langchain_community.memory.zep_memory" -> "langchain" [];
	"langchain_community.memory.motorhead_memory" -> "langchain_core" [];
	"langchain_community.memory.kg" -> "langchain_core" [];
	"langchain_community.memory.kg" -> "langchain_community" [];
	"langchain_community.chat_message_histories.zep_cloud" -> "langchain_core" [];
	"langchain_community.chat_message_histories.zep" -> "langchain_core" [];
	"langchain_community.chat_message_histories.xata" -> "langchain_core" [];
	"langchain_community.chat_message_histories.upstash_redis" -> "langchain_core" [];
	"langchain_community.chat_message_histories.tidb" -> "langchain_core" [];
	"langchain_community.chat_message_histories.streamlit" -> "langchain_core" [];
	"streamlit.components.v1.component_registry" -> "streamlit" [];
	"streamlit.runtime.scriptrunner_utils.script_run_context" -> "streamlit" [];
	"streamlit.runtime.uploaded_file_manager" -> "collections" [];
	"streamlit.proto.Common_pb2" -> "google" [];
	"streamlit.proto.AuthRedirect_pb2" -> "google" [];
	"streamlit.proto.SessionEvent_pb2" -> "google" [];
	"streamlit.proto.ParentMessage_pb2" -> "google" [];
	"streamlit.proto.PagesChanged_pb2" -> "google" [];
	"streamlit.proto.PageNotFound_pb2" -> "google" [];
	"streamlit.proto.PageInfo_pb2" -> "google" [];
	"streamlit.proto.PageConfig_pb2" -> "google" [];
	"streamlit.proto.NewSession_pb2" -> "google" [];
	"streamlit.proto.SessionStatus_pb2" -> "google" [];
	"streamlit.proto.Navigation_pb2" -> "google" [];
	"streamlit.proto.AppPage_pb2" -> "google" [];
	"streamlit.proto.Logo_pb2" -> "google" [];
	"streamlit.proto.GitInfo_pb2" -> "google" [];
	"streamlit.proto.Delta_pb2" -> "google" [];
	"streamlit.proto.Element_pb2" -> "google" [];
	"streamlit.proto.Heading_pb2" -> "google" [];
	"streamlit.proto.Video_pb2" -> "google" [];
	"streamlit.proto.VegaLiteChart_pb2" -> "google" [];
	"streamlit.proto.NamedDataSet_pb2" -> "google" [];
	"streamlit.proto.Toast_pb2" -> "google" [];
	"streamlit.proto.TimeInput_pb2" -> "google" [];
	"streamlit.proto.TextInput_pb2" -> "google" [];
	"streamlit.proto.TextArea_pb2" -> "google" [];
	"streamlit.proto.Text_pb2" -> "google" [];
	"streamlit.proto.Slider_pb2" -> "google" [];
	"streamlit.proto.Skeleton_pb2" -> "google" [];
	"streamlit.proto.Selectbox_pb2" -> "google" [];
	"streamlit.proto.Radio_pb2" -> "google" [];
	"streamlit.proto.Spinner_pb2" -> "google" [];
	"streamlit.proto.Snow_pb2" -> "google" [];
	"streamlit.proto.Progress_pb2" -> "google" [];
	"streamlit.proto.Components_pb2" -> "google" [];
	"streamlit.proto.PlotlyChart_pb2" -> "google" [];
	"streamlit.proto.PageLink_pb2" -> "google" [];
	"streamlit.proto.MultiSelect_pb2" -> "google" [];
	"streamlit.proto.Metric_pb2" -> "google" [];
	"streamlit.proto.Markdown_pb2" -> "google" [];
	"streamlit.proto.NumberInput_pb2" -> "google" [];
	"streamlit.proto.LinkButton_pb2" -> "google" [];
	"streamlit.proto.Json_pb2" -> "google" [];
	"streamlit.proto.Image_pb2" -> "google" [];
	"streamlit.proto.IFrame_pb2" -> "google" [];
	"streamlit.proto.Html_pb2" -> "google" [];
	"streamlit.proto.GraphVizChart_pb2" -> "google" [];
	"streamlit.proto.FileUploader_pb2" -> "google" [];
	"streamlit.proto.Favicon_pb2" -> "google" [];
	"streamlit.proto.Exception_pb2" -> "google" [];
	"streamlit.proto.Empty_pb2" -> "google" [];
	"streamlit.proto.DocString_pb2" -> "google" [];
	"streamlit.proto.DeckGlJsonChart_pb2" -> "google" [];
	"streamlit.proto.DateInput_pb2" -> "google" [];
	"streamlit.proto.DataFrame_pb2" -> "google" [];
	"streamlit.proto.ColorPicker_pb2" -> "google" [];
	"streamlit.proto.Code_pb2" -> "google" [];
	"streamlit.proto.Checkbox_pb2" -> "google" [];
	"streamlit.proto.ChatInput_pb2" -> "google" [];
	"streamlit.proto.CameraInput_pb2" -> "google" [];
	"streamlit.proto.DownloadButton_pb2" -> "google" [];
	"streamlit.proto.ButtonGroup_pb2" -> "google" [];
	"streamlit.proto.Button_pb2" -> "google" [];
	"streamlit.proto.BokehChart_pb2" -> "google" [];
	"streamlit.proto.ArrowVegaLiteChart_pb2" -> "google" [];
	"streamlit.proto.ArrowNamedDataSet_pb2" -> "google" [];
	"streamlit.proto.Balloons_pb2" -> "google" [];
	"streamlit.proto.AudioInput_pb2" -> "google" [];
	"streamlit.proto.LabelVisibilityMessage_pb2" -> "google" [];
	"streamlit.proto.Audio_pb2" -> "google" [];
	"streamlit.proto.Arrow_pb2" -> "google" [];
	"streamlit.proto.Alert_pb2" -> "google" [];
	"streamlit.proto.WidthConfig_pb2" -> "google" [];
	"streamlit.proto.Block_pb2" -> "google" [];
	"streamlit.proto.AutoRerun_pb2" -> "google" [];
	"streamlit.proto.openmetrics_data_model_pb2" -> "google" [];
	"streamlit.proto.WidgetStates_pb2" -> "google" [];
	"streamlit.runtime.pages_manager" -> "streamlit" [];
	"streamlit.runtime.scriptrunner_utils.exceptions" -> "streamlit" [];
	"streamlit.elements.lib.layout_utils" -> "streamlit" [];
	"streamlit.proto.PageProfile_pb2" -> "google" [];
	"streamlit.proto.ForwardMsg_pb2" -> "google" [];
	"streamlit.proto.ClientState_pb2" -> "google" [];
	"streamlit.proto.BackMsg_pb2" -> "google" [];
	"streamlit.watcher.event_based_path_watcher" -> "streamlit" [];
	"streamlit.watcher.polling_path_watcher" -> "concurrent" [];
	"streamlit.watcher.polling_path_watcher" -> "streamlit" [];
	"streamlit.watcher.util" -> "streamlit" [];
	"streamlit.runtime.runtime" -> "streamlit" [];
	"streamlit.runtime.runtime" -> "collections" [];
	"streamlit.runtime.websocket_session_manager" -> "streamlit" [];
	"streamlit.runtime.memory_session_storage" -> "collections" [];
	"streamlit.runtime.media_file_manager" -> "streamlit" [];
	"streamlit.runtime.caching.storage.in_memory_cache_storage_wrapper" -> "streamlit" [];
	"streamlit.runtime.caching.hashing" -> "PIL" [];
	"streamlit.runtime.caching.cached_message_replay" -> "collections" [];
	"streamlit.components.v1.custom_component" -> "streamlit" [];
	"streamlit.elements.lib.utils" -> "collections" [];
	"streamlit.elements.lib.policies" -> "collections" [];
	"streamlit.elements.lib.pandas_styler_utils" -> "collections" [];
	"streamlit.commands.page_config" -> "collections" [];
	"streamlit.commands.page_config" -> "streamlit" [];
	"streamlit.elements.lib.image_utils" -> "collections" [];
	"streamlit.elements.spinner" -> "collections" [];
	"streamlit.navigation.page" -> "streamlit" [];
	"streamlit.commands.navigation" -> "collections" [];
	"streamlit.commands.echo" -> "collections" [];
	"streamlit.elements.lib.column_types" -> "collections" [];
	"streamlit.commands.experimental_query_params" -> "urllib" [];
	"streamlit.commands.experimental_query_params" -> "streamlit" [];
	"streamlit.runtime.state.query_params" -> "collections" [];
	"streamlit.runtime.state.query_params" -> "streamlit" [];
	"streamlit.user_info" -> "collections" [];
	"streamlit.auth_util" -> "collections" [];
	"streamlit.runtime.state.session_state_proxy" -> "collections" [];
	"streamlit.runtime.state.session_state" -> "collections" [];
	"streamlit.runtime.state.safe_session_state" -> "collections" [];
	"streamlit.runtime.state.query_params_proxy" -> "collections" [];
	"streamlit.runtime.context" -> "collections" [];
	"streamlit.runtime.context" -> "http" [];
	"streamlit.runtime.context" -> "tornado" [];
	"tornado.web" -> "email" [];
	"tornado.web" -> "http" [];
	"tornado.web" -> "urllib" [];
	"tornado.httputil" -> "collections" [];
	"tornado.httputil" -> "email" [];
	"tornado.httputil" -> "http" [];
	"tornado.httputil" -> "urllib" [];
	"streamlit.runtime.context_util" -> "streamlit" [];
	"streamlit.runtime.secrets" -> "collections" [];
	"streamlit.runtime.metrics_util" -> "collections" [];
	"streamlit.runtime.connection_factory" -> "streamlit" [];
	"streamlit.connections.sql_connection" -> "streamlit" [];
	"streamlit.connections.util" -> "collections" [];
	"streamlit.connections.snowpark_connection" -> "streamlit" [];
	"streamlit.connections.base_connection" -> "streamlit" [];
	"streamlit.elements.dialog_decorator" -> "streamlit" [];
	"streamlit.elements.lib.dialog" -> "streamlit" [];
	"streamlit.elements.lib.mutable_status_container" -> "streamlit" [];
	"streamlit.delta_generator" -> "collections" [];
	"streamlit.elements.lib.built_in_chart_utils" -> "collections" [];
	"altair._magics" -> "importlib" [];
	"altair._magics" -> "IPython" [];
	"altair.vegalite.v5.display" -> "IPython" [];
	"altair.utils._show" -> "http" [];
	"altair.utils._show" -> "collections" [];
	"altair.utils.schemapi" -> "importlib" [];
	"altair.utils.schemapi" -> "packaging" [];
	"narwhals.utils" -> "importlib" [];
	"narwhals._arrow.namespace" -> "narwhals" [];
	"narwhals._arrow.series" -> "narwhals" [];
	"narwhals._arrow.series_struct" -> "pyarrow" [];
	"narwhals._arrow.series_str" -> "pyarrow" [];
	"narwhals._arrow.series_dt" -> "narwhals" [];
	"narwhals._arrow.selectors" -> "narwhals" [];
	"narwhals._arrow.expr" -> "pyarrow" [];
	"narwhals._arrow.expr" -> "narwhals" [];
	"narwhals._arrow.dataframe" -> "narwhals" [];
	"narwhals._dask.dataframe" -> "narwhals" [];
	"narwhals._dask.namespace" -> "narwhals" [];
	"narwhals._dask.selectors" -> "narwhals" [];
	"narwhals._compliant.namespace" -> "narwhals" [];
	"narwhals._compliant.when_then" -> "narwhals" [];
	"narwhals._compliant.expr" -> "narwhals" [];
	"narwhals._compliant.series" -> "narwhals" [];
	"narwhals._compliant.dataframe" -> "narwhals" [];
	"narwhals._compliant.group_by" -> "narwhals" [];
	"narwhals._compliant.any_namespace" -> "narwhals" [];
	"narwhals._compliant.selectors" -> "narwhals" [];
	"narwhals._dask.group_by" -> "narwhals" [];
	"narwhals._dask.expr" -> "narwhals" [];
	"narwhals._pandas_like.group_by" -> "narwhals" [];
	"narwhals._pandas_like.expr" -> "narwhals" [];
	"narwhals._pandas_like.namespace" -> "narwhals" [];
	"narwhals._pandas_like.selectors" -> "narwhals" [];
	"narwhals._dask.expr_dt" -> "narwhals" [];
	"narwhals._dask.utils" -> "narwhals" [];
	"narwhals._polars.dataframe" -> "narwhals" [];
	"narwhals._polars.group_by" -> "narwhals" [];
	"narwhals._polars.expr" -> "narwhals" [];
	"narwhals._polars.utils" -> "narwhals" [];
	"narwhals._polars.series" -> "narwhals" [];
	"narwhals._polars.namespace" -> "narwhals" [];
	"narwhals._duckdb.dataframe" -> "narwhals" [];
	"narwhals._duckdb.series" -> "narwhals" [];
	"narwhals._duckdb.namespace" -> "narwhals" [];
	"narwhals._duckdb.selectors" -> "narwhals" [];
	"narwhals._duckdb.group_by" -> "narwhals" [];
	"narwhals._duckdb.expr" -> "narwhals" [];
	"narwhals._duckdb.expr_str" -> "narwhals" [];
	"narwhals._duckdb.expr_dt" -> "narwhals" [];
	"narwhals._duckdb.utils" -> "narwhals" [];
	"narwhals._arrow.group_by" -> "narwhals" [];
	"narwhals._arrow.utils" -> "narwhals" [];
	"narwhals._interchange.series" -> "narwhals" [];
	"narwhals._interchange.dataframe" -> "narwhals" [];
	"narwhals._pandas_like.utils" -> "narwhals" [];
	"narwhals._pandas_like.series" -> "narwhals" [];
	"narwhals._pandas_like.series_dt" -> "narwhals" [];
	"narwhals._pandas_like.series_dt" -> "pyarrow" [];
	"narwhals._pandas_like.dataframe" -> "narwhals" [];
	"narwhals.stable.v1._namespace" -> "narwhals" [];
	"narwhals._spark_like.namespace" -> "narwhals" [];
	"narwhals._spark_like.utils" -> "narwhals" [];
	"narwhals._spark_like.selectors" -> "narwhals" [];
	"narwhals._spark_like.expr" -> "narwhals" [];
	"narwhals._spark_like.expr_dt" -> "narwhals" [];
	"narwhals._spark_like.dataframe" -> "narwhals" [];
	"narwhals._spark_like.group_by" -> "narwhals" [];
	"narwhals._compliant.typing" -> "narwhals" [];
	"narwhals._ibis.dataframe" -> "narwhals" [];
	"narwhals._ibis.series" -> "narwhals" [];
	"narwhals.stable.v1._dtypes" -> "narwhals" [];
	"narwhals.functions" -> "importlib" [];
	"altair.utils.plugin_registry" -> "importlib" [];
	"altair.utils._vegafusion_data" -> "importlib" [];
	"altair.utils._vegafusion_data" -> "packaging" [];
	"altair.utils._vegafusion_data" -> "collections" [];
	"altair.utils.data" -> "collections" [];
	"altair.utils.core" -> "collections" [];
	"altair.vegalite.v5.schema.channels" -> "collections" [];
	"altair.vegalite.v5.schema._typing" -> "collections" [];
	"altair.utils._dfi_types" -> "collections" [];
	"altair.utils._importers" -> "importlib" [];
	"altair.utils._importers" -> "packaging" [];
	"altair.utils._importers" -> "altair" [];
	"altair.utils._importers" -> "pyarrow" [];
	"altair.vegalite.v5.schema.mixins" -> "collections" [];
	"altair.vegalite.v5.api" -> "collections" [];
	"altair.vegalite.v5.api" -> "IPython" [];
	"altair.utils._transformed_data" -> "collections" [];
	"altair.vegalite.v5.schema._config" -> "collections" [];
	"altair.expr.core" -> "altair" [];
	"narwhals.stable.v1.dependencies" -> "narwhals" [];
	"altair.vegalite.v5.schema.core" -> "collections" [];
	"streamlit.elements.lib.color_util" -> "collections" [];
	"streamlit.elements.lib.color_util" -> "streamlit" [];
	"streamlit.proto.RootContainer_pb2" -> "google" [];
	"streamlit.elements.widgets.time_widgets" -> "collections" [];
	"streamlit.elements.widgets.time_widgets" -> "streamlit" [];
	"streamlit.elements.widgets.text_widgets" -> "streamlit" [];
	"streamlit.elements.widgets.slider" -> "collections" [];
	"streamlit.elements.widgets.slider" -> "streamlit" [];
	"streamlit.elements.widgets.selectbox" -> "streamlit" [];
	"streamlit.elements.widgets.selectbox" -> "collections" [];
	"streamlit.elements.lib.options_selector_utils" -> "collections" [];
	"streamlit.elements.widgets.select_slider" -> "streamlit" [];
	"streamlit.elements.widgets.select_slider" -> "collections" [];
	"streamlit.elements.widgets.radio" -> "streamlit" [];
	"streamlit.elements.widgets.radio" -> "collections" [];
	"streamlit.elements.widgets.multiselect" -> "collections" [];
	"streamlit.elements.widgets.multiselect" -> "streamlit" [];
	"streamlit.elements.widgets.file_uploader" -> "collections" [];
	"streamlit.elements.lib.file_uploader_utils" -> "streamlit" [];
	"streamlit.elements.lib.file_uploader_utils" -> "collections" [];
	"streamlit.elements.widgets.data_editor" -> "collections" [];
	"streamlit.elements.lib.column_config_utils" -> "collections" [];
	"streamlit.elements.lib.column_config_utils" -> "streamlit" [];
	"streamlit.elements.lib.dicttools" -> "collections" [];
	"streamlit.elements.widgets.color_picker" -> "streamlit" [];
	"streamlit.elements.widgets.checkbox" -> "streamlit" [];
	"streamlit.elements.widgets.chat" -> "collections" [];
	"streamlit.elements.widgets.camera_input" -> "streamlit" [];
	"streamlit.elements.widgets.button_group" -> "collections" [];
	"streamlit.elements.widgets.button_group" -> "streamlit" [];
	"streamlit.elements.widgets.audio_input" -> "streamlit" [];
	"streamlit.elements.vega_charts" -> "collections" [];
	"streamlit.elements.toast" -> "streamlit" [];
	"streamlit.elements.text" -> "streamlit" [];
	"streamlit.elements.snow" -> "streamlit" [];
	"streamlit.elements.pyplot" -> "streamlit" [];
	"streamlit.elements.progress" -> "streamlit" [];
	"streamlit.elements.plotly_chart" -> "collections" [];
	"streamlit.elements.metric" -> "streamlit" [];
	"streamlit.elements.markdown" -> "streamlit" [];
	"streamlit.elements.map" -> "collections" [];
	"streamlit.elements.layouts" -> "collections" [];
	"streamlit.elements.layouts" -> "streamlit" [];
	"streamlit.elements.json" -> "streamlit" [];
	"streamlit.elements.image" -> "streamlit" [];
	"streamlit.elements.iframe" -> "streamlit" [];
	"streamlit.elements.html" -> "streamlit" [];
	"streamlit.elements.heading" -> "streamlit" [];
	"streamlit.elements.form" -> "streamlit" [];
	"streamlit.elements.empty" -> "streamlit" [];
	"streamlit.elements.deck_gl_json_chart" -> "collections" [];
	"pydeck.bindings.layer" -> "pydeck" [];
	"pydeck.bindings.deck" -> "pydeck" [];
	"pydeck.widget._frontend" -> "pydeck" [];
	"pydeck.io.html" -> "pydeck" [];
	"pydeck.io.html" -> "IPython" [];
	"streamlit.elements.code" -> "streamlit" [];
	"streamlit.elements.bokeh_chart" -> "streamlit" [];
	"streamlit.elements.balloons" -> "streamlit" [];
	"streamlit.elements.arrow" -> "collections" [];
	"streamlit.elements.alert" -> "streamlit" [];
	"streamlit.version" -> "importlib" [];
	"streamlit.url_util" -> "urllib" [];
	"langchain_community.chat_message_histories.sql" -> "langchain_core" [];
	"langchain_community.chat_message_histories.singlestoredb" -> "langchain_core" [];
	"langchain_community.chat_message_histories.singlestoredb" -> "sqlalchemy" [];
	"langchain_community.chat_message_histories.rocksetdb" -> "langchain_core" [];
	"langchain_community.chat_message_histories.redis" -> "langchain_core" [];
	"langchain_community.chat_message_histories.postgres" -> "langchain_core" [];
	"langchain_community.chat_message_histories.neo4j" -> "langchain_core" [];
	"langchain_community.chat_message_histories.neo4j" -> "langchain_community" [];
	"langchain_community.chat_message_histories.mongodb" -> "langchain_core" [];
	"langchain_community.chat_message_histories.momento" -> "langchain_core" [];
	"langchain_community.chat_message_histories.kafka" -> "langchain_core" [];
	"langchain_community.chat_message_histories.in_memory" -> "langchain_core" [];
	"langchain_community.chat_message_histories.firestore" -> "langchain_core" [];
	"langchain_community.chat_message_histories.file" -> "langchain_core" [];
	"langchain_community.chat_message_histories.elasticsearch" -> "langchain_core" [];
	"langchain_community.chat_message_histories.dynamodb" -> "langchain_core" [];
	"langchain_community.chat_message_histories.cosmos_db" -> "langchain_core" [];
	"langchain_community.chat_message_histories.cassandra" -> "langchain_core" [];
	"langchain_community.chat_message_histories.astradb" -> "langchain_core" [];
	"langchain.memory.vectorstore_token_buffer_memory" -> "langchain_core" [];
	"langchain.memory.vectorstore_token_buffer_memory" -> "langchain" [];
	"langchain_text_splitters.markdown" -> "langchain_core" [];
	"langchain_text_splitters.json" -> "langchain_core" [];
	"langchain_text_splitters.html" -> "langchain_core" [];
	"langchain_text_splitters.base" -> "langchain_core" [];
	"langchain.memory.vectorstore" -> "collections" [];
	"langchain.memory.vectorstore" -> "langchain_core" [];
	"langchain.memory.token_buffer" -> "langchain_core" [];
	"langchain.memory.summary_buffer" -> "langchain_core" [];
	"langchain.memory.summary" -> "langchain_core" [];
	"langchain.memory.simple" -> "langchain_core" [];
	"langchain.memory.readonly" -> "langchain_core" [];
	"langchain.memory.entity" -> "collections" [];
	"langchain.memory.entity" -> "langchain_core" [];
	"langchain.memory.combined" -> "langchain_core" [];
	"langchain.memory.buffer_window" -> "langchain_core" [];
	"langchain.memory.buffer" -> "langchain_core" [];
	"langchain.memory.chat_memory" -> "langchain_core" [];
	"langchain_community.agent_toolkits.powerbi.base" -> "langchain_core" [];
	"langchain_community.agent_toolkits.powerbi.base" -> "langchain" [];
	"langchain_community.agent_toolkits.openapi.base" -> "langchain_core" [];
	"langchain_community.agent_toolkits.load_tools" -> "langchain_core" [];
	"langchain.chains.api.base" -> "collections" [];
	"langchain.chains.api.base" -> "urllib" [];
	"langchain.chains.api.base" -> "langchain_core" [];
	"langchain.chains.llm_math.base" -> "langchain_core" [];
	"langchain_community.utilities.dataforseo_api_search" -> "urllib" [];
	"langchain_community.utilities.dataforseo_api_search" -> "langchain_core" [];
	"langchain_community.utilities.dalle_image_generator" -> "langchain_core" [];
	"langchain_community.tools.memorize.tool" -> "langchain_core" [];
	"langchain_community.tools.google_trends.tool" -> "langchain_core" [];
	"langchain_community.tools.google_scholar.tool" -> "langchain_core" [];
	"langchain_community.tools.google_lens.tool" -> "langchain_core" [];
	"langchain_community.tools.google_jobs.tool" -> "langchain_core" [];
	"langchain_community.tools.google_finance.tool" -> "langchain_core" [];
	"langchain_community.tools.golden_query.tool" -> "langchain_core" [];
	"langchain_community.tools.dataforseo_api_search.tool" -> "langchain_core" [];
	"langchain_community.agent_toolkits.json.base" -> "langchain_core" [];
	"langchain.agents.xml.base" -> "collections" [];
	"langchain.agents.xml.base" -> "langchain_core" [];
	"langchain.agents.output_parsers.xml" -> "langchain_core" [];
	"langchain.agents.output_parsers.xml" -> "langchain" [];
	"langchain.agents.output_parsers.tools" -> "langchain_core" [];
	"langchain.agents.output_parsers.self_ask" -> "collections" [];
	"langchain.agents.output_parsers.self_ask" -> "langchain_core" [];
	"langchain.agents.output_parsers.react_single_input" -> "langchain_core" [];
	"langchain.agents.output_parsers.react_json_single_input" -> "langchain_core" [];
	"langchain.agents.output_parsers.openai_functions" -> "langchain_core" [];
	"langchain.agents.output_parsers.json" -> "langchain_core" [];
	"langchain.agents.format_scratchpad.xml" -> "langchain_core" [];
	"langchain.agents.format_scratchpad.tools" -> "collections" [];
	"langchain.agents.format_scratchpad.tools" -> "langchain_core" [];
	"langchain.agents.format_scratchpad.openai_functions" -> "collections" [];
	"langchain.agents.format_scratchpad.openai_functions" -> "langchain_core" [];
	"langchain.agents.format_scratchpad.log_to_messages" -> "langchain_core" [];
	"langchain.agents.format_scratchpad.log" -> "langchain_core" [];
	"langchain.agents.tool_calling_agent.base" -> "collections" [];
	"langchain.agents.tool_calling_agent.base" -> "langchain_core" [];
	"langchain.agents.structured_chat.base" -> "collections" [];
	"langchain.agents.structured_chat.base" -> "langchain_core" [];
	"langchain.tools.render" -> "langchain_core" [];
	"langchain.tools" -> "langchain_core" [];
	"langchain.agents.structured_chat.output_parser" -> "langchain_core" [];
	"langchain.agents.structured_chat.output_parser" -> "langchain" [];
	"langchain.agents.self_ask_with_search.base" -> "collections" [];
	"langchain.agents.self_ask_with_search.base" -> "langchain_core" [];
	"langchain.agents.utils" -> "collections" [];
	"langchain.agents.utils" -> "langchain_core" [];
	"langchain.agents.react.base" -> "collections" [];
	"langchain.agents.react.base" -> "langchain_core" [];
	"langchain.agents.react.output_parser" -> "langchain_core" [];
	"langchain.agents.react.agent" -> "collections" [];
	"langchain.agents.react.agent" -> "langchain_core" [];
	"langchain.agents.react.agent" -> "langchain" [];
	"langchain.agents.openai_tools.base" -> "collections" [];
	"langchain.agents.openai_tools.base" -> "langchain_core" [];
	"langchain.agents.output_parsers.openai_tools" -> "langchain_core" [];
	"langchain.agents.openai_functions_multi_agent.base" -> "collections" [];
	"langchain.agents.openai_functions_multi_agent.base" -> "langchain_core" [];
	"langchain.agents.openai_functions_multi_agent.base" -> "langchain" [];
	"langchain.agents.openai_functions_agent.base" -> "collections" [];
	"langchain.agents.openai_functions_agent.base" -> "langchain_core" [];
	"langchain.agents.openai_functions_agent.base" -> "langchain" [];
	"langchain.agents.mrkl.base" -> "collections" [];
	"langchain.agents.mrkl.base" -> "langchain_core" [];
	"langchain.agents.mrkl.base" -> "langchain" [];
	"langchain.agents.mrkl.output_parser" -> "langchain_core" [];
	"langchain.agents.loading" -> "langchain_core" [];
	"langchain.chains.loading" -> "langchain_core" [];
	"langchain.chains.llm_requests" -> "langchain" [];
	"langchain_community.chains.llm_requests" -> "langchain" [];
	"langchain_community.chains.llm_requests" -> "langchain_core" [];
	"langchain_community.chains.graph_qa.cypher" -> "langchain_core" [];
	"langchain.chains.qa_with_sources.vector_db" -> "langchain_core" [];
	"langchain.chains.llm_checker.base" -> "langchain_core" [];
	"langchain.chains.sequential" -> "langchain_core" [];
	"langchain.agents.chat.base" -> "collections" [];
	"langchain.agents.chat.base" -> "langchain_core" [];
	"langchain.agents.chat.output_parser" -> "langchain_core" [];
	"langchain.agents.json_chat.base" -> "collections" [];
	"langchain.agents.json_chat.base" -> "langchain_core" [];
	"langchain.agents.initialize" -> "collections" [];
	"langchain.agents.initialize" -> "langchain_core" [];
	"langchain.agents.conversational_chat.base" -> "collections" [];
	"langchain.agents.conversational_chat.base" -> "langchain_core" [];
	"langchain.agents.conversational_chat.base" -> "langchain" [];
	"langchain.agents.conversational_chat.output_parser" -> "langchain_core" [];
	"langchain.agents.conversational_chat.output_parser" -> "langchain" [];
	"langchain.agents.conversational.base" -> "collections" [];
	"langchain.agents.conversational.base" -> "langchain_core" [];
	"langchain.agents.conversational.base" -> "langchain" [];
	"langchain.agents.conversational.output_parser" -> "langchain_core" [];
	"langchain.agents.agent_types" -> "langchain_core" [];
	"langchain.agents.agent_toolkits.vectorstore.base" -> "langchain_core" [];
	"langchain.agents.agent_toolkits" -> "langchain" [];
	"langchain.agents.agent_toolkits.conversational_retrieval.openai_functions" -> "langchain_core" [];
	"langchain.agents.openai_functions_agent.agent_token_buffer_memory" -> "langchain_core" [];
	"langchain_core.tools.retriever" -> "langchain_core" [];
	"langchain.agents.agent_toolkits.vectorstore.toolkit" -> "langchain_core" [];
	"langchain.agents.agent_iterator" -> "collections" [];
	"langchain.agents.agent_iterator" -> "langchain_core" [];
	"langchain.agents.agent_iterator" -> "langchain" [];
	"langchain.utilities" -> "langchain_community" [];
	"langchain.agents.agent" -> "collections" [];
	"langchain.agents.agent" -> "langchain_core" [];
	"langchain.agents.tools" -> "langchain_core" [];
	"langsmith.run_trees" -> "collections" [];
	"langsmith.run_trees" -> "urllib" [];
	"langsmith.run_trees" -> "langchain_core" [];
	"langsmith.client" -> "concurrent" [];
	"langsmith.client" -> "langchain_core" [];
	"langsmith.client" -> "langchain" [];
	"langchain_core.prompts.structured" -> "collections" [];
	"langchain_core.prompts.structured" -> "langchain_core" [];
	"langchain.smith.evaluation.string_run_evaluator" -> "langchain_core" [];
	"langchain.smith.evaluation.string_run_evaluator" -> "langchain" [];
	"langchain.evaluation.schema" -> "collections" [];
	"langchain.evaluation.schema" -> "langchain_core" [];
	"langchain.evaluation.string_distance.base" -> "langchain_core" [];
	"langchain.evaluation.string_distance.base" -> "langchain" [];
	"langchain.evaluation.scoring.eval_chain" -> "langchain_core" [];
	"langchain.evaluation.scoring.eval_chain" -> "langchain" [];
	"langchain.evaluation.criteria.eval_chain" -> "collections" [];
	"langchain.evaluation.criteria.eval_chain" -> "langchain_core" [];
	"langchain.evaluation.criteria.eval_chain" -> "langchain" [];
	"langchain.evaluation.criteria.prompt" -> "langchain_core" [];
	"langchain.evaluation.qa.generate_chain" -> "langchain_core" [];
	"langchain.evaluation.qa.generate_prompt" -> "langchain_core" [];
	"langchain.evaluation.qa.eval_chain" -> "collections" [];
	"langchain.evaluation.qa.eval_chain" -> "langchain_core" [];
	"langchain.evaluation.qa.eval_chain" -> "langchain" [];
	"langchain.evaluation.qa.eval_prompt" -> "langchain_core" [];
	"langchain.evaluation.loading" -> "collections" [];
	"langchain.evaluation.loading" -> "langchain_core" [];
	"langchain.evaluation.embedding_distance.base" -> "langchain_core" [];
	"langchain.evaluation.embedding_distance.base" -> "langchain" [];
	"langchain.evaluation.comparison.eval_chain" -> "langchain_core" [];
	"langchain.evaluation.comparison.eval_chain" -> "langchain" [];
	"langchain.evaluation.agents.trajectory_eval_chain" -> "collections" [];
	"langchain.evaluation.agents.trajectory_eval_chain" -> "langchain_core" [];
	"langchain.evaluation.agents.trajectory_eval_prompt" -> "langchain_core" [];
	"langchain.smith.evaluation.runner_utils" -> "concurrent" [];
	"langchain.smith.evaluation.runner_utils" -> "langchain_core" [];
	"langchain.smith.evaluation.runner_utils" -> "langsmith" [];
	"langchain.smith.evaluation.runner_utils" -> "langchain" [];
	"langchain.smith.evaluation.progress" -> "collections" [];
	"langchain.smith.evaluation.progress" -> "langchain_core" [];
	"langchain.smith.evaluation.config" -> "collections" [];
	"langchain.smith.evaluation.config" -> "langchain_core" [];
	"langsmith.evaluation._runner" -> "concurrent" [];
	"langsmith.evaluation._runner" -> "langchain_core" [];
	"langsmith.evaluation._runner" -> "importlib" [];
	"langsmith.evaluation._runner" -> "tqdm" [];
	"langsmith.evaluation.integrations._langchain" -> "langsmith" [];
	"langsmith.evaluation.integrations._langchain" -> "langchain" [];
	"langsmith.evaluation._arunner" -> "concurrent" [];
	"langsmith.evaluation._arunner" -> "collections" [];
	"langsmith.evaluation._arunner" -> "langchain_core" [];
	"langsmith.evaluation._arunner" -> "importlib" [];
	"langsmith.evaluation.string_evaluator" -> "langsmith" [];
	"langsmith._internal._operations" -> "collections" [];
	"langsmith._internal._multipart" -> "collections" [];
	"langsmith._internal._background_thread" -> "concurrent" [];
	"langsmith.evaluation.evaluator" -> "collections" [];
	"langsmith.testing._internal" -> "collections" [];
	"langsmith.testing._internal" -> "concurrent" [];
	"langsmith.testing._internal" -> "langchain_core" [];
	"langsmith.async_client" -> "collections" [];
	"langsmith.async_client" -> "http" [];
	"langsmith.async_client" -> "langchain_core" [];
	"langsmith._internal._embedding_distance" -> "collections" [];
	"langchain_core.tracers.langchain" -> "concurrent" [];
	"langchain_core.tracers.langchain" -> "langchain_core" [];
	"langchain_core.tracers.base" -> "langchain_core" [];
	"langchain_core.tracers.base" -> "collections" [];
	"langchain_core.tracers.core" -> "langchain_core" [];
	"langchain_core.tracers.core" -> "collections" [];
	"langchain_core.tracers.event_stream" -> "langchain_core" [];
	"langchain_core.tracers.event_stream" -> "collections" [];
	"langchain_core.tracers.memory_stream" -> "collections" [];
	"langchain_core.runnables.passthrough" -> "collections" [];
	"langchain_core.tracers.schemas" -> "langchain_core" [];
	"langchain_core.tracers.root_listeners" -> "collections" [];
	"langchain_core.tracers.log_stream" -> "langchain_core" [];
	"langchain_core.runnables.schema" -> "collections" [];
	"langchain_core.runnables.fallbacks" -> "collections" [];
	"langchain_core.prompts.base" -> "collections" [];
	"langchain_core.prompts.base" -> "langchain_core" [];
	"langchain_core.callbacks.manager" -> "concurrent" [];
	"langchain_core.callbacks.manager" -> "langsmith" [];
	"langchain_core.callbacks.manager" -> "langchain_core" [];
	"langchain_core.callbacks.manager" -> "collections" [];
	"langchain_core.runnables.utils" -> "collections" [];
	"langchain_core.runnables.graph_ascii" -> "collections" [];
	"langchain_core.runnables.config" -> "collections" [];
	"langchain_core.runnables.config" -> "concurrent" [];
	"langchain_core.runnables.config" -> "langsmith" [];
	"langchain_core.runnables.router" -> "collections" [];
	"langchain_core.runnables.history" -> "collections" [];
	"langchain_core.runnables.history" -> "langchain_core" [];
	"langchain_core.runnables.branch" -> "collections" [];
	"langchain_core._api.beta_decorator" -> "collections" [];
	"langchain_core.prompt_values" -> "collections" [];
	"langchain_core.language_models.fake_chat_models" -> "collections" [];
	"langchain_core.language_models.fake_chat_models" -> "langchain_core" [];
	"langchain_core.language_models.fake" -> "collections" [];
	"langchain_core.language_models.fake" -> "langchain_core" [];
	"pydantic.mypy" -> "collections" [];
	"pydantic.mypy" -> "toml" [];
	"pydantic.experimental.arguments_schema" -> "collections" [];
	"pydantic.deprecated.decorator" -> "collections" [];
	"pydantic.deprecated.decorator" -> "pydantic" [];
	"pydantic.deprecated.tools" -> "pydantic" [];
	"pydantic.deprecated.config" -> "pydantic" [];
	"pydantic.deprecated.class_validators" -> "pydantic" [];
	"langchain_core.messages.base" -> "langchain_core" [];
	"langchain_core.messages.base" -> "collections" [];
	"langchain_google_genai.llms" -> "langchain_core" [];
	"langchain_google_genai._common" -> "langchain_core" [];
	"langchain_google_genai.google_vector_store" -> "langchain_core" [];
	"google.ai.generativelanguage_v1beta.types.tuned_model" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.pagers" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.pagers" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.pagers" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.pagers" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.pagers" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.retriever_service" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.retriever" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.prediction_service" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.permission_service" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.model_service" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.generative_service" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.file" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.content" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.cached_content" -> "google" [];
	"google.ai.generativelanguage_v1beta.types.cache_service" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.text_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.text_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.text_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.retriever_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.prediction_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.permission_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.model_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.generative_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.file_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.discuss_service.async_client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.client" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.rest_base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc_asyncio" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.grpc" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.transports.base" -> "google" [];
	"google.ai.generativelanguage_v1beta.services.cache_service.async_client" -> "google" [];
	"langchain_google_genai.genai_aqa" -> "langchain_core" [];
	"langchain_google_genai.embeddings" -> "langchain_core" [];
	"langchain_google_genai.chat_models" -> "google" [];
	"langchain_google_genai.chat_models" -> "langchain_core" [];
	"langchain_google_genai._image_utils" -> "urllib" [];
	"langchain_google_genai._function_utils" -> "langchain_core" [];
	"langchain_google_genai._genai_extension" -> "google" [];
	"PIL.Image" -> "collections" [];
	"PIL.Jpeg2KImagePlugin" -> "collections" [];
	"PIL.IptcImagePlugin" -> "collections" [];
	"PIL.PngImagePlugin" -> "collections" [];
	"PIL.ImageFilter" -> "collections" [];
	"kivy.uix.image" -> "kivy" [];
	"kivy.loader" -> "urllib" [];
	"kivy.input.postproc.calibration" -> "kivy" [];
	"kivy.input.postproc.dejitter" -> "kivy" [];
	"kivy.input.postproc.retaintouch" -> "kivy" [];
	"kivy.input.postproc.ignorelist" -> "kivy" [];
	"kivy.input.postproc.tripletap" -> "kivy" [];
	"kivy.input.postproc.doubletap" -> "kivy" [];
	"kivy.input.providers" -> "kivy" [];
	"kivy.input.providers.leapfinger" -> "kivy" [];
	"kivy.input.providers.androidjoystick" -> "kivy" [];
	"kivy.input.providers.linuxwacom" -> "kivy" [];
	"kivy.input.providers.hidinput" -> "kivy" [];
	"kivy.input.providers.mtdev" -> "kivy" [];
	"kivy.input.providers.probesysfs" -> "kivy" [];
	"kivy.input.providers.mouse" -> "kivy" [];
	"kivy.input.providers.tuio" -> "kivy" [];
	"kivy.input.motionevent" -> "kivy" [];
	"kivy.core.window" -> "kivy" [];
	"kivy.uix.scatter" -> "kivy" [];
	"kivy.core.gl" -> "kivy" [];
	"kivy.uix.behaviors.touchripple" -> "kivy" [];
	"kivy.uix.layout" -> "kivy" [];
	"kivy.uix.behaviors.cover" -> "kivy" [];
	"kivy.uix.behaviors.emacs" -> "kivy" [];
	"kivy.uix.behaviors.codenavigation" -> "kivy" [];
	"kivy.uix.behaviors.compoundselection" -> "kivy" [];
	"kivy.uix.behaviors.focus" -> "kivy" [];
	"kivy.uix.behaviors.drag" -> "kivy" [];
	"kivy.uix.behaviors.togglebutton" -> "kivy" [];
	"kivy.uix.behaviors.button" -> "kivy" [];
	"kivy.core.image" -> "kivy" [];
	"kivy.uix.widget" -> "kivy" [];
	"kivy.uix.filechooser" -> "kivy" [];
	"kivy.uix.filechooser" -> "collections" [];
	"kivy.uix.screenmanager" -> "kivy" [];
	"kivy.core.text.text_pango" -> "kivy" [];
	"kivy.uix.label" -> "kivy" [];
	"kivy.core.text.markup" -> "kivy" [];
	"kivy.uix.button" -> "kivy" [];
	"kivy.uix.boxlayout" -> "kivy" [];
	"kivy.uix.textinput" -> "kivy" [];
	"kivy.uix.bubble" -> "kivy" [];
	"kivy.uix.popup" -> "kivy" [];
	"kivy.uix.modalview" -> "kivy" [];
	"kivy.uix.anchorlayout" -> "kivy" [];
	"kivy.uix.gridlayout" -> "kivy" [];
	"kivy.uix.scrollview" -> "kivy" [];
	"kivy.effects.dampedscroll" -> "kivy" [];
	"kivy.effects.scroll" -> "kivy" [];
	"kivy.effects.kinetic" -> "kivy" [];
	"kivy.uix.colorpicker" -> "kivy" [];
	"kivy.uix.tabbedpanel" -> "kivy" [];
	"kivy.core.video.video_ffpyplayer" -> "kivy" [];
	"kivy.uix.scatterlayout" -> "kivy" [];
	"kivy.uix.gesturesurface" -> "kivy" [];
	"kivy.core.camera.camera_picamera" -> "kivy" [];
	"kivy.uix.codeinput" -> "kivy" [];
	"kivy.core.clipboard.clipboard_winctypes" -> "kivy" [];
	"kivy.core.camera.camera_android" -> "kivy" [];
	"kivy.uix.camera" -> "kivy" [];
	"kivy.core.clipboard.clipboard_xsel" -> "kivy" [];
	"kivy.uix.behaviors.knspace" -> "kivy" [];
	"kivy.core.camera.camera_gi" -> "kivy" [];
	"kivy.uix.progressbar" -> "kivy" [];
	"kivy.core.audio.audio_pygame" -> "kivy" [];
	"kivy.core.clipboard.clipboard_xclip" -> "kivy" [];
	"kivy.uix.switch" -> "kivy" [];
	"kivy.core.video.video_gstplayer" -> "kivy" [];
	"kivy.uix.videoplayer" -> "kivy" [];
	"kivy.core.video" -> "kivy" [];
	"kivy.core.image.img_tex" -> "kivy" [];
	"kivy.uix.treeview" -> "kivy" [];
	"kivy.uix.recycleview.__init__" -> "kivy" [];
	"kivy.uix.recycleview" -> "kivy" [];
	"kivy.core.camera" -> "kivy" [];
	"kivy.uix.sandbox" -> "kivy" [];
	"kivy.core.image.img_sdl2" -> "kivy" [];
	"kivy.uix.recycleview.views" -> "kivy" [];
	"kivy.uix.splitter" -> "kivy" [];
	"kivy.core.clipboard.clipboard_dbusklipper" -> "kivy" [];
	"kivy.uix.rst" -> "kivy" [];
	"docutils.parsers.rst.languages" -> "docutils" [];
	"docutils.parsers.rst.directives.tables" -> "urllib" [];
	"docutils.parsers.rst.directives.misc" -> "urllib" [];
	"docutils.parsers.rst.directives.images" -> "urllib" [];
	"docutils.parsers.rst.directives.images" -> "PIL" [];
	"docutils.writers.odf_odt.prepstyles" -> "xml" [];
	"docutils.writers.odf_odt" -> "xml" [];
	"docutils.writers.latex2e" -> "urllib" [];
	"kivy.core.image.img_pygame" -> "kivy" [];
	"kivy.core.clipboard.clipboard_nspaste" -> "kivy" [];
	"kivy.core.image.img_pil" -> "kivy" [];
	"kivy.core.audio.audio_ffpyplayer" -> "kivy" [];
	"kivy.core.clipboard.clipboard_sdl2" -> "kivy" [];
	"kivy.uix.video" -> "kivy" [];
	"kivy.uix.recyclelayout" -> "kivy" [];
	"kivy.core.text.text_pil" -> "kivy" [];
	"kivy.uix.pagelayout" -> "kivy" [];
	"kivy.core.text.text_pygame" -> "kivy" [];
	"kivy.uix.recycleview.layout" -> "kivy" [];
	"kivy.core.window.window_egl_rpi" -> "kivy" [];
	"kivy.core.clipboard.clipboard_pygame" -> "kivy" [];
	"kivy.core.text.text_sdl2" -> "kivy" [];
	"kivy.core.clipboard.clipboard_gtk3" -> "kivy" [];
	"kivy.uix.stacklayout" -> "kivy" [];
	"kivy.uix.recycleview.datamodel" -> "kivy" [];
	"kivy.uix.slider" -> "kivy" [];
	"kivy.uix.spinner" -> "kivy" [];
	"kivy.core.image.img_ffpyplayer" -> "kivy" [];
	"kivy.uix.effectwidget" -> "kivy" [];
	"kivy.uix.dropdown" -> "kivy" [];
	"kivy.core.audio.audio_gstplayer" -> "kivy" [];
	"kivy.uix.actionbar" -> "kivy" [];
	"kivy.core.image.img_dds" -> "kivy" [];
	"kivy.core.spelling.spelling_enchant" -> "kivy" [];
	"kivy.uix.checkbox" -> "kivy" [];
	"kivy.uix.carousel" -> "kivy" [];
	"kivy.uix.accordion" -> "kivy" [];
	"kivy.core.camera.camera_opencv" -> "kivy" [];
	"kivy.core.audio" -> "kivy" [];
	"urllib3.util.url" -> "urllib" [];
	"urllib3.util.ssl_" -> "urllib" [];
	"urllib3.util.ssltransport" -> "urllib" [];
	"urllib3.util.response" -> "urllib" [];
	"urllib3.util.connection" -> "urllib" [];
	"urllib3.util.timeout" -> "urllib" [];
	"urllib3.util.retry" -> "urllib" [];
	"urllib3.util.request" -> "urllib" [];
	"urllib3.util.queue" -> "urllib" [];
	"_elementtree" -> "xml" [];
	"plistlib" -> "xml" [];
	"setuptools.command" -> "distutils" [];
	"pyDatalog.pyDatalog" -> "sqlalchemy" [];
	"importlib_metadata" -> "zipp" [];
	"sqlalchemy.util._collections" -> "sqlalchemy" [];
	"sqlalchemy.sql._elements_constructors" -> "sqlalchemy" [];
	"sqlalchemy.engine.processors" -> "sqlalchemy" [];
	"sqlalchemy.sql._py_util" -> "sqlalchemy" [];
	"sqlalchemy.sql._orm_types" -> "sqlalchemy" [];
	"sqlalchemy.dialects.mssql.aioodbc" -> "sqlalchemy" [];
	"langchain_core.beta.runnables.context" -> "langchain_core" [];
	"langchain_core.tracers.stdout" -> "langchain_core" [];
	"requests.models" -> "urllib" [];
	"requests.adapters" -> "urllib" [];
	"urllib3.contrib.socks" -> "urllib" [];
	"requests.utils" -> "urllib" [];
	"requests.exceptions" -> "urllib" [];
	"langchain_core.utils.loading" -> "langchain_core" [];
	"langchain_core._api.deprecation" -> "langchain_core" [];
	"langchain_core.tracers.context" -> "langchain_core" [];
	"langchain_core.documents.transformers" -> "langchain_core" [];
	"langchain_core.documents.base" -> "langchain_core" [];
	"IPython.lib.display" -> "IPython" [];
	"numpy.lib._ufunclike_impl" -> "numpy" [];
	"numpy.lib._scimath_impl" -> "numpy" [];
	"numpy.lib.introspect" -> "numpy" [];
	"IPython.core.display" -> "IPython" [];
	"matplotlib_inline.config" -> "IPython" [];
	"IPython.utils.generics" -> "IPython" [];
	"IPython.core.magic_arguments" -> "IPython" [];
	"IPython.core.magics.pylab" -> "traitlets" [];
	"IPython.core.magics.packaging" -> "IPython" [];
	"IPython.core.magics.logging" -> "IPython" [];
	"IPython.core.magics.extension" -> "IPython" [];
	"IPython.core.magics.config" -> "IPython" [];
	"IPython.core.magics.config" -> "traitlets" [];
	"IPython.core.magics.code" -> "IPython" [];
	"IPython.core.magics.basic" -> "traitlets" [];
	"IPython.core.magics.auto" -> "IPython" [];
	"jedi.inference.gradual.base" -> "jedi" [];
	"jedi.plugins.pytest" -> "jedi" [];
	"jedi.inference.value.decorator" -> "jedi" [];
	"jedi.inference.value.namespace" -> "jedi" [];
	"jedi.api.file_name" -> "jedi" [];
	"jedi.api.keywords" -> "jedi" [];
	"jedi.inference.base_value" -> "parso" [];
	"jedi.inference.gradual.stub_value" -> "jedi" [];
	"IPython.core.guarded_eval" -> "IPython" [];
	"IPython.utils.strdispatch" -> "IPython" [];
	"IPython.core.macro" -> "IPython" [];
	"IPython.lib.pretty" -> "IPython" [];
	"IPython.core.extensions" -> "IPython" [];
	"IPython.terminal.interactiveshell" -> "IPython" [];
	"black.ranges" -> "blib2to3" [];
	"black.handle_ipynb_magics" -> "IPython" [];
	"IPython.terminal.shortcuts.auto_suggest" -> "IPython" [];
	"prompt_toolkit.layout.utils" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.bindings.scroll" -> "prompt_toolkit" [];
	"prompt_toolkit.application.current" -> "prompt_toolkit" [];
	"prompt_toolkit.key_binding.bindings.focus" -> "prompt_toolkit" [];
	"IPython.terminal.shortcuts.filters" -> "IPython" [];
	"IPython.terminal.shortcuts" -> "IPython" [];
	"IPython.lib.clipboard" -> "IPython" [];
	"IPython.terminal.ptutils" -> "IPython" [];
	"IPython.terminal.prompts" -> "IPython" [];
	"IPython.terminal.pt_inputhooks" -> "IPython" [];
	"IPython.terminal.debugger" -> "IPython" [];
	"IPython.extensions.storemagic" -> "IPython" [];
	"IPython.core.crashhandler" -> "IPython" [];
	"prompt_toolkit.formatted_text.pygments" -> "prompt_toolkit" [];
	"prompt_toolkit.formatted_text.html" -> "xml" [];
	"prompt_toolkit.formatted_text.ansi" -> "prompt_toolkit" [];
	"IPython.core.excolors" -> "IPython" [];
	"stack_data.serializing" -> "pygments" [];
	"stack_data.formatting" -> "pygments" [];
	"IPython.core.magic" -> "IPython" [];
	"IPython.core.hooks" -> "IPython" [];
	"ipykernel.eventloops" -> "traitlets" [];
	"ipykernel.eventloops" -> "IPython" [];
	"IPython.lib.guisupport" -> "IPython" [];
	"zmq.asyncio" -> "tornado" [];
	"ipykernel.displayhook" -> "IPython" [];
	"ipykernel.ipkernel" -> "zmq" [];
	"ipykernel.debugger" -> "IPython" [];
	"ipykernel.kernelbase" -> "IPython" [];
	"ipykernel.compiler" -> "IPython" [];
	"comm.base_comm" -> "traitlets" [];
	"comm.base_comm" -> "zmq" [];
	"ipykernel.embed" -> "IPython" [];
	"rich.pretty" -> "IPython" [];
	"markdown_it.rules_inline.newline" -> "markdown_it" [];
	"markdown_it.rules_inline.link" -> "markdown_it" [];
	"markdown_it.rules_inline.html_inline" -> "markdown_it" [];
	"markdown_it.rules_inline.escape" -> "markdown_it" [];
	"markdown_it.rules_inline.entity" -> "markdown_it" [];
	"markdown_it.rules_block.table" -> "markdown_it" [];
	"markdown_it.rules_block.reference" -> "markdown_it" [];
	"markdown_it.rules_block.list" -> "markdown_it" [];
	"markdown_it.rules_block.html_block" -> "markdown_it" [];
	"markdown_it.rules_block.hr" -> "markdown_it" [];
	"markdown_it.rules_block.heading" -> "markdown_it" [];
	"markdown_it.rules_block.blockquote" -> "markdown_it" [];
	"markdown_it.helpers.parse_link_title" -> "markdown_it" [];
	"markdown_it.helpers.parse_link_destination" -> "markdown_it" [];
	"anyio.abc._tasks" -> "anyio" [];
	"anyio.abc._streams" -> "anyio" [];
	"anyio._core._tasks" -> "anyio" [];
	"anyio._core._streams" -> "anyio" [];
	"httpx._transports.wsgi" -> "http" [];
	"httpx._transports.mock" -> "http" [];
	"httpx._transports.default" -> "http" [];
	"httpx._transports.base" -> "http" [];
	"httpx._transports.asgi" -> "http" [];
	"langchain_core.embeddings.embeddings" -> "langchain_core" [];
	"langchain_community.vectorstores.yellowbrick" -> "langchain_community" [];
	"langchain_community.vectorstores.utils" -> "langchain_community" [];
	"grpc.aio._typing" -> "grpc" [];
	"langchain_community.vectorstores.usearch" -> "langchain_community" [];
	"pandas.core.computation.check" -> "pandas" [];
	"pandas.compat._optional" -> "pandas" [];
	"pandas.core.computation.ops" -> "pandas" [];
	"pandas.core.computation.eval" -> "pandas" [];
	"pandas.core.groupby.categorical" -> "pandas" [];
	"pandas.core.window.doc" -> "pandas" [];
	"pandas.core.indexers.objects" -> "pandas" [];
	"pandas.core.window.online" -> "pandas" [];
	"pandas.compat.numpy" -> "pandas" [];
	"pandas.api.extensions" -> "pandas" [];
	"pandas.io.excel._util" -> "pandas" [];
	"pandas.api.types" -> "pandas" [];
	"pandas.io.formats.xml" -> "xml" [];
	"pandas.io.xml" -> "xml" [];
	"pandas.io.gbq" -> "google" [];
	"google.auth.crypt._python_rsa" -> "pyasn1" [];
	"pandas._libs.indexing" -> "pandas" [];
	"pandas.util._tester" -> "pandas" [];
	"pandas.api.indexers" -> "pandas" [];
	"pandas.compat.pyarrow" -> "pandas" [];
	"langchain.retrievers.self_query.tencentvectordb" -> "langchain_community" [];
	"langchain_community.retrievers.zilliz" -> "langchain_community" [];
	"langchain_community.retrievers.wikipedia" -> "langchain_community" [];
	"langchain_community.document_transformers.openai_functions" -> "langchain" [];
	"langchain.chains.openai_functions" -> "langchain_core" [];
	"langchain.chains.openai_functions.tagging" -> "langchain" [];
	"langchain.chains.openai_functions.qa_with_structure" -> "langchain" [];
	"langchain_core.prompts.prompt" -> "langchain_core" [];
	"langchain.chains.openai_functions.extraction" -> "langchain" [];
	"langchain.chains.openai_functions.citation_fuzzy_match" -> "langchain" [];
	"langchain_community.tools.nuclia.tool" -> "google" [];
	"langchain_community.tools.zapier.tool" -> "langchain_community" [];
	"langchain_community.tools.you.tool" -> "langchain_community" [];
	"langchain_community.tools.yahoo_finance_news" -> "urllib" [];
	"langchain_community.tools.yahoo_finance_news" -> "langchain_community" [];
	"langchain_community.document_loaders.web_base" -> "langchain_community" [];
	"langchain_core.document_loaders.blob_loaders" -> "langchain_core" [];
	"langchain_community.tools.wolfram_alpha.tool" -> "langchain_community" [];
	"langchain_community.tools.wikipedia.tool" -> "langchain_community" [];
	"langchain_community.tools.vectorstore.tool" -> "langchain_community" [];
	"langchain.chains.qa_with_sources.loading" -> "langchain" [];
	"langchain.chains.question_answering.map_rerank_prompt" -> "langchain" [];
	"langchain.chains.question_answering.stuff_prompt" -> "langchain" [];
	"langchain.chains.question_answering.refine_prompts" -> "langchain" [];
	"langchain.chains.question_answering.refine_prompts" -> "langchain_core" [];
	"langchain.chains.question_answering.map_reduce_prompt" -> "langchain" [];
	"langchain.chains.question_answering.map_reduce_prompt" -> "langchain_core" [];
	"langchain.output_parsers" -> "langchain_community" [];
	"langchain.output_parsers.prompts" -> "langchain_core" [];
	"langchain.chains.combine_documents.refine" -> "langchain" [];
	"langchain.chains.combine_documents.map_rerank" -> "langchain" [];
	"langchain.chains.combine_documents.map_reduce" -> "langchain" [];
	"langchain.chains.combine_documents.base" -> "langchain" [];
	"langchain.chains.combine_documents.stuff" -> "langchain" [];
	"langchain.chains.retrieval_qa.base" -> "langchain" [];
	"langchain_community.llms.openai" -> "langchain_community" [];
	"openai.types.vector_stores.file_batch_create_params" -> "openai" [];
	"openai.types.vector_stores.file_create_params" -> "openai" [];
	"openai.lib.streaming.responses._types" -> "openai" [];
	"openai.lib._tools" -> "openai" [];
	"openai.lib.streaming.chat._types" -> "openai" [];
	"langchain_community.tools.tavily_search.tool" -> "langchain_community" [];
	"langchain_community.tools.steam.tool" -> "langchain_community" [];
	"langchain_community.tools.stackexchange.tool" -> "langchain_community" [];
	"langchain_community.tools.sql_database.tool" -> "langchain_community" [];
	"langchain_community.tools.sql_database.tool" -> "langchain" [];
	"langchain_community.tools.spark_sql.tool" -> "langchain_community" [];
	"langchain_community.tools.spark_sql.tool" -> "langchain" [];
	"langchain_community.tools.searx_search.tool" -> "langchain_community" [];
	"langchain_community.tools.searchapi.tool" -> "langchain_community" [];
	"langchain_community.tools.scenexplain.tool" -> "langchain_community" [];
	"langchain_community.tools.requests.tool" -> "langchain_community" [];
	"langchain_community.tools.reddit_search.tool" -> "langchain_community" [];
	"langchain_community.tools.pubmed.tool" -> "langchain_community" [];
	"langchain_community.tools.powerbi.tool" -> "langchain_community" [];
	"langchain_community.chat_models.openai" -> "langchain_community" [];
	"langchain_community.chat_models.yandex" -> "langchain_community" [];
	"langchain_community.chat_models.yandex" -> "google" [];
	"google.protobuf.pyext.cpp_message" -> "google" [];
	"google.protobuf.internal.field_mask" -> "google" [];
	"langchain_community.llms.yandex" -> "google" [];
	"langchain_community.chat_models.volcengine_maas" -> "langchain_community" [];
	"langchain_community.chat_models.vertexai" -> "langchain_community" [];
	"google.auth.aio.transport" -> "google" [];
	"google.api_core.rest_streaming" -> "google" [];
	"google.api_core._rest_streaming_base" -> "google" [];
	"proto.marshal.rules.struct" -> "proto" [];
	"proto.marshal.collections.maps" -> "google" [];
	"langchain_community.llms.vertexai" -> "langchain_community" [];
	"langchain_community.chat_models.tongyi" -> "langchain_community" [];
	"langchain_community.chat_models.solar" -> "langchain_community" [];
	"langchain_community.chat_models.pai_eas_endpoint" -> "langchain_community" [];
	"langchain_community.chat_models.outlines" -> "langchain_community" [];
	"huggingface_hub._commit_api" -> "tqdm" [];
	"langchain_community.chat_models.ollama" -> "langchain_community" [];
	"langchain_community.chat_models.octoai" -> "langchain_community" [];
	"langchain_community.chat_models.oci_generative_ai" -> "langchain_community" [];
	"langchain_community.chat_models.oci_data_science" -> "langchain_community" [];
	"langchain_community.chat_models.oci_data_science" -> "langchain_openai" [];
	"langchain_community.llms.oci_data_science_model_deployment_endpoint" -> "langchain_community" [];
	"langchain_community.chat_models.moonshot" -> "langchain_community" [];
	"langchain_community.chat_models.mlx" -> "langchain_community" [];
	"litellm.litellm_core_utils.dd_tracing" -> "litellm" [];
	"litellm.types.proxy.guardrails.guardrail_hooks.presidio" -> "litellm" [];
	"litellm.types.integrations.gcs_bucket" -> "litellm" [];
	"litellm.types.integrations.slack_alerting" -> "litellm" [];
	"litellm.router_utils.pre_call_checks.responses_api_deployment_check" -> "litellm" [];
	"litellm.router_utils.add_retry_fallback_headers" -> "litellm" [];
	"litellm.router_strategy.least_busy" -> "litellm" [];
	"litellm.proxy.utils" -> "email" [];
	"litellm.proxy.auth.rds_iam_token" -> "litellm" [];
	"litellm.integrations.SlackAlerting.utils" -> "litellm" [];
	"litellm.types.proxy.management_endpoints.ui_sso" -> "litellm" [];
	"litellm.llms.gemini.cost_calculator" -> "litellm" [];
	"litellm.llms.deepseek.cost_calculator" -> "litellm" [];
	"litellm.llms.anthropic.cost_calculation" -> "litellm" [];
	"litellm.proxy.response_api_endpoints.endpoints" -> "litellm" [];
	"litellm.llms.vertex_ai.image_generation.image_generation_handler" -> "openai" [];
	"litellm.llms.cohere.common_utils" -> "litellm" [];
	"litellm.litellm_core_utils.prompt_templates.factory" -> "xml" [];
	"litellm.proxy.auth.auth_checks_organization" -> "litellm" [];
	"litellm.proxy.openai_files_endpoints.common_utils" -> "litellm" [];
	"litellm.proxy.management_endpoints.sso_helper_utils" -> "litellm" [];
	"litellm.proxy.common_utils.admin_ui_utils" -> "litellm" [];
	"litellm.proxy.common_utils.timezone_utils" -> "litellm" [];
	"litellm.types.proxy.management_endpoints.team_endpoints" -> "litellm" [];
	"litellm.proxy.management_endpoints.scim.scim_transformations" -> "litellm" [];
	"litellm.types.enterprise.enterprise_callbacks.send_emails" -> "litellm" [];
	"litellm.types.proxy.management_endpoints.internal_user_endpoints" -> "litellm" [];
	"litellm.proxy.management_endpoints.common_utils" -> "litellm" [];
	"litellm.proxy.management_endpoints.budget_management_endpoints" -> "litellm" [];
	"litellm.proxy.db.exception_handler" -> "litellm" [];
	"litellm.proxy.common_utils.proxy_state" -> "litellm" [];
	"litellm.llms.watsonx.chat.handler" -> "litellm" [];
	"litellm.llms.sagemaker.completion.transformation" -> "http" [];
	"litellm.llms.sagemaker.chat.transformation" -> "litellm" [];
	"litellm.llms.openai_like.chat.transformation" -> "litellm" [];
	"litellm.llms.openai.completion.transformation" -> "litellm" [];
	"litellm.llms.oobabooga.chat.transformation" -> "litellm" [];
	"litellm.llms.groq.chat.handler" -> "http" [];
	"litellm.llms.groq.chat.transformation" -> "litellm" [];
	"litellm.llms.bedrock.embed.amazon_titan_v2_transformation" -> "litellm" [];
	"litellm.llms.bedrock.embed.amazon_titan_g1_transformation" -> "litellm" [];
	"litellm.llms.azure.chat.o_series_handler" -> "litellm" [];
	"litellm.llms.maritalk" -> "http" [];
	"litellm.llms.openai.realtime.handler" -> "litellm" [];
	"litellm.llms.azure.realtime.handler" -> "litellm" [];
	"litellm.litellm_core_utils.mock_functions" -> "litellm" [];
	"litellm.llms.vertex_ai.batches.transformation" -> "litellm" [];
	"litellm.llms.azure.batches.handler" -> "litellm" [];
	"litellm.proxy.analytics_endpoints.analytics_endpoints" -> "litellm" [];
	"litellm.integrations.SlackAlerting.budget_alert_types" -> "litellm" [];
	"litellm.integrations.langtrace" -> "litellm" [];
	"litellm.litellm_core_utils.prompt_templates.common_utils" -> "litellm" [];
	"litellm.llms.vertex_ai.files.transformation" -> "litellm" [];
	"litellm.litellm_core_utils.initialize_dynamic_callback_params" -> "litellm" [];
	"litellm.integrations.langfuse.langfuse_prompt_management" -> "litellm" [];
	"litellm.integrations.prompt_management_base" -> "litellm" [];
	"litellm.integrations.langfuse.langfuse_handler" -> "litellm" [];
	"litellm.integrations.custom_prompt_management" -> "litellm" [];
	"litellm.litellm_core_utils.model_param_helper" -> "openai" [];
	"litellm.integrations.arize.arize" -> "litellm" [];
	"litellm.integrations.anthropic_cache_control_hook" -> "litellm" [];
	"litellm.integrations.agentops.agentops" -> "litellm" [];
	"litellm.proxy._types" -> "litellm" [];
	"litellm.llms.base_llm.responses.transformation" -> "litellm" [];
	"litellm.llms.base_llm.rerank.transformation" -> "litellm" [];
	"litellm.llms.base_llm.realtime.transformation" -> "litellm" [];
	"litellm.llms.base_llm.image_variations.transformation" -> "litellm" [];
	"litellm.llms.base_llm.image_generation.transformation" -> "litellm" [];
	"litellm.llms.base_llm.embedding.transformation" -> "litellm" [];
	"litellm.llms.base_llm.completion.transformation" -> "litellm" [];
	"litellm.llms.base_llm.audio_transcription.transformation" -> "litellm" [];
	"litellm.llms.base_llm.anthropic_messages.transformation" -> "litellm" [];
	"litellm.litellm_core_utils.llm_response_utils.response_metadata" -> "litellm" [];
	"litellm.integrations.vector_stores.base_vector_store" -> "litellm" [];
	"litellm.integrations.custom_logger" -> "litellm" [];
	"litellm.litellm_core_utils.audio_utils.utils" -> "litellm" [];
	"litellm.types.llms.custom_llm" -> "litellm" [];
	"litellm.types.adapter" -> "litellm" [];
	"litellm.rerank_api.rerank_utils" -> "litellm" [];
	"litellm.llms.together_ai.rerank.transformation" -> "litellm" [];
	"litellm.llms.bedrock.rerank.transformation" -> "litellm" [];
	"litellm.llms.watsonx.embed.transformation" -> "litellm" [];
	"litellm.llms.perplexity.chat.transformation" -> "litellm" [];
	"litellm.llms.nscale.chat.transformation" -> "litellm" [];
	"litellm.llms.lm_studio.chat.transformation" -> "litellm" [];
	"litellm.llms.deepseek.chat.transformation" -> "litellm" [];
	"litellm.llms.llamafile.chat.transformation" -> "litellm" [];
	"litellm.llms.azure.chat.gpt_transformation" -> "http" [];
	"litellm.llms.fireworks_ai.common_utils" -> "litellm" [];
	"litellm.llms.openai.transcriptions.gpt_transformation" -> "litellm" [];
	"litellm.llms.openai.transcriptions.whisper_transformation" -> "litellm" [];
	"litellm.llms.mistral.mistral_chat_transformation" -> "litellm" [];
	"litellm.llms.infinity.embedding.transformation" -> "litellm" [];
	"litellm.llms.voyage.embedding.transformation" -> "litellm" [];
	"litellm.llms.topaz.image_variations.transformation" -> "litellm" [];
	"litellm.llms.topaz.common_utils" -> "litellm" [];
	"litellm.llms.deepgram.audio_transcription.transformation" -> "litellm" [];
	"litellm.llms.openai.image_variations.transformation" -> "litellm" [];
	"litellm.llms.bedrock.image.amazon_nova_canvas_transformation" -> "openai" [];
	"litellm.llms.bedrock.image.amazon_nova_canvas_transformation" -> "litellm" [];
	"litellm.llms.bedrock.image.amazon_stability3_transformation" -> "openai" [];
	"litellm.llms.bedrock.image.amazon_stability3_transformation" -> "litellm" [];
	"litellm.llms.bedrock.image.amazon_stability1_transformation" -> "openai" [];
	"litellm.llms.bedrock.image.amazon_stability1_transformation" -> "litellm" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_mistral_transformation" -> "litellm" [];
	"litellm.llms.bedrock.chat.invoke_transformations.anthropic_claude3_transformation" -> "litellm" [];
	"litellm.llms.ollama.completion.transformation" -> "http" [];
	"litellm.llms.vertex_ai.vertex_ai_partner_models.llama3.transformation" -> "litellm" [];
	"litellm.llms.vertex_ai.vertex_embeddings.transformation" -> "litellm" [];
	"litellm.llms.bedrock.messages.invoke_transformations.anthropic_claude3_transformation" -> "litellm" [];
	"litellm.llms.anthropic.experimental_pass_through.messages.transformation" -> "litellm" [];
	"litellm.llms.jina_ai.rerank.transformation" -> "litellm" [];
	"litellm.llms.cohere.rerank_v2.transformation" -> "litellm" [];
	"litellm.llms.snowflake.chat.transformation" -> "litellm" [];
	"litellm.llms.triton.embedding.transformation" -> "litellm" [];
	"litellm.llms.openrouter.chat.transformation" -> "litellm" [];
	"litellm.llms.huggingface.chat.transformation" -> "litellm" [];
	"litellm.llms.aiohttp_openai.chat.transformation" -> "litellm" [];
	"langchain_community.chat_models.konko" -> "langchain_community" [];
	"langchain_community.chat_models.human" -> "langchain_community" [];
	"langchain_community.chat_models.huggingface" -> "langchain_community" [];
	"langchain_community.chat_models.gpt_router" -> "langchain_community" [];
	"langchain_community.chat_models.google_palm" -> "google" [];
	"langchain_community.chat_models.gigachat" -> "langchain_community" [];
	"langchain_community.chat_models.friendli" -> "langchain_community" [];
	"langchain_community.chat_models.fireworks" -> "langchain_community" [];
	"langchain_community.chat_models.everlyai" -> "langchain_community" [];
	"langchain_community.chat_models.deepinfra" -> "langchain_community" [];
	"langchain_community.chat_models.cohere" -> "langchain_community" [];
	"langchain_community.chat_models.bedrock" -> "langchain_community" [];
	"langchain_community.llms.bedrock" -> "langchain_community" [];
	"langchain_community.chat_models.azure_openai" -> "langchain_community" [];
	"langchain_community.chat_models.anyscale" -> "langchain_community" [];
	"langchain_community.chat_models.anthropic" -> "langchain_community" [];
	"langchain_community.tools.polygon.ticker_news" -> "langchain_community" [];
	"langchain_community.tools.polygon.last_quote" -> "langchain_community" [];
	"langchain_community.tools.polygon.financials" -> "langchain_community" [];
	"langchain_community.tools.polygon.aggregates" -> "langchain_community" [];
	"langchain_community.tools.openweathermap.tool" -> "langchain_community" [];
	"langchain_community.tools.openapi.utils.openapi_utils" -> "langchain_community" [];
	"langchain_community.tools.nasa.tool" -> "langchain_community" [];
	"langchain_community.tools.mojeek_search.tool" -> "langchain_community" [];
	"langchain_community.tools.metaphor_search.tool" -> "langchain_community" [];
	"langchain_community.tools.merriam_webster.tool" -> "langchain_community" [];
	"langchain_community.tools.jira.tool" -> "langchain_community" [];
	"langchain_community.tools.jina_search.tool" -> "langchain_community" [];
	"langchain_community.tools.graphql.tool" -> "langchain_community" [];
	"langchain_community.tools.google_serper.tool" -> "langchain_community" [];
	"langchain_community.tools.google_search.tool" -> "langchain_community" [];
	"langchain_community.tools.google_places.tool" -> "langchain_community" [];
	"langchain_community.tools.google_cloud.texttospeech" -> "langchain_community" [];
	"langchain_community.tools.google_books" -> "langchain_community" [];
	"langchain_community.tools.gmail.utils" -> "google" [];
	"langchain_community.tools.gmail.send_message" -> "email" [];
	"langchain_community.tools.financial_datasets.income_statements" -> "langchain_community" [];
	"langchain_community.tools.financial_datasets.cash_flow_statements" -> "langchain_community" [];
	"langchain_community.tools.financial_datasets.balance_sheets" -> "langchain_community" [];
	"langchain_community.tools.ddg_search.tool" -> "langchain_community" [];
	"langchain_community.tools.dataherald.tool" -> "langchain_community" [];
	"langchain_community.tools.convert_to_openai" -> "langchain_core" [];
	"langchain_community.tools.connery.service" -> "langchain_core" [];
	"langchain_community.tools.cassandra_database.tool" -> "langchain_community" [];
	"langchain_community.tools.brave_search.tool" -> "langchain_community" [];
	"langchain_community.tools.bing_search.tool" -> "langchain_community" [];
	"langchain_community.tools.asknews.tool" -> "langchain_community" [];
	"langchain_community.tools.arxiv.tool" -> "langchain_community" [];
	"langchain_community.document_transformers.google_translate" -> "langchain_community" [];
	"langchain_community.document_transformers.embeddings_redundant_filter" -> "langchain_community" [];
	"langchain_community.document_loaders.youtube" -> "xml" [];
	"langchain_community.document_loaders.wikipedia" -> "langchain_community" [];
	"langchain_community.document_loaders.weather" -> "langchain_community" [];
	"langchain_community.document_loaders.vsdx" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.vsdx" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.pdf" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.language.language_parser" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.images" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.html.bs4" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.grobid" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.docai" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.doc_intelligence" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.audio" -> "langchain_community" [];
	"langchain_community.document_loaders.tensorflow_datasets" -> "langchain_community" [];
	"langchain_community.document_loaders.sql_database" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.registry" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.txt" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.msword" -> "langchain_community" [];
	"langchain_community.document_loaders.parsers.generic" -> "langchain_community" [];
	"langchain_community.document_loaders.blob_loaders.schema" -> "langchain_core" [];
	"pydantic_settings.sources.providers.dotenv" -> "pydantic" [];
	"langchain_community.document_loaders.pubmed" -> "langchain_community" [];
	"langchain_community.document_loaders.pebblo" -> "langchain_community" [];
	"langchain_community.document_loaders.max_compute" -> "langchain_community" [];
	"joblib.externals.loky.cloudpickle_wrapper" -> "joblib" [];
	"joblib.externals.loky.backend.context" -> "concurrent" [];
	"datasets.download.streaming_download_manager" -> "datasets" [];
	"datasets.download.download_manager" -> "tqdm" [];
	"datasets.data_files" -> "tqdm" [];
	"datasets.builder" -> "tqdm" [];
	"datasets.arrow_reader" -> "tqdm" [];
	"datasets.arrow_dataset" -> "tqdm" [];
	"langchain_community.document_loaders.google_speech_to_text" -> "langchain_community" [];
	"langchain_community.document_loaders.google_speech_to_text" -> "google" [];
	"git.compat" -> "gitdb" [];
	"langchain_community.document_loaders.gcs_file" -> "langchain_community" [];
	"langchain_community.document_loaders.gcs_directory" -> "langchain_community" [];
	"langchain_community.document_loaders.chromium" -> "langchain_community" [];
	"langchain_community.document_loaders.cassandra" -> "langchain_community" [];
	"langchain_community.document_loaders.brave_search" -> "langchain_community" [];
	"urllib3.contrib.appengine" -> "urllib" [];
	"yt_dlp.utils._deprecated" -> "yt_dlp" [];
	"yt_dlp.compat" -> "xml" [];
	"yt_dlp.compat.urllib.request" -> "yt_dlp" [];
	"yt_dlp.dependencies.Cryptodome" -> "yt_dlp" [];
	"yt_dlp.networking._requests" -> "urllib" [];
	"yt_dlp.utils.traversal" -> "xml" [];
	"yt_dlp.compat._legacy" -> "xml" [];
	"yt_dlp.extractor.generic" -> "xml" [];
	"yt_dlp.extractor.common" -> "xml" [];
	"yt_dlp.utils._utils" -> "xml" [];
	"yt_dlp.extractor.adobepass" -> "xml" [];
	"yt_dlp.extractor.slideslive" -> "xml" [];
	"yt_dlp.extractor.roya" -> "yt_dlp" [];
	"yt_dlp.extractor.nbc" -> "xml" [];
	"yt_dlp.extractor.mtv" -> "xml" [];
	"yt_dlp.extractor.hytale" -> "yt_dlp" [];
	"yt_dlp.extractor.brightcove" -> "xml" [];
	"yt_dlp.extractor.bbc" -> "xml" [];
	"yt_dlp.extractor.azmedien" -> "yt_dlp" [];
	"langchain_community.document_loaders.bigquery" -> "langchain_community" [];
	"langchain_community.document_loaders.bibtex" -> "langchain_community" [];
	"langchain_community.document_loaders.azure_ai_data" -> "langchain_community" [];
	"langchain_community.document_loaders.async_html" -> "langchain_community" [];
	"langchain_community.document_loaders.astradb" -> "langchain_community" [];
	"langchain_community.document_loaders.arxiv" -> "langchain_community" [];
	"defusedxml.ElementTree" -> "xml" [];
	"defusedxml.common" -> "xml" [];
	"defusedxml.minidom" -> "xml" [];
	"defusedxml.pulldom" -> "xml" [];
	"defusedxml.expatreader" -> "xml" [];
	"defusedxml.expatbuilder" -> "xml" [];
	"defusedxml.cElementTree" -> "xml" [];
	"langchain_community.retrievers.rememberizer" -> "langchain_community" [];
	"langchain_community.retrievers.qdrant_sparse_vector_retriever" -> "langchain_community" [];
	"langchain_community.retrievers.pubmed" -> "langchain_community" [];
	"langchain_community.retrievers.outline" -> "langchain_community" [];
	"langchain_community.retrievers.milvus" -> "langchain_community" [];
	"langchain_community.retrievers.google_vertex_ai_search" -> "langchain_community" [];
	"langchain_community.retrievers.google_cloud_documentai_warehouse" -> "langchain_community" [];
	"langchain_community.retrievers.docarray" -> "langchain_community" [];
	"langchain_community.retrievers.arxiv" -> "langchain_community" [];
	"langchain_community.retrievers.arcee" -> "langchain_community" [];
	"langchain_community.query_constructors.redis" -> "langchain_community" [];
	"langchain_community.vectorstores.redis.schema" -> "langchain_core" [];
	"langchain_community.vectorstores.redis.filters" -> "langchain_community" [];
	"langchain.retrievers.multi_vector" -> "langchain" [];
	"langchain_community.storage.redis" -> "langchain_community" [];
	"langchain_community.storage.cassandra" -> "langchain_community" [];
	"langchain_community.storage.astradb" -> "langchain_community" [];
	"langchain.retrievers.multi_query" -> "langchain" [];
	"langchain.retrievers.document_compressors.embeddings_filter" -> "langchain_community" [];
	"langchain.retrievers.document_compressors.chain_extract" -> "langchain" [];
	"langchain._api.deprecation" -> "langchain_core" [];
	"langchain.chains.query_constructor.base" -> "langchain" [];
	"langchain_core.example_selectors.length_based" -> "langchain_core" [];
	"langchain_community.vectorstores.scann" -> "langchain_community" [];
	"langchain_community.vectorstores.redis.base" -> "langchain_community" [];
	"langchain_community.vectorstores.qdrant" -> "langchain_community" [];
	"langchain_community.graphs.neptune_rdf_graph" -> "langchain_core" [];
	"langchain_community.graphs.neptune_graph" -> "langchain_core" [];
	"langchain.chains.hyde.base" -> "langchain" [];
	"langchain.chains.hyde.prompts" -> "langchain_core" [];
	"langchain_community.embeddings.vertexai" -> "langchain_community" [];
	"langchain_community.embeddings.vertexai" -> "google" [];
	"langchain_community.embeddings.self_hosted" -> "langchain_community" [];
	"langchain_community.embeddings.sagemaker_endpoint" -> "langchain_community" [];
	"langchain_community.embeddings.openai" -> "langchain_community" [];
	"langchain_community.embeddings.octoai_embeddings" -> "langchain_community" [];
	"langchain_community.embeddings.google_palm" -> "google" [];
	"langchain_community.embeddings.cohere" -> "langchain_community" [];
	"langchain_community.embeddings.azure_openai" -> "langchain_community" [];
	"langchain_community.embeddings.anyscale" -> "langchain_community" [];
	"langchain_community.vectorstores.faiss" -> "langchain_community" [];
	"langchain_community.vectorstores.docarray.base" -> "langchain_community" [];
	"langchain_community.vectorstores.cassandra" -> "langchain_community" [];
	"langchain_community.vectorstores.bigquery_vector_search" -> "langchain_community" [];
	"langchain_community.vectorstores.astradb" -> "langchain_community" [];
	"langchain_community.vectorstores.annoy" -> "langchain_community" [];
	"langchain_community.utilities.infobip" -> "urllib" [];
	"langchain_core.prompts.loading" -> "langchain_core" [];
	"langchain_community.llms" -> "langchain_core" [];
	"langchain_community.llms.weight_only_quantization" -> "langchain_core" [];
	"langchain_community.llms.vllm" -> "langchain_community" [];
	"langchain_community.llms.openllm" -> "langchain_community" [];
	"langchain_community.llms.octoai_endpoint" -> "langchain_community" [];
	"langchain_community.llms.google_palm" -> "langchain_community" [];
	"langchain_community.llms.deepinfra" -> "langchain_community" [];
	"langchain_community.llms.bigdl_llm" -> "langchain_core" [];
	"langchain_community.llms.arcee" -> "langchain_community" [];
	"langchain_community.llms.anyscale" -> "langchain_community" [];
	"langchain.agents" -> "langchain_community" [];
	"langchain_community.agent_toolkits.sql.base" -> "langchain_community" [];
	"langchain_community.agent_toolkits.zapier.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.steam.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.spark_sql.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.powerbi.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.powerbi.toolkit" -> "langchain" [];
	"langchain_community.agent_toolkits.polygon.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.openapi.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.nla.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.nla.tool" -> "langchain_community" [];
	"langchain_community.chains.openapi.chain" -> "langchain" [];
	"langchain_community.chains.openapi.chain" -> "langchain_community" [];
	"langchain_community.chains.pebblo_retrieval.base" -> "langchain" [];
	"langchain_community.chains.openapi.response_chain" -> "langchain" [];
	"langchain_community.chains.openapi.requests_chain" -> "langchain" [];
	"langchain_community.agent_toolkits.nasa.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.jira.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.connery.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.cassandra_database.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.azure_cognitive_services" -> "langchain_community" [];
	"langchain_community.agent_toolkits.azure_ai_services" -> "langchain_community" [];
	"langchain_community.agent_toolkits.sql.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.spark_sql.base" -> "langchain" [];
	"langchain_community.agent_toolkits.powerbi.chat_base" -> "langchain_community" [];
	"langchain_community.memory.motorhead_memory" -> "langchain" [];
	"langchain_community.memory.kg" -> "langchain" [];
	"langchain.memory.prompt" -> "langchain_core" [];
	"streamlit.runtime.stats" -> "streamlit" [];
	"streamlit.runtime.session_manager" -> "streamlit" [];
	"streamlit.runtime.app_session" -> "google" [];
	"streamlit.runtime.forward_msg_queue" -> "streamlit" [];
	"streamlit.runtime.forward_msg_queue" -> "google" [];
	"streamlit.runtime.caching.cached_message_replay" -> "google" [];
	"streamlit.elements.lib.utils" -> "google" [];
	"streamlit.elements.lib.column_types" -> "streamlit" [];
	"streamlit.runtime.state.widgets" -> "streamlit" [];
	"streamlit.runtime.state.safe_session_state" -> "streamlit" [];
	"streamlit.runtime.state.query_params_proxy" -> "streamlit" [];
	"streamlit.runtime.caching" -> "google" [];
	"streamlit.runtime.caching" -> "streamlit" [];
	"streamlit.delta_generator" -> "google" [];
	"altair.vegalite.v5" -> "altair" [];
	"altair.vegalite.display" -> "altair" [];
	"altair.utils.schemapi" -> "narwhals" [];
	"narwhals._pandas_like.series_struct" -> "narwhals" [];
	"narwhals._pandas_like.series_str" -> "narwhals" [];
	"narwhals._pandas_like.series_list" -> "narwhals" [];
	"narwhals._pandas_like.series_cat" -> "narwhals" [];
	"altair.vegalite.data" -> "altair" [];
	"altair.utils.data" -> "narwhals" [];
	"altair.utils.core" -> "narwhals" [];
	"altair.utils.core" -> "IPython" [];
	"altair.vegalite.v5.schema.channels" -> "narwhals" [];
	"altair.vegalite.v5.data" -> "altair" [];
	"altair.vegalite.v5.compiler" -> "altair" [];
	"altair.vegalite.v5.api" -> "narwhals" [];
	"altair.vegalite.v5.theme" -> "altair" [];
	"pydeck.bindings.json_tools" -> "pydeck" [];
	"pydeck.data_utils.viewport_helpers" -> "pydeck" [];
	"pydeck.widget.widget" -> "pydeck" [];
	"langchain_community.chat_message_histories.redis" -> "langchain_community" [];
	"langchain_community.chat_message_histories.cassandra" -> "langchain_community" [];
	"langchain_community.chat_message_histories.astradb" -> "langchain_community" [];
	"langchain.memory.summary" -> "langchain" [];
	"langchain.memory.entity" -> "langchain" [];
	"langchain.memory.entity" -> "langchain_community" [];
	"langchain_community.agent_toolkits.powerbi.base" -> "langchain_community" [];
	"langchain_community.agent_toolkits.openapi.base" -> "langchain" [];
	"langchain_community.agent_toolkits.load_tools" -> "langchain_community" [];
	"langchain_community.agent_toolkits.load_tools" -> "langchain" [];
	"langchain.chains.api.base" -> "langchain" [];
	"langchain.chains.api.base" -> "langchain_community" [];
	"langchain.chains.api.prompt" -> "langchain_core" [];
	"langchain.chains.llm_math.base" -> "langchain" [];
	"langchain.chains.llm_math.prompt" -> "langchain_core" [];
	"langchain_community.utilities.dalle_image_generator" -> "langchain_community" [];
	"langchain_community.tools.memorize.tool" -> "langchain_community" [];
	"langchain_community.tools.google_trends.tool" -> "langchain_community" [];
	"langchain_community.tools.google_scholar.tool" -> "langchain_community" [];
	"langchain_community.tools.google_lens.tool" -> "langchain_community" [];
	"langchain_community.tools.google_jobs.tool" -> "langchain_community" [];
	"langchain_community.tools.google_finance.tool" -> "langchain_community" [];
	"langchain_community.tools.golden_query.tool" -> "langchain_community" [];
	"langchain_community.tools.dataforseo_api_search.tool" -> "langchain_community" [];
	"langchain_community.agent_toolkits.json.base" -> "langchain" [];
	"langchain.agents.xml.base" -> "langchain" [];
	"langchain.agents.output_parsers.tools" -> "langchain" [];
	"langchain.agents.output_parsers.self_ask" -> "langchain" [];
	"langchain.agents.output_parsers.react_single_input" -> "langchain" [];
	"langchain.agents.output_parsers.react_json_single_input" -> "langchain" [];
	"langchain.agents.output_parsers.openai_functions" -> "langchain" [];
	"langchain.agents.output_parsers.json" -> "langchain" [];
	"langchain.agents.structured_chat.base" -> "langchain" [];
	"langchain.agents.self_ask_with_search.base" -> "langchain" [];
	"langchain.agents.self_ask_with_search.base" -> "langchain_community" [];
	"langchain.agents.self_ask_with_search.prompt" -> "langchain_core" [];
	"langchain.agents.react.base" -> "langchain" [];
	"langchain.agents.react.base" -> "langchain_community" [];
	"langchain.agents.react.wiki_prompt" -> "langchain_core" [];
	"langchain.agents.react.textworld_prompt" -> "langchain_core" [];
	"langchain.agents.react.output_parser" -> "langchain" [];
	"langchain.agents.output_parsers.openai_tools" -> "langchain" [];
	"langchain.agents.mrkl.output_parser" -> "langchain" [];
	"langchain.agents.loading" -> "langchain" [];
	"langchain.chains.loading" -> "langchain_community" [];
	"langchain_community.llms.loading" -> "langchain_core" [];
	"langchain.chains.llm_requests" -> "langchain_community" [];
	"langchain_community.chains.llm_requests" -> "langchain_community" [];
	"langchain_community.chains.graph_qa.cypher" -> "langchain" [];
	"langchain_community.chains.graph_qa.cypher" -> "langchain_community" [];
	"langchain_community.chains.graph_qa.prompts" -> "langchain_core" [];
	"langchain_community.chains.graph_qa.cypher_utils" -> "langchain_core" [];
	"langchain.chains.llm_checker.base" -> "langchain" [];
	"langchain.chains.llm_checker.prompt" -> "langchain_core" [];
	"langchain.agents.chat.base" -> "langchain" [];
	"langchain.agents.chat.output_parser" -> "langchain" [];
	"langchain.agents.json_chat.base" -> "langchain" [];
	"langchain.agents.initialize" -> "langchain" [];
	"langchain.agents.conversational.output_parser" -> "langchain" [];
	"langchain.agents.agent_types" -> "langchain" [];
	"langchain.agents.agent_toolkits.vectorstore.base" -> "langchain" [];
	"langchain.agents.agent_toolkits" -> "langchain_core" [];
	"langchain.agents.agent_toolkits" -> "langchain_community" [];
	"langchain.agents.agent_toolkits.conversational_retrieval.openai_functions" -> "langchain" [];
	"langchain.agents.openai_functions_agent.agent_token_buffer_memory" -> "langchain" [];
	"langchain.agents.agent" -> "langchain" [];
	"langchain.evaluation.schema" -> "langchain" [];
	"langchain.evaluation.scoring.prompt" -> "langchain_core" [];
	"langchain.evaluation.regex_match.base" -> "langchain" [];
	"langchain.evaluation.qa.generate_chain" -> "langchain" [];
	"langchain.evaluation.qa.generate_prompt" -> "langchain" [];
	"langchain.evaluation.parsing.json_schema" -> "langchain_core" [];
	"langchain.evaluation.parsing.json_schema" -> "langchain" [];
	"langchain.evaluation.parsing.json_distance" -> "langchain_core" [];
	"langchain.evaluation.parsing.json_distance" -> "langchain" [];
	"langchain.evaluation.parsing.base" -> "langchain_core" [];
	"langchain.evaluation.parsing.base" -> "langchain" [];
	"langchain.evaluation.loading" -> "langchain" [];
	"langchain.evaluation.loading" -> "langchain_community" [];
	"langchain.evaluation.embedding_distance.base" -> "langchain_community" [];
	"langchain.evaluation.comparison.prompt" -> "langchain_core" [];
	"langchain.evaluation.agents.trajectory_eval_chain" -> "langchain" [];
	"langchain.evaluation.exact_match.base" -> "langchain" [];
	"langchain.smith.evaluation.config" -> "langchain" [];
	"langchain_core.runnables.passthrough" -> "langchain_core" [];
	"langchain_core.tracers.root_listeners" -> "langchain_core" [];
	"langchain_core.runnables.retry" -> "langchain_core" [];
	"langchain_core.runnables.fallbacks" -> "langchain_core" [];
	"langchain_core.runnables.utils" -> "langchain_core" [];
	"langchain_core.runnables.graph" -> "langchain_core" [];
	"langchain_core.runnables.config" -> "langchain_core" [];
	"langchain_core.messages.tool" -> "langchain_core" [];
	"langchain_core.messages.function" -> "langchain_core" [];
	"langchain_core.messages.chat" -> "langchain_core" [];
	"langchain_core.messages.ai" -> "langchain_core" [];
	"langchain_google_genai.google_vector_store" -> "google" [];
	"langchain_google_genai.genai_aqa" -> "google" [];
	"langchain_google_genai._function_utils" -> "google" [];
	"langchain_google_genai._enums" -> "google" [];
	"dotenv.ipython" -> "IPython" [];
	"PIL.Image" -> "xml" [];
	"kivy.input.providers.mactouch" -> "kivy" [];
	"kivy.input.providers.wm_pen" -> "kivy" [];
	"kivy.input.providers.wm_touch" -> "kivy" [];
	"kivy" -> "xml" [];
	"kivy.core.video.video_ffmpeg" -> "kivy" [];
	"docutils.nodes" -> "xml" [];
	"docutils.utils.math.mathml_elements" -> "xml" [];
	"docutils.writers.docutils_xml" -> "xml" [];
	"docutils.writers._html_base" -> "xml" [];
	"urllib3.packages.six.moves" -> "urllib" [];
	"jedi.api.refactoring" -> "jedi" [];
	"pandas.core.arrays.floating" -> "pandas" [];
	"pandas.core.arrays.integer" -> "pandas" [];
	"google.auth.transport.requests" -> "urllib" [];
	"pandas._libs.sas" -> "pandas" [];
	"pandas.api.interchange" -> "pandas" [];
	"pandas.tseries.offsets" -> "pandas" [];
	"pandas.tseries.api" -> "pandas" [];
	"langchain_community.vectorstores.tencentvectordb" -> "langchain" [];
	"langchain_community.document_transformers.nuclia_text_transform" -> "langchain_community" [];
	"langchain_community.tools.vectorstore.tool" -> "langchain" [];
	"langchain.chains.qa_with_sources.retrieval" -> "langchain" [];
	"openai.types.shared_params.responses_model" -> "openai" [];
	"openai.types.shared_params.reasoning" -> "openai" [];
	"openai.types.fine_tuning.job_create_params" -> "openai" [];
	"openai.types.chat.chat_completion_reasoning_effort" -> "openai" [];
	"openai.types.chat.chat_completion_tool_param" -> "openai" [];
	"openai.types.chat.completion_update_params" -> "openai" [];
	"openai.types.chat.completion_create_params" -> "openai" [];
	"openai.types.chat.completion_list_params" -> "openai" [];
	"openai.types.responses.response_format_text_config_param" -> "openai" [];
	"openai.types.responses.response_create_params" -> "openai" [];
	"openai.types.responses.file_search_tool_param" -> "openai" [];
	"openai.types.responses.tool_param" -> "openai" [];
	"openai.types.evals.run_create_params" -> "openai" [];
	"openai.types.evals.create_eval_completions_run_data_source_param" -> "openai" [];
	"openai.types.beta.assistant_response_format_option_param" -> "openai" [];
	"openai.types.beta.function_tool_param" -> "openai" [];
	"openai.types.beta.assistant_response_format_option" -> "openai" [];
	"openai.types.beta.assistant_update_params" -> "openai" [];
	"openai.types.beta.assistant_create_params" -> "openai" [];
	"openai.types.beta.thread_create_and_run_params" -> "openai" [];
	"openai.types.beta.threads.message_update_params" -> "openai" [];
	"openai.types.beta.threads.message_create_params" -> "openai" [];
	"openai.types.beta.threads.run_update_params" -> "openai" [];
	"openai.types.beta.threads.run_create_params" -> "openai" [];
	"openai.types.beta.thread_update_params" -> "openai" [];
	"openai.types.beta.thread_create_params" -> "openai" [];
	"openai.types.beta.realtime.response_create_event_param" -> "openai" [];
	"langchain_community.utilities.steam" -> "langchain_community" [];
	"langchain_community.chat_models.openai" -> "langchain" [];
	"litellm.responses.litellm_completion_transformation.transformation" -> "openai" [];
	"litellm.types.responses.main" -> "litellm" [];
	"litellm.types.proxy.guardrails.guardrail_hooks.lakera_ai_v2" -> "litellm" [];
	"litellm.router_utils.batch_utils" -> "litellm" [];
	"litellm.types.passthrough_endpoints.vertex_ai" -> "litellm" [];
	"litellm.integrations.additional_logging_utils" -> "litellm" [];
	"litellm.llms.openai.completion.utils" -> "litellm" [];
	"litellm.llms.bedrock.embed.cohere_transformation" -> "litellm" [];
	"litellm.llms.azure.image_generation.gpt_transformation" -> "litellm" [];
	"litellm.llms.azure.image_generation.dall_e_3_transformation" -> "litellm" [];
	"litellm.llms.azure.image_generation.dall_e_2_transformation" -> "litellm" [];
	"litellm.llms.openai.image_generation.gpt_transformation" -> "litellm" [];
	"litellm.llms.openai.image_generation.dall_e_3_transformation" -> "litellm" [];
	"litellm.llms.openai.image_generation.dall_e_2_transformation" -> "litellm" [];
	"litellm.types.integrations.anthropic_cache_control_hook" -> "litellm" [];
	"litellm.types.llms.openai" -> "litellm" [];
	"litellm.llms.vertex_ai.fine_tuning.handler" -> "openai" [];
	"litellm.types.fine_tuning" -> "openai" [];
	"litellm.llms.azure.fine_tuning.handler" -> "litellm" [];
	"litellm.llms.anthropic.experimental_pass_through.messages.utils" -> "litellm" [];
	"litellm.llms.azure.assistants" -> "litellm" [];
	"litellm.llms.fireworks_ai.audio_transcription.transformation" -> "litellm" [];
	"litellm.llms.fireworks_ai.completion.transformation" -> "litellm" [];
	"litellm.llms.novita.chat.transformation" -> "litellm" [];
	"litellm.llms.together_ai.completion.transformation" -> "litellm" [];
	"langchain_community.tools.interaction.tool" -> "langchain_community" [];
	"urllib3.contrib._securetransport.bindings" -> "urllib" [];
	"langchain.retrievers.self_query.base" -> "langchain" [];
	"langchain_community.embeddings" -> "langchain" [];
	"langchain_community.utils.google" -> "google" [];
	"langchain_community.agent_toolkits.slack.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.playwright.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.office365.toolkit" -> "langchain_community" [];
	"langchain.chains.api.openapi.response_chain" -> "langchain_community" [];
	"langchain.chains.api.openapi.prompts" -> "langchain_community" [];
	"langchain.chains.api.openapi.requests_chain" -> "langchain_community" [];
	"langchain_community.agent_toolkits.multion.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.json.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.gmail.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.file_management.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.cogniswitch.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.amadeus.toolkit" -> "langchain_community" [];
	"langchain_community.agent_toolkits.ainetwork.toolkit" -> "langchain_community" [];
	"altair._magics" -> "narwhals" [];
	"altair.utils.display" -> "altair" [];
	"altair.utils._vegafusion_data" -> "narwhals" [];
	"altair.utils.core" -> "altair" [];
	"altair.utils.save" -> "altair" [];
	"langchain.agents.format_scratchpad.tools" -> "langchain" [];
	"langchain.agents.tool_calling_agent.base" -> "langchain" [];
	"langchain.agents.self_ask_with_search.output_parser" -> "langchain" [];
	"langchain.agents.openai_tools.base" -> "langchain" [];
	"langchain.chains.qa_with_sources.vector_db" -> "langchain" [];
	"langchain.agents.agent_toolkits.vectorstore.toolkit" -> "langchain_community" [];
	"langchain_core.runnables.branch" -> "langchain_core" [];
	"langchain_google_genai._common" -> "google" [];
	"langchain_google_genai.embeddings" -> "google" [];
	"langchain_google_genai._image_utils" -> "google" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_llama_transformation" -> "litellm" [];
	"litellm.llms.replicate.common_utils" -> "litellm" [];
	"litellm.llms.predibase.common_utils" -> "litellm" [];
	"litellm.llms.petals.common_utils" -> "litellm" [];
	"litellm.llms.oobabooga.common_utils" -> "litellm" [];
	"litellm.llms.nlp_cloud.common_utils" -> "litellm" [];
	"litellm.llms.huggingface.common_utils" -> "litellm" [];
	"litellm.llms.databricks.common_utils" -> "litellm" [];
	"litellm.llms.openai.image_generation" -> "litellm" [];
	"litellm.anthropic_interface.messages" -> "litellm" [];
	"litellm.llms.vllm.completion.transformation" -> "litellm" [];
	"litellm.llms.azure.completion.transformation" -> "litellm" [];
	"litellm.llms.friendliai.chat.transformation" -> "litellm" [];
	"litellm.llms.cerebras.chat" -> "litellm" [];
	"litellm.llms.nvidia_nim.chat.transformation" -> "litellm" [];
	"litellm.llms.infinity.common_utils" -> "litellm" [];
	"litellm.llms.deepgram.common_utils" -> "litellm" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_cohere_transformation" -> "litellm" [];
	"litellm.llms.bedrock.chat.invoke_transformations.amazon_ai21_transformation" -> "litellm" [];
	"litellm.llms.ollama.common_utils" -> "litellm" [];
	"litellm.llms.ai21.chat.transformation" -> "litellm" [];
	"litellm.llms.clarifai.common_utils" -> "litellm" [];
	"litellm.llms.triton.common_utils" -> "litellm" [];
	"litellm.llms.openrouter.common_utils" -> "litellm" [];
	"litellm.llms.empower.chat.transformation" -> "litellm" [];
	"litellm.llms.github.chat.transformation" -> "litellm" [];
	"litellm.llms.galadriel.chat.transformation" -> "litellm" [];
}
